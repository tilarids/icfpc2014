LDC    1            ;  <== entryPoint  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 0
LDC    0            ; just constant from code ; 1
CEQ                  ; 2
SEL    5 13         ; IF? 1 ; 3
RTN                  ; 4
LD     0 0          ; THEN: 1 ; 5
LD     0 1          ; var ghostSpecs ; 6
LDC 0               ; local var space ; 7
LDC 0               ; local var space ; 8
LDC 0               ; local var space ; 9
LDF    2452         ;  @entryFactual ; 10
AP     5             ; 11
JOIN                 ; 12
LDC 0               ; ELSE: 1 ; 13
LDC 0               ; local var space ; 14
LDC 0               ; local var space ; 15
LDC 0               ; local var space ; 16
LDC 0               ; local var space ; 17
LDF    2416         ;  @entryCPUEmulator ; 18
AP     5             ; 19
JOIN                 ; 20
LD     0 0          ;  <== mydebug  [T o] (as blk) ; 21
DBUG                 ; 22
LD     0 0          ; var o ; 23
RTN                  ; 24
LD     0 0          ;  <== mydebugv  [Object tag, T o] (as blk) ; 25
DBUG                 ; 26
LD     0 1          ; var o ; 27
DBUG                 ; 28
LD     0 1          ; var o ; 29
RTN                  ; 30
LD     0 2          ;  <== foldl  [Function2<A,B,A> f, A a, ListCons<B> l] (as blk) ; 31
ATOM                 ; 32
SEL    35 37        ; IF? 2 ; 33
RTN                  ; 34
LD     0 1          ; THEN: 2 ; 35
JOIN                 ; 36
LD     0 0          ; ELSE: 2 ; 37
LD     0 1          ; var a ; 38
LD     0 2          ; var l ; 39
CAR                  ; 40
LD     0 0          ; var f ; 41
AP     2             ; 42
LD     0 2          ; var l ; 43
CDR                  ; 44
LDF    31           ;  @foldl ; 45
AP     3             ; 46
JOIN                 ; 47
LD     0 2          ;  <== foldr  [Function2<A,B,B> f, B a, ListCons<A> l] (as blk) ; 48
ATOM                 ; 49
SEL    52 54        ; IF? 3 ; 50
RTN                  ; 51
LD     0 1          ; THEN: 3 ; 52
JOIN                 ; 53
LD     0 2          ; ELSE: 3 ; 54
CAR                  ; 55
LD     0 0          ; var f ; 56
LD     0 1          ; var a ; 57
LD     0 2          ; var l ; 58
CDR                  ; 59
LDF    48           ;  @foldr ; 60
AP     3             ; 61
LD     0 0          ; var f ; 62
AP     2             ; 63
JOIN                 ; 64
LDF    9458         ;  <== o  [final Function1<B,C> f, final Function1<A,B> g] (as blk), ALSO: @lambda_1000 ; 65
RTN                  ; 66
LDF    9464         ;  <== flip  [Function2<A,B,C> f] (as blk), ALSO: @lambda_1001 ; 67
RTN                  ; 68
LD     0 0          ;  <== map  [ListCons<T> c, Function1<T,T2> arg] (as blk) ; 69
ATOM                 ; 70
SEL    73 75        ; IF? 4 ; 71
RTN                  ; 72
LDC    0            ; THEN: 4 ; 73
JOIN                 ; 74
LD     0 0          ; ELSE: 4 ; 75
CAR                  ; 76
LD     0 1          ; var arg ; 77
AP     1             ; 78
LD     0 0          ; var c ; 79
CDR                  ; 80
LD     0 1          ; var arg ; 81
LDF    69           ;  @map ; 82
AP     2             ; 83
CONS                 ; 84
JOIN                 ; 85
LD     0 0          ;  <== mapi  [ListCons<D> c, int ix, Function2<D,Integer,D2> arg] (as blk) ; 86
ATOM                 ; 87
SEL    90 92        ; IF? 5 ; 88
RTN                  ; 89
LDC    0            ; THEN: 5 ; 90
JOIN                 ; 91
LD     0 0          ; ELSE: 5 ; 92
CAR                  ; 93
LD     0 1          ; var ix ; 94
LD     0 2          ; var arg ; 95
AP     2             ; 96
LD     0 0          ; var c ; 97
CDR                  ; 98
LD     0 1          ; var ix ; 99
LDC    1            ; just constant from code ; 100
ADD                  ; 101
LD     0 2          ; var arg ; 102
LDF    86           ;  @mapi ; 103
AP     3             ; 104
CONS                 ; 105
JOIN                 ; 106
LD     0 0          ;  <== cat_maybes  [ListCons<Maybe<D>> data] (as blk) ; 107
LDF    9469         ;  @lambda_1002 ; 108
LDF    69           ;  @map ; 109
AP     2             ; 110
ST     0 1           ; 111
LD     0 1          ; var mtl ; 112
LDF    118          ;  @concat ; 113
AP     1             ; 114
ST     0 2           ; 115
LD     0 2          ; var rv ; 116
RTN                  ; 117
LD     0 0          ;  <== concat  [ListCons<ListCons<D>> data] (as blk) ; 118
LDC    0            ; NULL literal ; 119
LDF    149          ;  @concat_acc ; 120
AP     2             ; 121
LDF    299          ;  @reverse ; 122
AP     1             ; 123
RTN                  ; 124
LD     0 0          ;  <== last  [ListCons<D> data] (as blk) ; 125
ATOM                 ; 126
SEL    133 135       ; 127
LD     0 0          ; var data ; 128
CDR                  ; 129
ATOM                 ; 130
SEL    136 139      ; IF? 8 ; 131
RTN                  ; 132
BRK                 ; branch@133 ; 133
JOIN                 ; 134
JOIN                ; branch@135 ; 135
LD     0 0          ; THEN: 8 ; 136
CAR                  ; 137
JOIN                 ; 138
LD     0 0          ; ELSE: 8 ; 139
CDR                  ; 140
LDF    125          ;  @last ; 141
AP     1             ; 142
JOIN                 ; 143
LD     0 0          ;  <== concat_set  [ListCons<ListCons<D>> data] (as blk) ; 144
LDC    0            ; NULL literal ; 145
LDF    149          ;  @concat_acc ; 146
AP     2             ; 147
RTN                  ; 148
LD     0 0          ;  <== concat_acc  [ListCons<ListCons<D>> data, ListCons<D> acc] (as blk) ; 149
ATOM                 ; 150
SEL    153 155      ; IF? 6 ; 151
RTN                  ; 152
LD     0 1          ; THEN: 6 ; 153
JOIN                 ; 154
LD     0 0          ; ELSE: 6 ; 155
CDR                  ; 156
LD     0 0          ; var data ; 157
CAR                  ; 158
LD     0 1          ; var acc ; 159
LDF    165          ;  @concat2 ; 160
AP     2             ; 161
LDF    149          ;  @concat_acc ; 162
AP     2             ; 163
JOIN                 ; 164
LD     0 0          ;  <== concat2  [ListCons<D> data, ListCons<D> data2] (as blk) ; 165
ATOM                 ; 166
SEL    169 171      ; IF? 9 ; 167
RTN                  ; 168
LD     0 1          ; THEN: 9 ; 169
JOIN                 ; 170
LD     0 1          ; ELSE: 9 ; 171
ATOM                 ; 172
SEL    175 177      ; IF? 70 ; 173
JOIN                 ; 174
LD     0 0          ; THEN: 70 ; 175
JOIN                 ; 176
LD     0 0          ; ELSE: 70 ; 177
LDF    299          ;  @reverse ; 178
AP     1             ; 179
LD     0 1          ; var data2 ; 180
LDF    201          ;  @concat2_acc ; 181
AP     2             ; 182
JOIN                 ; 183
LD     0 0          ;  <== concat2_set  [ListCons<D> data, ListCons<D> data2] (as blk) ; 184
ATOM                 ; 185
SEL    188 190      ; IF? 10 ; 186
RTN                  ; 187
LD     0 1          ; THEN: 10 ; 188
JOIN                 ; 189
LD     0 1          ; ELSE: 10 ; 190
ATOM                 ; 191
SEL    194 196      ; IF? 71 ; 192
JOIN                 ; 193
LD     0 0          ; THEN: 71 ; 194
JOIN                 ; 195
LD     0 0          ; ELSE: 71 ; 196
LD     0 1          ; var data2 ; 197
LDF    201          ;  @concat2_acc ; 198
AP     2             ; 199
JOIN                 ; 200
LD     0 0          ;  <== concat2_acc  [ListCons<D> data, ListCons<D> acc] (as blk) ; 201
ATOM                 ; 202
SEL    205 207      ; IF? 11 ; 203
RTN                  ; 204
LD     0 1          ; THEN: 11 ; 205
JOIN                 ; 206
LD     0 0          ; ELSE: 11 ; 207
CDR                  ; 208
LD     0 0          ; var data ; 209
CAR                  ; 210
LD     0 1          ; var acc ; 211
CONS                 ; 212
LDF    201          ;  @concat2_acc ; 213
AP     2             ; 214
JOIN                 ; 215
LDC    0            ;  <== NOTHING  [] (as blk) ; 216
LDC    0            ; NULL literal ; 217
CONS                 ; 218
RTN                  ; 219
LDC    1            ;  <== JUST  [T t] (as blk) ; 220
LD     0 0          ; var t ; 221
CONS                 ; 222
ST     0 1           ; 223
LD     0 1          ; var tMaybe ; 224
RTN                  ; 225
LD     0 0          ;  <== maybeToList  [Maybe<D> d] (as blk) ; 226
LDF    283          ;  @is_nothing ; 227
AP     1             ; 228
LDC    1            ; just constant from code ; 229
CEQ                  ; 230
SEL    233 235      ; IF? 12 ; 231
RTN                  ; 232
LDC    0            ; THEN: 12 ; 233
JOIN                 ; 234
LD     0 0          ; ELSE: 12 ; 235
LDF    288          ;  @from_maybe ; 236
AP     1             ; 237
LDC    0            ; NULL literal ; 238
CONS                 ; 239
JOIN                 ; 240
LDC    0            ;  <== catMaybes_acc  [ListCons<Maybe<D>> data, ListCons<D> acc] (as blk) ; 241
ST     0 2           ; 242
LD     0 0          ; var data ; 243
ATOM                 ; 244
SEL    248 251       ; 245
LD     0 2          ; var rv ; 246
RTN                  ; 247
LD     0 1          ; branch@248 ; 248
ST     0 2           ; 249
JOIN                 ; 250
LD     0 0          ; branch@251 ; 251
CAR                  ; 252
LDF    283          ;  @is_nothing ; 253
AP     1             ; 254
ST     0 3           ; 255
LD     0 0          ; var data ; 256
CAR                  ; 257
LDF    288          ;  @from_maybe ; 258
AP     1             ; 259
ST     0 4           ; 260
LD     0 4          ; var data1 ; 261
LD     0 1          ; var acc ; 262
CONS                 ; 263
ST     0 5           ; 264
LD     0 0          ; var data ; 265
CDR                  ; 266
LD     0 3          ; var nothing ; 267
LDC    1            ; just constant from code ; 268
CEQ                  ; 269
SEL    279 281      ; IF? 72 ; 270
LDC 0               ; local var space ; 271
LDC 0               ; local var space ; 272
LDC 0               ; local var space ; 273
LDC 0               ; local var space ; 274
LDF    241          ;  @catMaybes_acc ; 275
AP     6             ; 276
ST     0 2           ; 277
JOIN                 ; 278
LD     0 1          ; THEN: 72 ; 279
JOIN                 ; 280
LD     0 5          ; ELSE: 72 ; 281
JOIN                 ; 282
LDC    1            ;  <== is_nothing  [Maybe<D> head] (as blk) ; 283
LD     0 0          ; var head ; 284
CAR                 ; generateTupleAccess total=2 pos=0 ; 285
SUB                  ; 286
RTN                  ; 287
LD     0 0          ;  <== from_maybe  [Maybe<D> head] (as blk) ; 288
CAR                 ; generateTupleAccess total=2 pos=0 ; 289
LDC    0            ; just constant from code ; 290
CEQ                  ; 291
SEL    296 298       ; 292
LD     0 0          ; var head ; 293
CDR                 ; generateTupleAccess total=2 pos=1 ; 294
RTN                  ; 295
BRK                 ; branch@296 ; 296
JOIN                 ; 297
JOIN                ; branch@298 ; 298
LD     0 0          ;  <== reverse  [ListCons<D> c] (as blk) ; 299
LDC    0            ; NULL literal ; 300
LDF    371          ;  @reverse_acc ; 301
AP     2             ; 302
RTN                  ; 303
LD     0 0          ;  <== maximum_by_acc  [ListCons<D> d, Function1<D,Integer> projection, D acc] (as blk) ; 304
ATOM                 ; 305
SEL    308 310      ; IF? 13 ; 306
RTN                  ; 307
LD     0 2          ; THEN: 13 ; 308
JOIN                 ; 309
LD     0 2          ; ELSE: 13 ; 310
LD     0 1          ; var projection ; 311
AP     1             ; 312
LD     0 0          ; var d ; 313
CAR                  ; 314
LD     0 1          ; var projection ; 315
AP     1             ; 316
CGT                  ; 317
SEL    320 327      ; IF? 73 ; 318
JOIN                 ; 319
LD     0 0          ; THEN: 73 ; 320
CDR                  ; 321
LD     0 1          ; var projection ; 322
LD     0 2          ; var acc ; 323
LDF    304          ;  @maximum_by_acc ; 324
AP     3             ; 325
JOIN                 ; 326
LD     0 0          ; ELSE: 73 ; 327
CDR                  ; 328
LD     0 1          ; var projection ; 329
LD     0 0          ; var d ; 330
CAR                  ; 331
LDF    304          ;  @maximum_by_acc ; 332
AP     3             ; 333
JOIN                 ; 334
LD     0 0          ;  <== maximum_by  [ListCons<D> d, Function1<D,Integer> projection] (as blk) ; 335
ATOM                 ; 336
SEL    346 348       ; 337
LD     0 0          ; var d ; 338
CDR                  ; 339
LD     0 1          ; var projection ; 340
LD     0 0          ; var d ; 341
CAR                  ; 342
LDF    304          ;  @maximum_by_acc ; 343
AP     3             ; 344
RTN                  ; 345
BRK                 ; branch@346 ; 346
JOIN                 ; 347
JOIN                ; branch@348 ; 348
LD     0 0          ;  <== dropWhile  [ListCons<D> c, Function1<D,Integer> test] (as blk) ; 349
ATOM                 ; 350
SEL    353 355      ; IF? 14 ; 351
RTN                  ; 352
LDC    0            ; THEN: 14 ; 353
JOIN                 ; 354
LD     0 0          ; ELSE: 14 ; 355
CAR                  ; 356
LD     0 1          ; var test ; 357
AP     1             ; 358
LDC    1            ; just constant from code ; 359
CEQ                  ; 360
SEL    363 369      ; IF? 74 ; 361
JOIN                 ; 362
LD     0 0          ; THEN: 74 ; 363
CDR                  ; 364
LD     0 1          ; var test ; 365
LDF    349          ;  @dropWhile ; 366
AP     2             ; 367
JOIN                 ; 368
LD     0 0          ; ELSE: 74 ; 369
JOIN                 ; 370
LD     0 0          ;  <== reverse_acc  [ListCons<D> c, ListCons<D> acc] (as blk) ; 371
ATOM                 ; 372
SEL    375 377      ; IF? 7 ; 373
RTN                  ; 374
LD     0 1          ; THEN: 7 ; 375
JOIN                 ; 376
LD     0 0          ; ELSE: 7 ; 377
CDR                  ; 378
LD     0 0          ; var c ; 379
CAR                  ; 380
LD     0 1          ; var acc ; 381
CONS                 ; 382
LDF    371          ;  @reverse_acc ; 383
AP     2             ; 384
JOIN                 ; 385
LD     0 0          ;  <== fold0  [ListCons<I> c, R init, Function2<R,I,R> arg] (as blk) ; 386
ATOM                 ; 387
SEL    390 392      ; IF? 15 ; 388
RTN                  ; 389
LD     0 1          ; THEN: 15 ; 390
JOIN                 ; 391
LD     0 0          ; ELSE: 15 ; 392
CDR                  ; 393
LD     0 1          ; var init ; 394
LD     0 0          ; var c ; 395
CAR                  ; 396
LD     0 2          ; var arg ; 397
AP     2             ; 398
LD     0 2          ; var arg ; 399
LDF    386          ;  @fold0 ; 400
AP     3             ; 401
JOIN                 ; 402
LDC    0            ;  <== queue_new  [] (as blk) ; 403
LDC    0            ; NULL literal ; 404
CONS                 ; 405
RTN                  ; 406
LD     0 0          ;  <== queue_enqueue  [Queue<T> q, T v] (as blk) ; 407
CAR                 ; generateTupleAccess total=2 pos=0 ; 408
LD     0 1          ; var v ; 409
LD     0 0          ; var q ; 410
CDR                 ; generateTupleAccess total=2 pos=1 ; 411
CONS                 ; 412
CONS                 ; 413
RTN                  ; 414
LD     0 0          ;  <== queue_isempty  [Queue<T> q] (as blk) ; 415
CAR                 ; generateTupleAccess total=2 pos=0 ; 416
ATOM                 ; 417
LD     0 0          ; var q ; 418
CDR                 ; generateTupleAccess total=2 pos=1 ; 419
ATOM                 ; 420
MUL                  ; 421
RTN                  ; 422
LDC    0            ;  <== list_item  [Cons list, int n] (as blk) ; 423
LD     0 1          ; var n ; 424
CGT                  ; 425
SEL    432 434       ; 426
LD     0 1          ; var n ; 427
LDC    0            ; just constant from code ; 428
CEQ                  ; 429
SEL    435 438      ; IF? 16 ; 430
RTN                  ; 431
BRK                 ; branch@432 ; 432
JOIN                 ; 433
JOIN                ; branch@434 ; 434
LD     0 0          ; THEN: 16 ; 435
CAR                  ; 436
JOIN                 ; 437
LD     0 0          ; ELSE: 16 ; 438
CDR                  ; 439
LD     0 1          ; var n ; 440
LDC    1            ; just constant from code ; 441
SUB                  ; 442
LDF    423          ;  @list_item ; 443
AP     2             ; 444
JOIN                 ; 445
LDC    0            ;  <== list_item  [ListCons<T> list, int n] (as blk) ; 446
LD     0 1          ; var n ; 447
CGT                  ; 448
SEL    455 457       ; 449
LD     0 1          ; var n ; 450
LDC    0            ; just constant from code ; 451
CEQ                  ; 452
SEL    458 461      ; IF? 17 ; 453
RTN                  ; 454
BRK                 ; branch@455 ; 455
JOIN                 ; 456
JOIN                ; branch@457 ; 457
LD     0 0          ; THEN: 17 ; 458
CAR                  ; 459
JOIN                 ; 460
LD     0 0          ; ELSE: 17 ; 461
CDR                  ; 462
LD     0 1          ; var n ; 463
LDC    1            ; just constant from code ; 464
SUB                  ; 465
LDF    423          ;  @list_item ; 466
AP     2             ; 467
JOIN                 ; 468
LDC    0            ;  <== list_item_def  [Cons list, int index, Object deflt] (as blk) ; 469
LD     0 1          ; var index ; 470
CGT                  ; 471
SEL    474 476      ; IF? 18 ; 472
RTN                  ; 473
LD     0 2          ; THEN: 18 ; 474
JOIN                 ; 475
LD     0 1          ; ELSE: 18 ; 476
LDC    0            ; just constant from code ; 477
CEQ                  ; 478
SEL    481 484      ; IF? 75 ; 479
JOIN                 ; 480
LD     0 0          ; THEN: 75 ; 481
CAR                  ; 482
JOIN                 ; 483
LD     0 0          ; ELSE: 75 ; 484
CDR                  ; 485
LD     0 1          ; var index ; 486
LDC    1            ; just constant from code ; 487
SUB                  ; 488
LDF    423          ;  @list_item ; 489
AP     2             ; 490
JOIN                 ; 491
LDC    0            ;  <== queue_dequeue  [Queue<T> q] (as blk) ; 492
ST     0 1           ; 493
LD     0 0          ; var q ; 494
CAR                 ; generateTupleAccess total=2 pos=0 ; 495
ATOM                 ; 496
SEL    500 507       ; 497
LD     0 1          ; var retval ; 498
RTN                  ; 499
LD     0 0          ; branch@500 ; 500
CDR                 ; generateTupleAccess total=2 pos=1 ; 501
ATOM                 ; 502
LDC    1            ; for negation ; 503
SUB                  ; 504
SEL    519 530       ; 505
JOIN                 ; 506
LD     0 0          ; branch@507 ; 507
CAR                 ; generateTupleAccess total=2 pos=0 ; 508
CAR                  ; 509
LD     0 0          ; var q ; 510
CAR                 ; generateTupleAccess total=2 pos=0 ; 511
CDR                  ; 512
LD     0 0          ; var q ; 513
CDR                 ; generateTupleAccess total=2 pos=1 ; 514
CONS                 ; 515
CONS                 ; 516
ST     0 1           ; 517
JOIN                 ; 518
LD     0 0          ; branch@519 ; 519
CDR                 ; generateTupleAccess total=2 pos=1 ; 520
LDF    299          ;  @reverse ; 521
AP     1             ; 522
LDC    0            ; NULL literal ; 523
CONS                 ; 524
LDC 0               ; local var space ; 525
LDF    492          ;  @queue_dequeue ; 526
AP     2             ; 527
ST     0 1           ; 528
JOIN                 ; 529
BRK                 ; branch@530 ; 530
JOIN                 ; 531
LD     0 0          ;  <== length  [ListCons<T> list] (as blk) ; 532
LDC    0            ; just constant from code ; 533
LDF    646          ;  @elements_counter ; 534
AP     2             ; 535
RTN                  ; 536
LD     0 0          ;  <== filter  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 537
LD     0 1          ; var pred ; 538
LDC    0            ; NULL literal ; 539
LDF    609          ;  @filter_acc ; 540
AP     3             ; 541
LDF    299          ;  @reverse ; 542
AP     1             ; 543
RTN                  ; 544
LD     0 0          ;  <== any  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 545
ATOM                 ; 546
SEL    549 551      ; IF? 21 ; 547
RTN                  ; 548
LDC    0            ; THEN: 21 ; 549
JOIN                 ; 550
LD     0 0          ; ELSE: 21 ; 551
CAR                  ; 552
LD     0 1          ; var pred ; 553
AP     1             ; 554
LDC    1            ; just constant from code ; 555
CEQ                  ; 556
SEL    559 561      ; IF? 76 ; 557
JOIN                 ; 558
LDC    1            ; THEN: 76 ; 559
JOIN                 ; 560
LD     0 0          ; ELSE: 76 ; 561
CDR                  ; 562
LD     0 1          ; var pred ; 563
LDF    545          ;  @any ; 564
AP     2             ; 565
JOIN                 ; 566
LD     0 0          ;  <== noneof  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 567
ATOM                 ; 568
SEL    571 573      ; IF? 22 ; 569
RTN                  ; 570
LDC    1            ; THEN: 22 ; 571
JOIN                 ; 572
LD     0 0          ; ELSE: 22 ; 573
CAR                  ; 574
LD     0 1          ; var pred ; 575
AP     1             ; 576
LDC    1            ; just constant from code ; 577
CEQ                  ; 578
SEL    581 583      ; IF? 77 ; 579
JOIN                 ; 580
LDC    0            ; THEN: 77 ; 581
JOIN                 ; 582
LD     0 0          ; ELSE: 77 ; 583
CDR                  ; 584
LD     0 1          ; var pred ; 585
LDF    567          ;  @noneof ; 586
AP     2             ; 587
JOIN                 ; 588
LD     0 0          ;  <== empty  [Cons d] (as blk) ; 589
ATOM                 ; 590
LDC    1            ; for negation ; 591
SUB                  ; 592
SEL    595 597      ; IF? 23 ; 593
RTN                  ; 594
LDC    0            ; THEN: 23 ; 595
JOIN                 ; 596
LDC    1            ; ELSE: 23 ; 597
JOIN                 ; 598
LD     0 0          ;  <== notempty  [Cons d] (as blk) ; 599
ATOM                 ; 600
LDC    1            ; for negation ; 601
SUB                  ; 602
SEL    605 607      ; IF? 24 ; 603
RTN                  ; 604
LDC    1            ; THEN: 24 ; 605
JOIN                 ; 606
LDC    0            ; ELSE: 24 ; 607
JOIN                 ; 608
LD     0 0          ;  <== filter_acc  [ListCons<T> list, Function1<T,Integer> pred, ListCons<T> acc] (as blk) ; 609
ATOM                 ; 610
SEL    613 615      ; IF? 20 ; 611
RTN                  ; 612
LD     0 2          ; THEN: 20 ; 613
JOIN                 ; 614
LD     0 0          ; ELSE: 20 ; 615
CDR                  ; 616
LD     0 1          ; var pred ; 617
LD     0 0          ; var list ; 618
CAR                  ; 619
LD     0 1          ; var pred ; 620
AP     1             ; 621
LDC    1            ; just constant from code ; 622
CEQ                  ; 623
SEL    628 633      ; IF? 78 ; 624
LDF    609          ;  @filter_acc ; 625
AP     3             ; 626
JOIN                 ; 627
LD     0 0          ; THEN: 78 ; 628
CAR                  ; 629
LD     0 2          ; var acc ; 630
CONS                 ; 631
JOIN                 ; 632
LD     0 2          ; ELSE: 78 ; 633
JOIN                 ; 634
LD     0 0          ;  <== map_height  [Cons map] (as blk) ; 635
LDC    0            ; just constant from code ; 636
LDF    646          ;  @elements_counter ; 637
AP     2             ; 638
RTN                  ; 639
LD     0 0          ;  <== map_width  [Cons map] (as blk) ; 640
CAR                  ; 641
LDC    0            ; just constant from code ; 642
LDF    646          ;  @elements_counter ; 643
AP     2             ; 644
RTN                  ; 645
LD     0 0          ;  <== elements_counter  [Cons list, int counter] (as blk) ; 646
ATOM                 ; 647
SEL    650 652      ; IF? 19 ; 648
RTN                  ; 649
LD     0 1          ; THEN: 19 ; 650
JOIN                 ; 651
LD     0 0          ; ELSE: 19 ; 652
CDR                  ; 653
LD     0 1          ; var counter ; 654
LDC    1            ; just constant from code ; 655
ADD                  ; 656
LDF    646          ;  @elements_counter ; 657
AP     2             ; 658
JOIN                 ; 659
LD     0 1          ;  <== zip_with  [Function2<A,B,C> f, ListCons<A> x, ListCons<B> y] (as blk) ; 660
ATOM                 ; 661
SEL    664 666      ; IF? 25 ; 662
RTN                  ; 663
LDC    0            ; THEN: 25 ; 664
JOIN                 ; 665
LD     0 2          ; ELSE: 25 ; 666
ATOM                 ; 667
SEL    670 672      ; IF? 79 ; 668
JOIN                 ; 669
LDC    0            ; THEN: 79 ; 670
JOIN                 ; 671
LD     0 1          ; ELSE: 79 ; 672
CAR                  ; 673
LD     0 2          ; var y ; 674
CAR                  ; 675
LD     0 0          ; var f ; 676
AP     2             ; 677
LD     0 0          ; var f ; 678
LD     0 1          ; var x ; 679
CDR                  ; 680
LD     0 2          ; var y ; 681
CDR                  ; 682
LDF    660          ;  @zip_with ; 683
AP     3             ; 684
CONS                 ; 685
JOIN                 ; 686
LD     0 0          ;  <== zip  [final ListCons<A> x, final ListCons<B> y] (as blk) ; 687
ATOM                 ; 688
SEL    691 693      ; IF? 26 ; 689
RTN                  ; 690
LDC    0            ; THEN: 26 ; 691
JOIN                 ; 692
LD     0 1          ; ELSE: 26 ; 693
ATOM                 ; 694
SEL    697 699      ; IF? 80 ; 695
JOIN                 ; 696
LDC    0            ; THEN: 80 ; 697
JOIN                 ; 698
LD     0 0          ; ELSE: 80 ; 699
CAR                  ; 700
LD     0 1          ; var y ; 701
CAR                  ; 702
CONS                 ; 703
LD     0 0          ; var x ; 704
CDR                  ; 705
LD     0 1          ; var y ; 706
CDR                  ; 707
LDF    687          ;  @zip ; 708
AP     2             ; 709
CONS                 ; 710
JOIN                 ; 711
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 712
LD     0 0          ; var f ; 713
AP     1             ; 714
CAR                  ; 715
ST     0 3           ; 716
LD     0 2          ; var n ; 717
LDC    0            ; just constant from code ; 718
CEQ                  ; 719
SEL    722 726      ; IF? 27 ; 720
RTN                  ; 721
LD     0 3          ; THEN: 27 ; 722
LDC    0            ; NULL literal ; 723
CONS                 ; 724
JOIN                 ; 725
LD     0 3          ; ELSE: 27 ; 726
LD     0 0          ; var f ; 727
LD     0 1          ; var a ; 728
LD     0 0          ; var f ; 729
AP     1             ; 730
CDR                  ; 731
LD     0 2          ; var n ; 732
LDC    1            ; just constant from code ; 733
SUB                  ; 734
LDC 0               ; local var space ; 735
LDF    712          ;  @produce_n ; 736
AP     4             ; 737
CONS                 ; 738
JOIN                 ; 739
LDC    1            ;  <== sorted_node_new  [int key, T val, int lev, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 740
LD     0 3          ; var lo ; 741
ATOM                 ; 742
LDC    1            ; for negation ; 743
SUB                  ; 744
SEL    764 767      ; IF? 28 ; 745
ADD                  ; 746
LD     0 4          ; var hi ; 747
ATOM                 ; 748
LDC    1            ; for negation ; 749
SUB                  ; 750
SEL    769 772      ; IF? 29 ; 751
ADD                  ; 752
LD     0 0          ; var key ; 753
LD     0 1          ; var val ; 754
LD     0 2          ; var lev ; 755
LD     0 3          ; var lo ; 756
LD     0 4          ; var hi ; 757
CONS                 ; 758
CONS                 ; 759
CONS                 ; 760
CONS                 ; 761
CONS                 ; 762
RTN                  ; 763
LD     0 3          ; THEN: 28 ; 764
CAR                 ; generateTupleAccess total=6 pos=0 ; 765
JOIN                 ; 766
LDC    0            ; ELSE: 28 ; 767
JOIN                 ; 768
LD     0 4          ; THEN: 29 ; 769
CAR                 ; generateTupleAccess total=6 pos=0 ; 770
JOIN                 ; 771
LDC    0            ; ELSE: 29 ; 772
JOIN                 ; 773
LD     0 0          ;  <== sorted_node_with_lev  [SortedMapNode<T> node, int lev] (as blk) ; 774
CDR                 ; generateTupleAccess total=6 pos=1 ; 775
CAR                  ; 776
LD     0 0          ; var node ; 777
CDR                 ; generateTupleAccess total=6 pos=2 ; 778
CDR                  ; 779
CAR                  ; 780
LD     0 1          ; var lev ; 781
LD     0 0          ; var node ; 782
CDR                 ; generateTupleAccess total=6 pos=4 ; 783
CDR                  ; 784
CDR                  ; 785
CDR                  ; 786
CAR                  ; 787
LD     0 0          ; var node ; 788
CDR                 ; generateTupleAccess total=6 pos=5 ; 789
CDR                  ; 790
CDR                  ; 791
CDR                  ; 792
CDR                  ; 793
LDF    740          ;  @sorted_node_new ; 794
AP     5             ; 795
RTN                  ; 796
LD     0 0          ;  <== sorted_node_with_lo_hi  [SortedMapNode<T> node, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 797
CDR                 ; generateTupleAccess total=6 pos=1 ; 798
CAR                  ; 799
LD     0 0          ; var node ; 800
CDR                 ; generateTupleAccess total=6 pos=2 ; 801
CDR                  ; 802
CAR                  ; 803
LD     0 0          ; var node ; 804
CDR                 ; generateTupleAccess total=6 pos=3 ; 805
CDR                  ; 806
CDR                  ; 807
CAR                  ; 808
LD     0 1          ; var lo ; 809
LD     0 2          ; var hi ; 810
LDF    740          ;  @sorted_node_new ; 811
AP     5             ; 812
RTN                  ; 813
LD     0 0          ;  <== sorted_node_with_lo  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 814
LD     0 1          ; var lo ; 815
LD     0 0          ; var node ; 816
CDR                 ; generateTupleAccess total=6 pos=5 ; 817
CDR                  ; 818
CDR                  ; 819
CDR                  ; 820
CDR                  ; 821
LDF    797          ;  @sorted_node_with_lo_hi ; 822
AP     3             ; 823
RTN                  ; 824
LD     0 0          ;  <== sorted_node_with_hi  [SortedMapNode<T> node, SortedMapNode<T> hi] (as blk) ; 825
LD     0 0          ; var node ; 826
CDR                 ; generateTupleAccess total=6 pos=4 ; 827
CDR                  ; 828
CDR                  ; 829
CDR                  ; 830
CAR                  ; 831
LD     0 1          ; var hi ; 832
LDF    797          ;  @sorted_node_with_lo_hi ; 833
AP     3             ; 834
RTN                  ; 835
LD     0 0          ;  <== sorted_node_has  [SortedMapNode<T> node, int key] (as blk) ; 836
ATOM                 ; 837
SEL    840 842      ; IF? 30 ; 838
RTN                  ; 839
LDC    0            ; THEN: 30 ; 840
JOIN                 ; 841
LD     0 1          ; ELSE: 30 ; 842
LD     0 0          ; var node ; 843
CDR                 ; generateTupleAccess total=6 pos=1 ; 844
CAR                  ; 845
CEQ                  ; 846
SEL    849 851      ; IF? 81 ; 847
JOIN                 ; 848
LDC    1            ; THEN: 81 ; 849
JOIN                 ; 850
LD     0 0          ; ELSE: 81 ; 851
CDR                 ; generateTupleAccess total=6 pos=1 ; 852
CAR                  ; 853
LD     0 1          ; var key ; 854
CGT                  ; 855
SEL    861 868      ; IF? 82 ; 856
LD     0 1          ; var key ; 857
LDF    836          ;  @sorted_node_has ; 858
AP     2             ; 859
JOIN                 ; 860
LD     0 0          ; THEN: 82 ; 861
CDR                 ; generateTupleAccess total=6 pos=4 ; 862
CDR                  ; 863
CDR                  ; 864
CDR                  ; 865
CAR                  ; 866
JOIN                 ; 867
LD     0 0          ; ELSE: 82 ; 868
CDR                 ; generateTupleAccess total=6 pos=5 ; 869
CDR                  ; 870
CDR                  ; 871
CDR                  ; 872
CDR                  ; 873
JOIN                 ; 874
LD     0 0          ;  <== sorted_node_get  [SortedMapNode<T> node, int key, T def] (as blk) ; 875
ATOM                 ; 876
SEL    879 881      ; IF? 31 ; 877
RTN                  ; 878
LD     0 2          ; THEN: 31 ; 879
JOIN                 ; 880
LD     0 1          ; ELSE: 31 ; 881
LD     0 0          ; var node ; 882
CDR                 ; generateTupleAccess total=6 pos=1 ; 883
CAR                  ; 884
CEQ                  ; 885
SEL    888 893      ; IF? 83 ; 886
JOIN                 ; 887
LD     0 0          ; THEN: 83 ; 888
CDR                 ; generateTupleAccess total=6 pos=2 ; 889
CDR                  ; 890
CAR                  ; 891
JOIN                 ; 892
LD     0 0          ; ELSE: 83 ; 893
CDR                 ; generateTupleAccess total=6 pos=1 ; 894
CAR                  ; 895
LD     0 1          ; var key ; 896
CGT                  ; 897
SEL    904 911      ; IF? 84 ; 898
LD     0 1          ; var key ; 899
LD     0 2          ; var def ; 900
LDF    875          ;  @sorted_node_get ; 901
AP     3             ; 902
JOIN                 ; 903
LD     0 0          ; THEN: 84 ; 904
CDR                 ; generateTupleAccess total=6 pos=4 ; 905
CDR                  ; 906
CDR                  ; 907
CDR                  ; 908
CAR                  ; 909
JOIN                 ; 910
LD     0 0          ; ELSE: 84 ; 911
CDR                 ; generateTupleAccess total=6 pos=5 ; 912
CDR                  ; 913
CDR                  ; 914
CDR                  ; 915
CDR                  ; 916
JOIN                 ; 917
LD     0 0          ;  <== sorted_node_put  [SortedMapNode<T> node, int key, T val] (as blk) ; 918
ATOM                 ; 919
SEL    922 930      ; IF? 32 ; 920
RTN                  ; 921
LD     0 1          ; THEN: 32 ; 922
LD     0 2          ; var val ; 923
LDC    0            ; just constant from code ; 924
LDC    0            ; NULL literal ; 925
LDC    0            ; NULL literal ; 926
LDF    740          ;  @sorted_node_new ; 927
AP     5             ; 928
JOIN                 ; 929
LD     0 1          ; ELSE: 32 ; 930
LD     0 0          ; var node ; 931
CDR                 ; generateTupleAccess total=6 pos=1 ; 932
CAR                  ; 933
CEQ                  ; 934
SEL    937 945      ; IF? 85 ; 935
JOIN                 ; 936
LD     0 2          ; THEN: 85 ; 937
LD     0 0          ; var node ; 938
CDR                 ; generateTupleAccess total=6 pos=2 ; 939
CDR                  ; 940
CAR                  ; 941
CEQ                  ; 942
SEL    955 957      ; IF? 86 ; 943
JOIN                 ; 944
LD     0 0          ; ELSE: 85 ; 945
CDR                 ; generateTupleAccess total=6 pos=1 ; 946
CAR                  ; 947
LD     0 1          ; var key ; 948
CGT                  ; 949
SEL    979 994      ; IF? 87 ; 950
LDC 0               ; local var space ; 951
LDF    1066         ;  @sorted_node_split ; 952
AP     2             ; 953
JOIN                 ; 954
LD     0 0          ; THEN: 86 ; 955
JOIN                 ; 956
LD     0 1          ; ELSE: 86 ; 957
LD     0 2          ; var val ; 958
LD     0 0          ; var node ; 959
CDR                 ; generateTupleAccess total=6 pos=3 ; 960
CDR                  ; 961
CDR                  ; 962
CAR                  ; 963
LD     0 0          ; var node ; 964
CDR                 ; generateTupleAccess total=6 pos=4 ; 965
CDR                  ; 966
CDR                  ; 967
CDR                  ; 968
CAR                  ; 969
LD     0 0          ; var node ; 970
CDR                 ; generateTupleAccess total=6 pos=5 ; 971
CDR                  ; 972
CDR                  ; 973
CDR                  ; 974
CDR                  ; 975
LDF    740          ;  @sorted_node_new ; 976
AP     5             ; 977
JOIN                 ; 978
LD     0 0          ; THEN: 87 ; 979
LD     0 0          ; var node ; 980
CDR                 ; generateTupleAccess total=6 pos=4 ; 981
CDR                  ; 982
CDR                  ; 983
CDR                  ; 984
CAR                  ; 985
LD     0 1          ; var key ; 986
LD     0 2          ; var val ; 987
LDF    918          ;  @sorted_node_put ; 988
AP     3             ; 989
LDC 0               ; local var space ; 990
LDF    1012         ;  @sorted_node_skew ; 991
AP     3             ; 992
JOIN                 ; 993
LD     0 0          ; ELSE: 87 ; 994
LD     0 0          ; var node ; 995
CDR                 ; generateTupleAccess total=6 pos=5 ; 996
CDR                  ; 997
CDR                  ; 998
CDR                  ; 999
CDR                  ; 1000
LD     0 1          ; var key ; 1001
LD     0 2          ; var val ; 1002
LDF    918          ;  @sorted_node_put ; 1003
AP     3             ; 1004
LDF    825          ;  @sorted_node_with_hi ; 1005
AP     2             ; 1006
LDC    0            ; NULL literal ; 1007
LDC 0               ; local var space ; 1008
LDF    1012         ;  @sorted_node_skew ; 1009
AP     3             ; 1010
JOIN                 ; 1011
LD     0 1          ;  <== sorted_node_skew  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 1012
ATOM                 ; 1013
LDC    1            ; for negation ; 1014
SUB                  ; 1015
SEL    1027 1029    ; IF? 33 ; 1016
ST     0 1           ; 1017
LD     0 0          ; var node ; 1018
LD     0 1          ; var lo ; 1019
LDF    814          ;  @sorted_node_with_lo ; 1020
AP     2             ; 1021
ST     0 2           ; 1022
LD     0 1          ; var lo ; 1023
ATOM                 ; 1024
SEL    1036 1038    ; IF? 34 ; 1025
RTN                  ; 1026
LD     0 1          ; THEN: 33 ; 1027
JOIN                 ; 1028
LD     0 0          ; ELSE: 33 ; 1029
CDR                 ; generateTupleAccess total=6 pos=4 ; 1030
CDR                  ; 1031
CDR                  ; 1032
CDR                  ; 1033
CAR                  ; 1034
JOIN                 ; 1035
LD     0 2          ; THEN: 34 ; 1036
JOIN                 ; 1037
LD     0 0          ; ELSE: 34 ; 1038
CDR                 ; generateTupleAccess total=6 pos=3 ; 1039
CDR                  ; 1040
CDR                  ; 1041
CAR                  ; 1042
LD     0 1          ; var lo ; 1043
CDR                 ; generateTupleAccess total=6 pos=3 ; 1044
CDR                  ; 1045
CDR                  ; 1046
CAR                  ; 1047
CGT                  ; 1048
SEL    1051 1053    ; IF? 88 ; 1049
JOIN                 ; 1050
LD     0 2          ; THEN: 88 ; 1051
JOIN                 ; 1052
LD     0 1          ; ELSE: 88 ; 1053
LD     0 0          ; var node ; 1054
LD     0 1          ; var lo ; 1055
CDR                 ; generateTupleAccess total=6 pos=5 ; 1056
CDR                  ; 1057
CDR                  ; 1058
CDR                  ; 1059
CDR                  ; 1060
LDF    814          ;  @sorted_node_with_lo ; 1061
AP     2             ; 1062
LDF    825          ;  @sorted_node_with_hi ; 1063
AP     2             ; 1064
JOIN                 ; 1065
LD     0 0          ;  <== sorted_node_split  [SortedMapNode<T> node] (as blk) ; 1066
CDR                 ; generateTupleAccess total=6 pos=5 ; 1067
CDR                  ; 1068
CDR                  ; 1069
CDR                  ; 1070
CDR                  ; 1071
ST     0 1           ; 1072
LD     0 1          ; var hi ; 1073
ATOM                 ; 1074
SEL    1077 1079    ; IF? 35 ; 1075
RTN                  ; 1076
LD     0 0          ; THEN: 35 ; 1077
JOIN                 ; 1078
LD     0 1          ; ELSE: 35 ; 1079
CDR                 ; generateTupleAccess total=6 pos=5 ; 1080
CDR                  ; 1081
CDR                  ; 1082
CDR                  ; 1083
CDR                  ; 1084
ATOM                 ; 1085
SEL    1088 1090    ; IF? 89 ; 1086
JOIN                 ; 1087
LD     0 0          ; THEN: 89 ; 1088
JOIN                 ; 1089
LD     0 0          ; ELSE: 89 ; 1090
CDR                 ; generateTupleAccess total=6 pos=3 ; 1091
CDR                  ; 1092
CDR                  ; 1093
CAR                  ; 1094
LD     0 1          ; var hi ; 1095
CDR                 ; generateTupleAccess total=6 pos=5 ; 1096
CDR                  ; 1097
CDR                  ; 1098
CDR                  ; 1099
CDR                  ; 1100
CDR                 ; generateTupleAccess total=6 pos=3 ; 1101
CDR                  ; 1102
CDR                  ; 1103
CAR                  ; 1104
CGT                  ; 1105
SEL    1108 1110    ; IF? 90 ; 1106
JOIN                 ; 1107
LD     0 0          ; THEN: 90 ; 1108
JOIN                 ; 1109
LD     0 1          ; ELSE: 90 ; 1110
CDR                 ; generateTupleAccess total=6 pos=1 ; 1111
CAR                  ; 1112
LD     0 1          ; var hi ; 1113
CDR                 ; generateTupleAccess total=6 pos=2 ; 1114
CDR                  ; 1115
CAR                  ; 1116
LD     0 1          ; var hi ; 1117
CDR                 ; generateTupleAccess total=6 pos=3 ; 1118
CDR                  ; 1119
CDR                  ; 1120
CAR                  ; 1121
LDC    1            ; just constant from code ; 1122
ADD                  ; 1123
LD     0 0          ; var node ; 1124
LD     0 1          ; var hi ; 1125
CDR                 ; generateTupleAccess total=6 pos=4 ; 1126
CDR                  ; 1127
CDR                  ; 1128
CDR                  ; 1129
CAR                  ; 1130
LDF    825          ;  @sorted_node_with_hi ; 1131
AP     2             ; 1132
LD     0 1          ; var hi ; 1133
CDR                 ; generateTupleAccess total=6 pos=5 ; 1134
CDR                  ; 1135
CDR                  ; 1136
CDR                  ; 1137
CDR                  ; 1138
LDF    740          ;  @sorted_node_new ; 1139
AP     5             ; 1140
JOIN                 ; 1141
LD     0 0          ;  <== sorted_node_walk  [SortedMapNode<T> node, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) ; 1142
ATOM                 ; 1143
SEL    1146 1148    ; IF? 36 ; 1144
RTN                  ; 1145
LD     0 1          ; THEN: 36 ; 1146
JOIN                 ; 1147
LD     0 0          ; ELSE: 36 ; 1148
CDR                 ; generateTupleAccess total=6 pos=5 ; 1149
CDR                  ; 1150
CDR                  ; 1151
CDR                  ; 1152
CDR                  ; 1153
ATOM                 ; 1154
LDC    1            ; for negation ; 1155
SUB                  ; 1156
SEL    1159 1189    ; IF? 91 ; 1157
JOIN                 ; 1158
LD     0 0          ; THEN: 91 ; 1159
CDR                 ; generateTupleAccess total=6 pos=5 ; 1160
CDR                  ; 1161
CDR                  ; 1162
CDR                  ; 1163
CDR                  ; 1164
LD     0 0          ; var node ; 1165
CDR                 ; generateTupleAccess total=6 pos=4 ; 1166
CDR                  ; 1167
CDR                  ; 1168
CDR                  ; 1169
CAR                  ; 1170
LD     0 1          ; var acc ; 1171
LD     0 2          ; var fun ; 1172
LDF    1142         ;  @sorted_node_walk ; 1173
AP     3             ; 1174
LD     0 0          ; var node ; 1175
CDR                 ; generateTupleAccess total=6 pos=1 ; 1176
CAR                  ; 1177
LD     0 0          ; var node ; 1178
CDR                 ; generateTupleAccess total=6 pos=2 ; 1179
CDR                  ; 1180
CAR                  ; 1181
CONS                 ; 1182
LD     0 2          ; var fun ; 1183
AP     2             ; 1184
LD     0 2          ; var fun ; 1185
LDF    1142         ;  @sorted_node_walk ; 1186
AP     3             ; 1187
JOIN                 ; 1188
LD     0 0          ; ELSE: 91 ; 1189
CDR                 ; generateTupleAccess total=6 pos=4 ; 1190
CDR                  ; 1191
CDR                  ; 1192
CDR                  ; 1193
CAR                  ; 1194
LD     0 1          ; var acc ; 1195
LD     0 2          ; var fun ; 1196
LDF    1142         ;  @sorted_node_walk ; 1197
AP     3             ; 1198
LD     0 0          ; var node ; 1199
CDR                 ; generateTupleAccess total=6 pos=1 ; 1200
CAR                  ; 1201
LD     0 0          ; var node ; 1202
CDR                 ; generateTupleAccess total=6 pos=2 ; 1203
CDR                  ; 1204
CAR                  ; 1205
CONS                 ; 1206
LD     0 2          ; var fun ; 1207
AP     2             ; 1208
JOIN                 ; 1209
LD     0 0          ;  <== sorted_map_count  [SortedMap<T> m] (as blk) ; 1210
CAR                 ; generateTupleAccess total=2 pos=0 ; 1211
ATOM                 ; 1212
LDC    1            ; for negation ; 1213
SUB                  ; 1214
SEL    1217 1221    ; IF? 37 ; 1215
RTN                  ; 1216
LD     0 0          ; THEN: 37 ; 1217
CAR                 ; generateTupleAccess total=2 pos=0 ; 1218
CAR                 ; generateTupleAccess total=6 pos=0 ; 1219
JOIN                 ; 1220
LDC    0            ; ELSE: 37 ; 1221
JOIN                 ; 1222
LD     0 0          ;  <== sorted_map_contains  [SortedMap<T> m, int key] (as blk) ; 1223
CAR                 ; generateTupleAccess total=2 pos=0 ; 1224
ATOM                 ; 1225
LDC    1            ; for negation ; 1226
SUB                  ; 1227
SEL    1230 1236    ; IF? 38 ; 1228
RTN                  ; 1229
LD     0 0          ; THEN: 38 ; 1230
CAR                 ; generateTupleAccess total=2 pos=0 ; 1231
LD     0 1          ; var key ; 1232
LDF    836          ;  @sorted_node_has ; 1233
AP     2             ; 1234
JOIN                 ; 1235
LDC    0            ; ELSE: 38 ; 1236
JOIN                 ; 1237
LD     0 0          ;  <== sorted_map_get  [SortedMap<T> m, int key, T def] (as blk) ; 1238
CAR                 ; generateTupleAccess total=2 pos=0 ; 1239
ATOM                 ; 1240
LDC    1            ; for negation ; 1241
SUB                  ; 1242
SEL    1245 1252    ; IF? 39 ; 1243
RTN                  ; 1244
LD     0 0          ; THEN: 39 ; 1245
CAR                 ; generateTupleAccess total=2 pos=0 ; 1246
LD     0 1          ; var key ; 1247
LD     0 2          ; var def ; 1248
LDF    875          ;  @sorted_node_get ; 1249
AP     3             ; 1250
JOIN                 ; 1251
LD     0 2          ; ELSE: 39 ; 1252
JOIN                 ; 1253
LD     0 0          ;  <== sorted_map_assoc  [SortedMap<T> m, int key, T val] (as blk) ; 1254
CAR                 ; generateTupleAccess total=2 pos=0 ; 1255
LD     0 1          ; var key ; 1256
LD     0 2          ; var val ; 1257
LDF    918          ;  @sorted_node_put ; 1258
AP     3             ; 1259
LDC    0            ; just constant from code ; 1260
CONS                 ; 1261
RTN                  ; 1262
LD     0 1          ;  <== sorted_map_assoc_all  [SortedMap<T> m, ListCons<Tuple<Integer,T>> l] (as blk) ; 1263
LD     0 0          ; var m ; 1264
LDF    9473         ;  @lambda_1003 ; 1265
LDF    386          ;  @fold0 ; 1266
AP     3             ; 1267
RTN                  ; 1268
LD     0 0          ;  <== sorted_map_walk  [SortedMap<T> map, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) ; 1269
CAR                 ; generateTupleAccess total=2 pos=0 ; 1270
ATOM                 ; 1271
SEL    1274 1276    ; IF? 40 ; 1272
RTN                  ; 1273
LD     0 1          ; THEN: 40 ; 1274
JOIN                 ; 1275
LD     0 0          ; ELSE: 40 ; 1276
CAR                 ; generateTupleAccess total=2 pos=0 ; 1277
LD     0 1          ; var acc ; 1278
LD     0 2          ; var fun ; 1279
LDF    1142         ;  @sorted_node_walk ; 1280
AP     3             ; 1281
JOIN                 ; 1282
LD     0 1          ;  <== ghcstate_read_val  [GHCState state, Cons val_cons] (as blk) ; 1283
CAR                  ; 1284
ST     0 2           ; 1285
LD     0 1          ; var val_cons ; 1286
CDR                  ; 1287
ST     0 3           ; 1288
LD     0 2          ; var val_tag ; 1289
LDC    3            ; just constant from code ; 1290
CGT                  ; 1291
SEL    1298 1300     ; 1292
LD     0 2          ; var val_tag ; 1293
LDC    0            ; just constant from code ; 1294
CEQ                  ; 1295
SEL    1301 1309    ; IF? 41 ; 1296
RTN                  ; 1297
BRK                 ; branch@1298 ; 1298
JOIN                 ; 1299
JOIN                ; branch@1300 ; 1300
LD     0 0          ; THEN: 41 ; 1301
CDR                 ; generateTupleAccess total=3 pos=1 ; 1302
CAR                  ; 1303
LD     0 3          ; var val ; 1304
LDC    0            ; just constant from code ; 1305
LDF    1238         ;  @sorted_map_get ; 1306
AP     3             ; 1307
JOIN                 ; 1308
LD     0 2          ; ELSE: 41 ; 1309
LDC    1            ; just constant from code ; 1310
CEQ                  ; 1311
SEL    1314 1328    ; IF? 92 ; 1312
JOIN                 ; 1313
LD     0 0          ; THEN: 92 ; 1314
CDR                 ; generateTupleAccess total=3 pos=2 ; 1315
CDR                  ; 1316
LD     0 0          ; var state ; 1317
CDR                 ; generateTupleAccess total=3 pos=1 ; 1318
CAR                  ; 1319
LD     0 3          ; var val ; 1320
LDC    0            ; just constant from code ; 1321
LDF    1238         ;  @sorted_map_get ; 1322
AP     3             ; 1323
LDC    0            ; just constant from code ; 1324
LDF    1238         ;  @sorted_map_get ; 1325
AP     3             ; 1326
JOIN                 ; 1327
LD     0 2          ; ELSE: 92 ; 1328
LDC    2            ; just constant from code ; 1329
CEQ                  ; 1330
SEL    1333 1335    ; IF? 93 ; 1331
JOIN                 ; 1332
LD     0 3          ; THEN: 93 ; 1333
JOIN                 ; 1334
LD     0 0          ; ELSE: 93 ; 1335
CDR                 ; generateTupleAccess total=3 pos=2 ; 1336
CDR                  ; 1337
LD     0 3          ; var val ; 1338
LDC    0            ; just constant from code ; 1339
LDF    1238         ;  @sorted_map_get ; 1340
AP     3             ; 1341
JOIN                 ; 1342
LD     0 1          ;  <== ghcstate_write_val  [GHCState state, Cons arg_cons, Integer val] (as blk) ; 1343
CAR                  ; 1344
ST     0 3           ; 1345
LD     0 3          ; var arg_tag ; 1346
LDC    3            ; just constant from code ; 1347
CGT                  ; 1348
SEL    1359 1361     ; 1349
LD     0 3          ; var arg_tag ; 1350
LDC    2            ; just constant from code ; 1351
CEQ                  ; 1352
SEL    1362 1364     ; 1353
LD     0 3          ; var arg_tag ; 1354
LDC    0            ; just constant from code ; 1355
CEQ                  ; 1356
SEL    1365 1381    ; IF? 42 ; 1357
RTN                  ; 1358
BRK                 ; branch@1359 ; 1359
JOIN                 ; 1360
JOIN                ; branch@1361 ; 1361
BRK                 ; branch@1362 ; 1362
JOIN                 ; 1363
JOIN                ; branch@1364 ; 1364
LD     0 0          ; THEN: 42 ; 1365
CAR                 ; generateTupleAccess total=3 pos=0 ; 1366
LD     0 0          ; var state ; 1367
CDR                 ; generateTupleAccess total=3 pos=1 ; 1368
CAR                  ; 1369
LD     0 1          ; var arg_cons ; 1370
CDR                  ; 1371
LD     0 2          ; var val ; 1372
LDF    1254         ;  @sorted_map_assoc ; 1373
AP     3             ; 1374
LD     0 0          ; var state ; 1375
CDR                 ; generateTupleAccess total=3 pos=2 ; 1376
CDR                  ; 1377
CONS                 ; 1378
CONS                 ; 1379
JOIN                 ; 1380
LD     0 3          ; ELSE: 42 ; 1381
LDC    1            ; just constant from code ; 1382
CEQ                  ; 1383
SEL    1386 1408    ; IF? 94 ; 1384
JOIN                 ; 1385
LD     0 0          ; THEN: 94 ; 1386
CAR                 ; generateTupleAccess total=3 pos=0 ; 1387
LD     0 0          ; var state ; 1388
CDR                 ; generateTupleAccess total=3 pos=1 ; 1389
CAR                  ; 1390
LD     0 0          ; var state ; 1391
CDR                 ; generateTupleAccess total=3 pos=1 ; 1392
CAR                  ; 1393
LD     0 1          ; var arg_cons ; 1394
CDR                  ; 1395
LDC    0            ; just constant from code ; 1396
LDF    1238         ;  @sorted_map_get ; 1397
AP     3             ; 1398
LD     0 2          ; var val ; 1399
LDF    1254         ;  @sorted_map_assoc ; 1400
AP     3             ; 1401
LD     0 0          ; var state ; 1402
CDR                 ; generateTupleAccess total=3 pos=2 ; 1403
CDR                  ; 1404
CONS                 ; 1405
CONS                 ; 1406
JOIN                 ; 1407
LD     0 0          ; ELSE: 94 ; 1408
CAR                 ; generateTupleAccess total=3 pos=0 ; 1409
LD     0 0          ; var state ; 1410
CDR                 ; generateTupleAccess total=3 pos=1 ; 1411
CAR                  ; 1412
LD     0 0          ; var state ; 1413
CDR                 ; generateTupleAccess total=3 pos=2 ; 1414
CDR                  ; 1415
LD     0 1          ; var arg_cons ; 1416
CDR                  ; 1417
LD     0 2          ; var val ; 1418
LDF    1254         ;  @sorted_map_assoc ; 1419
AP     3             ; 1420
CONS                 ; 1421
CONS                 ; 1422
JOIN                 ; 1423
LD     0 0          ;  <== ghcstate_assoc  [GHCState state, Cons arg_cons, Cons val_cons] (as blk) ; 1424
LD     0 2          ; var val_cons ; 1425
LDC 0               ; local var space ; 1426
LDC 0               ; local var space ; 1427
LDF    1283         ;  @ghcstate_read_val ; 1428
AP     4             ; 1429
ST     0 3           ; 1430
LD     0 0          ; var state ; 1431
LD     0 1          ; var arg_cons ; 1432
LD     0 3          ; var val ; 1433
LDC 0               ; local var space ; 1434
LDF    1343         ;  @ghcstate_write_val ; 1435
AP     4             ; 1436
RTN                  ; 1437
LD     0 0          ;  <== processGhostInfoRequest  [WorldState world, GHCState state, Integer index, int requestType] (as blk) ; 1438
CDR                 ; generateTupleAccess total=4 pos=2 ; 1439
CDR                  ; 1440
CAR                  ; 1441
LD     0 2          ; var index ; 1442
LD     0 1          ; var state ; 1443
CAR                 ; generateTupleAccess total=3 pos=0 ; 1444
LDF    469          ;  @list_item_def ; 1445
AP     3             ; 1446
ST     0 4           ; 1447
LDC    0            ; just constant from code ; 1448
LDC    0            ; just constant from code ; 1449
CONS                 ; 1450
ST     0 5           ; 1451
LDC    4            ; just constant from code ; 1452
LD     0 3          ; var requestType ; 1453
CEQ                  ; 1454
SEL    1457 1477    ; IF? 43 ; 1455
RTN                  ; 1456
LD     0 4          ; THEN: 43 ; 1457
LD     0 1          ; var state ; 1458
CDR                 ; generateTupleAccess total=3 pos=1 ; 1459
CAR                  ; 1460
LDC    0            ; just constant from code ; 1461
LD     0 5          ; var startPos ; 1462
CAR                 ; generateTupleAccess total=2 pos=0 ; 1463
LDF    1254         ;  @sorted_map_assoc ; 1464
AP     3             ; 1465
LDC    1            ; just constant from code ; 1466
LD     0 5          ; var startPos ; 1467
CDR                 ; generateTupleAccess total=2 pos=1 ; 1468
LDF    1254         ;  @sorted_map_assoc ; 1469
AP     3             ; 1470
LD     0 1          ; var state ; 1471
CDR                 ; generateTupleAccess total=3 pos=2 ; 1472
CDR                  ; 1473
CONS                 ; 1474
CONS                 ; 1475
JOIN                 ; 1476
LDC    5            ; ELSE: 43 ; 1477
LD     0 3          ; var requestType ; 1478
CEQ                  ; 1479
SEL    1482 1506    ; IF? 95 ; 1480
JOIN                 ; 1481
LD     0 4          ; THEN: 95 ; 1482
LD     0 1          ; var state ; 1483
CDR                 ; generateTupleAccess total=3 pos=1 ; 1484
CAR                  ; 1485
LDC    0            ; just constant from code ; 1486
LD     0 4          ; var gs ; 1487
CDR                 ; generateTupleAccess total=3 pos=1 ; 1488
CAR                  ; 1489
CAR                 ; generateTupleAccess total=2 pos=0 ; 1490
LDF    1254         ;  @sorted_map_assoc ; 1491
AP     3             ; 1492
LDC    1            ; just constant from code ; 1493
LD     0 4          ; var gs ; 1494
CDR                 ; generateTupleAccess total=3 pos=1 ; 1495
CAR                  ; 1496
CDR                 ; generateTupleAccess total=2 pos=1 ; 1497
LDF    1254         ;  @sorted_map_assoc ; 1498
AP     3             ; 1499
LD     0 1          ; var state ; 1500
CDR                 ; generateTupleAccess total=3 pos=2 ; 1501
CDR                  ; 1502
CONS                 ; 1503
CONS                 ; 1504
JOIN                 ; 1505
LD     0 4          ; ELSE: 95 ; 1506
LD     0 1          ; var state ; 1507
CDR                 ; generateTupleAccess total=3 pos=1 ; 1508
CAR                  ; 1509
LDC    0            ; just constant from code ; 1510
LD     0 4          ; var gs ; 1511
CAR                 ; generateTupleAccess total=3 pos=0 ; 1512
LDF    1254         ;  @sorted_map_assoc ; 1513
AP     3             ; 1514
LDC    1            ; just constant from code ; 1515
LD     0 4          ; var gs ; 1516
CDR                 ; generateTupleAccess total=3 pos=2 ; 1517
CDR                  ; 1518
LDF    1254         ;  @sorted_map_assoc ; 1519
AP     3             ; 1520
LD     0 1          ; var state ; 1521
CDR                 ; generateTupleAccess total=3 pos=2 ; 1522
CDR                  ; 1523
CONS                 ; 1524
CONS                 ; 1525
JOIN                 ; 1526
LD     0 1          ;  <== processGhostInt  [WorldState world, GHCState state, Integer num, Cons arg] (as blk) ; 1527
CAR                 ; generateTupleAccess total=3 pos=0 ; 1528
ST     0 4           ; 1529
LDC    0            ; just constant from code ; 1530
ST     0 5           ; 1531
LDC    0            ; just constant from code ; 1532
LD     0 2          ; var num ; 1533
CEQ                  ; 1534
SEL    1537 1560    ; IF? 44 ; 1535
RTN                  ; 1536
LD     0 4          ; THEN: 44 ; 1537
CAR                 ; generateTupleAccess total=3 pos=0 ; 1538
LD     0 4          ; var gs ; 1539
CDR                 ; generateTupleAccess total=3 pos=1 ; 1540
CAR                  ; 1541
LD     0 1          ; var state ; 1542
CDR                 ; generateTupleAccess total=3 pos=1 ; 1543
CAR                  ; 1544
LDC    0            ; just constant from code ; 1545
LDC    0            ; just constant from code ; 1546
LDF    1238         ;  @sorted_map_get ; 1547
AP     3             ; 1548
CONS                 ; 1549
CONS                 ; 1550
LD     0 1          ; var state ; 1551
CDR                 ; generateTupleAccess total=3 pos=1 ; 1552
CAR                  ; 1553
LD     0 1          ; var state ; 1554
CDR                 ; generateTupleAccess total=3 pos=2 ; 1555
CDR                  ; 1556
CONS                 ; 1557
CONS                 ; 1558
JOIN                 ; 1559
LDC    1            ; ELSE: 44 ; 1560
LD     0 2          ; var num ; 1561
CEQ                  ; 1562
SEL    1565 1593    ; IF? 96 ; 1563
JOIN                 ; 1564
LD     0 4          ; THEN: 96 ; 1565
LD     0 1          ; var state ; 1566
CDR                 ; generateTupleAccess total=3 pos=1 ; 1567
CAR                  ; 1568
LDC    0            ; just constant from code ; 1569
LD     0 0          ; var world ; 1570
CDR                 ; generateTupleAccess total=4 pos=1 ; 1571
CAR                  ; 1572
CDR                 ; generateTupleAccess total=5 pos=1 ; 1573
CAR                  ; 1574
CAR                 ; generateTupleAccess total=2 pos=0 ; 1575
LDF    1254         ;  @sorted_map_assoc ; 1576
AP     3             ; 1577
LDC    1            ; just constant from code ; 1578
LD     0 0          ; var world ; 1579
CDR                 ; generateTupleAccess total=4 pos=1 ; 1580
CAR                  ; 1581
CDR                 ; generateTupleAccess total=5 pos=1 ; 1582
CAR                  ; 1583
CDR                 ; generateTupleAccess total=2 pos=1 ; 1584
LDF    1254         ;  @sorted_map_assoc ; 1585
AP     3             ; 1586
LD     0 1          ; var state ; 1587
CDR                 ; generateTupleAccess total=3 pos=2 ; 1588
CDR                  ; 1589
CONS                 ; 1590
CONS                 ; 1591
JOIN                 ; 1592
LDC    2            ; ELSE: 96 ; 1593
LD     0 2          ; var num ; 1594
CEQ                  ; 1595
SEL    1598 1626    ; IF? 97 ; 1596
JOIN                 ; 1597
LD     0 4          ; THEN: 97 ; 1598
LD     0 1          ; var state ; 1599
CDR                 ; generateTupleAccess total=3 pos=1 ; 1600
CAR                  ; 1601
LDC    0            ; just constant from code ; 1602
LD     0 0          ; var world ; 1603
CDR                 ; generateTupleAccess total=4 pos=1 ; 1604
CAR                  ; 1605
CDR                 ; generateTupleAccess total=5 pos=1 ; 1606
CAR                  ; 1607
CAR                 ; generateTupleAccess total=2 pos=0 ; 1608
LDF    1254         ;  @sorted_map_assoc ; 1609
AP     3             ; 1610
LDC    1            ; just constant from code ; 1611
LD     0 0          ; var world ; 1612
CDR                 ; generateTupleAccess total=4 pos=1 ; 1613
CAR                  ; 1614
CDR                 ; generateTupleAccess total=5 pos=1 ; 1615
CAR                  ; 1616
CDR                 ; generateTupleAccess total=2 pos=1 ; 1617
LDF    1254         ;  @sorted_map_assoc ; 1618
AP     3             ; 1619
LD     0 1          ; var state ; 1620
CDR                 ; generateTupleAccess total=3 pos=2 ; 1621
CDR                  ; 1622
CONS                 ; 1623
CONS                 ; 1624
JOIN                 ; 1625
LDC    3            ; ELSE: 97 ; 1626
LD     0 2          ; var num ; 1627
CEQ                  ; 1628
SEL    1631 1645    ; IF? 98 ; 1629
JOIN                 ; 1630
LD     0 4          ; THEN: 98 ; 1631
LD     0 1          ; var state ; 1632
CDR                 ; generateTupleAccess total=3 pos=1 ; 1633
CAR                  ; 1634
LDC    0            ; just constant from code ; 1635
LD     0 5          ; var currentGhostIndex ; 1636
LDF    1254         ;  @sorted_map_assoc ; 1637
AP     3             ; 1638
LD     0 1          ; var state ; 1639
CDR                 ; generateTupleAccess total=3 pos=2 ; 1640
CDR                  ; 1641
CONS                 ; 1642
CONS                 ; 1643
JOIN                 ; 1644
LDC    4            ; ELSE: 98 ; 1645
LD     0 2          ; var num ; 1646
CEQ                  ; 1647
SEL    1650 1665    ; IF? 99 ; 1648
JOIN                 ; 1649
LD     0 0          ; THEN: 99 ; 1650
LD     0 1          ; var state ; 1651
LD     0 1          ; var state ; 1652
CDR                 ; generateTupleAccess total=3 pos=1 ; 1653
CAR                  ; 1654
LDC    0            ; just constant from code ; 1655
LDC    0            ; just constant from code ; 1656
LDF    1238         ;  @sorted_map_get ; 1657
AP     3             ; 1658
LDC    4            ; just constant from code ; 1659
LDC 0               ; local var space ; 1660
LDC 0               ; local var space ; 1661
LDF    1438         ;  @processGhostInfoRequest ; 1662
AP     6             ; 1663
JOIN                 ; 1664
LDC    5            ; ELSE: 99 ; 1665
LD     0 2          ; var num ; 1666
CEQ                  ; 1667
SEL    1670 1685    ; IF? 100 ; 1668
JOIN                 ; 1669
LD     0 0          ; THEN: 100 ; 1670
LD     0 1          ; var state ; 1671
LD     0 1          ; var state ; 1672
CDR                 ; generateTupleAccess total=3 pos=1 ; 1673
CAR                  ; 1674
LDC    0            ; just constant from code ; 1675
LDC    0            ; just constant from code ; 1676
LDF    1238         ;  @sorted_map_get ; 1677
AP     3             ; 1678
LDC    5            ; just constant from code ; 1679
LDC 0               ; local var space ; 1680
LDC 0               ; local var space ; 1681
LDF    1438         ;  @processGhostInfoRequest ; 1682
AP     6             ; 1683
JOIN                 ; 1684
LDC    6            ; ELSE: 100 ; 1685
LD     0 2          ; var num ; 1686
CEQ                  ; 1687
SEL    1690 1705    ; IF? 101 ; 1688
JOIN                 ; 1689
LD     0 0          ; THEN: 101 ; 1690
LD     0 1          ; var state ; 1691
LD     0 1          ; var state ; 1692
CDR                 ; generateTupleAccess total=3 pos=1 ; 1693
CAR                  ; 1694
LDC    0            ; just constant from code ; 1695
LDC    0            ; just constant from code ; 1696
LDF    1238         ;  @sorted_map_get ; 1697
AP     3             ; 1698
LDC    6            ; just constant from code ; 1699
LDC 0               ; local var space ; 1700
LDC 0               ; local var space ; 1701
LDF    1438         ;  @processGhostInfoRequest ; 1702
AP     6             ; 1703
JOIN                 ; 1704
LDC    7            ; ELSE: 101 ; 1705
LD     0 2          ; var num ; 1706
CEQ                  ; 1707
SEL    1710 1741    ; IF? 102 ; 1708
JOIN                 ; 1709
LD     0 4          ; THEN: 102 ; 1710
LD     0 1          ; var state ; 1711
CDR                 ; generateTupleAccess total=3 pos=1 ; 1712
CAR                  ; 1713
LDC    0            ; just constant from code ; 1714
LD     0 0          ; var world ; 1715
CAR                 ; generateTupleAccess total=4 pos=0 ; 1716
LD     0 1          ; var state ; 1717
CDR                 ; generateTupleAccess total=3 pos=1 ; 1718
CAR                  ; 1719
LDC    0            ; just constant from code ; 1720
LDC    0            ; just constant from code ; 1721
LDF    1238         ;  @sorted_map_get ; 1722
AP     3             ; 1723
LD     0 1          ; var state ; 1724
CDR                 ; generateTupleAccess total=3 pos=1 ; 1725
CAR                  ; 1726
LDC    1            ; just constant from code ; 1727
LDC    0            ; just constant from code ; 1728
LDF    1238         ;  @sorted_map_get ; 1729
AP     3             ; 1730
LDF    3454         ;  @getMapItem ; 1731
AP     3             ; 1732
LDF    1254         ;  @sorted_map_assoc ; 1733
AP     3             ; 1734
LD     0 1          ; var state ; 1735
CDR                 ; generateTupleAccess total=3 pos=2 ; 1736
CDR                  ; 1737
CONS                 ; 1738
CONS                 ; 1739
JOIN                 ; 1740
LD     0 1          ; ELSE: 102 ; 1741
JOIN                 ; 1742
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 1743
LD     0 0          ; var f ; 1744
AP     1             ; 1745
CAR                  ; 1746
ST     0 3           ; 1747
LD     0 2          ; var n ; 1748
LDC    0            ; just constant from code ; 1749
CEQ                  ; 1750
SEL    1753 1757    ; IF? 45 ; 1751
RTN                  ; 1752
LD     0 3          ; THEN: 45 ; 1753
LDC    0            ; NULL literal ; 1754
CONS                 ; 1755
JOIN                 ; 1756
LD     0 3          ; ELSE: 45 ; 1757
LD     0 0          ; var f ; 1758
LD     0 1          ; var a ; 1759
LD     0 0          ; var f ; 1760
AP     1             ; 1761
CDR                  ; 1762
LD     0 2          ; var n ; 1763
LDC    1            ; just constant from code ; 1764
SUB                  ; 1765
LDC 0               ; local var space ; 1766
LDF    712          ;  @produce_n ; 1767
AP     4             ; 1768
CONS                 ; 1769
JOIN                 ; 1770
LDF    9481         ;  <== bit_split  [Integer x] (as blk), ALSO: @lambda_1004 ; 1771
LD     0 0          ; var x ; 1772
LDC    7            ; just constant from code ; 1773
LDC 0               ; local var space ; 1774
LDF    712          ;  @produce_n ; 1775
AP     4             ; 1776
RTN                  ; 1777
LD     0 0          ;  <== emulate_bitop  [Integer x, Integer y, Function2<Integer,Integer,Integer> f] (as blk) ; 1778
LDF    1771         ;  @bit_split ; 1779
AP     1             ; 1780
ST     0 3           ; 1781
LD     0 1          ; var y ; 1782
LDF    1771         ;  @bit_split ; 1783
AP     1             ; 1784
ST     0 4           ; 1785
LDF    9498         ;  @lambda_1005 ; 1786
LDC    0            ; just constant from code ; 1787
LD     0 2          ; var f ; 1788
LD     0 3          ; var bits_x ; 1789
LD     0 4          ; var bits_y ; 1790
LDF    660          ;  @zip_with ; 1791
AP     3             ; 1792
LDF    48           ;  @foldr ; 1793
AP     3             ; 1794
RTN                  ; 1795
LD     0 0          ;  <== ghcstate_bitop  [GHCState state, Cons arg_cons, Cons val_cons, int type] (as blk) ; 1796
LD     0 1          ; var arg_cons ; 1797
LDC 0               ; local var space ; 1798
LDC 0               ; local var space ; 1799
LDF    1283         ;  @ghcstate_read_val ; 1800
AP     4             ; 1801
ST     0 4           ; 1802
LD     0 0          ; var state ; 1803
LD     0 2          ; var val_cons ; 1804
LDC 0               ; local var space ; 1805
LDC 0               ; local var space ; 1806
LDF    1283         ;  @ghcstate_read_val ; 1807
AP     4             ; 1808
ST     0 5           ; 1809
LD     0 4          ; var arg ; 1810
LD     0 5          ; var val ; 1811
LD     0 3          ; var type ; 1812
LDC    7            ; GHCOps.AND ; 1813
CEQ                  ; 1814
SEL    1828 1830    ; IF? 46 ; 1815
LDC 0               ; local var space ; 1816
LDC 0               ; local var space ; 1817
LDF    1778         ;  @emulate_bitop ; 1818
AP     5             ; 1819
ST     0 6           ; 1820
LD     0 0          ; var state ; 1821
LD     0 1          ; var arg_cons ; 1822
LD     0 6          ; var result ; 1823
LDC 0               ; local var space ; 1824
LDF    1343         ;  @ghcstate_write_val ; 1825
AP     4             ; 1826
RTN                  ; 1827
LDF    10074        ; THEN: 46, ALSO: @lambda_1052 ; 1828
JOIN                 ; 1829
LD     0 3          ; ELSE: 46 ; 1830
LDC    8            ; GHCOps.OR ; 1831
CEQ                  ; 1832
SEL    1835 1837    ; IF? 103 ; 1833
JOIN                 ; 1834
LDF    10078        ; THEN: 103, ALSO: @lambda_1053 ; 1835
JOIN                 ; 1836
LDF    10089        ; ELSE: 103, ALSO: @lambda_1054 ; 1837
JOIN                 ; 1838
LD     0 4          ;  <== runGhostStep  [SortedMap<Cons> prog, WorldState world, int lev, GHCState state, Cons step] (as blk) ; 1839
CAR                  ; 1840
ST     0 5           ; 1841
LD     0 4          ; var step ; 1842
CDR                  ; 1843
ST     0 6           ; 1844
LD     0 3          ; var state ; 1845
CAR                 ; generateTupleAccess total=3 pos=0 ; 1846
LD     0 3          ; var state ; 1847
CDR                 ; generateTupleAccess total=3 pos=1 ; 1848
CAR                  ; 1849
LDC    8            ; just constant from code ; 1850
LD     0 3          ; var state ; 1851
CDR                 ; generateTupleAccess total=3 pos=1 ; 1852
CAR                  ; 1853
LDC    8            ; just constant from code ; 1854
LDC    0            ; just constant from code ; 1855
LDF    1238         ;  @sorted_map_get ; 1856
AP     3             ; 1857
LDC    1            ; just constant from code ; 1858
ADD                  ; 1859
LDF    1254         ;  @sorted_map_assoc ; 1860
AP     3             ; 1861
LD     0 3          ; var state ; 1862
CDR                 ; generateTupleAccess total=3 pos=2 ; 1863
CDR                  ; 1864
CONS                 ; 1865
CONS                 ; 1866
ST     0 7           ; 1867
LDC    0            ; GHCOps.MOV ; 1868
LD     0 5          ; var opcode ; 1869
CEQ                  ; 1870
SEL    1873 1890    ; IF? 47 ; 1871
RTN                  ; 1872
LD     0 0          ; THEN: 47 ; 1873
LD     0 1          ; var world ; 1874
LD     0 2          ; var lev ; 1875
LD     0 7          ; var inc_pc ; 1876
LD     0 6          ; var args ; 1877
CAR                  ; 1878
LD     0 6          ; var args ; 1879
CDR                  ; 1880
CAR                  ; 1881
LDC 0               ; local var space ; 1882
LDF    1424         ;  @ghcstate_assoc ; 1883
AP     4             ; 1884
LDC 0               ; local var space ; 1885
LDC 0               ; local var space ; 1886
LDF    2336         ;  @runGhost ; 1887
AP     6             ; 1888
JOIN                 ; 1889
LDC    1            ; ELSE: 47 ; 1890
LD     0 5          ; var opcode ; 1891
CEQ                  ; 1892
SEL    1895 1918    ; IF? 104 ; 1893
JOIN                 ; 1894
LD     0 0          ; THEN: 104 ; 1895
LD     0 1          ; var world ; 1896
LD     0 2          ; var lev ; 1897
LD     0 7          ; var inc_pc ; 1898
LD     0 6          ; var args ; 1899
CAR                  ; 1900
LD     0 7          ; var inc_pc ; 1901
LD     0 6          ; var args ; 1902
CAR                  ; 1903
LDC 0               ; local var space ; 1904
LDC 0               ; local var space ; 1905
LDF    1283         ;  @ghcstate_read_val ; 1906
AP     4             ; 1907
LDC    1            ; just constant from code ; 1908
ADD                  ; 1909
LDC 0               ; local var space ; 1910
LDF    1343         ;  @ghcstate_write_val ; 1911
AP     4             ; 1912
LDC 0               ; local var space ; 1913
LDC 0               ; local var space ; 1914
LDF    2336         ;  @runGhost ; 1915
AP     6             ; 1916
JOIN                 ; 1917
LDC    2            ; ELSE: 104 ; 1918
LD     0 5          ; var opcode ; 1919
CEQ                  ; 1920
SEL    1923 1946    ; IF? 105 ; 1921
JOIN                 ; 1922
LD     0 0          ; THEN: 105 ; 1923
LD     0 1          ; var world ; 1924
LD     0 2          ; var lev ; 1925
LD     0 7          ; var inc_pc ; 1926
LD     0 6          ; var args ; 1927
CAR                  ; 1928
LD     0 7          ; var inc_pc ; 1929
LD     0 6          ; var args ; 1930
CAR                  ; 1931
LDC 0               ; local var space ; 1932
LDC 0               ; local var space ; 1933
LDF    1283         ;  @ghcstate_read_val ; 1934
AP     4             ; 1935
LDC    1            ; just constant from code ; 1936
SUB                  ; 1937
LDC 0               ; local var space ; 1938
LDF    1343         ;  @ghcstate_write_val ; 1939
AP     4             ; 1940
LDC 0               ; local var space ; 1941
LDC 0               ; local var space ; 1942
LDF    2336         ;  @runGhost ; 1943
AP     6             ; 1944
JOIN                 ; 1945
LDC    3            ; ELSE: 105 ; 1946
LD     0 5          ; var opcode ; 1947
CEQ                  ; 1948
SEL    1951 1981    ; IF? 106 ; 1949
JOIN                 ; 1950
LD     0 0          ; THEN: 106 ; 1951
LD     0 1          ; var world ; 1952
LD     0 2          ; var lev ; 1953
LD     0 7          ; var inc_pc ; 1954
LD     0 6          ; var args ; 1955
CAR                  ; 1956
LD     0 7          ; var inc_pc ; 1957
LD     0 6          ; var args ; 1958
CAR                  ; 1959
LDC 0               ; local var space ; 1960
LDC 0               ; local var space ; 1961
LDF    1283         ;  @ghcstate_read_val ; 1962
AP     4             ; 1963
LD     0 7          ; var inc_pc ; 1964
LD     0 6          ; var args ; 1965
CDR                  ; 1966
CAR                  ; 1967
LDC 0               ; local var space ; 1968
LDC 0               ; local var space ; 1969
LDF    1283         ;  @ghcstate_read_val ; 1970
AP     4             ; 1971
ADD                  ; 1972
LDC 0               ; local var space ; 1973
LDF    1343         ;  @ghcstate_write_val ; 1974
AP     4             ; 1975
LDC 0               ; local var space ; 1976
LDC 0               ; local var space ; 1977
LDF    2336         ;  @runGhost ; 1978
AP     6             ; 1979
JOIN                 ; 1980
LDC    4            ; ELSE: 106 ; 1981
LD     0 5          ; var opcode ; 1982
CEQ                  ; 1983
SEL    1986 2016    ; IF? 107 ; 1984
JOIN                 ; 1985
LD     0 0          ; THEN: 107 ; 1986
LD     0 1          ; var world ; 1987
LD     0 2          ; var lev ; 1988
LD     0 7          ; var inc_pc ; 1989
LD     0 6          ; var args ; 1990
CAR                  ; 1991
LD     0 7          ; var inc_pc ; 1992
LD     0 6          ; var args ; 1993
CAR                  ; 1994
LDC 0               ; local var space ; 1995
LDC 0               ; local var space ; 1996
LDF    1283         ;  @ghcstate_read_val ; 1997
AP     4             ; 1998
LD     0 7          ; var inc_pc ; 1999
LD     0 6          ; var args ; 2000
CDR                  ; 2001
CAR                  ; 2002
LDC 0               ; local var space ; 2003
LDC 0               ; local var space ; 2004
LDF    1283         ;  @ghcstate_read_val ; 2005
AP     4             ; 2006
SUB                  ; 2007
LDC 0               ; local var space ; 2008
LDF    1343         ;  @ghcstate_write_val ; 2009
AP     4             ; 2010
LDC 0               ; local var space ; 2011
LDC 0               ; local var space ; 2012
LDF    2336         ;  @runGhost ; 2013
AP     6             ; 2014
JOIN                 ; 2015
LDC    5            ; ELSE: 107 ; 2016
LD     0 5          ; var opcode ; 2017
CEQ                  ; 2018
SEL    2021 2051    ; IF? 108 ; 2019
JOIN                 ; 2020
LD     0 0          ; THEN: 108 ; 2021
LD     0 1          ; var world ; 2022
LD     0 2          ; var lev ; 2023
LD     0 7          ; var inc_pc ; 2024
LD     0 6          ; var args ; 2025
CAR                  ; 2026
LD     0 7          ; var inc_pc ; 2027
LD     0 6          ; var args ; 2028
CAR                  ; 2029
LDC 0               ; local var space ; 2030
LDC 0               ; local var space ; 2031
LDF    1283         ;  @ghcstate_read_val ; 2032
AP     4             ; 2033
LD     0 7          ; var inc_pc ; 2034
LD     0 6          ; var args ; 2035
CDR                  ; 2036
CAR                  ; 2037
LDC 0               ; local var space ; 2038
LDC 0               ; local var space ; 2039
LDF    1283         ;  @ghcstate_read_val ; 2040
AP     4             ; 2041
MUL                  ; 2042
LDC 0               ; local var space ; 2043
LDF    1343         ;  @ghcstate_write_val ; 2044
AP     4             ; 2045
LDC 0               ; local var space ; 2046
LDC 0               ; local var space ; 2047
LDF    2336         ;  @runGhost ; 2048
AP     6             ; 2049
JOIN                 ; 2050
LDC    6            ; ELSE: 108 ; 2051
LD     0 5          ; var opcode ; 2052
CEQ                  ; 2053
SEL    2056 2086    ; IF? 109 ; 2054
JOIN                 ; 2055
LD     0 0          ; THEN: 109 ; 2056
LD     0 1          ; var world ; 2057
LD     0 2          ; var lev ; 2058
LD     0 7          ; var inc_pc ; 2059
LD     0 6          ; var args ; 2060
CAR                  ; 2061
LD     0 7          ; var inc_pc ; 2062
LD     0 6          ; var args ; 2063
CAR                  ; 2064
LDC 0               ; local var space ; 2065
LDC 0               ; local var space ; 2066
LDF    1283         ;  @ghcstate_read_val ; 2067
AP     4             ; 2068
LD     0 7          ; var inc_pc ; 2069
LD     0 6          ; var args ; 2070
CDR                  ; 2071
CAR                  ; 2072
LDC 0               ; local var space ; 2073
LDC 0               ; local var space ; 2074
LDF    1283         ;  @ghcstate_read_val ; 2075
AP     4             ; 2076
DIV                  ; 2077
LDC 0               ; local var space ; 2078
LDF    1343         ;  @ghcstate_write_val ; 2079
AP     4             ; 2080
LDC 0               ; local var space ; 2081
LDC 0               ; local var space ; 2082
LDF    2336         ;  @runGhost ; 2083
AP     6             ; 2084
JOIN                 ; 2085
LDC    7            ; ELSE: 109 ; 2086
LD     0 5          ; var opcode ; 2087
CEQ                  ; 2088
SEL    2091 2111    ; IF? 110 ; 2089
JOIN                 ; 2090
LD     0 0          ; THEN: 110 ; 2091
LD     0 1          ; var world ; 2092
LD     0 2          ; var lev ; 2093
LD     0 7          ; var inc_pc ; 2094
LD     0 6          ; var args ; 2095
CAR                  ; 2096
LD     0 6          ; var args ; 2097
CDR                  ; 2098
CAR                  ; 2099
LDC    7            ; GHCOps.AND ; 2100
LDC 0               ; local var space ; 2101
LDC 0               ; local var space ; 2102
LDC 0               ; local var space ; 2103
LDF    1796         ;  @ghcstate_bitop ; 2104
AP     7             ; 2105
LDC 0               ; local var space ; 2106
LDC 0               ; local var space ; 2107
LDF    2336         ;  @runGhost ; 2108
AP     6             ; 2109
JOIN                 ; 2110
LDC    8            ; ELSE: 110 ; 2111
LD     0 5          ; var opcode ; 2112
CEQ                  ; 2113
SEL    2116 2136    ; IF? 111 ; 2114
JOIN                 ; 2115
LD     0 0          ; THEN: 111 ; 2116
LD     0 1          ; var world ; 2117
LD     0 2          ; var lev ; 2118
LD     0 7          ; var inc_pc ; 2119
LD     0 6          ; var args ; 2120
CAR                  ; 2121
LD     0 6          ; var args ; 2122
CDR                  ; 2123
CAR                  ; 2124
LDC    8            ; GHCOps.OR ; 2125
LDC 0               ; local var space ; 2126
LDC 0               ; local var space ; 2127
LDC 0               ; local var space ; 2128
LDF    1796         ;  @ghcstate_bitop ; 2129
AP     7             ; 2130
LDC 0               ; local var space ; 2131
LDC 0               ; local var space ; 2132
LDF    2336         ;  @runGhost ; 2133
AP     6             ; 2134
JOIN                 ; 2135
LDC    9            ; ELSE: 111 ; 2136
LD     0 5          ; var opcode ; 2137
CEQ                  ; 2138
SEL    2141 2161    ; IF? 112 ; 2139
JOIN                 ; 2140
LD     0 0          ; THEN: 112 ; 2141
LD     0 1          ; var world ; 2142
LD     0 2          ; var lev ; 2143
LD     0 7          ; var inc_pc ; 2144
LD     0 6          ; var args ; 2145
CAR                  ; 2146
LD     0 6          ; var args ; 2147
CDR                  ; 2148
CAR                  ; 2149
LDC    9            ; GHCOps.XOR ; 2150
LDC 0               ; local var space ; 2151
LDC 0               ; local var space ; 2152
LDC 0               ; local var space ; 2153
LDF    1796         ;  @ghcstate_bitop ; 2154
AP     7             ; 2155
LDC 0               ; local var space ; 2156
LDC 0               ; local var space ; 2157
LDF    2336         ;  @runGhost ; 2158
AP     6             ; 2159
JOIN                 ; 2160
LDC    10           ; ELSE: 112 ; 2161
LD     0 5          ; var opcode ; 2162
CEQ                  ; 2163
SEL    2166 2192    ; IF? 113 ; 2164
JOIN                 ; 2165
LD     0 0          ; THEN: 113 ; 2166
LD     0 1          ; var world ; 2167
LD     0 2          ; var lev ; 2168
LD     0 3          ; var state ; 2169
LD     0 6          ; var args ; 2170
CDR                  ; 2171
CDR                  ; 2172
LDC 0               ; local var space ; 2173
LDC 0               ; local var space ; 2174
LDF    1283         ;  @ghcstate_read_val ; 2175
AP     4             ; 2176
LD     0 3          ; var state ; 2177
LD     0 6          ; var args ; 2178
CDR                  ; 2179
CAR                  ; 2180
LDC 0               ; local var space ; 2181
LDC 0               ; local var space ; 2182
LDF    1283         ;  @ghcstate_read_val ; 2183
AP     4             ; 2184
CGT                  ; 2185
SEL    2197 2213    ; IF? 114 ; 2186
LDC 0               ; local var space ; 2187
LDC 0               ; local var space ; 2188
LDF    2336         ;  @runGhost ; 2189
AP     6             ; 2190
JOIN                 ; 2191
LDC    11           ; ELSE: 113 ; 2192
LD     0 5          ; var opcode ; 2193
CEQ                  ; 2194
SEL    2215 2241    ; IF? 115 ; 2195
JOIN                 ; 2196
LD     0 3          ; THEN: 114 ; 2197
CAR                 ; generateTupleAccess total=3 pos=0 ; 2198
LD     0 3          ; var state ; 2199
CDR                 ; generateTupleAccess total=3 pos=1 ; 2200
CAR                  ; 2201
LDC    8            ; just constant from code ; 2202
LD     0 6          ; var args ; 2203
CAR                  ; 2204
LDF    1254         ;  @sorted_map_assoc ; 2205
AP     3             ; 2206
LD     0 3          ; var state ; 2207
CDR                 ; generateTupleAccess total=3 pos=2 ; 2208
CDR                  ; 2209
CONS                 ; 2210
CONS                 ; 2211
JOIN                 ; 2212
LD     0 3          ; ELSE: 114 ; 2213
JOIN                 ; 2214
LD     0 0          ; THEN: 115 ; 2215
LD     0 1          ; var world ; 2216
LD     0 2          ; var lev ; 2217
LD     0 3          ; var state ; 2218
LD     0 6          ; var args ; 2219
CDR                  ; 2220
CAR                  ; 2221
LDC 0               ; local var space ; 2222
LDC 0               ; local var space ; 2223
LDF    1283         ;  @ghcstate_read_val ; 2224
AP     4             ; 2225
LD     0 3          ; var state ; 2226
LD     0 6          ; var args ; 2227
CDR                  ; 2228
CDR                  ; 2229
LDC 0               ; local var space ; 2230
LDC 0               ; local var space ; 2231
LDF    1283         ;  @ghcstate_read_val ; 2232
AP     4             ; 2233
CEQ                  ; 2234
SEL    2246 2262    ; IF? 116 ; 2235
LDC 0               ; local var space ; 2236
LDC 0               ; local var space ; 2237
LDF    2336         ;  @runGhost ; 2238
AP     6             ; 2239
JOIN                 ; 2240
LDC    12           ; ELSE: 115 ; 2241
LD     0 5          ; var opcode ; 2242
CEQ                  ; 2243
SEL    2264 2290    ; IF? 117 ; 2244
JOIN                 ; 2245
LD     0 3          ; THEN: 116 ; 2246
CAR                 ; generateTupleAccess total=3 pos=0 ; 2247
LD     0 3          ; var state ; 2248
CDR                 ; generateTupleAccess total=3 pos=1 ; 2249
CAR                  ; 2250
LDC    8            ; just constant from code ; 2251
LD     0 6          ; var args ; 2252
CAR                  ; 2253
LDF    1254         ;  @sorted_map_assoc ; 2254
AP     3             ; 2255
LD     0 3          ; var state ; 2256
CDR                 ; generateTupleAccess total=3 pos=2 ; 2257
CDR                  ; 2258
CONS                 ; 2259
CONS                 ; 2260
JOIN                 ; 2261
LD     0 3          ; ELSE: 116 ; 2262
JOIN                 ; 2263
LD     0 0          ; THEN: 117 ; 2264
LD     0 1          ; var world ; 2265
LD     0 2          ; var lev ; 2266
LD     0 3          ; var state ; 2267
LD     0 6          ; var args ; 2268
CDR                  ; 2269
CAR                  ; 2270
LDC 0               ; local var space ; 2271
LDC 0               ; local var space ; 2272
LDF    1283         ;  @ghcstate_read_val ; 2273
AP     4             ; 2274
LD     0 3          ; var state ; 2275
LD     0 6          ; var args ; 2276
CDR                  ; 2277
CDR                  ; 2278
LDC 0               ; local var space ; 2279
LDC 0               ; local var space ; 2280
LDF    1283         ;  @ghcstate_read_val ; 2281
AP     4             ; 2282
CGT                  ; 2283
SEL    2295 2311    ; IF? 118 ; 2284
LDC 0               ; local var space ; 2285
LDC 0               ; local var space ; 2286
LDF    2336         ;  @runGhost ; 2287
AP     6             ; 2288
JOIN                 ; 2289
LDC    13           ; ELSE: 117 ; 2290
LD     0 5          ; var opcode ; 2291
CEQ                  ; 2292
SEL    2313 2331    ; IF? 119 ; 2293
JOIN                 ; 2294
LD     0 3          ; THEN: 118 ; 2295
CAR                 ; generateTupleAccess total=3 pos=0 ; 2296
LD     0 3          ; var state ; 2297
CDR                 ; generateTupleAccess total=3 pos=1 ; 2298
CAR                  ; 2299
LDC    8            ; just constant from code ; 2300
LD     0 6          ; var args ; 2301
CAR                  ; 2302
LDF    1254         ;  @sorted_map_assoc ; 2303
AP     3             ; 2304
LD     0 3          ; var state ; 2305
CDR                 ; generateTupleAccess total=3 pos=2 ; 2306
CDR                  ; 2307
CONS                 ; 2308
CONS                 ; 2309
JOIN                 ; 2310
LD     0 3          ; ELSE: 118 ; 2311
JOIN                 ; 2312
LD     0 0          ; THEN: 119 ; 2313
LD     0 1          ; var world ; 2314
LD     0 2          ; var lev ; 2315
LD     0 1          ; var world ; 2316
LD     0 7          ; var inc_pc ; 2317
LD     0 6          ; var args ; 2318
CAR                  ; 2319
LD     0 6          ; var args ; 2320
CDR                  ; 2321
LDC 0               ; local var space ; 2322
LDC 0               ; local var space ; 2323
LDF    1527         ;  @processGhostInt ; 2324
AP     6             ; 2325
LDC 0               ; local var space ; 2326
LDC 0               ; local var space ; 2327
LDF    2336         ;  @runGhost ; 2328
AP     6             ; 2329
JOIN                 ; 2330
LD     0 3          ; ELSE: 119 ; 2331
CAR                 ; generateTupleAccess total=3 pos=0 ; 2332
CDR                 ; generateTupleAccess total=3 pos=2 ; 2333
CDR                  ; 2334
JOIN                 ; 2335
LD     0 3          ;  <== runGhost  [SortedMap<Cons> prog, WorldState world, int lev, GHCState state] (as blk) ; 2336
CDR                 ; generateTupleAccess total=3 pos=1 ; 2337
CAR                  ; 2338
LDC    8            ; just constant from code ; 2339
LDC    0            ; just constant from code ; 2340
LDF    1238         ;  @sorted_map_get ; 2341
AP     3             ; 2342
ST     0 4           ; 2343
LD     0 0          ; var prog ; 2344
LD     0 4          ; var pc ; 2345
LDC    0            ; NULL literal ; 2346
LDF    1238         ;  @sorted_map_get ; 2347
AP     3             ; 2348
ST     0 5           ; 2349
LD     0 5          ; var step ; 2350
ATOM                 ; 2351
SEL    2354 2359    ; IF? 48 ; 2352
RTN                  ; 2353
LD     0 3          ; THEN: 48 ; 2354
CAR                 ; generateTupleAccess total=3 pos=0 ; 2355
CDR                 ; generateTupleAccess total=3 pos=2 ; 2356
CDR                  ; 2357
JOIN                 ; 2358
LD     0 2          ; ELSE: 48 ; 2359
LDC    1023         ; just constant from code ; 2360
CGT                  ; 2361
SEL    2364 2369    ; IF? 120 ; 2362
JOIN                 ; 2363
LD     0 3          ; THEN: 120 ; 2364
CAR                 ; generateTupleAccess total=3 pos=0 ; 2365
CDR                 ; generateTupleAccess total=3 pos=2 ; 2366
CDR                  ; 2367
JOIN                 ; 2368
LD     0 0          ; ELSE: 120 ; 2369
LD     0 1          ; var world ; 2370
LD     0 2          ; var lev ; 2371
LDC    1            ; just constant from code ; 2372
ADD                  ; 2373
LD     0 3          ; var state ; 2374
LD     0 5          ; var step ; 2375
LDC 0               ; local var space ; 2376
LDC 0               ; local var space ; 2377
LDC 0               ; local var space ; 2378
LDF    1839         ;  @runGhostStep ; 2379
AP     8             ; 2380
JOIN                 ; 2381
LD     0 1          ;  <== getGhostDirection  [WorldState world, ListCons<Cons> spec] (as blk) ; 2382
LDC    0            ; just constant from code ; 2383
LDC    0            ; NULL literal ; 2384
LDC    0            ; just constant from code ; 2385
CONS                 ; 2386
CONS                 ; 2387
LDF    9504         ;  @lambda_1006 ; 2388
LDF    386          ;  @fold0 ; 2389
AP     3             ; 2390
ST     0 2           ; 2391
LD     0 0          ; var world ; 2392
CDR                 ; generateTupleAccess total=4 pos=2 ; 2393
CDR                  ; 2394
CAR                  ; 2395
CAR                  ; 2396
ST     0 3           ; 2397
LD     0 2          ; var prog ; 2398
CDR                 ; generateTupleAccess total=2 pos=1 ; 2399
LD     0 0          ; var world ; 2400
LDC    0            ; just constant from code ; 2401
LD     0 3          ; var ghostState ; 2402
LDC    0            ; NULL literal ; 2403
LDC    0            ; just constant from code ; 2404
CONS                 ; 2405
LDC    0            ; NULL literal ; 2406
LDC    0            ; just constant from code ; 2407
CONS                 ; 2408
CONS                 ; 2409
CONS                 ; 2410
LDC 0               ; local var space ; 2411
LDC 0               ; local var space ; 2412
LDF    2336         ;  @runGhost ; 2413
AP     6             ; 2414
RTN                  ; 2415
LDC    1000001      ;  <== entryCPUEmulator  [] (as blk) ; 2416
DBUG                 ; 2417
LDF    8352         ;  @sample_map ; 2418
AP     0             ; 2419
ST     0 0           ; 2420
LDC    1000002      ; just constant from code ; 2421
DBUG                 ; 2422
LD     0 0          ; var ws ; 2423
DBUG                 ; 2424
BRK                  ; 2425
LD     0 0          ; var ws ; 2426
LDC    0            ; NULL literal ; 2427
LDC 0               ; local var space ; 2428
LDC 0               ; local var space ; 2429
LDC 0               ; local var space ; 2430
LDF    2452         ;  @entryFactual ; 2431
AP     5             ; 2432
ST     0 1           ; 2433
LDC    1000003      ; just constant from code ; 2434
DBUG                 ; 2435
LD     0 0          ; var ws ; 2436
DBUG                 ; 2437
BRK                  ; 2438
LD     0 1          ; var initialDone ; 2439
CDR                 ; generateTupleAccess total=2 pos=1 ; 2440
ST     0 2           ; 2441
LD     0 1          ; var initialDone ; 2442
CAR                 ; generateTupleAccess total=2 pos=0 ; 2443
ST     0 3           ; 2444
LD     0 3          ; var a ; 2445
LD     0 0          ; var ws ; 2446
LD     0 2          ; var b ; 2447
AP     2             ; 2448
ST     0 4           ; 2449
LDC    0            ; NULL literal ; 2450
RTN                  ; 2451
LD     0 0          ;  <== entryFactual  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 2452
LD     0 1          ; var ghostSpecs ; 2453
LDF    2953         ;  @createInitialState ; 2454
AP     2             ; 2455
ST     0 2           ; 2456
LD     0 2          ; var initialState ; 2457
CAR                 ; generateTupleAccess total=4 pos=0 ; 2458
CDR                 ; generateTupleAccess total=6 pos=5 ; 2459
CDR                  ; 2460
CDR                  ; 2461
CDR                  ; 2462
CDR                  ; 2463
LDC    1            ; just constant from code ; 2464
LDF    423          ;  @list_item ; 2465
AP     2             ; 2466
ST     0 3           ; 2467
LDC    0            ; just constant from code ; 2468
LDC    100          ; VMExtras.GET_READER ; 2469
LDC    1            ; just constant from code ; 2470
LD     0 3          ; var newRowAccessor ; 2471
AP     2             ; 2472
AP     1             ; 2473
ST     0 4           ; 2474
LD     0 2          ; var initialState ; 2475
LDF    9644         ;  @lambda_1017 ; 2476
CONS                 ; 2477
RTN                  ; 2478
LDF    3475         ;  <== test01  [] (as blk), ALSO: @array_256 ; 2479
AP     0             ; 2480
ST     0 0           ; 2481
LDC    100          ; VMExtras.GET_READER ; 2482
LDC    22           ; just constant from code ; 2483
LD     0 0          ; var accessor ; 2484
AP     2             ; 2485
ST     0 1           ; 2486
LDC    101          ; VMExtras.GET_WRITER ; 2487
LDC    22           ; just constant from code ; 2488
LD     0 0          ; var accessor ; 2489
AP     2             ; 2490
ST     0 2           ; 2491
LDC    77           ; just constant from code ; 2492
LD     0 2          ; var writer101 ; 2493
AP     1             ; 2494
ST     0 3           ; 2495
LDC    0            ; just constant from code ; 2496
LD     0 1          ; var reader101 ; 2497
AP     1             ; 2498
ST     0 4           ; 2499
LDC    0            ; just constant from code ; 2500
RTN                  ; 2501
LD     0 0          ;  <== collectEdgePills  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 2502
CDR                 ; generateTupleAccess total=7 pos=3 ; 2503
CDR                  ; 2504
CDR                  ; 2505
CAR                  ; 2506
LDF    9661         ;  @lambda_1018 ; 2507
LDF    349          ;  @dropWhile ; 2508
AP     2             ; 2509
ST     0 3           ; 2510
LD     0 3          ; var pathRemaining ; 2511
LDF    9684         ;  @lambda_1019 ; 2512
LDF    537          ;  @filter ; 2513
AP     2             ; 2514
ST     0 4           ; 2515
LD     0 4          ; var rv ; 2516
RTN                  ; 2517
LD     0 0          ;  <== collectEdgeGhosts  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 2518
CDR                 ; generateTupleAccess total=7 pos=2 ; 2519
CDR                  ; 2520
CAR                  ; 2521
LDF    9696         ;  @lambda_1020 ; 2522
LDF    349          ;  @dropWhile ; 2523
AP     2             ; 2524
ST     0 3           ; 2525
LD     0 3          ; var pathOnEdge ; 2526
LDF    9717         ;  @lambda_1021 ; 2527
LDF    537          ;  @filter ; 2528
AP     2             ; 2529
RTN                  ; 2530
LD     0 0          ;  <== collectAnyEdgePills  [ParsedEdge edge, ListCons<ListCons<Integer>> map] (as blk) ; 2531
CDR                 ; generateTupleAccess total=7 pos=3 ; 2532
CDR                  ; 2533
CDR                  ; 2534
CAR                  ; 2535
ST     0 2           ; 2536
LD     0 2          ; var edgeAccess ; 2537
LDF    9732         ;  @lambda_1022 ; 2538
LDF    537          ;  @filter ; 2539
AP     2             ; 2540
ST     0 3           ; 2541
LD     0 3          ; var rv ; 2542
RTN                  ; 2543
LD     0 0          ;  <== countAnyEdgePills  [ParsedEdge edge] (as blk) ; 2544
CDR                 ; generateTupleAccess total=7 pos=3 ; 2545
CDR                  ; 2546
CDR                  ; 2547
CAR                  ; 2548
ST     0 1           ; 2549
LD     0 1          ; var edgeAccess ; 2550
LDC    0            ; just constant from code ; 2551
LDF    9744         ;  @lambda_1023 ; 2552
LDF    386          ;  @fold0 ; 2553
AP     3             ; 2554
ST     0 2           ; 2555
LD     0 2          ; var rv ; 2556
RTN                  ; 2557
LD     0 0          ;  <== countMyEdgePills  [ParsedEdge edge, Point start] (as blk) ; 2558
CDR                 ; generateTupleAccess total=7 pos=3 ; 2559
CDR                  ; 2560
CDR                  ; 2561
CAR                  ; 2562
LDF    9758         ;  @lambda_1024 ; 2563
LDF    349          ;  @dropWhile ; 2564
AP     2             ; 2565
ST     0 2           ; 2566
LD     0 2          ; var pathRemaining ; 2567
LDC    0            ; just constant from code ; 2568
LDF    9781         ;  @lambda_1025 ; 2569
LDF    386          ;  @fold0 ; 2570
AP     3             ; 2571
ST     0 3           ; 2572
LD     0 3          ; var rv ; 2573
RTN                  ; 2574
LD     0 1          ;  <== performMove  [AIState aistate, WorldState worldState] (as blk) ; 2575
CDR                 ; generateTupleAccess total=4 pos=1 ; 2576
CAR                  ; 2577
CDR                 ; generateTupleAccess total=5 pos=1 ; 2578
CAR                  ; 2579
ST     0 2           ; 2580
LD     0 0          ; var aistate ; 2581
LD     0 2          ; var location ; 2582
LDF    3253         ;  @findEdgesForPoint ; 2583
AP     2             ; 2584
ST     0 3           ; 2585
LD     0 3          ; var edgesForPoint ; 2586
LD     0 0          ; var aistate ; 2587
LD     0 1          ; var worldState ; 2588
LDC 0               ; local var space ; 2589
LDC 0               ; local var space ; 2590
LDC 0               ; local var space ; 2591
LDC 0               ; local var space ; 2592
LDC 0               ; local var space ; 2593
LDF    2908         ;  @findBestDistantEdge ; 2594
AP     8             ; 2595
ST     0 7           ; 2596
BRK                  ; 2597
LD     0 7          ; var startEdge ; 2598
CDR                 ; generateTupleAccess total=7 pos=2 ; 2599
CDR                  ; 2600
CAR                  ; 2601
LDF    9844         ;  @lambda_1031 ; 2602
LDF    349          ;  @dropWhile ; 2603
AP     2             ; 2604
ST     0 8           ; 2605
BRK                  ; 2606
LD     0 8          ; var pathToWalk ; 2607
LDF    532          ;  @length ; 2608
AP     1             ; 2609
LDC    2            ; just constant from code ; 2610
CGTE                 ; 2611
SEL    2653 2669     ; 2612
LD     0 4          ; var retval ; 2613
CDR                 ; generateTupleAccess total=2 pos=1 ; 2614
LDC    3            ; Direction.LEFT ; 2615
CEQ                  ; 2616
SEL    2674 2679    ; IF? 49 ; 2617
ST     0 9           ; 2618
LD     0 4          ; var retval ; 2619
CDR                 ; generateTupleAccess total=2 pos=1 ; 2620
LDC    0            ; Direction.UP ; 2621
CEQ                  ; 2622
SEL    2685 2690    ; IF? 50 ; 2623
ST     0 10          ; 2624
LD     0 4          ; var retval ; 2625
CAR                 ; generateTupleAccess total=2 pos=0 ; 2626
ST     0 11          ; 2627
LD     0 11         ; var a ; 2628
CAR                 ; generateTupleAccess total=4 pos=0 ; 2629
CDR                 ; generateTupleAccess total=6 pos=5 ; 2630
CDR                  ; 2631
CDR                  ; 2632
CDR                  ; 2633
CDR                  ; 2634
LD     0 10         ; var ny ; 2635
LDF    423          ;  @list_item ; 2636
AP     2             ; 2637
ST     0 12          ; 2638
LDC    0            ; just constant from code ; 2639
LDC    100          ; VMExtras.GET_READER ; 2640
LD     0 9          ; var nx ; 2641
LD     0 12         ; var newRowAccessor ; 2642
AP     2             ; 2643
AP     1             ; 2644
ST     0 13          ; 2645
LD     0 13         ; var oldValue ; 2646
LDC    2            ; CT.PILL ; 2647
CEQ                  ; 2648
SEL    2696 2703    ; IF? 51 ; 2649
ST     0 13          ; 2650
LD     0 4          ; var retval ; 2651
RTN                  ; 2652
LD     0 8          ; branch@2653 ; 2653
CDR                  ; 2654
CAR                  ; 2655
ST     0 5           ; 2656
LD     0 5          ; var newLocation ; 2657
CAR                 ; generateTupleAccess total=2 pos=0 ; 2658
LD     0 2          ; var location ; 2659
CAR                 ; generateTupleAccess total=2 pos=0 ; 2660
CGT                  ; 2661
SEL    2705 2707    ; IF? 121 ; 2662
ST     0 6           ; 2663
LD     0 0          ; var aistate ; 2664
LD     0 6          ; var direction ; 2665
CONS                 ; 2666
ST     0 4           ; 2667
JOIN                 ; 2668
LD     0 0          ; branch@2669 ; 2669
LDC    0            ; Direction.UP ; 2670
CONS                 ; 2671
ST     0 4           ; 2672
JOIN                 ; 2673
LD     0 2          ; THEN: 49 ; 2674
CAR                 ; generateTupleAccess total=2 pos=0 ; 2675
LDC    1            ; just constant from code ; 2676
SUB                  ; 2677
JOIN                 ; 2678
LD     0 4          ; ELSE: 49 ; 2679
CDR                 ; generateTupleAccess total=2 pos=1 ; 2680
LDC    1            ; Direction.RIGHT ; 2681
CEQ                  ; 2682
SEL    2714 2719    ; IF? 122 ; 2683
JOIN                 ; 2684
LD     0 2          ; THEN: 50 ; 2685
CDR                 ; generateTupleAccess total=2 pos=1 ; 2686
LDC    1            ; just constant from code ; 2687
SUB                  ; 2688
JOIN                 ; 2689
LD     0 4          ; ELSE: 50 ; 2690
CDR                 ; generateTupleAccess total=2 pos=1 ; 2691
LDC    2            ; Direction.DOWN ; 2692
CEQ                  ; 2693
SEL    2722 2727    ; IF? 123 ; 2694
JOIN                 ; 2695
LDC    1            ; THEN: 51 ; 2696
LDC    101          ; VMExtras.GET_WRITER ; 2697
LD     0 9          ; var nx ; 2698
LD     0 12         ; var newRowAccessor ; 2699
AP     2             ; 2700
AP     1             ; 2701
JOIN                 ; 2702
LD     0 13         ; ELSE: 51 ; 2703
JOIN                 ; 2704
LDC    1            ; THEN: 121 ; 2705
JOIN                 ; 2706
LD     0 2          ; ELSE: 121 ; 2707
CAR                 ; generateTupleAccess total=2 pos=0 ; 2708
LD     0 5          ; var newLocation ; 2709
CAR                 ; generateTupleAccess total=2 pos=0 ; 2710
CGT                  ; 2711
SEL    2730 2732    ; IF? 124 ; 2712
JOIN                 ; 2713
LD     0 2          ; THEN: 122 ; 2714
CAR                 ; generateTupleAccess total=2 pos=0 ; 2715
LDC    1            ; just constant from code ; 2716
ADD                  ; 2717
JOIN                 ; 2718
LD     0 2          ; ELSE: 122 ; 2719
CAR                 ; generateTupleAccess total=2 pos=0 ; 2720
JOIN                 ; 2721
LD     0 2          ; THEN: 123 ; 2722
CDR                 ; generateTupleAccess total=2 pos=1 ; 2723
LDC    1            ; just constant from code ; 2724
ADD                  ; 2725
JOIN                 ; 2726
LD     0 2          ; ELSE: 123 ; 2727
CDR                 ; generateTupleAccess total=2 pos=1 ; 2728
JOIN                 ; 2729
LDC    3            ; THEN: 124 ; 2730
JOIN                 ; 2731
LD     0 2          ; ELSE: 124 ; 2732
CDR                 ; generateTupleAccess total=2 pos=1 ; 2733
LD     0 5          ; var newLocation ; 2734
CDR                 ; generateTupleAccess total=2 pos=1 ; 2735
CGT                  ; 2736
SEL    2739 2741    ; IF? 125 ; 2737
JOIN                 ; 2738
LDC    0            ; THEN: 125 ; 2739
JOIN                 ; 2740
LDC    2            ; ELSE: 125 ; 2741
JOIN                 ; 2742
LD     0 2          ;  <== waveFromEdgeToNearestEdges  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 2743
LDF    415          ;  @queue_isempty ; 2744
AP     1             ; 2745
SEL    2749 2752     ; 2746
LD     0 6          ; var retval ; 2747
RTN                  ; 2748
LD     0 4          ; branch@2749 ; 2749
ST     0 6           ; 2750
JOIN                 ; 2751
LD     0 0          ; branch@2752 ; 2752
LD     0 1          ; var worldState ; 2753
LD     0 2          ; var edgeQueue ; 2754
LD     0 3          ; var visited ; 2755
LD     0 4          ; var acc ; 2756
LD     0 5          ; var edgesWithDotsSoFar ; 2757
LDC 0               ; local var space ; 2758
LDC 0               ; local var space ; 2759
LDC 0               ; local var space ; 2760
LDC 0               ; local var space ; 2761
LDC 0               ; local var space ; 2762
LDC 0               ; local var space ; 2763
LDC 0               ; local var space ; 2764
LDC 0               ; local var space ; 2765
LDC 0               ; local var space ; 2766
LDC 0               ; local var space ; 2767
LDF    2772         ;  @waveFromEdgeToNearestEdges0 ; 2768
AP     16            ; 2769
ST     0 6           ; 2770
JOIN                 ; 2771
LD     0 2          ;  <== waveFromEdgeToNearestEdges0  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 2772
LDC 0               ; local var space ; 2773
LDF    492          ;  @queue_dequeue ; 2774
AP     2             ; 2775
ST     0 7           ; 2776
LD     0 7          ; var reduced ; 2777
CAR                 ; generateTupleAccess total=2 pos=0 ; 2778
ST     0 8           ; 2779
LD     0 0          ; var aistate ; 2780
CAR                 ; generateTupleAccess total=4 pos=0 ; 2781
CDR                 ; generateTupleAccess total=6 pos=2 ; 2782
CDR                  ; 2783
CAR                  ; 2784
LD     0 8          ; var lookingEdge ; 2785
LDF    2873         ;  @findFollowingEdges ; 2786
AP     2             ; 2787
ST     0 9           ; 2788
LD     0 9          ; var following ; 2789
LDF    9874         ;  @lambda_1033 ; 2790
LDF    537          ;  @filter ; 2791
AP     2             ; 2792
ST     0 9           ; 2793
LD     0 9          ; var following ; 2794
LDF    9887         ;  @lambda_1034 ; 2795
LDF    537          ;  @filter ; 2796
AP     2             ; 2797
ST     0 10          ; 2798
LD     0 3          ; var visited ; 2799
LD     0 9          ; var following ; 2800
LDF    9904         ;  @lambda_1035 ; 2801
LDF    69           ;  @map ; 2802
AP     2             ; 2803
LDF    1263         ;  @sorted_map_assoc_all ; 2804
AP     2             ; 2805
ST     0 11          ; 2806
LD     0 11         ; var nvisited ; 2807
LD     0 9          ; var following ; 2808
LDF    9914         ;  @lambda_1036 ; 2809
LDF    69           ;  @map ; 2810
AP     2             ; 2811
LDF    1263         ;  @sorted_map_assoc_all ; 2812
AP     2             ; 2813
ST     0 11          ; 2814
LD     0 9          ; var following ; 2815
LDF    9924         ;  @lambda_1037 ; 2816
LDF    69           ;  @map ; 2817
AP     2             ; 2818
ST     0 12          ; 2819
LD     0 12         ; var newRoutes ; 2820
LD     0 7          ; var reduced ; 2821
CDR                 ; generateTupleAccess total=2 pos=1 ; 2822
LDF    9928         ;  @lambda_1038 ; 2823
LDF    386          ;  @fold0 ; 2824
AP     3             ; 2825
ST     0 13          ; 2826
LD     0 12         ; var newRoutes ; 2827
LD     0 4          ; var acc ; 2828
LDF    184          ;  @concat2_set ; 2829
AP     2             ; 2830
ST     0 14          ; 2831
LD     0 5          ; var edgesWithDotsSoFar ; 2832
LDC    3            ; just constant from code ; 2833
CGT                  ; 2834
LD     0 4          ; var acc ; 2835
LDF    532          ;  @length ; 2836
AP     1             ; 2837
LDC    15           ; just constant from code ; 2838
CGT                  ; 2839
MUL                  ; 2840
LD     0 14         ; var newAcc ; 2841
CAR                  ; 2842
LDF    532          ;  @length ; 2843
AP     1             ; 2844
LD     0 4          ; var acc ; 2845
CAR                  ; 2846
LDF    532          ;  @length ; 2847
AP     1             ; 2848
CGT                  ; 2849
MUL                  ; 2850
ST     0 15          ; 2851
LD     0 15         ; var stopCondition ; 2852
SEL    2857 2859    ; IF? 52 ; 2853
ST     0 6           ; 2854
LD     0 6          ; var retval ; 2855
RTN                  ; 2856
LD     0 4          ; THEN: 52 ; 2857
JOIN                 ; 2858
LD     0 0          ; ELSE: 52 ; 2859
LD     0 1          ; var worldState ; 2860
LD     0 13         ; var newqq ; 2861
LD     0 11         ; var nvisited ; 2862
LD     0 14         ; var newAcc ; 2863
LD     0 5          ; var edgesWithDotsSoFar ; 2864
LD     0 10         ; var withDots ; 2865
LDF    532          ;  @length ; 2866
AP     1             ; 2867
ADD                  ; 2868
LDC 0               ; local var space ; 2869
LDF    2743         ;  @waveFromEdgeToNearestEdges ; 2870
AP     7             ; 2871
JOIN                 ; 2872
LD     0 0          ;  <== findFollowingEdges  [ListCons<ParsedEdge> parsedEdges, ListCons<ParsedEdge> lookingEdge] (as blk) ; 2873
LDF    9865         ;  @lambda_1032 ; 2874
LDF    537          ;  @filter ; 2875
AP     2             ; 2876
RTN                  ; 2877
LD     0 0          ;  <== pointEquals  [Point a, Point b] (as blk) ; 2878
CAR                 ; generateTupleAccess total=2 pos=0 ; 2879
LD     0 1          ; var b ; 2880
CAR                 ; generateTupleAccess total=2 pos=0 ; 2881
CEQ                  ; 2882
LD     0 0          ; var a ; 2883
CDR                 ; generateTupleAccess total=2 pos=1 ; 2884
LD     0 1          ; var b ; 2885
CDR                 ; generateTupleAccess total=2 pos=1 ; 2886
CEQ                  ; 2887
MUL                  ; 2888
SEL    2891 2893    ; IF? 53 ; 2889
RTN                  ; 2890
LDC    1            ; THEN: 53 ; 2891
JOIN                 ; 2892
LDC    0            ; ELSE: 53 ; 2893
JOIN                 ; 2894
LD     0 0          ;  <== endingPointOfEdgeRoute  [ListCons<ParsedEdge> lookingEdge] (as blk) ; 2895
CAR                  ; 2896
ST     0 1           ; 2897
LD     0 1          ; var lastEdge ; 2898
CDR                 ; generateTupleAccess total=7 pos=1 ; 2899
CAR                  ; 2900
RTN                  ; 2901
LD     0 0          ;  <== countRoutePills  [ListCons<ParsedEdge> route] (as blk) ; 2902
LDC    0            ; just constant from code ; 2903
LDF    9933         ;  @lambda_1039 ; 2904
LDF    386          ;  @fold0 ; 2905
AP     3             ; 2906
RTN                  ; 2907
LDF    403          ;  <== findBestDistantEdge  [ListCons<ParsedEdge> currentEdges, AIState aistate, WorldState worldState] (as blk), ALSO: @queue_new ; 2908
AP     0             ; 2909
ST     0 3           ; 2910
LD     0 0          ; var currentEdges ; 2911
LD     0 3          ; var q ; 2912
LDF    9800         ;  @lambda_1027 ; 2913
LDF    386          ;  @fold0 ; 2914
AP     3             ; 2915
ST     0 3           ; 2916
LD     0 1          ; var aistate ; 2917
LD     0 2          ; var worldState ; 2918
LD     0 3          ; var q ; 2919
LDC    0            ; NULL literal ; 2920
LDC    0            ; just constant from code ; 2921
CONS                 ; 2922
LD     0 0          ; var currentEdges ; 2923
LDF    9807         ;  @lambda_1028 ; 2924
LDF    69           ;  @map ; 2925
AP     2             ; 2926
LDF    1263         ;  @sorted_map_assoc_all ; 2927
AP     2             ; 2928
LDC    0            ; NULL literal ; 2929
LDC    0            ; just constant from code ; 2930
LDC 0               ; local var space ; 2931
LDF    2743         ;  @waveFromEdgeToNearestEdges ; 2932
AP     7             ; 2933
ST     0 4           ; 2934
LD     0 4          ; var dests ; 2935
LDF    9817         ;  @lambda_1029 ; 2936
LDF    69           ;  @map ; 2937
AP     2             ; 2938
ST     0 5           ; 2939
LD     0 5          ; var scores ; 2940
LDF    9841         ;  @lambda_1030 ; 2941
LDF    335          ;  @maximum_by ; 2942
AP     2             ; 2943
ST     0 6           ; 2944
LD     0 6          ; var winningRoute ; 2945
CAR                 ; generateTupleAccess total=2 pos=0 ; 2946
LDF    299          ;  @reverse ; 2947
AP     1             ; 2948
CAR                  ; 2949
ST     0 7           ; 2950
LD     0 7          ; var myStart ; 2951
RTN                  ; 2952
LD     0 0          ;  <== createInitialState  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 2953
CAR                 ; generateTupleAccess total=4 pos=0 ; 2954
LDC 0               ; local var space ; 2955
LDF    3378         ;  @parseStaticMap ; 2956
AP     2             ; 2957
LDC    0            ; just constant from code ; 2958
LDC    0            ; just constant from code ; 2959
LDF    9638         ;  @lambda_1016 ; 2960
LD     0 0          ; var ws ; 2961
CDR                 ; generateTupleAccess total=4 pos=2 ; 2962
CDR                  ; 2963
CAR                  ; 2964
LD     0 1          ; var ghostSpecs ; 2965
LDF    660          ;  @zip_with ; 2966
AP     3             ; 2967
CONS                 ; 2968
CONS                 ; 2969
CONS                 ; 2970
RTN                  ; 2971
LD     0 0          ;  <== isWall  [int test] (as blk) ; 2972
LDC    0            ; CT.WALL ; 2973
CEQ                  ; 2974
SEL    2977 2979    ; IF? 54 ; 2975
RTN                  ; 2976
LDC    1            ; THEN: 54 ; 2977
JOIN                 ; 2978
LDC    0            ; ELSE: 54 ; 2979
JOIN                 ; 2980
LDC    77           ;  <== isWalkable  [int test] (as blk) ; 2981
ST     0 1           ; 2982
LD     0 0          ; var test ; 2983
LDC    0            ; CT.WALL ; 2984
CEQ                  ; 2985
SEL    2989 2992     ; 2986
LD     0 1          ; var retval ; 2987
RTN                  ; 2988
LDC    0            ; branch@2989 ; 2989
ST     0 1           ; 2990
JOIN                 ; 2991
LDC    1            ; branch@2992 ; 2992
ST     0 1           ; 2993
JOIN                 ; 2994
LD     0 0          ;  <== isWalkable2  [ListCons<ListCons<Integer>> map, Point p] (as blk) ; 2995
LD     0 1          ; var p ; 2996
CDR                 ; generateTupleAccess total=2 pos=1 ; 2997
LD     0 1          ; var p ; 2998
CAR                 ; generateTupleAccess total=2 pos=0 ; 2999
LDF    3454         ;  @getMapItem ; 3000
AP     3             ; 3001
LDC 0               ; local var space ; 3002
LDF    2981         ;  @isWalkable ; 3003
AP     2             ; 3004
RTN                  ; 3005
LD     0 0          ;  <== isWalkable3  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 3006
LD     0 2          ; var y ; 3007
LD     0 1          ; var x ; 3008
LDF    3454         ;  @getMapItem ; 3009
AP     3             ; 3010
LDC 0               ; local var space ; 3011
LDF    2981         ;  @isWalkable ; 3012
AP     2             ; 3013
RTN                  ; 3014
LD     0 0          ;  <== isJunction  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 3015
LD     0 2          ; var y ; 3016
LDC    1            ; just constant from code ; 3017
SUB                  ; 3018
LD     0 1          ; var x ; 3019
LDF    3454         ;  @getMapItem ; 3020
AP     3             ; 3021
LDC 0               ; local var space ; 3022
LDF    2981         ;  @isWalkable ; 3023
AP     2             ; 3024
ST     0 3           ; 3025
LD     0 0          ; var map ; 3026
LD     0 2          ; var y ; 3027
LDC    1            ; just constant from code ; 3028
ADD                  ; 3029
LD     0 1          ; var x ; 3030
LDF    3454         ;  @getMapItem ; 3031
AP     3             ; 3032
LDC 0               ; local var space ; 3033
LDF    2981         ;  @isWalkable ; 3034
AP     2             ; 3035
ST     0 4           ; 3036
LD     0 0          ; var map ; 3037
LD     0 2          ; var y ; 3038
LD     0 1          ; var x ; 3039
LDC    1            ; just constant from code ; 3040
SUB                  ; 3041
LDF    3454         ;  @getMapItem ; 3042
AP     3             ; 3043
LDC 0               ; local var space ; 3044
LDF    2981         ;  @isWalkable ; 3045
AP     2             ; 3046
ST     0 5           ; 3047
LD     0 0          ; var map ; 3048
LD     0 2          ; var y ; 3049
LD     0 1          ; var x ; 3050
LDC    1            ; just constant from code ; 3051
ADD                  ; 3052
LDF    3454         ;  @getMapItem ; 3053
AP     3             ; 3054
LDC 0               ; local var space ; 3055
LDF    2981         ;  @isWalkable ; 3056
AP     2             ; 3057
ST     0 6           ; 3058
LD     0 3          ; var a1 ; 3059
LD     0 4          ; var a2 ; 3060
ADD                  ; 3061
LD     0 5          ; var a3 ; 3062
ADD                  ; 3063
LD     0 6          ; var a4 ; 3064
ADD                  ; 3065
LDC    2            ; just constant from code ; 3066
CGT                  ; 3067
SEL    3070 3072    ; IF? 56 ; 3068
RTN                  ; 3069
LDC    1            ; THEN: 56 ; 3070
JOIN                 ; 3071
LDC    0            ; ELSE: 56 ; 3072
JOIN                 ; 3073
LD     0 0          ;  <== findNeighbourJunctions  [ListCons<ListCons<Integer>> map, Point somePoint, SortedMap<Point> allJunctions, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 3074
LDF    403          ;  @queue_new ; 3075
AP     0             ; 3076
LD     0 1          ; var somePoint ; 3077
LDC    0            ; NULL literal ; 3078
CONS                 ; 3079
LDF    407          ;  @queue_enqueue ; 3080
AP     2             ; 3081
LD     0 2          ; var allJunctions ; 3082
LDC    0            ; NULL literal ; 3083
LDC    0            ; just constant from code ; 3084
CONS                 ; 3085
LD     0 1          ; var somePoint ; 3086
LDF    3139         ;  @getPointKey ; 3087
AP     1             ; 3088
LD     0 1          ; var somePoint ; 3089
LDF    1254         ;  @sorted_map_assoc ; 3090
AP     3             ; 3091
LDC    0            ; NULL literal ; 3092
LDC 0               ; local var space ; 3093
LDF    3110         ;  @waveFromPointToNearestJunction ; 3094
AP     6             ; 3095
ST     0 4           ; 3096
LD     0 4          ; var allNeighbourJunctionsPaths ; 3097
LDF    9941         ;  @lambda_1040 ; 3098
LDF    69           ;  @map ; 3099
AP     2             ; 3100
RTN                  ; 3101
LD     0 0          ;  <== makeEdgeAccess  [ListCons<Point> p, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 3102
LDF    9965         ;  @lambda_1041 ; 3103
LDF    69           ;  @map ; 3104
AP     2             ; 3105
LD     0 0          ; var p ; 3106
LDF    687          ;  @zip ; 3107
AP     2             ; 3108
RTN                  ; 3109
LD     0 1          ;  <== waveFromPointToNearestJunction  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 3110
LDF    415          ;  @queue_isempty ; 3111
AP     1             ; 3112
SEL    3116 3119     ; 3113
LD     0 5          ; var retval ; 3114
RTN                  ; 3115
LD     0 4          ; branch@3116 ; 3116
ST     0 5           ; 3117
JOIN                 ; 3118
LD     0 0          ; branch@3119 ; 3119
LD     0 1          ; var pointQueue ; 3120
LD     0 2          ; var destinations ; 3121
LD     0 3          ; var visited ; 3122
LD     0 4          ; var acc ; 3123
LDC 0               ; local var space ; 3124
LDC 0               ; local var space ; 3125
LDC 0               ; local var space ; 3126
LDC 0               ; local var space ; 3127
LDC 0               ; local var space ; 3128
LDC 0               ; local var space ; 3129
LDC 0               ; local var space ; 3130
LDC 0               ; local var space ; 3131
LDC 0               ; local var space ; 3132
LDC 0               ; local var space ; 3133
LDC 0               ; local var space ; 3134
LDF    3152         ;  @waveFromPointToNearestJunction0 ; 3135
AP     16            ; 3136
ST     0 5           ; 3137
JOIN                 ; 3138
LD     0 0          ;  <== getPointKey  [Point pt] (as blk) ; 3139
CAR                 ; generateTupleAccess total=2 pos=0 ; 3140
LDC    300          ; just constant from code ; 3141
MUL                  ; 3142
LD     0 0          ; var pt ; 3143
CDR                 ; generateTupleAccess total=2 pos=1 ; 3144
ADD                  ; 3145
RTN                  ; 3146
LD     0 0          ;  <== addPointKeyAll  [ListCons<Point> in] (as blk) ; 3147
LDF    9551         ;  @lambda_1012 ; 3148
LDF    69           ;  @map ; 3149
AP     2             ; 3150
RTN                  ; 3151
LD     0 1          ;  <== waveFromPointToNearestJunction0  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 3152
LDC 0               ; local var space ; 3153
LDF    492          ;  @queue_dequeue ; 3154
AP     2             ; 3155
ST     0 6           ; 3156
LD     0 6          ; var emptier ; 3157
CAR                 ; generateTupleAccess total=2 pos=0 ; 3158
ST     0 7           ; 3159
LD     0 7          ; var thisRoute ; 3160
CAR                  ; 3161
ST     0 8           ; 3162
LD     0 8          ; var weAreHere ; 3163
CAR                 ; generateTupleAccess total=2 pos=0 ; 3164
LDC    1            ; just constant from code ; 3165
ADD                  ; 3166
LD     0 8          ; var weAreHere ; 3167
CDR                 ; generateTupleAccess total=2 pos=1 ; 3168
CONS                 ; 3169
LD     0 8          ; var weAreHere ; 3170
CAR                 ; generateTupleAccess total=2 pos=0 ; 3171
LDC    1            ; just constant from code ; 3172
SUB                  ; 3173
LD     0 8          ; var weAreHere ; 3174
CDR                 ; generateTupleAccess total=2 pos=1 ; 3175
CONS                 ; 3176
LD     0 8          ; var weAreHere ; 3177
CAR                 ; generateTupleAccess total=2 pos=0 ; 3178
LD     0 8          ; var weAreHere ; 3179
CDR                 ; generateTupleAccess total=2 pos=1 ; 3180
LDC    1            ; just constant from code ; 3181
ADD                  ; 3182
CONS                 ; 3183
LD     0 8          ; var weAreHere ; 3184
CAR                 ; generateTupleAccess total=2 pos=0 ; 3185
LD     0 8          ; var weAreHere ; 3186
CDR                 ; generateTupleAccess total=2 pos=1 ; 3187
LDC    1            ; just constant from code ; 3188
SUB                  ; 3189
CONS                 ; 3190
LDC    0            ; NULL literal ; 3191
CONS                 ; 3192
CONS                 ; 3193
CONS                 ; 3194
CONS                 ; 3195
LDF    3147         ;  @addPointKeyAll ; 3196
AP     1             ; 3197
ST     0 9           ; 3198
LD     0 9          ; var possibleDestinations ; 3199
LDF    9975         ;  @lambda_1042 ; 3200
LDF    537          ;  @filter ; 3201
AP     2             ; 3202
ST     0 10          ; 3203
LD     0 10         ; var exits ; 3204
LDF    9989         ;  @lambda_1043 ; 3205
LDF    537          ;  @filter ; 3206
AP     2             ; 3207
ST     0 11          ; 3208
LDC    0            ; NULL literal ; 3209
LDC    1            ; just constant from code ; 3210
CONS                 ; 3211
LD     0 11         ; var arrivedsList ; 3212
LDF    1263         ;  @sorted_map_assoc_all ; 3213
AP     2             ; 3214
ST     0 12          ; 3215
LD     0 10         ; var exits ; 3216
LDF    9995         ;  @lambda_1044 ; 3217
LDF    537          ;  @filter ; 3218
AP     2             ; 3219
ST     0 13          ; 3220
LD     0 13         ; var continueds ; 3221
LDF    10003        ;  @lambda_1045 ; 3222
LDF    69           ;  @map ; 3223
AP     2             ; 3224
ST     0 14          ; 3225
LD     0 14         ; var exitRoutes ; 3226
LD     0 6          ; var emptier ; 3227
CDR                 ; generateTupleAccess total=2 pos=1 ; 3228
LDF    10008        ;  @lambda_1046 ; 3229
LDF    386          ;  @fold0 ; 3230
AP     3             ; 3231
ST     0 15          ; 3232
LD     0 0          ; var map ; 3233
LD     0 15         ; var filledQueue ; 3234
LD     0 2          ; var destinations ; 3235
LD     0 3          ; var visited ; 3236
LD     0 10         ; var exits ; 3237
LDF    1263         ;  @sorted_map_assoc_all ; 3238
AP     2             ; 3239
LD     0 4          ; var acc ; 3240
LD     0 11         ; var arrivedsList ; 3241
LDF    10013        ;  @lambda_1047 ; 3242
LDF    69           ;  @map ; 3243
AP     2             ; 3244
LDF    184          ;  @concat2_set ; 3245
AP     2             ; 3246
LDC 0               ; local var space ; 3247
LDF    3110         ;  @waveFromPointToNearestJunction ; 3248
AP     6             ; 3249
ST     0 5           ; 3250
LD     0 5          ; var retval ; 3251
RTN                  ; 3252
LD     0 0          ;  <== findEdgesForPoint  [AIState state, Point pos] (as blk) ; 3253
CAR                 ; generateTupleAccess total=4 pos=0 ; 3254
CDR                 ; generateTupleAccess total=6 pos=2 ; 3255
CDR                  ; 3256
CAR                  ; 3257
LDF    9795         ;  @lambda_1026 ; 3258
LDF    537          ;  @filter ; 3259
AP     2             ; 3260
RTN                  ; 3261
LD     0 1          ;  <== pointInEdge  [Point pos, ParsedEdge e] (as blk) ; 3262
CDR                 ; generateTupleAccess total=7 pos=2 ; 3263
CDR                  ; 3264
CAR                  ; 3265
LDF    10018        ;  @lambda_1048 ; 3266
LDF    545          ;  @any ; 3267
AP     2             ; 3268
RTN                  ; 3269
LD     0 0          ;  <== parseMap  [ListCons<ListCons<Integer>> m] (as blk) ; 3270
LDF    9517         ;  @lambda_1007 ; 3271
LDF    69           ;  @map ; 3272
AP     2             ; 3273
ST     0 1           ; 3274
LDF    9520         ;  @lambda_1008 ; 3275
LD     0 0          ; var m ; 3276
LD     0 1          ; var accessors ; 3277
LDF    660          ;  @zip_with ; 3278
AP     3             ; 3279
ST     0 2           ; 3280
LD     0 2          ; var mapAccessors ; 3281
LDF    9524         ;  @lambda_1009 ; 3282
LDF    69           ;  @map ; 3283
AP     2             ; 3284
ST     0 3           ; 3285
LD     0 0          ; var m ; 3286
LDC    0            ; just constant from code ; 3287
LDF    9531         ;  @lambda_1010 ; 3288
LDF    86           ;  @mapi ; 3289
AP     3             ; 3290
ST     0 4           ; 3291
LD     0 4          ; var toConcat ; 3292
LDF    118          ;  @concat ; 3293
AP     1             ; 3294
ST     0 5           ; 3295
LD     0 5          ; var walkableList ; 3296
LDF    9539         ;  @lambda_1011 ; 3297
LDF    537          ;  @filter ; 3298
AP     2             ; 3299
ST     0 6           ; 3300
LDC    0            ; NULL literal ; 3301
LDC    0            ; just constant from code ; 3302
CONS                 ; 3303
LD     0 5          ; var walkableList ; 3304
LDF    3147         ;  @addPointKeyAll ; 3305
AP     1             ; 3306
LDF    1263         ;  @sorted_map_assoc_all ; 3307
AP     2             ; 3308
ST     0 7           ; 3309
LDC    0            ; NULL literal ; 3310
LDC    0            ; just constant from code ; 3311
CONS                 ; 3312
LD     0 6          ; var junctionsList ; 3313
LDF    3147         ;  @addPointKeyAll ; 3314
AP     1             ; 3315
LDF    1263         ;  @sorted_map_assoc_all ; 3316
AP     2             ; 3317
ST     0 8           ; 3318
LD     0 6          ; var junctionsList ; 3319
LDF    9557         ;  @lambda_1013 ; 3320
LDF    69           ;  @map ; 3321
AP     2             ; 3322
LDF    118          ;  @concat ; 3323
AP     1             ; 3324
ST     0 9           ; 3325
LD     0 9          ; var allParsedEdges ; 3326
LDC    0            ; just constant from code ; 3327
LDF    9565         ;  @lambda_1014 ; 3328
LDF    86           ;  @mapi ; 3329
AP     3             ; 3330
ST     0 10          ; 3331
LD     0 10         ; var allParsedEdges2 ; 3332
LDC    0            ; just constant from code ; 3333
LDF    9594         ;  @lambda_1015 ; 3334
LDF    86           ;  @mapi ; 3335
AP     3             ; 3336
ST     0 11          ; 3337
LD     0 7          ; var walkable ; 3338
LD     0 8          ; var junctions ; 3339
LD     0 11         ; var allParsedEdges3 ; 3340
LDC    0            ; NULL literal ; 3341
LDC    0            ; NULL literal ; 3342
LD     0 1          ; var accessors ; 3343
CONS                 ; 3344
CONS                 ; 3345
CONS                 ; 3346
CONS                 ; 3347
CONS                 ; 3348
RTN                  ; 3349
LD     0 2          ;  <== findEdge  [Point a, Point b, ListCons<ParsedEdge> edges] (as blk) ; 3350
LDF    10035        ;  @lambda_1049 ; 3351
LDF    537          ;  @filter ; 3352
AP     2             ; 3353
CAR                  ; 3354
RTN                  ; 3355
LD     0 0          ;  <== edgeNumber  [ParsedEdge edge] (as blk) ; 3356
CDR                 ; generateTupleAccess total=7 pos=5 ; 3357
CDR                  ; 3358
CDR                  ; 3359
CDR                  ; 3360
CDR                  ; 3361
CAR                  ; 3362
RTN                  ; 3363
LD     0 0          ;  <== my_cat_maybes  [ListCons<Maybe<Point>> maybeListCons] (as blk) ; 3364
LDC 0               ; local var space ; 3365
LDC 0               ; local var space ; 3366
LDF    107          ;  @cat_maybes ; 3367
AP     3             ; 3368
ST     0 1           ; 3369
LD     0 1          ; var rv ; 3370
RTN                  ; 3371
LD     0 0          ;  <== collectWalkableXY  [ListCons<Integer> row, Integer rowy] (as blk) ; 3372
LDC    0            ; just constant from code ; 3373
LDF    10048        ;  @lambda_1050 ; 3374
LDF    86           ;  @mapi ; 3375
AP     3             ; 3376
RTN                  ; 3377
LD     0 0          ;  <== parseStaticMap  [ListCons<ListCons<Integer>> map] (as blk) ; 3378
LDC 0               ; local var space ; 3379
LDC 0               ; local var space ; 3380
LDC 0               ; local var space ; 3381
LDC 0               ; local var space ; 3382
LDC 0               ; local var space ; 3383
LDC 0               ; local var space ; 3384
LDC 0               ; local var space ; 3385
LDC 0               ; local var space ; 3386
LDC 0               ; local var space ; 3387
LDC 0               ; local var space ; 3388
LDC 0               ; local var space ; 3389
LDF    3270         ;  @parseMap ; 3390
AP     12            ; 3391
ST     0 1           ; 3392
LD     0 1          ; var parsedMap ; 3393
RTN                  ; 3394
LDF    403          ;  <== test2  [] (as blk), ALSO: @queue_new ; 3395
AP     0             ; 3396
LDC    1            ; just constant from code ; 3397
LDF    407          ;  @queue_enqueue ; 3398
AP     2             ; 3399
LDC    2            ; just constant from code ; 3400
LDF    407          ;  @queue_enqueue ; 3401
AP     2             ; 3402
LDC    3            ; just constant from code ; 3403
LDF    407          ;  @queue_enqueue ; 3404
AP     2             ; 3405
ST     0 0           ; 3406
LD     0 0          ; var queue ; 3407
LDC 0               ; local var space ; 3408
LDF    492          ;  @queue_dequeue ; 3409
AP     2             ; 3410
ST     0 1           ; 3411
LD     0 1          ; var q1 ; 3412
CDR                 ; generateTupleAccess total=2 pos=1 ; 3413
LDC 0               ; local var space ; 3414
LDF    492          ;  @queue_dequeue ; 3415
AP     2             ; 3416
ST     0 1           ; 3417
LD     0 1          ; var q1 ; 3418
CDR                 ; generateTupleAccess total=2 pos=1 ; 3419
LDC 0               ; local var space ; 3420
LDF    492          ;  @queue_dequeue ; 3421
AP     2             ; 3422
ST     0 1           ; 3423
LDC    1            ; just constant from code ; 3424
RTN                  ; 3425
LDC    0            ;  <== test3  [] (as blk) ; 3426
LDC    0            ; just constant from code ; 3427
CONS                 ; 3428
ST     0 0           ; 3429
LD     0 0          ; var map ; 3430
LDC    30           ; just constant from code ; 3431
LDC    31           ; just constant from code ; 3432
LDF    1254         ;  @sorted_map_assoc ; 3433
AP     3             ; 3434
LDC    20           ; just constant from code ; 3435
LDC    21           ; just constant from code ; 3436
LDF    1254         ;  @sorted_map_assoc ; 3437
AP     3             ; 3438
LDC    10           ; just constant from code ; 3439
LDC    11           ; just constant from code ; 3440
LDF    1254         ;  @sorted_map_assoc ; 3441
AP     3             ; 3442
ST     0 1           ; 3443
LD     0 1          ; var new_map2 ; 3444
LDC    20           ; just constant from code ; 3445
LDC    33           ; just constant from code ; 3446
LDF    1254         ;  @sorted_map_assoc ; 3447
AP     3             ; 3448
LDC    20           ; just constant from code ; 3449
LDC    88           ; just constant from code ; 3450
LDF    1238         ;  @sorted_map_get ; 3451
AP     3             ; 3452
RTN                  ; 3453
LDC    0            ;  <== getMapItem  [ListCons<ListCons<Integer>> map, int y, int x] (as blk) ; 3454
LD     0 1          ; var y ; 3455
CGT                  ; 3456
LDC    0            ; just constant from code ; 3457
LD     0 2          ; var x ; 3458
CGT                  ; 3459
ADD                  ; 3460
SEL    3463 3465    ; IF? 55 ; 3461
RTN                  ; 3462
LDC    0            ; THEN: 55 ; 3463
JOIN                 ; 3464
LD     0 0          ; ELSE: 55 ; 3465
LD     0 1          ; var y ; 3466
LDC    0            ; just constant from code ; 3467
LDF    469          ;  @list_item_def ; 3468
AP     3             ; 3469
LD     0 2          ; var x ; 3470
LDC    0            ; just constant from code ; 3471
LDF    469          ;  @list_item_def ; 3472
AP     3             ; 3473
JOIN                 ; 3474
LDC 0               ; generated from native: array_256 ; 3475
LDC 0                ; 3476
LDC 0                ; 3477
LDC 0                ; 3478
LDC 0                ; 3479
LDC 0                ; 3480
LDC 0                ; 3481
LDC 0                ; 3482
LDC 0                ; 3483
LDC 0                ; 3484
LDC 0                ; 3485
LDC 0                ; 3486
LDC 0                ; 3487
LDC 0                ; 3488
LDC 0                ; 3489
LDC 0                ; 3490
LDC 0                ; 3491
LDC 0                ; 3492
LDC 0                ; 3493
LDC 0                ; 3494
LDC 0                ; 3495
LDC 0                ; 3496
LDC 0                ; 3497
LDC 0                ; 3498
LDC 0                ; 3499
LDC 0                ; 3500
LDC 0                ; 3501
LDC 0                ; 3502
LDC 0                ; 3503
LDC 0                ; 3504
LDC 0                ; 3505
LDC 0                ; 3506
LDC 0                ; 3507
LDC 0                ; 3508
LDC 0                ; 3509
LDC 0                ; 3510
LDC 0                ; 3511
LDC 0                ; 3512
LDC 0                ; 3513
LDC 0                ; 3514
LDC 0                ; 3515
LDC 0                ; 3516
LDC 0                ; 3517
LDC 0                ; 3518
LDC 0                ; 3519
LDC 0                ; 3520
LDC 0                ; 3521
LDC 0                ; 3522
LDC 0                ; 3523
LDC 0                ; 3524
LDC 0                ; 3525
LDC 0                ; 3526
LDC 0                ; 3527
LDC 0                ; 3528
LDC 0                ; 3529
LDC 0                ; 3530
LDC 0                ; 3531
LDC 0                ; 3532
LDC 0                ; 3533
LDC 0                ; 3534
LDC 0                ; 3535
LDC 0                ; 3536
LDC 0                ; 3537
LDC 0                ; 3538
LDC 0                ; 3539
LDC 0                ; 3540
LDC 0                ; 3541
LDC 0                ; 3542
LDC 0                ; 3543
LDC 0                ; 3544
LDC 0                ; 3545
LDC 0                ; 3546
LDC 0                ; 3547
LDC 0                ; 3548
LDC 0                ; 3549
LDC 0                ; 3550
LDC 0                ; 3551
LDC 0                ; 3552
LDC 0                ; 3553
LDC 0                ; 3554
LDC 0                ; 3555
LDC 0                ; 3556
LDC 0                ; 3557
LDC 0                ; 3558
LDC 0                ; 3559
LDC 0                ; 3560
LDC 0                ; 3561
LDC 0                ; 3562
LDC 0                ; 3563
LDC 0                ; 3564
LDC 0                ; 3565
LDC 0                ; 3566
LDC 0                ; 3567
LDC 0                ; 3568
LDC 0                ; 3569
LDC 0                ; 3570
LDC 0                ; 3571
LDC 0                ; 3572
LDC 0                ; 3573
LDC 0                ; 3574
LDC 0                ; 3575
LDC 0                ; 3576
LDC 0                ; 3577
LDC 0                ; 3578
LDC 0                ; 3579
LDC 0                ; 3580
LDC 0                ; 3581
LDC 0                ; 3582
LDC 0                ; 3583
LDC 0                ; 3584
LDC 0                ; 3585
LDC 0                ; 3586
LDC 0                ; 3587
LDC 0                ; 3588
LDC 0                ; 3589
LDC 0                ; 3590
LDC 0                ; 3591
LDC 0                ; 3592
LDC 0                ; 3593
LDC 0                ; 3594
LDC 0                ; 3595
LDC 0                ; 3596
LDC 0                ; 3597
LDC 0                ; 3598
LDC 0                ; 3599
LDC 0                ; 3600
LDC 0                ; 3601
LDC 0                ; 3602
LDC 0                ; 3603
LDC 0                ; 3604
LDC 0                ; 3605
LDC 0                ; 3606
LDC 0                ; 3607
LDC 0                ; 3608
LDC 0                ; 3609
LDC 0                ; 3610
LDC 0                ; 3611
LDC 0                ; 3612
LDC 0                ; 3613
LDC 0                ; 3614
LDC 0                ; 3615
LDC 0                ; 3616
LDC 0                ; 3617
LDC 0                ; 3618
LDC 0                ; 3619
LDC 0                ; 3620
LDC 0                ; 3621
LDC 0                ; 3622
LDC 0                ; 3623
LDC 0                ; 3624
LDC 0                ; 3625
LDC 0                ; 3626
LDC 0                ; 3627
LDC 0                ; 3628
LDC 0                ; 3629
LDC 0                ; 3630
LDC 0                ; 3631
LDC 0                ; 3632
LDC 0                ; 3633
LDC 0                ; 3634
LDC 0                ; 3635
LDC 0                ; 3636
LDC 0                ; 3637
LDC 0                ; 3638
LDC 0                ; 3639
LDC 0                ; 3640
LDC 0                ; 3641
LDC 0                ; 3642
LDC 0                ; 3643
LDC 0                ; 3644
LDC 0                ; 3645
LDC 0                ; 3646
LDC 0                ; 3647
LDC 0                ; 3648
LDC 0                ; 3649
LDC 0                ; 3650
LDC 0                ; 3651
LDC 0                ; 3652
LDC 0                ; 3653
LDC 0                ; 3654
LDC 0                ; 3655
LDC 0                ; 3656
LDC 0                ; 3657
LDC 0                ; 3658
LDC 0                ; 3659
LDC 0                ; 3660
LDC 0                ; 3661
LDC 0                ; 3662
LDC 0                ; 3663
LDC 0                ; 3664
LDC 0                ; 3665
LDC 0                ; 3666
LDC 0                ; 3667
LDC 0                ; 3668
LDC 0                ; 3669
LDC 0                ; 3670
LDC 0                ; 3671
LDC 0                ; 3672
LDC 0                ; 3673
LDC 0                ; 3674
LDC 0                ; 3675
LDC 0                ; 3676
LDC 0                ; 3677
LDC 0                ; 3678
LDC 0                ; 3679
LDC 0                ; 3680
LDC 0                ; 3681
LDC 0                ; 3682
LDC 0                ; 3683
LDC 0                ; 3684
LDC 0                ; 3685
LDC 0                ; 3686
LDC 0                ; 3687
LDC 0                ; 3688
LDC 0                ; 3689
LDC 0                ; 3690
LDC 0                ; 3691
LDC 0                ; 3692
LDC 0                ; 3693
LDC 0                ; 3694
LDC 0                ; 3695
LDC 0                ; 3696
LDC 0                ; 3697
LDC 0                ; 3698
LDC 0                ; 3699
LDC 0                ; 3700
LDC 0                ; 3701
LDC 0                ; 3702
LDC 0                ; 3703
LDC 0                ; 3704
LDC 0                ; 3705
LDC 0                ; 3706
LDC 0                ; 3707
LDC 0                ; 3708
LDC 0                ; 3709
LDC 0                ; 3710
LDC 0                ; 3711
LDC 0                ; 3712
LDC 0                ; 3713
LDC 0                ; 3714
LDC 0                ; 3715
LDC 0                ; 3716
LDC 0                ; 3717
LDC 0                ; 3718
LDC 0                ; 3719
LDC 0                ; 3720
LDC 0                ; 3721
LDC 0                ; 3722
LDC 0                ; 3723
LDC 0                ; 3724
LDC 0                ; 3725
LDC 0                ; 3726
LDC 0                ; 3727
LDC 0                ; 3728
LDC 0                ; 3729
LDC 0                ; 3730
LDF 3734             ; 3731
AP 256               ; 3732
RTN                  ; 3733
LDF  3736            ; 3734
RTN                  ; 3735
LD  0   0            ; 3736
LDC 100              ; 3737
CEQ                  ; 3738
TSEL    3740 4766    ; 3739
LD  0   1            ; 3740
LDC 0                ; 3741
CEQ                  ; 3742
TSEL    5794 3744    ; 3743
LD  0   1            ; 3744
LDC 1                ; 3745
CEQ                  ; 3746
TSEL    5804 3748    ; 3747
LD  0   1            ; 3748
LDC 2                ; 3749
CEQ                  ; 3750
TSEL    5814 3752    ; 3751
LD  0   1            ; 3752
LDC 3                ; 3753
CEQ                  ; 3754
TSEL    5824 3756    ; 3755
LD  0   1            ; 3756
LDC 4                ; 3757
CEQ                  ; 3758
TSEL    5834 3760    ; 3759
LD  0   1            ; 3760
LDC 5                ; 3761
CEQ                  ; 3762
TSEL    5844 3764    ; 3763
LD  0   1            ; 3764
LDC 6                ; 3765
CEQ                  ; 3766
TSEL    5854 3768    ; 3767
LD  0   1            ; 3768
LDC 7                ; 3769
CEQ                  ; 3770
TSEL    5864 3772    ; 3771
LD  0   1            ; 3772
LDC 8                ; 3773
CEQ                  ; 3774
TSEL    5874 3776    ; 3775
LD  0   1            ; 3776
LDC 9                ; 3777
CEQ                  ; 3778
TSEL    5884 3780    ; 3779
LD  0   1            ; 3780
LDC 10               ; 3781
CEQ                  ; 3782
TSEL    5894 3784    ; 3783
LD  0   1            ; 3784
LDC 11               ; 3785
CEQ                  ; 3786
TSEL    5904 3788    ; 3787
LD  0   1            ; 3788
LDC 12               ; 3789
CEQ                  ; 3790
TSEL    5914 3792    ; 3791
LD  0   1            ; 3792
LDC 13               ; 3793
CEQ                  ; 3794
TSEL    5924 3796    ; 3795
LD  0   1            ; 3796
LDC 14               ; 3797
CEQ                  ; 3798
TSEL    5934 3800    ; 3799
LD  0   1            ; 3800
LDC 15               ; 3801
CEQ                  ; 3802
TSEL    5944 3804    ; 3803
LD  0   1            ; 3804
LDC 16               ; 3805
CEQ                  ; 3806
TSEL    5954 3808    ; 3807
LD  0   1            ; 3808
LDC 17               ; 3809
CEQ                  ; 3810
TSEL    5964 3812    ; 3811
LD  0   1            ; 3812
LDC 18               ; 3813
CEQ                  ; 3814
TSEL    5974 3816    ; 3815
LD  0   1            ; 3816
LDC 19               ; 3817
CEQ                  ; 3818
TSEL    5984 3820    ; 3819
LD  0   1            ; 3820
LDC 20               ; 3821
CEQ                  ; 3822
TSEL    5994 3824    ; 3823
LD  0   1            ; 3824
LDC 21               ; 3825
CEQ                  ; 3826
TSEL    6004 3828    ; 3827
LD  0   1            ; 3828
LDC 22               ; 3829
CEQ                  ; 3830
TSEL    6014 3832    ; 3831
LD  0   1            ; 3832
LDC 23               ; 3833
CEQ                  ; 3834
TSEL    6024 3836    ; 3835
LD  0   1            ; 3836
LDC 24               ; 3837
CEQ                  ; 3838
TSEL    6034 3840    ; 3839
LD  0   1            ; 3840
LDC 25               ; 3841
CEQ                  ; 3842
TSEL    6044 3844    ; 3843
LD  0   1            ; 3844
LDC 26               ; 3845
CEQ                  ; 3846
TSEL    6054 3848    ; 3847
LD  0   1            ; 3848
LDC 27               ; 3849
CEQ                  ; 3850
TSEL    6064 3852    ; 3851
LD  0   1            ; 3852
LDC 28               ; 3853
CEQ                  ; 3854
TSEL    6074 3856    ; 3855
LD  0   1            ; 3856
LDC 29               ; 3857
CEQ                  ; 3858
TSEL    6084 3860    ; 3859
LD  0   1            ; 3860
LDC 30               ; 3861
CEQ                  ; 3862
TSEL    6094 3864    ; 3863
LD  0   1            ; 3864
LDC 31               ; 3865
CEQ                  ; 3866
TSEL    6104 3868    ; 3867
LD  0   1            ; 3868
LDC 32               ; 3869
CEQ                  ; 3870
TSEL    6114 3872    ; 3871
LD  0   1            ; 3872
LDC 33               ; 3873
CEQ                  ; 3874
TSEL    6124 3876    ; 3875
LD  0   1            ; 3876
LDC 34               ; 3877
CEQ                  ; 3878
TSEL    6134 3880    ; 3879
LD  0   1            ; 3880
LDC 35               ; 3881
CEQ                  ; 3882
TSEL    6144 3884    ; 3883
LD  0   1            ; 3884
LDC 36               ; 3885
CEQ                  ; 3886
TSEL    6154 3888    ; 3887
LD  0   1            ; 3888
LDC 37               ; 3889
CEQ                  ; 3890
TSEL    6164 3892    ; 3891
LD  0   1            ; 3892
LDC 38               ; 3893
CEQ                  ; 3894
TSEL    6174 3896    ; 3895
LD  0   1            ; 3896
LDC 39               ; 3897
CEQ                  ; 3898
TSEL    6184 3900    ; 3899
LD  0   1            ; 3900
LDC 40               ; 3901
CEQ                  ; 3902
TSEL    6194 3904    ; 3903
LD  0   1            ; 3904
LDC 41               ; 3905
CEQ                  ; 3906
TSEL    6204 3908    ; 3907
LD  0   1            ; 3908
LDC 42               ; 3909
CEQ                  ; 3910
TSEL    6214 3912    ; 3911
LD  0   1            ; 3912
LDC 43               ; 3913
CEQ                  ; 3914
TSEL    6224 3916    ; 3915
LD  0   1            ; 3916
LDC 44               ; 3917
CEQ                  ; 3918
TSEL    6234 3920    ; 3919
LD  0   1            ; 3920
LDC 45               ; 3921
CEQ                  ; 3922
TSEL    6244 3924    ; 3923
LD  0   1            ; 3924
LDC 46               ; 3925
CEQ                  ; 3926
TSEL    6254 3928    ; 3927
LD  0   1            ; 3928
LDC 47               ; 3929
CEQ                  ; 3930
TSEL    6264 3932    ; 3931
LD  0   1            ; 3932
LDC 48               ; 3933
CEQ                  ; 3934
TSEL    6274 3936    ; 3935
LD  0   1            ; 3936
LDC 49               ; 3937
CEQ                  ; 3938
TSEL    6284 3940    ; 3939
LD  0   1            ; 3940
LDC 50               ; 3941
CEQ                  ; 3942
TSEL    6294 3944    ; 3943
LD  0   1            ; 3944
LDC 51               ; 3945
CEQ                  ; 3946
TSEL    6304 3948    ; 3947
LD  0   1            ; 3948
LDC 52               ; 3949
CEQ                  ; 3950
TSEL    6314 3952    ; 3951
LD  0   1            ; 3952
LDC 53               ; 3953
CEQ                  ; 3954
TSEL    6324 3956    ; 3955
LD  0   1            ; 3956
LDC 54               ; 3957
CEQ                  ; 3958
TSEL    6334 3960    ; 3959
LD  0   1            ; 3960
LDC 55               ; 3961
CEQ                  ; 3962
TSEL    6344 3964    ; 3963
LD  0   1            ; 3964
LDC 56               ; 3965
CEQ                  ; 3966
TSEL    6354 3968    ; 3967
LD  0   1            ; 3968
LDC 57               ; 3969
CEQ                  ; 3970
TSEL    6364 3972    ; 3971
LD  0   1            ; 3972
LDC 58               ; 3973
CEQ                  ; 3974
TSEL    6374 3976    ; 3975
LD  0   1            ; 3976
LDC 59               ; 3977
CEQ                  ; 3978
TSEL    6384 3980    ; 3979
LD  0   1            ; 3980
LDC 60               ; 3981
CEQ                  ; 3982
TSEL    6394 3984    ; 3983
LD  0   1            ; 3984
LDC 61               ; 3985
CEQ                  ; 3986
TSEL    6404 3988    ; 3987
LD  0   1            ; 3988
LDC 62               ; 3989
CEQ                  ; 3990
TSEL    6414 3992    ; 3991
LD  0   1            ; 3992
LDC 63               ; 3993
CEQ                  ; 3994
TSEL    6424 3996    ; 3995
LD  0   1            ; 3996
LDC 64               ; 3997
CEQ                  ; 3998
TSEL    6434 4000    ; 3999
LD  0   1            ; 4000
LDC 65               ; 4001
CEQ                  ; 4002
TSEL    6444 4004    ; 4003
LD  0   1            ; 4004
LDC 66               ; 4005
CEQ                  ; 4006
TSEL    6454 4008    ; 4007
LD  0   1            ; 4008
LDC 67               ; 4009
CEQ                  ; 4010
TSEL    6464 4012    ; 4011
LD  0   1            ; 4012
LDC 68               ; 4013
CEQ                  ; 4014
TSEL    6474 4016    ; 4015
LD  0   1            ; 4016
LDC 69               ; 4017
CEQ                  ; 4018
TSEL    6484 4020    ; 4019
LD  0   1            ; 4020
LDC 70               ; 4021
CEQ                  ; 4022
TSEL    6494 4024    ; 4023
LD  0   1            ; 4024
LDC 71               ; 4025
CEQ                  ; 4026
TSEL    6504 4028    ; 4027
LD  0   1            ; 4028
LDC 72               ; 4029
CEQ                  ; 4030
TSEL    6514 4032    ; 4031
LD  0   1            ; 4032
LDC 73               ; 4033
CEQ                  ; 4034
TSEL    6524 4036    ; 4035
LD  0   1            ; 4036
LDC 74               ; 4037
CEQ                  ; 4038
TSEL    6534 4040    ; 4039
LD  0   1            ; 4040
LDC 75               ; 4041
CEQ                  ; 4042
TSEL    6544 4044    ; 4043
LD  0   1            ; 4044
LDC 76               ; 4045
CEQ                  ; 4046
TSEL    6554 4048    ; 4047
LD  0   1            ; 4048
LDC 77               ; 4049
CEQ                  ; 4050
TSEL    6564 4052    ; 4051
LD  0   1            ; 4052
LDC 78               ; 4053
CEQ                  ; 4054
TSEL    6574 4056    ; 4055
LD  0   1            ; 4056
LDC 79               ; 4057
CEQ                  ; 4058
TSEL    6584 4060    ; 4059
LD  0   1            ; 4060
LDC 80               ; 4061
CEQ                  ; 4062
TSEL    6594 4064    ; 4063
LD  0   1            ; 4064
LDC 81               ; 4065
CEQ                  ; 4066
TSEL    6604 4068    ; 4067
LD  0   1            ; 4068
LDC 82               ; 4069
CEQ                  ; 4070
TSEL    6614 4072    ; 4071
LD  0   1            ; 4072
LDC 83               ; 4073
CEQ                  ; 4074
TSEL    6624 4076    ; 4075
LD  0   1            ; 4076
LDC 84               ; 4077
CEQ                  ; 4078
TSEL    6634 4080    ; 4079
LD  0   1            ; 4080
LDC 85               ; 4081
CEQ                  ; 4082
TSEL    6644 4084    ; 4083
LD  0   1            ; 4084
LDC 86               ; 4085
CEQ                  ; 4086
TSEL    6654 4088    ; 4087
LD  0   1            ; 4088
LDC 87               ; 4089
CEQ                  ; 4090
TSEL    6664 4092    ; 4091
LD  0   1            ; 4092
LDC 88               ; 4093
CEQ                  ; 4094
TSEL    6674 4096    ; 4095
LD  0   1            ; 4096
LDC 89               ; 4097
CEQ                  ; 4098
TSEL    6684 4100    ; 4099
LD  0   1            ; 4100
LDC 90               ; 4101
CEQ                  ; 4102
TSEL    6694 4104    ; 4103
LD  0   1            ; 4104
LDC 91               ; 4105
CEQ                  ; 4106
TSEL    6704 4108    ; 4107
LD  0   1            ; 4108
LDC 92               ; 4109
CEQ                  ; 4110
TSEL    6714 4112    ; 4111
LD  0   1            ; 4112
LDC 93               ; 4113
CEQ                  ; 4114
TSEL    6724 4116    ; 4115
LD  0   1            ; 4116
LDC 94               ; 4117
CEQ                  ; 4118
TSEL    6734 4120    ; 4119
LD  0   1            ; 4120
LDC 95               ; 4121
CEQ                  ; 4122
TSEL    6744 4124    ; 4123
LD  0   1            ; 4124
LDC 96               ; 4125
CEQ                  ; 4126
TSEL    6754 4128    ; 4127
LD  0   1            ; 4128
LDC 97               ; 4129
CEQ                  ; 4130
TSEL    6764 4132    ; 4131
LD  0   1            ; 4132
LDC 98               ; 4133
CEQ                  ; 4134
TSEL    6774 4136    ; 4135
LD  0   1            ; 4136
LDC 99               ; 4137
CEQ                  ; 4138
TSEL    6784 4140    ; 4139
LD  0   1            ; 4140
LDC 100              ; 4141
CEQ                  ; 4142
TSEL    6794 4144    ; 4143
LD  0   1            ; 4144
LDC 101              ; 4145
CEQ                  ; 4146
TSEL    6804 4148    ; 4147
LD  0   1            ; 4148
LDC 102              ; 4149
CEQ                  ; 4150
TSEL    6814 4152    ; 4151
LD  0   1            ; 4152
LDC 103              ; 4153
CEQ                  ; 4154
TSEL    6824 4156    ; 4155
LD  0   1            ; 4156
LDC 104              ; 4157
CEQ                  ; 4158
TSEL    6834 4160    ; 4159
LD  0   1            ; 4160
LDC 105              ; 4161
CEQ                  ; 4162
TSEL    6844 4164    ; 4163
LD  0   1            ; 4164
LDC 106              ; 4165
CEQ                  ; 4166
TSEL    6854 4168    ; 4167
LD  0   1            ; 4168
LDC 107              ; 4169
CEQ                  ; 4170
TSEL    6864 4172    ; 4171
LD  0   1            ; 4172
LDC 108              ; 4173
CEQ                  ; 4174
TSEL    6874 4176    ; 4175
LD  0   1            ; 4176
LDC 109              ; 4177
CEQ                  ; 4178
TSEL    6884 4180    ; 4179
LD  0   1            ; 4180
LDC 110              ; 4181
CEQ                  ; 4182
TSEL    6894 4184    ; 4183
LD  0   1            ; 4184
LDC 111              ; 4185
CEQ                  ; 4186
TSEL    6904 4188    ; 4187
LD  0   1            ; 4188
LDC 112              ; 4189
CEQ                  ; 4190
TSEL    6914 4192    ; 4191
LD  0   1            ; 4192
LDC 113              ; 4193
CEQ                  ; 4194
TSEL    6924 4196    ; 4195
LD  0   1            ; 4196
LDC 114              ; 4197
CEQ                  ; 4198
TSEL    6934 4200    ; 4199
LD  0   1            ; 4200
LDC 115              ; 4201
CEQ                  ; 4202
TSEL    6944 4204    ; 4203
LD  0   1            ; 4204
LDC 116              ; 4205
CEQ                  ; 4206
TSEL    6954 4208    ; 4207
LD  0   1            ; 4208
LDC 117              ; 4209
CEQ                  ; 4210
TSEL    6964 4212    ; 4211
LD  0   1            ; 4212
LDC 118              ; 4213
CEQ                  ; 4214
TSEL    6974 4216    ; 4215
LD  0   1            ; 4216
LDC 119              ; 4217
CEQ                  ; 4218
TSEL    6984 4220    ; 4219
LD  0   1            ; 4220
LDC 120              ; 4221
CEQ                  ; 4222
TSEL    6994 4224    ; 4223
LD  0   1            ; 4224
LDC 121              ; 4225
CEQ                  ; 4226
TSEL    7004 4228    ; 4227
LD  0   1            ; 4228
LDC 122              ; 4229
CEQ                  ; 4230
TSEL    7014 4232    ; 4231
LD  0   1            ; 4232
LDC 123              ; 4233
CEQ                  ; 4234
TSEL    7024 4236    ; 4235
LD  0   1            ; 4236
LDC 124              ; 4237
CEQ                  ; 4238
TSEL    7034 4240    ; 4239
LD  0   1            ; 4240
LDC 125              ; 4241
CEQ                  ; 4242
TSEL    7044 4244    ; 4243
LD  0   1            ; 4244
LDC 126              ; 4245
CEQ                  ; 4246
TSEL    7054 4248    ; 4247
LD  0   1            ; 4248
LDC 127              ; 4249
CEQ                  ; 4250
TSEL    7064 4252    ; 4251
LD  0   1            ; 4252
LDC 128              ; 4253
CEQ                  ; 4254
TSEL    7074 4256    ; 4255
LD  0   1            ; 4256
LDC 129              ; 4257
CEQ                  ; 4258
TSEL    7084 4260    ; 4259
LD  0   1            ; 4260
LDC 130              ; 4261
CEQ                  ; 4262
TSEL    7094 4264    ; 4263
LD  0   1            ; 4264
LDC 131              ; 4265
CEQ                  ; 4266
TSEL    7104 4268    ; 4267
LD  0   1            ; 4268
LDC 132              ; 4269
CEQ                  ; 4270
TSEL    7114 4272    ; 4271
LD  0   1            ; 4272
LDC 133              ; 4273
CEQ                  ; 4274
TSEL    7124 4276    ; 4275
LD  0   1            ; 4276
LDC 134              ; 4277
CEQ                  ; 4278
TSEL    7134 4280    ; 4279
LD  0   1            ; 4280
LDC 135              ; 4281
CEQ                  ; 4282
TSEL    7144 4284    ; 4283
LD  0   1            ; 4284
LDC 136              ; 4285
CEQ                  ; 4286
TSEL    7154 4288    ; 4287
LD  0   1            ; 4288
LDC 137              ; 4289
CEQ                  ; 4290
TSEL    7164 4292    ; 4291
LD  0   1            ; 4292
LDC 138              ; 4293
CEQ                  ; 4294
TSEL    7174 4296    ; 4295
LD  0   1            ; 4296
LDC 139              ; 4297
CEQ                  ; 4298
TSEL    7184 4300    ; 4299
LD  0   1            ; 4300
LDC 140              ; 4301
CEQ                  ; 4302
TSEL    7194 4304    ; 4303
LD  0   1            ; 4304
LDC 141              ; 4305
CEQ                  ; 4306
TSEL    7204 4308    ; 4307
LD  0   1            ; 4308
LDC 142              ; 4309
CEQ                  ; 4310
TSEL    7214 4312    ; 4311
LD  0   1            ; 4312
LDC 143              ; 4313
CEQ                  ; 4314
TSEL    7224 4316    ; 4315
LD  0   1            ; 4316
LDC 144              ; 4317
CEQ                  ; 4318
TSEL    7234 4320    ; 4319
LD  0   1            ; 4320
LDC 145              ; 4321
CEQ                  ; 4322
TSEL    7244 4324    ; 4323
LD  0   1            ; 4324
LDC 146              ; 4325
CEQ                  ; 4326
TSEL    7254 4328    ; 4327
LD  0   1            ; 4328
LDC 147              ; 4329
CEQ                  ; 4330
TSEL    7264 4332    ; 4331
LD  0   1            ; 4332
LDC 148              ; 4333
CEQ                  ; 4334
TSEL    7274 4336    ; 4335
LD  0   1            ; 4336
LDC 149              ; 4337
CEQ                  ; 4338
TSEL    7284 4340    ; 4339
LD  0   1            ; 4340
LDC 150              ; 4341
CEQ                  ; 4342
TSEL    7294 4344    ; 4343
LD  0   1            ; 4344
LDC 151              ; 4345
CEQ                  ; 4346
TSEL    7304 4348    ; 4347
LD  0   1            ; 4348
LDC 152              ; 4349
CEQ                  ; 4350
TSEL    7314 4352    ; 4351
LD  0   1            ; 4352
LDC 153              ; 4353
CEQ                  ; 4354
TSEL    7324 4356    ; 4355
LD  0   1            ; 4356
LDC 154              ; 4357
CEQ                  ; 4358
TSEL    7334 4360    ; 4359
LD  0   1            ; 4360
LDC 155              ; 4361
CEQ                  ; 4362
TSEL    7344 4364    ; 4363
LD  0   1            ; 4364
LDC 156              ; 4365
CEQ                  ; 4366
TSEL    7354 4368    ; 4367
LD  0   1            ; 4368
LDC 157              ; 4369
CEQ                  ; 4370
TSEL    7364 4372    ; 4371
LD  0   1            ; 4372
LDC 158              ; 4373
CEQ                  ; 4374
TSEL    7374 4376    ; 4375
LD  0   1            ; 4376
LDC 159              ; 4377
CEQ                  ; 4378
TSEL    7384 4380    ; 4379
LD  0   1            ; 4380
LDC 160              ; 4381
CEQ                  ; 4382
TSEL    7394 4384    ; 4383
LD  0   1            ; 4384
LDC 161              ; 4385
CEQ                  ; 4386
TSEL    7404 4388    ; 4387
LD  0   1            ; 4388
LDC 162              ; 4389
CEQ                  ; 4390
TSEL    7414 4392    ; 4391
LD  0   1            ; 4392
LDC 163              ; 4393
CEQ                  ; 4394
TSEL    7424 4396    ; 4395
LD  0   1            ; 4396
LDC 164              ; 4397
CEQ                  ; 4398
TSEL    7434 4400    ; 4399
LD  0   1            ; 4400
LDC 165              ; 4401
CEQ                  ; 4402
TSEL    7444 4404    ; 4403
LD  0   1            ; 4404
LDC 166              ; 4405
CEQ                  ; 4406
TSEL    7454 4408    ; 4407
LD  0   1            ; 4408
LDC 167              ; 4409
CEQ                  ; 4410
TSEL    7464 4412    ; 4411
LD  0   1            ; 4412
LDC 168              ; 4413
CEQ                  ; 4414
TSEL    7474 4416    ; 4415
LD  0   1            ; 4416
LDC 169              ; 4417
CEQ                  ; 4418
TSEL    7484 4420    ; 4419
LD  0   1            ; 4420
LDC 170              ; 4421
CEQ                  ; 4422
TSEL    7494 4424    ; 4423
LD  0   1            ; 4424
LDC 171              ; 4425
CEQ                  ; 4426
TSEL    7504 4428    ; 4427
LD  0   1            ; 4428
LDC 172              ; 4429
CEQ                  ; 4430
TSEL    7514 4432    ; 4431
LD  0   1            ; 4432
LDC 173              ; 4433
CEQ                  ; 4434
TSEL    7524 4436    ; 4435
LD  0   1            ; 4436
LDC 174              ; 4437
CEQ                  ; 4438
TSEL    7534 4440    ; 4439
LD  0   1            ; 4440
LDC 175              ; 4441
CEQ                  ; 4442
TSEL    7544 4444    ; 4443
LD  0   1            ; 4444
LDC 176              ; 4445
CEQ                  ; 4446
TSEL    7554 4448    ; 4447
LD  0   1            ; 4448
LDC 177              ; 4449
CEQ                  ; 4450
TSEL    7564 4452    ; 4451
LD  0   1            ; 4452
LDC 178              ; 4453
CEQ                  ; 4454
TSEL    7574 4456    ; 4455
LD  0   1            ; 4456
LDC 179              ; 4457
CEQ                  ; 4458
TSEL    7584 4460    ; 4459
LD  0   1            ; 4460
LDC 180              ; 4461
CEQ                  ; 4462
TSEL    7594 4464    ; 4463
LD  0   1            ; 4464
LDC 181              ; 4465
CEQ                  ; 4466
TSEL    7604 4468    ; 4467
LD  0   1            ; 4468
LDC 182              ; 4469
CEQ                  ; 4470
TSEL    7614 4472    ; 4471
LD  0   1            ; 4472
LDC 183              ; 4473
CEQ                  ; 4474
TSEL    7624 4476    ; 4475
LD  0   1            ; 4476
LDC 184              ; 4477
CEQ                  ; 4478
TSEL    7634 4480    ; 4479
LD  0   1            ; 4480
LDC 185              ; 4481
CEQ                  ; 4482
TSEL    7644 4484    ; 4483
LD  0   1            ; 4484
LDC 186              ; 4485
CEQ                  ; 4486
TSEL    7654 4488    ; 4487
LD  0   1            ; 4488
LDC 187              ; 4489
CEQ                  ; 4490
TSEL    7664 4492    ; 4491
LD  0   1            ; 4492
LDC 188              ; 4493
CEQ                  ; 4494
TSEL    7674 4496    ; 4495
LD  0   1            ; 4496
LDC 189              ; 4497
CEQ                  ; 4498
TSEL    7684 4500    ; 4499
LD  0   1            ; 4500
LDC 190              ; 4501
CEQ                  ; 4502
TSEL    7694 4504    ; 4503
LD  0   1            ; 4504
LDC 191              ; 4505
CEQ                  ; 4506
TSEL    7704 4508    ; 4507
LD  0   1            ; 4508
LDC 192              ; 4509
CEQ                  ; 4510
TSEL    7714 4512    ; 4511
LD  0   1            ; 4512
LDC 193              ; 4513
CEQ                  ; 4514
TSEL    7724 4516    ; 4515
LD  0   1            ; 4516
LDC 194              ; 4517
CEQ                  ; 4518
TSEL    7734 4520    ; 4519
LD  0   1            ; 4520
LDC 195              ; 4521
CEQ                  ; 4522
TSEL    7744 4524    ; 4523
LD  0   1            ; 4524
LDC 196              ; 4525
CEQ                  ; 4526
TSEL    7754 4528    ; 4527
LD  0   1            ; 4528
LDC 197              ; 4529
CEQ                  ; 4530
TSEL    7764 4532    ; 4531
LD  0   1            ; 4532
LDC 198              ; 4533
CEQ                  ; 4534
TSEL    7774 4536    ; 4535
LD  0   1            ; 4536
LDC 199              ; 4537
CEQ                  ; 4538
TSEL    7784 4540    ; 4539
LD  0   1            ; 4540
LDC 200              ; 4541
CEQ                  ; 4542
TSEL    7794 4544    ; 4543
LD  0   1            ; 4544
LDC 201              ; 4545
CEQ                  ; 4546
TSEL    7804 4548    ; 4547
LD  0   1            ; 4548
LDC 202              ; 4549
CEQ                  ; 4550
TSEL    7814 4552    ; 4551
LD  0   1            ; 4552
LDC 203              ; 4553
CEQ                  ; 4554
TSEL    7824 4556    ; 4555
LD  0   1            ; 4556
LDC 204              ; 4557
CEQ                  ; 4558
TSEL    7834 4560    ; 4559
LD  0   1            ; 4560
LDC 205              ; 4561
CEQ                  ; 4562
TSEL    7844 4564    ; 4563
LD  0   1            ; 4564
LDC 206              ; 4565
CEQ                  ; 4566
TSEL    7854 4568    ; 4567
LD  0   1            ; 4568
LDC 207              ; 4569
CEQ                  ; 4570
TSEL    7864 4572    ; 4571
LD  0   1            ; 4572
LDC 208              ; 4573
CEQ                  ; 4574
TSEL    7874 4576    ; 4575
LD  0   1            ; 4576
LDC 209              ; 4577
CEQ                  ; 4578
TSEL    7884 4580    ; 4579
LD  0   1            ; 4580
LDC 210              ; 4581
CEQ                  ; 4582
TSEL    7894 4584    ; 4583
LD  0   1            ; 4584
LDC 211              ; 4585
CEQ                  ; 4586
TSEL    7904 4588    ; 4587
LD  0   1            ; 4588
LDC 212              ; 4589
CEQ                  ; 4590
TSEL    7914 4592    ; 4591
LD  0   1            ; 4592
LDC 213              ; 4593
CEQ                  ; 4594
TSEL    7924 4596    ; 4595
LD  0   1            ; 4596
LDC 214              ; 4597
CEQ                  ; 4598
TSEL    7934 4600    ; 4599
LD  0   1            ; 4600
LDC 215              ; 4601
CEQ                  ; 4602
TSEL    7944 4604    ; 4603
LD  0   1            ; 4604
LDC 216              ; 4605
CEQ                  ; 4606
TSEL    7954 4608    ; 4607
LD  0   1            ; 4608
LDC 217              ; 4609
CEQ                  ; 4610
TSEL    7964 4612    ; 4611
LD  0   1            ; 4612
LDC 218              ; 4613
CEQ                  ; 4614
TSEL    7974 4616    ; 4615
LD  0   1            ; 4616
LDC 219              ; 4617
CEQ                  ; 4618
TSEL    7984 4620    ; 4619
LD  0   1            ; 4620
LDC 220              ; 4621
CEQ                  ; 4622
TSEL    7994 4624    ; 4623
LD  0   1            ; 4624
LDC 221              ; 4625
CEQ                  ; 4626
TSEL    8004 4628    ; 4627
LD  0   1            ; 4628
LDC 222              ; 4629
CEQ                  ; 4630
TSEL    8014 4632    ; 4631
LD  0   1            ; 4632
LDC 223              ; 4633
CEQ                  ; 4634
TSEL    8024 4636    ; 4635
LD  0   1            ; 4636
LDC 224              ; 4637
CEQ                  ; 4638
TSEL    8034 4640    ; 4639
LD  0   1            ; 4640
LDC 225              ; 4641
CEQ                  ; 4642
TSEL    8044 4644    ; 4643
LD  0   1            ; 4644
LDC 226              ; 4645
CEQ                  ; 4646
TSEL    8054 4648    ; 4647
LD  0   1            ; 4648
LDC 227              ; 4649
CEQ                  ; 4650
TSEL    8064 4652    ; 4651
LD  0   1            ; 4652
LDC 228              ; 4653
CEQ                  ; 4654
TSEL    8074 4656    ; 4655
LD  0   1            ; 4656
LDC 229              ; 4657
CEQ                  ; 4658
TSEL    8084 4660    ; 4659
LD  0   1            ; 4660
LDC 230              ; 4661
CEQ                  ; 4662
TSEL    8094 4664    ; 4663
LD  0   1            ; 4664
LDC 231              ; 4665
CEQ                  ; 4666
TSEL    8104 4668    ; 4667
LD  0   1            ; 4668
LDC 232              ; 4669
CEQ                  ; 4670
TSEL    8114 4672    ; 4671
LD  0   1            ; 4672
LDC 233              ; 4673
CEQ                  ; 4674
TSEL    8124 4676    ; 4675
LD  0   1            ; 4676
LDC 234              ; 4677
CEQ                  ; 4678
TSEL    8134 4680    ; 4679
LD  0   1            ; 4680
LDC 235              ; 4681
CEQ                  ; 4682
TSEL    8144 4684    ; 4683
LD  0   1            ; 4684
LDC 236              ; 4685
CEQ                  ; 4686
TSEL    8154 4688    ; 4687
LD  0   1            ; 4688
LDC 237              ; 4689
CEQ                  ; 4690
TSEL    8164 4692    ; 4691
LD  0   1            ; 4692
LDC 238              ; 4693
CEQ                  ; 4694
TSEL    8174 4696    ; 4695
LD  0   1            ; 4696
LDC 239              ; 4697
CEQ                  ; 4698
TSEL    8184 4700    ; 4699
LD  0   1            ; 4700
LDC 240              ; 4701
CEQ                  ; 4702
TSEL    8194 4704    ; 4703
LD  0   1            ; 4704
LDC 241              ; 4705
CEQ                  ; 4706
TSEL    8204 4708    ; 4707
LD  0   1            ; 4708
LDC 242              ; 4709
CEQ                  ; 4710
TSEL    8214 4712    ; 4711
LD  0   1            ; 4712
LDC 243              ; 4713
CEQ                  ; 4714
TSEL    8224 4716    ; 4715
LD  0   1            ; 4716
LDC 244              ; 4717
CEQ                  ; 4718
TSEL    8234 4720    ; 4719
LD  0   1            ; 4720
LDC 245              ; 4721
CEQ                  ; 4722
TSEL    8244 4724    ; 4723
LD  0   1            ; 4724
LDC 246              ; 4725
CEQ                  ; 4726
TSEL    8254 4728    ; 4727
LD  0   1            ; 4728
LDC 247              ; 4729
CEQ                  ; 4730
TSEL    8264 4732    ; 4731
LD  0   1            ; 4732
LDC 248              ; 4733
CEQ                  ; 4734
TSEL    8274 4736    ; 4735
LD  0   1            ; 4736
LDC 249              ; 4737
CEQ                  ; 4738
TSEL    8284 4740    ; 4739
LD  0   1            ; 4740
LDC 250              ; 4741
CEQ                  ; 4742
TSEL    8294 4744    ; 4743
LD  0   1            ; 4744
LDC 251              ; 4745
CEQ                  ; 4746
TSEL    8304 4748    ; 4747
LD  0   1            ; 4748
LDC 252              ; 4749
CEQ                  ; 4750
TSEL    8314 4752    ; 4751
LD  0   1            ; 4752
LDC 253              ; 4753
CEQ                  ; 4754
TSEL    8324 4756    ; 4755
LD  0   1            ; 4756
LDC 254              ; 4757
CEQ                  ; 4758
TSEL    8334 4760    ; 4759
LD  0   1            ; 4760
LDC 255              ; 4761
CEQ                  ; 4762
TSEL    8344 4764    ; 4763
LDC  0               ; 4764
RTN                  ; 4765
LD  0   1            ; 4766
LDC 0                ; 4767
CEQ                  ; 4768
TSEL    5800 4770    ; 4769
LD  0   1            ; 4770
LDC 1                ; 4771
CEQ                  ; 4772
TSEL    5810 4774    ; 4773
LD  0   1            ; 4774
LDC 2                ; 4775
CEQ                  ; 4776
TSEL    5820 4778    ; 4777
LD  0   1            ; 4778
LDC 3                ; 4779
CEQ                  ; 4780
TSEL    5830 4782    ; 4781
LD  0   1            ; 4782
LDC 4                ; 4783
CEQ                  ; 4784
TSEL    5840 4786    ; 4785
LD  0   1            ; 4786
LDC 5                ; 4787
CEQ                  ; 4788
TSEL    5850 4790    ; 4789
LD  0   1            ; 4790
LDC 6                ; 4791
CEQ                  ; 4792
TSEL    5860 4794    ; 4793
LD  0   1            ; 4794
LDC 7                ; 4795
CEQ                  ; 4796
TSEL    5870 4798    ; 4797
LD  0   1            ; 4798
LDC 8                ; 4799
CEQ                  ; 4800
TSEL    5880 4802    ; 4801
LD  0   1            ; 4802
LDC 9                ; 4803
CEQ                  ; 4804
TSEL    5890 4806    ; 4805
LD  0   1            ; 4806
LDC 10               ; 4807
CEQ                  ; 4808
TSEL    5900 4810    ; 4809
LD  0   1            ; 4810
LDC 11               ; 4811
CEQ                  ; 4812
TSEL    5910 4814    ; 4813
LD  0   1            ; 4814
LDC 12               ; 4815
CEQ                  ; 4816
TSEL    5920 4818    ; 4817
LD  0   1            ; 4818
LDC 13               ; 4819
CEQ                  ; 4820
TSEL    5930 4822    ; 4821
LD  0   1            ; 4822
LDC 14               ; 4823
CEQ                  ; 4824
TSEL    5940 4826    ; 4825
LD  0   1            ; 4826
LDC 15               ; 4827
CEQ                  ; 4828
TSEL    5950 4830    ; 4829
LD  0   1            ; 4830
LDC 16               ; 4831
CEQ                  ; 4832
TSEL    5960 4834    ; 4833
LD  0   1            ; 4834
LDC 17               ; 4835
CEQ                  ; 4836
TSEL    5970 4838    ; 4837
LD  0   1            ; 4838
LDC 18               ; 4839
CEQ                  ; 4840
TSEL    5980 4842    ; 4841
LD  0   1            ; 4842
LDC 19               ; 4843
CEQ                  ; 4844
TSEL    5990 4846    ; 4845
LD  0   1            ; 4846
LDC 20               ; 4847
CEQ                  ; 4848
TSEL    6000 4850    ; 4849
LD  0   1            ; 4850
LDC 21               ; 4851
CEQ                  ; 4852
TSEL    6010 4854    ; 4853
LD  0   1            ; 4854
LDC 22               ; 4855
CEQ                  ; 4856
TSEL    6020 4858    ; 4857
LD  0   1            ; 4858
LDC 23               ; 4859
CEQ                  ; 4860
TSEL    6030 4862    ; 4861
LD  0   1            ; 4862
LDC 24               ; 4863
CEQ                  ; 4864
TSEL    6040 4866    ; 4865
LD  0   1            ; 4866
LDC 25               ; 4867
CEQ                  ; 4868
TSEL    6050 4870    ; 4869
LD  0   1            ; 4870
LDC 26               ; 4871
CEQ                  ; 4872
TSEL    6060 4874    ; 4873
LD  0   1            ; 4874
LDC 27               ; 4875
CEQ                  ; 4876
TSEL    6070 4878    ; 4877
LD  0   1            ; 4878
LDC 28               ; 4879
CEQ                  ; 4880
TSEL    6080 4882    ; 4881
LD  0   1            ; 4882
LDC 29               ; 4883
CEQ                  ; 4884
TSEL    6090 4886    ; 4885
LD  0   1            ; 4886
LDC 30               ; 4887
CEQ                  ; 4888
TSEL    6100 4890    ; 4889
LD  0   1            ; 4890
LDC 31               ; 4891
CEQ                  ; 4892
TSEL    6110 4894    ; 4893
LD  0   1            ; 4894
LDC 32               ; 4895
CEQ                  ; 4896
TSEL    6120 4898    ; 4897
LD  0   1            ; 4898
LDC 33               ; 4899
CEQ                  ; 4900
TSEL    6130 4902    ; 4901
LD  0   1            ; 4902
LDC 34               ; 4903
CEQ                  ; 4904
TSEL    6140 4906    ; 4905
LD  0   1            ; 4906
LDC 35               ; 4907
CEQ                  ; 4908
TSEL    6150 4910    ; 4909
LD  0   1            ; 4910
LDC 36               ; 4911
CEQ                  ; 4912
TSEL    6160 4914    ; 4913
LD  0   1            ; 4914
LDC 37               ; 4915
CEQ                  ; 4916
TSEL    6170 4918    ; 4917
LD  0   1            ; 4918
LDC 38               ; 4919
CEQ                  ; 4920
TSEL    6180 4922    ; 4921
LD  0   1            ; 4922
LDC 39               ; 4923
CEQ                  ; 4924
TSEL    6190 4926    ; 4925
LD  0   1            ; 4926
LDC 40               ; 4927
CEQ                  ; 4928
TSEL    6200 4930    ; 4929
LD  0   1            ; 4930
LDC 41               ; 4931
CEQ                  ; 4932
TSEL    6210 4934    ; 4933
LD  0   1            ; 4934
LDC 42               ; 4935
CEQ                  ; 4936
TSEL    6220 4938    ; 4937
LD  0   1            ; 4938
LDC 43               ; 4939
CEQ                  ; 4940
TSEL    6230 4942    ; 4941
LD  0   1            ; 4942
LDC 44               ; 4943
CEQ                  ; 4944
TSEL    6240 4946    ; 4945
LD  0   1            ; 4946
LDC 45               ; 4947
CEQ                  ; 4948
TSEL    6250 4950    ; 4949
LD  0   1            ; 4950
LDC 46               ; 4951
CEQ                  ; 4952
TSEL    6260 4954    ; 4953
LD  0   1            ; 4954
LDC 47               ; 4955
CEQ                  ; 4956
TSEL    6270 4958    ; 4957
LD  0   1            ; 4958
LDC 48               ; 4959
CEQ                  ; 4960
TSEL    6280 4962    ; 4961
LD  0   1            ; 4962
LDC 49               ; 4963
CEQ                  ; 4964
TSEL    6290 4966    ; 4965
LD  0   1            ; 4966
LDC 50               ; 4967
CEQ                  ; 4968
TSEL    6300 4970    ; 4969
LD  0   1            ; 4970
LDC 51               ; 4971
CEQ                  ; 4972
TSEL    6310 4974    ; 4973
LD  0   1            ; 4974
LDC 52               ; 4975
CEQ                  ; 4976
TSEL    6320 4978    ; 4977
LD  0   1            ; 4978
LDC 53               ; 4979
CEQ                  ; 4980
TSEL    6330 4982    ; 4981
LD  0   1            ; 4982
LDC 54               ; 4983
CEQ                  ; 4984
TSEL    6340 4986    ; 4985
LD  0   1            ; 4986
LDC 55               ; 4987
CEQ                  ; 4988
TSEL    6350 4990    ; 4989
LD  0   1            ; 4990
LDC 56               ; 4991
CEQ                  ; 4992
TSEL    6360 4994    ; 4993
LD  0   1            ; 4994
LDC 57               ; 4995
CEQ                  ; 4996
TSEL    6370 4998    ; 4997
LD  0   1            ; 4998
LDC 58               ; 4999
CEQ                  ; 5000
TSEL    6380 5002    ; 5001
LD  0   1            ; 5002
LDC 59               ; 5003
CEQ                  ; 5004
TSEL    6390 5006    ; 5005
LD  0   1            ; 5006
LDC 60               ; 5007
CEQ                  ; 5008
TSEL    6400 5010    ; 5009
LD  0   1            ; 5010
LDC 61               ; 5011
CEQ                  ; 5012
TSEL    6410 5014    ; 5013
LD  0   1            ; 5014
LDC 62               ; 5015
CEQ                  ; 5016
TSEL    6420 5018    ; 5017
LD  0   1            ; 5018
LDC 63               ; 5019
CEQ                  ; 5020
TSEL    6430 5022    ; 5021
LD  0   1            ; 5022
LDC 64               ; 5023
CEQ                  ; 5024
TSEL    6440 5026    ; 5025
LD  0   1            ; 5026
LDC 65               ; 5027
CEQ                  ; 5028
TSEL    6450 5030    ; 5029
LD  0   1            ; 5030
LDC 66               ; 5031
CEQ                  ; 5032
TSEL    6460 5034    ; 5033
LD  0   1            ; 5034
LDC 67               ; 5035
CEQ                  ; 5036
TSEL    6470 5038    ; 5037
LD  0   1            ; 5038
LDC 68               ; 5039
CEQ                  ; 5040
TSEL    6480 5042    ; 5041
LD  0   1            ; 5042
LDC 69               ; 5043
CEQ                  ; 5044
TSEL    6490 5046    ; 5045
LD  0   1            ; 5046
LDC 70               ; 5047
CEQ                  ; 5048
TSEL    6500 5050    ; 5049
LD  0   1            ; 5050
LDC 71               ; 5051
CEQ                  ; 5052
TSEL    6510 5054    ; 5053
LD  0   1            ; 5054
LDC 72               ; 5055
CEQ                  ; 5056
TSEL    6520 5058    ; 5057
LD  0   1            ; 5058
LDC 73               ; 5059
CEQ                  ; 5060
TSEL    6530 5062    ; 5061
LD  0   1            ; 5062
LDC 74               ; 5063
CEQ                  ; 5064
TSEL    6540 5066    ; 5065
LD  0   1            ; 5066
LDC 75               ; 5067
CEQ                  ; 5068
TSEL    6550 5070    ; 5069
LD  0   1            ; 5070
LDC 76               ; 5071
CEQ                  ; 5072
TSEL    6560 5074    ; 5073
LD  0   1            ; 5074
LDC 77               ; 5075
CEQ                  ; 5076
TSEL    6570 5078    ; 5077
LD  0   1            ; 5078
LDC 78               ; 5079
CEQ                  ; 5080
TSEL    6580 5082    ; 5081
LD  0   1            ; 5082
LDC 79               ; 5083
CEQ                  ; 5084
TSEL    6590 5086    ; 5085
LD  0   1            ; 5086
LDC 80               ; 5087
CEQ                  ; 5088
TSEL    6600 5090    ; 5089
LD  0   1            ; 5090
LDC 81               ; 5091
CEQ                  ; 5092
TSEL    6610 5094    ; 5093
LD  0   1            ; 5094
LDC 82               ; 5095
CEQ                  ; 5096
TSEL    6620 5098    ; 5097
LD  0   1            ; 5098
LDC 83               ; 5099
CEQ                  ; 5100
TSEL    6630 5102    ; 5101
LD  0   1            ; 5102
LDC 84               ; 5103
CEQ                  ; 5104
TSEL    6640 5106    ; 5105
LD  0   1            ; 5106
LDC 85               ; 5107
CEQ                  ; 5108
TSEL    6650 5110    ; 5109
LD  0   1            ; 5110
LDC 86               ; 5111
CEQ                  ; 5112
TSEL    6660 5114    ; 5113
LD  0   1            ; 5114
LDC 87               ; 5115
CEQ                  ; 5116
TSEL    6670 5118    ; 5117
LD  0   1            ; 5118
LDC 88               ; 5119
CEQ                  ; 5120
TSEL    6680 5122    ; 5121
LD  0   1            ; 5122
LDC 89               ; 5123
CEQ                  ; 5124
TSEL    6690 5126    ; 5125
LD  0   1            ; 5126
LDC 90               ; 5127
CEQ                  ; 5128
TSEL    6700 5130    ; 5129
LD  0   1            ; 5130
LDC 91               ; 5131
CEQ                  ; 5132
TSEL    6710 5134    ; 5133
LD  0   1            ; 5134
LDC 92               ; 5135
CEQ                  ; 5136
TSEL    6720 5138    ; 5137
LD  0   1            ; 5138
LDC 93               ; 5139
CEQ                  ; 5140
TSEL    6730 5142    ; 5141
LD  0   1            ; 5142
LDC 94               ; 5143
CEQ                  ; 5144
TSEL    6740 5146    ; 5145
LD  0   1            ; 5146
LDC 95               ; 5147
CEQ                  ; 5148
TSEL    6750 5150    ; 5149
LD  0   1            ; 5150
LDC 96               ; 5151
CEQ                  ; 5152
TSEL    6760 5154    ; 5153
LD  0   1            ; 5154
LDC 97               ; 5155
CEQ                  ; 5156
TSEL    6770 5158    ; 5157
LD  0   1            ; 5158
LDC 98               ; 5159
CEQ                  ; 5160
TSEL    6780 5162    ; 5161
LD  0   1            ; 5162
LDC 99               ; 5163
CEQ                  ; 5164
TSEL    6790 5166    ; 5165
LD  0   1            ; 5166
LDC 100              ; 5167
CEQ                  ; 5168
TSEL    6800 5170    ; 5169
LD  0   1            ; 5170
LDC 101              ; 5171
CEQ                  ; 5172
TSEL    6810 5174    ; 5173
LD  0   1            ; 5174
LDC 102              ; 5175
CEQ                  ; 5176
TSEL    6820 5178    ; 5177
LD  0   1            ; 5178
LDC 103              ; 5179
CEQ                  ; 5180
TSEL    6830 5182    ; 5181
LD  0   1            ; 5182
LDC 104              ; 5183
CEQ                  ; 5184
TSEL    6840 5186    ; 5185
LD  0   1            ; 5186
LDC 105              ; 5187
CEQ                  ; 5188
TSEL    6850 5190    ; 5189
LD  0   1            ; 5190
LDC 106              ; 5191
CEQ                  ; 5192
TSEL    6860 5194    ; 5193
LD  0   1            ; 5194
LDC 107              ; 5195
CEQ                  ; 5196
TSEL    6870 5198    ; 5197
LD  0   1            ; 5198
LDC 108              ; 5199
CEQ                  ; 5200
TSEL    6880 5202    ; 5201
LD  0   1            ; 5202
LDC 109              ; 5203
CEQ                  ; 5204
TSEL    6890 5206    ; 5205
LD  0   1            ; 5206
LDC 110              ; 5207
CEQ                  ; 5208
TSEL    6900 5210    ; 5209
LD  0   1            ; 5210
LDC 111              ; 5211
CEQ                  ; 5212
TSEL    6910 5214    ; 5213
LD  0   1            ; 5214
LDC 112              ; 5215
CEQ                  ; 5216
TSEL    6920 5218    ; 5217
LD  0   1            ; 5218
LDC 113              ; 5219
CEQ                  ; 5220
TSEL    6930 5222    ; 5221
LD  0   1            ; 5222
LDC 114              ; 5223
CEQ                  ; 5224
TSEL    6940 5226    ; 5225
LD  0   1            ; 5226
LDC 115              ; 5227
CEQ                  ; 5228
TSEL    6950 5230    ; 5229
LD  0   1            ; 5230
LDC 116              ; 5231
CEQ                  ; 5232
TSEL    6960 5234    ; 5233
LD  0   1            ; 5234
LDC 117              ; 5235
CEQ                  ; 5236
TSEL    6970 5238    ; 5237
LD  0   1            ; 5238
LDC 118              ; 5239
CEQ                  ; 5240
TSEL    6980 5242    ; 5241
LD  0   1            ; 5242
LDC 119              ; 5243
CEQ                  ; 5244
TSEL    6990 5246    ; 5245
LD  0   1            ; 5246
LDC 120              ; 5247
CEQ                  ; 5248
TSEL    7000 5250    ; 5249
LD  0   1            ; 5250
LDC 121              ; 5251
CEQ                  ; 5252
TSEL    7010 5254    ; 5253
LD  0   1            ; 5254
LDC 122              ; 5255
CEQ                  ; 5256
TSEL    7020 5258    ; 5257
LD  0   1            ; 5258
LDC 123              ; 5259
CEQ                  ; 5260
TSEL    7030 5262    ; 5261
LD  0   1            ; 5262
LDC 124              ; 5263
CEQ                  ; 5264
TSEL    7040 5266    ; 5265
LD  0   1            ; 5266
LDC 125              ; 5267
CEQ                  ; 5268
TSEL    7050 5270    ; 5269
LD  0   1            ; 5270
LDC 126              ; 5271
CEQ                  ; 5272
TSEL    7060 5274    ; 5273
LD  0   1            ; 5274
LDC 127              ; 5275
CEQ                  ; 5276
TSEL    7070 5278    ; 5277
LD  0   1            ; 5278
LDC 128              ; 5279
CEQ                  ; 5280
TSEL    7080 5282    ; 5281
LD  0   1            ; 5282
LDC 129              ; 5283
CEQ                  ; 5284
TSEL    7090 5286    ; 5285
LD  0   1            ; 5286
LDC 130              ; 5287
CEQ                  ; 5288
TSEL    7100 5290    ; 5289
LD  0   1            ; 5290
LDC 131              ; 5291
CEQ                  ; 5292
TSEL    7110 5294    ; 5293
LD  0   1            ; 5294
LDC 132              ; 5295
CEQ                  ; 5296
TSEL    7120 5298    ; 5297
LD  0   1            ; 5298
LDC 133              ; 5299
CEQ                  ; 5300
TSEL    7130 5302    ; 5301
LD  0   1            ; 5302
LDC 134              ; 5303
CEQ                  ; 5304
TSEL    7140 5306    ; 5305
LD  0   1            ; 5306
LDC 135              ; 5307
CEQ                  ; 5308
TSEL    7150 5310    ; 5309
LD  0   1            ; 5310
LDC 136              ; 5311
CEQ                  ; 5312
TSEL    7160 5314    ; 5313
LD  0   1            ; 5314
LDC 137              ; 5315
CEQ                  ; 5316
TSEL    7170 5318    ; 5317
LD  0   1            ; 5318
LDC 138              ; 5319
CEQ                  ; 5320
TSEL    7180 5322    ; 5321
LD  0   1            ; 5322
LDC 139              ; 5323
CEQ                  ; 5324
TSEL    7190 5326    ; 5325
LD  0   1            ; 5326
LDC 140              ; 5327
CEQ                  ; 5328
TSEL    7200 5330    ; 5329
LD  0   1            ; 5330
LDC 141              ; 5331
CEQ                  ; 5332
TSEL    7210 5334    ; 5333
LD  0   1            ; 5334
LDC 142              ; 5335
CEQ                  ; 5336
TSEL    7220 5338    ; 5337
LD  0   1            ; 5338
LDC 143              ; 5339
CEQ                  ; 5340
TSEL    7230 5342    ; 5341
LD  0   1            ; 5342
LDC 144              ; 5343
CEQ                  ; 5344
TSEL    7240 5346    ; 5345
LD  0   1            ; 5346
LDC 145              ; 5347
CEQ                  ; 5348
TSEL    7250 5350    ; 5349
LD  0   1            ; 5350
LDC 146              ; 5351
CEQ                  ; 5352
TSEL    7260 5354    ; 5353
LD  0   1            ; 5354
LDC 147              ; 5355
CEQ                  ; 5356
TSEL    7270 5358    ; 5357
LD  0   1            ; 5358
LDC 148              ; 5359
CEQ                  ; 5360
TSEL    7280 5362    ; 5361
LD  0   1            ; 5362
LDC 149              ; 5363
CEQ                  ; 5364
TSEL    7290 5366    ; 5365
LD  0   1            ; 5366
LDC 150              ; 5367
CEQ                  ; 5368
TSEL    7300 5370    ; 5369
LD  0   1            ; 5370
LDC 151              ; 5371
CEQ                  ; 5372
TSEL    7310 5374    ; 5373
LD  0   1            ; 5374
LDC 152              ; 5375
CEQ                  ; 5376
TSEL    7320 5378    ; 5377
LD  0   1            ; 5378
LDC 153              ; 5379
CEQ                  ; 5380
TSEL    7330 5382    ; 5381
LD  0   1            ; 5382
LDC 154              ; 5383
CEQ                  ; 5384
TSEL    7340 5386    ; 5385
LD  0   1            ; 5386
LDC 155              ; 5387
CEQ                  ; 5388
TSEL    7350 5390    ; 5389
LD  0   1            ; 5390
LDC 156              ; 5391
CEQ                  ; 5392
TSEL    7360 5394    ; 5393
LD  0   1            ; 5394
LDC 157              ; 5395
CEQ                  ; 5396
TSEL    7370 5398    ; 5397
LD  0   1            ; 5398
LDC 158              ; 5399
CEQ                  ; 5400
TSEL    7380 5402    ; 5401
LD  0   1            ; 5402
LDC 159              ; 5403
CEQ                  ; 5404
TSEL    7390 5406    ; 5405
LD  0   1            ; 5406
LDC 160              ; 5407
CEQ                  ; 5408
TSEL    7400 5410    ; 5409
LD  0   1            ; 5410
LDC 161              ; 5411
CEQ                  ; 5412
TSEL    7410 5414    ; 5413
LD  0   1            ; 5414
LDC 162              ; 5415
CEQ                  ; 5416
TSEL    7420 5418    ; 5417
LD  0   1            ; 5418
LDC 163              ; 5419
CEQ                  ; 5420
TSEL    7430 5422    ; 5421
LD  0   1            ; 5422
LDC 164              ; 5423
CEQ                  ; 5424
TSEL    7440 5426    ; 5425
LD  0   1            ; 5426
LDC 165              ; 5427
CEQ                  ; 5428
TSEL    7450 5430    ; 5429
LD  0   1            ; 5430
LDC 166              ; 5431
CEQ                  ; 5432
TSEL    7460 5434    ; 5433
LD  0   1            ; 5434
LDC 167              ; 5435
CEQ                  ; 5436
TSEL    7470 5438    ; 5437
LD  0   1            ; 5438
LDC 168              ; 5439
CEQ                  ; 5440
TSEL    7480 5442    ; 5441
LD  0   1            ; 5442
LDC 169              ; 5443
CEQ                  ; 5444
TSEL    7490 5446    ; 5445
LD  0   1            ; 5446
LDC 170              ; 5447
CEQ                  ; 5448
TSEL    7500 5450    ; 5449
LD  0   1            ; 5450
LDC 171              ; 5451
CEQ                  ; 5452
TSEL    7510 5454    ; 5453
LD  0   1            ; 5454
LDC 172              ; 5455
CEQ                  ; 5456
TSEL    7520 5458    ; 5457
LD  0   1            ; 5458
LDC 173              ; 5459
CEQ                  ; 5460
TSEL    7530 5462    ; 5461
LD  0   1            ; 5462
LDC 174              ; 5463
CEQ                  ; 5464
TSEL    7540 5466    ; 5465
LD  0   1            ; 5466
LDC 175              ; 5467
CEQ                  ; 5468
TSEL    7550 5470    ; 5469
LD  0   1            ; 5470
LDC 176              ; 5471
CEQ                  ; 5472
TSEL    7560 5474    ; 5473
LD  0   1            ; 5474
LDC 177              ; 5475
CEQ                  ; 5476
TSEL    7570 5478    ; 5477
LD  0   1            ; 5478
LDC 178              ; 5479
CEQ                  ; 5480
TSEL    7580 5482    ; 5481
LD  0   1            ; 5482
LDC 179              ; 5483
CEQ                  ; 5484
TSEL    7590 5486    ; 5485
LD  0   1            ; 5486
LDC 180              ; 5487
CEQ                  ; 5488
TSEL    7600 5490    ; 5489
LD  0   1            ; 5490
LDC 181              ; 5491
CEQ                  ; 5492
TSEL    7610 5494    ; 5493
LD  0   1            ; 5494
LDC 182              ; 5495
CEQ                  ; 5496
TSEL    7620 5498    ; 5497
LD  0   1            ; 5498
LDC 183              ; 5499
CEQ                  ; 5500
TSEL    7630 5502    ; 5501
LD  0   1            ; 5502
LDC 184              ; 5503
CEQ                  ; 5504
TSEL    7640 5506    ; 5505
LD  0   1            ; 5506
LDC 185              ; 5507
CEQ                  ; 5508
TSEL    7650 5510    ; 5509
LD  0   1            ; 5510
LDC 186              ; 5511
CEQ                  ; 5512
TSEL    7660 5514    ; 5513
LD  0   1            ; 5514
LDC 187              ; 5515
CEQ                  ; 5516
TSEL    7670 5518    ; 5517
LD  0   1            ; 5518
LDC 188              ; 5519
CEQ                  ; 5520
TSEL    7680 5522    ; 5521
LD  0   1            ; 5522
LDC 189              ; 5523
CEQ                  ; 5524
TSEL    7690 5526    ; 5525
LD  0   1            ; 5526
LDC 190              ; 5527
CEQ                  ; 5528
TSEL    7700 5530    ; 5529
LD  0   1            ; 5530
LDC 191              ; 5531
CEQ                  ; 5532
TSEL    7710 5534    ; 5533
LD  0   1            ; 5534
LDC 192              ; 5535
CEQ                  ; 5536
TSEL    7720 5538    ; 5537
LD  0   1            ; 5538
LDC 193              ; 5539
CEQ                  ; 5540
TSEL    7730 5542    ; 5541
LD  0   1            ; 5542
LDC 194              ; 5543
CEQ                  ; 5544
TSEL    7740 5546    ; 5545
LD  0   1            ; 5546
LDC 195              ; 5547
CEQ                  ; 5548
TSEL    7750 5550    ; 5549
LD  0   1            ; 5550
LDC 196              ; 5551
CEQ                  ; 5552
TSEL    7760 5554    ; 5553
LD  0   1            ; 5554
LDC 197              ; 5555
CEQ                  ; 5556
TSEL    7770 5558    ; 5557
LD  0   1            ; 5558
LDC 198              ; 5559
CEQ                  ; 5560
TSEL    7780 5562    ; 5561
LD  0   1            ; 5562
LDC 199              ; 5563
CEQ                  ; 5564
TSEL    7790 5566    ; 5565
LD  0   1            ; 5566
LDC 200              ; 5567
CEQ                  ; 5568
TSEL    7800 5570    ; 5569
LD  0   1            ; 5570
LDC 201              ; 5571
CEQ                  ; 5572
TSEL    7810 5574    ; 5573
LD  0   1            ; 5574
LDC 202              ; 5575
CEQ                  ; 5576
TSEL    7820 5578    ; 5577
LD  0   1            ; 5578
LDC 203              ; 5579
CEQ                  ; 5580
TSEL    7830 5582    ; 5581
LD  0   1            ; 5582
LDC 204              ; 5583
CEQ                  ; 5584
TSEL    7840 5586    ; 5585
LD  0   1            ; 5586
LDC 205              ; 5587
CEQ                  ; 5588
TSEL    7850 5590    ; 5589
LD  0   1            ; 5590
LDC 206              ; 5591
CEQ                  ; 5592
TSEL    7860 5594    ; 5593
LD  0   1            ; 5594
LDC 207              ; 5595
CEQ                  ; 5596
TSEL    7870 5598    ; 5597
LD  0   1            ; 5598
LDC 208              ; 5599
CEQ                  ; 5600
TSEL    7880 5602    ; 5601
LD  0   1            ; 5602
LDC 209              ; 5603
CEQ                  ; 5604
TSEL    7890 5606    ; 5605
LD  0   1            ; 5606
LDC 210              ; 5607
CEQ                  ; 5608
TSEL    7900 5610    ; 5609
LD  0   1            ; 5610
LDC 211              ; 5611
CEQ                  ; 5612
TSEL    7910 5614    ; 5613
LD  0   1            ; 5614
LDC 212              ; 5615
CEQ                  ; 5616
TSEL    7920 5618    ; 5617
LD  0   1            ; 5618
LDC 213              ; 5619
CEQ                  ; 5620
TSEL    7930 5622    ; 5621
LD  0   1            ; 5622
LDC 214              ; 5623
CEQ                  ; 5624
TSEL    7940 5626    ; 5625
LD  0   1            ; 5626
LDC 215              ; 5627
CEQ                  ; 5628
TSEL    7950 5630    ; 5629
LD  0   1            ; 5630
LDC 216              ; 5631
CEQ                  ; 5632
TSEL    7960 5634    ; 5633
LD  0   1            ; 5634
LDC 217              ; 5635
CEQ                  ; 5636
TSEL    7970 5638    ; 5637
LD  0   1            ; 5638
LDC 218              ; 5639
CEQ                  ; 5640
TSEL    7980 5642    ; 5641
LD  0   1            ; 5642
LDC 219              ; 5643
CEQ                  ; 5644
TSEL    7990 5646    ; 5645
LD  0   1            ; 5646
LDC 220              ; 5647
CEQ                  ; 5648
TSEL    8000 5650    ; 5649
LD  0   1            ; 5650
LDC 221              ; 5651
CEQ                  ; 5652
TSEL    8010 5654    ; 5653
LD  0   1            ; 5654
LDC 222              ; 5655
CEQ                  ; 5656
TSEL    8020 5658    ; 5657
LD  0   1            ; 5658
LDC 223              ; 5659
CEQ                  ; 5660
TSEL    8030 5662    ; 5661
LD  0   1            ; 5662
LDC 224              ; 5663
CEQ                  ; 5664
TSEL    8040 5666    ; 5665
LD  0   1            ; 5666
LDC 225              ; 5667
CEQ                  ; 5668
TSEL    8050 5670    ; 5669
LD  0   1            ; 5670
LDC 226              ; 5671
CEQ                  ; 5672
TSEL    8060 5674    ; 5673
LD  0   1            ; 5674
LDC 227              ; 5675
CEQ                  ; 5676
TSEL    8070 5678    ; 5677
LD  0   1            ; 5678
LDC 228              ; 5679
CEQ                  ; 5680
TSEL    8080 5682    ; 5681
LD  0   1            ; 5682
LDC 229              ; 5683
CEQ                  ; 5684
TSEL    8090 5686    ; 5685
LD  0   1            ; 5686
LDC 230              ; 5687
CEQ                  ; 5688
TSEL    8100 5690    ; 5689
LD  0   1            ; 5690
LDC 231              ; 5691
CEQ                  ; 5692
TSEL    8110 5694    ; 5693
LD  0   1            ; 5694
LDC 232              ; 5695
CEQ                  ; 5696
TSEL    8120 5698    ; 5697
LD  0   1            ; 5698
LDC 233              ; 5699
CEQ                  ; 5700
TSEL    8130 5702    ; 5701
LD  0   1            ; 5702
LDC 234              ; 5703
CEQ                  ; 5704
TSEL    8140 5706    ; 5705
LD  0   1            ; 5706
LDC 235              ; 5707
CEQ                  ; 5708
TSEL    8150 5710    ; 5709
LD  0   1            ; 5710
LDC 236              ; 5711
CEQ                  ; 5712
TSEL    8160 5714    ; 5713
LD  0   1            ; 5714
LDC 237              ; 5715
CEQ                  ; 5716
TSEL    8170 5718    ; 5717
LD  0   1            ; 5718
LDC 238              ; 5719
CEQ                  ; 5720
TSEL    8180 5722    ; 5721
LD  0   1            ; 5722
LDC 239              ; 5723
CEQ                  ; 5724
TSEL    8190 5726    ; 5725
LD  0   1            ; 5726
LDC 240              ; 5727
CEQ                  ; 5728
TSEL    8200 5730    ; 5729
LD  0   1            ; 5730
LDC 241              ; 5731
CEQ                  ; 5732
TSEL    8210 5734    ; 5733
LD  0   1            ; 5734
LDC 242              ; 5735
CEQ                  ; 5736
TSEL    8220 5738    ; 5737
LD  0   1            ; 5738
LDC 243              ; 5739
CEQ                  ; 5740
TSEL    8230 5742    ; 5741
LD  0   1            ; 5742
LDC 244              ; 5743
CEQ                  ; 5744
TSEL    8240 5746    ; 5745
LD  0   1            ; 5746
LDC 245              ; 5747
CEQ                  ; 5748
TSEL    8250 5750    ; 5749
LD  0   1            ; 5750
LDC 246              ; 5751
CEQ                  ; 5752
TSEL    8260 5754    ; 5753
LD  0   1            ; 5754
LDC 247              ; 5755
CEQ                  ; 5756
TSEL    8270 5758    ; 5757
LD  0   1            ; 5758
LDC 248              ; 5759
CEQ                  ; 5760
TSEL    8280 5762    ; 5761
LD  0   1            ; 5762
LDC 249              ; 5763
CEQ                  ; 5764
TSEL    8290 5766    ; 5765
LD  0   1            ; 5766
LDC 250              ; 5767
CEQ                  ; 5768
TSEL    8300 5770    ; 5769
LD  0   1            ; 5770
LDC 251              ; 5771
CEQ                  ; 5772
TSEL    8310 5774    ; 5773
LD  0   1            ; 5774
LDC 252              ; 5775
CEQ                  ; 5776
TSEL    8320 5778    ; 5777
LD  0   1            ; 5778
LDC 253              ; 5779
CEQ                  ; 5780
TSEL    8330 5782    ; 5781
LD  0   1            ; 5782
LDC 254              ; 5783
CEQ                  ; 5784
TSEL    8340 5786    ; 5785
LD  0   1            ; 5786
LDC 255              ; 5787
CEQ                  ; 5788
TSEL    8350 5790    ; 5789
LDC  0               ; 5790
RTN                  ; 5791
LD  2   0            ; 5792
RTN                  ; 5793
LDF 5792             ; 5794
RTN                  ; 5795
LD  2   0            ; 5796
LD  0   0            ; 5797
ST  2   0            ; 5798
RTN                  ; 5799
LDF 5796             ; 5800
RTN                  ; 5801
LD  2   1            ; 5802
RTN                  ; 5803
LDF 5802             ; 5804
RTN                  ; 5805
LD  2   1            ; 5806
LD  0   0            ; 5807
ST  2   1            ; 5808
RTN                  ; 5809
LDF 5806             ; 5810
RTN                  ; 5811
LD  2   2            ; 5812
RTN                  ; 5813
LDF 5812             ; 5814
RTN                  ; 5815
LD  2   2            ; 5816
LD  0   0            ; 5817
ST  2   2            ; 5818
RTN                  ; 5819
LDF 5816             ; 5820
RTN                  ; 5821
LD  2   3            ; 5822
RTN                  ; 5823
LDF 5822             ; 5824
RTN                  ; 5825
LD  2   3            ; 5826
LD  0   0            ; 5827
ST  2   3            ; 5828
RTN                  ; 5829
LDF 5826             ; 5830
RTN                  ; 5831
LD  2   4            ; 5832
RTN                  ; 5833
LDF 5832             ; 5834
RTN                  ; 5835
LD  2   4            ; 5836
LD  0   0            ; 5837
ST  2   4            ; 5838
RTN                  ; 5839
LDF 5836             ; 5840
RTN                  ; 5841
LD  2   5            ; 5842
RTN                  ; 5843
LDF 5842             ; 5844
RTN                  ; 5845
LD  2   5            ; 5846
LD  0   0            ; 5847
ST  2   5            ; 5848
RTN                  ; 5849
LDF 5846             ; 5850
RTN                  ; 5851
LD  2   6            ; 5852
RTN                  ; 5853
LDF 5852             ; 5854
RTN                  ; 5855
LD  2   6            ; 5856
LD  0   0            ; 5857
ST  2   6            ; 5858
RTN                  ; 5859
LDF 5856             ; 5860
RTN                  ; 5861
LD  2   7            ; 5862
RTN                  ; 5863
LDF 5862             ; 5864
RTN                  ; 5865
LD  2   7            ; 5866
LD  0   0            ; 5867
ST  2   7            ; 5868
RTN                  ; 5869
LDF 5866             ; 5870
RTN                  ; 5871
LD  2   8            ; 5872
RTN                  ; 5873
LDF 5872             ; 5874
RTN                  ; 5875
LD  2   8            ; 5876
LD  0   0            ; 5877
ST  2   8            ; 5878
RTN                  ; 5879
LDF 5876             ; 5880
RTN                  ; 5881
LD  2   9            ; 5882
RTN                  ; 5883
LDF 5882             ; 5884
RTN                  ; 5885
LD  2   9            ; 5886
LD  0   0            ; 5887
ST  2   9            ; 5888
RTN                  ; 5889
LDF 5886             ; 5890
RTN                  ; 5891
LD  2   10           ; 5892
RTN                  ; 5893
LDF 5892             ; 5894
RTN                  ; 5895
LD  2   10           ; 5896
LD  0   0            ; 5897
ST  2   10           ; 5898
RTN                  ; 5899
LDF 5896             ; 5900
RTN                  ; 5901
LD  2   11           ; 5902
RTN                  ; 5903
LDF 5902             ; 5904
RTN                  ; 5905
LD  2   11           ; 5906
LD  0   0            ; 5907
ST  2   11           ; 5908
RTN                  ; 5909
LDF 5906             ; 5910
RTN                  ; 5911
LD  2   12           ; 5912
RTN                  ; 5913
LDF 5912             ; 5914
RTN                  ; 5915
LD  2   12           ; 5916
LD  0   0            ; 5917
ST  2   12           ; 5918
RTN                  ; 5919
LDF 5916             ; 5920
RTN                  ; 5921
LD  2   13           ; 5922
RTN                  ; 5923
LDF 5922             ; 5924
RTN                  ; 5925
LD  2   13           ; 5926
LD  0   0            ; 5927
ST  2   13           ; 5928
RTN                  ; 5929
LDF 5926             ; 5930
RTN                  ; 5931
LD  2   14           ; 5932
RTN                  ; 5933
LDF 5932             ; 5934
RTN                  ; 5935
LD  2   14           ; 5936
LD  0   0            ; 5937
ST  2   14           ; 5938
RTN                  ; 5939
LDF 5936             ; 5940
RTN                  ; 5941
LD  2   15           ; 5942
RTN                  ; 5943
LDF 5942             ; 5944
RTN                  ; 5945
LD  2   15           ; 5946
LD  0   0            ; 5947
ST  2   15           ; 5948
RTN                  ; 5949
LDF 5946             ; 5950
RTN                  ; 5951
LD  2   16           ; 5952
RTN                  ; 5953
LDF 5952             ; 5954
RTN                  ; 5955
LD  2   16           ; 5956
LD  0   0            ; 5957
ST  2   16           ; 5958
RTN                  ; 5959
LDF 5956             ; 5960
RTN                  ; 5961
LD  2   17           ; 5962
RTN                  ; 5963
LDF 5962             ; 5964
RTN                  ; 5965
LD  2   17           ; 5966
LD  0   0            ; 5967
ST  2   17           ; 5968
RTN                  ; 5969
LDF 5966             ; 5970
RTN                  ; 5971
LD  2   18           ; 5972
RTN                  ; 5973
LDF 5972             ; 5974
RTN                  ; 5975
LD  2   18           ; 5976
LD  0   0            ; 5977
ST  2   18           ; 5978
RTN                  ; 5979
LDF 5976             ; 5980
RTN                  ; 5981
LD  2   19           ; 5982
RTN                  ; 5983
LDF 5982             ; 5984
RTN                  ; 5985
LD  2   19           ; 5986
LD  0   0            ; 5987
ST  2   19           ; 5988
RTN                  ; 5989
LDF 5986             ; 5990
RTN                  ; 5991
LD  2   20           ; 5992
RTN                  ; 5993
LDF 5992             ; 5994
RTN                  ; 5995
LD  2   20           ; 5996
LD  0   0            ; 5997
ST  2   20           ; 5998
RTN                  ; 5999
LDF 5996             ; 6000
RTN                  ; 6001
LD  2   21           ; 6002
RTN                  ; 6003
LDF 6002             ; 6004
RTN                  ; 6005
LD  2   21           ; 6006
LD  0   0            ; 6007
ST  2   21           ; 6008
RTN                  ; 6009
LDF 6006             ; 6010
RTN                  ; 6011
LD  2   22           ; 6012
RTN                  ; 6013
LDF 6012             ; 6014
RTN                  ; 6015
LD  2   22           ; 6016
LD  0   0            ; 6017
ST  2   22           ; 6018
RTN                  ; 6019
LDF 6016             ; 6020
RTN                  ; 6021
LD  2   23           ; 6022
RTN                  ; 6023
LDF 6022             ; 6024
RTN                  ; 6025
LD  2   23           ; 6026
LD  0   0            ; 6027
ST  2   23           ; 6028
RTN                  ; 6029
LDF 6026             ; 6030
RTN                  ; 6031
LD  2   24           ; 6032
RTN                  ; 6033
LDF 6032             ; 6034
RTN                  ; 6035
LD  2   24           ; 6036
LD  0   0            ; 6037
ST  2   24           ; 6038
RTN                  ; 6039
LDF 6036             ; 6040
RTN                  ; 6041
LD  2   25           ; 6042
RTN                  ; 6043
LDF 6042             ; 6044
RTN                  ; 6045
LD  2   25           ; 6046
LD  0   0            ; 6047
ST  2   25           ; 6048
RTN                  ; 6049
LDF 6046             ; 6050
RTN                  ; 6051
LD  2   26           ; 6052
RTN                  ; 6053
LDF 6052             ; 6054
RTN                  ; 6055
LD  2   26           ; 6056
LD  0   0            ; 6057
ST  2   26           ; 6058
RTN                  ; 6059
LDF 6056             ; 6060
RTN                  ; 6061
LD  2   27           ; 6062
RTN                  ; 6063
LDF 6062             ; 6064
RTN                  ; 6065
LD  2   27           ; 6066
LD  0   0            ; 6067
ST  2   27           ; 6068
RTN                  ; 6069
LDF 6066             ; 6070
RTN                  ; 6071
LD  2   28           ; 6072
RTN                  ; 6073
LDF 6072             ; 6074
RTN                  ; 6075
LD  2   28           ; 6076
LD  0   0            ; 6077
ST  2   28           ; 6078
RTN                  ; 6079
LDF 6076             ; 6080
RTN                  ; 6081
LD  2   29           ; 6082
RTN                  ; 6083
LDF 6082             ; 6084
RTN                  ; 6085
LD  2   29           ; 6086
LD  0   0            ; 6087
ST  2   29           ; 6088
RTN                  ; 6089
LDF 6086             ; 6090
RTN                  ; 6091
LD  2   30           ; 6092
RTN                  ; 6093
LDF 6092             ; 6094
RTN                  ; 6095
LD  2   30           ; 6096
LD  0   0            ; 6097
ST  2   30           ; 6098
RTN                  ; 6099
LDF 6096             ; 6100
RTN                  ; 6101
LD  2   31           ; 6102
RTN                  ; 6103
LDF 6102             ; 6104
RTN                  ; 6105
LD  2   31           ; 6106
LD  0   0            ; 6107
ST  2   31           ; 6108
RTN                  ; 6109
LDF 6106             ; 6110
RTN                  ; 6111
LD  2   32           ; 6112
RTN                  ; 6113
LDF 6112             ; 6114
RTN                  ; 6115
LD  2   32           ; 6116
LD  0   0            ; 6117
ST  2   32           ; 6118
RTN                  ; 6119
LDF 6116             ; 6120
RTN                  ; 6121
LD  2   33           ; 6122
RTN                  ; 6123
LDF 6122             ; 6124
RTN                  ; 6125
LD  2   33           ; 6126
LD  0   0            ; 6127
ST  2   33           ; 6128
RTN                  ; 6129
LDF 6126             ; 6130
RTN                  ; 6131
LD  2   34           ; 6132
RTN                  ; 6133
LDF 6132             ; 6134
RTN                  ; 6135
LD  2   34           ; 6136
LD  0   0            ; 6137
ST  2   34           ; 6138
RTN                  ; 6139
LDF 6136             ; 6140
RTN                  ; 6141
LD  2   35           ; 6142
RTN                  ; 6143
LDF 6142             ; 6144
RTN                  ; 6145
LD  2   35           ; 6146
LD  0   0            ; 6147
ST  2   35           ; 6148
RTN                  ; 6149
LDF 6146             ; 6150
RTN                  ; 6151
LD  2   36           ; 6152
RTN                  ; 6153
LDF 6152             ; 6154
RTN                  ; 6155
LD  2   36           ; 6156
LD  0   0            ; 6157
ST  2   36           ; 6158
RTN                  ; 6159
LDF 6156             ; 6160
RTN                  ; 6161
LD  2   37           ; 6162
RTN                  ; 6163
LDF 6162             ; 6164
RTN                  ; 6165
LD  2   37           ; 6166
LD  0   0            ; 6167
ST  2   37           ; 6168
RTN                  ; 6169
LDF 6166             ; 6170
RTN                  ; 6171
LD  2   38           ; 6172
RTN                  ; 6173
LDF 6172             ; 6174
RTN                  ; 6175
LD  2   38           ; 6176
LD  0   0            ; 6177
ST  2   38           ; 6178
RTN                  ; 6179
LDF 6176             ; 6180
RTN                  ; 6181
LD  2   39           ; 6182
RTN                  ; 6183
LDF 6182             ; 6184
RTN                  ; 6185
LD  2   39           ; 6186
LD  0   0            ; 6187
ST  2   39           ; 6188
RTN                  ; 6189
LDF 6186             ; 6190
RTN                  ; 6191
LD  2   40           ; 6192
RTN                  ; 6193
LDF 6192             ; 6194
RTN                  ; 6195
LD  2   40           ; 6196
LD  0   0            ; 6197
ST  2   40           ; 6198
RTN                  ; 6199
LDF 6196             ; 6200
RTN                  ; 6201
LD  2   41           ; 6202
RTN                  ; 6203
LDF 6202             ; 6204
RTN                  ; 6205
LD  2   41           ; 6206
LD  0   0            ; 6207
ST  2   41           ; 6208
RTN                  ; 6209
LDF 6206             ; 6210
RTN                  ; 6211
LD  2   42           ; 6212
RTN                  ; 6213
LDF 6212             ; 6214
RTN                  ; 6215
LD  2   42           ; 6216
LD  0   0            ; 6217
ST  2   42           ; 6218
RTN                  ; 6219
LDF 6216             ; 6220
RTN                  ; 6221
LD  2   43           ; 6222
RTN                  ; 6223
LDF 6222             ; 6224
RTN                  ; 6225
LD  2   43           ; 6226
LD  0   0            ; 6227
ST  2   43           ; 6228
RTN                  ; 6229
LDF 6226             ; 6230
RTN                  ; 6231
LD  2   44           ; 6232
RTN                  ; 6233
LDF 6232             ; 6234
RTN                  ; 6235
LD  2   44           ; 6236
LD  0   0            ; 6237
ST  2   44           ; 6238
RTN                  ; 6239
LDF 6236             ; 6240
RTN                  ; 6241
LD  2   45           ; 6242
RTN                  ; 6243
LDF 6242             ; 6244
RTN                  ; 6245
LD  2   45           ; 6246
LD  0   0            ; 6247
ST  2   45           ; 6248
RTN                  ; 6249
LDF 6246             ; 6250
RTN                  ; 6251
LD  2   46           ; 6252
RTN                  ; 6253
LDF 6252             ; 6254
RTN                  ; 6255
LD  2   46           ; 6256
LD  0   0            ; 6257
ST  2   46           ; 6258
RTN                  ; 6259
LDF 6256             ; 6260
RTN                  ; 6261
LD  2   47           ; 6262
RTN                  ; 6263
LDF 6262             ; 6264
RTN                  ; 6265
LD  2   47           ; 6266
LD  0   0            ; 6267
ST  2   47           ; 6268
RTN                  ; 6269
LDF 6266             ; 6270
RTN                  ; 6271
LD  2   48           ; 6272
RTN                  ; 6273
LDF 6272             ; 6274
RTN                  ; 6275
LD  2   48           ; 6276
LD  0   0            ; 6277
ST  2   48           ; 6278
RTN                  ; 6279
LDF 6276             ; 6280
RTN                  ; 6281
LD  2   49           ; 6282
RTN                  ; 6283
LDF 6282             ; 6284
RTN                  ; 6285
LD  2   49           ; 6286
LD  0   0            ; 6287
ST  2   49           ; 6288
RTN                  ; 6289
LDF 6286             ; 6290
RTN                  ; 6291
LD  2   50           ; 6292
RTN                  ; 6293
LDF 6292             ; 6294
RTN                  ; 6295
LD  2   50           ; 6296
LD  0   0            ; 6297
ST  2   50           ; 6298
RTN                  ; 6299
LDF 6296             ; 6300
RTN                  ; 6301
LD  2   51           ; 6302
RTN                  ; 6303
LDF 6302             ; 6304
RTN                  ; 6305
LD  2   51           ; 6306
LD  0   0            ; 6307
ST  2   51           ; 6308
RTN                  ; 6309
LDF 6306             ; 6310
RTN                  ; 6311
LD  2   52           ; 6312
RTN                  ; 6313
LDF 6312             ; 6314
RTN                  ; 6315
LD  2   52           ; 6316
LD  0   0            ; 6317
ST  2   52           ; 6318
RTN                  ; 6319
LDF 6316             ; 6320
RTN                  ; 6321
LD  2   53           ; 6322
RTN                  ; 6323
LDF 6322             ; 6324
RTN                  ; 6325
LD  2   53           ; 6326
LD  0   0            ; 6327
ST  2   53           ; 6328
RTN                  ; 6329
LDF 6326             ; 6330
RTN                  ; 6331
LD  2   54           ; 6332
RTN                  ; 6333
LDF 6332             ; 6334
RTN                  ; 6335
LD  2   54           ; 6336
LD  0   0            ; 6337
ST  2   54           ; 6338
RTN                  ; 6339
LDF 6336             ; 6340
RTN                  ; 6341
LD  2   55           ; 6342
RTN                  ; 6343
LDF 6342             ; 6344
RTN                  ; 6345
LD  2   55           ; 6346
LD  0   0            ; 6347
ST  2   55           ; 6348
RTN                  ; 6349
LDF 6346             ; 6350
RTN                  ; 6351
LD  2   56           ; 6352
RTN                  ; 6353
LDF 6352             ; 6354
RTN                  ; 6355
LD  2   56           ; 6356
LD  0   0            ; 6357
ST  2   56           ; 6358
RTN                  ; 6359
LDF 6356             ; 6360
RTN                  ; 6361
LD  2   57           ; 6362
RTN                  ; 6363
LDF 6362             ; 6364
RTN                  ; 6365
LD  2   57           ; 6366
LD  0   0            ; 6367
ST  2   57           ; 6368
RTN                  ; 6369
LDF 6366             ; 6370
RTN                  ; 6371
LD  2   58           ; 6372
RTN                  ; 6373
LDF 6372             ; 6374
RTN                  ; 6375
LD  2   58           ; 6376
LD  0   0            ; 6377
ST  2   58           ; 6378
RTN                  ; 6379
LDF 6376             ; 6380
RTN                  ; 6381
LD  2   59           ; 6382
RTN                  ; 6383
LDF 6382             ; 6384
RTN                  ; 6385
LD  2   59           ; 6386
LD  0   0            ; 6387
ST  2   59           ; 6388
RTN                  ; 6389
LDF 6386             ; 6390
RTN                  ; 6391
LD  2   60           ; 6392
RTN                  ; 6393
LDF 6392             ; 6394
RTN                  ; 6395
LD  2   60           ; 6396
LD  0   0            ; 6397
ST  2   60           ; 6398
RTN                  ; 6399
LDF 6396             ; 6400
RTN                  ; 6401
LD  2   61           ; 6402
RTN                  ; 6403
LDF 6402             ; 6404
RTN                  ; 6405
LD  2   61           ; 6406
LD  0   0            ; 6407
ST  2   61           ; 6408
RTN                  ; 6409
LDF 6406             ; 6410
RTN                  ; 6411
LD  2   62           ; 6412
RTN                  ; 6413
LDF 6412             ; 6414
RTN                  ; 6415
LD  2   62           ; 6416
LD  0   0            ; 6417
ST  2   62           ; 6418
RTN                  ; 6419
LDF 6416             ; 6420
RTN                  ; 6421
LD  2   63           ; 6422
RTN                  ; 6423
LDF 6422             ; 6424
RTN                  ; 6425
LD  2   63           ; 6426
LD  0   0            ; 6427
ST  2   63           ; 6428
RTN                  ; 6429
LDF 6426             ; 6430
RTN                  ; 6431
LD  2   64           ; 6432
RTN                  ; 6433
LDF 6432             ; 6434
RTN                  ; 6435
LD  2   64           ; 6436
LD  0   0            ; 6437
ST  2   64           ; 6438
RTN                  ; 6439
LDF 6436             ; 6440
RTN                  ; 6441
LD  2   65           ; 6442
RTN                  ; 6443
LDF 6442             ; 6444
RTN                  ; 6445
LD  2   65           ; 6446
LD  0   0            ; 6447
ST  2   65           ; 6448
RTN                  ; 6449
LDF 6446             ; 6450
RTN                  ; 6451
LD  2   66           ; 6452
RTN                  ; 6453
LDF 6452             ; 6454
RTN                  ; 6455
LD  2   66           ; 6456
LD  0   0            ; 6457
ST  2   66           ; 6458
RTN                  ; 6459
LDF 6456             ; 6460
RTN                  ; 6461
LD  2   67           ; 6462
RTN                  ; 6463
LDF 6462             ; 6464
RTN                  ; 6465
LD  2   67           ; 6466
LD  0   0            ; 6467
ST  2   67           ; 6468
RTN                  ; 6469
LDF 6466             ; 6470
RTN                  ; 6471
LD  2   68           ; 6472
RTN                  ; 6473
LDF 6472             ; 6474
RTN                  ; 6475
LD  2   68           ; 6476
LD  0   0            ; 6477
ST  2   68           ; 6478
RTN                  ; 6479
LDF 6476             ; 6480
RTN                  ; 6481
LD  2   69           ; 6482
RTN                  ; 6483
LDF 6482             ; 6484
RTN                  ; 6485
LD  2   69           ; 6486
LD  0   0            ; 6487
ST  2   69           ; 6488
RTN                  ; 6489
LDF 6486             ; 6490
RTN                  ; 6491
LD  2   70           ; 6492
RTN                  ; 6493
LDF 6492             ; 6494
RTN                  ; 6495
LD  2   70           ; 6496
LD  0   0            ; 6497
ST  2   70           ; 6498
RTN                  ; 6499
LDF 6496             ; 6500
RTN                  ; 6501
LD  2   71           ; 6502
RTN                  ; 6503
LDF 6502             ; 6504
RTN                  ; 6505
LD  2   71           ; 6506
LD  0   0            ; 6507
ST  2   71           ; 6508
RTN                  ; 6509
LDF 6506             ; 6510
RTN                  ; 6511
LD  2   72           ; 6512
RTN                  ; 6513
LDF 6512             ; 6514
RTN                  ; 6515
LD  2   72           ; 6516
LD  0   0            ; 6517
ST  2   72           ; 6518
RTN                  ; 6519
LDF 6516             ; 6520
RTN                  ; 6521
LD  2   73           ; 6522
RTN                  ; 6523
LDF 6522             ; 6524
RTN                  ; 6525
LD  2   73           ; 6526
LD  0   0            ; 6527
ST  2   73           ; 6528
RTN                  ; 6529
LDF 6526             ; 6530
RTN                  ; 6531
LD  2   74           ; 6532
RTN                  ; 6533
LDF 6532             ; 6534
RTN                  ; 6535
LD  2   74           ; 6536
LD  0   0            ; 6537
ST  2   74           ; 6538
RTN                  ; 6539
LDF 6536             ; 6540
RTN                  ; 6541
LD  2   75           ; 6542
RTN                  ; 6543
LDF 6542             ; 6544
RTN                  ; 6545
LD  2   75           ; 6546
LD  0   0            ; 6547
ST  2   75           ; 6548
RTN                  ; 6549
LDF 6546             ; 6550
RTN                  ; 6551
LD  2   76           ; 6552
RTN                  ; 6553
LDF 6552             ; 6554
RTN                  ; 6555
LD  2   76           ; 6556
LD  0   0            ; 6557
ST  2   76           ; 6558
RTN                  ; 6559
LDF 6556             ; 6560
RTN                  ; 6561
LD  2   77           ; 6562
RTN                  ; 6563
LDF 6562             ; 6564
RTN                  ; 6565
LD  2   77           ; 6566
LD  0   0            ; 6567
ST  2   77           ; 6568
RTN                  ; 6569
LDF 6566             ; 6570
RTN                  ; 6571
LD  2   78           ; 6572
RTN                  ; 6573
LDF 6572             ; 6574
RTN                  ; 6575
LD  2   78           ; 6576
LD  0   0            ; 6577
ST  2   78           ; 6578
RTN                  ; 6579
LDF 6576             ; 6580
RTN                  ; 6581
LD  2   79           ; 6582
RTN                  ; 6583
LDF 6582             ; 6584
RTN                  ; 6585
LD  2   79           ; 6586
LD  0   0            ; 6587
ST  2   79           ; 6588
RTN                  ; 6589
LDF 6586             ; 6590
RTN                  ; 6591
LD  2   80           ; 6592
RTN                  ; 6593
LDF 6592             ; 6594
RTN                  ; 6595
LD  2   80           ; 6596
LD  0   0            ; 6597
ST  2   80           ; 6598
RTN                  ; 6599
LDF 6596             ; 6600
RTN                  ; 6601
LD  2   81           ; 6602
RTN                  ; 6603
LDF 6602             ; 6604
RTN                  ; 6605
LD  2   81           ; 6606
LD  0   0            ; 6607
ST  2   81           ; 6608
RTN                  ; 6609
LDF 6606             ; 6610
RTN                  ; 6611
LD  2   82           ; 6612
RTN                  ; 6613
LDF 6612             ; 6614
RTN                  ; 6615
LD  2   82           ; 6616
LD  0   0            ; 6617
ST  2   82           ; 6618
RTN                  ; 6619
LDF 6616             ; 6620
RTN                  ; 6621
LD  2   83           ; 6622
RTN                  ; 6623
LDF 6622             ; 6624
RTN                  ; 6625
LD  2   83           ; 6626
LD  0   0            ; 6627
ST  2   83           ; 6628
RTN                  ; 6629
LDF 6626             ; 6630
RTN                  ; 6631
LD  2   84           ; 6632
RTN                  ; 6633
LDF 6632             ; 6634
RTN                  ; 6635
LD  2   84           ; 6636
LD  0   0            ; 6637
ST  2   84           ; 6638
RTN                  ; 6639
LDF 6636             ; 6640
RTN                  ; 6641
LD  2   85           ; 6642
RTN                  ; 6643
LDF 6642             ; 6644
RTN                  ; 6645
LD  2   85           ; 6646
LD  0   0            ; 6647
ST  2   85           ; 6648
RTN                  ; 6649
LDF 6646             ; 6650
RTN                  ; 6651
LD  2   86           ; 6652
RTN                  ; 6653
LDF 6652             ; 6654
RTN                  ; 6655
LD  2   86           ; 6656
LD  0   0            ; 6657
ST  2   86           ; 6658
RTN                  ; 6659
LDF 6656             ; 6660
RTN                  ; 6661
LD  2   87           ; 6662
RTN                  ; 6663
LDF 6662             ; 6664
RTN                  ; 6665
LD  2   87           ; 6666
LD  0   0            ; 6667
ST  2   87           ; 6668
RTN                  ; 6669
LDF 6666             ; 6670
RTN                  ; 6671
LD  2   88           ; 6672
RTN                  ; 6673
LDF 6672             ; 6674
RTN                  ; 6675
LD  2   88           ; 6676
LD  0   0            ; 6677
ST  2   88           ; 6678
RTN                  ; 6679
LDF 6676             ; 6680
RTN                  ; 6681
LD  2   89           ; 6682
RTN                  ; 6683
LDF 6682             ; 6684
RTN                  ; 6685
LD  2   89           ; 6686
LD  0   0            ; 6687
ST  2   89           ; 6688
RTN                  ; 6689
LDF 6686             ; 6690
RTN                  ; 6691
LD  2   90           ; 6692
RTN                  ; 6693
LDF 6692             ; 6694
RTN                  ; 6695
LD  2   90           ; 6696
LD  0   0            ; 6697
ST  2   90           ; 6698
RTN                  ; 6699
LDF 6696             ; 6700
RTN                  ; 6701
LD  2   91           ; 6702
RTN                  ; 6703
LDF 6702             ; 6704
RTN                  ; 6705
LD  2   91           ; 6706
LD  0   0            ; 6707
ST  2   91           ; 6708
RTN                  ; 6709
LDF 6706             ; 6710
RTN                  ; 6711
LD  2   92           ; 6712
RTN                  ; 6713
LDF 6712             ; 6714
RTN                  ; 6715
LD  2   92           ; 6716
LD  0   0            ; 6717
ST  2   92           ; 6718
RTN                  ; 6719
LDF 6716             ; 6720
RTN                  ; 6721
LD  2   93           ; 6722
RTN                  ; 6723
LDF 6722             ; 6724
RTN                  ; 6725
LD  2   93           ; 6726
LD  0   0            ; 6727
ST  2   93           ; 6728
RTN                  ; 6729
LDF 6726             ; 6730
RTN                  ; 6731
LD  2   94           ; 6732
RTN                  ; 6733
LDF 6732             ; 6734
RTN                  ; 6735
LD  2   94           ; 6736
LD  0   0            ; 6737
ST  2   94           ; 6738
RTN                  ; 6739
LDF 6736             ; 6740
RTN                  ; 6741
LD  2   95           ; 6742
RTN                  ; 6743
LDF 6742             ; 6744
RTN                  ; 6745
LD  2   95           ; 6746
LD  0   0            ; 6747
ST  2   95           ; 6748
RTN                  ; 6749
LDF 6746             ; 6750
RTN                  ; 6751
LD  2   96           ; 6752
RTN                  ; 6753
LDF 6752             ; 6754
RTN                  ; 6755
LD  2   96           ; 6756
LD  0   0            ; 6757
ST  2   96           ; 6758
RTN                  ; 6759
LDF 6756             ; 6760
RTN                  ; 6761
LD  2   97           ; 6762
RTN                  ; 6763
LDF 6762             ; 6764
RTN                  ; 6765
LD  2   97           ; 6766
LD  0   0            ; 6767
ST  2   97           ; 6768
RTN                  ; 6769
LDF 6766             ; 6770
RTN                  ; 6771
LD  2   98           ; 6772
RTN                  ; 6773
LDF 6772             ; 6774
RTN                  ; 6775
LD  2   98           ; 6776
LD  0   0            ; 6777
ST  2   98           ; 6778
RTN                  ; 6779
LDF 6776             ; 6780
RTN                  ; 6781
LD  2   99           ; 6782
RTN                  ; 6783
LDF 6782             ; 6784
RTN                  ; 6785
LD  2   99           ; 6786
LD  0   0            ; 6787
ST  2   99           ; 6788
RTN                  ; 6789
LDF 6786             ; 6790
RTN                  ; 6791
LD  2   100          ; 6792
RTN                  ; 6793
LDF 6792             ; 6794
RTN                  ; 6795
LD  2   100          ; 6796
LD  0   0            ; 6797
ST  2   100          ; 6798
RTN                  ; 6799
LDF 6796             ; 6800
RTN                  ; 6801
LD  2   101          ; 6802
RTN                  ; 6803
LDF 6802             ; 6804
RTN                  ; 6805
LD  2   101          ; 6806
LD  0   0            ; 6807
ST  2   101          ; 6808
RTN                  ; 6809
LDF 6806             ; 6810
RTN                  ; 6811
LD  2   102          ; 6812
RTN                  ; 6813
LDF 6812             ; 6814
RTN                  ; 6815
LD  2   102          ; 6816
LD  0   0            ; 6817
ST  2   102          ; 6818
RTN                  ; 6819
LDF 6816             ; 6820
RTN                  ; 6821
LD  2   103          ; 6822
RTN                  ; 6823
LDF 6822             ; 6824
RTN                  ; 6825
LD  2   103          ; 6826
LD  0   0            ; 6827
ST  2   103          ; 6828
RTN                  ; 6829
LDF 6826             ; 6830
RTN                  ; 6831
LD  2   104          ; 6832
RTN                  ; 6833
LDF 6832             ; 6834
RTN                  ; 6835
LD  2   104          ; 6836
LD  0   0            ; 6837
ST  2   104          ; 6838
RTN                  ; 6839
LDF 6836             ; 6840
RTN                  ; 6841
LD  2   105          ; 6842
RTN                  ; 6843
LDF 6842             ; 6844
RTN                  ; 6845
LD  2   105          ; 6846
LD  0   0            ; 6847
ST  2   105          ; 6848
RTN                  ; 6849
LDF 6846             ; 6850
RTN                  ; 6851
LD  2   106          ; 6852
RTN                  ; 6853
LDF 6852             ; 6854
RTN                  ; 6855
LD  2   106          ; 6856
LD  0   0            ; 6857
ST  2   106          ; 6858
RTN                  ; 6859
LDF 6856             ; 6860
RTN                  ; 6861
LD  2   107          ; 6862
RTN                  ; 6863
LDF 6862             ; 6864
RTN                  ; 6865
LD  2   107          ; 6866
LD  0   0            ; 6867
ST  2   107          ; 6868
RTN                  ; 6869
LDF 6866             ; 6870
RTN                  ; 6871
LD  2   108          ; 6872
RTN                  ; 6873
LDF 6872             ; 6874
RTN                  ; 6875
LD  2   108          ; 6876
LD  0   0            ; 6877
ST  2   108          ; 6878
RTN                  ; 6879
LDF 6876             ; 6880
RTN                  ; 6881
LD  2   109          ; 6882
RTN                  ; 6883
LDF 6882             ; 6884
RTN                  ; 6885
LD  2   109          ; 6886
LD  0   0            ; 6887
ST  2   109          ; 6888
RTN                  ; 6889
LDF 6886             ; 6890
RTN                  ; 6891
LD  2   110          ; 6892
RTN                  ; 6893
LDF 6892             ; 6894
RTN                  ; 6895
LD  2   110          ; 6896
LD  0   0            ; 6897
ST  2   110          ; 6898
RTN                  ; 6899
LDF 6896             ; 6900
RTN                  ; 6901
LD  2   111          ; 6902
RTN                  ; 6903
LDF 6902             ; 6904
RTN                  ; 6905
LD  2   111          ; 6906
LD  0   0            ; 6907
ST  2   111          ; 6908
RTN                  ; 6909
LDF 6906             ; 6910
RTN                  ; 6911
LD  2   112          ; 6912
RTN                  ; 6913
LDF 6912             ; 6914
RTN                  ; 6915
LD  2   112          ; 6916
LD  0   0            ; 6917
ST  2   112          ; 6918
RTN                  ; 6919
LDF 6916             ; 6920
RTN                  ; 6921
LD  2   113          ; 6922
RTN                  ; 6923
LDF 6922             ; 6924
RTN                  ; 6925
LD  2   113          ; 6926
LD  0   0            ; 6927
ST  2   113          ; 6928
RTN                  ; 6929
LDF 6926             ; 6930
RTN                  ; 6931
LD  2   114          ; 6932
RTN                  ; 6933
LDF 6932             ; 6934
RTN                  ; 6935
LD  2   114          ; 6936
LD  0   0            ; 6937
ST  2   114          ; 6938
RTN                  ; 6939
LDF 6936             ; 6940
RTN                  ; 6941
LD  2   115          ; 6942
RTN                  ; 6943
LDF 6942             ; 6944
RTN                  ; 6945
LD  2   115          ; 6946
LD  0   0            ; 6947
ST  2   115          ; 6948
RTN                  ; 6949
LDF 6946             ; 6950
RTN                  ; 6951
LD  2   116          ; 6952
RTN                  ; 6953
LDF 6952             ; 6954
RTN                  ; 6955
LD  2   116          ; 6956
LD  0   0            ; 6957
ST  2   116          ; 6958
RTN                  ; 6959
LDF 6956             ; 6960
RTN                  ; 6961
LD  2   117          ; 6962
RTN                  ; 6963
LDF 6962             ; 6964
RTN                  ; 6965
LD  2   117          ; 6966
LD  0   0            ; 6967
ST  2   117          ; 6968
RTN                  ; 6969
LDF 6966             ; 6970
RTN                  ; 6971
LD  2   118          ; 6972
RTN                  ; 6973
LDF 6972             ; 6974
RTN                  ; 6975
LD  2   118          ; 6976
LD  0   0            ; 6977
ST  2   118          ; 6978
RTN                  ; 6979
LDF 6976             ; 6980
RTN                  ; 6981
LD  2   119          ; 6982
RTN                  ; 6983
LDF 6982             ; 6984
RTN                  ; 6985
LD  2   119          ; 6986
LD  0   0            ; 6987
ST  2   119          ; 6988
RTN                  ; 6989
LDF 6986             ; 6990
RTN                  ; 6991
LD  2   120          ; 6992
RTN                  ; 6993
LDF 6992             ; 6994
RTN                  ; 6995
LD  2   120          ; 6996
LD  0   0            ; 6997
ST  2   120          ; 6998
RTN                  ; 6999
LDF 6996             ; 7000
RTN                  ; 7001
LD  2   121          ; 7002
RTN                  ; 7003
LDF 7002             ; 7004
RTN                  ; 7005
LD  2   121          ; 7006
LD  0   0            ; 7007
ST  2   121          ; 7008
RTN                  ; 7009
LDF 7006             ; 7010
RTN                  ; 7011
LD  2   122          ; 7012
RTN                  ; 7013
LDF 7012             ; 7014
RTN                  ; 7015
LD  2   122          ; 7016
LD  0   0            ; 7017
ST  2   122          ; 7018
RTN                  ; 7019
LDF 7016             ; 7020
RTN                  ; 7021
LD  2   123          ; 7022
RTN                  ; 7023
LDF 7022             ; 7024
RTN                  ; 7025
LD  2   123          ; 7026
LD  0   0            ; 7027
ST  2   123          ; 7028
RTN                  ; 7029
LDF 7026             ; 7030
RTN                  ; 7031
LD  2   124          ; 7032
RTN                  ; 7033
LDF 7032             ; 7034
RTN                  ; 7035
LD  2   124          ; 7036
LD  0   0            ; 7037
ST  2   124          ; 7038
RTN                  ; 7039
LDF 7036             ; 7040
RTN                  ; 7041
LD  2   125          ; 7042
RTN                  ; 7043
LDF 7042             ; 7044
RTN                  ; 7045
LD  2   125          ; 7046
LD  0   0            ; 7047
ST  2   125          ; 7048
RTN                  ; 7049
LDF 7046             ; 7050
RTN                  ; 7051
LD  2   126          ; 7052
RTN                  ; 7053
LDF 7052             ; 7054
RTN                  ; 7055
LD  2   126          ; 7056
LD  0   0            ; 7057
ST  2   126          ; 7058
RTN                  ; 7059
LDF 7056             ; 7060
RTN                  ; 7061
LD  2   127          ; 7062
RTN                  ; 7063
LDF 7062             ; 7064
RTN                  ; 7065
LD  2   127          ; 7066
LD  0   0            ; 7067
ST  2   127          ; 7068
RTN                  ; 7069
LDF 7066             ; 7070
RTN                  ; 7071
LD  2   128          ; 7072
RTN                  ; 7073
LDF 7072             ; 7074
RTN                  ; 7075
LD  2   128          ; 7076
LD  0   0            ; 7077
ST  2   128          ; 7078
RTN                  ; 7079
LDF 7076             ; 7080
RTN                  ; 7081
LD  2   129          ; 7082
RTN                  ; 7083
LDF 7082             ; 7084
RTN                  ; 7085
LD  2   129          ; 7086
LD  0   0            ; 7087
ST  2   129          ; 7088
RTN                  ; 7089
LDF 7086             ; 7090
RTN                  ; 7091
LD  2   130          ; 7092
RTN                  ; 7093
LDF 7092             ; 7094
RTN                  ; 7095
LD  2   130          ; 7096
LD  0   0            ; 7097
ST  2   130          ; 7098
RTN                  ; 7099
LDF 7096             ; 7100
RTN                  ; 7101
LD  2   131          ; 7102
RTN                  ; 7103
LDF 7102             ; 7104
RTN                  ; 7105
LD  2   131          ; 7106
LD  0   0            ; 7107
ST  2   131          ; 7108
RTN                  ; 7109
LDF 7106             ; 7110
RTN                  ; 7111
LD  2   132          ; 7112
RTN                  ; 7113
LDF 7112             ; 7114
RTN                  ; 7115
LD  2   132          ; 7116
LD  0   0            ; 7117
ST  2   132          ; 7118
RTN                  ; 7119
LDF 7116             ; 7120
RTN                  ; 7121
LD  2   133          ; 7122
RTN                  ; 7123
LDF 7122             ; 7124
RTN                  ; 7125
LD  2   133          ; 7126
LD  0   0            ; 7127
ST  2   133          ; 7128
RTN                  ; 7129
LDF 7126             ; 7130
RTN                  ; 7131
LD  2   134          ; 7132
RTN                  ; 7133
LDF 7132             ; 7134
RTN                  ; 7135
LD  2   134          ; 7136
LD  0   0            ; 7137
ST  2   134          ; 7138
RTN                  ; 7139
LDF 7136             ; 7140
RTN                  ; 7141
LD  2   135          ; 7142
RTN                  ; 7143
LDF 7142             ; 7144
RTN                  ; 7145
LD  2   135          ; 7146
LD  0   0            ; 7147
ST  2   135          ; 7148
RTN                  ; 7149
LDF 7146             ; 7150
RTN                  ; 7151
LD  2   136          ; 7152
RTN                  ; 7153
LDF 7152             ; 7154
RTN                  ; 7155
LD  2   136          ; 7156
LD  0   0            ; 7157
ST  2   136          ; 7158
RTN                  ; 7159
LDF 7156             ; 7160
RTN                  ; 7161
LD  2   137          ; 7162
RTN                  ; 7163
LDF 7162             ; 7164
RTN                  ; 7165
LD  2   137          ; 7166
LD  0   0            ; 7167
ST  2   137          ; 7168
RTN                  ; 7169
LDF 7166             ; 7170
RTN                  ; 7171
LD  2   138          ; 7172
RTN                  ; 7173
LDF 7172             ; 7174
RTN                  ; 7175
LD  2   138          ; 7176
LD  0   0            ; 7177
ST  2   138          ; 7178
RTN                  ; 7179
LDF 7176             ; 7180
RTN                  ; 7181
LD  2   139          ; 7182
RTN                  ; 7183
LDF 7182             ; 7184
RTN                  ; 7185
LD  2   139          ; 7186
LD  0   0            ; 7187
ST  2   139          ; 7188
RTN                  ; 7189
LDF 7186             ; 7190
RTN                  ; 7191
LD  2   140          ; 7192
RTN                  ; 7193
LDF 7192             ; 7194
RTN                  ; 7195
LD  2   140          ; 7196
LD  0   0            ; 7197
ST  2   140          ; 7198
RTN                  ; 7199
LDF 7196             ; 7200
RTN                  ; 7201
LD  2   141          ; 7202
RTN                  ; 7203
LDF 7202             ; 7204
RTN                  ; 7205
LD  2   141          ; 7206
LD  0   0            ; 7207
ST  2   141          ; 7208
RTN                  ; 7209
LDF 7206             ; 7210
RTN                  ; 7211
LD  2   142          ; 7212
RTN                  ; 7213
LDF 7212             ; 7214
RTN                  ; 7215
LD  2   142          ; 7216
LD  0   0            ; 7217
ST  2   142          ; 7218
RTN                  ; 7219
LDF 7216             ; 7220
RTN                  ; 7221
LD  2   143          ; 7222
RTN                  ; 7223
LDF 7222             ; 7224
RTN                  ; 7225
LD  2   143          ; 7226
LD  0   0            ; 7227
ST  2   143          ; 7228
RTN                  ; 7229
LDF 7226             ; 7230
RTN                  ; 7231
LD  2   144          ; 7232
RTN                  ; 7233
LDF 7232             ; 7234
RTN                  ; 7235
LD  2   144          ; 7236
LD  0   0            ; 7237
ST  2   144          ; 7238
RTN                  ; 7239
LDF 7236             ; 7240
RTN                  ; 7241
LD  2   145          ; 7242
RTN                  ; 7243
LDF 7242             ; 7244
RTN                  ; 7245
LD  2   145          ; 7246
LD  0   0            ; 7247
ST  2   145          ; 7248
RTN                  ; 7249
LDF 7246             ; 7250
RTN                  ; 7251
LD  2   146          ; 7252
RTN                  ; 7253
LDF 7252             ; 7254
RTN                  ; 7255
LD  2   146          ; 7256
LD  0   0            ; 7257
ST  2   146          ; 7258
RTN                  ; 7259
LDF 7256             ; 7260
RTN                  ; 7261
LD  2   147          ; 7262
RTN                  ; 7263
LDF 7262             ; 7264
RTN                  ; 7265
LD  2   147          ; 7266
LD  0   0            ; 7267
ST  2   147          ; 7268
RTN                  ; 7269
LDF 7266             ; 7270
RTN                  ; 7271
LD  2   148          ; 7272
RTN                  ; 7273
LDF 7272             ; 7274
RTN                  ; 7275
LD  2   148          ; 7276
LD  0   0            ; 7277
ST  2   148          ; 7278
RTN                  ; 7279
LDF 7276             ; 7280
RTN                  ; 7281
LD  2   149          ; 7282
RTN                  ; 7283
LDF 7282             ; 7284
RTN                  ; 7285
LD  2   149          ; 7286
LD  0   0            ; 7287
ST  2   149          ; 7288
RTN                  ; 7289
LDF 7286             ; 7290
RTN                  ; 7291
LD  2   150          ; 7292
RTN                  ; 7293
LDF 7292             ; 7294
RTN                  ; 7295
LD  2   150          ; 7296
LD  0   0            ; 7297
ST  2   150          ; 7298
RTN                  ; 7299
LDF 7296             ; 7300
RTN                  ; 7301
LD  2   151          ; 7302
RTN                  ; 7303
LDF 7302             ; 7304
RTN                  ; 7305
LD  2   151          ; 7306
LD  0   0            ; 7307
ST  2   151          ; 7308
RTN                  ; 7309
LDF 7306             ; 7310
RTN                  ; 7311
LD  2   152          ; 7312
RTN                  ; 7313
LDF 7312             ; 7314
RTN                  ; 7315
LD  2   152          ; 7316
LD  0   0            ; 7317
ST  2   152          ; 7318
RTN                  ; 7319
LDF 7316             ; 7320
RTN                  ; 7321
LD  2   153          ; 7322
RTN                  ; 7323
LDF 7322             ; 7324
RTN                  ; 7325
LD  2   153          ; 7326
LD  0   0            ; 7327
ST  2   153          ; 7328
RTN                  ; 7329
LDF 7326             ; 7330
RTN                  ; 7331
LD  2   154          ; 7332
RTN                  ; 7333
LDF 7332             ; 7334
RTN                  ; 7335
LD  2   154          ; 7336
LD  0   0            ; 7337
ST  2   154          ; 7338
RTN                  ; 7339
LDF 7336             ; 7340
RTN                  ; 7341
LD  2   155          ; 7342
RTN                  ; 7343
LDF 7342             ; 7344
RTN                  ; 7345
LD  2   155          ; 7346
LD  0   0            ; 7347
ST  2   155          ; 7348
RTN                  ; 7349
LDF 7346             ; 7350
RTN                  ; 7351
LD  2   156          ; 7352
RTN                  ; 7353
LDF 7352             ; 7354
RTN                  ; 7355
LD  2   156          ; 7356
LD  0   0            ; 7357
ST  2   156          ; 7358
RTN                  ; 7359
LDF 7356             ; 7360
RTN                  ; 7361
LD  2   157          ; 7362
RTN                  ; 7363
LDF 7362             ; 7364
RTN                  ; 7365
LD  2   157          ; 7366
LD  0   0            ; 7367
ST  2   157          ; 7368
RTN                  ; 7369
LDF 7366             ; 7370
RTN                  ; 7371
LD  2   158          ; 7372
RTN                  ; 7373
LDF 7372             ; 7374
RTN                  ; 7375
LD  2   158          ; 7376
LD  0   0            ; 7377
ST  2   158          ; 7378
RTN                  ; 7379
LDF 7376             ; 7380
RTN                  ; 7381
LD  2   159          ; 7382
RTN                  ; 7383
LDF 7382             ; 7384
RTN                  ; 7385
LD  2   159          ; 7386
LD  0   0            ; 7387
ST  2   159          ; 7388
RTN                  ; 7389
LDF 7386             ; 7390
RTN                  ; 7391
LD  2   160          ; 7392
RTN                  ; 7393
LDF 7392             ; 7394
RTN                  ; 7395
LD  2   160          ; 7396
LD  0   0            ; 7397
ST  2   160          ; 7398
RTN                  ; 7399
LDF 7396             ; 7400
RTN                  ; 7401
LD  2   161          ; 7402
RTN                  ; 7403
LDF 7402             ; 7404
RTN                  ; 7405
LD  2   161          ; 7406
LD  0   0            ; 7407
ST  2   161          ; 7408
RTN                  ; 7409
LDF 7406             ; 7410
RTN                  ; 7411
LD  2   162          ; 7412
RTN                  ; 7413
LDF 7412             ; 7414
RTN                  ; 7415
LD  2   162          ; 7416
LD  0   0            ; 7417
ST  2   162          ; 7418
RTN                  ; 7419
LDF 7416             ; 7420
RTN                  ; 7421
LD  2   163          ; 7422
RTN                  ; 7423
LDF 7422             ; 7424
RTN                  ; 7425
LD  2   163          ; 7426
LD  0   0            ; 7427
ST  2   163          ; 7428
RTN                  ; 7429
LDF 7426             ; 7430
RTN                  ; 7431
LD  2   164          ; 7432
RTN                  ; 7433
LDF 7432             ; 7434
RTN                  ; 7435
LD  2   164          ; 7436
LD  0   0            ; 7437
ST  2   164          ; 7438
RTN                  ; 7439
LDF 7436             ; 7440
RTN                  ; 7441
LD  2   165          ; 7442
RTN                  ; 7443
LDF 7442             ; 7444
RTN                  ; 7445
LD  2   165          ; 7446
LD  0   0            ; 7447
ST  2   165          ; 7448
RTN                  ; 7449
LDF 7446             ; 7450
RTN                  ; 7451
LD  2   166          ; 7452
RTN                  ; 7453
LDF 7452             ; 7454
RTN                  ; 7455
LD  2   166          ; 7456
LD  0   0            ; 7457
ST  2   166          ; 7458
RTN                  ; 7459
LDF 7456             ; 7460
RTN                  ; 7461
LD  2   167          ; 7462
RTN                  ; 7463
LDF 7462             ; 7464
RTN                  ; 7465
LD  2   167          ; 7466
LD  0   0            ; 7467
ST  2   167          ; 7468
RTN                  ; 7469
LDF 7466             ; 7470
RTN                  ; 7471
LD  2   168          ; 7472
RTN                  ; 7473
LDF 7472             ; 7474
RTN                  ; 7475
LD  2   168          ; 7476
LD  0   0            ; 7477
ST  2   168          ; 7478
RTN                  ; 7479
LDF 7476             ; 7480
RTN                  ; 7481
LD  2   169          ; 7482
RTN                  ; 7483
LDF 7482             ; 7484
RTN                  ; 7485
LD  2   169          ; 7486
LD  0   0            ; 7487
ST  2   169          ; 7488
RTN                  ; 7489
LDF 7486             ; 7490
RTN                  ; 7491
LD  2   170          ; 7492
RTN                  ; 7493
LDF 7492             ; 7494
RTN                  ; 7495
LD  2   170          ; 7496
LD  0   0            ; 7497
ST  2   170          ; 7498
RTN                  ; 7499
LDF 7496             ; 7500
RTN                  ; 7501
LD  2   171          ; 7502
RTN                  ; 7503
LDF 7502             ; 7504
RTN                  ; 7505
LD  2   171          ; 7506
LD  0   0            ; 7507
ST  2   171          ; 7508
RTN                  ; 7509
LDF 7506             ; 7510
RTN                  ; 7511
LD  2   172          ; 7512
RTN                  ; 7513
LDF 7512             ; 7514
RTN                  ; 7515
LD  2   172          ; 7516
LD  0   0            ; 7517
ST  2   172          ; 7518
RTN                  ; 7519
LDF 7516             ; 7520
RTN                  ; 7521
LD  2   173          ; 7522
RTN                  ; 7523
LDF 7522             ; 7524
RTN                  ; 7525
LD  2   173          ; 7526
LD  0   0            ; 7527
ST  2   173          ; 7528
RTN                  ; 7529
LDF 7526             ; 7530
RTN                  ; 7531
LD  2   174          ; 7532
RTN                  ; 7533
LDF 7532             ; 7534
RTN                  ; 7535
LD  2   174          ; 7536
LD  0   0            ; 7537
ST  2   174          ; 7538
RTN                  ; 7539
LDF 7536             ; 7540
RTN                  ; 7541
LD  2   175          ; 7542
RTN                  ; 7543
LDF 7542             ; 7544
RTN                  ; 7545
LD  2   175          ; 7546
LD  0   0            ; 7547
ST  2   175          ; 7548
RTN                  ; 7549
LDF 7546             ; 7550
RTN                  ; 7551
LD  2   176          ; 7552
RTN                  ; 7553
LDF 7552             ; 7554
RTN                  ; 7555
LD  2   176          ; 7556
LD  0   0            ; 7557
ST  2   176          ; 7558
RTN                  ; 7559
LDF 7556             ; 7560
RTN                  ; 7561
LD  2   177          ; 7562
RTN                  ; 7563
LDF 7562             ; 7564
RTN                  ; 7565
LD  2   177          ; 7566
LD  0   0            ; 7567
ST  2   177          ; 7568
RTN                  ; 7569
LDF 7566             ; 7570
RTN                  ; 7571
LD  2   178          ; 7572
RTN                  ; 7573
LDF 7572             ; 7574
RTN                  ; 7575
LD  2   178          ; 7576
LD  0   0            ; 7577
ST  2   178          ; 7578
RTN                  ; 7579
LDF 7576             ; 7580
RTN                  ; 7581
LD  2   179          ; 7582
RTN                  ; 7583
LDF 7582             ; 7584
RTN                  ; 7585
LD  2   179          ; 7586
LD  0   0            ; 7587
ST  2   179          ; 7588
RTN                  ; 7589
LDF 7586             ; 7590
RTN                  ; 7591
LD  2   180          ; 7592
RTN                  ; 7593
LDF 7592             ; 7594
RTN                  ; 7595
LD  2   180          ; 7596
LD  0   0            ; 7597
ST  2   180          ; 7598
RTN                  ; 7599
LDF 7596             ; 7600
RTN                  ; 7601
LD  2   181          ; 7602
RTN                  ; 7603
LDF 7602             ; 7604
RTN                  ; 7605
LD  2   181          ; 7606
LD  0   0            ; 7607
ST  2   181          ; 7608
RTN                  ; 7609
LDF 7606             ; 7610
RTN                  ; 7611
LD  2   182          ; 7612
RTN                  ; 7613
LDF 7612             ; 7614
RTN                  ; 7615
LD  2   182          ; 7616
LD  0   0            ; 7617
ST  2   182          ; 7618
RTN                  ; 7619
LDF 7616             ; 7620
RTN                  ; 7621
LD  2   183          ; 7622
RTN                  ; 7623
LDF 7622             ; 7624
RTN                  ; 7625
LD  2   183          ; 7626
LD  0   0            ; 7627
ST  2   183          ; 7628
RTN                  ; 7629
LDF 7626             ; 7630
RTN                  ; 7631
LD  2   184          ; 7632
RTN                  ; 7633
LDF 7632             ; 7634
RTN                  ; 7635
LD  2   184          ; 7636
LD  0   0            ; 7637
ST  2   184          ; 7638
RTN                  ; 7639
LDF 7636             ; 7640
RTN                  ; 7641
LD  2   185          ; 7642
RTN                  ; 7643
LDF 7642             ; 7644
RTN                  ; 7645
LD  2   185          ; 7646
LD  0   0            ; 7647
ST  2   185          ; 7648
RTN                  ; 7649
LDF 7646             ; 7650
RTN                  ; 7651
LD  2   186          ; 7652
RTN                  ; 7653
LDF 7652             ; 7654
RTN                  ; 7655
LD  2   186          ; 7656
LD  0   0            ; 7657
ST  2   186          ; 7658
RTN                  ; 7659
LDF 7656             ; 7660
RTN                  ; 7661
LD  2   187          ; 7662
RTN                  ; 7663
LDF 7662             ; 7664
RTN                  ; 7665
LD  2   187          ; 7666
LD  0   0            ; 7667
ST  2   187          ; 7668
RTN                  ; 7669
LDF 7666             ; 7670
RTN                  ; 7671
LD  2   188          ; 7672
RTN                  ; 7673
LDF 7672             ; 7674
RTN                  ; 7675
LD  2   188          ; 7676
LD  0   0            ; 7677
ST  2   188          ; 7678
RTN                  ; 7679
LDF 7676             ; 7680
RTN                  ; 7681
LD  2   189          ; 7682
RTN                  ; 7683
LDF 7682             ; 7684
RTN                  ; 7685
LD  2   189          ; 7686
LD  0   0            ; 7687
ST  2   189          ; 7688
RTN                  ; 7689
LDF 7686             ; 7690
RTN                  ; 7691
LD  2   190          ; 7692
RTN                  ; 7693
LDF 7692             ; 7694
RTN                  ; 7695
LD  2   190          ; 7696
LD  0   0            ; 7697
ST  2   190          ; 7698
RTN                  ; 7699
LDF 7696             ; 7700
RTN                  ; 7701
LD  2   191          ; 7702
RTN                  ; 7703
LDF 7702             ; 7704
RTN                  ; 7705
LD  2   191          ; 7706
LD  0   0            ; 7707
ST  2   191          ; 7708
RTN                  ; 7709
LDF 7706             ; 7710
RTN                  ; 7711
LD  2   192          ; 7712
RTN                  ; 7713
LDF 7712             ; 7714
RTN                  ; 7715
LD  2   192          ; 7716
LD  0   0            ; 7717
ST  2   192          ; 7718
RTN                  ; 7719
LDF 7716             ; 7720
RTN                  ; 7721
LD  2   193          ; 7722
RTN                  ; 7723
LDF 7722             ; 7724
RTN                  ; 7725
LD  2   193          ; 7726
LD  0   0            ; 7727
ST  2   193          ; 7728
RTN                  ; 7729
LDF 7726             ; 7730
RTN                  ; 7731
LD  2   194          ; 7732
RTN                  ; 7733
LDF 7732             ; 7734
RTN                  ; 7735
LD  2   194          ; 7736
LD  0   0            ; 7737
ST  2   194          ; 7738
RTN                  ; 7739
LDF 7736             ; 7740
RTN                  ; 7741
LD  2   195          ; 7742
RTN                  ; 7743
LDF 7742             ; 7744
RTN                  ; 7745
LD  2   195          ; 7746
LD  0   0            ; 7747
ST  2   195          ; 7748
RTN                  ; 7749
LDF 7746             ; 7750
RTN                  ; 7751
LD  2   196          ; 7752
RTN                  ; 7753
LDF 7752             ; 7754
RTN                  ; 7755
LD  2   196          ; 7756
LD  0   0            ; 7757
ST  2   196          ; 7758
RTN                  ; 7759
LDF 7756             ; 7760
RTN                  ; 7761
LD  2   197          ; 7762
RTN                  ; 7763
LDF 7762             ; 7764
RTN                  ; 7765
LD  2   197          ; 7766
LD  0   0            ; 7767
ST  2   197          ; 7768
RTN                  ; 7769
LDF 7766             ; 7770
RTN                  ; 7771
LD  2   198          ; 7772
RTN                  ; 7773
LDF 7772             ; 7774
RTN                  ; 7775
LD  2   198          ; 7776
LD  0   0            ; 7777
ST  2   198          ; 7778
RTN                  ; 7779
LDF 7776             ; 7780
RTN                  ; 7781
LD  2   199          ; 7782
RTN                  ; 7783
LDF 7782             ; 7784
RTN                  ; 7785
LD  2   199          ; 7786
LD  0   0            ; 7787
ST  2   199          ; 7788
RTN                  ; 7789
LDF 7786             ; 7790
RTN                  ; 7791
LD  2   200          ; 7792
RTN                  ; 7793
LDF 7792             ; 7794
RTN                  ; 7795
LD  2   200          ; 7796
LD  0   0            ; 7797
ST  2   200          ; 7798
RTN                  ; 7799
LDF 7796             ; 7800
RTN                  ; 7801
LD  2   201          ; 7802
RTN                  ; 7803
LDF 7802             ; 7804
RTN                  ; 7805
LD  2   201          ; 7806
LD  0   0            ; 7807
ST  2   201          ; 7808
RTN                  ; 7809
LDF 7806             ; 7810
RTN                  ; 7811
LD  2   202          ; 7812
RTN                  ; 7813
LDF 7812             ; 7814
RTN                  ; 7815
LD  2   202          ; 7816
LD  0   0            ; 7817
ST  2   202          ; 7818
RTN                  ; 7819
LDF 7816             ; 7820
RTN                  ; 7821
LD  2   203          ; 7822
RTN                  ; 7823
LDF 7822             ; 7824
RTN                  ; 7825
LD  2   203          ; 7826
LD  0   0            ; 7827
ST  2   203          ; 7828
RTN                  ; 7829
LDF 7826             ; 7830
RTN                  ; 7831
LD  2   204          ; 7832
RTN                  ; 7833
LDF 7832             ; 7834
RTN                  ; 7835
LD  2   204          ; 7836
LD  0   0            ; 7837
ST  2   204          ; 7838
RTN                  ; 7839
LDF 7836             ; 7840
RTN                  ; 7841
LD  2   205          ; 7842
RTN                  ; 7843
LDF 7842             ; 7844
RTN                  ; 7845
LD  2   205          ; 7846
LD  0   0            ; 7847
ST  2   205          ; 7848
RTN                  ; 7849
LDF 7846             ; 7850
RTN                  ; 7851
LD  2   206          ; 7852
RTN                  ; 7853
LDF 7852             ; 7854
RTN                  ; 7855
LD  2   206          ; 7856
LD  0   0            ; 7857
ST  2   206          ; 7858
RTN                  ; 7859
LDF 7856             ; 7860
RTN                  ; 7861
LD  2   207          ; 7862
RTN                  ; 7863
LDF 7862             ; 7864
RTN                  ; 7865
LD  2   207          ; 7866
LD  0   0            ; 7867
ST  2   207          ; 7868
RTN                  ; 7869
LDF 7866             ; 7870
RTN                  ; 7871
LD  2   208          ; 7872
RTN                  ; 7873
LDF 7872             ; 7874
RTN                  ; 7875
LD  2   208          ; 7876
LD  0   0            ; 7877
ST  2   208          ; 7878
RTN                  ; 7879
LDF 7876             ; 7880
RTN                  ; 7881
LD  2   209          ; 7882
RTN                  ; 7883
LDF 7882             ; 7884
RTN                  ; 7885
LD  2   209          ; 7886
LD  0   0            ; 7887
ST  2   209          ; 7888
RTN                  ; 7889
LDF 7886             ; 7890
RTN                  ; 7891
LD  2   210          ; 7892
RTN                  ; 7893
LDF 7892             ; 7894
RTN                  ; 7895
LD  2   210          ; 7896
LD  0   0            ; 7897
ST  2   210          ; 7898
RTN                  ; 7899
LDF 7896             ; 7900
RTN                  ; 7901
LD  2   211          ; 7902
RTN                  ; 7903
LDF 7902             ; 7904
RTN                  ; 7905
LD  2   211          ; 7906
LD  0   0            ; 7907
ST  2   211          ; 7908
RTN                  ; 7909
LDF 7906             ; 7910
RTN                  ; 7911
LD  2   212          ; 7912
RTN                  ; 7913
LDF 7912             ; 7914
RTN                  ; 7915
LD  2   212          ; 7916
LD  0   0            ; 7917
ST  2   212          ; 7918
RTN                  ; 7919
LDF 7916             ; 7920
RTN                  ; 7921
LD  2   213          ; 7922
RTN                  ; 7923
LDF 7922             ; 7924
RTN                  ; 7925
LD  2   213          ; 7926
LD  0   0            ; 7927
ST  2   213          ; 7928
RTN                  ; 7929
LDF 7926             ; 7930
RTN                  ; 7931
LD  2   214          ; 7932
RTN                  ; 7933
LDF 7932             ; 7934
RTN                  ; 7935
LD  2   214          ; 7936
LD  0   0            ; 7937
ST  2   214          ; 7938
RTN                  ; 7939
LDF 7936             ; 7940
RTN                  ; 7941
LD  2   215          ; 7942
RTN                  ; 7943
LDF 7942             ; 7944
RTN                  ; 7945
LD  2   215          ; 7946
LD  0   0            ; 7947
ST  2   215          ; 7948
RTN                  ; 7949
LDF 7946             ; 7950
RTN                  ; 7951
LD  2   216          ; 7952
RTN                  ; 7953
LDF 7952             ; 7954
RTN                  ; 7955
LD  2   216          ; 7956
LD  0   0            ; 7957
ST  2   216          ; 7958
RTN                  ; 7959
LDF 7956             ; 7960
RTN                  ; 7961
LD  2   217          ; 7962
RTN                  ; 7963
LDF 7962             ; 7964
RTN                  ; 7965
LD  2   217          ; 7966
LD  0   0            ; 7967
ST  2   217          ; 7968
RTN                  ; 7969
LDF 7966             ; 7970
RTN                  ; 7971
LD  2   218          ; 7972
RTN                  ; 7973
LDF 7972             ; 7974
RTN                  ; 7975
LD  2   218          ; 7976
LD  0   0            ; 7977
ST  2   218          ; 7978
RTN                  ; 7979
LDF 7976             ; 7980
RTN                  ; 7981
LD  2   219          ; 7982
RTN                  ; 7983
LDF 7982             ; 7984
RTN                  ; 7985
LD  2   219          ; 7986
LD  0   0            ; 7987
ST  2   219          ; 7988
RTN                  ; 7989
LDF 7986             ; 7990
RTN                  ; 7991
LD  2   220          ; 7992
RTN                  ; 7993
LDF 7992             ; 7994
RTN                  ; 7995
LD  2   220          ; 7996
LD  0   0            ; 7997
ST  2   220          ; 7998
RTN                  ; 7999
LDF 7996             ; 8000
RTN                  ; 8001
LD  2   221          ; 8002
RTN                  ; 8003
LDF 8002             ; 8004
RTN                  ; 8005
LD  2   221          ; 8006
LD  0   0            ; 8007
ST  2   221          ; 8008
RTN                  ; 8009
LDF 8006             ; 8010
RTN                  ; 8011
LD  2   222          ; 8012
RTN                  ; 8013
LDF 8012             ; 8014
RTN                  ; 8015
LD  2   222          ; 8016
LD  0   0            ; 8017
ST  2   222          ; 8018
RTN                  ; 8019
LDF 8016             ; 8020
RTN                  ; 8021
LD  2   223          ; 8022
RTN                  ; 8023
LDF 8022             ; 8024
RTN                  ; 8025
LD  2   223          ; 8026
LD  0   0            ; 8027
ST  2   223          ; 8028
RTN                  ; 8029
LDF 8026             ; 8030
RTN                  ; 8031
LD  2   224          ; 8032
RTN                  ; 8033
LDF 8032             ; 8034
RTN                  ; 8035
LD  2   224          ; 8036
LD  0   0            ; 8037
ST  2   224          ; 8038
RTN                  ; 8039
LDF 8036             ; 8040
RTN                  ; 8041
LD  2   225          ; 8042
RTN                  ; 8043
LDF 8042             ; 8044
RTN                  ; 8045
LD  2   225          ; 8046
LD  0   0            ; 8047
ST  2   225          ; 8048
RTN                  ; 8049
LDF 8046             ; 8050
RTN                  ; 8051
LD  2   226          ; 8052
RTN                  ; 8053
LDF 8052             ; 8054
RTN                  ; 8055
LD  2   226          ; 8056
LD  0   0            ; 8057
ST  2   226          ; 8058
RTN                  ; 8059
LDF 8056             ; 8060
RTN                  ; 8061
LD  2   227          ; 8062
RTN                  ; 8063
LDF 8062             ; 8064
RTN                  ; 8065
LD  2   227          ; 8066
LD  0   0            ; 8067
ST  2   227          ; 8068
RTN                  ; 8069
LDF 8066             ; 8070
RTN                  ; 8071
LD  2   228          ; 8072
RTN                  ; 8073
LDF 8072             ; 8074
RTN                  ; 8075
LD  2   228          ; 8076
LD  0   0            ; 8077
ST  2   228          ; 8078
RTN                  ; 8079
LDF 8076             ; 8080
RTN                  ; 8081
LD  2   229          ; 8082
RTN                  ; 8083
LDF 8082             ; 8084
RTN                  ; 8085
LD  2   229          ; 8086
LD  0   0            ; 8087
ST  2   229          ; 8088
RTN                  ; 8089
LDF 8086             ; 8090
RTN                  ; 8091
LD  2   230          ; 8092
RTN                  ; 8093
LDF 8092             ; 8094
RTN                  ; 8095
LD  2   230          ; 8096
LD  0   0            ; 8097
ST  2   230          ; 8098
RTN                  ; 8099
LDF 8096             ; 8100
RTN                  ; 8101
LD  2   231          ; 8102
RTN                  ; 8103
LDF 8102             ; 8104
RTN                  ; 8105
LD  2   231          ; 8106
LD  0   0            ; 8107
ST  2   231          ; 8108
RTN                  ; 8109
LDF 8106             ; 8110
RTN                  ; 8111
LD  2   232          ; 8112
RTN                  ; 8113
LDF 8112             ; 8114
RTN                  ; 8115
LD  2   232          ; 8116
LD  0   0            ; 8117
ST  2   232          ; 8118
RTN                  ; 8119
LDF 8116             ; 8120
RTN                  ; 8121
LD  2   233          ; 8122
RTN                  ; 8123
LDF 8122             ; 8124
RTN                  ; 8125
LD  2   233          ; 8126
LD  0   0            ; 8127
ST  2   233          ; 8128
RTN                  ; 8129
LDF 8126             ; 8130
RTN                  ; 8131
LD  2   234          ; 8132
RTN                  ; 8133
LDF 8132             ; 8134
RTN                  ; 8135
LD  2   234          ; 8136
LD  0   0            ; 8137
ST  2   234          ; 8138
RTN                  ; 8139
LDF 8136             ; 8140
RTN                  ; 8141
LD  2   235          ; 8142
RTN                  ; 8143
LDF 8142             ; 8144
RTN                  ; 8145
LD  2   235          ; 8146
LD  0   0            ; 8147
ST  2   235          ; 8148
RTN                  ; 8149
LDF 8146             ; 8150
RTN                  ; 8151
LD  2   236          ; 8152
RTN                  ; 8153
LDF 8152             ; 8154
RTN                  ; 8155
LD  2   236          ; 8156
LD  0   0            ; 8157
ST  2   236          ; 8158
RTN                  ; 8159
LDF 8156             ; 8160
RTN                  ; 8161
LD  2   237          ; 8162
RTN                  ; 8163
LDF 8162             ; 8164
RTN                  ; 8165
LD  2   237          ; 8166
LD  0   0            ; 8167
ST  2   237          ; 8168
RTN                  ; 8169
LDF 8166             ; 8170
RTN                  ; 8171
LD  2   238          ; 8172
RTN                  ; 8173
LDF 8172             ; 8174
RTN                  ; 8175
LD  2   238          ; 8176
LD  0   0            ; 8177
ST  2   238          ; 8178
RTN                  ; 8179
LDF 8176             ; 8180
RTN                  ; 8181
LD  2   239          ; 8182
RTN                  ; 8183
LDF 8182             ; 8184
RTN                  ; 8185
LD  2   239          ; 8186
LD  0   0            ; 8187
ST  2   239          ; 8188
RTN                  ; 8189
LDF 8186             ; 8190
RTN                  ; 8191
LD  2   240          ; 8192
RTN                  ; 8193
LDF 8192             ; 8194
RTN                  ; 8195
LD  2   240          ; 8196
LD  0   0            ; 8197
ST  2   240          ; 8198
RTN                  ; 8199
LDF 8196             ; 8200
RTN                  ; 8201
LD  2   241          ; 8202
RTN                  ; 8203
LDF 8202             ; 8204
RTN                  ; 8205
LD  2   241          ; 8206
LD  0   0            ; 8207
ST  2   241          ; 8208
RTN                  ; 8209
LDF 8206             ; 8210
RTN                  ; 8211
LD  2   242          ; 8212
RTN                  ; 8213
LDF 8212             ; 8214
RTN                  ; 8215
LD  2   242          ; 8216
LD  0   0            ; 8217
ST  2   242          ; 8218
RTN                  ; 8219
LDF 8216             ; 8220
RTN                  ; 8221
LD  2   243          ; 8222
RTN                  ; 8223
LDF 8222             ; 8224
RTN                  ; 8225
LD  2   243          ; 8226
LD  0   0            ; 8227
ST  2   243          ; 8228
RTN                  ; 8229
LDF 8226             ; 8230
RTN                  ; 8231
LD  2   244          ; 8232
RTN                  ; 8233
LDF 8232             ; 8234
RTN                  ; 8235
LD  2   244          ; 8236
LD  0   0            ; 8237
ST  2   244          ; 8238
RTN                  ; 8239
LDF 8236             ; 8240
RTN                  ; 8241
LD  2   245          ; 8242
RTN                  ; 8243
LDF 8242             ; 8244
RTN                  ; 8245
LD  2   245          ; 8246
LD  0   0            ; 8247
ST  2   245          ; 8248
RTN                  ; 8249
LDF 8246             ; 8250
RTN                  ; 8251
LD  2   246          ; 8252
RTN                  ; 8253
LDF 8252             ; 8254
RTN                  ; 8255
LD  2   246          ; 8256
LD  0   0            ; 8257
ST  2   246          ; 8258
RTN                  ; 8259
LDF 8256             ; 8260
RTN                  ; 8261
LD  2   247          ; 8262
RTN                  ; 8263
LDF 8262             ; 8264
RTN                  ; 8265
LD  2   247          ; 8266
LD  0   0            ; 8267
ST  2   247          ; 8268
RTN                  ; 8269
LDF 8266             ; 8270
RTN                  ; 8271
LD  2   248          ; 8272
RTN                  ; 8273
LDF 8272             ; 8274
RTN                  ; 8275
LD  2   248          ; 8276
LD  0   0            ; 8277
ST  2   248          ; 8278
RTN                  ; 8279
LDF 8276             ; 8280
RTN                  ; 8281
LD  2   249          ; 8282
RTN                  ; 8283
LDF 8282             ; 8284
RTN                  ; 8285
LD  2   249          ; 8286
LD  0   0            ; 8287
ST  2   249          ; 8288
RTN                  ; 8289
LDF 8286             ; 8290
RTN                  ; 8291
LD  2   250          ; 8292
RTN                  ; 8293
LDF 8292             ; 8294
RTN                  ; 8295
LD  2   250          ; 8296
LD  0   0            ; 8297
ST  2   250          ; 8298
RTN                  ; 8299
LDF 8296             ; 8300
RTN                  ; 8301
LD  2   251          ; 8302
RTN                  ; 8303
LDF 8302             ; 8304
RTN                  ; 8305
LD  2   251          ; 8306
LD  0   0            ; 8307
ST  2   251          ; 8308
RTN                  ; 8309
LDF 8306             ; 8310
RTN                  ; 8311
LD  2   252          ; 8312
RTN                  ; 8313
LDF 8312             ; 8314
RTN                  ; 8315
LD  2   252          ; 8316
LD  0   0            ; 8317
ST  2   252          ; 8318
RTN                  ; 8319
LDF 8316             ; 8320
RTN                  ; 8321
LD  2   253          ; 8322
RTN                  ; 8323
LDF 8322             ; 8324
RTN                  ; 8325
LD  2   253          ; 8326
LD  0   0            ; 8327
ST  2   253          ; 8328
RTN                  ; 8329
LDF 8326             ; 8330
RTN                  ; 8331
LD  2   254          ; 8332
RTN                  ; 8333
LDF 8332             ; 8334
RTN                  ; 8335
LD  2   254          ; 8336
LD  0   0            ; 8337
ST  2   254          ; 8338
RTN                  ; 8339
LDF 8336             ; 8340
RTN                  ; 8341
LD  2   255          ; 8342
RTN                  ; 8343
LDF 8342             ; 8344
RTN                  ; 8345
LD  2   255          ; 8346
LD  0   0            ; 8347
ST  2   255          ; 8348
RTN                  ; 8349
LDF 8346             ; 8350
RTN                  ; 8351
LDC 0               ; generated from native: sample_map ; 8352
LDC 0                ; 8353
LDC 0                ; 8354
LDC 0                ; 8355
LDC 0                ; 8356
LDC 0                ; 8357
LDC 0                ; 8358
LDC 0                ; 8359
LDC 0                ; 8360
LDC 0                ; 8361
LDC 0                ; 8362
LDC 0                ; 8363
LDC 0                ; 8364
LDC 0                ; 8365
LDC 0                ; 8366
LDC 0                ; 8367
LDC 0                ; 8368
LDC 0                ; 8369
LDC 0                ; 8370
LDC 0                ; 8371
LDC 0                ; 8372
LDC 0                ; 8373
LDC 0                ; 8374
LDC 0                ; 8375
CONS                 ; 8376
CONS                 ; 8377
CONS                 ; 8378
CONS                 ; 8379
CONS                 ; 8380
CONS                 ; 8381
CONS                 ; 8382
CONS                 ; 8383
CONS                 ; 8384
CONS                 ; 8385
CONS                 ; 8386
CONS                 ; 8387
CONS                 ; 8388
CONS                 ; 8389
CONS                 ; 8390
CONS                 ; 8391
CONS                 ; 8392
CONS                 ; 8393
CONS                 ; 8394
CONS                 ; 8395
CONS                 ; 8396
CONS                 ; 8397
CONS                 ; 8398
LDC 0                ; 8399
LDC 2                ; 8400
LDC 2                ; 8401
LDC 2                ; 8402
LDC 2                ; 8403
LDC 2                ; 8404
LDC 2                ; 8405
LDC 2                ; 8406
LDC 2                ; 8407
LDC 2                ; 8408
LDC 2                ; 8409
LDC 0                ; 8410
LDC 2                ; 8411
LDC 2                ; 8412
LDC 2                ; 8413
LDC 2                ; 8414
LDC 2                ; 8415
LDC 2                ; 8416
LDC 2                ; 8417
LDC 2                ; 8418
LDC 2                ; 8419
LDC 2                ; 8420
LDC 0                ; 8421
LDC 0                ; 8422
CONS                 ; 8423
CONS                 ; 8424
CONS                 ; 8425
CONS                 ; 8426
CONS                 ; 8427
CONS                 ; 8428
CONS                 ; 8429
CONS                 ; 8430
CONS                 ; 8431
CONS                 ; 8432
CONS                 ; 8433
CONS                 ; 8434
CONS                 ; 8435
CONS                 ; 8436
CONS                 ; 8437
CONS                 ; 8438
CONS                 ; 8439
CONS                 ; 8440
CONS                 ; 8441
CONS                 ; 8442
CONS                 ; 8443
CONS                 ; 8444
CONS                 ; 8445
LDC 0                ; 8446
LDC 2                ; 8447
LDC 0                ; 8448
LDC 0                ; 8449
LDC 0                ; 8450
LDC 2                ; 8451
LDC 0                ; 8452
LDC 0                ; 8453
LDC 0                ; 8454
LDC 0                ; 8455
LDC 2                ; 8456
LDC 0                ; 8457
LDC 2                ; 8458
LDC 0                ; 8459
LDC 0                ; 8460
LDC 0                ; 8461
LDC 0                ; 8462
LDC 2                ; 8463
LDC 0                ; 8464
LDC 0                ; 8465
LDC 0                ; 8466
LDC 2                ; 8467
LDC 0                ; 8468
LDC 0                ; 8469
CONS                 ; 8470
CONS                 ; 8471
CONS                 ; 8472
CONS                 ; 8473
CONS                 ; 8474
CONS                 ; 8475
CONS                 ; 8476
CONS                 ; 8477
CONS                 ; 8478
CONS                 ; 8479
CONS                 ; 8480
CONS                 ; 8481
CONS                 ; 8482
CONS                 ; 8483
CONS                 ; 8484
CONS                 ; 8485
CONS                 ; 8486
CONS                 ; 8487
CONS                 ; 8488
CONS                 ; 8489
CONS                 ; 8490
CONS                 ; 8491
CONS                 ; 8492
LDC 0                ; 8493
LDC 3                ; 8494
LDC 0                ; 8495
LDC 0                ; 8496
LDC 0                ; 8497
LDC 2                ; 8498
LDC 0                ; 8499
LDC 0                ; 8500
LDC 0                ; 8501
LDC 0                ; 8502
LDC 2                ; 8503
LDC 0                ; 8504
LDC 2                ; 8505
LDC 0                ; 8506
LDC 0                ; 8507
LDC 0                ; 8508
LDC 0                ; 8509
LDC 2                ; 8510
LDC 0                ; 8511
LDC 0                ; 8512
LDC 0                ; 8513
LDC 3                ; 8514
LDC 0                ; 8515
LDC 0                ; 8516
CONS                 ; 8517
CONS                 ; 8518
CONS                 ; 8519
CONS                 ; 8520
CONS                 ; 8521
CONS                 ; 8522
CONS                 ; 8523
CONS                 ; 8524
CONS                 ; 8525
CONS                 ; 8526
CONS                 ; 8527
CONS                 ; 8528
CONS                 ; 8529
CONS                 ; 8530
CONS                 ; 8531
CONS                 ; 8532
CONS                 ; 8533
CONS                 ; 8534
CONS                 ; 8535
CONS                 ; 8536
CONS                 ; 8537
CONS                 ; 8538
CONS                 ; 8539
LDC 0                ; 8540
LDC 2                ; 8541
LDC 2                ; 8542
LDC 2                ; 8543
LDC 2                ; 8544
LDC 2                ; 8545
LDC 2                ; 8546
LDC 2                ; 8547
LDC 2                ; 8548
LDC 2                ; 8549
LDC 2                ; 8550
LDC 2                ; 8551
LDC 2                ; 8552
LDC 2                ; 8553
LDC 2                ; 8554
LDC 2                ; 8555
LDC 2                ; 8556
LDC 2                ; 8557
LDC 2                ; 8558
LDC 2                ; 8559
LDC 2                ; 8560
LDC 2                ; 8561
LDC 0                ; 8562
LDC 0                ; 8563
CONS                 ; 8564
CONS                 ; 8565
CONS                 ; 8566
CONS                 ; 8567
CONS                 ; 8568
CONS                 ; 8569
CONS                 ; 8570
CONS                 ; 8571
CONS                 ; 8572
CONS                 ; 8573
CONS                 ; 8574
CONS                 ; 8575
CONS                 ; 8576
CONS                 ; 8577
CONS                 ; 8578
CONS                 ; 8579
CONS                 ; 8580
CONS                 ; 8581
CONS                 ; 8582
CONS                 ; 8583
CONS                 ; 8584
CONS                 ; 8585
CONS                 ; 8586
LDC 0                ; 8587
LDC 2                ; 8588
LDC 0                ; 8589
LDC 0                ; 8590
LDC 0                ; 8591
LDC 2                ; 8592
LDC 0                ; 8593
LDC 2                ; 8594
LDC 0                ; 8595
LDC 0                ; 8596
LDC 0                ; 8597
LDC 0                ; 8598
LDC 0                ; 8599
LDC 0                ; 8600
LDC 0                ; 8601
LDC 2                ; 8602
LDC 0                ; 8603
LDC 2                ; 8604
LDC 0                ; 8605
LDC 0                ; 8606
LDC 0                ; 8607
LDC 2                ; 8608
LDC 0                ; 8609
LDC 0                ; 8610
CONS                 ; 8611
CONS                 ; 8612
CONS                 ; 8613
CONS                 ; 8614
CONS                 ; 8615
CONS                 ; 8616
CONS                 ; 8617
CONS                 ; 8618
CONS                 ; 8619
CONS                 ; 8620
CONS                 ; 8621
CONS                 ; 8622
CONS                 ; 8623
CONS                 ; 8624
CONS                 ; 8625
CONS                 ; 8626
CONS                 ; 8627
CONS                 ; 8628
CONS                 ; 8629
CONS                 ; 8630
CONS                 ; 8631
CONS                 ; 8632
CONS                 ; 8633
LDC 0                ; 8634
LDC 2                ; 8635
LDC 2                ; 8636
LDC 2                ; 8637
LDC 2                ; 8638
LDC 2                ; 8639
LDC 0                ; 8640
LDC 2                ; 8641
LDC 2                ; 8642
LDC 2                ; 8643
LDC 2                ; 8644
LDC 0                ; 8645
LDC 2                ; 8646
LDC 2                ; 8647
LDC 2                ; 8648
LDC 2                ; 8649
LDC 0                ; 8650
LDC 2                ; 8651
LDC 2                ; 8652
LDC 2                ; 8653
LDC 2                ; 8654
LDC 2                ; 8655
LDC 0                ; 8656
LDC 0                ; 8657
CONS                 ; 8658
CONS                 ; 8659
CONS                 ; 8660
CONS                 ; 8661
CONS                 ; 8662
CONS                 ; 8663
CONS                 ; 8664
CONS                 ; 8665
CONS                 ; 8666
CONS                 ; 8667
CONS                 ; 8668
CONS                 ; 8669
CONS                 ; 8670
CONS                 ; 8671
CONS                 ; 8672
CONS                 ; 8673
CONS                 ; 8674
CONS                 ; 8675
CONS                 ; 8676
CONS                 ; 8677
CONS                 ; 8678
CONS                 ; 8679
CONS                 ; 8680
LDC 0                ; 8681
LDC 0                ; 8682
LDC 0                ; 8683
LDC 0                ; 8684
LDC 0                ; 8685
LDC 2                ; 8686
LDC 0                ; 8687
LDC 0                ; 8688
LDC 0                ; 8689
LDC 0                ; 8690
LDC 1                ; 8691
LDC 0                ; 8692
LDC 1                ; 8693
LDC 0                ; 8694
LDC 0                ; 8695
LDC 0                ; 8696
LDC 0                ; 8697
LDC 2                ; 8698
LDC 0                ; 8699
LDC 0                ; 8700
LDC 0                ; 8701
LDC 0                ; 8702
LDC 0                ; 8703
LDC 0                ; 8704
CONS                 ; 8705
CONS                 ; 8706
CONS                 ; 8707
CONS                 ; 8708
CONS                 ; 8709
CONS                 ; 8710
CONS                 ; 8711
CONS                 ; 8712
CONS                 ; 8713
CONS                 ; 8714
CONS                 ; 8715
CONS                 ; 8716
CONS                 ; 8717
CONS                 ; 8718
CONS                 ; 8719
CONS                 ; 8720
CONS                 ; 8721
CONS                 ; 8722
CONS                 ; 8723
CONS                 ; 8724
CONS                 ; 8725
CONS                 ; 8726
CONS                 ; 8727
LDC 0                ; 8728
LDC 1                ; 8729
LDC 1                ; 8730
LDC 1                ; 8731
LDC 0                ; 8732
LDC 2                ; 8733
LDC 0                ; 8734
LDC 1                ; 8735
LDC 1                ; 8736
LDC 1                ; 8737
LDC 1                ; 8738
LDC 6                ; 8739
LDC 1                ; 8740
LDC 1                ; 8741
LDC 1                ; 8742
LDC 1                ; 8743
LDC 0                ; 8744
LDC 2                ; 8745
LDC 0                ; 8746
LDC 1                ; 8747
LDC 1                ; 8748
LDC 1                ; 8749
LDC 0                ; 8750
LDC 0                ; 8751
CONS                 ; 8752
CONS                 ; 8753
CONS                 ; 8754
CONS                 ; 8755
CONS                 ; 8756
CONS                 ; 8757
CONS                 ; 8758
CONS                 ; 8759
CONS                 ; 8760
CONS                 ; 8761
CONS                 ; 8762
CONS                 ; 8763
CONS                 ; 8764
CONS                 ; 8765
CONS                 ; 8766
CONS                 ; 8767
CONS                 ; 8768
CONS                 ; 8769
CONS                 ; 8770
CONS                 ; 8771
CONS                 ; 8772
CONS                 ; 8773
CONS                 ; 8774
LDC 0                ; 8775
LDC 0                ; 8776
LDC 0                ; 8777
LDC 0                ; 8778
LDC 0                ; 8779
LDC 2                ; 8780
LDC 0                ; 8781
LDC 1                ; 8782
LDC 0                ; 8783
LDC 0                ; 8784
LDC 0                ; 8785
LDC 1                ; 8786
LDC 0                ; 8787
LDC 0                ; 8788
LDC 0                ; 8789
LDC 1                ; 8790
LDC 0                ; 8791
LDC 2                ; 8792
LDC 0                ; 8793
LDC 0                ; 8794
LDC 0                ; 8795
LDC 0                ; 8796
LDC 0                ; 8797
LDC 0                ; 8798
CONS                 ; 8799
CONS                 ; 8800
CONS                 ; 8801
CONS                 ; 8802
CONS                 ; 8803
CONS                 ; 8804
CONS                 ; 8805
CONS                 ; 8806
CONS                 ; 8807
CONS                 ; 8808
CONS                 ; 8809
CONS                 ; 8810
CONS                 ; 8811
CONS                 ; 8812
CONS                 ; 8813
CONS                 ; 8814
CONS                 ; 8815
CONS                 ; 8816
CONS                 ; 8817
CONS                 ; 8818
CONS                 ; 8819
CONS                 ; 8820
CONS                 ; 8821
LDC 0                ; 8822
LDC 1                ; 8823
LDC 1                ; 8824
LDC 1                ; 8825
LDC 1                ; 8826
LDC 2                ; 8827
LDC 1                ; 8828
LDC 1                ; 8829
LDC 0                ; 8830
LDC 1                ; 8831
LDC 6                ; 8832
LDC 6                ; 8833
LDC 6                ; 8834
LDC 1                ; 8835
LDC 0                ; 8836
LDC 1                ; 8837
LDC 1                ; 8838
LDC 2                ; 8839
LDC 1                ; 8840
LDC 1                ; 8841
LDC 1                ; 8842
LDC 1                ; 8843
LDC 0                ; 8844
LDC 0                ; 8845
CONS                 ; 8846
CONS                 ; 8847
CONS                 ; 8848
CONS                 ; 8849
CONS                 ; 8850
CONS                 ; 8851
CONS                 ; 8852
CONS                 ; 8853
CONS                 ; 8854
CONS                 ; 8855
CONS                 ; 8856
CONS                 ; 8857
CONS                 ; 8858
CONS                 ; 8859
CONS                 ; 8860
CONS                 ; 8861
CONS                 ; 8862
CONS                 ; 8863
CONS                 ; 8864
CONS                 ; 8865
CONS                 ; 8866
CONS                 ; 8867
CONS                 ; 8868
LDC 0                ; 8869
LDC 0                ; 8870
LDC 0                ; 8871
LDC 0                ; 8872
LDC 0                ; 8873
LDC 2                ; 8874
LDC 0                ; 8875
LDC 1                ; 8876
LDC 0                ; 8877
LDC 0                ; 8878
LDC 0                ; 8879
LDC 0                ; 8880
LDC 0                ; 8881
LDC 0                ; 8882
LDC 0                ; 8883
LDC 1                ; 8884
LDC 0                ; 8885
LDC 2                ; 8886
LDC 0                ; 8887
LDC 0                ; 8888
LDC 0                ; 8889
LDC 0                ; 8890
LDC 0                ; 8891
LDC 0                ; 8892
CONS                 ; 8893
CONS                 ; 8894
CONS                 ; 8895
CONS                 ; 8896
CONS                 ; 8897
CONS                 ; 8898
CONS                 ; 8899
CONS                 ; 8900
CONS                 ; 8901
CONS                 ; 8902
CONS                 ; 8903
CONS                 ; 8904
CONS                 ; 8905
CONS                 ; 8906
CONS                 ; 8907
CONS                 ; 8908
CONS                 ; 8909
CONS                 ; 8910
CONS                 ; 8911
CONS                 ; 8912
CONS                 ; 8913
CONS                 ; 8914
CONS                 ; 8915
LDC 0                ; 8916
LDC 1                ; 8917
LDC 1                ; 8918
LDC 1                ; 8919
LDC 0                ; 8920
LDC 2                ; 8921
LDC 0                ; 8922
LDC 1                ; 8923
LDC 1                ; 8924
LDC 1                ; 8925
LDC 1                ; 8926
LDC 4                ; 8927
LDC 1                ; 8928
LDC 1                ; 8929
LDC 1                ; 8930
LDC 1                ; 8931
LDC 0                ; 8932
LDC 2                ; 8933
LDC 0                ; 8934
LDC 1                ; 8935
LDC 1                ; 8936
LDC 1                ; 8937
LDC 0                ; 8938
LDC 0                ; 8939
CONS                 ; 8940
CONS                 ; 8941
CONS                 ; 8942
CONS                 ; 8943
CONS                 ; 8944
CONS                 ; 8945
CONS                 ; 8946
CONS                 ; 8947
CONS                 ; 8948
CONS                 ; 8949
CONS                 ; 8950
CONS                 ; 8951
CONS                 ; 8952
CONS                 ; 8953
CONS                 ; 8954
CONS                 ; 8955
CONS                 ; 8956
CONS                 ; 8957
CONS                 ; 8958
CONS                 ; 8959
CONS                 ; 8960
CONS                 ; 8961
CONS                 ; 8962
LDC 0                ; 8963
LDC 0                ; 8964
LDC 0                ; 8965
LDC 0                ; 8966
LDC 0                ; 8967
LDC 2                ; 8968
LDC 0                ; 8969
LDC 1                ; 8970
LDC 0                ; 8971
LDC 0                ; 8972
LDC 0                ; 8973
LDC 0                ; 8974
LDC 0                ; 8975
LDC 0                ; 8976
LDC 0                ; 8977
LDC 1                ; 8978
LDC 0                ; 8979
LDC 2                ; 8980
LDC 0                ; 8981
LDC 0                ; 8982
LDC 0                ; 8983
LDC 0                ; 8984
LDC 0                ; 8985
LDC 0                ; 8986
CONS                 ; 8987
CONS                 ; 8988
CONS                 ; 8989
CONS                 ; 8990
CONS                 ; 8991
CONS                 ; 8992
CONS                 ; 8993
CONS                 ; 8994
CONS                 ; 8995
CONS                 ; 8996
CONS                 ; 8997
CONS                 ; 8998
CONS                 ; 8999
CONS                 ; 9000
CONS                 ; 9001
CONS                 ; 9002
CONS                 ; 9003
CONS                 ; 9004
CONS                 ; 9005
CONS                 ; 9006
CONS                 ; 9007
CONS                 ; 9008
CONS                 ; 9009
LDC 0                ; 9010
LDC 2                ; 9011
LDC 2                ; 9012
LDC 2                ; 9013
LDC 2                ; 9014
LDC 2                ; 9015
LDC 2                ; 9016
LDC 2                ; 9017
LDC 2                ; 9018
LDC 2                ; 9019
LDC 2                ; 9020
LDC 0                ; 9021
LDC 2                ; 9022
LDC 2                ; 9023
LDC 2                ; 9024
LDC 2                ; 9025
LDC 2                ; 9026
LDC 2                ; 9027
LDC 2                ; 9028
LDC 2                ; 9029
LDC 2                ; 9030
LDC 2                ; 9031
LDC 0                ; 9032
LDC 0                ; 9033
CONS                 ; 9034
CONS                 ; 9035
CONS                 ; 9036
CONS                 ; 9037
CONS                 ; 9038
CONS                 ; 9039
CONS                 ; 9040
CONS                 ; 9041
CONS                 ; 9042
CONS                 ; 9043
CONS                 ; 9044
CONS                 ; 9045
CONS                 ; 9046
CONS                 ; 9047
CONS                 ; 9048
CONS                 ; 9049
CONS                 ; 9050
CONS                 ; 9051
CONS                 ; 9052
CONS                 ; 9053
CONS                 ; 9054
CONS                 ; 9055
CONS                 ; 9056
LDC 0                ; 9057
LDC 2                ; 9058
LDC 0                ; 9059
LDC 0                ; 9060
LDC 0                ; 9061
LDC 2                ; 9062
LDC 0                ; 9063
LDC 0                ; 9064
LDC 0                ; 9065
LDC 0                ; 9066
LDC 2                ; 9067
LDC 0                ; 9068
LDC 2                ; 9069
LDC 0                ; 9070
LDC 0                ; 9071
LDC 0                ; 9072
LDC 0                ; 9073
LDC 2                ; 9074
LDC 0                ; 9075
LDC 0                ; 9076
LDC 0                ; 9077
LDC 2                ; 9078
LDC 0                ; 9079
LDC 0                ; 9080
CONS                 ; 9081
CONS                 ; 9082
CONS                 ; 9083
CONS                 ; 9084
CONS                 ; 9085
CONS                 ; 9086
CONS                 ; 9087
CONS                 ; 9088
CONS                 ; 9089
CONS                 ; 9090
CONS                 ; 9091
CONS                 ; 9092
CONS                 ; 9093
CONS                 ; 9094
CONS                 ; 9095
CONS                 ; 9096
CONS                 ; 9097
CONS                 ; 9098
CONS                 ; 9099
CONS                 ; 9100
CONS                 ; 9101
CONS                 ; 9102
CONS                 ; 9103
LDC 0                ; 9104
LDC 3                ; 9105
LDC 2                ; 9106
LDC 2                ; 9107
LDC 0                ; 9108
LDC 2                ; 9109
LDC 2                ; 9110
LDC 2                ; 9111
LDC 2                ; 9112
LDC 2                ; 9113
LDC 2                ; 9114
LDC 5                ; 9115
LDC 2                ; 9116
LDC 2                ; 9117
LDC 2                ; 9118
LDC 2                ; 9119
LDC 2                ; 9120
LDC 2                ; 9121
LDC 0                ; 9122
LDC 2                ; 9123
LDC 2                ; 9124
LDC 3                ; 9125
LDC 0                ; 9126
LDC 0                ; 9127
CONS                 ; 9128
CONS                 ; 9129
CONS                 ; 9130
CONS                 ; 9131
CONS                 ; 9132
CONS                 ; 9133
CONS                 ; 9134
CONS                 ; 9135
CONS                 ; 9136
CONS                 ; 9137
CONS                 ; 9138
CONS                 ; 9139
CONS                 ; 9140
CONS                 ; 9141
CONS                 ; 9142
CONS                 ; 9143
CONS                 ; 9144
CONS                 ; 9145
CONS                 ; 9146
CONS                 ; 9147
CONS                 ; 9148
CONS                 ; 9149
CONS                 ; 9150
LDC 0                ; 9151
LDC 0                ; 9152
LDC 0                ; 9153
LDC 2                ; 9154
LDC 0                ; 9155
LDC 2                ; 9156
LDC 0                ; 9157
LDC 2                ; 9158
LDC 0                ; 9159
LDC 0                ; 9160
LDC 0                ; 9161
LDC 0                ; 9162
LDC 0                ; 9163
LDC 0                ; 9164
LDC 0                ; 9165
LDC 2                ; 9166
LDC 0                ; 9167
LDC 2                ; 9168
LDC 0                ; 9169
LDC 2                ; 9170
LDC 0                ; 9171
LDC 0                ; 9172
LDC 0                ; 9173
LDC 0                ; 9174
CONS                 ; 9175
CONS                 ; 9176
CONS                 ; 9177
CONS                 ; 9178
CONS                 ; 9179
CONS                 ; 9180
CONS                 ; 9181
CONS                 ; 9182
CONS                 ; 9183
CONS                 ; 9184
CONS                 ; 9185
CONS                 ; 9186
CONS                 ; 9187
CONS                 ; 9188
CONS                 ; 9189
CONS                 ; 9190
CONS                 ; 9191
CONS                 ; 9192
CONS                 ; 9193
CONS                 ; 9194
CONS                 ; 9195
CONS                 ; 9196
CONS                 ; 9197
LDC 0                ; 9198
LDC 2                ; 9199
LDC 2                ; 9200
LDC 2                ; 9201
LDC 2                ; 9202
LDC 2                ; 9203
LDC 0                ; 9204
LDC 2                ; 9205
LDC 2                ; 9206
LDC 2                ; 9207
LDC 2                ; 9208
LDC 0                ; 9209
LDC 2                ; 9210
LDC 2                ; 9211
LDC 2                ; 9212
LDC 2                ; 9213
LDC 0                ; 9214
LDC 2                ; 9215
LDC 2                ; 9216
LDC 2                ; 9217
LDC 2                ; 9218
LDC 2                ; 9219
LDC 0                ; 9220
LDC 0                ; 9221
CONS                 ; 9222
CONS                 ; 9223
CONS                 ; 9224
CONS                 ; 9225
CONS                 ; 9226
CONS                 ; 9227
CONS                 ; 9228
CONS                 ; 9229
CONS                 ; 9230
CONS                 ; 9231
CONS                 ; 9232
CONS                 ; 9233
CONS                 ; 9234
CONS                 ; 9235
CONS                 ; 9236
CONS                 ; 9237
CONS                 ; 9238
CONS                 ; 9239
CONS                 ; 9240
CONS                 ; 9241
CONS                 ; 9242
CONS                 ; 9243
CONS                 ; 9244
LDC 0                ; 9245
LDC 2                ; 9246
LDC 0                ; 9247
LDC 0                ; 9248
LDC 0                ; 9249
LDC 0                ; 9250
LDC 0                ; 9251
LDC 0                ; 9252
LDC 0                ; 9253
LDC 0                ; 9254
LDC 2                ; 9255
LDC 0                ; 9256
LDC 2                ; 9257
LDC 0                ; 9258
LDC 0                ; 9259
LDC 0                ; 9260
LDC 0                ; 9261
LDC 0                ; 9262
LDC 0                ; 9263
LDC 0                ; 9264
LDC 0                ; 9265
LDC 2                ; 9266
LDC 0                ; 9267
LDC 0                ; 9268
CONS                 ; 9269
CONS                 ; 9270
CONS                 ; 9271
CONS                 ; 9272
CONS                 ; 9273
CONS                 ; 9274
CONS                 ; 9275
CONS                 ; 9276
CONS                 ; 9277
CONS                 ; 9278
CONS                 ; 9279
CONS                 ; 9280
CONS                 ; 9281
CONS                 ; 9282
CONS                 ; 9283
CONS                 ; 9284
CONS                 ; 9285
CONS                 ; 9286
CONS                 ; 9287
CONS                 ; 9288
CONS                 ; 9289
CONS                 ; 9290
CONS                 ; 9291
LDC 0                ; 9292
LDC 2                ; 9293
LDC 2                ; 9294
LDC 2                ; 9295
LDC 2                ; 9296
LDC 2                ; 9297
LDC 2                ; 9298
LDC 2                ; 9299
LDC 2                ; 9300
LDC 2                ; 9301
LDC 2                ; 9302
LDC 2                ; 9303
LDC 2                ; 9304
LDC 2                ; 9305
LDC 2                ; 9306
LDC 2                ; 9307
LDC 2                ; 9308
LDC 2                ; 9309
LDC 2                ; 9310
LDC 2                ; 9311
LDC 2                ; 9312
LDC 2                ; 9313
LDC 0                ; 9314
LDC 0                ; 9315
CONS                 ; 9316
CONS                 ; 9317
CONS                 ; 9318
CONS                 ; 9319
CONS                 ; 9320
CONS                 ; 9321
CONS                 ; 9322
CONS                 ; 9323
CONS                 ; 9324
CONS                 ; 9325
CONS                 ; 9326
CONS                 ; 9327
CONS                 ; 9328
CONS                 ; 9329
CONS                 ; 9330
CONS                 ; 9331
CONS                 ; 9332
CONS                 ; 9333
CONS                 ; 9334
CONS                 ; 9335
CONS                 ; 9336
CONS                 ; 9337
CONS                 ; 9338
LDC 0                ; 9339
LDC 0                ; 9340
LDC 0                ; 9341
LDC 0                ; 9342
LDC 0                ; 9343
LDC 0                ; 9344
LDC 0                ; 9345
LDC 0                ; 9346
LDC 0                ; 9347
LDC 0                ; 9348
LDC 0                ; 9349
LDC 0                ; 9350
LDC 0                ; 9351
LDC 0                ; 9352
LDC 0                ; 9353
LDC 0                ; 9354
LDC 0                ; 9355
LDC 0                ; 9356
LDC 0                ; 9357
LDC 0                ; 9358
LDC 0                ; 9359
LDC 0                ; 9360
LDC 0                ; 9361
LDC 0                ; 9362
CONS                 ; 9363
CONS                 ; 9364
CONS                 ; 9365
CONS                 ; 9366
CONS                 ; 9367
CONS                 ; 9368
CONS                 ; 9369
CONS                 ; 9370
CONS                 ; 9371
CONS                 ; 9372
CONS                 ; 9373
CONS                 ; 9374
CONS                 ; 9375
CONS                 ; 9376
CONS                 ; 9377
CONS                 ; 9378
CONS                 ; 9379
CONS                 ; 9380
CONS                 ; 9381
CONS                 ; 9382
CONS                 ; 9383
CONS                 ; 9384
CONS                 ; 9385
LDC 0                ; 9386
CONS                 ; 9387
CONS                 ; 9388
CONS                 ; 9389
CONS                 ; 9390
CONS                 ; 9391
CONS                 ; 9392
CONS                 ; 9393
CONS                 ; 9394
CONS                 ; 9395
CONS                 ; 9396
CONS                 ; 9397
CONS                 ; 9398
CONS                 ; 9399
CONS                 ; 9400
CONS                 ; 9401
CONS                 ; 9402
CONS                 ; 9403
CONS                 ; 9404
CONS                 ; 9405
CONS                 ; 9406
CONS                 ; 9407
CONS                 ; 9408
LDC 0                ; 9409
LDC 11               ; 9410
LDC 16               ; 9411
CONS                 ; 9412
LDC 2                ; 9413
LDC 3                ; 9414
LDC 0                ; 9415
CONS                 ; 9416
CONS                 ; 9417
CONS                 ; 9418
CONS                 ; 9419
LDC 0                ; 9420
LDC 11               ; 9421
LDC 8                ; 9422
CONS                 ; 9423
LDC 2                ; 9424
CONS                 ; 9425
CONS                 ; 9426
LDC 0                ; 9427
LDC 10               ; 9428
LDC 10               ; 9429
CONS                 ; 9430
LDC 2                ; 9431
CONS                 ; 9432
CONS                 ; 9433
LDC 0                ; 9434
LDC 11               ; 9435
LDC 10               ; 9436
CONS                 ; 9437
LDC 2                ; 9438
CONS                 ; 9439
CONS                 ; 9440
LDC 0                ; 9441
LDC 12               ; 9442
LDC 10               ; 9443
CONS                 ; 9444
LDC 2                ; 9445
CONS                 ; 9446
CONS                 ; 9447
LDC 0                ; 9448
CONS                 ; 9449
CONS                 ; 9450
CONS                 ; 9451
CONS                 ; 9452
LDC 0                ; 9453
CONS                 ; 9454
CONS                 ; 9455
CONS                 ; 9456
RTN                  ; 9457
LD     0 0          ;  <== lambda_1000  [x] (as expr) ; 9458
LD     1 1          ; var g ; 9459
AP     1             ; 9460
LD     1 0          ; var f ; 9461
AP     1             ; 9462
RTN                  ; 9463
LD     0 1          ;  <== lambda_1001  [b, a] (as expr) ; 9464
LD     0 0          ; var b ; 9465
LD     1 0          ; var f ; 9466
AP     2             ; 9467
RTN                  ; 9468
LD     0 0          ;  <== lambda_1002  [d] (as expr) ; 9469
LDF    226          ;  @maybeToList ; 9470
AP     1             ; 9471
RTN                  ; 9472
LD     0 0          ;  <== lambda_1003  [SortedMap<T> acc, Tuple<Integer,T> elem] (as expr) ; 9473
LD     0 1          ; var elem ; 9474
CAR                 ; generateTupleAccess total=2 pos=0 ; 9475
LD     0 1          ; var elem ; 9476
CDR                 ; generateTupleAccess total=2 pos=1 ; 9477
LDF    1254         ;  @sorted_map_assoc ; 9478
AP     3             ; 9479
RTN                  ; 9480
LD     0 0          ;  <== lambda_1004  [Integer a] (as expr) ; 9481
LD     0 0          ; var a ; 9482
LDC    2            ; just constant from code ; 9483
DIV                  ; 9484
LDC    2            ; just constant from code ; 9485
MUL                  ; 9486
CEQ                  ; 9487
SEL    9494 9496    ; IF? 57 ; 9488
LD     0 0          ; var a ; 9489
LDC    2            ; just constant from code ; 9490
DIV                  ; 9491
CONS                 ; 9492
RTN                  ; 9493
LDC    0            ; THEN: 57 ; 9494
JOIN                 ; 9495
LDC    1            ; ELSE: 57 ; 9496
JOIN                 ; 9497
LD     0 1          ;  <== lambda_1005  [Integer elem, Integer acc] (as expr) ; 9498
LDC    2            ; just constant from code ; 9499
MUL                  ; 9500
LD     0 0          ; var elem ; 9501
ADD                  ; 9502
RTN                  ; 9503
LD     0 0          ;  <== lambda_1006  [Tuple<Integer,SortedMap<Cons>> init, Cons step] (as expr) ; 9504
CAR                 ; generateTupleAccess total=2 pos=0 ; 9505
LDC    1            ; just constant from code ; 9506
ADD                  ; 9507
LD     0 0          ; var init ; 9508
CDR                 ; generateTupleAccess total=2 pos=1 ; 9509
LD     0 0          ; var init ; 9510
CAR                 ; generateTupleAccess total=2 pos=0 ; 9511
LD     0 1          ; var step ; 9512
LDF    1254         ;  @sorted_map_assoc ; 9513
AP     3             ; 9514
CONS                 ; 9515
RTN                  ; 9516
LDF    3475         ;  <== lambda_1007  [x] (as expr), ALSO: @array_256 ; 9517
AP     0             ; 9518
RTN                  ; 9519
LD     0 0          ;  <== lambda_1008  [a, b] (as expr) ; 9520
LD     0 1          ; var b ; 9521
CONS                 ; 9522
RTN                  ; 9523
LD     0 0          ;  <== lambda_1009  [Tuple<ListCons<Integer>,Function2<Integer,Integer,Function1<Integer,Integer>>> t] (as expr) ; 9524
CAR                 ; generateTupleAccess total=2 pos=0 ; 9525
LDC    0            ; just constant from code ; 9526
LDF    10066        ;  @lambda_1051 ; 9527
LDF    86           ;  @mapi ; 9528
AP     3             ; 9529
RTN                  ; 9530
LD     0 0          ;  <== lambda_1010  [row, rowy] (as expr) ; 9531
LD     0 1          ; var rowy ; 9532
LDF    3372         ;  @collectWalkableXY ; 9533
AP     2             ; 9534
LDC 0               ; local var space ; 9535
LDF    3364         ;  @my_cat_maybes ; 9536
AP     2             ; 9537
RTN                  ; 9538
LD     1 0          ;  <== lambda_1011  [Point w] (as expr) ; 9539
LD     0 0          ; var w ; 9540
CAR                 ; generateTupleAccess total=2 pos=0 ; 9541
LD     0 0          ; var w ; 9542
CDR                 ; generateTupleAccess total=2 pos=1 ; 9543
LDC 0               ; local var space ; 9544
LDC 0               ; local var space ; 9545
LDC 0               ; local var space ; 9546
LDC 0               ; local var space ; 9547
LDF    3015         ;  @isJunction ; 9548
AP     7             ; 9549
RTN                  ; 9550
LD     0 0          ;  <== lambda_1012  [Point pt] (as expr) ; 9551
LDF    3139         ;  @getPointKey ; 9552
AP     1             ; 9553
LD     0 0          ; var pt ; 9554
CONS                 ; 9555
RTN                  ; 9556
LD     1 0          ;  <== lambda_1013  [j] (as expr) ; 9557
LD     0 0          ; var j ; 9558
LD     1 8          ; var junctions ; 9559
LD     1 1          ; var accessors ; 9560
LDC 0               ; local var space ; 9561
LDF    3074         ;  @findNeighbourJunctions ; 9562
AP     5             ; 9563
RTN                  ; 9564
LD     0 0          ;  <== lambda_1014  [ParsedEdge pe, Integer ix] (as expr) ; 9565
CAR                 ; generateTupleAccess total=7 pos=0 ; 9566
LD     0 0          ; var pe ; 9567
CDR                 ; generateTupleAccess total=7 pos=1 ; 9568
CAR                  ; 9569
LD     0 0          ; var pe ; 9570
CDR                 ; generateTupleAccess total=7 pos=2 ; 9571
CDR                  ; 9572
CAR                  ; 9573
LD     0 0          ; var pe ; 9574
CDR                 ; generateTupleAccess total=7 pos=3 ; 9575
CDR                  ; 9576
CDR                  ; 9577
CAR                  ; 9578
LD     0 0          ; var pe ; 9579
CDR                 ; generateTupleAccess total=7 pos=4 ; 9580
CDR                  ; 9581
CDR                  ; 9582
CDR                  ; 9583
CAR                  ; 9584
LD     0 1          ; var ix ; 9585
LDC    -1           ; just negative constant from code ; 9586
CONS                 ; 9587
CONS                 ; 9588
CONS                 ; 9589
CONS                 ; 9590
CONS                 ; 9591
CONS                 ; 9592
RTN                  ; 9593
LD     0 0          ;  <== lambda_1015  [ParsedEdge pe, Integer ix] (as expr) ; 9594
CAR                 ; generateTupleAccess total=7 pos=0 ; 9595
LD     0 0          ; var pe ; 9596
CDR                 ; generateTupleAccess total=7 pos=1 ; 9597
CAR                  ; 9598
LD     0 0          ; var pe ; 9599
CDR                 ; generateTupleAccess total=7 pos=2 ; 9600
CDR                  ; 9601
CAR                  ; 9602
LD     0 0          ; var pe ; 9603
CDR                 ; generateTupleAccess total=7 pos=3 ; 9604
CDR                  ; 9605
CDR                  ; 9606
CAR                  ; 9607
LD     0 0          ; var pe ; 9608
CDR                 ; generateTupleAccess total=7 pos=4 ; 9609
CDR                  ; 9610
CDR                  ; 9611
CDR                  ; 9612
CAR                  ; 9613
LD     0 0          ; var pe ; 9614
CDR                 ; generateTupleAccess total=7 pos=5 ; 9615
CDR                  ; 9616
CDR                  ; 9617
CDR                  ; 9618
CDR                  ; 9619
CAR                  ; 9620
LD     0 0          ; var pe ; 9621
CDR                 ; generateTupleAccess total=7 pos=1 ; 9622
CAR                  ; 9623
LD     0 0          ; var pe ; 9624
CAR                 ; generateTupleAccess total=7 pos=0 ; 9625
LD     1 10         ; var allParsedEdges2 ; 9626
LDF    3350         ;  @findEdge ; 9627
AP     3             ; 9628
LDF    3356         ;  @edgeNumber ; 9629
AP     1             ; 9630
CONS                 ; 9631
CONS                 ; 9632
CONS                 ; 9633
CONS                 ; 9634
CONS                 ; 9635
CONS                 ; 9636
RTN                  ; 9637
LD     0 0          ;  <== lambda_1016  [GhostState g, ListCons s] (as expr) ; 9638
CDR                 ; generateTupleAccess total=3 pos=1 ; 9639
CAR                  ; 9640
LD     0 1          ; var s ; 9641
CONS                 ; 9642
RTN                  ; 9643
LD     0 0          ;  <== lambda_1017  [nextaistate, worldState] (as expr) ; 9644
LD     0 1          ; var worldState ; 9645
LDC 0               ; local var space ; 9646
LDC 0               ; local var space ; 9647
LDC 0               ; local var space ; 9648
LDC 0               ; local var space ; 9649
LDC 0               ; local var space ; 9650
LDC 0               ; local var space ; 9651
LDC 0               ; local var space ; 9652
LDC 0               ; local var space ; 9653
LDC 0               ; local var space ; 9654
LDC 0               ; local var space ; 9655
LDC 0               ; local var space ; 9656
LDC 0               ; local var space ; 9657
LDF    2575         ;  @performMove ; 9658
AP     14            ; 9659
RTN                  ; 9660
LD     0 0          ;  <== lambda_1018  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9661
CDR                 ; generateTupleAccess total=2 pos=1 ; 9662
CAR                 ; generateTupleAccess total=2 pos=0 ; 9663
LD     1 1          ; var start ; 9664
CAR                 ; generateTupleAccess total=2 pos=0 ; 9665
CEQ                  ; 9666
LDC    1            ; for negation ; 9667
SUB                  ; 9668
LD     0 0          ; var t ; 9669
CDR                 ; generateTupleAccess total=2 pos=1 ; 9670
CDR                 ; generateTupleAccess total=2 pos=1 ; 9671
LD     1 1          ; var start ; 9672
CDR                 ; generateTupleAccess total=2 pos=1 ; 9673
CEQ                  ; 9674
LDC    1            ; for negation ; 9675
SUB                  ; 9676
ADD                  ; 9677
SEL    9680 9682    ; IF? 58 ; 9678
RTN                  ; 9679
LDC    1            ; THEN: 58 ; 9680
JOIN                 ; 9681
LDC    0            ; ELSE: 58 ; 9682
JOIN                 ; 9683
LDC    0            ;  <== lambda_1019  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9684
LD     0 0          ; var t ; 9685
CAR                 ; generateTupleAccess total=2 pos=0 ; 9686
AP     1             ; 9687
LDC    2            ; CT.PILL ; 9688
CEQ                  ; 9689
SEL    9692 9694    ; IF? 59 ; 9690
RTN                  ; 9691
LDC    1            ; THEN: 59 ; 9692
JOIN                 ; 9693
LDC    0            ; ELSE: 59 ; 9694
JOIN                 ; 9695
LD     0 0          ;  <== lambda_1020  [Point p] (as expr) ; 9696
CAR                 ; generateTupleAccess total=2 pos=0 ; 9697
LD     1 1          ; var start ; 9698
CAR                 ; generateTupleAccess total=2 pos=0 ; 9699
CEQ                  ; 9700
LDC    1            ; for negation ; 9701
SUB                  ; 9702
LD     0 0          ; var p ; 9703
CDR                 ; generateTupleAccess total=2 pos=1 ; 9704
LD     1 1          ; var start ; 9705
CDR                 ; generateTupleAccess total=2 pos=1 ; 9706
CEQ                  ; 9707
LDC    1            ; for negation ; 9708
SUB                  ; 9709
ADD                  ; 9710
SEL    9713 9715    ; IF? 60 ; 9711
RTN                  ; 9712
LDC    1            ; THEN: 60 ; 9713
JOIN                 ; 9714
LDC    0            ; ELSE: 60 ; 9715
JOIN                 ; 9716
LD     1 2          ;  <== lambda_1021  [Point p] (as expr) ; 9717
LD     0 0          ; var p ; 9718
CDR                 ; generateTupleAccess total=2 pos=1 ; 9719
LD     0 0          ; var p ; 9720
CAR                 ; generateTupleAccess total=2 pos=0 ; 9721
LDF    3454         ;  @getMapItem ; 9722
AP     3             ; 9723
LDC    6            ; CT.GHOST ; 9724
CEQ                  ; 9725
SEL    9728 9730    ; IF? 61 ; 9726
RTN                  ; 9727
LDC    1            ; THEN: 61 ; 9728
JOIN                 ; 9729
LDC    0            ; ELSE: 61 ; 9730
JOIN                 ; 9731
LDC    0            ;  <== lambda_1022  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9732
LD     0 0          ; var t ; 9733
CAR                 ; generateTupleAccess total=2 pos=0 ; 9734
AP     1             ; 9735
LDC    2            ; CT.PILL ; 9736
CEQ                  ; 9737
SEL    9740 9742    ; IF? 62 ; 9738
RTN                  ; 9739
LDC    1            ; THEN: 62 ; 9740
JOIN                 ; 9741
LDC    0            ; ELSE: 62 ; 9742
JOIN                 ; 9743
LD     0 0          ;  <== lambda_1023  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9744
LDC    0            ; just constant from code ; 9745
LD     0 1          ; var t ; 9746
CAR                 ; generateTupleAccess total=2 pos=0 ; 9747
AP     1             ; 9748
LDC    2            ; CT.PILL ; 9749
CEQ                  ; 9750
SEL    9754 9756    ; IF? 63 ; 9751
ADD                  ; 9752
RTN                  ; 9753
LDC    1            ; THEN: 63 ; 9754
JOIN                 ; 9755
LDC    0            ; ELSE: 63 ; 9756
JOIN                 ; 9757
LD     0 0          ;  <== lambda_1024  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9758
CDR                 ; generateTupleAccess total=2 pos=1 ; 9759
CAR                 ; generateTupleAccess total=2 pos=0 ; 9760
LD     1 1          ; var start ; 9761
CAR                 ; generateTupleAccess total=2 pos=0 ; 9762
CEQ                  ; 9763
LDC    1            ; for negation ; 9764
SUB                  ; 9765
LD     0 0          ; var t ; 9766
CDR                 ; generateTupleAccess total=2 pos=1 ; 9767
CDR                 ; generateTupleAccess total=2 pos=1 ; 9768
LD     1 1          ; var start ; 9769
CDR                 ; generateTupleAccess total=2 pos=1 ; 9770
CEQ                  ; 9771
LDC    1            ; for negation ; 9772
SUB                  ; 9773
ADD                  ; 9774
SEL    9777 9779    ; IF? 64 ; 9775
RTN                  ; 9776
LDC    1            ; THEN: 64 ; 9777
JOIN                 ; 9778
LDC    0            ; ELSE: 64 ; 9779
JOIN                 ; 9780
LD     0 0          ;  <== lambda_1025  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9781
LDC    0            ; just constant from code ; 9782
LD     0 1          ; var t ; 9783
CAR                 ; generateTupleAccess total=2 pos=0 ; 9784
AP     1             ; 9785
LDC    2            ; CT.PILL ; 9786
CEQ                  ; 9787
SEL    9791 9793    ; IF? 65 ; 9788
ADD                  ; 9789
RTN                  ; 9790
LDC    1            ; THEN: 65 ; 9791
JOIN                 ; 9792
LDC    0            ; ELSE: 65 ; 9793
JOIN                 ; 9794
LD     1 1          ;  <== lambda_1026  [e] (as expr) ; 9795
LD     0 0          ; var e ; 9796
LDF    3262         ;  @pointInEdge ; 9797
AP     2             ; 9798
RTN                  ; 9799
LD     0 0          ;  <== lambda_1027  [Queue<ListCons<ParsedEdge>> qq, ParsedEdge e] (as expr) ; 9800
LD     0 1          ; var e ; 9801
LDC    0            ; NULL literal ; 9802
CONS                 ; 9803
LDF    407          ;  @queue_enqueue ; 9804
AP     2             ; 9805
RTN                  ; 9806
LD     0 0          ;  <== lambda_1028  [ParsedEdge e] (as expr) ; 9807
CDR                 ; generateTupleAccess total=7 pos=5 ; 9808
CDR                  ; 9809
CDR                  ; 9810
CDR                  ; 9811
CDR                  ; 9812
CAR                  ; 9813
LDC    0            ; just constant from code ; 9814
CONS                 ; 9815
RTN                  ; 9816
LD     0 0          ;  <== lambda_1029  [r] (as expr) ; 9817
LDC    5            ; just constant from code ; 9818
LD     0 0          ; var r ; 9819
LDF    125          ;  @last ; 9820
AP     1             ; 9821
LD     1 2          ; var worldState ; 9822
CDR                 ; generateTupleAccess total=4 pos=1 ; 9823
CAR                  ; 9824
CDR                 ; generateTupleAccess total=5 pos=1 ; 9825
CAR                  ; 9826
LDC 0               ; local var space ; 9827
LDC 0               ; local var space ; 9828
LDF    2558         ;  @countMyEdgePills ; 9829
AP     4             ; 9830
MUL                  ; 9831
LD     0 0          ; var r ; 9832
LDF    299          ;  @reverse ; 9833
AP     1             ; 9834
CDR                  ; 9835
LDF    2902         ;  @countRoutePills ; 9836
AP     1             ; 9837
ADD                  ; 9838
CONS                 ; 9839
RTN                  ; 9840
LD     0 0          ;  <== lambda_1030  [Tuple<ListCons<ParsedEdge>,Integer> t] (as expr) ; 9841
CDR                 ; generateTupleAccess total=2 pos=1 ; 9842
RTN                  ; 9843
LD     0 0          ;  <== lambda_1031  [Point p] (as expr) ; 9844
CAR                 ; generateTupleAccess total=2 pos=0 ; 9845
LD     1 2          ; var location ; 9846
CAR                 ; generateTupleAccess total=2 pos=0 ; 9847
CEQ                  ; 9848
LDC    1            ; for negation ; 9849
SUB                  ; 9850
LD     0 0          ; var p ; 9851
CDR                 ; generateTupleAccess total=2 pos=1 ; 9852
LD     1 2          ; var location ; 9853
CDR                 ; generateTupleAccess total=2 pos=1 ; 9854
CEQ                  ; 9855
LDC    1            ; for negation ; 9856
SUB                  ; 9857
ADD                  ; 9858
SEL    9861 9863    ; IF? 66 ; 9859
RTN                  ; 9860
LDC    1            ; THEN: 66 ; 9861
JOIN                 ; 9862
LDC    0            ; ELSE: 66 ; 9863
JOIN                 ; 9864
LD     0 0          ;  <== lambda_1032  [ParsedEdge pe] (as expr) ; 9865
CAR                 ; generateTupleAccess total=7 pos=0 ; 9866
LD     1 1          ; var lookingEdge ; 9867
LDC 0               ; local var space ; 9868
LDF    2895         ;  @endingPointOfEdgeRoute ; 9869
AP     2             ; 9870
LDF    2878         ;  @pointEquals ; 9871
AP     2             ; 9872
RTN                  ; 9873
LDC    1            ;  <== lambda_1033  [ParsedEdge f] (as expr) ; 9874
LD     1 3          ; var visited ; 9875
LD     0 0          ; var f ; 9876
CDR                 ; generateTupleAccess total=7 pos=5 ; 9877
CDR                  ; 9878
CDR                  ; 9879
CDR                  ; 9880
CDR                  ; 9881
CAR                  ; 9882
LDF    1223         ;  @sorted_map_contains ; 9883
AP     2             ; 9884
SUB                  ; 9885
RTN                  ; 9886
LD     0 0          ;  <== lambda_1034  [pe] (as expr) ; 9887
LD     1 1          ; var worldState ; 9888
CAR                 ; generateTupleAccess total=4 pos=0 ; 9889
LDC 0               ; local var space ; 9890
LDC 0               ; local var space ; 9891
LDF    2531         ;  @collectAnyEdgePills ; 9892
AP     4             ; 9893
LDF    532          ;  @length ; 9894
AP     1             ; 9895
LDC    0            ; just constant from code ; 9896
CGT                  ; 9897
SEL    9900 9902    ; IF? 67 ; 9898
RTN                  ; 9899
LDC    1            ; THEN: 67 ; 9900
JOIN                 ; 9901
LDC    0            ; ELSE: 67 ; 9902
JOIN                 ; 9903
LD     0 0          ;  <== lambda_1035  [ParsedEdge f] (as expr) ; 9904
CDR                 ; generateTupleAccess total=7 pos=5 ; 9905
CDR                  ; 9906
CDR                  ; 9907
CDR                  ; 9908
CDR                  ; 9909
CAR                  ; 9910
LDC    0            ; just constant from code ; 9911
CONS                 ; 9912
RTN                  ; 9913
LD     0 0          ;  <== lambda_1036  [ParsedEdge f] (as expr) ; 9914
CDR                 ; generateTupleAccess total=7 pos=6 ; 9915
CDR                  ; 9916
CDR                  ; 9917
CDR                  ; 9918
CDR                  ; 9919
CDR                  ; 9920
LDC    0            ; just constant from code ; 9921
CONS                 ; 9922
RTN                  ; 9923
LD     0 0          ;  <== lambda_1037  [ParsedEdge next] (as expr) ; 9924
LD     1 8          ; var lookingEdge ; 9925
CONS                 ; 9926
RTN                  ; 9927
LD     0 0          ;  <== lambda_1038  [Queue<ListCons<ParsedEdge>> qq, ListCons<ParsedEdge> nr] (as expr) ; 9928
LD     0 1          ; var nr ; 9929
LDF    407          ;  @queue_enqueue ; 9930
AP     2             ; 9931
RTN                  ; 9932
LD     0 0          ;  <== lambda_1039  [acc, pe] (as expr) ; 9933
LD     0 1          ; var pe ; 9934
LDC 0               ; local var space ; 9935
LDC 0               ; local var space ; 9936
LDF    2544         ;  @countAnyEdgePills ; 9937
AP     3             ; 9938
ADD                  ; 9939
RTN                  ; 9940
LD     0 0          ;  <== lambda_1040  [p] (as expr) ; 9941
CAR                  ; 9942
LD     0 0          ; var p ; 9943
LDF    125          ;  @last ; 9944
AP     1             ; 9945
LD     0 0          ; var p ; 9946
LD     0 0          ; var p ; 9947
LD     1 3          ; var accessors ; 9948
LDF    3102         ;  @makeEdgeAccess ; 9949
AP     2             ; 9950
LD     0 0          ; var p ; 9951
LDF    532          ;  @length ; 9952
AP     1             ; 9953
LDC    1            ; just constant from code ; 9954
SUB                  ; 9955
LDC    -1           ; just negative constant from code ; 9956
LDC    -1           ; just negative constant from code ; 9957
CONS                 ; 9958
CONS                 ; 9959
CONS                 ; 9960
CONS                 ; 9961
CONS                 ; 9962
CONS                 ; 9963
RTN                  ; 9964
LDC    100          ;  <== lambda_1041  [Point pt] (as expr) ; 9965
LD     0 0          ; var pt ; 9966
CAR                 ; generateTupleAccess total=2 pos=0 ; 9967
LD     1 1          ; var accessors ; 9968
LD     0 0          ; var pt ; 9969
CDR                 ; generateTupleAccess total=2 pos=1 ; 9970
LDF    423          ;  @list_item ; 9971
AP     2             ; 9972
AP     2             ; 9973
RTN                  ; 9974
LD     1 0          ;  <== lambda_1042  [Tuple<Integer,Point> d] (as expr) ; 9975
LD     0 0          ; var d ; 9976
CDR                 ; generateTupleAccess total=2 pos=1 ; 9977
LDF    2995         ;  @isWalkable2 ; 9978
AP     2             ; 9979
LDC    1            ; just constant from code ; 9980
LD     1 3          ; var visited ; 9981
LD     0 0          ; var d ; 9982
CAR                 ; generateTupleAccess total=2 pos=0 ; 9983
LDF    1223         ;  @sorted_map_contains ; 9984
AP     2             ; 9985
SUB                  ; 9986
MUL                  ; 9987
RTN                  ; 9988
LD     1 2          ;  <== lambda_1043  [Tuple<Integer,Point> e] (as expr) ; 9989
LD     0 0          ; var e ; 9990
CAR                 ; generateTupleAccess total=2 pos=0 ; 9991
LDF    1223         ;  @sorted_map_contains ; 9992
AP     2             ; 9993
RTN                  ; 9994
LDC    1            ;  <== lambda_1044  [Tuple<Integer,Point> e] (as expr) ; 9995
LD     1 12         ; var arriveds ; 9996
LD     0 0          ; var e ; 9997
CAR                 ; generateTupleAccess total=2 pos=0 ; 9998
LDF    1223         ;  @sorted_map_contains ; 9999
AP     2             ; 10000
SUB                  ; 10001
RTN                  ; 10002
LD     0 0          ;  <== lambda_1045  [Tuple<Integer,Point> e] (as expr) ; 10003
CDR                 ; generateTupleAccess total=2 pos=1 ; 10004
LD     1 7          ; var thisRoute ; 10005
CONS                 ; 10006
RTN                  ; 10007
LD     0 0          ;  <== lambda_1046  [r, i] (as expr) ; 10008
LD     0 1          ; var i ; 10009
LDF    407          ;  @queue_enqueue ; 10010
AP     2             ; 10011
RTN                  ; 10012
LD     0 0          ;  <== lambda_1047  [Tuple<Integer,Point> e] (as expr) ; 10013
CDR                 ; generateTupleAccess total=2 pos=1 ; 10014
LD     1 7          ; var thisRoute ; 10015
CONS                 ; 10016
RTN                  ; 10017
LD     1 0          ;  <== lambda_1048  [Point ep] (as expr) ; 10018
CAR                 ; generateTupleAccess total=2 pos=0 ; 10019
LD     0 0          ; var ep ; 10020
CAR                 ; generateTupleAccess total=2 pos=0 ; 10021
CEQ                  ; 10022
LD     1 0          ; var pos ; 10023
CDR                 ; generateTupleAccess total=2 pos=1 ; 10024
LD     0 0          ; var ep ; 10025
CDR                 ; generateTupleAccess total=2 pos=1 ; 10026
CEQ                  ; 10027
MUL                  ; 10028
SEL    10031 10033  ; IF? 68 ; 10029
RTN                  ; 10030
LDC    1            ; THEN: 68 ; 10031
JOIN                 ; 10032
LDC    0            ; ELSE: 68 ; 10033
JOIN                 ; 10034
LD     0 0          ;  <== lambda_1049  [ParsedEdge e] (as expr) ; 10035
CAR                 ; generateTupleAccess total=7 pos=0 ; 10036
LD     1 0          ; var a ; 10037
LDF    2878         ;  @pointEquals ; 10038
AP     2             ; 10039
LD     0 0          ; var e ; 10040
CDR                 ; generateTupleAccess total=7 pos=1 ; 10041
CAR                  ; 10042
LD     1 1          ; var b ; 10043
LDF    2878         ;  @pointEquals ; 10044
AP     2             ; 10045
MUL                  ; 10046
RTN                  ; 10047
LD     0 0          ;  <== lambda_1050  [col, colx] (as expr) ; 10048
LDC 0               ; local var space ; 10049
LDF    2981         ;  @isWalkable ; 10050
AP     2             ; 10051
LDC    0            ; just constant from code ; 10052
CGT                  ; 10053
SEL    10056 10063  ; IF? 69 ; 10054
RTN                  ; 10055
LD     0 1          ; THEN: 69 ; 10056
LD     1 1          ; var rowy ; 10057
CONS                 ; 10058
LDC 0               ; local var space ; 10059
LDF    220          ;  @JUST ; 10060
AP     2             ; 10061
JOIN                 ; 10062
LDF    216          ; ELSE: 69, ALSO: @NOTHING ; 10063
AP     0             ; 10064
JOIN                 ; 10065
LD     0 0          ;  <== lambda_1051  [val, ix] (as expr) ; 10066
LDC    101          ; VMExtras.GET_WRITER ; 10067
LD     0 1          ; var ix ; 10068
LD     1 0          ; var t ; 10069
CDR                 ; generateTupleAccess total=2 pos=1 ; 10070
AP     2             ; 10071
AP     1             ; 10072
RTN                  ; 10073
LD     0 0          ;  <== lambda_1052  [x, y] (as expr) ; 10074
LD     0 1          ; var y ; 10075
MUL                  ; 10076
RTN                  ; 10077
LD     0 0          ;  <== lambda_1053  [x, y] (as expr) ; 10078
LD     0 1          ; var y ; 10079
ADD                  ; 10080
LDC    0            ; just constant from code ; 10081
CGT                  ; 10082
SEL    10085 10087  ; IF? 126 ; 10083
RTN                  ; 10084
LDC    1            ; THEN: 126 ; 10085
JOIN                 ; 10086
LDC    0            ; ELSE: 126 ; 10087
JOIN                 ; 10088
LD     0 0          ;  <== lambda_1054  [x, y] (as expr) ; 10089
LD     0 1          ; var y ; 10090
CEQ                  ; 10091
LDC    1            ; for negation ; 10092
SUB                  ; 10093
SEL    10096 10098  ; IF? 127 ; 10094
RTN                  ; 10095
LDC    1            ; THEN: 127 ; 10096
JOIN                 ; 10097
LDC    0            ; ELSE: 127 ; 10098
JOIN                 ; 10099

