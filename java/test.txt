LDC    1            ;  <== entryPoint  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 0
LDC    1            ; just constant from code ; 1
CEQ                  ; 2
SEL    5 13         ; IF? 1 ; 3
RTN                  ; 4
LD     0 0          ; THEN: 1 ; 5
LD     0 1          ; var ghostSpecs ; 6
LDC 0               ; local var space ; 7
LDC 0               ; local var space ; 8
LDC 0               ; local var space ; 9
LDF    2525         ;  @entryFactual ; 10
AP     5             ; 11
JOIN                 ; 12
LDC 0               ; ELSE: 1 ; 13
LDC 0               ; local var space ; 14
LDC 0               ; local var space ; 15
LDC 0               ; local var space ; 16
LDC 0               ; local var space ; 17
LDF    2489         ;  @entryCPUEmulator ; 18
AP     5             ; 19
JOIN                 ; 20
LD     0 0          ;  <== mydebug  [T o] (as blk) ; 21
DBUG                 ; 22
LD     0 0          ; var o ; 23
RTN                  ; 24
LD     0 0          ;  <== mydebugv  [Object tag, T o] (as blk) ; 25
DBUG                 ; 26
LD     0 1          ; var o ; 27
DBUG                 ; 28
LD     0 1          ; var o ; 29
RTN                  ; 30
LD     0 2          ;  <== foldl  [Function2<A,B,A> f, A a, ListCons<B> l] (as blk) ; 31
ATOM                 ; 32
SEL    35 37        ; IF? 2 ; 33
RTN                  ; 34
LD     0 1          ; THEN: 2 ; 35
JOIN                 ; 36
LD     0 0          ; ELSE: 2 ; 37
LD     0 1          ; var a ; 38
LD     0 2          ; var l ; 39
CAR                  ; 40
LD     0 0          ; var f ; 41
AP     2             ; 42
LD     0 2          ; var l ; 43
CDR                  ; 44
LDF    31           ;  @foldl ; 45
AP     3             ; 46
JOIN                 ; 47
LD     0 2          ;  <== foldr  [Function2<A,B,B> f, B a, ListCons<A> l] (as blk) ; 48
ATOM                 ; 49
SEL    52 54        ; IF? 3 ; 50
RTN                  ; 51
LD     0 1          ; THEN: 3 ; 52
JOIN                 ; 53
LD     0 2          ; ELSE: 3 ; 54
CAR                  ; 55
LD     0 0          ; var f ; 56
LD     0 1          ; var a ; 57
LD     0 2          ; var l ; 58
CDR                  ; 59
LDF    48           ;  @foldr ; 60
AP     3             ; 61
LD     0 0          ; var f ; 62
AP     2             ; 63
JOIN                 ; 64
LDF    9668         ;  <== o  [final Function1<B,C> f, final Function1<A,B> g] (as blk), ALSO: @lambda_1000 ; 65
RTN                  ; 66
LDF    9674         ;  <== flip  [Function2<A,B,C> f] (as blk), ALSO: @lambda_1001 ; 67
RTN                  ; 68
LD     0 0          ;  <== map  [ListCons<T> c, Function1<T,T2> arg] (as blk) ; 69
ATOM                 ; 70
SEL    73 75        ; IF? 4 ; 71
RTN                  ; 72
LDC    0            ; THEN: 4 ; 73
JOIN                 ; 74
LD     0 0          ; ELSE: 4 ; 75
CAR                  ; 76
LD     0 1          ; var arg ; 77
AP     1             ; 78
LD     0 0          ; var c ; 79
CDR                  ; 80
LD     0 1          ; var arg ; 81
LDF    69           ;  @map ; 82
AP     2             ; 83
CONS                 ; 84
JOIN                 ; 85
LD     0 0          ;  <== mapi  [ListCons<D> c, int ix, Function2<D,Integer,D2> arg] (as blk) ; 86
ATOM                 ; 87
SEL    90 92        ; IF? 5 ; 88
RTN                  ; 89
LDC    0            ; THEN: 5 ; 90
JOIN                 ; 91
LD     0 0          ; ELSE: 5 ; 92
CAR                  ; 93
LD     0 1          ; var ix ; 94
LD     0 2          ; var arg ; 95
AP     2             ; 96
LD     0 0          ; var c ; 97
CDR                  ; 98
LD     0 1          ; var ix ; 99
LDC    1            ; just constant from code ; 100
ADD                  ; 101
LD     0 2          ; var arg ; 102
LDF    86           ;  @mapi ; 103
AP     3             ; 104
CONS                 ; 105
JOIN                 ; 106
LD     0 0          ;  <== cat_maybes  [ListCons<Maybe<D>> data] (as blk) ; 107
LDF    9679         ;  @lambda_1002 ; 108
LDF    69           ;  @map ; 109
AP     2             ; 110
ST     0 1           ; 111
LD     0 1          ; var mtl ; 112
LDF    118          ;  @concat ; 113
AP     1             ; 114
ST     0 2           ; 115
LD     0 2          ; var rv ; 116
RTN                  ; 117
LD     0 0          ;  <== concat  [ListCons<ListCons<D>> data] (as blk) ; 118
LDC    0            ; NULL literal ; 119
LDF    149          ;  @concat_acc ; 120
AP     2             ; 121
LDF    299          ;  @reverse ; 122
AP     1             ; 123
RTN                  ; 124
LD     0 0          ;  <== last  [ListCons<D> data] (as blk) ; 125
ATOM                 ; 126
SEL    133 135       ; 127
LD     0 0          ; var data ; 128
CDR                  ; 129
ATOM                 ; 130
SEL    136 139      ; IF? 8 ; 131
RTN                  ; 132
BRK                 ; branch@133 ; 133
JOIN                 ; 134
JOIN                ; branch@135 ; 135
LD     0 0          ; THEN: 8 ; 136
CAR                  ; 137
JOIN                 ; 138
LD     0 0          ; ELSE: 8 ; 139
CDR                  ; 140
LDF    125          ;  @last ; 141
AP     1             ; 142
JOIN                 ; 143
LD     0 0          ;  <== concat_set  [ListCons<ListCons<D>> data] (as blk) ; 144
LDC    0            ; NULL literal ; 145
LDF    149          ;  @concat_acc ; 146
AP     2             ; 147
RTN                  ; 148
LD     0 0          ;  <== concat_acc  [ListCons<ListCons<D>> data, ListCons<D> acc] (as blk) ; 149
ATOM                 ; 150
SEL    153 155      ; IF? 6 ; 151
RTN                  ; 152
LD     0 1          ; THEN: 6 ; 153
JOIN                 ; 154
LD     0 0          ; ELSE: 6 ; 155
CDR                  ; 156
LD     0 0          ; var data ; 157
CAR                  ; 158
LD     0 1          ; var acc ; 159
LDF    165          ;  @concat2 ; 160
AP     2             ; 161
LDF    149          ;  @concat_acc ; 162
AP     2             ; 163
JOIN                 ; 164
LD     0 0          ;  <== concat2  [ListCons<D> data, ListCons<D> data2] (as blk) ; 165
ATOM                 ; 166
SEL    169 171      ; IF? 9 ; 167
RTN                  ; 168
LD     0 1          ; THEN: 9 ; 169
JOIN                 ; 170
LD     0 1          ; ELSE: 9 ; 171
ATOM                 ; 172
SEL    175 177      ; IF? 74 ; 173
JOIN                 ; 174
LD     0 0          ; THEN: 74 ; 175
JOIN                 ; 176
LD     0 0          ; ELSE: 74 ; 177
LDF    299          ;  @reverse ; 178
AP     1             ; 179
LD     0 1          ; var data2 ; 180
LDF    201          ;  @concat2_acc ; 181
AP     2             ; 182
JOIN                 ; 183
LD     0 0          ;  <== concat2_set  [ListCons<D> data, ListCons<D> data2] (as blk) ; 184
ATOM                 ; 185
SEL    188 190      ; IF? 10 ; 186
RTN                  ; 187
LD     0 1          ; THEN: 10 ; 188
JOIN                 ; 189
LD     0 1          ; ELSE: 10 ; 190
ATOM                 ; 191
SEL    194 196      ; IF? 75 ; 192
JOIN                 ; 193
LD     0 0          ; THEN: 75 ; 194
JOIN                 ; 195
LD     0 0          ; ELSE: 75 ; 196
LD     0 1          ; var data2 ; 197
LDF    201          ;  @concat2_acc ; 198
AP     2             ; 199
JOIN                 ; 200
LD     0 0          ;  <== concat2_acc  [ListCons<D> data, ListCons<D> acc] (as blk) ; 201
ATOM                 ; 202
SEL    205 207      ; IF? 11 ; 203
RTN                  ; 204
LD     0 1          ; THEN: 11 ; 205
JOIN                 ; 206
LD     0 0          ; ELSE: 11 ; 207
CDR                  ; 208
LD     0 0          ; var data ; 209
CAR                  ; 210
LD     0 1          ; var acc ; 211
CONS                 ; 212
LDF    201          ;  @concat2_acc ; 213
AP     2             ; 214
JOIN                 ; 215
LDC    0            ;  <== NOTHING  [] (as blk) ; 216
LDC    0            ; NULL literal ; 217
CONS                 ; 218
RTN                  ; 219
LDC    1            ;  <== JUST  [T t] (as blk) ; 220
LD     0 0          ; var t ; 221
CONS                 ; 222
ST     0 1           ; 223
LD     0 1          ; var tMaybe ; 224
RTN                  ; 225
LD     0 0          ;  <== maybeToList  [Maybe<D> d] (as blk) ; 226
LDF    283          ;  @is_nothing ; 227
AP     1             ; 228
LDC    1            ; just constant from code ; 229
CEQ                  ; 230
SEL    233 235      ; IF? 12 ; 231
RTN                  ; 232
LDC    0            ; THEN: 12 ; 233
JOIN                 ; 234
LD     0 0          ; ELSE: 12 ; 235
LDF    288          ;  @from_maybe ; 236
AP     1             ; 237
LDC    0            ; NULL literal ; 238
CONS                 ; 239
JOIN                 ; 240
LDC    0            ;  <== catMaybes_acc  [ListCons<Maybe<D>> data, ListCons<D> acc] (as blk) ; 241
ST     0 2           ; 242
LD     0 0          ; var data ; 243
ATOM                 ; 244
SEL    248 251       ; 245
LD     0 2          ; var rv ; 246
RTN                  ; 247
LD     0 1          ; branch@248 ; 248
ST     0 2           ; 249
JOIN                 ; 250
LD     0 0          ; branch@251 ; 251
CAR                  ; 252
LDF    283          ;  @is_nothing ; 253
AP     1             ; 254
ST     0 3           ; 255
LD     0 0          ; var data ; 256
CAR                  ; 257
LDF    288          ;  @from_maybe ; 258
AP     1             ; 259
ST     0 4           ; 260
LD     0 4          ; var data1 ; 261
LD     0 1          ; var acc ; 262
CONS                 ; 263
ST     0 5           ; 264
LD     0 0          ; var data ; 265
CDR                  ; 266
LD     0 3          ; var nothing ; 267
LDC    1            ; just constant from code ; 268
CEQ                  ; 269
SEL    279 281      ; IF? 76 ; 270
LDC 0               ; local var space ; 271
LDC 0               ; local var space ; 272
LDC 0               ; local var space ; 273
LDC 0               ; local var space ; 274
LDF    241          ;  @catMaybes_acc ; 275
AP     6             ; 276
ST     0 2           ; 277
JOIN                 ; 278
LD     0 1          ; THEN: 76 ; 279
JOIN                 ; 280
LD     0 5          ; ELSE: 76 ; 281
JOIN                 ; 282
LDC    1            ;  <== is_nothing  [Maybe<D> head] (as blk) ; 283
LD     0 0          ; var head ; 284
CAR                 ; generateTupleAccess total=2 pos=0 ; 285
SUB                  ; 286
RTN                  ; 287
LD     0 0          ;  <== from_maybe  [Maybe<D> head] (as blk) ; 288
CAR                 ; generateTupleAccess total=2 pos=0 ; 289
LDC    0            ; just constant from code ; 290
CEQ                  ; 291
SEL    296 298       ; 292
LD     0 0          ; var head ; 293
CDR                 ; generateTupleAccess total=2 pos=1 ; 294
RTN                  ; 295
BRK                 ; branch@296 ; 296
JOIN                 ; 297
JOIN                ; branch@298 ; 298
LD     0 0          ;  <== reverse  [ListCons<D> c] (as blk) ; 299
LDC    0            ; NULL literal ; 300
LDF    371          ;  @reverse_acc ; 301
AP     2             ; 302
RTN                  ; 303
LD     0 0          ;  <== maximum_by_acc  [ListCons<D> d, Function1<D,Integer> projection, D acc] (as blk) ; 304
ATOM                 ; 305
SEL    308 310      ; IF? 13 ; 306
RTN                  ; 307
LD     0 2          ; THEN: 13 ; 308
JOIN                 ; 309
LD     0 2          ; ELSE: 13 ; 310
LD     0 1          ; var projection ; 311
AP     1             ; 312
LD     0 0          ; var d ; 313
CAR                  ; 314
LD     0 1          ; var projection ; 315
AP     1             ; 316
CGT                  ; 317
SEL    320 327      ; IF? 77 ; 318
JOIN                 ; 319
LD     0 0          ; THEN: 77 ; 320
CDR                  ; 321
LD     0 1          ; var projection ; 322
LD     0 2          ; var acc ; 323
LDF    304          ;  @maximum_by_acc ; 324
AP     3             ; 325
JOIN                 ; 326
LD     0 0          ; ELSE: 77 ; 327
CDR                  ; 328
LD     0 1          ; var projection ; 329
LD     0 0          ; var d ; 330
CAR                  ; 331
LDF    304          ;  @maximum_by_acc ; 332
AP     3             ; 333
JOIN                 ; 334
LD     0 0          ;  <== maximum_by  [ListCons<D> d, Function1<D,Integer> projection] (as blk) ; 335
ATOM                 ; 336
SEL    346 348       ; 337
LD     0 0          ; var d ; 338
CDR                  ; 339
LD     0 1          ; var projection ; 340
LD     0 0          ; var d ; 341
CAR                  ; 342
LDF    304          ;  @maximum_by_acc ; 343
AP     3             ; 344
RTN                  ; 345
BRK                 ; branch@346 ; 346
JOIN                 ; 347
JOIN                ; branch@348 ; 348
LD     0 0          ;  <== dropWhile  [ListCons<D> c, Function1<D,Integer> test] (as blk) ; 349
ATOM                 ; 350
SEL    353 355      ; IF? 14 ; 351
RTN                  ; 352
LDC    0            ; THEN: 14 ; 353
JOIN                 ; 354
LD     0 0          ; ELSE: 14 ; 355
CAR                  ; 356
LD     0 1          ; var test ; 357
AP     1             ; 358
LDC    1            ; just constant from code ; 359
CEQ                  ; 360
SEL    363 369      ; IF? 78 ; 361
JOIN                 ; 362
LD     0 0          ; THEN: 78 ; 363
CDR                  ; 364
LD     0 1          ; var test ; 365
LDF    349          ;  @dropWhile ; 366
AP     2             ; 367
JOIN                 ; 368
LD     0 0          ; ELSE: 78 ; 369
JOIN                 ; 370
LD     0 0          ;  <== reverse_acc  [ListCons<D> c, ListCons<D> acc] (as blk) ; 371
ATOM                 ; 372
SEL    375 377      ; IF? 7 ; 373
RTN                  ; 374
LD     0 1          ; THEN: 7 ; 375
JOIN                 ; 376
LD     0 0          ; ELSE: 7 ; 377
CDR                  ; 378
LD     0 0          ; var c ; 379
CAR                  ; 380
LD     0 1          ; var acc ; 381
CONS                 ; 382
LDF    371          ;  @reverse_acc ; 383
AP     2             ; 384
JOIN                 ; 385
LD     0 0          ;  <== fold0  [ListCons<I> c, R init, Function2<R,I,R> arg] (as blk) ; 386
ATOM                 ; 387
SEL    390 392      ; IF? 15 ; 388
RTN                  ; 389
LD     0 1          ; THEN: 15 ; 390
JOIN                 ; 391
LD     0 0          ; ELSE: 15 ; 392
CDR                  ; 393
LD     0 1          ; var init ; 394
LD     0 0          ; var c ; 395
CAR                  ; 396
LD     0 2          ; var arg ; 397
AP     2             ; 398
LD     0 2          ; var arg ; 399
LDF    386          ;  @fold0 ; 400
AP     3             ; 401
JOIN                 ; 402
LDC    0            ;  <== queue_new  [] (as blk) ; 403
LDC    0            ; NULL literal ; 404
CONS                 ; 405
RTN                  ; 406
LD     0 0          ;  <== queue_enqueue  [Queue<T> q, T v] (as blk) ; 407
CAR                 ; generateTupleAccess total=2 pos=0 ; 408
LD     0 1          ; var v ; 409
LD     0 0          ; var q ; 410
CDR                 ; generateTupleAccess total=2 pos=1 ; 411
CONS                 ; 412
CONS                 ; 413
RTN                  ; 414
LD     0 0          ;  <== queue_isempty  [Queue<T> q] (as blk) ; 415
CAR                 ; generateTupleAccess total=2 pos=0 ; 416
ATOM                 ; 417
LD     0 0          ; var q ; 418
CDR                 ; generateTupleAccess total=2 pos=1 ; 419
ATOM                 ; 420
MUL                  ; 421
RTN                  ; 422
LDC    0            ;  <== list_item  [Cons list, int n] (as blk) ; 423
LD     0 1          ; var n ; 424
CGT                  ; 425
SEL    432 434       ; 426
LD     0 1          ; var n ; 427
LDC    0            ; just constant from code ; 428
CEQ                  ; 429
SEL    435 438      ; IF? 16 ; 430
RTN                  ; 431
BRK                 ; branch@432 ; 432
JOIN                 ; 433
JOIN                ; branch@434 ; 434
LD     0 0          ; THEN: 16 ; 435
CAR                  ; 436
JOIN                 ; 437
LD     0 0          ; ELSE: 16 ; 438
CDR                  ; 439
LD     0 1          ; var n ; 440
LDC    1            ; just constant from code ; 441
SUB                  ; 442
LDF    423          ;  @list_item ; 443
AP     2             ; 444
JOIN                 ; 445
LDC    0            ;  <== list_item  [ListCons<T> list, int n] (as blk) ; 446
LD     0 1          ; var n ; 447
CGT                  ; 448
SEL    455 457       ; 449
LD     0 1          ; var n ; 450
LDC    0            ; just constant from code ; 451
CEQ                  ; 452
SEL    458 461      ; IF? 17 ; 453
RTN                  ; 454
BRK                 ; branch@455 ; 455
JOIN                 ; 456
JOIN                ; branch@457 ; 457
LD     0 0          ; THEN: 17 ; 458
CAR                  ; 459
JOIN                 ; 460
LD     0 0          ; ELSE: 17 ; 461
CDR                  ; 462
LD     0 1          ; var n ; 463
LDC    1            ; just constant from code ; 464
SUB                  ; 465
LDF    423          ;  @list_item ; 466
AP     2             ; 467
JOIN                 ; 468
LDC    0            ;  <== list_item_def  [Cons list, int index, Object deflt] (as blk) ; 469
LD     0 1          ; var index ; 470
CGT                  ; 471
SEL    474 476      ; IF? 18 ; 472
RTN                  ; 473
LD     0 2          ; THEN: 18 ; 474
JOIN                 ; 475
LD     0 1          ; ELSE: 18 ; 476
LDC    0            ; just constant from code ; 477
CEQ                  ; 478
SEL    481 484      ; IF? 79 ; 479
JOIN                 ; 480
LD     0 0          ; THEN: 79 ; 481
CAR                  ; 482
JOIN                 ; 483
LD     0 0          ; ELSE: 79 ; 484
CDR                  ; 485
LD     0 1          ; var index ; 486
LDC    1            ; just constant from code ; 487
SUB                  ; 488
LDF    423          ;  @list_item ; 489
AP     2             ; 490
JOIN                 ; 491
LDC    0            ;  <== queue_dequeue  [Queue<T> q] (as blk) ; 492
ST     0 1           ; 493
LD     0 0          ; var q ; 494
CAR                 ; generateTupleAccess total=2 pos=0 ; 495
ATOM                 ; 496
SEL    500 507       ; 497
LD     0 1          ; var retval ; 498
RTN                  ; 499
LD     0 0          ; branch@500 ; 500
CDR                 ; generateTupleAccess total=2 pos=1 ; 501
ATOM                 ; 502
LDC    1            ; for negation ; 503
SUB                  ; 504
SEL    519 530       ; 505
JOIN                 ; 506
LD     0 0          ; branch@507 ; 507
CAR                 ; generateTupleAccess total=2 pos=0 ; 508
CAR                  ; 509
LD     0 0          ; var q ; 510
CAR                 ; generateTupleAccess total=2 pos=0 ; 511
CDR                  ; 512
LD     0 0          ; var q ; 513
CDR                 ; generateTupleAccess total=2 pos=1 ; 514
CONS                 ; 515
CONS                 ; 516
ST     0 1           ; 517
JOIN                 ; 518
LD     0 0          ; branch@519 ; 519
CDR                 ; generateTupleAccess total=2 pos=1 ; 520
LDF    299          ;  @reverse ; 521
AP     1             ; 522
LDC    0            ; NULL literal ; 523
CONS                 ; 524
LDC 0               ; local var space ; 525
LDF    492          ;  @queue_dequeue ; 526
AP     2             ; 527
ST     0 1           ; 528
JOIN                 ; 529
BRK                 ; branch@530 ; 530
JOIN                 ; 531
LD     0 0          ;  <== length  [ListCons<T> list] (as blk) ; 532
LDC    0            ; just constant from code ; 533
LDF    646          ;  @elements_counter ; 534
AP     2             ; 535
RTN                  ; 536
LD     0 0          ;  <== filter  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 537
LD     0 1          ; var pred ; 538
LDC    0            ; NULL literal ; 539
LDF    609          ;  @filter_acc ; 540
AP     3             ; 541
LDF    299          ;  @reverse ; 542
AP     1             ; 543
RTN                  ; 544
LD     0 0          ;  <== any  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 545
ATOM                 ; 546
SEL    549 551      ; IF? 21 ; 547
RTN                  ; 548
LDC    0            ; THEN: 21 ; 549
JOIN                 ; 550
LD     0 0          ; ELSE: 21 ; 551
CAR                  ; 552
LD     0 1          ; var pred ; 553
AP     1             ; 554
LDC    1            ; just constant from code ; 555
CEQ                  ; 556
SEL    559 561      ; IF? 80 ; 557
JOIN                 ; 558
LDC    1            ; THEN: 80 ; 559
JOIN                 ; 560
LD     0 0          ; ELSE: 80 ; 561
CDR                  ; 562
LD     0 1          ; var pred ; 563
LDF    545          ;  @any ; 564
AP     2             ; 565
JOIN                 ; 566
LD     0 0          ;  <== noneof  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 567
ATOM                 ; 568
SEL    571 573      ; IF? 22 ; 569
RTN                  ; 570
LDC    1            ; THEN: 22 ; 571
JOIN                 ; 572
LD     0 0          ; ELSE: 22 ; 573
CAR                  ; 574
LD     0 1          ; var pred ; 575
AP     1             ; 576
LDC    1            ; just constant from code ; 577
CEQ                  ; 578
SEL    581 583      ; IF? 81 ; 579
JOIN                 ; 580
LDC    0            ; THEN: 81 ; 581
JOIN                 ; 582
LD     0 0          ; ELSE: 81 ; 583
CDR                  ; 584
LD     0 1          ; var pred ; 585
LDF    567          ;  @noneof ; 586
AP     2             ; 587
JOIN                 ; 588
LD     0 0          ;  <== empty  [Cons d] (as blk) ; 589
ATOM                 ; 590
LDC    1            ; for negation ; 591
SUB                  ; 592
SEL    595 597      ; IF? 23 ; 593
RTN                  ; 594
LDC    0            ; THEN: 23 ; 595
JOIN                 ; 596
LDC    1            ; ELSE: 23 ; 597
JOIN                 ; 598
LD     0 0          ;  <== notempty  [Cons d] (as blk) ; 599
ATOM                 ; 600
LDC    1            ; for negation ; 601
SUB                  ; 602
SEL    605 607      ; IF? 24 ; 603
RTN                  ; 604
LDC    1            ; THEN: 24 ; 605
JOIN                 ; 606
LDC    0            ; ELSE: 24 ; 607
JOIN                 ; 608
LD     0 0          ;  <== filter_acc  [ListCons<T> list, Function1<T,Integer> pred, ListCons<T> acc] (as blk) ; 609
ATOM                 ; 610
SEL    613 615      ; IF? 20 ; 611
RTN                  ; 612
LD     0 2          ; THEN: 20 ; 613
JOIN                 ; 614
LD     0 0          ; ELSE: 20 ; 615
CDR                  ; 616
LD     0 1          ; var pred ; 617
LD     0 0          ; var list ; 618
CAR                  ; 619
LD     0 1          ; var pred ; 620
AP     1             ; 621
LDC    1            ; just constant from code ; 622
CEQ                  ; 623
SEL    628 633      ; IF? 82 ; 624
LDF    609          ;  @filter_acc ; 625
AP     3             ; 626
JOIN                 ; 627
LD     0 0          ; THEN: 82 ; 628
CAR                  ; 629
LD     0 2          ; var acc ; 630
CONS                 ; 631
JOIN                 ; 632
LD     0 2          ; ELSE: 82 ; 633
JOIN                 ; 634
LD     0 0          ;  <== map_height  [Cons map] (as blk) ; 635
LDC    0            ; just constant from code ; 636
LDF    646          ;  @elements_counter ; 637
AP     2             ; 638
RTN                  ; 639
LD     0 0          ;  <== map_width  [Cons map] (as blk) ; 640
CAR                  ; 641
LDC    0            ; just constant from code ; 642
LDF    646          ;  @elements_counter ; 643
AP     2             ; 644
RTN                  ; 645
LD     0 0          ;  <== elements_counter  [Cons list, int counter] (as blk) ; 646
ATOM                 ; 647
SEL    650 652      ; IF? 19 ; 648
RTN                  ; 649
LD     0 1          ; THEN: 19 ; 650
JOIN                 ; 651
LD     0 0          ; ELSE: 19 ; 652
CDR                  ; 653
LD     0 1          ; var counter ; 654
LDC    1            ; just constant from code ; 655
ADD                  ; 656
LDF    646          ;  @elements_counter ; 657
AP     2             ; 658
JOIN                 ; 659
LD     0 1          ;  <== zip_with  [Function2<A,B,C> f, ListCons<A> x, ListCons<B> y] (as blk) ; 660
ATOM                 ; 661
SEL    664 666      ; IF? 25 ; 662
RTN                  ; 663
LDC    0            ; THEN: 25 ; 664
JOIN                 ; 665
LD     0 2          ; ELSE: 25 ; 666
ATOM                 ; 667
SEL    670 672      ; IF? 83 ; 668
JOIN                 ; 669
LDC    0            ; THEN: 83 ; 670
JOIN                 ; 671
LD     0 1          ; ELSE: 83 ; 672
CAR                  ; 673
LD     0 2          ; var y ; 674
CAR                  ; 675
LD     0 0          ; var f ; 676
AP     2             ; 677
LD     0 0          ; var f ; 678
LD     0 1          ; var x ; 679
CDR                  ; 680
LD     0 2          ; var y ; 681
CDR                  ; 682
LDF    660          ;  @zip_with ; 683
AP     3             ; 684
CONS                 ; 685
JOIN                 ; 686
LD     0 1          ;  <== zip3_with  [Function3<A,B,C,R> f, ListCons<A> x, ListCons<B> y, ListCons<C> z] (as blk) ; 687
ATOM                 ; 688
SEL    691 693      ; IF? 26 ; 689
RTN                  ; 690
LDC    0            ; THEN: 26 ; 691
JOIN                 ; 692
LD     0 2          ; ELSE: 26 ; 693
ATOM                 ; 694
SEL    697 699      ; IF? 84 ; 695
JOIN                 ; 696
LDC    0            ; THEN: 84 ; 697
JOIN                 ; 698
LD     0 3          ; ELSE: 84 ; 699
ATOM                 ; 700
SEL    703 705      ; IF? 85 ; 701
JOIN                 ; 702
LDC    0            ; THEN: 85 ; 703
JOIN                 ; 704
LD     0 1          ; ELSE: 85 ; 705
CAR                  ; 706
LD     0 2          ; var y ; 707
CAR                  ; 708
LD     0 3          ; var z ; 709
CAR                  ; 710
LD     0 0          ; var f ; 711
AP     3             ; 712
LD     0 0          ; var f ; 713
LD     0 1          ; var x ; 714
CDR                  ; 715
LD     0 2          ; var y ; 716
CDR                  ; 717
LD     0 3          ; var z ; 718
CDR                  ; 719
LDF    687          ;  @zip3_with ; 720
AP     4             ; 721
CONS                 ; 722
JOIN                 ; 723
LD     0 0          ;  <== zip  [final ListCons<A> x, final ListCons<B> y] (as blk) ; 724
ATOM                 ; 725
SEL    728 730      ; IF? 27 ; 726
RTN                  ; 727
LDC    0            ; THEN: 27 ; 728
JOIN                 ; 729
LD     0 1          ; ELSE: 27 ; 730
ATOM                 ; 731
SEL    734 736      ; IF? 86 ; 732
JOIN                 ; 733
LDC    0            ; THEN: 86 ; 734
JOIN                 ; 735
LD     0 0          ; ELSE: 86 ; 736
CAR                  ; 737
LD     0 1          ; var y ; 738
CAR                  ; 739
CONS                 ; 740
LD     0 0          ; var x ; 741
CDR                  ; 742
LD     0 1          ; var y ; 743
CDR                  ; 744
LDF    724          ;  @zip ; 745
AP     2             ; 746
CONS                 ; 747
JOIN                 ; 748
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 749
LD     0 0          ; var f ; 750
AP     1             ; 751
CAR                  ; 752
ST     0 3           ; 753
LD     0 2          ; var n ; 754
LDC    0            ; just constant from code ; 755
CEQ                  ; 756
SEL    759 763      ; IF? 28 ; 757
RTN                  ; 758
LD     0 3          ; THEN: 28 ; 759
LDC    0            ; NULL literal ; 760
CONS                 ; 761
JOIN                 ; 762
LD     0 3          ; ELSE: 28 ; 763
LD     0 0          ; var f ; 764
LD     0 1          ; var a ; 765
LD     0 0          ; var f ; 766
AP     1             ; 767
CDR                  ; 768
LD     0 2          ; var n ; 769
LDC    1            ; just constant from code ; 770
SUB                  ; 771
LDC 0               ; local var space ; 772
LDF    749          ;  @produce_n ; 773
AP     4             ; 774
CONS                 ; 775
JOIN                 ; 776
LD     0 0          ;  <== range_n  [int n] (as blk) ; 777
LDC    0            ; just constant from code ; 778
CEQ                  ; 779
SEL    782 786      ; IF? 29 ; 780
RTN                  ; 781
LD     0 0          ; THEN: 29 ; 782
LDC    0            ; NULL literal ; 783
CONS                 ; 784
JOIN                 ; 785
LD     0 0          ; ELSE: 29 ; 786
LD     0 0          ; var n ; 787
LDC    1            ; just constant from code ; 788
SUB                  ; 789
LDF    777          ;  @range_n ; 790
AP     1             ; 791
CONS                 ; 792
JOIN                 ; 793
LDC    1            ;  <== sorted_node_new  [int key, T val, int lev, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 794
LD     0 3          ; var lo ; 795
ATOM                 ; 796
LDC    1            ; for negation ; 797
SUB                  ; 798
SEL    818 821      ; IF? 30 ; 799
ADD                  ; 800
LD     0 4          ; var hi ; 801
ATOM                 ; 802
LDC    1            ; for negation ; 803
SUB                  ; 804
SEL    823 826      ; IF? 31 ; 805
ADD                  ; 806
LD     0 0          ; var key ; 807
LD     0 1          ; var val ; 808
LD     0 2          ; var lev ; 809
LD     0 3          ; var lo ; 810
LD     0 4          ; var hi ; 811
CONS                 ; 812
CONS                 ; 813
CONS                 ; 814
CONS                 ; 815
CONS                 ; 816
RTN                  ; 817
LD     0 3          ; THEN: 30 ; 818
CAR                 ; generateTupleAccess total=6 pos=0 ; 819
JOIN                 ; 820
LDC    0            ; ELSE: 30 ; 821
JOIN                 ; 822
LD     0 4          ; THEN: 31 ; 823
CAR                 ; generateTupleAccess total=6 pos=0 ; 824
JOIN                 ; 825
LDC    0            ; ELSE: 31 ; 826
JOIN                 ; 827
LD     0 0          ;  <== sorted_node_with_lev  [SortedMapNode<T> node, int lev] (as blk) ; 828
CDR                 ; generateTupleAccess total=6 pos=1 ; 829
CAR                  ; 830
LD     0 0          ; var node ; 831
CDR                 ; generateTupleAccess total=6 pos=2 ; 832
CDR                  ; 833
CAR                  ; 834
LD     0 1          ; var lev ; 835
LD     0 0          ; var node ; 836
CDR                 ; generateTupleAccess total=6 pos=4 ; 837
CDR                  ; 838
CDR                  ; 839
CDR                  ; 840
CAR                  ; 841
LD     0 0          ; var node ; 842
CDR                 ; generateTupleAccess total=6 pos=5 ; 843
CDR                  ; 844
CDR                  ; 845
CDR                  ; 846
CDR                  ; 847
LDF    794          ;  @sorted_node_new ; 848
AP     5             ; 849
RTN                  ; 850
LD     0 0          ;  <== sorted_node_with_lo_hi  [SortedMapNode<T> node, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 851
CDR                 ; generateTupleAccess total=6 pos=1 ; 852
CAR                  ; 853
LD     0 0          ; var node ; 854
CDR                 ; generateTupleAccess total=6 pos=2 ; 855
CDR                  ; 856
CAR                  ; 857
LD     0 0          ; var node ; 858
CDR                 ; generateTupleAccess total=6 pos=3 ; 859
CDR                  ; 860
CDR                  ; 861
CAR                  ; 862
LD     0 1          ; var lo ; 863
LD     0 2          ; var hi ; 864
LDF    794          ;  @sorted_node_new ; 865
AP     5             ; 866
RTN                  ; 867
LD     0 0          ;  <== sorted_node_with_lo  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 868
LD     0 1          ; var lo ; 869
LD     0 0          ; var node ; 870
CDR                 ; generateTupleAccess total=6 pos=5 ; 871
CDR                  ; 872
CDR                  ; 873
CDR                  ; 874
CDR                  ; 875
LDF    851          ;  @sorted_node_with_lo_hi ; 876
AP     3             ; 877
RTN                  ; 878
LD     0 0          ;  <== sorted_node_with_hi  [SortedMapNode<T> node, SortedMapNode<T> hi] (as blk) ; 879
LD     0 0          ; var node ; 880
CDR                 ; generateTupleAccess total=6 pos=4 ; 881
CDR                  ; 882
CDR                  ; 883
CDR                  ; 884
CAR                  ; 885
LD     0 1          ; var hi ; 886
LDF    851          ;  @sorted_node_with_lo_hi ; 887
AP     3             ; 888
RTN                  ; 889
LD     0 0          ;  <== sorted_node_has  [SortedMapNode<T> node, int key] (as blk) ; 890
ATOM                 ; 891
SEL    894 896      ; IF? 32 ; 892
RTN                  ; 893
LDC    0            ; THEN: 32 ; 894
JOIN                 ; 895
LD     0 1          ; ELSE: 32 ; 896
LD     0 0          ; var node ; 897
CDR                 ; generateTupleAccess total=6 pos=1 ; 898
CAR                  ; 899
CEQ                  ; 900
SEL    903 905      ; IF? 87 ; 901
JOIN                 ; 902
LDC    1            ; THEN: 87 ; 903
JOIN                 ; 904
LD     0 0          ; ELSE: 87 ; 905
CDR                 ; generateTupleAccess total=6 pos=1 ; 906
CAR                  ; 907
LD     0 1          ; var key ; 908
CGT                  ; 909
SEL    915 922      ; IF? 88 ; 910
LD     0 1          ; var key ; 911
LDF    890          ;  @sorted_node_has ; 912
AP     2             ; 913
JOIN                 ; 914
LD     0 0          ; THEN: 88 ; 915
CDR                 ; generateTupleAccess total=6 pos=4 ; 916
CDR                  ; 917
CDR                  ; 918
CDR                  ; 919
CAR                  ; 920
JOIN                 ; 921
LD     0 0          ; ELSE: 88 ; 922
CDR                 ; generateTupleAccess total=6 pos=5 ; 923
CDR                  ; 924
CDR                  ; 925
CDR                  ; 926
CDR                  ; 927
JOIN                 ; 928
LD     0 0          ;  <== sorted_node_get  [SortedMapNode<T> node, int key, T def] (as blk) ; 929
ATOM                 ; 930
SEL    933 935      ; IF? 33 ; 931
RTN                  ; 932
LD     0 2          ; THEN: 33 ; 933
JOIN                 ; 934
LD     0 1          ; ELSE: 33 ; 935
LD     0 0          ; var node ; 936
CDR                 ; generateTupleAccess total=6 pos=1 ; 937
CAR                  ; 938
CEQ                  ; 939
SEL    942 947      ; IF? 89 ; 940
JOIN                 ; 941
LD     0 0          ; THEN: 89 ; 942
CDR                 ; generateTupleAccess total=6 pos=2 ; 943
CDR                  ; 944
CAR                  ; 945
JOIN                 ; 946
LD     0 0          ; ELSE: 89 ; 947
CDR                 ; generateTupleAccess total=6 pos=1 ; 948
CAR                  ; 949
LD     0 1          ; var key ; 950
CGT                  ; 951
SEL    958 965      ; IF? 90 ; 952
LD     0 1          ; var key ; 953
LD     0 2          ; var def ; 954
LDF    929          ;  @sorted_node_get ; 955
AP     3             ; 956
JOIN                 ; 957
LD     0 0          ; THEN: 90 ; 958
CDR                 ; generateTupleAccess total=6 pos=4 ; 959
CDR                  ; 960
CDR                  ; 961
CDR                  ; 962
CAR                  ; 963
JOIN                 ; 964
LD     0 0          ; ELSE: 90 ; 965
CDR                 ; generateTupleAccess total=6 pos=5 ; 966
CDR                  ; 967
CDR                  ; 968
CDR                  ; 969
CDR                  ; 970
JOIN                 ; 971
LD     0 0          ;  <== sorted_node_put  [SortedMapNode<T> node, int key, T val] (as blk) ; 972
ATOM                 ; 973
SEL    976 984      ; IF? 34 ; 974
RTN                  ; 975
LD     0 1          ; THEN: 34 ; 976
LD     0 2          ; var val ; 977
LDC    0            ; just constant from code ; 978
LDC    0            ; NULL literal ; 979
LDC    0            ; NULL literal ; 980
LDF    794          ;  @sorted_node_new ; 981
AP     5             ; 982
JOIN                 ; 983
LD     0 1          ; ELSE: 34 ; 984
LD     0 0          ; var node ; 985
CDR                 ; generateTupleAccess total=6 pos=1 ; 986
CAR                  ; 987
CEQ                  ; 988
SEL    991 999      ; IF? 91 ; 989
JOIN                 ; 990
LD     0 2          ; THEN: 91 ; 991
LD     0 0          ; var node ; 992
CDR                 ; generateTupleAccess total=6 pos=2 ; 993
CDR                  ; 994
CAR                  ; 995
CEQ                  ; 996
SEL    1009 1011    ; IF? 92 ; 997
JOIN                 ; 998
LD     0 0          ; ELSE: 91 ; 999
CDR                 ; generateTupleAccess total=6 pos=1 ; 1000
CAR                  ; 1001
LD     0 1          ; var key ; 1002
CGT                  ; 1003
SEL    1033 1048    ; IF? 93 ; 1004
LDC 0               ; local var space ; 1005
LDF    1120         ;  @sorted_node_split ; 1006
AP     2             ; 1007
JOIN                 ; 1008
LD     0 0          ; THEN: 92 ; 1009
JOIN                 ; 1010
LD     0 1          ; ELSE: 92 ; 1011
LD     0 2          ; var val ; 1012
LD     0 0          ; var node ; 1013
CDR                 ; generateTupleAccess total=6 pos=3 ; 1014
CDR                  ; 1015
CDR                  ; 1016
CAR                  ; 1017
LD     0 0          ; var node ; 1018
CDR                 ; generateTupleAccess total=6 pos=4 ; 1019
CDR                  ; 1020
CDR                  ; 1021
CDR                  ; 1022
CAR                  ; 1023
LD     0 0          ; var node ; 1024
CDR                 ; generateTupleAccess total=6 pos=5 ; 1025
CDR                  ; 1026
CDR                  ; 1027
CDR                  ; 1028
CDR                  ; 1029
LDF    794          ;  @sorted_node_new ; 1030
AP     5             ; 1031
JOIN                 ; 1032
LD     0 0          ; THEN: 93 ; 1033
LD     0 0          ; var node ; 1034
CDR                 ; generateTupleAccess total=6 pos=4 ; 1035
CDR                  ; 1036
CDR                  ; 1037
CDR                  ; 1038
CAR                  ; 1039
LD     0 1          ; var key ; 1040
LD     0 2          ; var val ; 1041
LDF    972          ;  @sorted_node_put ; 1042
AP     3             ; 1043
LDC 0               ; local var space ; 1044
LDF    1066         ;  @sorted_node_skew ; 1045
AP     3             ; 1046
JOIN                 ; 1047
LD     0 0          ; ELSE: 93 ; 1048
LD     0 0          ; var node ; 1049
CDR                 ; generateTupleAccess total=6 pos=5 ; 1050
CDR                  ; 1051
CDR                  ; 1052
CDR                  ; 1053
CDR                  ; 1054
LD     0 1          ; var key ; 1055
LD     0 2          ; var val ; 1056
LDF    972          ;  @sorted_node_put ; 1057
AP     3             ; 1058
LDF    879          ;  @sorted_node_with_hi ; 1059
AP     2             ; 1060
LDC    0            ; NULL literal ; 1061
LDC 0               ; local var space ; 1062
LDF    1066         ;  @sorted_node_skew ; 1063
AP     3             ; 1064
JOIN                 ; 1065
LD     0 1          ;  <== sorted_node_skew  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 1066
ATOM                 ; 1067
LDC    1            ; for negation ; 1068
SUB                  ; 1069
SEL    1081 1083    ; IF? 35 ; 1070
ST     0 1           ; 1071
LD     0 0          ; var node ; 1072
LD     0 1          ; var lo ; 1073
LDF    868          ;  @sorted_node_with_lo ; 1074
AP     2             ; 1075
ST     0 2           ; 1076
LD     0 1          ; var lo ; 1077
ATOM                 ; 1078
SEL    1090 1092    ; IF? 36 ; 1079
RTN                  ; 1080
LD     0 1          ; THEN: 35 ; 1081
JOIN                 ; 1082
LD     0 0          ; ELSE: 35 ; 1083
CDR                 ; generateTupleAccess total=6 pos=4 ; 1084
CDR                  ; 1085
CDR                  ; 1086
CDR                  ; 1087
CAR                  ; 1088
JOIN                 ; 1089
LD     0 2          ; THEN: 36 ; 1090
JOIN                 ; 1091
LD     0 0          ; ELSE: 36 ; 1092
CDR                 ; generateTupleAccess total=6 pos=3 ; 1093
CDR                  ; 1094
CDR                  ; 1095
CAR                  ; 1096
LD     0 1          ; var lo ; 1097
CDR                 ; generateTupleAccess total=6 pos=3 ; 1098
CDR                  ; 1099
CDR                  ; 1100
CAR                  ; 1101
CGT                  ; 1102
SEL    1105 1107    ; IF? 94 ; 1103
JOIN                 ; 1104
LD     0 2          ; THEN: 94 ; 1105
JOIN                 ; 1106
LD     0 1          ; ELSE: 94 ; 1107
LD     0 0          ; var node ; 1108
LD     0 1          ; var lo ; 1109
CDR                 ; generateTupleAccess total=6 pos=5 ; 1110
CDR                  ; 1111
CDR                  ; 1112
CDR                  ; 1113
CDR                  ; 1114
LDF    868          ;  @sorted_node_with_lo ; 1115
AP     2             ; 1116
LDF    879          ;  @sorted_node_with_hi ; 1117
AP     2             ; 1118
JOIN                 ; 1119
LD     0 0          ;  <== sorted_node_split  [SortedMapNode<T> node] (as blk) ; 1120
CDR                 ; generateTupleAccess total=6 pos=5 ; 1121
CDR                  ; 1122
CDR                  ; 1123
CDR                  ; 1124
CDR                  ; 1125
ST     0 1           ; 1126
LD     0 1          ; var hi ; 1127
ATOM                 ; 1128
SEL    1131 1133    ; IF? 37 ; 1129
RTN                  ; 1130
LD     0 0          ; THEN: 37 ; 1131
JOIN                 ; 1132
LD     0 1          ; ELSE: 37 ; 1133
CDR                 ; generateTupleAccess total=6 pos=5 ; 1134
CDR                  ; 1135
CDR                  ; 1136
CDR                  ; 1137
CDR                  ; 1138
ATOM                 ; 1139
SEL    1142 1144    ; IF? 95 ; 1140
JOIN                 ; 1141
LD     0 0          ; THEN: 95 ; 1142
JOIN                 ; 1143
LD     0 0          ; ELSE: 95 ; 1144
CDR                 ; generateTupleAccess total=6 pos=3 ; 1145
CDR                  ; 1146
CDR                  ; 1147
CAR                  ; 1148
LD     0 1          ; var hi ; 1149
CDR                 ; generateTupleAccess total=6 pos=5 ; 1150
CDR                  ; 1151
CDR                  ; 1152
CDR                  ; 1153
CDR                  ; 1154
CDR                 ; generateTupleAccess total=6 pos=3 ; 1155
CDR                  ; 1156
CDR                  ; 1157
CAR                  ; 1158
CGT                  ; 1159
SEL    1162 1164    ; IF? 96 ; 1160
JOIN                 ; 1161
LD     0 0          ; THEN: 96 ; 1162
JOIN                 ; 1163
LD     0 1          ; ELSE: 96 ; 1164
CDR                 ; generateTupleAccess total=6 pos=1 ; 1165
CAR                  ; 1166
LD     0 1          ; var hi ; 1167
CDR                 ; generateTupleAccess total=6 pos=2 ; 1168
CDR                  ; 1169
CAR                  ; 1170
LD     0 1          ; var hi ; 1171
CDR                 ; generateTupleAccess total=6 pos=3 ; 1172
CDR                  ; 1173
CDR                  ; 1174
CAR                  ; 1175
LDC    1            ; just constant from code ; 1176
ADD                  ; 1177
LD     0 0          ; var node ; 1178
LD     0 1          ; var hi ; 1179
CDR                 ; generateTupleAccess total=6 pos=4 ; 1180
CDR                  ; 1181
CDR                  ; 1182
CDR                  ; 1183
CAR                  ; 1184
LDF    879          ;  @sorted_node_with_hi ; 1185
AP     2             ; 1186
LD     0 1          ; var hi ; 1187
CDR                 ; generateTupleAccess total=6 pos=5 ; 1188
CDR                  ; 1189
CDR                  ; 1190
CDR                  ; 1191
CDR                  ; 1192
LDF    794          ;  @sorted_node_new ; 1193
AP     5             ; 1194
JOIN                 ; 1195
LD     0 0          ;  <== sorted_node_walk  [SortedMapNode<T> node, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) ; 1196
ATOM                 ; 1197
SEL    1200 1202    ; IF? 38 ; 1198
RTN                  ; 1199
LD     0 1          ; THEN: 38 ; 1200
JOIN                 ; 1201
LD     0 0          ; ELSE: 38 ; 1202
CDR                 ; generateTupleAccess total=6 pos=5 ; 1203
CDR                  ; 1204
CDR                  ; 1205
CDR                  ; 1206
CDR                  ; 1207
ATOM                 ; 1208
LDC    1            ; for negation ; 1209
SUB                  ; 1210
SEL    1213 1243    ; IF? 97 ; 1211
JOIN                 ; 1212
LD     0 0          ; THEN: 97 ; 1213
CDR                 ; generateTupleAccess total=6 pos=5 ; 1214
CDR                  ; 1215
CDR                  ; 1216
CDR                  ; 1217
CDR                  ; 1218
LD     0 0          ; var node ; 1219
CDR                 ; generateTupleAccess total=6 pos=4 ; 1220
CDR                  ; 1221
CDR                  ; 1222
CDR                  ; 1223
CAR                  ; 1224
LD     0 1          ; var acc ; 1225
LD     0 2          ; var fun ; 1226
LDF    1196         ;  @sorted_node_walk ; 1227
AP     3             ; 1228
LD     0 0          ; var node ; 1229
CDR                 ; generateTupleAccess total=6 pos=1 ; 1230
CAR                  ; 1231
LD     0 0          ; var node ; 1232
CDR                 ; generateTupleAccess total=6 pos=2 ; 1233
CDR                  ; 1234
CAR                  ; 1235
CONS                 ; 1236
LD     0 2          ; var fun ; 1237
AP     2             ; 1238
LD     0 2          ; var fun ; 1239
LDF    1196         ;  @sorted_node_walk ; 1240
AP     3             ; 1241
JOIN                 ; 1242
LD     0 0          ; ELSE: 97 ; 1243
CDR                 ; generateTupleAccess total=6 pos=4 ; 1244
CDR                  ; 1245
CDR                  ; 1246
CDR                  ; 1247
CAR                  ; 1248
LD     0 1          ; var acc ; 1249
LD     0 2          ; var fun ; 1250
LDF    1196         ;  @sorted_node_walk ; 1251
AP     3             ; 1252
LD     0 0          ; var node ; 1253
CDR                 ; generateTupleAccess total=6 pos=1 ; 1254
CAR                  ; 1255
LD     0 0          ; var node ; 1256
CDR                 ; generateTupleAccess total=6 pos=2 ; 1257
CDR                  ; 1258
CAR                  ; 1259
CONS                 ; 1260
LD     0 2          ; var fun ; 1261
AP     2             ; 1262
JOIN                 ; 1263
LD     0 0          ;  <== sorted_map_count  [SortedMap<T> m] (as blk) ; 1264
CAR                 ; generateTupleAccess total=2 pos=0 ; 1265
ATOM                 ; 1266
LDC    1            ; for negation ; 1267
SUB                  ; 1268
SEL    1271 1275    ; IF? 39 ; 1269
RTN                  ; 1270
LD     0 0          ; THEN: 39 ; 1271
CAR                 ; generateTupleAccess total=2 pos=0 ; 1272
CAR                 ; generateTupleAccess total=6 pos=0 ; 1273
JOIN                 ; 1274
LDC    0            ; ELSE: 39 ; 1275
JOIN                 ; 1276
LD     0 0          ;  <== sorted_map_contains  [SortedMap<T> m, int key] (as blk) ; 1277
CAR                 ; generateTupleAccess total=2 pos=0 ; 1278
ATOM                 ; 1279
LDC    1            ; for negation ; 1280
SUB                  ; 1281
SEL    1284 1290    ; IF? 40 ; 1282
RTN                  ; 1283
LD     0 0          ; THEN: 40 ; 1284
CAR                 ; generateTupleAccess total=2 pos=0 ; 1285
LD     0 1          ; var key ; 1286
LDF    890          ;  @sorted_node_has ; 1287
AP     2             ; 1288
JOIN                 ; 1289
LDC    0            ; ELSE: 40 ; 1290
JOIN                 ; 1291
LD     0 0          ;  <== sorted_map_get  [SortedMap<T> m, int key, T def] (as blk) ; 1292
CAR                 ; generateTupleAccess total=2 pos=0 ; 1293
ATOM                 ; 1294
LDC    1            ; for negation ; 1295
SUB                  ; 1296
SEL    1299 1306    ; IF? 41 ; 1297
RTN                  ; 1298
LD     0 0          ; THEN: 41 ; 1299
CAR                 ; generateTupleAccess total=2 pos=0 ; 1300
LD     0 1          ; var key ; 1301
LD     0 2          ; var def ; 1302
LDF    929          ;  @sorted_node_get ; 1303
AP     3             ; 1304
JOIN                 ; 1305
LD     0 2          ; ELSE: 41 ; 1306
JOIN                 ; 1307
LD     0 0          ;  <== sorted_map_assoc  [SortedMap<T> m, int key, T val] (as blk) ; 1308
CAR                 ; generateTupleAccess total=2 pos=0 ; 1309
LD     0 1          ; var key ; 1310
LD     0 2          ; var val ; 1311
LDF    972          ;  @sorted_node_put ; 1312
AP     3             ; 1313
LDC    0            ; just constant from code ; 1314
CONS                 ; 1315
RTN                  ; 1316
LD     0 1          ;  <== sorted_map_assoc_all  [SortedMap<T> m, ListCons<Tuple<Integer,T>> l] (as blk) ; 1317
LD     0 0          ; var m ; 1318
LDF    9683         ;  @lambda_1003 ; 1319
LDF    386          ;  @fold0 ; 1320
AP     3             ; 1321
RTN                  ; 1322
LD     0 0          ;  <== sorted_map_walk  [SortedMap<T> map, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) ; 1323
CAR                 ; generateTupleAccess total=2 pos=0 ; 1324
ATOM                 ; 1325
SEL    1328 1330    ; IF? 42 ; 1326
RTN                  ; 1327
LD     0 1          ; THEN: 42 ; 1328
JOIN                 ; 1329
LD     0 0          ; ELSE: 42 ; 1330
CAR                 ; generateTupleAccess total=2 pos=0 ; 1331
LD     0 1          ; var acc ; 1332
LD     0 2          ; var fun ; 1333
LDF    1196         ;  @sorted_node_walk ; 1334
AP     3             ; 1335
JOIN                 ; 1336
LD     0 1          ;  <== ghcstate_read_val  [GHCState state, Cons<Integer,Integer> val_cons] (as blk) ; 1337
CAR                  ; 1338
ST     0 2           ; 1339
LD     0 1          ; var val_cons ; 1340
CDR                  ; 1341
ST     0 3           ; 1342
LD     0 2          ; var val_tag ; 1343
LDC    3            ; just constant from code ; 1344
CGT                  ; 1345
SEL    1352 1354     ; 1346
LD     0 2          ; var val_tag ; 1347
LDC    0            ; Named Const = Args.REGISTER ; 1348
CEQ                  ; 1349
SEL    1355 1363    ; IF? 43 ; 1350
RTN                  ; 1351
BRK                 ; branch@1352 ; 1352
JOIN                 ; 1353
JOIN                ; branch@1354 ; 1354
LD     0 0          ; THEN: 43 ; 1355
CDR                 ; generateTupleAccess total=3 pos=1 ; 1356
CAR                  ; 1357
LD     0 3          ; var val ; 1358
LDC    0            ; just constant from code ; 1359
LDF    1292         ;  @sorted_map_get ; 1360
AP     3             ; 1361
JOIN                 ; 1362
LD     0 2          ; ELSE: 43 ; 1363
LDC    1            ; Named Const = Args.REGISTER_INDIRECT ; 1364
CEQ                  ; 1365
SEL    1368 1382    ; IF? 98 ; 1366
JOIN                 ; 1367
LD     0 0          ; THEN: 98 ; 1368
CDR                 ; generateTupleAccess total=3 pos=2 ; 1369
CDR                  ; 1370
LD     0 0          ; var state ; 1371
CDR                 ; generateTupleAccess total=3 pos=1 ; 1372
CAR                  ; 1373
LD     0 3          ; var val ; 1374
LDC    0            ; just constant from code ; 1375
LDF    1292         ;  @sorted_map_get ; 1376
AP     3             ; 1377
LDC    0            ; just constant from code ; 1378
LDF    1292         ;  @sorted_map_get ; 1379
AP     3             ; 1380
JOIN                 ; 1381
LD     0 2          ; ELSE: 98 ; 1382
LDC    2            ; Named Const = Args.CONSTANT ; 1383
CEQ                  ; 1384
SEL    1387 1389    ; IF? 99 ; 1385
JOIN                 ; 1386
LD     0 3          ; THEN: 99 ; 1387
JOIN                 ; 1388
LD     0 0          ; ELSE: 99 ; 1389
CDR                 ; generateTupleAccess total=3 pos=2 ; 1390
CDR                  ; 1391
LD     0 3          ; var val ; 1392
LDC    0            ; just constant from code ; 1393
LDF    1292         ;  @sorted_map_get ; 1394
AP     3             ; 1395
JOIN                 ; 1396
LD     0 1          ;  <== ghcstate_write_val  [GHCState state, Cons arg_cons, Integer val] (as blk) ; 1397
CAR                  ; 1398
ST     0 3           ; 1399
LD     0 3          ; var arg_tag ; 1400
LDC    3            ; just constant from code ; 1401
CGT                  ; 1402
SEL    1413 1415     ; 1403
LD     0 3          ; var arg_tag ; 1404
LDC    2            ; just constant from code ; 1405
CEQ                  ; 1406
SEL    1416 1418     ; 1407
LD     0 3          ; var arg_tag ; 1408
LDC    0            ; just constant from code ; 1409
CEQ                  ; 1410
SEL    1419 1435    ; IF? 44 ; 1411
RTN                  ; 1412
BRK                 ; branch@1413 ; 1413
JOIN                 ; 1414
JOIN                ; branch@1415 ; 1415
BRK                 ; branch@1416 ; 1416
JOIN                 ; 1417
JOIN                ; branch@1418 ; 1418
LD     0 0          ; THEN: 44 ; 1419
CAR                 ; generateTupleAccess total=3 pos=0 ; 1420
LD     0 0          ; var state ; 1421
CDR                 ; generateTupleAccess total=3 pos=1 ; 1422
CAR                  ; 1423
LD     0 1          ; var arg_cons ; 1424
CDR                  ; 1425
LD     0 2          ; var val ; 1426
LDF    1308         ;  @sorted_map_assoc ; 1427
AP     3             ; 1428
LD     0 0          ; var state ; 1429
CDR                 ; generateTupleAccess total=3 pos=2 ; 1430
CDR                  ; 1431
CONS                 ; 1432
CONS                 ; 1433
JOIN                 ; 1434
LD     0 3          ; ELSE: 44 ; 1435
LDC    1            ; just constant from code ; 1436
CEQ                  ; 1437
SEL    1440 1462    ; IF? 100 ; 1438
JOIN                 ; 1439
LD     0 0          ; THEN: 100 ; 1440
CAR                 ; generateTupleAccess total=3 pos=0 ; 1441
LD     0 0          ; var state ; 1442
CDR                 ; generateTupleAccess total=3 pos=1 ; 1443
CAR                  ; 1444
LD     0 0          ; var state ; 1445
CDR                 ; generateTupleAccess total=3 pos=1 ; 1446
CAR                  ; 1447
LD     0 1          ; var arg_cons ; 1448
CDR                  ; 1449
LDC    0            ; just constant from code ; 1450
LDF    1292         ;  @sorted_map_get ; 1451
AP     3             ; 1452
LD     0 2          ; var val ; 1453
LDF    1308         ;  @sorted_map_assoc ; 1454
AP     3             ; 1455
LD     0 0          ; var state ; 1456
CDR                 ; generateTupleAccess total=3 pos=2 ; 1457
CDR                  ; 1458
CONS                 ; 1459
CONS                 ; 1460
JOIN                 ; 1461
LD     0 0          ; ELSE: 100 ; 1462
CAR                 ; generateTupleAccess total=3 pos=0 ; 1463
LD     0 0          ; var state ; 1464
CDR                 ; generateTupleAccess total=3 pos=1 ; 1465
CAR                  ; 1466
LD     0 0          ; var state ; 1467
CDR                 ; generateTupleAccess total=3 pos=2 ; 1468
CDR                  ; 1469
LD     0 1          ; var arg_cons ; 1470
CDR                  ; 1471
LD     0 2          ; var val ; 1472
LDF    1308         ;  @sorted_map_assoc ; 1473
AP     3             ; 1474
CONS                 ; 1475
CONS                 ; 1476
JOIN                 ; 1477
LD     0 0          ;  <== ghcstate_assoc  [GHCState state, Cons arg_cons, Cons val_cons] (as blk) ; 1478
LD     0 2          ; var val_cons ; 1479
LDC 0               ; local var space ; 1480
LDC 0               ; local var space ; 1481
LDF    1337         ;  @ghcstate_read_val ; 1482
AP     4             ; 1483
ST     0 3           ; 1484
LD     0 0          ; var state ; 1485
LD     0 1          ; var arg_cons ; 1486
LD     0 3          ; var val ; 1487
LDC 0               ; local var space ; 1488
LDF    1397         ;  @ghcstate_write_val ; 1489
AP     4             ; 1490
RTN                  ; 1491
LD     0 0          ;  <== processGhostInfoRequest  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer index, int requestType] (as blk) ; 1492
CDR                 ; generateTupleAccess total=4 pos=2 ; 1493
CDR                  ; 1494
CAR                  ; 1495
LD     0 3          ; var index ; 1496
LD     0 1          ; var state ; 1497
CAR                 ; generateTupleAccess total=3 pos=0 ; 1498
LDF    469          ;  @list_item_def ; 1499
AP     3             ; 1500
ST     0 5           ; 1501
LDC    4            ; just constant from code ; 1502
LD     0 4          ; var requestType ; 1503
CEQ                  ; 1504
SEL    1507 1529    ; IF? 45 ; 1505
RTN                  ; 1506
LD     0 5          ; THEN: 45 ; 1507
LD     0 1          ; var state ; 1508
CDR                 ; generateTupleAccess total=3 pos=1 ; 1509
CAR                  ; 1510
LDC    0            ; just constant from code ; 1511
LD     0 2          ; var ghostInfo ; 1512
CAR                 ; generateTupleAccess total=3 pos=0 ; 1513
CAR                 ; generateTupleAccess total=2 pos=0 ; 1514
LDF    1308         ;  @sorted_map_assoc ; 1515
AP     3             ; 1516
LDC    1            ; just constant from code ; 1517
LD     0 2          ; var ghostInfo ; 1518
CAR                 ; generateTupleAccess total=3 pos=0 ; 1519
CDR                 ; generateTupleAccess total=2 pos=1 ; 1520
LDF    1308         ;  @sorted_map_assoc ; 1521
AP     3             ; 1522
LD     0 1          ; var state ; 1523
CDR                 ; generateTupleAccess total=3 pos=2 ; 1524
CDR                  ; 1525
CONS                 ; 1526
CONS                 ; 1527
JOIN                 ; 1528
LDC    5            ; ELSE: 45 ; 1529
LD     0 4          ; var requestType ; 1530
CEQ                  ; 1531
SEL    1534 1558    ; IF? 101 ; 1532
JOIN                 ; 1533
LD     0 5          ; THEN: 101 ; 1534
LD     0 1          ; var state ; 1535
CDR                 ; generateTupleAccess total=3 pos=1 ; 1536
CAR                  ; 1537
LDC    0            ; just constant from code ; 1538
LD     0 5          ; var gs ; 1539
CDR                 ; generateTupleAccess total=3 pos=1 ; 1540
CAR                  ; 1541
CAR                 ; generateTupleAccess total=2 pos=0 ; 1542
LDF    1308         ;  @sorted_map_assoc ; 1543
AP     3             ; 1544
LDC    1            ; just constant from code ; 1545
LD     0 5          ; var gs ; 1546
CDR                 ; generateTupleAccess total=3 pos=1 ; 1547
CAR                  ; 1548
CDR                 ; generateTupleAccess total=2 pos=1 ; 1549
LDF    1308         ;  @sorted_map_assoc ; 1550
AP     3             ; 1551
LD     0 1          ; var state ; 1552
CDR                 ; generateTupleAccess total=3 pos=2 ; 1553
CDR                  ; 1554
CONS                 ; 1555
CONS                 ; 1556
JOIN                 ; 1557
LD     0 5          ; ELSE: 101 ; 1558
LD     0 1          ; var state ; 1559
CDR                 ; generateTupleAccess total=3 pos=1 ; 1560
CAR                  ; 1561
LDC    0            ; just constant from code ; 1562
LD     0 5          ; var gs ; 1563
CAR                 ; generateTupleAccess total=3 pos=0 ; 1564
LDF    1308         ;  @sorted_map_assoc ; 1565
AP     3             ; 1566
LDC    1            ; just constant from code ; 1567
LD     0 5          ; var gs ; 1568
CDR                 ; generateTupleAccess total=3 pos=2 ; 1569
CDR                  ; 1570
LDF    1308         ;  @sorted_map_assoc ; 1571
AP     3             ; 1572
LD     0 1          ; var state ; 1573
CDR                 ; generateTupleAccess total=3 pos=2 ; 1574
CDR                  ; 1575
CONS                 ; 1576
CONS                 ; 1577
JOIN                 ; 1578
LD     0 1          ;  <== processGhostInt  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer num, Cons arg] (as blk) ; 1579
CAR                 ; generateTupleAccess total=3 pos=0 ; 1580
ST     0 5           ; 1581
LD     0 2          ; var ghostInfo ; 1582
CDR                 ; generateTupleAccess total=3 pos=2 ; 1583
CDR                  ; 1584
ST     0 6           ; 1585
LDC    0            ; just constant from code ; 1586
LD     0 3          ; var num ; 1587
CEQ                  ; 1588
SEL    1591 1614    ; IF? 46 ; 1589
RTN                  ; 1590
LD     0 5          ; THEN: 46 ; 1591
CAR                 ; generateTupleAccess total=3 pos=0 ; 1592
LD     0 5          ; var gs ; 1593
CDR                 ; generateTupleAccess total=3 pos=1 ; 1594
CAR                  ; 1595
LD     0 1          ; var state ; 1596
CDR                 ; generateTupleAccess total=3 pos=1 ; 1597
CAR                  ; 1598
LDC    0            ; just constant from code ; 1599
LDC    0            ; just constant from code ; 1600
LDF    1292         ;  @sorted_map_get ; 1601
AP     3             ; 1602
CONS                 ; 1603
CONS                 ; 1604
LD     0 1          ; var state ; 1605
CDR                 ; generateTupleAccess total=3 pos=1 ; 1606
CAR                  ; 1607
LD     0 1          ; var state ; 1608
CDR                 ; generateTupleAccess total=3 pos=2 ; 1609
CDR                  ; 1610
CONS                 ; 1611
CONS                 ; 1612
JOIN                 ; 1613
LDC    1            ; ELSE: 46 ; 1614
LD     0 3          ; var num ; 1615
CEQ                  ; 1616
SEL    1619 1647    ; IF? 102 ; 1617
JOIN                 ; 1618
LD     0 5          ; THEN: 102 ; 1619
LD     0 1          ; var state ; 1620
CDR                 ; generateTupleAccess total=3 pos=1 ; 1621
CAR                  ; 1622
LDC    0            ; just constant from code ; 1623
LD     0 0          ; var world ; 1624
CDR                 ; generateTupleAccess total=4 pos=1 ; 1625
CAR                  ; 1626
CDR                 ; generateTupleAccess total=5 pos=1 ; 1627
CAR                  ; 1628
CAR                 ; generateTupleAccess total=2 pos=0 ; 1629
LDF    1308         ;  @sorted_map_assoc ; 1630
AP     3             ; 1631
LDC    1            ; just constant from code ; 1632
LD     0 0          ; var world ; 1633
CDR                 ; generateTupleAccess total=4 pos=1 ; 1634
CAR                  ; 1635
CDR                 ; generateTupleAccess total=5 pos=1 ; 1636
CAR                  ; 1637
CDR                 ; generateTupleAccess total=2 pos=1 ; 1638
LDF    1308         ;  @sorted_map_assoc ; 1639
AP     3             ; 1640
LD     0 1          ; var state ; 1641
CDR                 ; generateTupleAccess total=3 pos=2 ; 1642
CDR                  ; 1643
CONS                 ; 1644
CONS                 ; 1645
JOIN                 ; 1646
LDC    2            ; ELSE: 102 ; 1647
LD     0 3          ; var num ; 1648
CEQ                  ; 1649
SEL    1652 1680    ; IF? 103 ; 1650
JOIN                 ; 1651
LD     0 5          ; THEN: 103 ; 1652
LD     0 1          ; var state ; 1653
CDR                 ; generateTupleAccess total=3 pos=1 ; 1654
CAR                  ; 1655
LDC    0            ; just constant from code ; 1656
LD     0 0          ; var world ; 1657
CDR                 ; generateTupleAccess total=4 pos=1 ; 1658
CAR                  ; 1659
CDR                 ; generateTupleAccess total=5 pos=1 ; 1660
CAR                  ; 1661
CAR                 ; generateTupleAccess total=2 pos=0 ; 1662
LDF    1308         ;  @sorted_map_assoc ; 1663
AP     3             ; 1664
LDC    1            ; just constant from code ; 1665
LD     0 0          ; var world ; 1666
CDR                 ; generateTupleAccess total=4 pos=1 ; 1667
CAR                  ; 1668
CDR                 ; generateTupleAccess total=5 pos=1 ; 1669
CAR                  ; 1670
CDR                 ; generateTupleAccess total=2 pos=1 ; 1671
LDF    1308         ;  @sorted_map_assoc ; 1672
AP     3             ; 1673
LD     0 1          ; var state ; 1674
CDR                 ; generateTupleAccess total=3 pos=2 ; 1675
CDR                  ; 1676
CONS                 ; 1677
CONS                 ; 1678
JOIN                 ; 1679
LDC    3            ; ELSE: 103 ; 1680
LD     0 3          ; var num ; 1681
CEQ                  ; 1682
SEL    1685 1699    ; IF? 104 ; 1683
JOIN                 ; 1684
LD     0 5          ; THEN: 104 ; 1685
LD     0 1          ; var state ; 1686
CDR                 ; generateTupleAccess total=3 pos=1 ; 1687
CAR                  ; 1688
LDC    0            ; just constant from code ; 1689
LD     0 6          ; var currentGhostIndex ; 1690
LDF    1308         ;  @sorted_map_assoc ; 1691
AP     3             ; 1692
LD     0 1          ; var state ; 1693
CDR                 ; generateTupleAccess total=3 pos=2 ; 1694
CDR                  ; 1695
CONS                 ; 1696
CONS                 ; 1697
JOIN                 ; 1698
LDC    4            ; ELSE: 104 ; 1699
LD     0 3          ; var num ; 1700
CEQ                  ; 1701
SEL    1704 1719    ; IF? 105 ; 1702
JOIN                 ; 1703
LD     0 0          ; THEN: 105 ; 1704
LD     0 1          ; var state ; 1705
LD     0 2          ; var ghostInfo ; 1706
LD     0 1          ; var state ; 1707
CDR                 ; generateTupleAccess total=3 pos=1 ; 1708
CAR                  ; 1709
LDC    0            ; just constant from code ; 1710
LDC    0            ; just constant from code ; 1711
LDF    1292         ;  @sorted_map_get ; 1712
AP     3             ; 1713
LDC    4            ; just constant from code ; 1714
LDC 0               ; local var space ; 1715
LDF    1492         ;  @processGhostInfoRequest ; 1716
AP     6             ; 1717
JOIN                 ; 1718
LDC    5            ; ELSE: 105 ; 1719
LD     0 3          ; var num ; 1720
CEQ                  ; 1721
SEL    1724 1739    ; IF? 106 ; 1722
JOIN                 ; 1723
LD     0 0          ; THEN: 106 ; 1724
LD     0 1          ; var state ; 1725
LD     0 2          ; var ghostInfo ; 1726
LD     0 1          ; var state ; 1727
CDR                 ; generateTupleAccess total=3 pos=1 ; 1728
CAR                  ; 1729
LDC    0            ; just constant from code ; 1730
LDC    0            ; just constant from code ; 1731
LDF    1292         ;  @sorted_map_get ; 1732
AP     3             ; 1733
LDC    5            ; just constant from code ; 1734
LDC 0               ; local var space ; 1735
LDF    1492         ;  @processGhostInfoRequest ; 1736
AP     6             ; 1737
JOIN                 ; 1738
LDC    6            ; ELSE: 106 ; 1739
LD     0 3          ; var num ; 1740
CEQ                  ; 1741
SEL    1744 1759    ; IF? 107 ; 1742
JOIN                 ; 1743
LD     0 0          ; THEN: 107 ; 1744
LD     0 1          ; var state ; 1745
LD     0 2          ; var ghostInfo ; 1746
LD     0 1          ; var state ; 1747
CDR                 ; generateTupleAccess total=3 pos=1 ; 1748
CAR                  ; 1749
LDC    0            ; just constant from code ; 1750
LDC    0            ; just constant from code ; 1751
LDF    1292         ;  @sorted_map_get ; 1752
AP     3             ; 1753
LDC    6            ; just constant from code ; 1754
LDC 0               ; local var space ; 1755
LDF    1492         ;  @processGhostInfoRequest ; 1756
AP     6             ; 1757
JOIN                 ; 1758
LDC    7            ; ELSE: 107 ; 1759
LD     0 3          ; var num ; 1760
CEQ                  ; 1761
SEL    1764 1795    ; IF? 108 ; 1762
JOIN                 ; 1763
LD     0 5          ; THEN: 108 ; 1764
LD     0 1          ; var state ; 1765
CDR                 ; generateTupleAccess total=3 pos=1 ; 1766
CAR                  ; 1767
LDC    0            ; just constant from code ; 1768
LD     0 0          ; var world ; 1769
CAR                 ; generateTupleAccess total=4 pos=0 ; 1770
LD     0 1          ; var state ; 1771
CDR                 ; generateTupleAccess total=3 pos=1 ; 1772
CAR                  ; 1773
LDC    0            ; just constant from code ; 1774
LDC    0            ; just constant from code ; 1775
LDF    1292         ;  @sorted_map_get ; 1776
AP     3             ; 1777
LD     0 1          ; var state ; 1778
CDR                 ; generateTupleAccess total=3 pos=1 ; 1779
CAR                  ; 1780
LDC    1            ; just constant from code ; 1781
LDC    0            ; just constant from code ; 1782
LDF    1292         ;  @sorted_map_get ; 1783
AP     3             ; 1784
LDF    3664         ;  @getMapItem ; 1785
AP     3             ; 1786
LDF    1308         ;  @sorted_map_assoc ; 1787
AP     3             ; 1788
LD     0 1          ; var state ; 1789
CDR                 ; generateTupleAccess total=3 pos=2 ; 1790
CDR                  ; 1791
CONS                 ; 1792
CONS                 ; 1793
JOIN                 ; 1794
LD     0 1          ; ELSE: 108 ; 1795
JOIN                 ; 1796
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 1797
LD     0 0          ; var f ; 1798
AP     1             ; 1799
CAR                  ; 1800
ST     0 3           ; 1801
LD     0 2          ; var n ; 1802
LDC    0            ; just constant from code ; 1803
CEQ                  ; 1804
SEL    1807 1811    ; IF? 47 ; 1805
RTN                  ; 1806
LD     0 3          ; THEN: 47 ; 1807
LDC    0            ; NULL literal ; 1808
CONS                 ; 1809
JOIN                 ; 1810
LD     0 3          ; ELSE: 47 ; 1811
LD     0 0          ; var f ; 1812
LD     0 1          ; var a ; 1813
LD     0 0          ; var f ; 1814
AP     1             ; 1815
CDR                  ; 1816
LD     0 2          ; var n ; 1817
LDC    1            ; just constant from code ; 1818
SUB                  ; 1819
LDC 0               ; local var space ; 1820
LDF    749          ;  @produce_n ; 1821
AP     4             ; 1822
CONS                 ; 1823
JOIN                 ; 1824
LDF    9691         ;  <== bit_split  [Integer x] (as blk), ALSO: @lambda_1004 ; 1825
LD     0 0          ; var x ; 1826
LDC    7            ; just constant from code ; 1827
LDC 0               ; local var space ; 1828
LDF    749          ;  @produce_n ; 1829
AP     4             ; 1830
RTN                  ; 1831
LD     0 0          ;  <== emulate_bitop  [Integer x, Integer y, Function2<Integer,Integer,Integer> f] (as blk) ; 1832
LDF    1825         ;  @bit_split ; 1833
AP     1             ; 1834
ST     0 3           ; 1835
LD     0 1          ; var y ; 1836
LDF    1825         ;  @bit_split ; 1837
AP     1             ; 1838
ST     0 4           ; 1839
LDF    9708         ;  @lambda_1005 ; 1840
LDC    0            ; just constant from code ; 1841
LD     0 2          ; var f ; 1842
LD     0 3          ; var bits_x ; 1843
LD     0 4          ; var bits_y ; 1844
LDF    660          ;  @zip_with ; 1845
AP     3             ; 1846
LDF    48           ;  @foldr ; 1847
AP     3             ; 1848
RTN                  ; 1849
LD     0 0          ;  <== ghcstate_bitop  [GHCState state, Cons arg_cons, Cons val_cons, int type] (as blk) ; 1850
LD     0 1          ; var arg_cons ; 1851
LDC 0               ; local var space ; 1852
LDC 0               ; local var space ; 1853
LDF    1337         ;  @ghcstate_read_val ; 1854
AP     4             ; 1855
ST     0 4           ; 1856
LD     0 0          ; var state ; 1857
LD     0 2          ; var val_cons ; 1858
LDC 0               ; local var space ; 1859
LDC 0               ; local var space ; 1860
LDF    1337         ;  @ghcstate_read_val ; 1861
AP     4             ; 1862
ST     0 5           ; 1863
LD     0 4          ; var arg ; 1864
LD     0 5          ; var val ; 1865
LD     0 3          ; var type ; 1866
LDC    7            ; Named Const = GHCOps.AND ; 1867
CEQ                  ; 1868
SEL    1882 1884    ; IF? 48 ; 1869
LDC 0               ; local var space ; 1870
LDC 0               ; local var space ; 1871
LDF    1832         ;  @emulate_bitop ; 1872
AP     5             ; 1873
ST     0 6           ; 1874
LD     0 0          ; var state ; 1875
LD     0 1          ; var arg_cons ; 1876
LD     0 6          ; var result ; 1877
LDC 0               ; local var space ; 1878
LDF    1397         ;  @ghcstate_write_val ; 1879
AP     4             ; 1880
RTN                  ; 1881
LDF    10298        ; THEN: 48, ALSO: @lambda_1054 ; 1882
JOIN                 ; 1883
LD     0 3          ; ELSE: 48 ; 1884
LDC    8            ; Named Const = GHCOps.OR ; 1885
CEQ                  ; 1886
SEL    1889 1891    ; IF? 109 ; 1887
JOIN                 ; 1888
LDF    10302        ; THEN: 109, ALSO: @lambda_1055 ; 1889
JOIN                 ; 1890
LDF    10313        ; ELSE: 109, ALSO: @lambda_1056 ; 1891
JOIN                 ; 1892
LD     0 5          ;  <== runGhostStep  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state, Cons step] (as blk) ; 1893
CAR                  ; 1894
ST     0 6           ; 1895
LD     0 5          ; var step ; 1896
CDR                  ; 1897
ST     0 7           ; 1898
LD     0 4          ; var state ; 1899
CAR                 ; generateTupleAccess total=3 pos=0 ; 1900
LD     0 4          ; var state ; 1901
CDR                 ; generateTupleAccess total=3 pos=1 ; 1902
CAR                  ; 1903
LDC    8            ; just constant from code ; 1904
LD     0 4          ; var state ; 1905
CDR                 ; generateTupleAccess total=3 pos=1 ; 1906
CAR                  ; 1907
LDC    8            ; just constant from code ; 1908
LDC    0            ; just constant from code ; 1909
LDF    1292         ;  @sorted_map_get ; 1910
AP     3             ; 1911
LDC    1            ; just constant from code ; 1912
ADD                  ; 1913
LDF    1308         ;  @sorted_map_assoc ; 1914
AP     3             ; 1915
LD     0 4          ; var state ; 1916
CDR                 ; generateTupleAccess total=3 pos=2 ; 1917
CDR                  ; 1918
CONS                 ; 1919
CONS                 ; 1920
ST     0 8           ; 1921
LDC    0            ; Named Const = GHCOps.MOV ; 1922
LD     0 6          ; var opcode ; 1923
CEQ                  ; 1924
SEL    1927 1945    ; IF? 49 ; 1925
RTN                  ; 1926
LD     0 0          ; THEN: 49 ; 1927
LD     0 1          ; var world ; 1928
LD     0 2          ; var ghostInfo ; 1929
LD     0 3          ; var lev ; 1930
LD     0 8          ; var inc_pc ; 1931
LD     0 7          ; var args ; 1932
CAR                  ; 1933
LD     0 7          ; var args ; 1934
CDR                  ; 1935
CAR                  ; 1936
LDC 0               ; local var space ; 1937
LDF    1478         ;  @ghcstate_assoc ; 1938
AP     4             ; 1939
LDC 0               ; local var space ; 1940
LDC 0               ; local var space ; 1941
LDF    2405         ;  @runGhost ; 1942
AP     7             ; 1943
JOIN                 ; 1944
LDC    1            ; ELSE: 49 ; 1945
LD     0 6          ; var opcode ; 1946
CEQ                  ; 1947
SEL    1950 1974    ; IF? 110 ; 1948
JOIN                 ; 1949
LD     0 0          ; THEN: 110 ; 1950
LD     0 1          ; var world ; 1951
LD     0 2          ; var ghostInfo ; 1952
LD     0 3          ; var lev ; 1953
LD     0 8          ; var inc_pc ; 1954
LD     0 7          ; var args ; 1955
CAR                  ; 1956
LD     0 8          ; var inc_pc ; 1957
LD     0 7          ; var args ; 1958
CAR                  ; 1959
LDC 0               ; local var space ; 1960
LDC 0               ; local var space ; 1961
LDF    1337         ;  @ghcstate_read_val ; 1962
AP     4             ; 1963
LDC    1            ; just constant from code ; 1964
ADD                  ; 1965
LDC 0               ; local var space ; 1966
LDF    1397         ;  @ghcstate_write_val ; 1967
AP     4             ; 1968
LDC 0               ; local var space ; 1969
LDC 0               ; local var space ; 1970
LDF    2405         ;  @runGhost ; 1971
AP     7             ; 1972
JOIN                 ; 1973
LDC    2            ; ELSE: 110 ; 1974
LD     0 6          ; var opcode ; 1975
CEQ                  ; 1976
SEL    1979 2003    ; IF? 111 ; 1977
JOIN                 ; 1978
LD     0 0          ; THEN: 111 ; 1979
LD     0 1          ; var world ; 1980
LD     0 2          ; var ghostInfo ; 1981
LD     0 3          ; var lev ; 1982
LD     0 8          ; var inc_pc ; 1983
LD     0 7          ; var args ; 1984
CAR                  ; 1985
LD     0 8          ; var inc_pc ; 1986
LD     0 7          ; var args ; 1987
CAR                  ; 1988
LDC 0               ; local var space ; 1989
LDC 0               ; local var space ; 1990
LDF    1337         ;  @ghcstate_read_val ; 1991
AP     4             ; 1992
LDC    1            ; just constant from code ; 1993
SUB                  ; 1994
LDC 0               ; local var space ; 1995
LDF    1397         ;  @ghcstate_write_val ; 1996
AP     4             ; 1997
LDC 0               ; local var space ; 1998
LDC 0               ; local var space ; 1999
LDF    2405         ;  @runGhost ; 2000
AP     7             ; 2001
JOIN                 ; 2002
LDC    3            ; ELSE: 111 ; 2003
LD     0 6          ; var opcode ; 2004
CEQ                  ; 2005
SEL    2008 2039    ; IF? 112 ; 2006
JOIN                 ; 2007
LD     0 0          ; THEN: 112 ; 2008
LD     0 1          ; var world ; 2009
LD     0 2          ; var ghostInfo ; 2010
LD     0 3          ; var lev ; 2011
LD     0 8          ; var inc_pc ; 2012
LD     0 7          ; var args ; 2013
CAR                  ; 2014
LD     0 8          ; var inc_pc ; 2015
LD     0 7          ; var args ; 2016
CAR                  ; 2017
LDC 0               ; local var space ; 2018
LDC 0               ; local var space ; 2019
LDF    1337         ;  @ghcstate_read_val ; 2020
AP     4             ; 2021
LD     0 8          ; var inc_pc ; 2022
LD     0 7          ; var args ; 2023
CDR                  ; 2024
CAR                  ; 2025
LDC 0               ; local var space ; 2026
LDC 0               ; local var space ; 2027
LDF    1337         ;  @ghcstate_read_val ; 2028
AP     4             ; 2029
ADD                  ; 2030
LDC 0               ; local var space ; 2031
LDF    1397         ;  @ghcstate_write_val ; 2032
AP     4             ; 2033
LDC 0               ; local var space ; 2034
LDC 0               ; local var space ; 2035
LDF    2405         ;  @runGhost ; 2036
AP     7             ; 2037
JOIN                 ; 2038
LDC    4            ; ELSE: 112 ; 2039
LD     0 6          ; var opcode ; 2040
CEQ                  ; 2041
SEL    2044 2075    ; IF? 113 ; 2042
JOIN                 ; 2043
LD     0 0          ; THEN: 113 ; 2044
LD     0 1          ; var world ; 2045
LD     0 2          ; var ghostInfo ; 2046
LD     0 3          ; var lev ; 2047
LD     0 8          ; var inc_pc ; 2048
LD     0 7          ; var args ; 2049
CAR                  ; 2050
LD     0 8          ; var inc_pc ; 2051
LD     0 7          ; var args ; 2052
CAR                  ; 2053
LDC 0               ; local var space ; 2054
LDC 0               ; local var space ; 2055
LDF    1337         ;  @ghcstate_read_val ; 2056
AP     4             ; 2057
LD     0 8          ; var inc_pc ; 2058
LD     0 7          ; var args ; 2059
CDR                  ; 2060
CAR                  ; 2061
LDC 0               ; local var space ; 2062
LDC 0               ; local var space ; 2063
LDF    1337         ;  @ghcstate_read_val ; 2064
AP     4             ; 2065
SUB                  ; 2066
LDC 0               ; local var space ; 2067
LDF    1397         ;  @ghcstate_write_val ; 2068
AP     4             ; 2069
LDC 0               ; local var space ; 2070
LDC 0               ; local var space ; 2071
LDF    2405         ;  @runGhost ; 2072
AP     7             ; 2073
JOIN                 ; 2074
LDC    5            ; ELSE: 113 ; 2075
LD     0 6          ; var opcode ; 2076
CEQ                  ; 2077
SEL    2080 2111    ; IF? 114 ; 2078
JOIN                 ; 2079
LD     0 0          ; THEN: 114 ; 2080
LD     0 1          ; var world ; 2081
LD     0 2          ; var ghostInfo ; 2082
LD     0 3          ; var lev ; 2083
LD     0 8          ; var inc_pc ; 2084
LD     0 7          ; var args ; 2085
CAR                  ; 2086
LD     0 8          ; var inc_pc ; 2087
LD     0 7          ; var args ; 2088
CAR                  ; 2089
LDC 0               ; local var space ; 2090
LDC 0               ; local var space ; 2091
LDF    1337         ;  @ghcstate_read_val ; 2092
AP     4             ; 2093
LD     0 8          ; var inc_pc ; 2094
LD     0 7          ; var args ; 2095
CDR                  ; 2096
CAR                  ; 2097
LDC 0               ; local var space ; 2098
LDC 0               ; local var space ; 2099
LDF    1337         ;  @ghcstate_read_val ; 2100
AP     4             ; 2101
MUL                  ; 2102
LDC 0               ; local var space ; 2103
LDF    1397         ;  @ghcstate_write_val ; 2104
AP     4             ; 2105
LDC 0               ; local var space ; 2106
LDC 0               ; local var space ; 2107
LDF    2405         ;  @runGhost ; 2108
AP     7             ; 2109
JOIN                 ; 2110
LDC    6            ; ELSE: 114 ; 2111
LD     0 6          ; var opcode ; 2112
CEQ                  ; 2113
SEL    2116 2147    ; IF? 115 ; 2114
JOIN                 ; 2115
LD     0 0          ; THEN: 115 ; 2116
LD     0 1          ; var world ; 2117
LD     0 2          ; var ghostInfo ; 2118
LD     0 3          ; var lev ; 2119
LD     0 8          ; var inc_pc ; 2120
LD     0 7          ; var args ; 2121
CAR                  ; 2122
LD     0 8          ; var inc_pc ; 2123
LD     0 7          ; var args ; 2124
CAR                  ; 2125
LDC 0               ; local var space ; 2126
LDC 0               ; local var space ; 2127
LDF    1337         ;  @ghcstate_read_val ; 2128
AP     4             ; 2129
LD     0 8          ; var inc_pc ; 2130
LD     0 7          ; var args ; 2131
CDR                  ; 2132
CAR                  ; 2133
LDC 0               ; local var space ; 2134
LDC 0               ; local var space ; 2135
LDF    1337         ;  @ghcstate_read_val ; 2136
AP     4             ; 2137
DIV                  ; 2138
LDC 0               ; local var space ; 2139
LDF    1397         ;  @ghcstate_write_val ; 2140
AP     4             ; 2141
LDC 0               ; local var space ; 2142
LDC 0               ; local var space ; 2143
LDF    2405         ;  @runGhost ; 2144
AP     7             ; 2145
JOIN                 ; 2146
LDC    7            ; ELSE: 115 ; 2147
LD     0 6          ; var opcode ; 2148
CEQ                  ; 2149
SEL    2152 2173    ; IF? 116 ; 2150
JOIN                 ; 2151
LD     0 0          ; THEN: 116 ; 2152
LD     0 1          ; var world ; 2153
LD     0 2          ; var ghostInfo ; 2154
LD     0 3          ; var lev ; 2155
LD     0 8          ; var inc_pc ; 2156
LD     0 7          ; var args ; 2157
CAR                  ; 2158
LD     0 7          ; var args ; 2159
CDR                  ; 2160
CAR                  ; 2161
LDC    7            ; Named Const = GHCOps.AND ; 2162
LDC 0               ; local var space ; 2163
LDC 0               ; local var space ; 2164
LDC 0               ; local var space ; 2165
LDF    1850         ;  @ghcstate_bitop ; 2166
AP     7             ; 2167
LDC 0               ; local var space ; 2168
LDC 0               ; local var space ; 2169
LDF    2405         ;  @runGhost ; 2170
AP     7             ; 2171
JOIN                 ; 2172
LDC    8            ; ELSE: 116 ; 2173
LD     0 6          ; var opcode ; 2174
CEQ                  ; 2175
SEL    2178 2199    ; IF? 117 ; 2176
JOIN                 ; 2177
LD     0 0          ; THEN: 117 ; 2178
LD     0 1          ; var world ; 2179
LD     0 2          ; var ghostInfo ; 2180
LD     0 3          ; var lev ; 2181
LD     0 8          ; var inc_pc ; 2182
LD     0 7          ; var args ; 2183
CAR                  ; 2184
LD     0 7          ; var args ; 2185
CDR                  ; 2186
CAR                  ; 2187
LDC    8            ; Named Const = GHCOps.OR ; 2188
LDC 0               ; local var space ; 2189
LDC 0               ; local var space ; 2190
LDC 0               ; local var space ; 2191
LDF    1850         ;  @ghcstate_bitop ; 2192
AP     7             ; 2193
LDC 0               ; local var space ; 2194
LDC 0               ; local var space ; 2195
LDF    2405         ;  @runGhost ; 2196
AP     7             ; 2197
JOIN                 ; 2198
LDC    9            ; ELSE: 117 ; 2199
LD     0 6          ; var opcode ; 2200
CEQ                  ; 2201
SEL    2204 2225    ; IF? 118 ; 2202
JOIN                 ; 2203
LD     0 0          ; THEN: 118 ; 2204
LD     0 1          ; var world ; 2205
LD     0 2          ; var ghostInfo ; 2206
LD     0 3          ; var lev ; 2207
LD     0 8          ; var inc_pc ; 2208
LD     0 7          ; var args ; 2209
CAR                  ; 2210
LD     0 7          ; var args ; 2211
CDR                  ; 2212
CAR                  ; 2213
LDC    9            ; Named Const = GHCOps.XOR ; 2214
LDC 0               ; local var space ; 2215
LDC 0               ; local var space ; 2216
LDC 0               ; local var space ; 2217
LDF    1850         ;  @ghcstate_bitop ; 2218
AP     7             ; 2219
LDC 0               ; local var space ; 2220
LDC 0               ; local var space ; 2221
LDF    2405         ;  @runGhost ; 2222
AP     7             ; 2223
JOIN                 ; 2224
LDC    10           ; ELSE: 118 ; 2225
LD     0 6          ; var opcode ; 2226
CEQ                  ; 2227
SEL    2230 2257    ; IF? 119 ; 2228
JOIN                 ; 2229
LD     0 0          ; THEN: 119 ; 2230
LD     0 1          ; var world ; 2231
LD     0 2          ; var ghostInfo ; 2232
LD     0 3          ; var lev ; 2233
LD     0 4          ; var state ; 2234
LD     0 7          ; var args ; 2235
CDR                  ; 2236
CDR                  ; 2237
LDC 0               ; local var space ; 2238
LDC 0               ; local var space ; 2239
LDF    1337         ;  @ghcstate_read_val ; 2240
AP     4             ; 2241
LD     0 4          ; var state ; 2242
LD     0 7          ; var args ; 2243
CDR                  ; 2244
CAR                  ; 2245
LDC 0               ; local var space ; 2246
LDC 0               ; local var space ; 2247
LDF    1337         ;  @ghcstate_read_val ; 2248
AP     4             ; 2249
CGT                  ; 2250
SEL    2262 2278    ; IF? 120 ; 2251
LDC 0               ; local var space ; 2252
LDC 0               ; local var space ; 2253
LDF    2405         ;  @runGhost ; 2254
AP     7             ; 2255
JOIN                 ; 2256
LDC    11           ; ELSE: 119 ; 2257
LD     0 6          ; var opcode ; 2258
CEQ                  ; 2259
SEL    2280 2307    ; IF? 121 ; 2260
JOIN                 ; 2261
LD     0 4          ; THEN: 120 ; 2262
CAR                 ; generateTupleAccess total=3 pos=0 ; 2263
LD     0 4          ; var state ; 2264
CDR                 ; generateTupleAccess total=3 pos=1 ; 2265
CAR                  ; 2266
LDC    8            ; just constant from code ; 2267
LD     0 7          ; var args ; 2268
CAR                  ; 2269
LDF    1308         ;  @sorted_map_assoc ; 2270
AP     3             ; 2271
LD     0 4          ; var state ; 2272
CDR                 ; generateTupleAccess total=3 pos=2 ; 2273
CDR                  ; 2274
CONS                 ; 2275
CONS                 ; 2276
JOIN                 ; 2277
LD     0 4          ; ELSE: 120 ; 2278
JOIN                 ; 2279
LD     0 0          ; THEN: 121 ; 2280
LD     0 1          ; var world ; 2281
LD     0 2          ; var ghostInfo ; 2282
LD     0 3          ; var lev ; 2283
LD     0 4          ; var state ; 2284
LD     0 7          ; var args ; 2285
CDR                  ; 2286
CAR                  ; 2287
LDC 0               ; local var space ; 2288
LDC 0               ; local var space ; 2289
LDF    1337         ;  @ghcstate_read_val ; 2290
AP     4             ; 2291
LD     0 4          ; var state ; 2292
LD     0 7          ; var args ; 2293
CDR                  ; 2294
CDR                  ; 2295
LDC 0               ; local var space ; 2296
LDC 0               ; local var space ; 2297
LDF    1337         ;  @ghcstate_read_val ; 2298
AP     4             ; 2299
CEQ                  ; 2300
SEL    2312 2328    ; IF? 122 ; 2301
LDC 0               ; local var space ; 2302
LDC 0               ; local var space ; 2303
LDF    2405         ;  @runGhost ; 2304
AP     7             ; 2305
JOIN                 ; 2306
LDC    12           ; ELSE: 121 ; 2307
LD     0 6          ; var opcode ; 2308
CEQ                  ; 2309
SEL    2330 2357    ; IF? 123 ; 2310
JOIN                 ; 2311
LD     0 4          ; THEN: 122 ; 2312
CAR                 ; generateTupleAccess total=3 pos=0 ; 2313
LD     0 4          ; var state ; 2314
CDR                 ; generateTupleAccess total=3 pos=1 ; 2315
CAR                  ; 2316
LDC    8            ; just constant from code ; 2317
LD     0 7          ; var args ; 2318
CAR                  ; 2319
LDF    1308         ;  @sorted_map_assoc ; 2320
AP     3             ; 2321
LD     0 4          ; var state ; 2322
CDR                 ; generateTupleAccess total=3 pos=2 ; 2323
CDR                  ; 2324
CONS                 ; 2325
CONS                 ; 2326
JOIN                 ; 2327
LD     0 4          ; ELSE: 122 ; 2328
JOIN                 ; 2329
LD     0 0          ; THEN: 123 ; 2330
LD     0 1          ; var world ; 2331
LD     0 2          ; var ghostInfo ; 2332
LD     0 3          ; var lev ; 2333
LD     0 4          ; var state ; 2334
LD     0 7          ; var args ; 2335
CDR                  ; 2336
CAR                  ; 2337
LDC 0               ; local var space ; 2338
LDC 0               ; local var space ; 2339
LDF    1337         ;  @ghcstate_read_val ; 2340
AP     4             ; 2341
LD     0 4          ; var state ; 2342
LD     0 7          ; var args ; 2343
CDR                  ; 2344
CDR                  ; 2345
LDC 0               ; local var space ; 2346
LDC 0               ; local var space ; 2347
LDF    1337         ;  @ghcstate_read_val ; 2348
AP     4             ; 2349
CGT                  ; 2350
SEL    2362 2378    ; IF? 124 ; 2351
LDC 0               ; local var space ; 2352
LDC 0               ; local var space ; 2353
LDF    2405         ;  @runGhost ; 2354
AP     7             ; 2355
JOIN                 ; 2356
LDC    13           ; ELSE: 123 ; 2357
LD     0 6          ; var opcode ; 2358
CEQ                  ; 2359
SEL    2380 2400    ; IF? 125 ; 2360
JOIN                 ; 2361
LD     0 4          ; THEN: 124 ; 2362
CAR                 ; generateTupleAccess total=3 pos=0 ; 2363
LD     0 4          ; var state ; 2364
CDR                 ; generateTupleAccess total=3 pos=1 ; 2365
CAR                  ; 2366
LDC    8            ; just constant from code ; 2367
LD     0 7          ; var args ; 2368
CAR                  ; 2369
LDF    1308         ;  @sorted_map_assoc ; 2370
AP     3             ; 2371
LD     0 4          ; var state ; 2372
CDR                 ; generateTupleAccess total=3 pos=2 ; 2373
CDR                  ; 2374
CONS                 ; 2375
CONS                 ; 2376
JOIN                 ; 2377
LD     0 4          ; ELSE: 124 ; 2378
JOIN                 ; 2379
LD     0 0          ; THEN: 125 ; 2380
LD     0 1          ; var world ; 2381
LD     0 2          ; var ghostInfo ; 2382
LD     0 3          ; var lev ; 2383
LD     0 1          ; var world ; 2384
LD     0 8          ; var inc_pc ; 2385
LD     0 2          ; var ghostInfo ; 2386
LD     0 7          ; var args ; 2387
CAR                  ; 2388
LD     0 7          ; var args ; 2389
CDR                  ; 2390
LDC 0               ; local var space ; 2391
LDC 0               ; local var space ; 2392
LDF    1579         ;  @processGhostInt ; 2393
AP     7             ; 2394
LDC 0               ; local var space ; 2395
LDC 0               ; local var space ; 2396
LDF    2405         ;  @runGhost ; 2397
AP     7             ; 2398
JOIN                 ; 2399
LD     0 4          ; ELSE: 125 ; 2400
CAR                 ; generateTupleAccess total=3 pos=0 ; 2401
CDR                 ; generateTupleAccess total=3 pos=2 ; 2402
CDR                  ; 2403
JOIN                 ; 2404
LD     0 4          ;  <== runGhost  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state] (as blk) ; 2405
CDR                 ; generateTupleAccess total=3 pos=1 ; 2406
CAR                  ; 2407
LDC    8            ; just constant from code ; 2408
LDC    0            ; just constant from code ; 2409
LDF    1292         ;  @sorted_map_get ; 2410
AP     3             ; 2411
ST     0 5           ; 2412
LD     0 0          ; var prog ; 2413
LD     0 5          ; var pc ; 2414
LDC    0            ; NULL literal ; 2415
LDF    1292         ;  @sorted_map_get ; 2416
AP     3             ; 2417
ST     0 6           ; 2418
LD     0 6          ; var step ; 2419
ATOM                 ; 2420
SEL    2423 2428    ; IF? 50 ; 2421
RTN                  ; 2422
LD     0 4          ; THEN: 50 ; 2423
CAR                 ; generateTupleAccess total=3 pos=0 ; 2424
CDR                 ; generateTupleAccess total=3 pos=2 ; 2425
CDR                  ; 2426
JOIN                 ; 2427
LD     0 3          ; ELSE: 50 ; 2428
LDC    1023         ; just constant from code ; 2429
CGT                  ; 2430
SEL    2433 2438    ; IF? 126 ; 2431
JOIN                 ; 2432
LD     0 4          ; THEN: 126 ; 2433
CAR                 ; generateTupleAccess total=3 pos=0 ; 2434
CDR                 ; generateTupleAccess total=3 pos=2 ; 2435
CDR                  ; 2436
JOIN                 ; 2437
LD     0 0          ; ELSE: 126 ; 2438
LD     0 1          ; var world ; 2439
LD     0 2          ; var ghostInfo ; 2440
LD     0 3          ; var lev ; 2441
LDC    1            ; just constant from code ; 2442
ADD                  ; 2443
LD     0 4          ; var state ; 2444
LD     0 6          ; var step ; 2445
LDC 0               ; local var space ; 2446
LDC 0               ; local var space ; 2447
LDC 0               ; local var space ; 2448
LDF    1893         ;  @runGhostStep ; 2449
AP     9             ; 2450
JOIN                 ; 2451
LD     0 1          ;  <== getGhostDirection  [WorldState world, GhostInfo ghostInfo] (as blk) ; 2452
CDR                 ; generateTupleAccess total=3 pos=1 ; 2453
CAR                  ; 2454
LDC    0            ; just constant from code ; 2455
LDC    0            ; NULL literal ; 2456
LDC    0            ; just constant from code ; 2457
CONS                 ; 2458
CONS                 ; 2459
LDF    9714         ;  @lambda_1006 ; 2460
LDF    386          ;  @fold0 ; 2461
AP     3             ; 2462
ST     0 2           ; 2463
LD     0 0          ; var world ; 2464
CDR                 ; generateTupleAccess total=4 pos=2 ; 2465
CDR                  ; 2466
CAR                  ; 2467
CAR                  ; 2468
ST     0 3           ; 2469
LD     0 2          ; var prog ; 2470
CDR                 ; generateTupleAccess total=2 pos=1 ; 2471
LD     0 0          ; var world ; 2472
LD     0 1          ; var ghostInfo ; 2473
LDC    0            ; just constant from code ; 2474
LD     0 3          ; var ghostState ; 2475
LDC    0            ; NULL literal ; 2476
LDC    0            ; just constant from code ; 2477
CONS                 ; 2478
LDC    0            ; NULL literal ; 2479
LDC    0            ; just constant from code ; 2480
CONS                 ; 2481
CONS                 ; 2482
CONS                 ; 2483
LDC 0               ; local var space ; 2484
LDC 0               ; local var space ; 2485
LDF    2405         ;  @runGhost ; 2486
AP     7             ; 2487
RTN                  ; 2488
LDC    1000001      ;  <== entryCPUEmulator  [] (as blk) ; 2489
DBUG                 ; 2490
LDF    8562         ;  @sample_map ; 2491
AP     0             ; 2492
ST     0 0           ; 2493
LDC    1000002      ; just constant from code ; 2494
DBUG                 ; 2495
LD     0 0          ; var ws ; 2496
DBUG                 ; 2497
BRK                  ; 2498
LD     0 0          ; var ws ; 2499
LDC    0            ; NULL literal ; 2500
LDC 0               ; local var space ; 2501
LDC 0               ; local var space ; 2502
LDC 0               ; local var space ; 2503
LDF    2525         ;  @entryFactual ; 2504
AP     5             ; 2505
ST     0 1           ; 2506
LDC    1000003      ; just constant from code ; 2507
DBUG                 ; 2508
LD     0 0          ; var ws ; 2509
DBUG                 ; 2510
BRK                  ; 2511
LD     0 1          ; var initialDone ; 2512
CDR                 ; generateTupleAccess total=2 pos=1 ; 2513
ST     0 2           ; 2514
LD     0 1          ; var initialDone ; 2515
CAR                 ; generateTupleAccess total=2 pos=0 ; 2516
ST     0 3           ; 2517
LD     0 3          ; var a ; 2518
LD     0 0          ; var ws ; 2519
LD     0 2          ; var b ; 2520
AP     2             ; 2521
ST     0 4           ; 2522
LDC    0            ; NULL literal ; 2523
RTN                  ; 2524
LD     0 0          ;  <== entryFactual  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 2525
LD     0 1          ; var ghostSpecs ; 2526
LDC 0               ; local var space ; 2527
LDF    3033         ;  @createInitialState ; 2528
AP     3             ; 2529
ST     0 2           ; 2530
LD     0 2          ; var initialState ; 2531
CAR                 ; generateTupleAccess total=4 pos=0 ; 2532
CDR                 ; generateTupleAccess total=6 pos=5 ; 2533
CDR                  ; 2534
CDR                  ; 2535
CDR                  ; 2536
CDR                  ; 2537
LDC    1            ; just constant from code ; 2538
LDF    423          ;  @list_item ; 2539
AP     2             ; 2540
ST     0 3           ; 2541
LDC    0            ; just constant from code ; 2542
LDC    100          ; Named Const = VMExtras.GET_READER ; 2543
LDC    1            ; just constant from code ; 2544
LD     0 3          ; var newRowAccessor ; 2545
AP     2             ; 2546
AP     1             ; 2547
ST     0 4           ; 2548
LD     0 2          ; var initialState ; 2549
LDF    9857         ;  @lambda_1017 ; 2550
CONS                 ; 2551
RTN                  ; 2552
LDF    3685         ;  <== test01  [] (as blk), ALSO: @array_256 ; 2553
AP     0             ; 2554
ST     0 0           ; 2555
LDC    100          ; Named Const = VMExtras.GET_READER ; 2556
LDC    22           ; just constant from code ; 2557
LD     0 0          ; var accessor ; 2558
AP     2             ; 2559
ST     0 1           ; 2560
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 2561
LDC    22           ; just constant from code ; 2562
LD     0 0          ; var accessor ; 2563
AP     2             ; 2564
ST     0 2           ; 2565
LDC    77           ; just constant from code ; 2566
LD     0 2          ; var writer101 ; 2567
AP     1             ; 2568
ST     0 3           ; 2569
LDC    0            ; just constant from code ; 2570
LD     0 1          ; var reader101 ; 2571
AP     1             ; 2572
ST     0 4           ; 2573
LDC    0            ; just constant from code ; 2574
RTN                  ; 2575
LD     0 0          ;  <== collectEdgePills  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 2576
CDR                 ; generateTupleAccess total=7 pos=3 ; 2577
CDR                  ; 2578
CDR                  ; 2579
CAR                  ; 2580
LDF    9874         ;  @lambda_1018 ; 2581
LDF    349          ;  @dropWhile ; 2582
AP     2             ; 2583
ST     0 3           ; 2584
LD     0 3          ; var pathRemaining ; 2585
LDF    9897         ;  @lambda_1019 ; 2586
LDF    537          ;  @filter ; 2587
AP     2             ; 2588
ST     0 4           ; 2589
LD     0 4          ; var rv ; 2590
RTN                  ; 2591
LD     0 0          ;  <== collectEdgeGhosts  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 2592
CDR                 ; generateTupleAccess total=7 pos=2 ; 2593
CDR                  ; 2594
CAR                  ; 2595
LDF    9909         ;  @lambda_1020 ; 2596
LDF    349          ;  @dropWhile ; 2597
AP     2             ; 2598
ST     0 3           ; 2599
LD     0 3          ; var pathOnEdge ; 2600
LDF    9930         ;  @lambda_1021 ; 2601
LDF    537          ;  @filter ; 2602
AP     2             ; 2603
RTN                  ; 2604
LD     0 0          ;  <== collectAnyEdgePills  [ParsedEdge edge, ListCons<ListCons<Integer>> map] (as blk) ; 2605
CDR                 ; generateTupleAccess total=7 pos=3 ; 2606
CDR                  ; 2607
CDR                  ; 2608
CAR                  ; 2609
ST     0 2           ; 2610
LD     0 2          ; var edgeAccess ; 2611
LDF    9945         ;  @lambda_1022 ; 2612
LDF    537          ;  @filter ; 2613
AP     2             ; 2614
ST     0 3           ; 2615
LD     0 3          ; var rv ; 2616
RTN                  ; 2617
LD     0 0          ;  <== countAnyEdgePills  [ParsedEdge edge] (as blk) ; 2618
CDR                 ; generateTupleAccess total=7 pos=3 ; 2619
CDR                  ; 2620
CDR                  ; 2621
CAR                  ; 2622
ST     0 1           ; 2623
LD     0 1          ; var edgeAccess ; 2624
LDC    0            ; just constant from code ; 2625
LDF    9957         ;  @lambda_1023 ; 2626
LDF    386          ;  @fold0 ; 2627
AP     3             ; 2628
ST     0 2           ; 2629
LD     0 2          ; var rv ; 2630
RTN                  ; 2631
LD     0 0          ;  <== countMyEdgePills  [ParsedEdge edge, Point start] (as blk) ; 2632
CDR                 ; generateTupleAccess total=7 pos=3 ; 2633
CDR                  ; 2634
CDR                  ; 2635
CAR                  ; 2636
LDF    9971         ;  @lambda_1024 ; 2637
LDF    349          ;  @dropWhile ; 2638
AP     2             ; 2639
ST     0 2           ; 2640
LD     0 2          ; var pathRemaining ; 2641
LDC    0            ; just constant from code ; 2642
LDF    9994         ;  @lambda_1025 ; 2643
LDF    386          ;  @fold0 ; 2644
AP     3             ; 2645
ST     0 3           ; 2646
LD     0 3          ; var rv ; 2647
RTN                  ; 2648
LD     0 1          ;  <== performMove  [AIState aistate, WorldState worldState] (as blk) ; 2649
CDR                 ; generateTupleAccess total=4 pos=1 ; 2650
CAR                  ; 2651
CDR                 ; generateTupleAccess total=5 pos=1 ; 2652
CAR                  ; 2653
ST     0 2           ; 2654
LD     0 0          ; var aistate ; 2655
LD     0 2          ; var location ; 2656
LDF    3443         ;  @findEdgesForPoint ; 2657
AP     2             ; 2658
ST     0 3           ; 2659
LD     0 3          ; var edgesForPoint ; 2660
LD     0 0          ; var aistate ; 2661
LD     0 1          ; var worldState ; 2662
LDC 0               ; local var space ; 2663
LDC 0               ; local var space ; 2664
LDC 0               ; local var space ; 2665
LDC 0               ; local var space ; 2666
LDC 0               ; local var space ; 2667
LDF    2988         ;  @findBestDistantEdge ; 2668
AP     8             ; 2669
ST     0 7           ; 2670
LD     0 7          ; var startEdge ; 2671
CDR                 ; generateTupleAccess total=7 pos=2 ; 2672
CDR                  ; 2673
CAR                  ; 2674
LDF    10057        ;  @lambda_1031 ; 2675
LDF    349          ;  @dropWhile ; 2676
AP     2             ; 2677
ST     0 8           ; 2678
LD     0 8          ; var pathToWalk ; 2679
LDF    532          ;  @length ; 2680
AP     1             ; 2681
LDC    2            ; just constant from code ; 2682
CGTE                 ; 2683
SEL    2725 2741     ; 2684
LD     0 4          ; var retval ; 2685
CDR                 ; generateTupleAccess total=2 pos=1 ; 2686
LDC    3            ; Named Const = Direction.LEFT ; 2687
CEQ                  ; 2688
SEL    2746 2751    ; IF? 51 ; 2689
ST     0 9           ; 2690
LD     0 4          ; var retval ; 2691
CDR                 ; generateTupleAccess total=2 pos=1 ; 2692
LDC    0            ; Named Const = Direction.UP ; 2693
CEQ                  ; 2694
SEL    2757 2762    ; IF? 52 ; 2695
ST     0 10          ; 2696
LD     0 4          ; var retval ; 2697
CAR                 ; generateTupleAccess total=2 pos=0 ; 2698
ST     0 11          ; 2699
LD     0 11         ; var a ; 2700
CAR                 ; generateTupleAccess total=4 pos=0 ; 2701
CDR                 ; generateTupleAccess total=6 pos=5 ; 2702
CDR                  ; 2703
CDR                  ; 2704
CDR                  ; 2705
CDR                  ; 2706
LD     0 10         ; var ny ; 2707
LDF    423          ;  @list_item ; 2708
AP     2             ; 2709
ST     0 12          ; 2710
LDC    0            ; just constant from code ; 2711
LDC    100          ; Named Const = VMExtras.GET_READER ; 2712
LD     0 9          ; var nx ; 2713
LD     0 12         ; var newRowAccessor ; 2714
AP     2             ; 2715
AP     1             ; 2716
ST     0 13          ; 2717
LD     0 13         ; var oldValue ; 2718
LDC    2            ; Named Const = CT.PILL ; 2719
CEQ                  ; 2720
SEL    2768 2775    ; IF? 53 ; 2721
ST     0 13          ; 2722
LD     0 4          ; var retval ; 2723
RTN                  ; 2724
LD     0 8          ; branch@2725 ; 2725
CDR                  ; 2726
CAR                  ; 2727
ST     0 5           ; 2728
LD     0 5          ; var newLocation ; 2729
CAR                 ; generateTupleAccess total=2 pos=0 ; 2730
LD     0 2          ; var location ; 2731
CAR                 ; generateTupleAccess total=2 pos=0 ; 2732
CGT                  ; 2733
SEL    2777 2779    ; IF? 127 ; 2734
ST     0 6           ; 2735
LD     0 0          ; var aistate ; 2736
LD     0 6          ; var direction ; 2737
CONS                 ; 2738
ST     0 4           ; 2739
JOIN                 ; 2740
LD     0 0          ; branch@2741 ; 2741
LDC    0            ; Named Const = Direction.UP ; 2742
CONS                 ; 2743
ST     0 4           ; 2744
JOIN                 ; 2745
LD     0 2          ; THEN: 51 ; 2746
CAR                 ; generateTupleAccess total=2 pos=0 ; 2747
LDC    1            ; just constant from code ; 2748
SUB                  ; 2749
JOIN                 ; 2750
LD     0 4          ; ELSE: 51 ; 2751
CDR                 ; generateTupleAccess total=2 pos=1 ; 2752
LDC    1            ; Named Const = Direction.RIGHT ; 2753
CEQ                  ; 2754
SEL    2786 2791    ; IF? 128 ; 2755
JOIN                 ; 2756
LD     0 2          ; THEN: 52 ; 2757
CDR                 ; generateTupleAccess total=2 pos=1 ; 2758
LDC    1            ; just constant from code ; 2759
SUB                  ; 2760
JOIN                 ; 2761
LD     0 4          ; ELSE: 52 ; 2762
CDR                 ; generateTupleAccess total=2 pos=1 ; 2763
LDC    2            ; Named Const = Direction.DOWN ; 2764
CEQ                  ; 2765
SEL    2794 2799    ; IF? 129 ; 2766
JOIN                 ; 2767
LDC    1            ; THEN: 53 ; 2768
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 2769
LD     0 9          ; var nx ; 2770
LD     0 12         ; var newRowAccessor ; 2771
AP     2             ; 2772
AP     1             ; 2773
JOIN                 ; 2774
LD     0 13         ; ELSE: 53 ; 2775
JOIN                 ; 2776
LDC    1            ; THEN: 127 ; 2777
JOIN                 ; 2778
LD     0 2          ; ELSE: 127 ; 2779
CAR                 ; generateTupleAccess total=2 pos=0 ; 2780
LD     0 5          ; var newLocation ; 2781
CAR                 ; generateTupleAccess total=2 pos=0 ; 2782
CGT                  ; 2783
SEL    2802 2804    ; IF? 130 ; 2784
JOIN                 ; 2785
LD     0 2          ; THEN: 128 ; 2786
CAR                 ; generateTupleAccess total=2 pos=0 ; 2787
LDC    1            ; just constant from code ; 2788
ADD                  ; 2789
JOIN                 ; 2790
LD     0 2          ; ELSE: 128 ; 2791
CAR                 ; generateTupleAccess total=2 pos=0 ; 2792
JOIN                 ; 2793
LD     0 2          ; THEN: 129 ; 2794
CDR                 ; generateTupleAccess total=2 pos=1 ; 2795
LDC    1            ; just constant from code ; 2796
ADD                  ; 2797
JOIN                 ; 2798
LD     0 2          ; ELSE: 129 ; 2799
CDR                 ; generateTupleAccess total=2 pos=1 ; 2800
JOIN                 ; 2801
LDC    3            ; THEN: 130 ; 2802
JOIN                 ; 2803
LD     0 2          ; ELSE: 130 ; 2804
CDR                 ; generateTupleAccess total=2 pos=1 ; 2805
LD     0 5          ; var newLocation ; 2806
CDR                 ; generateTupleAccess total=2 pos=1 ; 2807
CGT                  ; 2808
SEL    2811 2813    ; IF? 131 ; 2809
JOIN                 ; 2810
LDC    0            ; THEN: 131 ; 2811
JOIN                 ; 2812
LDC    2            ; ELSE: 131 ; 2813
JOIN                 ; 2814
LD     0 2          ;  <== waveFromEdgeToNearestEdges  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 2815
LDF    415          ;  @queue_isempty ; 2816
AP     1             ; 2817
SEL    2821 2824     ; 2818
LD     0 6          ; var retval ; 2819
RTN                  ; 2820
LD     0 4          ; branch@2821 ; 2821
ST     0 6           ; 2822
JOIN                 ; 2823
LD     0 0          ; branch@2824 ; 2824
LD     0 1          ; var worldState ; 2825
LD     0 2          ; var edgeQueue ; 2826
LD     0 3          ; var visited ; 2827
LD     0 4          ; var acc ; 2828
LD     0 5          ; var edgesWithDotsSoFar ; 2829
LDC 0               ; local var space ; 2830
LDC 0               ; local var space ; 2831
LDC 0               ; local var space ; 2832
LDC 0               ; local var space ; 2833
LDC 0               ; local var space ; 2834
LDC 0               ; local var space ; 2835
LDC 0               ; local var space ; 2836
LDC 0               ; local var space ; 2837
LDC 0               ; local var space ; 2838
LDC 0               ; local var space ; 2839
LDF    2844         ;  @waveFromEdgeToNearestEdges0 ; 2840
AP     16            ; 2841
ST     0 6           ; 2842
JOIN                 ; 2843
LD     0 2          ;  <== waveFromEdgeToNearestEdges0  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 2844
LDC 0               ; local var space ; 2845
LDF    492          ;  @queue_dequeue ; 2846
AP     2             ; 2847
ST     0 7           ; 2848
LD     0 7          ; var reduced ; 2849
CAR                 ; generateTupleAccess total=2 pos=0 ; 2850
ST     0 8           ; 2851
LD     0 0          ; var aistate ; 2852
CAR                 ; generateTupleAccess total=4 pos=0 ; 2853
CDR                 ; generateTupleAccess total=6 pos=2 ; 2854
CDR                  ; 2855
CAR                  ; 2856
LD     0 8          ; var lookingEdge ; 2857
LDF    2953         ;  @findFollowingEdges ; 2858
AP     2             ; 2859
ST     0 9           ; 2860
LD     0 9          ; var following ; 2861
LDF    10087        ;  @lambda_1033 ; 2862
LDF    537          ;  @filter ; 2863
AP     2             ; 2864
ST     0 9           ; 2865
LD     0 9          ; var following ; 2866
LDF    10100        ;  @lambda_1034 ; 2867
LDF    537          ;  @filter ; 2868
AP     2             ; 2869
ST     0 10          ; 2870
LD     0 3          ; var visited ; 2871
LD     0 9          ; var following ; 2872
LDF    10117        ;  @lambda_1035 ; 2873
LDF    69           ;  @map ; 2874
AP     2             ; 2875
LDF    1317         ;  @sorted_map_assoc_all ; 2876
AP     2             ; 2877
ST     0 11          ; 2878
LD     0 11         ; var nvisited ; 2879
LD     0 9          ; var following ; 2880
LDF    10127        ;  @lambda_1036 ; 2881
LDF    69           ;  @map ; 2882
AP     2             ; 2883
LDF    1317         ;  @sorted_map_assoc_all ; 2884
AP     2             ; 2885
ST     0 11          ; 2886
LD     0 9          ; var following ; 2887
LDF    10137        ;  @lambda_1037 ; 2888
LDF    69           ;  @map ; 2889
AP     2             ; 2890
ST     0 12          ; 2891
LD     0 12         ; var newRoutes ; 2892
LD     0 7          ; var reduced ; 2893
CDR                 ; generateTupleAccess total=2 pos=1 ; 2894
LDF    10141        ;  @lambda_1038 ; 2895
LDF    386          ;  @fold0 ; 2896
AP     3             ; 2897
ST     0 13          ; 2898
LD     0 12         ; var newRoutes ; 2899
LD     0 4          ; var acc ; 2900
LDF    184          ;  @concat2_set ; 2901
AP     2             ; 2902
ST     0 14          ; 2903
LD     0 4          ; var acc ; 2904
ATOM                 ; 2905
LDC    1            ; for negation ; 2906
SUB                  ; 2907
SEL    2915 2935    ; IF? 54 ; 2908
ST     0 15          ; 2909
LD     0 15         ; var stopCondition ; 2910
SEL    2937 2939    ; IF? 55 ; 2911
ST     0 6           ; 2912
LD     0 6          ; var retval ; 2913
RTN                  ; 2914
LD     0 5          ; THEN: 54 ; 2915
LDC    3            ; just constant from code ; 2916
CGT                  ; 2917
LD     0 4          ; var acc ; 2918
LDF    532          ;  @length ; 2919
AP     1             ; 2920
LDC    15           ; just constant from code ; 2921
CGT                  ; 2922
MUL                  ; 2923
LD     0 14         ; var newAcc ; 2924
CAR                  ; 2925
LDF    532          ;  @length ; 2926
AP     1             ; 2927
LD     0 4          ; var acc ; 2928
CAR                  ; 2929
LDF    532          ;  @length ; 2930
AP     1             ; 2931
CGT                  ; 2932
MUL                  ; 2933
JOIN                 ; 2934
LDC    0            ; ELSE: 54 ; 2935
JOIN                 ; 2936
LD     0 4          ; THEN: 55 ; 2937
JOIN                 ; 2938
LD     0 0          ; ELSE: 55 ; 2939
LD     0 1          ; var worldState ; 2940
LD     0 13         ; var newqq ; 2941
LD     0 11         ; var nvisited ; 2942
LD     0 14         ; var newAcc ; 2943
LD     0 5          ; var edgesWithDotsSoFar ; 2944
LD     0 10         ; var withDots ; 2945
LDF    532          ;  @length ; 2946
AP     1             ; 2947
ADD                  ; 2948
LDC 0               ; local var space ; 2949
LDF    2815         ;  @waveFromEdgeToNearestEdges ; 2950
AP     7             ; 2951
JOIN                 ; 2952
LD     0 0          ;  <== findFollowingEdges  [ListCons<ParsedEdge> parsedEdges, ListCons<ParsedEdge> lookingEdge] (as blk) ; 2953
LDF    10078        ;  @lambda_1032 ; 2954
LDF    537          ;  @filter ; 2955
AP     2             ; 2956
RTN                  ; 2957
LD     0 0          ;  <== pointEquals  [Point a, Point b] (as blk) ; 2958
CAR                 ; generateTupleAccess total=2 pos=0 ; 2959
LD     0 1          ; var b ; 2960
CAR                 ; generateTupleAccess total=2 pos=0 ; 2961
CEQ                  ; 2962
LD     0 0          ; var a ; 2963
CDR                 ; generateTupleAccess total=2 pos=1 ; 2964
LD     0 1          ; var b ; 2965
CDR                 ; generateTupleAccess total=2 pos=1 ; 2966
CEQ                  ; 2967
MUL                  ; 2968
SEL    2971 2973    ; IF? 56 ; 2969
RTN                  ; 2970
LDC    1            ; THEN: 56 ; 2971
JOIN                 ; 2972
LDC    0            ; ELSE: 56 ; 2973
JOIN                 ; 2974
LD     0 0          ;  <== endingPointOfEdgeRoute  [ListCons<ParsedEdge> lookingEdge] (as blk) ; 2975
CAR                  ; 2976
ST     0 1           ; 2977
LD     0 1          ; var lastEdge ; 2978
CDR                 ; generateTupleAccess total=7 pos=1 ; 2979
CAR                  ; 2980
RTN                  ; 2981
LD     0 0          ;  <== countRoutePills  [ListCons<ParsedEdge> route] (as blk) ; 2982
LDC    0            ; just constant from code ; 2983
LDF    10146        ;  @lambda_1039 ; 2984
LDF    386          ;  @fold0 ; 2985
AP     3             ; 2986
RTN                  ; 2987
LDF    403          ;  <== findBestDistantEdge  [ListCons<ParsedEdge> currentEdges, AIState aistate, WorldState worldState] (as blk), ALSO: @queue_new ; 2988
AP     0             ; 2989
ST     0 3           ; 2990
LD     0 0          ; var currentEdges ; 2991
LD     0 3          ; var q ; 2992
LDF    10013        ;  @lambda_1027 ; 2993
LDF    386          ;  @fold0 ; 2994
AP     3             ; 2995
ST     0 3           ; 2996
LD     0 1          ; var aistate ; 2997
LD     0 2          ; var worldState ; 2998
LD     0 3          ; var q ; 2999
LDC    0            ; NULL literal ; 3000
LDC    0            ; just constant from code ; 3001
CONS                 ; 3002
LD     0 0          ; var currentEdges ; 3003
LDF    10020        ;  @lambda_1028 ; 3004
LDF    69           ;  @map ; 3005
AP     2             ; 3006
LDF    1317         ;  @sorted_map_assoc_all ; 3007
AP     2             ; 3008
LDC    0            ; NULL literal ; 3009
LDC    0            ; just constant from code ; 3010
LDC 0               ; local var space ; 3011
LDF    2815         ;  @waveFromEdgeToNearestEdges ; 3012
AP     7             ; 3013
ST     0 4           ; 3014
LD     0 4          ; var dests ; 3015
LDF    10030        ;  @lambda_1029 ; 3016
LDF    69           ;  @map ; 3017
AP     2             ; 3018
ST     0 5           ; 3019
LD     0 5          ; var scores ; 3020
LDF    10054        ;  @lambda_1030 ; 3021
LDF    335          ;  @maximum_by ; 3022
AP     2             ; 3023
ST     0 6           ; 3024
LD     0 6          ; var winningRoute ; 3025
CAR                 ; generateTupleAccess total=2 pos=0 ; 3026
LDF    299          ;  @reverse ; 3027
AP     1             ; 3028
CAR                  ; 3029
ST     0 7           ; 3030
LD     0 7          ; var myStart ; 3031
RTN                  ; 3032
LD     0 0          ;  <== createInitialState  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 3033
CDR                 ; generateTupleAccess total=4 pos=2 ; 3034
CDR                  ; 3035
CAR                  ; 3036
LDF    532          ;  @length ; 3037
AP     1             ; 3038
LDF    777          ;  @range_n ; 3039
AP     1             ; 3040
ST     0 2           ; 3041
LD     0 0          ; var ws ; 3042
CAR                 ; generateTupleAccess total=4 pos=0 ; 3043
LDF    3590         ;  @parseStaticMap ; 3044
AP     1             ; 3045
LDC    0            ; just constant from code ; 3046
LDC    0            ; just constant from code ; 3047
LDF    9849         ;  @lambda_1016 ; 3048
LD     0 0          ; var ws ; 3049
CDR                 ; generateTupleAccess total=4 pos=2 ; 3050
CDR                  ; 3051
CAR                  ; 3052
LD     0 1          ; var ghostSpecs ; 3053
LD     0 2          ; var ghostNumbers ; 3054
LDF    687          ;  @zip3_with ; 3055
AP     4             ; 3056
CONS                 ; 3057
CONS                 ; 3058
CONS                 ; 3059
RTN                  ; 3060
LD     0 0          ;  <== isWall  [int test] (as blk) ; 3061
LDC    0            ; Named Const = CT.WALL ; 3062
CEQ                  ; 3063
SEL    3066 3068    ; IF? 57 ; 3064
RTN                  ; 3065
LDC    1            ; THEN: 57 ; 3066
JOIN                 ; 3067
LDC    0            ; ELSE: 57 ; 3068
JOIN                 ; 3069
LDC    77           ;  <== isWalkable  [int test] (as blk) ; 3070
ST     0 1           ; 3071
LD     0 0          ; var test ; 3072
LDC    0            ; Named Const = CT.WALL ; 3073
CEQ                  ; 3074
SEL    3078 3081     ; 3075
LD     0 1          ; var retval ; 3076
RTN                  ; 3077
LDC    0            ; branch@3078 ; 3078
ST     0 1           ; 3079
JOIN                 ; 3080
LDC    1            ; branch@3081 ; 3081
ST     0 1           ; 3082
JOIN                 ; 3083
LD     0 0          ;  <== isWalkable2  [ListCons<ListCons<Integer>> map, Point p] (as blk) ; 3084
LD     0 1          ; var p ; 3085
CDR                 ; generateTupleAccess total=2 pos=1 ; 3086
LD     0 1          ; var p ; 3087
CAR                 ; generateTupleAccess total=2 pos=0 ; 3088
LDF    3664         ;  @getMapItem ; 3089
AP     3             ; 3090
LDC 0               ; local var space ; 3091
LDF    3070         ;  @isWalkable ; 3092
AP     2             ; 3093
RTN                  ; 3094
LD     0 0          ;  <== isWalkable3  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 3095
LD     0 2          ; var y ; 3096
LD     0 1          ; var x ; 3097
LDF    3664         ;  @getMapItem ; 3098
AP     3             ; 3099
LDC 0               ; local var space ; 3100
LDF    3070         ;  @isWalkable ; 3101
AP     2             ; 3102
RTN                  ; 3103
LD     0 0          ;  <== isJunction  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 3104
LD     0 2          ; var y ; 3105
LDC    1            ; just constant from code ; 3106
SUB                  ; 3107
LD     0 1          ; var x ; 3108
LDF    3664         ;  @getMapItem ; 3109
AP     3             ; 3110
LDC 0               ; local var space ; 3111
LDF    3070         ;  @isWalkable ; 3112
AP     2             ; 3113
ST     0 3           ; 3114
LD     0 0          ; var map ; 3115
LD     0 2          ; var y ; 3116
LDC    1            ; just constant from code ; 3117
ADD                  ; 3118
LD     0 1          ; var x ; 3119
LDF    3664         ;  @getMapItem ; 3120
AP     3             ; 3121
LDC 0               ; local var space ; 3122
LDF    3070         ;  @isWalkable ; 3123
AP     2             ; 3124
ST     0 4           ; 3125
LD     0 0          ; var map ; 3126
LD     0 2          ; var y ; 3127
LD     0 1          ; var x ; 3128
LDC    1            ; just constant from code ; 3129
SUB                  ; 3130
LDF    3664         ;  @getMapItem ; 3131
AP     3             ; 3132
LDC 0               ; local var space ; 3133
LDF    3070         ;  @isWalkable ; 3134
AP     2             ; 3135
ST     0 5           ; 3136
LD     0 0          ; var map ; 3137
LD     0 2          ; var y ; 3138
LD     0 1          ; var x ; 3139
LDC    1            ; just constant from code ; 3140
ADD                  ; 3141
LDF    3664         ;  @getMapItem ; 3142
AP     3             ; 3143
LDC 0               ; local var space ; 3144
LDF    3070         ;  @isWalkable ; 3145
AP     2             ; 3146
ST     0 6           ; 3147
LD     0 3          ; var a1 ; 3148
LD     0 4          ; var a2 ; 3149
ADD                  ; 3150
LD     0 5          ; var a3 ; 3151
ADD                  ; 3152
LD     0 6          ; var a4 ; 3153
ADD                  ; 3154
LDC    2            ; just constant from code ; 3155
CGT                  ; 3156
SEL    3159 3161    ; IF? 59 ; 3157
RTN                  ; 3158
LDC    1            ; THEN: 59 ; 3159
JOIN                 ; 3160
LDC    0            ; ELSE: 59 ; 3161
JOIN                 ; 3162
LD     0 0          ;  <== isDeadEnd  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 3163
LD     0 2          ; var y ; 3164
LDC    1            ; just constant from code ; 3165
SUB                  ; 3166
LD     0 1          ; var x ; 3167
LDF    3664         ;  @getMapItem ; 3168
AP     3             ; 3169
LDC 0               ; local var space ; 3170
LDF    3070         ;  @isWalkable ; 3171
AP     2             ; 3172
ST     0 3           ; 3173
LD     0 0          ; var map ; 3174
LD     0 2          ; var y ; 3175
LDC    1            ; just constant from code ; 3176
ADD                  ; 3177
LD     0 1          ; var x ; 3178
LDF    3664         ;  @getMapItem ; 3179
AP     3             ; 3180
LDC 0               ; local var space ; 3181
LDF    3070         ;  @isWalkable ; 3182
AP     2             ; 3183
ST     0 4           ; 3184
LD     0 0          ; var map ; 3185
LD     0 2          ; var y ; 3186
LD     0 1          ; var x ; 3187
LDC    1            ; just constant from code ; 3188
SUB                  ; 3189
LDF    3664         ;  @getMapItem ; 3190
AP     3             ; 3191
LDC 0               ; local var space ; 3192
LDF    3070         ;  @isWalkable ; 3193
AP     2             ; 3194
ST     0 5           ; 3195
LD     0 0          ; var map ; 3196
LD     0 2          ; var y ; 3197
LD     0 1          ; var x ; 3198
LDC    1            ; just constant from code ; 3199
ADD                  ; 3200
LDF    3664         ;  @getMapItem ; 3201
AP     3             ; 3202
LDC 0               ; local var space ; 3203
LDF    3070         ;  @isWalkable ; 3204
AP     2             ; 3205
ST     0 6           ; 3206
LD     0 3          ; var a1 ; 3207
LD     0 4          ; var a2 ; 3208
ADD                  ; 3209
LD     0 5          ; var a3 ; 3210
ADD                  ; 3211
LD     0 6          ; var a4 ; 3212
ADD                  ; 3213
LDC    1            ; just constant from code ; 3214
CEQ                  ; 3215
SEL    3218 3220    ; IF? 60 ; 3216
RTN                  ; 3217
LDC    1            ; THEN: 60 ; 3218
JOIN                 ; 3219
LDC    0            ; ELSE: 60 ; 3220
JOIN                 ; 3221
LD     0 0          ;  <== findNeighbourJunctions  [ListCons<ListCons<Integer>> map, Point somePoint, SortedMap<Point> allJunctions, ListCons<Point> allJunctions2, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 3222
LDF    403          ;  @queue_new ; 3223
AP     0             ; 3224
LD     0 1          ; var somePoint ; 3225
LDC    0            ; NULL literal ; 3226
CONS                 ; 3227
LDF    407          ;  @queue_enqueue ; 3228
AP     2             ; 3229
LD     0 2          ; var allJunctions ; 3230
LD     0 3          ; var allJunctions2 ; 3231
LDC    0            ; NULL literal ; 3232
LDC    0            ; just constant from code ; 3233
CONS                 ; 3234
LD     0 1          ; var somePoint ; 3235
LDF    3291         ;  @getPointKey ; 3236
AP     1             ; 3237
LD     0 1          ; var somePoint ; 3238
LDF    1308         ;  @sorted_map_assoc ; 3239
AP     3             ; 3240
LDC    0            ; NULL literal ; 3241
LDC 0               ; local var space ; 3242
LDF    3259         ;  @waveFromPointToNearestJunction ; 3243
AP     7             ; 3244
ST     0 5           ; 3245
LD     0 5          ; var allNeighbourJunctionsPaths ; 3246
LDF    10154        ;  @lambda_1040 ; 3247
LDF    69           ;  @map ; 3248
AP     2             ; 3249
RTN                  ; 3250
LD     0 0          ;  <== makeEdgeAccess  [ListCons<Point> p, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 3251
LDF    10178        ;  @lambda_1041 ; 3252
LDF    69           ;  @map ; 3253
AP     2             ; 3254
LD     0 0          ; var p ; 3255
LDF    724          ;  @zip ; 3256
AP     2             ; 3257
RTN                  ; 3258
LD     0 1          ;  <== waveFromPointToNearestJunction  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 3259
LDF    415          ;  @queue_isempty ; 3260
AP     1             ; 3261
SEL    3265 3268     ; 3262
LD     0 6          ; var retval ; 3263
RTN                  ; 3264
LD     0 5          ; branch@3265 ; 3265
ST     0 6           ; 3266
JOIN                 ; 3267
LD     0 0          ; branch@3268 ; 3268
LD     0 1          ; var pointQueue ; 3269
LD     0 2          ; var destinations ; 3270
LD     0 3          ; var destinations2 ; 3271
LD     0 4          ; var visited ; 3272
LD     0 5          ; var acc ; 3273
LDC 0               ; local var space ; 3274
LDC 0               ; local var space ; 3275
LDC 0               ; local var space ; 3276
LDC 0               ; local var space ; 3277
LDC 0               ; local var space ; 3278
LDC 0               ; local var space ; 3279
LDC 0               ; local var space ; 3280
LDC 0               ; local var space ; 3281
LDC 0               ; local var space ; 3282
LDC 0               ; local var space ; 3283
LDC 0               ; local var space ; 3284
LDC 0               ; local var space ; 3285
LDC 0               ; local var space ; 3286
LDF    3304         ;  @waveFromPointToNearestJunction0 ; 3287
AP     19            ; 3288
ST     0 6           ; 3289
JOIN                 ; 3290
LD     0 0          ;  <== getPointKey  [Point pt] (as blk) ; 3291
CAR                 ; generateTupleAccess total=2 pos=0 ; 3292
LDC    300          ; just constant from code ; 3293
MUL                  ; 3294
LD     0 0          ; var pt ; 3295
CDR                 ; generateTupleAccess total=2 pos=1 ; 3296
ADD                  ; 3297
RTN                  ; 3298
LD     0 0          ;  <== addPointKeyAll  [ListCons<Point> in] (as blk) ; 3299
LDF    9761         ;  @lambda_1012 ; 3300
LDF    69           ;  @map ; 3301
AP     2             ; 3302
RTN                  ; 3303
LD     0 1          ;  <== waveFromPointToNearestJunction0  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 3304
LDC 0               ; local var space ; 3305
LDF    492          ;  @queue_dequeue ; 3306
AP     2             ; 3307
ST     0 7           ; 3308
LD     0 7          ; var emptier ; 3309
CAR                 ; generateTupleAccess total=2 pos=0 ; 3310
ST     0 8           ; 3311
LD     0 8          ; var thisRoute ; 3312
CAR                  ; 3313
ST     0 9           ; 3314
LD     0 9          ; var weAreHere ; 3315
CAR                 ; generateTupleAccess total=2 pos=0 ; 3316
LDC    1            ; just constant from code ; 3317
ADD                  ; 3318
LD     0 9          ; var weAreHere ; 3319
CDR                 ; generateTupleAccess total=2 pos=1 ; 3320
CONS                 ; 3321
LD     0 9          ; var weAreHere ; 3322
CAR                 ; generateTupleAccess total=2 pos=0 ; 3323
LDC    1            ; just constant from code ; 3324
SUB                  ; 3325
LD     0 9          ; var weAreHere ; 3326
CDR                 ; generateTupleAccess total=2 pos=1 ; 3327
CONS                 ; 3328
LD     0 9          ; var weAreHere ; 3329
CAR                 ; generateTupleAccess total=2 pos=0 ; 3330
LD     0 9          ; var weAreHere ; 3331
CDR                 ; generateTupleAccess total=2 pos=1 ; 3332
LDC    1            ; just constant from code ; 3333
ADD                  ; 3334
CONS                 ; 3335
LD     0 9          ; var weAreHere ; 3336
CAR                 ; generateTupleAccess total=2 pos=0 ; 3337
LD     0 9          ; var weAreHere ; 3338
CDR                 ; generateTupleAccess total=2 pos=1 ; 3339
LDC    1            ; just constant from code ; 3340
SUB                  ; 3341
CONS                 ; 3342
LDC    0            ; NULL literal ; 3343
CONS                 ; 3344
CONS                 ; 3345
CONS                 ; 3346
CONS                 ; 3347
LDF    3299         ;  @addPointKeyAll ; 3348
AP     1             ; 3349
ST     0 10          ; 3350
LD     0 10         ; var possibleDestinations ; 3351
LDF    10188        ;  @lambda_1042 ; 3352
LDF    537          ;  @filter ; 3353
AP     2             ; 3354
ST     0 11          ; 3355
LD     0 11         ; var exits ; 3356
LDF    10202        ;  @lambda_1043 ; 3357
LDF    537          ;  @filter ; 3358
AP     2             ; 3359
ST     0 12          ; 3360
LD     0 11         ; var exits ; 3361
LDF    10208        ;  @lambda_1044 ; 3362
LDF    537          ;  @filter ; 3363
AP     2             ; 3364
ST     0 13          ; 3365
LDC    0            ; NULL literal ; 3366
LDC    1            ; just constant from code ; 3367
CONS                 ; 3368
LD     0 12         ; var arrivedsList ; 3369
LDF    1317         ;  @sorted_map_assoc_all ; 3370
AP     2             ; 3371
ST     0 14          ; 3372
LD     0 11         ; var exits ; 3373
LDF    10213        ;  @lambda_1045 ; 3374
LDF    537          ;  @filter ; 3375
AP     2             ; 3376
ST     0 15          ; 3377
LD     0 15         ; var continueds ; 3378
LDF    10221        ;  @lambda_1046 ; 3379
LDF    69           ;  @map ; 3380
AP     2             ; 3381
ST     0 16          ; 3382
LD     0 16         ; var exitRoutes ; 3383
LD     0 7          ; var emptier ; 3384
CDR                 ; generateTupleAccess total=2 pos=1 ; 3385
LDF    10226        ;  @lambda_1047 ; 3386
LDF    386          ;  @fold0 ; 3387
AP     3             ; 3388
ST     0 17          ; 3389
LD     0 5          ; var acc ; 3390
LD     0 12         ; var arrivedsList ; 3391
LDF    10231        ;  @lambda_1048 ; 3392
LDF    69           ;  @map ; 3393
AP     2             ; 3394
LDF    184          ;  @concat2_set ; 3395
AP     2             ; 3396
ST     0 18          ; 3397
LD     0 12         ; var arrivedsList ; 3398
LDF    532          ;  @length ; 3399
AP     1             ; 3400
LD     0 13         ; var arrivedsList2 ; 3401
LDF    532          ;  @length ; 3402
AP     1             ; 3403
CEQ                  ; 3404
LDC    1            ; for negation ; 3405
SUB                  ; 3406
SEL    3423 3442     ; 3407
LD     0 0          ; var map ; 3408
LD     0 17         ; var filledQueue ; 3409
LD     0 2          ; var destinations ; 3410
LD     0 3          ; var destinations2 ; 3411
LD     0 4          ; var visited ; 3412
LD     0 11         ; var exits ; 3413
LDF    1317         ;  @sorted_map_assoc_all ; 3414
AP     2             ; 3415
LD     0 18         ; var newacc ; 3416
LDC 0               ; local var space ; 3417
LDF    3259         ;  @waveFromPointToNearestJunction ; 3418
AP     7             ; 3419
ST     0 6           ; 3420
LD     0 6          ; var retval ; 3421
RTN                  ; 3422
LDC    5000000      ; branch@3423 ; 3423
DBUG                 ; 3424
LD     0 2          ; var destinations ; 3425
DBUG                 ; 3426
LD     0 3          ; var destinations2 ; 3427
DBUG                 ; 3428
LD     0 12         ; var arrivedsList ; 3429
DBUG                 ; 3430
LD     0 13         ; var arrivedsList2 ; 3431
DBUG                 ; 3432
LD     0 11         ; var exits ; 3433
DBUG                 ; 3434
BRK                  ; 3435
LD     0 11         ; var exits ; 3436
LDF    10324        ;  @lambda_1057 ; 3437
LDF    537          ;  @filter ; 3438
AP     2             ; 3439
DBUG                 ; 3440
JOIN                 ; 3441
JOIN                ; branch@3442 ; 3442
LD     0 0          ;  <== findEdgesForPoint  [AIState state, Point pos] (as blk) ; 3443
CAR                 ; generateTupleAccess total=4 pos=0 ; 3444
CDR                 ; generateTupleAccess total=6 pos=2 ; 3445
CDR                  ; 3446
CAR                  ; 3447
LDF    10008        ;  @lambda_1026 ; 3448
LDF    537          ;  @filter ; 3449
AP     2             ; 3450
RTN                  ; 3451
LD     0 1          ;  <== pointInEdge  [Point pos, ParsedEdge e] (as blk) ; 3452
CDR                 ; generateTupleAccess total=7 pos=2 ; 3453
CDR                  ; 3454
CAR                  ; 3455
LDF    10236        ;  @lambda_1049 ; 3456
LDF    545          ;  @any ; 3457
AP     2             ; 3458
RTN                  ; 3459
LDC    4000001      ;  <== parseMap  [ListCons<ListCons<Integer>> m] (as blk) ; 3460
DBUG                 ; 3461
LD     0 0          ; var m ; 3462
LDF    9727         ;  @lambda_1007 ; 3463
LDF    69           ;  @map ; 3464
AP     2             ; 3465
ST     0 1           ; 3466
LDC    4000002      ; just constant from code ; 3467
DBUG                 ; 3468
LDF    9730         ;  @lambda_1008 ; 3469
LD     0 0          ; var m ; 3470
LD     0 1          ; var accessors ; 3471
LDF    660          ;  @zip_with ; 3472
AP     3             ; 3473
ST     0 2           ; 3474
LDC    4000003      ; just constant from code ; 3475
DBUG                 ; 3476
LD     0 2          ; var mapAccessors ; 3477
LDF    9734         ;  @lambda_1009 ; 3478
LDF    69           ;  @map ; 3479
AP     2             ; 3480
ST     0 3           ; 3481
LDC    4000004      ; just constant from code ; 3482
DBUG                 ; 3483
LD     0 0          ; var m ; 3484
LDC    0            ; just constant from code ; 3485
LDF    9741         ;  @lambda_1010 ; 3486
LDF    86           ;  @mapi ; 3487
AP     3             ; 3488
ST     0 4           ; 3489
LDC    4000005      ; just constant from code ; 3490
DBUG                 ; 3491
LD     0 4          ; var toConcat ; 3492
LDF    118          ;  @concat ; 3493
AP     1             ; 3494
ST     0 5           ; 3495
LD     0 5          ; var walkableList ; 3496
LDF    9749         ;  @lambda_1011 ; 3497
LDF    537          ;  @filter ; 3498
AP     2             ; 3499
ST     0 6           ; 3500
LDC    4000006      ; just constant from code ; 3501
DBUG                 ; 3502
LDC    0            ; NULL literal ; 3503
LDC    0            ; just constant from code ; 3504
CONS                 ; 3505
LD     0 5          ; var walkableList ; 3506
LDF    3299         ;  @addPointKeyAll ; 3507
AP     1             ; 3508
LDF    1317         ;  @sorted_map_assoc_all ; 3509
AP     2             ; 3510
ST     0 7           ; 3511
LDC    4000007      ; just constant from code ; 3512
DBUG                 ; 3513
LDC    0            ; NULL literal ; 3514
LDC    0            ; just constant from code ; 3515
CONS                 ; 3516
LD     0 6          ; var junctionsList ; 3517
LDF    3299         ;  @addPointKeyAll ; 3518
AP     1             ; 3519
LDF    1317         ;  @sorted_map_assoc_all ; 3520
AP     2             ; 3521
ST     0 8           ; 3522
LDC    4000008      ; just constant from code ; 3523
DBUG                 ; 3524
LD     0 6          ; var junctionsList ; 3525
LDF    9767         ;  @lambda_1013 ; 3526
LDF    69           ;  @map ; 3527
AP     2             ; 3528
LDF    118          ;  @concat ; 3529
AP     1             ; 3530
ST     0 9           ; 3531
LDC    4000009      ; just constant from code ; 3532
DBUG                 ; 3533
LD     0 9          ; var allParsedEdges ; 3534
LDC    0            ; just constant from code ; 3535
LDF    9776         ;  @lambda_1014 ; 3536
LDF    86           ;  @mapi ; 3537
AP     3             ; 3538
ST     0 10          ; 3539
LDC    4000010      ; just constant from code ; 3540
DBUG                 ; 3541
LD     0 10         ; var allParsedEdges2 ; 3542
LDC    0            ; just constant from code ; 3543
LDF    9805         ;  @lambda_1015 ; 3544
LDF    86           ;  @mapi ; 3545
AP     3             ; 3546
ST     0 11          ; 3547
LDC    4000011      ; just constant from code ; 3548
DBUG                 ; 3549
LD     0 7          ; var walkable ; 3550
LD     0 8          ; var junctions ; 3551
LD     0 11         ; var allParsedEdges3 ; 3552
LDC    0            ; NULL literal ; 3553
LDC    0            ; NULL literal ; 3554
LD     0 1          ; var accessors ; 3555
CONS                 ; 3556
CONS                 ; 3557
CONS                 ; 3558
CONS                 ; 3559
CONS                 ; 3560
RTN                  ; 3561
LD     0 2          ;  <== findEdge  [Point a, Point b, ListCons<ParsedEdge> edges] (as blk) ; 3562
LDF    10253        ;  @lambda_1050 ; 3563
LDF    537          ;  @filter ; 3564
AP     2             ; 3565
CAR                  ; 3566
RTN                  ; 3567
LD     0 0          ;  <== edgeNumber  [ParsedEdge edge] (as blk) ; 3568
CDR                 ; generateTupleAccess total=7 pos=5 ; 3569
CDR                  ; 3570
CDR                  ; 3571
CDR                  ; 3572
CDR                  ; 3573
CAR                  ; 3574
RTN                  ; 3575
LD     0 0          ;  <== my_cat_maybes  [ListCons<Maybe<Point>> maybeListCons] (as blk) ; 3576
LDC 0               ; local var space ; 3577
LDC 0               ; local var space ; 3578
LDF    107          ;  @cat_maybes ; 3579
AP     3             ; 3580
ST     0 1           ; 3581
LD     0 1          ; var rv ; 3582
RTN                  ; 3583
LD     0 0          ;  <== collectWalkableXY  [ListCons<Integer> row, Integer rowy] (as blk) ; 3584
LDC    0            ; just constant from code ; 3585
LDF    10266        ;  @lambda_1051 ; 3586
LDF    86           ;  @mapi ; 3587
AP     3             ; 3588
RTN                  ; 3589
LD     0 0          ;  <== parseStaticMap  [ListCons<ListCons<Integer>> map] (as blk) ; 3590
LDC 0               ; local var space ; 3591
LDC 0               ; local var space ; 3592
LDC 0               ; local var space ; 3593
LDC 0               ; local var space ; 3594
LDC 0               ; local var space ; 3595
LDC 0               ; local var space ; 3596
LDC 0               ; local var space ; 3597
LDC 0               ; local var space ; 3598
LDC 0               ; local var space ; 3599
LDC 0               ; local var space ; 3600
LDC 0               ; local var space ; 3601
LDF    3460         ;  @parseMap ; 3602
AP     12            ; 3603
RTN                  ; 3604
LDF    403          ;  <== test2  [] (as blk), ALSO: @queue_new ; 3605
AP     0             ; 3606
LDC    1            ; just constant from code ; 3607
LDF    407          ;  @queue_enqueue ; 3608
AP     2             ; 3609
LDC    2            ; just constant from code ; 3610
LDF    407          ;  @queue_enqueue ; 3611
AP     2             ; 3612
LDC    3            ; just constant from code ; 3613
LDF    407          ;  @queue_enqueue ; 3614
AP     2             ; 3615
ST     0 0           ; 3616
LD     0 0          ; var queue ; 3617
LDC 0               ; local var space ; 3618
LDF    492          ;  @queue_dequeue ; 3619
AP     2             ; 3620
ST     0 1           ; 3621
LD     0 1          ; var q1 ; 3622
CDR                 ; generateTupleAccess total=2 pos=1 ; 3623
LDC 0               ; local var space ; 3624
LDF    492          ;  @queue_dequeue ; 3625
AP     2             ; 3626
ST     0 1           ; 3627
LD     0 1          ; var q1 ; 3628
CDR                 ; generateTupleAccess total=2 pos=1 ; 3629
LDC 0               ; local var space ; 3630
LDF    492          ;  @queue_dequeue ; 3631
AP     2             ; 3632
ST     0 1           ; 3633
LDC    1            ; just constant from code ; 3634
RTN                  ; 3635
LDC    0            ;  <== test3  [] (as blk) ; 3636
LDC    0            ; just constant from code ; 3637
CONS                 ; 3638
ST     0 0           ; 3639
LD     0 0          ; var map ; 3640
LDC    30           ; just constant from code ; 3641
LDC    31           ; just constant from code ; 3642
LDF    1308         ;  @sorted_map_assoc ; 3643
AP     3             ; 3644
LDC    20           ; just constant from code ; 3645
LDC    21           ; just constant from code ; 3646
LDF    1308         ;  @sorted_map_assoc ; 3647
AP     3             ; 3648
LDC    10           ; just constant from code ; 3649
LDC    11           ; just constant from code ; 3650
LDF    1308         ;  @sorted_map_assoc ; 3651
AP     3             ; 3652
ST     0 1           ; 3653
LD     0 1          ; var new_map2 ; 3654
LDC    20           ; just constant from code ; 3655
LDC    33           ; just constant from code ; 3656
LDF    1308         ;  @sorted_map_assoc ; 3657
AP     3             ; 3658
LDC    20           ; just constant from code ; 3659
LDC    88           ; just constant from code ; 3660
LDF    1292         ;  @sorted_map_get ; 3661
AP     3             ; 3662
RTN                  ; 3663
LDC    0            ;  <== getMapItem  [ListCons<ListCons<Integer>> map, int y, int x] (as blk) ; 3664
LD     0 1          ; var y ; 3665
CGT                  ; 3666
LDC    0            ; just constant from code ; 3667
LD     0 2          ; var x ; 3668
CGT                  ; 3669
ADD                  ; 3670
SEL    3673 3675    ; IF? 58 ; 3671
RTN                  ; 3672
LDC    0            ; THEN: 58 ; 3673
JOIN                 ; 3674
LD     0 0          ; ELSE: 58 ; 3675
LD     0 1          ; var y ; 3676
LDC    0            ; just constant from code ; 3677
LDF    469          ;  @list_item_def ; 3678
AP     3             ; 3679
LD     0 2          ; var x ; 3680
LDC    0            ; just constant from code ; 3681
LDF    469          ;  @list_item_def ; 3682
AP     3             ; 3683
JOIN                 ; 3684
LDC 0               ; generated from native: array_256 ; 3685
LDC 0                ; 3686
LDC 0                ; 3687
LDC 0                ; 3688
LDC 0                ; 3689
LDC 0                ; 3690
LDC 0                ; 3691
LDC 0                ; 3692
LDC 0                ; 3693
LDC 0                ; 3694
LDC 0                ; 3695
LDC 0                ; 3696
LDC 0                ; 3697
LDC 0                ; 3698
LDC 0                ; 3699
LDC 0                ; 3700
LDC 0                ; 3701
LDC 0                ; 3702
LDC 0                ; 3703
LDC 0                ; 3704
LDC 0                ; 3705
LDC 0                ; 3706
LDC 0                ; 3707
LDC 0                ; 3708
LDC 0                ; 3709
LDC 0                ; 3710
LDC 0                ; 3711
LDC 0                ; 3712
LDC 0                ; 3713
LDC 0                ; 3714
LDC 0                ; 3715
LDC 0                ; 3716
LDC 0                ; 3717
LDC 0                ; 3718
LDC 0                ; 3719
LDC 0                ; 3720
LDC 0                ; 3721
LDC 0                ; 3722
LDC 0                ; 3723
LDC 0                ; 3724
LDC 0                ; 3725
LDC 0                ; 3726
LDC 0                ; 3727
LDC 0                ; 3728
LDC 0                ; 3729
LDC 0                ; 3730
LDC 0                ; 3731
LDC 0                ; 3732
LDC 0                ; 3733
LDC 0                ; 3734
LDC 0                ; 3735
LDC 0                ; 3736
LDC 0                ; 3737
LDC 0                ; 3738
LDC 0                ; 3739
LDC 0                ; 3740
LDC 0                ; 3741
LDC 0                ; 3742
LDC 0                ; 3743
LDC 0                ; 3744
LDC 0                ; 3745
LDC 0                ; 3746
LDC 0                ; 3747
LDC 0                ; 3748
LDC 0                ; 3749
LDC 0                ; 3750
LDC 0                ; 3751
LDC 0                ; 3752
LDC 0                ; 3753
LDC 0                ; 3754
LDC 0                ; 3755
LDC 0                ; 3756
LDC 0                ; 3757
LDC 0                ; 3758
LDC 0                ; 3759
LDC 0                ; 3760
LDC 0                ; 3761
LDC 0                ; 3762
LDC 0                ; 3763
LDC 0                ; 3764
LDC 0                ; 3765
LDC 0                ; 3766
LDC 0                ; 3767
LDC 0                ; 3768
LDC 0                ; 3769
LDC 0                ; 3770
LDC 0                ; 3771
LDC 0                ; 3772
LDC 0                ; 3773
LDC 0                ; 3774
LDC 0                ; 3775
LDC 0                ; 3776
LDC 0                ; 3777
LDC 0                ; 3778
LDC 0                ; 3779
LDC 0                ; 3780
LDC 0                ; 3781
LDC 0                ; 3782
LDC 0                ; 3783
LDC 0                ; 3784
LDC 0                ; 3785
LDC 0                ; 3786
LDC 0                ; 3787
LDC 0                ; 3788
LDC 0                ; 3789
LDC 0                ; 3790
LDC 0                ; 3791
LDC 0                ; 3792
LDC 0                ; 3793
LDC 0                ; 3794
LDC 0                ; 3795
LDC 0                ; 3796
LDC 0                ; 3797
LDC 0                ; 3798
LDC 0                ; 3799
LDC 0                ; 3800
LDC 0                ; 3801
LDC 0                ; 3802
LDC 0                ; 3803
LDC 0                ; 3804
LDC 0                ; 3805
LDC 0                ; 3806
LDC 0                ; 3807
LDC 0                ; 3808
LDC 0                ; 3809
LDC 0                ; 3810
LDC 0                ; 3811
LDC 0                ; 3812
LDC 0                ; 3813
LDC 0                ; 3814
LDC 0                ; 3815
LDC 0                ; 3816
LDC 0                ; 3817
LDC 0                ; 3818
LDC 0                ; 3819
LDC 0                ; 3820
LDC 0                ; 3821
LDC 0                ; 3822
LDC 0                ; 3823
LDC 0                ; 3824
LDC 0                ; 3825
LDC 0                ; 3826
LDC 0                ; 3827
LDC 0                ; 3828
LDC 0                ; 3829
LDC 0                ; 3830
LDC 0                ; 3831
LDC 0                ; 3832
LDC 0                ; 3833
LDC 0                ; 3834
LDC 0                ; 3835
LDC 0                ; 3836
LDC 0                ; 3837
LDC 0                ; 3838
LDC 0                ; 3839
LDC 0                ; 3840
LDC 0                ; 3841
LDC 0                ; 3842
LDC 0                ; 3843
LDC 0                ; 3844
LDC 0                ; 3845
LDC 0                ; 3846
LDC 0                ; 3847
LDC 0                ; 3848
LDC 0                ; 3849
LDC 0                ; 3850
LDC 0                ; 3851
LDC 0                ; 3852
LDC 0                ; 3853
LDC 0                ; 3854
LDC 0                ; 3855
LDC 0                ; 3856
LDC 0                ; 3857
LDC 0                ; 3858
LDC 0                ; 3859
LDC 0                ; 3860
LDC 0                ; 3861
LDC 0                ; 3862
LDC 0                ; 3863
LDC 0                ; 3864
LDC 0                ; 3865
LDC 0                ; 3866
LDC 0                ; 3867
LDC 0                ; 3868
LDC 0                ; 3869
LDC 0                ; 3870
LDC 0                ; 3871
LDC 0                ; 3872
LDC 0                ; 3873
LDC 0                ; 3874
LDC 0                ; 3875
LDC 0                ; 3876
LDC 0                ; 3877
LDC 0                ; 3878
LDC 0                ; 3879
LDC 0                ; 3880
LDC 0                ; 3881
LDC 0                ; 3882
LDC 0                ; 3883
LDC 0                ; 3884
LDC 0                ; 3885
LDC 0                ; 3886
LDC 0                ; 3887
LDC 0                ; 3888
LDC 0                ; 3889
LDC 0                ; 3890
LDC 0                ; 3891
LDC 0                ; 3892
LDC 0                ; 3893
LDC 0                ; 3894
LDC 0                ; 3895
LDC 0                ; 3896
LDC 0                ; 3897
LDC 0                ; 3898
LDC 0                ; 3899
LDC 0                ; 3900
LDC 0                ; 3901
LDC 0                ; 3902
LDC 0                ; 3903
LDC 0                ; 3904
LDC 0                ; 3905
LDC 0                ; 3906
LDC 0                ; 3907
LDC 0                ; 3908
LDC 0                ; 3909
LDC 0                ; 3910
LDC 0                ; 3911
LDC 0                ; 3912
LDC 0                ; 3913
LDC 0                ; 3914
LDC 0                ; 3915
LDC 0                ; 3916
LDC 0                ; 3917
LDC 0                ; 3918
LDC 0                ; 3919
LDC 0                ; 3920
LDC 0                ; 3921
LDC 0                ; 3922
LDC 0                ; 3923
LDC 0                ; 3924
LDC 0                ; 3925
LDC 0                ; 3926
LDC 0                ; 3927
LDC 0                ; 3928
LDC 0                ; 3929
LDC 0                ; 3930
LDC 0                ; 3931
LDC 0                ; 3932
LDC 0                ; 3933
LDC 0                ; 3934
LDC 0                ; 3935
LDC 0                ; 3936
LDC 0                ; 3937
LDC 0                ; 3938
LDC 0                ; 3939
LDC 0                ; 3940
LDF 3944             ; 3941
AP 256               ; 3942
RTN                  ; 3943
LDF  3946            ; 3944
RTN                  ; 3945
LD  0   0            ; 3946
LDC 100              ; 3947
CEQ                  ; 3948
TSEL    3950 4976    ; 3949
LD  0   1            ; 3950
LDC 0                ; 3951
CEQ                  ; 3952
TSEL    6004 3954    ; 3953
LD  0   1            ; 3954
LDC 1                ; 3955
CEQ                  ; 3956
TSEL    6014 3958    ; 3957
LD  0   1            ; 3958
LDC 2                ; 3959
CEQ                  ; 3960
TSEL    6024 3962    ; 3961
LD  0   1            ; 3962
LDC 3                ; 3963
CEQ                  ; 3964
TSEL    6034 3966    ; 3965
LD  0   1            ; 3966
LDC 4                ; 3967
CEQ                  ; 3968
TSEL    6044 3970    ; 3969
LD  0   1            ; 3970
LDC 5                ; 3971
CEQ                  ; 3972
TSEL    6054 3974    ; 3973
LD  0   1            ; 3974
LDC 6                ; 3975
CEQ                  ; 3976
TSEL    6064 3978    ; 3977
LD  0   1            ; 3978
LDC 7                ; 3979
CEQ                  ; 3980
TSEL    6074 3982    ; 3981
LD  0   1            ; 3982
LDC 8                ; 3983
CEQ                  ; 3984
TSEL    6084 3986    ; 3985
LD  0   1            ; 3986
LDC 9                ; 3987
CEQ                  ; 3988
TSEL    6094 3990    ; 3989
LD  0   1            ; 3990
LDC 10               ; 3991
CEQ                  ; 3992
TSEL    6104 3994    ; 3993
LD  0   1            ; 3994
LDC 11               ; 3995
CEQ                  ; 3996
TSEL    6114 3998    ; 3997
LD  0   1            ; 3998
LDC 12               ; 3999
CEQ                  ; 4000
TSEL    6124 4002    ; 4001
LD  0   1            ; 4002
LDC 13               ; 4003
CEQ                  ; 4004
TSEL    6134 4006    ; 4005
LD  0   1            ; 4006
LDC 14               ; 4007
CEQ                  ; 4008
TSEL    6144 4010    ; 4009
LD  0   1            ; 4010
LDC 15               ; 4011
CEQ                  ; 4012
TSEL    6154 4014    ; 4013
LD  0   1            ; 4014
LDC 16               ; 4015
CEQ                  ; 4016
TSEL    6164 4018    ; 4017
LD  0   1            ; 4018
LDC 17               ; 4019
CEQ                  ; 4020
TSEL    6174 4022    ; 4021
LD  0   1            ; 4022
LDC 18               ; 4023
CEQ                  ; 4024
TSEL    6184 4026    ; 4025
LD  0   1            ; 4026
LDC 19               ; 4027
CEQ                  ; 4028
TSEL    6194 4030    ; 4029
LD  0   1            ; 4030
LDC 20               ; 4031
CEQ                  ; 4032
TSEL    6204 4034    ; 4033
LD  0   1            ; 4034
LDC 21               ; 4035
CEQ                  ; 4036
TSEL    6214 4038    ; 4037
LD  0   1            ; 4038
LDC 22               ; 4039
CEQ                  ; 4040
TSEL    6224 4042    ; 4041
LD  0   1            ; 4042
LDC 23               ; 4043
CEQ                  ; 4044
TSEL    6234 4046    ; 4045
LD  0   1            ; 4046
LDC 24               ; 4047
CEQ                  ; 4048
TSEL    6244 4050    ; 4049
LD  0   1            ; 4050
LDC 25               ; 4051
CEQ                  ; 4052
TSEL    6254 4054    ; 4053
LD  0   1            ; 4054
LDC 26               ; 4055
CEQ                  ; 4056
TSEL    6264 4058    ; 4057
LD  0   1            ; 4058
LDC 27               ; 4059
CEQ                  ; 4060
TSEL    6274 4062    ; 4061
LD  0   1            ; 4062
LDC 28               ; 4063
CEQ                  ; 4064
TSEL    6284 4066    ; 4065
LD  0   1            ; 4066
LDC 29               ; 4067
CEQ                  ; 4068
TSEL    6294 4070    ; 4069
LD  0   1            ; 4070
LDC 30               ; 4071
CEQ                  ; 4072
TSEL    6304 4074    ; 4073
LD  0   1            ; 4074
LDC 31               ; 4075
CEQ                  ; 4076
TSEL    6314 4078    ; 4077
LD  0   1            ; 4078
LDC 32               ; 4079
CEQ                  ; 4080
TSEL    6324 4082    ; 4081
LD  0   1            ; 4082
LDC 33               ; 4083
CEQ                  ; 4084
TSEL    6334 4086    ; 4085
LD  0   1            ; 4086
LDC 34               ; 4087
CEQ                  ; 4088
TSEL    6344 4090    ; 4089
LD  0   1            ; 4090
LDC 35               ; 4091
CEQ                  ; 4092
TSEL    6354 4094    ; 4093
LD  0   1            ; 4094
LDC 36               ; 4095
CEQ                  ; 4096
TSEL    6364 4098    ; 4097
LD  0   1            ; 4098
LDC 37               ; 4099
CEQ                  ; 4100
TSEL    6374 4102    ; 4101
LD  0   1            ; 4102
LDC 38               ; 4103
CEQ                  ; 4104
TSEL    6384 4106    ; 4105
LD  0   1            ; 4106
LDC 39               ; 4107
CEQ                  ; 4108
TSEL    6394 4110    ; 4109
LD  0   1            ; 4110
LDC 40               ; 4111
CEQ                  ; 4112
TSEL    6404 4114    ; 4113
LD  0   1            ; 4114
LDC 41               ; 4115
CEQ                  ; 4116
TSEL    6414 4118    ; 4117
LD  0   1            ; 4118
LDC 42               ; 4119
CEQ                  ; 4120
TSEL    6424 4122    ; 4121
LD  0   1            ; 4122
LDC 43               ; 4123
CEQ                  ; 4124
TSEL    6434 4126    ; 4125
LD  0   1            ; 4126
LDC 44               ; 4127
CEQ                  ; 4128
TSEL    6444 4130    ; 4129
LD  0   1            ; 4130
LDC 45               ; 4131
CEQ                  ; 4132
TSEL    6454 4134    ; 4133
LD  0   1            ; 4134
LDC 46               ; 4135
CEQ                  ; 4136
TSEL    6464 4138    ; 4137
LD  0   1            ; 4138
LDC 47               ; 4139
CEQ                  ; 4140
TSEL    6474 4142    ; 4141
LD  0   1            ; 4142
LDC 48               ; 4143
CEQ                  ; 4144
TSEL    6484 4146    ; 4145
LD  0   1            ; 4146
LDC 49               ; 4147
CEQ                  ; 4148
TSEL    6494 4150    ; 4149
LD  0   1            ; 4150
LDC 50               ; 4151
CEQ                  ; 4152
TSEL    6504 4154    ; 4153
LD  0   1            ; 4154
LDC 51               ; 4155
CEQ                  ; 4156
TSEL    6514 4158    ; 4157
LD  0   1            ; 4158
LDC 52               ; 4159
CEQ                  ; 4160
TSEL    6524 4162    ; 4161
LD  0   1            ; 4162
LDC 53               ; 4163
CEQ                  ; 4164
TSEL    6534 4166    ; 4165
LD  0   1            ; 4166
LDC 54               ; 4167
CEQ                  ; 4168
TSEL    6544 4170    ; 4169
LD  0   1            ; 4170
LDC 55               ; 4171
CEQ                  ; 4172
TSEL    6554 4174    ; 4173
LD  0   1            ; 4174
LDC 56               ; 4175
CEQ                  ; 4176
TSEL    6564 4178    ; 4177
LD  0   1            ; 4178
LDC 57               ; 4179
CEQ                  ; 4180
TSEL    6574 4182    ; 4181
LD  0   1            ; 4182
LDC 58               ; 4183
CEQ                  ; 4184
TSEL    6584 4186    ; 4185
LD  0   1            ; 4186
LDC 59               ; 4187
CEQ                  ; 4188
TSEL    6594 4190    ; 4189
LD  0   1            ; 4190
LDC 60               ; 4191
CEQ                  ; 4192
TSEL    6604 4194    ; 4193
LD  0   1            ; 4194
LDC 61               ; 4195
CEQ                  ; 4196
TSEL    6614 4198    ; 4197
LD  0   1            ; 4198
LDC 62               ; 4199
CEQ                  ; 4200
TSEL    6624 4202    ; 4201
LD  0   1            ; 4202
LDC 63               ; 4203
CEQ                  ; 4204
TSEL    6634 4206    ; 4205
LD  0   1            ; 4206
LDC 64               ; 4207
CEQ                  ; 4208
TSEL    6644 4210    ; 4209
LD  0   1            ; 4210
LDC 65               ; 4211
CEQ                  ; 4212
TSEL    6654 4214    ; 4213
LD  0   1            ; 4214
LDC 66               ; 4215
CEQ                  ; 4216
TSEL    6664 4218    ; 4217
LD  0   1            ; 4218
LDC 67               ; 4219
CEQ                  ; 4220
TSEL    6674 4222    ; 4221
LD  0   1            ; 4222
LDC 68               ; 4223
CEQ                  ; 4224
TSEL    6684 4226    ; 4225
LD  0   1            ; 4226
LDC 69               ; 4227
CEQ                  ; 4228
TSEL    6694 4230    ; 4229
LD  0   1            ; 4230
LDC 70               ; 4231
CEQ                  ; 4232
TSEL    6704 4234    ; 4233
LD  0   1            ; 4234
LDC 71               ; 4235
CEQ                  ; 4236
TSEL    6714 4238    ; 4237
LD  0   1            ; 4238
LDC 72               ; 4239
CEQ                  ; 4240
TSEL    6724 4242    ; 4241
LD  0   1            ; 4242
LDC 73               ; 4243
CEQ                  ; 4244
TSEL    6734 4246    ; 4245
LD  0   1            ; 4246
LDC 74               ; 4247
CEQ                  ; 4248
TSEL    6744 4250    ; 4249
LD  0   1            ; 4250
LDC 75               ; 4251
CEQ                  ; 4252
TSEL    6754 4254    ; 4253
LD  0   1            ; 4254
LDC 76               ; 4255
CEQ                  ; 4256
TSEL    6764 4258    ; 4257
LD  0   1            ; 4258
LDC 77               ; 4259
CEQ                  ; 4260
TSEL    6774 4262    ; 4261
LD  0   1            ; 4262
LDC 78               ; 4263
CEQ                  ; 4264
TSEL    6784 4266    ; 4265
LD  0   1            ; 4266
LDC 79               ; 4267
CEQ                  ; 4268
TSEL    6794 4270    ; 4269
LD  0   1            ; 4270
LDC 80               ; 4271
CEQ                  ; 4272
TSEL    6804 4274    ; 4273
LD  0   1            ; 4274
LDC 81               ; 4275
CEQ                  ; 4276
TSEL    6814 4278    ; 4277
LD  0   1            ; 4278
LDC 82               ; 4279
CEQ                  ; 4280
TSEL    6824 4282    ; 4281
LD  0   1            ; 4282
LDC 83               ; 4283
CEQ                  ; 4284
TSEL    6834 4286    ; 4285
LD  0   1            ; 4286
LDC 84               ; 4287
CEQ                  ; 4288
TSEL    6844 4290    ; 4289
LD  0   1            ; 4290
LDC 85               ; 4291
CEQ                  ; 4292
TSEL    6854 4294    ; 4293
LD  0   1            ; 4294
LDC 86               ; 4295
CEQ                  ; 4296
TSEL    6864 4298    ; 4297
LD  0   1            ; 4298
LDC 87               ; 4299
CEQ                  ; 4300
TSEL    6874 4302    ; 4301
LD  0   1            ; 4302
LDC 88               ; 4303
CEQ                  ; 4304
TSEL    6884 4306    ; 4305
LD  0   1            ; 4306
LDC 89               ; 4307
CEQ                  ; 4308
TSEL    6894 4310    ; 4309
LD  0   1            ; 4310
LDC 90               ; 4311
CEQ                  ; 4312
TSEL    6904 4314    ; 4313
LD  0   1            ; 4314
LDC 91               ; 4315
CEQ                  ; 4316
TSEL    6914 4318    ; 4317
LD  0   1            ; 4318
LDC 92               ; 4319
CEQ                  ; 4320
TSEL    6924 4322    ; 4321
LD  0   1            ; 4322
LDC 93               ; 4323
CEQ                  ; 4324
TSEL    6934 4326    ; 4325
LD  0   1            ; 4326
LDC 94               ; 4327
CEQ                  ; 4328
TSEL    6944 4330    ; 4329
LD  0   1            ; 4330
LDC 95               ; 4331
CEQ                  ; 4332
TSEL    6954 4334    ; 4333
LD  0   1            ; 4334
LDC 96               ; 4335
CEQ                  ; 4336
TSEL    6964 4338    ; 4337
LD  0   1            ; 4338
LDC 97               ; 4339
CEQ                  ; 4340
TSEL    6974 4342    ; 4341
LD  0   1            ; 4342
LDC 98               ; 4343
CEQ                  ; 4344
TSEL    6984 4346    ; 4345
LD  0   1            ; 4346
LDC 99               ; 4347
CEQ                  ; 4348
TSEL    6994 4350    ; 4349
LD  0   1            ; 4350
LDC 100              ; 4351
CEQ                  ; 4352
TSEL    7004 4354    ; 4353
LD  0   1            ; 4354
LDC 101              ; 4355
CEQ                  ; 4356
TSEL    7014 4358    ; 4357
LD  0   1            ; 4358
LDC 102              ; 4359
CEQ                  ; 4360
TSEL    7024 4362    ; 4361
LD  0   1            ; 4362
LDC 103              ; 4363
CEQ                  ; 4364
TSEL    7034 4366    ; 4365
LD  0   1            ; 4366
LDC 104              ; 4367
CEQ                  ; 4368
TSEL    7044 4370    ; 4369
LD  0   1            ; 4370
LDC 105              ; 4371
CEQ                  ; 4372
TSEL    7054 4374    ; 4373
LD  0   1            ; 4374
LDC 106              ; 4375
CEQ                  ; 4376
TSEL    7064 4378    ; 4377
LD  0   1            ; 4378
LDC 107              ; 4379
CEQ                  ; 4380
TSEL    7074 4382    ; 4381
LD  0   1            ; 4382
LDC 108              ; 4383
CEQ                  ; 4384
TSEL    7084 4386    ; 4385
LD  0   1            ; 4386
LDC 109              ; 4387
CEQ                  ; 4388
TSEL    7094 4390    ; 4389
LD  0   1            ; 4390
LDC 110              ; 4391
CEQ                  ; 4392
TSEL    7104 4394    ; 4393
LD  0   1            ; 4394
LDC 111              ; 4395
CEQ                  ; 4396
TSEL    7114 4398    ; 4397
LD  0   1            ; 4398
LDC 112              ; 4399
CEQ                  ; 4400
TSEL    7124 4402    ; 4401
LD  0   1            ; 4402
LDC 113              ; 4403
CEQ                  ; 4404
TSEL    7134 4406    ; 4405
LD  0   1            ; 4406
LDC 114              ; 4407
CEQ                  ; 4408
TSEL    7144 4410    ; 4409
LD  0   1            ; 4410
LDC 115              ; 4411
CEQ                  ; 4412
TSEL    7154 4414    ; 4413
LD  0   1            ; 4414
LDC 116              ; 4415
CEQ                  ; 4416
TSEL    7164 4418    ; 4417
LD  0   1            ; 4418
LDC 117              ; 4419
CEQ                  ; 4420
TSEL    7174 4422    ; 4421
LD  0   1            ; 4422
LDC 118              ; 4423
CEQ                  ; 4424
TSEL    7184 4426    ; 4425
LD  0   1            ; 4426
LDC 119              ; 4427
CEQ                  ; 4428
TSEL    7194 4430    ; 4429
LD  0   1            ; 4430
LDC 120              ; 4431
CEQ                  ; 4432
TSEL    7204 4434    ; 4433
LD  0   1            ; 4434
LDC 121              ; 4435
CEQ                  ; 4436
TSEL    7214 4438    ; 4437
LD  0   1            ; 4438
LDC 122              ; 4439
CEQ                  ; 4440
TSEL    7224 4442    ; 4441
LD  0   1            ; 4442
LDC 123              ; 4443
CEQ                  ; 4444
TSEL    7234 4446    ; 4445
LD  0   1            ; 4446
LDC 124              ; 4447
CEQ                  ; 4448
TSEL    7244 4450    ; 4449
LD  0   1            ; 4450
LDC 125              ; 4451
CEQ                  ; 4452
TSEL    7254 4454    ; 4453
LD  0   1            ; 4454
LDC 126              ; 4455
CEQ                  ; 4456
TSEL    7264 4458    ; 4457
LD  0   1            ; 4458
LDC 127              ; 4459
CEQ                  ; 4460
TSEL    7274 4462    ; 4461
LD  0   1            ; 4462
LDC 128              ; 4463
CEQ                  ; 4464
TSEL    7284 4466    ; 4465
LD  0   1            ; 4466
LDC 129              ; 4467
CEQ                  ; 4468
TSEL    7294 4470    ; 4469
LD  0   1            ; 4470
LDC 130              ; 4471
CEQ                  ; 4472
TSEL    7304 4474    ; 4473
LD  0   1            ; 4474
LDC 131              ; 4475
CEQ                  ; 4476
TSEL    7314 4478    ; 4477
LD  0   1            ; 4478
LDC 132              ; 4479
CEQ                  ; 4480
TSEL    7324 4482    ; 4481
LD  0   1            ; 4482
LDC 133              ; 4483
CEQ                  ; 4484
TSEL    7334 4486    ; 4485
LD  0   1            ; 4486
LDC 134              ; 4487
CEQ                  ; 4488
TSEL    7344 4490    ; 4489
LD  0   1            ; 4490
LDC 135              ; 4491
CEQ                  ; 4492
TSEL    7354 4494    ; 4493
LD  0   1            ; 4494
LDC 136              ; 4495
CEQ                  ; 4496
TSEL    7364 4498    ; 4497
LD  0   1            ; 4498
LDC 137              ; 4499
CEQ                  ; 4500
TSEL    7374 4502    ; 4501
LD  0   1            ; 4502
LDC 138              ; 4503
CEQ                  ; 4504
TSEL    7384 4506    ; 4505
LD  0   1            ; 4506
LDC 139              ; 4507
CEQ                  ; 4508
TSEL    7394 4510    ; 4509
LD  0   1            ; 4510
LDC 140              ; 4511
CEQ                  ; 4512
TSEL    7404 4514    ; 4513
LD  0   1            ; 4514
LDC 141              ; 4515
CEQ                  ; 4516
TSEL    7414 4518    ; 4517
LD  0   1            ; 4518
LDC 142              ; 4519
CEQ                  ; 4520
TSEL    7424 4522    ; 4521
LD  0   1            ; 4522
LDC 143              ; 4523
CEQ                  ; 4524
TSEL    7434 4526    ; 4525
LD  0   1            ; 4526
LDC 144              ; 4527
CEQ                  ; 4528
TSEL    7444 4530    ; 4529
LD  0   1            ; 4530
LDC 145              ; 4531
CEQ                  ; 4532
TSEL    7454 4534    ; 4533
LD  0   1            ; 4534
LDC 146              ; 4535
CEQ                  ; 4536
TSEL    7464 4538    ; 4537
LD  0   1            ; 4538
LDC 147              ; 4539
CEQ                  ; 4540
TSEL    7474 4542    ; 4541
LD  0   1            ; 4542
LDC 148              ; 4543
CEQ                  ; 4544
TSEL    7484 4546    ; 4545
LD  0   1            ; 4546
LDC 149              ; 4547
CEQ                  ; 4548
TSEL    7494 4550    ; 4549
LD  0   1            ; 4550
LDC 150              ; 4551
CEQ                  ; 4552
TSEL    7504 4554    ; 4553
LD  0   1            ; 4554
LDC 151              ; 4555
CEQ                  ; 4556
TSEL    7514 4558    ; 4557
LD  0   1            ; 4558
LDC 152              ; 4559
CEQ                  ; 4560
TSEL    7524 4562    ; 4561
LD  0   1            ; 4562
LDC 153              ; 4563
CEQ                  ; 4564
TSEL    7534 4566    ; 4565
LD  0   1            ; 4566
LDC 154              ; 4567
CEQ                  ; 4568
TSEL    7544 4570    ; 4569
LD  0   1            ; 4570
LDC 155              ; 4571
CEQ                  ; 4572
TSEL    7554 4574    ; 4573
LD  0   1            ; 4574
LDC 156              ; 4575
CEQ                  ; 4576
TSEL    7564 4578    ; 4577
LD  0   1            ; 4578
LDC 157              ; 4579
CEQ                  ; 4580
TSEL    7574 4582    ; 4581
LD  0   1            ; 4582
LDC 158              ; 4583
CEQ                  ; 4584
TSEL    7584 4586    ; 4585
LD  0   1            ; 4586
LDC 159              ; 4587
CEQ                  ; 4588
TSEL    7594 4590    ; 4589
LD  0   1            ; 4590
LDC 160              ; 4591
CEQ                  ; 4592
TSEL    7604 4594    ; 4593
LD  0   1            ; 4594
LDC 161              ; 4595
CEQ                  ; 4596
TSEL    7614 4598    ; 4597
LD  0   1            ; 4598
LDC 162              ; 4599
CEQ                  ; 4600
TSEL    7624 4602    ; 4601
LD  0   1            ; 4602
LDC 163              ; 4603
CEQ                  ; 4604
TSEL    7634 4606    ; 4605
LD  0   1            ; 4606
LDC 164              ; 4607
CEQ                  ; 4608
TSEL    7644 4610    ; 4609
LD  0   1            ; 4610
LDC 165              ; 4611
CEQ                  ; 4612
TSEL    7654 4614    ; 4613
LD  0   1            ; 4614
LDC 166              ; 4615
CEQ                  ; 4616
TSEL    7664 4618    ; 4617
LD  0   1            ; 4618
LDC 167              ; 4619
CEQ                  ; 4620
TSEL    7674 4622    ; 4621
LD  0   1            ; 4622
LDC 168              ; 4623
CEQ                  ; 4624
TSEL    7684 4626    ; 4625
LD  0   1            ; 4626
LDC 169              ; 4627
CEQ                  ; 4628
TSEL    7694 4630    ; 4629
LD  0   1            ; 4630
LDC 170              ; 4631
CEQ                  ; 4632
TSEL    7704 4634    ; 4633
LD  0   1            ; 4634
LDC 171              ; 4635
CEQ                  ; 4636
TSEL    7714 4638    ; 4637
LD  0   1            ; 4638
LDC 172              ; 4639
CEQ                  ; 4640
TSEL    7724 4642    ; 4641
LD  0   1            ; 4642
LDC 173              ; 4643
CEQ                  ; 4644
TSEL    7734 4646    ; 4645
LD  0   1            ; 4646
LDC 174              ; 4647
CEQ                  ; 4648
TSEL    7744 4650    ; 4649
LD  0   1            ; 4650
LDC 175              ; 4651
CEQ                  ; 4652
TSEL    7754 4654    ; 4653
LD  0   1            ; 4654
LDC 176              ; 4655
CEQ                  ; 4656
TSEL    7764 4658    ; 4657
LD  0   1            ; 4658
LDC 177              ; 4659
CEQ                  ; 4660
TSEL    7774 4662    ; 4661
LD  0   1            ; 4662
LDC 178              ; 4663
CEQ                  ; 4664
TSEL    7784 4666    ; 4665
LD  0   1            ; 4666
LDC 179              ; 4667
CEQ                  ; 4668
TSEL    7794 4670    ; 4669
LD  0   1            ; 4670
LDC 180              ; 4671
CEQ                  ; 4672
TSEL    7804 4674    ; 4673
LD  0   1            ; 4674
LDC 181              ; 4675
CEQ                  ; 4676
TSEL    7814 4678    ; 4677
LD  0   1            ; 4678
LDC 182              ; 4679
CEQ                  ; 4680
TSEL    7824 4682    ; 4681
LD  0   1            ; 4682
LDC 183              ; 4683
CEQ                  ; 4684
TSEL    7834 4686    ; 4685
LD  0   1            ; 4686
LDC 184              ; 4687
CEQ                  ; 4688
TSEL    7844 4690    ; 4689
LD  0   1            ; 4690
LDC 185              ; 4691
CEQ                  ; 4692
TSEL    7854 4694    ; 4693
LD  0   1            ; 4694
LDC 186              ; 4695
CEQ                  ; 4696
TSEL    7864 4698    ; 4697
LD  0   1            ; 4698
LDC 187              ; 4699
CEQ                  ; 4700
TSEL    7874 4702    ; 4701
LD  0   1            ; 4702
LDC 188              ; 4703
CEQ                  ; 4704
TSEL    7884 4706    ; 4705
LD  0   1            ; 4706
LDC 189              ; 4707
CEQ                  ; 4708
TSEL    7894 4710    ; 4709
LD  0   1            ; 4710
LDC 190              ; 4711
CEQ                  ; 4712
TSEL    7904 4714    ; 4713
LD  0   1            ; 4714
LDC 191              ; 4715
CEQ                  ; 4716
TSEL    7914 4718    ; 4717
LD  0   1            ; 4718
LDC 192              ; 4719
CEQ                  ; 4720
TSEL    7924 4722    ; 4721
LD  0   1            ; 4722
LDC 193              ; 4723
CEQ                  ; 4724
TSEL    7934 4726    ; 4725
LD  0   1            ; 4726
LDC 194              ; 4727
CEQ                  ; 4728
TSEL    7944 4730    ; 4729
LD  0   1            ; 4730
LDC 195              ; 4731
CEQ                  ; 4732
TSEL    7954 4734    ; 4733
LD  0   1            ; 4734
LDC 196              ; 4735
CEQ                  ; 4736
TSEL    7964 4738    ; 4737
LD  0   1            ; 4738
LDC 197              ; 4739
CEQ                  ; 4740
TSEL    7974 4742    ; 4741
LD  0   1            ; 4742
LDC 198              ; 4743
CEQ                  ; 4744
TSEL    7984 4746    ; 4745
LD  0   1            ; 4746
LDC 199              ; 4747
CEQ                  ; 4748
TSEL    7994 4750    ; 4749
LD  0   1            ; 4750
LDC 200              ; 4751
CEQ                  ; 4752
TSEL    8004 4754    ; 4753
LD  0   1            ; 4754
LDC 201              ; 4755
CEQ                  ; 4756
TSEL    8014 4758    ; 4757
LD  0   1            ; 4758
LDC 202              ; 4759
CEQ                  ; 4760
TSEL    8024 4762    ; 4761
LD  0   1            ; 4762
LDC 203              ; 4763
CEQ                  ; 4764
TSEL    8034 4766    ; 4765
LD  0   1            ; 4766
LDC 204              ; 4767
CEQ                  ; 4768
TSEL    8044 4770    ; 4769
LD  0   1            ; 4770
LDC 205              ; 4771
CEQ                  ; 4772
TSEL    8054 4774    ; 4773
LD  0   1            ; 4774
LDC 206              ; 4775
CEQ                  ; 4776
TSEL    8064 4778    ; 4777
LD  0   1            ; 4778
LDC 207              ; 4779
CEQ                  ; 4780
TSEL    8074 4782    ; 4781
LD  0   1            ; 4782
LDC 208              ; 4783
CEQ                  ; 4784
TSEL    8084 4786    ; 4785
LD  0   1            ; 4786
LDC 209              ; 4787
CEQ                  ; 4788
TSEL    8094 4790    ; 4789
LD  0   1            ; 4790
LDC 210              ; 4791
CEQ                  ; 4792
TSEL    8104 4794    ; 4793
LD  0   1            ; 4794
LDC 211              ; 4795
CEQ                  ; 4796
TSEL    8114 4798    ; 4797
LD  0   1            ; 4798
LDC 212              ; 4799
CEQ                  ; 4800
TSEL    8124 4802    ; 4801
LD  0   1            ; 4802
LDC 213              ; 4803
CEQ                  ; 4804
TSEL    8134 4806    ; 4805
LD  0   1            ; 4806
LDC 214              ; 4807
CEQ                  ; 4808
TSEL    8144 4810    ; 4809
LD  0   1            ; 4810
LDC 215              ; 4811
CEQ                  ; 4812
TSEL    8154 4814    ; 4813
LD  0   1            ; 4814
LDC 216              ; 4815
CEQ                  ; 4816
TSEL    8164 4818    ; 4817
LD  0   1            ; 4818
LDC 217              ; 4819
CEQ                  ; 4820
TSEL    8174 4822    ; 4821
LD  0   1            ; 4822
LDC 218              ; 4823
CEQ                  ; 4824
TSEL    8184 4826    ; 4825
LD  0   1            ; 4826
LDC 219              ; 4827
CEQ                  ; 4828
TSEL    8194 4830    ; 4829
LD  0   1            ; 4830
LDC 220              ; 4831
CEQ                  ; 4832
TSEL    8204 4834    ; 4833
LD  0   1            ; 4834
LDC 221              ; 4835
CEQ                  ; 4836
TSEL    8214 4838    ; 4837
LD  0   1            ; 4838
LDC 222              ; 4839
CEQ                  ; 4840
TSEL    8224 4842    ; 4841
LD  0   1            ; 4842
LDC 223              ; 4843
CEQ                  ; 4844
TSEL    8234 4846    ; 4845
LD  0   1            ; 4846
LDC 224              ; 4847
CEQ                  ; 4848
TSEL    8244 4850    ; 4849
LD  0   1            ; 4850
LDC 225              ; 4851
CEQ                  ; 4852
TSEL    8254 4854    ; 4853
LD  0   1            ; 4854
LDC 226              ; 4855
CEQ                  ; 4856
TSEL    8264 4858    ; 4857
LD  0   1            ; 4858
LDC 227              ; 4859
CEQ                  ; 4860
TSEL    8274 4862    ; 4861
LD  0   1            ; 4862
LDC 228              ; 4863
CEQ                  ; 4864
TSEL    8284 4866    ; 4865
LD  0   1            ; 4866
LDC 229              ; 4867
CEQ                  ; 4868
TSEL    8294 4870    ; 4869
LD  0   1            ; 4870
LDC 230              ; 4871
CEQ                  ; 4872
TSEL    8304 4874    ; 4873
LD  0   1            ; 4874
LDC 231              ; 4875
CEQ                  ; 4876
TSEL    8314 4878    ; 4877
LD  0   1            ; 4878
LDC 232              ; 4879
CEQ                  ; 4880
TSEL    8324 4882    ; 4881
LD  0   1            ; 4882
LDC 233              ; 4883
CEQ                  ; 4884
TSEL    8334 4886    ; 4885
LD  0   1            ; 4886
LDC 234              ; 4887
CEQ                  ; 4888
TSEL    8344 4890    ; 4889
LD  0   1            ; 4890
LDC 235              ; 4891
CEQ                  ; 4892
TSEL    8354 4894    ; 4893
LD  0   1            ; 4894
LDC 236              ; 4895
CEQ                  ; 4896
TSEL    8364 4898    ; 4897
LD  0   1            ; 4898
LDC 237              ; 4899
CEQ                  ; 4900
TSEL    8374 4902    ; 4901
LD  0   1            ; 4902
LDC 238              ; 4903
CEQ                  ; 4904
TSEL    8384 4906    ; 4905
LD  0   1            ; 4906
LDC 239              ; 4907
CEQ                  ; 4908
TSEL    8394 4910    ; 4909
LD  0   1            ; 4910
LDC 240              ; 4911
CEQ                  ; 4912
TSEL    8404 4914    ; 4913
LD  0   1            ; 4914
LDC 241              ; 4915
CEQ                  ; 4916
TSEL    8414 4918    ; 4917
LD  0   1            ; 4918
LDC 242              ; 4919
CEQ                  ; 4920
TSEL    8424 4922    ; 4921
LD  0   1            ; 4922
LDC 243              ; 4923
CEQ                  ; 4924
TSEL    8434 4926    ; 4925
LD  0   1            ; 4926
LDC 244              ; 4927
CEQ                  ; 4928
TSEL    8444 4930    ; 4929
LD  0   1            ; 4930
LDC 245              ; 4931
CEQ                  ; 4932
TSEL    8454 4934    ; 4933
LD  0   1            ; 4934
LDC 246              ; 4935
CEQ                  ; 4936
TSEL    8464 4938    ; 4937
LD  0   1            ; 4938
LDC 247              ; 4939
CEQ                  ; 4940
TSEL    8474 4942    ; 4941
LD  0   1            ; 4942
LDC 248              ; 4943
CEQ                  ; 4944
TSEL    8484 4946    ; 4945
LD  0   1            ; 4946
LDC 249              ; 4947
CEQ                  ; 4948
TSEL    8494 4950    ; 4949
LD  0   1            ; 4950
LDC 250              ; 4951
CEQ                  ; 4952
TSEL    8504 4954    ; 4953
LD  0   1            ; 4954
LDC 251              ; 4955
CEQ                  ; 4956
TSEL    8514 4958    ; 4957
LD  0   1            ; 4958
LDC 252              ; 4959
CEQ                  ; 4960
TSEL    8524 4962    ; 4961
LD  0   1            ; 4962
LDC 253              ; 4963
CEQ                  ; 4964
TSEL    8534 4966    ; 4965
LD  0   1            ; 4966
LDC 254              ; 4967
CEQ                  ; 4968
TSEL    8544 4970    ; 4969
LD  0   1            ; 4970
LDC 255              ; 4971
CEQ                  ; 4972
TSEL    8554 4974    ; 4973
LDC  0               ; 4974
RTN                  ; 4975
LD  0   1            ; 4976
LDC 0                ; 4977
CEQ                  ; 4978
TSEL    6010 4980    ; 4979
LD  0   1            ; 4980
LDC 1                ; 4981
CEQ                  ; 4982
TSEL    6020 4984    ; 4983
LD  0   1            ; 4984
LDC 2                ; 4985
CEQ                  ; 4986
TSEL    6030 4988    ; 4987
LD  0   1            ; 4988
LDC 3                ; 4989
CEQ                  ; 4990
TSEL    6040 4992    ; 4991
LD  0   1            ; 4992
LDC 4                ; 4993
CEQ                  ; 4994
TSEL    6050 4996    ; 4995
LD  0   1            ; 4996
LDC 5                ; 4997
CEQ                  ; 4998
TSEL    6060 5000    ; 4999
LD  0   1            ; 5000
LDC 6                ; 5001
CEQ                  ; 5002
TSEL    6070 5004    ; 5003
LD  0   1            ; 5004
LDC 7                ; 5005
CEQ                  ; 5006
TSEL    6080 5008    ; 5007
LD  0   1            ; 5008
LDC 8                ; 5009
CEQ                  ; 5010
TSEL    6090 5012    ; 5011
LD  0   1            ; 5012
LDC 9                ; 5013
CEQ                  ; 5014
TSEL    6100 5016    ; 5015
LD  0   1            ; 5016
LDC 10               ; 5017
CEQ                  ; 5018
TSEL    6110 5020    ; 5019
LD  0   1            ; 5020
LDC 11               ; 5021
CEQ                  ; 5022
TSEL    6120 5024    ; 5023
LD  0   1            ; 5024
LDC 12               ; 5025
CEQ                  ; 5026
TSEL    6130 5028    ; 5027
LD  0   1            ; 5028
LDC 13               ; 5029
CEQ                  ; 5030
TSEL    6140 5032    ; 5031
LD  0   1            ; 5032
LDC 14               ; 5033
CEQ                  ; 5034
TSEL    6150 5036    ; 5035
LD  0   1            ; 5036
LDC 15               ; 5037
CEQ                  ; 5038
TSEL    6160 5040    ; 5039
LD  0   1            ; 5040
LDC 16               ; 5041
CEQ                  ; 5042
TSEL    6170 5044    ; 5043
LD  0   1            ; 5044
LDC 17               ; 5045
CEQ                  ; 5046
TSEL    6180 5048    ; 5047
LD  0   1            ; 5048
LDC 18               ; 5049
CEQ                  ; 5050
TSEL    6190 5052    ; 5051
LD  0   1            ; 5052
LDC 19               ; 5053
CEQ                  ; 5054
TSEL    6200 5056    ; 5055
LD  0   1            ; 5056
LDC 20               ; 5057
CEQ                  ; 5058
TSEL    6210 5060    ; 5059
LD  0   1            ; 5060
LDC 21               ; 5061
CEQ                  ; 5062
TSEL    6220 5064    ; 5063
LD  0   1            ; 5064
LDC 22               ; 5065
CEQ                  ; 5066
TSEL    6230 5068    ; 5067
LD  0   1            ; 5068
LDC 23               ; 5069
CEQ                  ; 5070
TSEL    6240 5072    ; 5071
LD  0   1            ; 5072
LDC 24               ; 5073
CEQ                  ; 5074
TSEL    6250 5076    ; 5075
LD  0   1            ; 5076
LDC 25               ; 5077
CEQ                  ; 5078
TSEL    6260 5080    ; 5079
LD  0   1            ; 5080
LDC 26               ; 5081
CEQ                  ; 5082
TSEL    6270 5084    ; 5083
LD  0   1            ; 5084
LDC 27               ; 5085
CEQ                  ; 5086
TSEL    6280 5088    ; 5087
LD  0   1            ; 5088
LDC 28               ; 5089
CEQ                  ; 5090
TSEL    6290 5092    ; 5091
LD  0   1            ; 5092
LDC 29               ; 5093
CEQ                  ; 5094
TSEL    6300 5096    ; 5095
LD  0   1            ; 5096
LDC 30               ; 5097
CEQ                  ; 5098
TSEL    6310 5100    ; 5099
LD  0   1            ; 5100
LDC 31               ; 5101
CEQ                  ; 5102
TSEL    6320 5104    ; 5103
LD  0   1            ; 5104
LDC 32               ; 5105
CEQ                  ; 5106
TSEL    6330 5108    ; 5107
LD  0   1            ; 5108
LDC 33               ; 5109
CEQ                  ; 5110
TSEL    6340 5112    ; 5111
LD  0   1            ; 5112
LDC 34               ; 5113
CEQ                  ; 5114
TSEL    6350 5116    ; 5115
LD  0   1            ; 5116
LDC 35               ; 5117
CEQ                  ; 5118
TSEL    6360 5120    ; 5119
LD  0   1            ; 5120
LDC 36               ; 5121
CEQ                  ; 5122
TSEL    6370 5124    ; 5123
LD  0   1            ; 5124
LDC 37               ; 5125
CEQ                  ; 5126
TSEL    6380 5128    ; 5127
LD  0   1            ; 5128
LDC 38               ; 5129
CEQ                  ; 5130
TSEL    6390 5132    ; 5131
LD  0   1            ; 5132
LDC 39               ; 5133
CEQ                  ; 5134
TSEL    6400 5136    ; 5135
LD  0   1            ; 5136
LDC 40               ; 5137
CEQ                  ; 5138
TSEL    6410 5140    ; 5139
LD  0   1            ; 5140
LDC 41               ; 5141
CEQ                  ; 5142
TSEL    6420 5144    ; 5143
LD  0   1            ; 5144
LDC 42               ; 5145
CEQ                  ; 5146
TSEL    6430 5148    ; 5147
LD  0   1            ; 5148
LDC 43               ; 5149
CEQ                  ; 5150
TSEL    6440 5152    ; 5151
LD  0   1            ; 5152
LDC 44               ; 5153
CEQ                  ; 5154
TSEL    6450 5156    ; 5155
LD  0   1            ; 5156
LDC 45               ; 5157
CEQ                  ; 5158
TSEL    6460 5160    ; 5159
LD  0   1            ; 5160
LDC 46               ; 5161
CEQ                  ; 5162
TSEL    6470 5164    ; 5163
LD  0   1            ; 5164
LDC 47               ; 5165
CEQ                  ; 5166
TSEL    6480 5168    ; 5167
LD  0   1            ; 5168
LDC 48               ; 5169
CEQ                  ; 5170
TSEL    6490 5172    ; 5171
LD  0   1            ; 5172
LDC 49               ; 5173
CEQ                  ; 5174
TSEL    6500 5176    ; 5175
LD  0   1            ; 5176
LDC 50               ; 5177
CEQ                  ; 5178
TSEL    6510 5180    ; 5179
LD  0   1            ; 5180
LDC 51               ; 5181
CEQ                  ; 5182
TSEL    6520 5184    ; 5183
LD  0   1            ; 5184
LDC 52               ; 5185
CEQ                  ; 5186
TSEL    6530 5188    ; 5187
LD  0   1            ; 5188
LDC 53               ; 5189
CEQ                  ; 5190
TSEL    6540 5192    ; 5191
LD  0   1            ; 5192
LDC 54               ; 5193
CEQ                  ; 5194
TSEL    6550 5196    ; 5195
LD  0   1            ; 5196
LDC 55               ; 5197
CEQ                  ; 5198
TSEL    6560 5200    ; 5199
LD  0   1            ; 5200
LDC 56               ; 5201
CEQ                  ; 5202
TSEL    6570 5204    ; 5203
LD  0   1            ; 5204
LDC 57               ; 5205
CEQ                  ; 5206
TSEL    6580 5208    ; 5207
LD  0   1            ; 5208
LDC 58               ; 5209
CEQ                  ; 5210
TSEL    6590 5212    ; 5211
LD  0   1            ; 5212
LDC 59               ; 5213
CEQ                  ; 5214
TSEL    6600 5216    ; 5215
LD  0   1            ; 5216
LDC 60               ; 5217
CEQ                  ; 5218
TSEL    6610 5220    ; 5219
LD  0   1            ; 5220
LDC 61               ; 5221
CEQ                  ; 5222
TSEL    6620 5224    ; 5223
LD  0   1            ; 5224
LDC 62               ; 5225
CEQ                  ; 5226
TSEL    6630 5228    ; 5227
LD  0   1            ; 5228
LDC 63               ; 5229
CEQ                  ; 5230
TSEL    6640 5232    ; 5231
LD  0   1            ; 5232
LDC 64               ; 5233
CEQ                  ; 5234
TSEL    6650 5236    ; 5235
LD  0   1            ; 5236
LDC 65               ; 5237
CEQ                  ; 5238
TSEL    6660 5240    ; 5239
LD  0   1            ; 5240
LDC 66               ; 5241
CEQ                  ; 5242
TSEL    6670 5244    ; 5243
LD  0   1            ; 5244
LDC 67               ; 5245
CEQ                  ; 5246
TSEL    6680 5248    ; 5247
LD  0   1            ; 5248
LDC 68               ; 5249
CEQ                  ; 5250
TSEL    6690 5252    ; 5251
LD  0   1            ; 5252
LDC 69               ; 5253
CEQ                  ; 5254
TSEL    6700 5256    ; 5255
LD  0   1            ; 5256
LDC 70               ; 5257
CEQ                  ; 5258
TSEL    6710 5260    ; 5259
LD  0   1            ; 5260
LDC 71               ; 5261
CEQ                  ; 5262
TSEL    6720 5264    ; 5263
LD  0   1            ; 5264
LDC 72               ; 5265
CEQ                  ; 5266
TSEL    6730 5268    ; 5267
LD  0   1            ; 5268
LDC 73               ; 5269
CEQ                  ; 5270
TSEL    6740 5272    ; 5271
LD  0   1            ; 5272
LDC 74               ; 5273
CEQ                  ; 5274
TSEL    6750 5276    ; 5275
LD  0   1            ; 5276
LDC 75               ; 5277
CEQ                  ; 5278
TSEL    6760 5280    ; 5279
LD  0   1            ; 5280
LDC 76               ; 5281
CEQ                  ; 5282
TSEL    6770 5284    ; 5283
LD  0   1            ; 5284
LDC 77               ; 5285
CEQ                  ; 5286
TSEL    6780 5288    ; 5287
LD  0   1            ; 5288
LDC 78               ; 5289
CEQ                  ; 5290
TSEL    6790 5292    ; 5291
LD  0   1            ; 5292
LDC 79               ; 5293
CEQ                  ; 5294
TSEL    6800 5296    ; 5295
LD  0   1            ; 5296
LDC 80               ; 5297
CEQ                  ; 5298
TSEL    6810 5300    ; 5299
LD  0   1            ; 5300
LDC 81               ; 5301
CEQ                  ; 5302
TSEL    6820 5304    ; 5303
LD  0   1            ; 5304
LDC 82               ; 5305
CEQ                  ; 5306
TSEL    6830 5308    ; 5307
LD  0   1            ; 5308
LDC 83               ; 5309
CEQ                  ; 5310
TSEL    6840 5312    ; 5311
LD  0   1            ; 5312
LDC 84               ; 5313
CEQ                  ; 5314
TSEL    6850 5316    ; 5315
LD  0   1            ; 5316
LDC 85               ; 5317
CEQ                  ; 5318
TSEL    6860 5320    ; 5319
LD  0   1            ; 5320
LDC 86               ; 5321
CEQ                  ; 5322
TSEL    6870 5324    ; 5323
LD  0   1            ; 5324
LDC 87               ; 5325
CEQ                  ; 5326
TSEL    6880 5328    ; 5327
LD  0   1            ; 5328
LDC 88               ; 5329
CEQ                  ; 5330
TSEL    6890 5332    ; 5331
LD  0   1            ; 5332
LDC 89               ; 5333
CEQ                  ; 5334
TSEL    6900 5336    ; 5335
LD  0   1            ; 5336
LDC 90               ; 5337
CEQ                  ; 5338
TSEL    6910 5340    ; 5339
LD  0   1            ; 5340
LDC 91               ; 5341
CEQ                  ; 5342
TSEL    6920 5344    ; 5343
LD  0   1            ; 5344
LDC 92               ; 5345
CEQ                  ; 5346
TSEL    6930 5348    ; 5347
LD  0   1            ; 5348
LDC 93               ; 5349
CEQ                  ; 5350
TSEL    6940 5352    ; 5351
LD  0   1            ; 5352
LDC 94               ; 5353
CEQ                  ; 5354
TSEL    6950 5356    ; 5355
LD  0   1            ; 5356
LDC 95               ; 5357
CEQ                  ; 5358
TSEL    6960 5360    ; 5359
LD  0   1            ; 5360
LDC 96               ; 5361
CEQ                  ; 5362
TSEL    6970 5364    ; 5363
LD  0   1            ; 5364
LDC 97               ; 5365
CEQ                  ; 5366
TSEL    6980 5368    ; 5367
LD  0   1            ; 5368
LDC 98               ; 5369
CEQ                  ; 5370
TSEL    6990 5372    ; 5371
LD  0   1            ; 5372
LDC 99               ; 5373
CEQ                  ; 5374
TSEL    7000 5376    ; 5375
LD  0   1            ; 5376
LDC 100              ; 5377
CEQ                  ; 5378
TSEL    7010 5380    ; 5379
LD  0   1            ; 5380
LDC 101              ; 5381
CEQ                  ; 5382
TSEL    7020 5384    ; 5383
LD  0   1            ; 5384
LDC 102              ; 5385
CEQ                  ; 5386
TSEL    7030 5388    ; 5387
LD  0   1            ; 5388
LDC 103              ; 5389
CEQ                  ; 5390
TSEL    7040 5392    ; 5391
LD  0   1            ; 5392
LDC 104              ; 5393
CEQ                  ; 5394
TSEL    7050 5396    ; 5395
LD  0   1            ; 5396
LDC 105              ; 5397
CEQ                  ; 5398
TSEL    7060 5400    ; 5399
LD  0   1            ; 5400
LDC 106              ; 5401
CEQ                  ; 5402
TSEL    7070 5404    ; 5403
LD  0   1            ; 5404
LDC 107              ; 5405
CEQ                  ; 5406
TSEL    7080 5408    ; 5407
LD  0   1            ; 5408
LDC 108              ; 5409
CEQ                  ; 5410
TSEL    7090 5412    ; 5411
LD  0   1            ; 5412
LDC 109              ; 5413
CEQ                  ; 5414
TSEL    7100 5416    ; 5415
LD  0   1            ; 5416
LDC 110              ; 5417
CEQ                  ; 5418
TSEL    7110 5420    ; 5419
LD  0   1            ; 5420
LDC 111              ; 5421
CEQ                  ; 5422
TSEL    7120 5424    ; 5423
LD  0   1            ; 5424
LDC 112              ; 5425
CEQ                  ; 5426
TSEL    7130 5428    ; 5427
LD  0   1            ; 5428
LDC 113              ; 5429
CEQ                  ; 5430
TSEL    7140 5432    ; 5431
LD  0   1            ; 5432
LDC 114              ; 5433
CEQ                  ; 5434
TSEL    7150 5436    ; 5435
LD  0   1            ; 5436
LDC 115              ; 5437
CEQ                  ; 5438
TSEL    7160 5440    ; 5439
LD  0   1            ; 5440
LDC 116              ; 5441
CEQ                  ; 5442
TSEL    7170 5444    ; 5443
LD  0   1            ; 5444
LDC 117              ; 5445
CEQ                  ; 5446
TSEL    7180 5448    ; 5447
LD  0   1            ; 5448
LDC 118              ; 5449
CEQ                  ; 5450
TSEL    7190 5452    ; 5451
LD  0   1            ; 5452
LDC 119              ; 5453
CEQ                  ; 5454
TSEL    7200 5456    ; 5455
LD  0   1            ; 5456
LDC 120              ; 5457
CEQ                  ; 5458
TSEL    7210 5460    ; 5459
LD  0   1            ; 5460
LDC 121              ; 5461
CEQ                  ; 5462
TSEL    7220 5464    ; 5463
LD  0   1            ; 5464
LDC 122              ; 5465
CEQ                  ; 5466
TSEL    7230 5468    ; 5467
LD  0   1            ; 5468
LDC 123              ; 5469
CEQ                  ; 5470
TSEL    7240 5472    ; 5471
LD  0   1            ; 5472
LDC 124              ; 5473
CEQ                  ; 5474
TSEL    7250 5476    ; 5475
LD  0   1            ; 5476
LDC 125              ; 5477
CEQ                  ; 5478
TSEL    7260 5480    ; 5479
LD  0   1            ; 5480
LDC 126              ; 5481
CEQ                  ; 5482
TSEL    7270 5484    ; 5483
LD  0   1            ; 5484
LDC 127              ; 5485
CEQ                  ; 5486
TSEL    7280 5488    ; 5487
LD  0   1            ; 5488
LDC 128              ; 5489
CEQ                  ; 5490
TSEL    7290 5492    ; 5491
LD  0   1            ; 5492
LDC 129              ; 5493
CEQ                  ; 5494
TSEL    7300 5496    ; 5495
LD  0   1            ; 5496
LDC 130              ; 5497
CEQ                  ; 5498
TSEL    7310 5500    ; 5499
LD  0   1            ; 5500
LDC 131              ; 5501
CEQ                  ; 5502
TSEL    7320 5504    ; 5503
LD  0   1            ; 5504
LDC 132              ; 5505
CEQ                  ; 5506
TSEL    7330 5508    ; 5507
LD  0   1            ; 5508
LDC 133              ; 5509
CEQ                  ; 5510
TSEL    7340 5512    ; 5511
LD  0   1            ; 5512
LDC 134              ; 5513
CEQ                  ; 5514
TSEL    7350 5516    ; 5515
LD  0   1            ; 5516
LDC 135              ; 5517
CEQ                  ; 5518
TSEL    7360 5520    ; 5519
LD  0   1            ; 5520
LDC 136              ; 5521
CEQ                  ; 5522
TSEL    7370 5524    ; 5523
LD  0   1            ; 5524
LDC 137              ; 5525
CEQ                  ; 5526
TSEL    7380 5528    ; 5527
LD  0   1            ; 5528
LDC 138              ; 5529
CEQ                  ; 5530
TSEL    7390 5532    ; 5531
LD  0   1            ; 5532
LDC 139              ; 5533
CEQ                  ; 5534
TSEL    7400 5536    ; 5535
LD  0   1            ; 5536
LDC 140              ; 5537
CEQ                  ; 5538
TSEL    7410 5540    ; 5539
LD  0   1            ; 5540
LDC 141              ; 5541
CEQ                  ; 5542
TSEL    7420 5544    ; 5543
LD  0   1            ; 5544
LDC 142              ; 5545
CEQ                  ; 5546
TSEL    7430 5548    ; 5547
LD  0   1            ; 5548
LDC 143              ; 5549
CEQ                  ; 5550
TSEL    7440 5552    ; 5551
LD  0   1            ; 5552
LDC 144              ; 5553
CEQ                  ; 5554
TSEL    7450 5556    ; 5555
LD  0   1            ; 5556
LDC 145              ; 5557
CEQ                  ; 5558
TSEL    7460 5560    ; 5559
LD  0   1            ; 5560
LDC 146              ; 5561
CEQ                  ; 5562
TSEL    7470 5564    ; 5563
LD  0   1            ; 5564
LDC 147              ; 5565
CEQ                  ; 5566
TSEL    7480 5568    ; 5567
LD  0   1            ; 5568
LDC 148              ; 5569
CEQ                  ; 5570
TSEL    7490 5572    ; 5571
LD  0   1            ; 5572
LDC 149              ; 5573
CEQ                  ; 5574
TSEL    7500 5576    ; 5575
LD  0   1            ; 5576
LDC 150              ; 5577
CEQ                  ; 5578
TSEL    7510 5580    ; 5579
LD  0   1            ; 5580
LDC 151              ; 5581
CEQ                  ; 5582
TSEL    7520 5584    ; 5583
LD  0   1            ; 5584
LDC 152              ; 5585
CEQ                  ; 5586
TSEL    7530 5588    ; 5587
LD  0   1            ; 5588
LDC 153              ; 5589
CEQ                  ; 5590
TSEL    7540 5592    ; 5591
LD  0   1            ; 5592
LDC 154              ; 5593
CEQ                  ; 5594
TSEL    7550 5596    ; 5595
LD  0   1            ; 5596
LDC 155              ; 5597
CEQ                  ; 5598
TSEL    7560 5600    ; 5599
LD  0   1            ; 5600
LDC 156              ; 5601
CEQ                  ; 5602
TSEL    7570 5604    ; 5603
LD  0   1            ; 5604
LDC 157              ; 5605
CEQ                  ; 5606
TSEL    7580 5608    ; 5607
LD  0   1            ; 5608
LDC 158              ; 5609
CEQ                  ; 5610
TSEL    7590 5612    ; 5611
LD  0   1            ; 5612
LDC 159              ; 5613
CEQ                  ; 5614
TSEL    7600 5616    ; 5615
LD  0   1            ; 5616
LDC 160              ; 5617
CEQ                  ; 5618
TSEL    7610 5620    ; 5619
LD  0   1            ; 5620
LDC 161              ; 5621
CEQ                  ; 5622
TSEL    7620 5624    ; 5623
LD  0   1            ; 5624
LDC 162              ; 5625
CEQ                  ; 5626
TSEL    7630 5628    ; 5627
LD  0   1            ; 5628
LDC 163              ; 5629
CEQ                  ; 5630
TSEL    7640 5632    ; 5631
LD  0   1            ; 5632
LDC 164              ; 5633
CEQ                  ; 5634
TSEL    7650 5636    ; 5635
LD  0   1            ; 5636
LDC 165              ; 5637
CEQ                  ; 5638
TSEL    7660 5640    ; 5639
LD  0   1            ; 5640
LDC 166              ; 5641
CEQ                  ; 5642
TSEL    7670 5644    ; 5643
LD  0   1            ; 5644
LDC 167              ; 5645
CEQ                  ; 5646
TSEL    7680 5648    ; 5647
LD  0   1            ; 5648
LDC 168              ; 5649
CEQ                  ; 5650
TSEL    7690 5652    ; 5651
LD  0   1            ; 5652
LDC 169              ; 5653
CEQ                  ; 5654
TSEL    7700 5656    ; 5655
LD  0   1            ; 5656
LDC 170              ; 5657
CEQ                  ; 5658
TSEL    7710 5660    ; 5659
LD  0   1            ; 5660
LDC 171              ; 5661
CEQ                  ; 5662
TSEL    7720 5664    ; 5663
LD  0   1            ; 5664
LDC 172              ; 5665
CEQ                  ; 5666
TSEL    7730 5668    ; 5667
LD  0   1            ; 5668
LDC 173              ; 5669
CEQ                  ; 5670
TSEL    7740 5672    ; 5671
LD  0   1            ; 5672
LDC 174              ; 5673
CEQ                  ; 5674
TSEL    7750 5676    ; 5675
LD  0   1            ; 5676
LDC 175              ; 5677
CEQ                  ; 5678
TSEL    7760 5680    ; 5679
LD  0   1            ; 5680
LDC 176              ; 5681
CEQ                  ; 5682
TSEL    7770 5684    ; 5683
LD  0   1            ; 5684
LDC 177              ; 5685
CEQ                  ; 5686
TSEL    7780 5688    ; 5687
LD  0   1            ; 5688
LDC 178              ; 5689
CEQ                  ; 5690
TSEL    7790 5692    ; 5691
LD  0   1            ; 5692
LDC 179              ; 5693
CEQ                  ; 5694
TSEL    7800 5696    ; 5695
LD  0   1            ; 5696
LDC 180              ; 5697
CEQ                  ; 5698
TSEL    7810 5700    ; 5699
LD  0   1            ; 5700
LDC 181              ; 5701
CEQ                  ; 5702
TSEL    7820 5704    ; 5703
LD  0   1            ; 5704
LDC 182              ; 5705
CEQ                  ; 5706
TSEL    7830 5708    ; 5707
LD  0   1            ; 5708
LDC 183              ; 5709
CEQ                  ; 5710
TSEL    7840 5712    ; 5711
LD  0   1            ; 5712
LDC 184              ; 5713
CEQ                  ; 5714
TSEL    7850 5716    ; 5715
LD  0   1            ; 5716
LDC 185              ; 5717
CEQ                  ; 5718
TSEL    7860 5720    ; 5719
LD  0   1            ; 5720
LDC 186              ; 5721
CEQ                  ; 5722
TSEL    7870 5724    ; 5723
LD  0   1            ; 5724
LDC 187              ; 5725
CEQ                  ; 5726
TSEL    7880 5728    ; 5727
LD  0   1            ; 5728
LDC 188              ; 5729
CEQ                  ; 5730
TSEL    7890 5732    ; 5731
LD  0   1            ; 5732
LDC 189              ; 5733
CEQ                  ; 5734
TSEL    7900 5736    ; 5735
LD  0   1            ; 5736
LDC 190              ; 5737
CEQ                  ; 5738
TSEL    7910 5740    ; 5739
LD  0   1            ; 5740
LDC 191              ; 5741
CEQ                  ; 5742
TSEL    7920 5744    ; 5743
LD  0   1            ; 5744
LDC 192              ; 5745
CEQ                  ; 5746
TSEL    7930 5748    ; 5747
LD  0   1            ; 5748
LDC 193              ; 5749
CEQ                  ; 5750
TSEL    7940 5752    ; 5751
LD  0   1            ; 5752
LDC 194              ; 5753
CEQ                  ; 5754
TSEL    7950 5756    ; 5755
LD  0   1            ; 5756
LDC 195              ; 5757
CEQ                  ; 5758
TSEL    7960 5760    ; 5759
LD  0   1            ; 5760
LDC 196              ; 5761
CEQ                  ; 5762
TSEL    7970 5764    ; 5763
LD  0   1            ; 5764
LDC 197              ; 5765
CEQ                  ; 5766
TSEL    7980 5768    ; 5767
LD  0   1            ; 5768
LDC 198              ; 5769
CEQ                  ; 5770
TSEL    7990 5772    ; 5771
LD  0   1            ; 5772
LDC 199              ; 5773
CEQ                  ; 5774
TSEL    8000 5776    ; 5775
LD  0   1            ; 5776
LDC 200              ; 5777
CEQ                  ; 5778
TSEL    8010 5780    ; 5779
LD  0   1            ; 5780
LDC 201              ; 5781
CEQ                  ; 5782
TSEL    8020 5784    ; 5783
LD  0   1            ; 5784
LDC 202              ; 5785
CEQ                  ; 5786
TSEL    8030 5788    ; 5787
LD  0   1            ; 5788
LDC 203              ; 5789
CEQ                  ; 5790
TSEL    8040 5792    ; 5791
LD  0   1            ; 5792
LDC 204              ; 5793
CEQ                  ; 5794
TSEL    8050 5796    ; 5795
LD  0   1            ; 5796
LDC 205              ; 5797
CEQ                  ; 5798
TSEL    8060 5800    ; 5799
LD  0   1            ; 5800
LDC 206              ; 5801
CEQ                  ; 5802
TSEL    8070 5804    ; 5803
LD  0   1            ; 5804
LDC 207              ; 5805
CEQ                  ; 5806
TSEL    8080 5808    ; 5807
LD  0   1            ; 5808
LDC 208              ; 5809
CEQ                  ; 5810
TSEL    8090 5812    ; 5811
LD  0   1            ; 5812
LDC 209              ; 5813
CEQ                  ; 5814
TSEL    8100 5816    ; 5815
LD  0   1            ; 5816
LDC 210              ; 5817
CEQ                  ; 5818
TSEL    8110 5820    ; 5819
LD  0   1            ; 5820
LDC 211              ; 5821
CEQ                  ; 5822
TSEL    8120 5824    ; 5823
LD  0   1            ; 5824
LDC 212              ; 5825
CEQ                  ; 5826
TSEL    8130 5828    ; 5827
LD  0   1            ; 5828
LDC 213              ; 5829
CEQ                  ; 5830
TSEL    8140 5832    ; 5831
LD  0   1            ; 5832
LDC 214              ; 5833
CEQ                  ; 5834
TSEL    8150 5836    ; 5835
LD  0   1            ; 5836
LDC 215              ; 5837
CEQ                  ; 5838
TSEL    8160 5840    ; 5839
LD  0   1            ; 5840
LDC 216              ; 5841
CEQ                  ; 5842
TSEL    8170 5844    ; 5843
LD  0   1            ; 5844
LDC 217              ; 5845
CEQ                  ; 5846
TSEL    8180 5848    ; 5847
LD  0   1            ; 5848
LDC 218              ; 5849
CEQ                  ; 5850
TSEL    8190 5852    ; 5851
LD  0   1            ; 5852
LDC 219              ; 5853
CEQ                  ; 5854
TSEL    8200 5856    ; 5855
LD  0   1            ; 5856
LDC 220              ; 5857
CEQ                  ; 5858
TSEL    8210 5860    ; 5859
LD  0   1            ; 5860
LDC 221              ; 5861
CEQ                  ; 5862
TSEL    8220 5864    ; 5863
LD  0   1            ; 5864
LDC 222              ; 5865
CEQ                  ; 5866
TSEL    8230 5868    ; 5867
LD  0   1            ; 5868
LDC 223              ; 5869
CEQ                  ; 5870
TSEL    8240 5872    ; 5871
LD  0   1            ; 5872
LDC 224              ; 5873
CEQ                  ; 5874
TSEL    8250 5876    ; 5875
LD  0   1            ; 5876
LDC 225              ; 5877
CEQ                  ; 5878
TSEL    8260 5880    ; 5879
LD  0   1            ; 5880
LDC 226              ; 5881
CEQ                  ; 5882
TSEL    8270 5884    ; 5883
LD  0   1            ; 5884
LDC 227              ; 5885
CEQ                  ; 5886
TSEL    8280 5888    ; 5887
LD  0   1            ; 5888
LDC 228              ; 5889
CEQ                  ; 5890
TSEL    8290 5892    ; 5891
LD  0   1            ; 5892
LDC 229              ; 5893
CEQ                  ; 5894
TSEL    8300 5896    ; 5895
LD  0   1            ; 5896
LDC 230              ; 5897
CEQ                  ; 5898
TSEL    8310 5900    ; 5899
LD  0   1            ; 5900
LDC 231              ; 5901
CEQ                  ; 5902
TSEL    8320 5904    ; 5903
LD  0   1            ; 5904
LDC 232              ; 5905
CEQ                  ; 5906
TSEL    8330 5908    ; 5907
LD  0   1            ; 5908
LDC 233              ; 5909
CEQ                  ; 5910
TSEL    8340 5912    ; 5911
LD  0   1            ; 5912
LDC 234              ; 5913
CEQ                  ; 5914
TSEL    8350 5916    ; 5915
LD  0   1            ; 5916
LDC 235              ; 5917
CEQ                  ; 5918
TSEL    8360 5920    ; 5919
LD  0   1            ; 5920
LDC 236              ; 5921
CEQ                  ; 5922
TSEL    8370 5924    ; 5923
LD  0   1            ; 5924
LDC 237              ; 5925
CEQ                  ; 5926
TSEL    8380 5928    ; 5927
LD  0   1            ; 5928
LDC 238              ; 5929
CEQ                  ; 5930
TSEL    8390 5932    ; 5931
LD  0   1            ; 5932
LDC 239              ; 5933
CEQ                  ; 5934
TSEL    8400 5936    ; 5935
LD  0   1            ; 5936
LDC 240              ; 5937
CEQ                  ; 5938
TSEL    8410 5940    ; 5939
LD  0   1            ; 5940
LDC 241              ; 5941
CEQ                  ; 5942
TSEL    8420 5944    ; 5943
LD  0   1            ; 5944
LDC 242              ; 5945
CEQ                  ; 5946
TSEL    8430 5948    ; 5947
LD  0   1            ; 5948
LDC 243              ; 5949
CEQ                  ; 5950
TSEL    8440 5952    ; 5951
LD  0   1            ; 5952
LDC 244              ; 5953
CEQ                  ; 5954
TSEL    8450 5956    ; 5955
LD  0   1            ; 5956
LDC 245              ; 5957
CEQ                  ; 5958
TSEL    8460 5960    ; 5959
LD  0   1            ; 5960
LDC 246              ; 5961
CEQ                  ; 5962
TSEL    8470 5964    ; 5963
LD  0   1            ; 5964
LDC 247              ; 5965
CEQ                  ; 5966
TSEL    8480 5968    ; 5967
LD  0   1            ; 5968
LDC 248              ; 5969
CEQ                  ; 5970
TSEL    8490 5972    ; 5971
LD  0   1            ; 5972
LDC 249              ; 5973
CEQ                  ; 5974
TSEL    8500 5976    ; 5975
LD  0   1            ; 5976
LDC 250              ; 5977
CEQ                  ; 5978
TSEL    8510 5980    ; 5979
LD  0   1            ; 5980
LDC 251              ; 5981
CEQ                  ; 5982
TSEL    8520 5984    ; 5983
LD  0   1            ; 5984
LDC 252              ; 5985
CEQ                  ; 5986
TSEL    8530 5988    ; 5987
LD  0   1            ; 5988
LDC 253              ; 5989
CEQ                  ; 5990
TSEL    8540 5992    ; 5991
LD  0   1            ; 5992
LDC 254              ; 5993
CEQ                  ; 5994
TSEL    8550 5996    ; 5995
LD  0   1            ; 5996
LDC 255              ; 5997
CEQ                  ; 5998
TSEL    8560 6000    ; 5999
LDC  0               ; 6000
RTN                  ; 6001
LD  2   0            ; 6002
RTN                  ; 6003
LDF 6002             ; 6004
RTN                  ; 6005
LD  2   0            ; 6006
LD  0   0            ; 6007
ST  2   0            ; 6008
RTN                  ; 6009
LDF 6006             ; 6010
RTN                  ; 6011
LD  2   1            ; 6012
RTN                  ; 6013
LDF 6012             ; 6014
RTN                  ; 6015
LD  2   1            ; 6016
LD  0   0            ; 6017
ST  2   1            ; 6018
RTN                  ; 6019
LDF 6016             ; 6020
RTN                  ; 6021
LD  2   2            ; 6022
RTN                  ; 6023
LDF 6022             ; 6024
RTN                  ; 6025
LD  2   2            ; 6026
LD  0   0            ; 6027
ST  2   2            ; 6028
RTN                  ; 6029
LDF 6026             ; 6030
RTN                  ; 6031
LD  2   3            ; 6032
RTN                  ; 6033
LDF 6032             ; 6034
RTN                  ; 6035
LD  2   3            ; 6036
LD  0   0            ; 6037
ST  2   3            ; 6038
RTN                  ; 6039
LDF 6036             ; 6040
RTN                  ; 6041
LD  2   4            ; 6042
RTN                  ; 6043
LDF 6042             ; 6044
RTN                  ; 6045
LD  2   4            ; 6046
LD  0   0            ; 6047
ST  2   4            ; 6048
RTN                  ; 6049
LDF 6046             ; 6050
RTN                  ; 6051
LD  2   5            ; 6052
RTN                  ; 6053
LDF 6052             ; 6054
RTN                  ; 6055
LD  2   5            ; 6056
LD  0   0            ; 6057
ST  2   5            ; 6058
RTN                  ; 6059
LDF 6056             ; 6060
RTN                  ; 6061
LD  2   6            ; 6062
RTN                  ; 6063
LDF 6062             ; 6064
RTN                  ; 6065
LD  2   6            ; 6066
LD  0   0            ; 6067
ST  2   6            ; 6068
RTN                  ; 6069
LDF 6066             ; 6070
RTN                  ; 6071
LD  2   7            ; 6072
RTN                  ; 6073
LDF 6072             ; 6074
RTN                  ; 6075
LD  2   7            ; 6076
LD  0   0            ; 6077
ST  2   7            ; 6078
RTN                  ; 6079
LDF 6076             ; 6080
RTN                  ; 6081
LD  2   8            ; 6082
RTN                  ; 6083
LDF 6082             ; 6084
RTN                  ; 6085
LD  2   8            ; 6086
LD  0   0            ; 6087
ST  2   8            ; 6088
RTN                  ; 6089
LDF 6086             ; 6090
RTN                  ; 6091
LD  2   9            ; 6092
RTN                  ; 6093
LDF 6092             ; 6094
RTN                  ; 6095
LD  2   9            ; 6096
LD  0   0            ; 6097
ST  2   9            ; 6098
RTN                  ; 6099
LDF 6096             ; 6100
RTN                  ; 6101
LD  2   10           ; 6102
RTN                  ; 6103
LDF 6102             ; 6104
RTN                  ; 6105
LD  2   10           ; 6106
LD  0   0            ; 6107
ST  2   10           ; 6108
RTN                  ; 6109
LDF 6106             ; 6110
RTN                  ; 6111
LD  2   11           ; 6112
RTN                  ; 6113
LDF 6112             ; 6114
RTN                  ; 6115
LD  2   11           ; 6116
LD  0   0            ; 6117
ST  2   11           ; 6118
RTN                  ; 6119
LDF 6116             ; 6120
RTN                  ; 6121
LD  2   12           ; 6122
RTN                  ; 6123
LDF 6122             ; 6124
RTN                  ; 6125
LD  2   12           ; 6126
LD  0   0            ; 6127
ST  2   12           ; 6128
RTN                  ; 6129
LDF 6126             ; 6130
RTN                  ; 6131
LD  2   13           ; 6132
RTN                  ; 6133
LDF 6132             ; 6134
RTN                  ; 6135
LD  2   13           ; 6136
LD  0   0            ; 6137
ST  2   13           ; 6138
RTN                  ; 6139
LDF 6136             ; 6140
RTN                  ; 6141
LD  2   14           ; 6142
RTN                  ; 6143
LDF 6142             ; 6144
RTN                  ; 6145
LD  2   14           ; 6146
LD  0   0            ; 6147
ST  2   14           ; 6148
RTN                  ; 6149
LDF 6146             ; 6150
RTN                  ; 6151
LD  2   15           ; 6152
RTN                  ; 6153
LDF 6152             ; 6154
RTN                  ; 6155
LD  2   15           ; 6156
LD  0   0            ; 6157
ST  2   15           ; 6158
RTN                  ; 6159
LDF 6156             ; 6160
RTN                  ; 6161
LD  2   16           ; 6162
RTN                  ; 6163
LDF 6162             ; 6164
RTN                  ; 6165
LD  2   16           ; 6166
LD  0   0            ; 6167
ST  2   16           ; 6168
RTN                  ; 6169
LDF 6166             ; 6170
RTN                  ; 6171
LD  2   17           ; 6172
RTN                  ; 6173
LDF 6172             ; 6174
RTN                  ; 6175
LD  2   17           ; 6176
LD  0   0            ; 6177
ST  2   17           ; 6178
RTN                  ; 6179
LDF 6176             ; 6180
RTN                  ; 6181
LD  2   18           ; 6182
RTN                  ; 6183
LDF 6182             ; 6184
RTN                  ; 6185
LD  2   18           ; 6186
LD  0   0            ; 6187
ST  2   18           ; 6188
RTN                  ; 6189
LDF 6186             ; 6190
RTN                  ; 6191
LD  2   19           ; 6192
RTN                  ; 6193
LDF 6192             ; 6194
RTN                  ; 6195
LD  2   19           ; 6196
LD  0   0            ; 6197
ST  2   19           ; 6198
RTN                  ; 6199
LDF 6196             ; 6200
RTN                  ; 6201
LD  2   20           ; 6202
RTN                  ; 6203
LDF 6202             ; 6204
RTN                  ; 6205
LD  2   20           ; 6206
LD  0   0            ; 6207
ST  2   20           ; 6208
RTN                  ; 6209
LDF 6206             ; 6210
RTN                  ; 6211
LD  2   21           ; 6212
RTN                  ; 6213
LDF 6212             ; 6214
RTN                  ; 6215
LD  2   21           ; 6216
LD  0   0            ; 6217
ST  2   21           ; 6218
RTN                  ; 6219
LDF 6216             ; 6220
RTN                  ; 6221
LD  2   22           ; 6222
RTN                  ; 6223
LDF 6222             ; 6224
RTN                  ; 6225
LD  2   22           ; 6226
LD  0   0            ; 6227
ST  2   22           ; 6228
RTN                  ; 6229
LDF 6226             ; 6230
RTN                  ; 6231
LD  2   23           ; 6232
RTN                  ; 6233
LDF 6232             ; 6234
RTN                  ; 6235
LD  2   23           ; 6236
LD  0   0            ; 6237
ST  2   23           ; 6238
RTN                  ; 6239
LDF 6236             ; 6240
RTN                  ; 6241
LD  2   24           ; 6242
RTN                  ; 6243
LDF 6242             ; 6244
RTN                  ; 6245
LD  2   24           ; 6246
LD  0   0            ; 6247
ST  2   24           ; 6248
RTN                  ; 6249
LDF 6246             ; 6250
RTN                  ; 6251
LD  2   25           ; 6252
RTN                  ; 6253
LDF 6252             ; 6254
RTN                  ; 6255
LD  2   25           ; 6256
LD  0   0            ; 6257
ST  2   25           ; 6258
RTN                  ; 6259
LDF 6256             ; 6260
RTN                  ; 6261
LD  2   26           ; 6262
RTN                  ; 6263
LDF 6262             ; 6264
RTN                  ; 6265
LD  2   26           ; 6266
LD  0   0            ; 6267
ST  2   26           ; 6268
RTN                  ; 6269
LDF 6266             ; 6270
RTN                  ; 6271
LD  2   27           ; 6272
RTN                  ; 6273
LDF 6272             ; 6274
RTN                  ; 6275
LD  2   27           ; 6276
LD  0   0            ; 6277
ST  2   27           ; 6278
RTN                  ; 6279
LDF 6276             ; 6280
RTN                  ; 6281
LD  2   28           ; 6282
RTN                  ; 6283
LDF 6282             ; 6284
RTN                  ; 6285
LD  2   28           ; 6286
LD  0   0            ; 6287
ST  2   28           ; 6288
RTN                  ; 6289
LDF 6286             ; 6290
RTN                  ; 6291
LD  2   29           ; 6292
RTN                  ; 6293
LDF 6292             ; 6294
RTN                  ; 6295
LD  2   29           ; 6296
LD  0   0            ; 6297
ST  2   29           ; 6298
RTN                  ; 6299
LDF 6296             ; 6300
RTN                  ; 6301
LD  2   30           ; 6302
RTN                  ; 6303
LDF 6302             ; 6304
RTN                  ; 6305
LD  2   30           ; 6306
LD  0   0            ; 6307
ST  2   30           ; 6308
RTN                  ; 6309
LDF 6306             ; 6310
RTN                  ; 6311
LD  2   31           ; 6312
RTN                  ; 6313
LDF 6312             ; 6314
RTN                  ; 6315
LD  2   31           ; 6316
LD  0   0            ; 6317
ST  2   31           ; 6318
RTN                  ; 6319
LDF 6316             ; 6320
RTN                  ; 6321
LD  2   32           ; 6322
RTN                  ; 6323
LDF 6322             ; 6324
RTN                  ; 6325
LD  2   32           ; 6326
LD  0   0            ; 6327
ST  2   32           ; 6328
RTN                  ; 6329
LDF 6326             ; 6330
RTN                  ; 6331
LD  2   33           ; 6332
RTN                  ; 6333
LDF 6332             ; 6334
RTN                  ; 6335
LD  2   33           ; 6336
LD  0   0            ; 6337
ST  2   33           ; 6338
RTN                  ; 6339
LDF 6336             ; 6340
RTN                  ; 6341
LD  2   34           ; 6342
RTN                  ; 6343
LDF 6342             ; 6344
RTN                  ; 6345
LD  2   34           ; 6346
LD  0   0            ; 6347
ST  2   34           ; 6348
RTN                  ; 6349
LDF 6346             ; 6350
RTN                  ; 6351
LD  2   35           ; 6352
RTN                  ; 6353
LDF 6352             ; 6354
RTN                  ; 6355
LD  2   35           ; 6356
LD  0   0            ; 6357
ST  2   35           ; 6358
RTN                  ; 6359
LDF 6356             ; 6360
RTN                  ; 6361
LD  2   36           ; 6362
RTN                  ; 6363
LDF 6362             ; 6364
RTN                  ; 6365
LD  2   36           ; 6366
LD  0   0            ; 6367
ST  2   36           ; 6368
RTN                  ; 6369
LDF 6366             ; 6370
RTN                  ; 6371
LD  2   37           ; 6372
RTN                  ; 6373
LDF 6372             ; 6374
RTN                  ; 6375
LD  2   37           ; 6376
LD  0   0            ; 6377
ST  2   37           ; 6378
RTN                  ; 6379
LDF 6376             ; 6380
RTN                  ; 6381
LD  2   38           ; 6382
RTN                  ; 6383
LDF 6382             ; 6384
RTN                  ; 6385
LD  2   38           ; 6386
LD  0   0            ; 6387
ST  2   38           ; 6388
RTN                  ; 6389
LDF 6386             ; 6390
RTN                  ; 6391
LD  2   39           ; 6392
RTN                  ; 6393
LDF 6392             ; 6394
RTN                  ; 6395
LD  2   39           ; 6396
LD  0   0            ; 6397
ST  2   39           ; 6398
RTN                  ; 6399
LDF 6396             ; 6400
RTN                  ; 6401
LD  2   40           ; 6402
RTN                  ; 6403
LDF 6402             ; 6404
RTN                  ; 6405
LD  2   40           ; 6406
LD  0   0            ; 6407
ST  2   40           ; 6408
RTN                  ; 6409
LDF 6406             ; 6410
RTN                  ; 6411
LD  2   41           ; 6412
RTN                  ; 6413
LDF 6412             ; 6414
RTN                  ; 6415
LD  2   41           ; 6416
LD  0   0            ; 6417
ST  2   41           ; 6418
RTN                  ; 6419
LDF 6416             ; 6420
RTN                  ; 6421
LD  2   42           ; 6422
RTN                  ; 6423
LDF 6422             ; 6424
RTN                  ; 6425
LD  2   42           ; 6426
LD  0   0            ; 6427
ST  2   42           ; 6428
RTN                  ; 6429
LDF 6426             ; 6430
RTN                  ; 6431
LD  2   43           ; 6432
RTN                  ; 6433
LDF 6432             ; 6434
RTN                  ; 6435
LD  2   43           ; 6436
LD  0   0            ; 6437
ST  2   43           ; 6438
RTN                  ; 6439
LDF 6436             ; 6440
RTN                  ; 6441
LD  2   44           ; 6442
RTN                  ; 6443
LDF 6442             ; 6444
RTN                  ; 6445
LD  2   44           ; 6446
LD  0   0            ; 6447
ST  2   44           ; 6448
RTN                  ; 6449
LDF 6446             ; 6450
RTN                  ; 6451
LD  2   45           ; 6452
RTN                  ; 6453
LDF 6452             ; 6454
RTN                  ; 6455
LD  2   45           ; 6456
LD  0   0            ; 6457
ST  2   45           ; 6458
RTN                  ; 6459
LDF 6456             ; 6460
RTN                  ; 6461
LD  2   46           ; 6462
RTN                  ; 6463
LDF 6462             ; 6464
RTN                  ; 6465
LD  2   46           ; 6466
LD  0   0            ; 6467
ST  2   46           ; 6468
RTN                  ; 6469
LDF 6466             ; 6470
RTN                  ; 6471
LD  2   47           ; 6472
RTN                  ; 6473
LDF 6472             ; 6474
RTN                  ; 6475
LD  2   47           ; 6476
LD  0   0            ; 6477
ST  2   47           ; 6478
RTN                  ; 6479
LDF 6476             ; 6480
RTN                  ; 6481
LD  2   48           ; 6482
RTN                  ; 6483
LDF 6482             ; 6484
RTN                  ; 6485
LD  2   48           ; 6486
LD  0   0            ; 6487
ST  2   48           ; 6488
RTN                  ; 6489
LDF 6486             ; 6490
RTN                  ; 6491
LD  2   49           ; 6492
RTN                  ; 6493
LDF 6492             ; 6494
RTN                  ; 6495
LD  2   49           ; 6496
LD  0   0            ; 6497
ST  2   49           ; 6498
RTN                  ; 6499
LDF 6496             ; 6500
RTN                  ; 6501
LD  2   50           ; 6502
RTN                  ; 6503
LDF 6502             ; 6504
RTN                  ; 6505
LD  2   50           ; 6506
LD  0   0            ; 6507
ST  2   50           ; 6508
RTN                  ; 6509
LDF 6506             ; 6510
RTN                  ; 6511
LD  2   51           ; 6512
RTN                  ; 6513
LDF 6512             ; 6514
RTN                  ; 6515
LD  2   51           ; 6516
LD  0   0            ; 6517
ST  2   51           ; 6518
RTN                  ; 6519
LDF 6516             ; 6520
RTN                  ; 6521
LD  2   52           ; 6522
RTN                  ; 6523
LDF 6522             ; 6524
RTN                  ; 6525
LD  2   52           ; 6526
LD  0   0            ; 6527
ST  2   52           ; 6528
RTN                  ; 6529
LDF 6526             ; 6530
RTN                  ; 6531
LD  2   53           ; 6532
RTN                  ; 6533
LDF 6532             ; 6534
RTN                  ; 6535
LD  2   53           ; 6536
LD  0   0            ; 6537
ST  2   53           ; 6538
RTN                  ; 6539
LDF 6536             ; 6540
RTN                  ; 6541
LD  2   54           ; 6542
RTN                  ; 6543
LDF 6542             ; 6544
RTN                  ; 6545
LD  2   54           ; 6546
LD  0   0            ; 6547
ST  2   54           ; 6548
RTN                  ; 6549
LDF 6546             ; 6550
RTN                  ; 6551
LD  2   55           ; 6552
RTN                  ; 6553
LDF 6552             ; 6554
RTN                  ; 6555
LD  2   55           ; 6556
LD  0   0            ; 6557
ST  2   55           ; 6558
RTN                  ; 6559
LDF 6556             ; 6560
RTN                  ; 6561
LD  2   56           ; 6562
RTN                  ; 6563
LDF 6562             ; 6564
RTN                  ; 6565
LD  2   56           ; 6566
LD  0   0            ; 6567
ST  2   56           ; 6568
RTN                  ; 6569
LDF 6566             ; 6570
RTN                  ; 6571
LD  2   57           ; 6572
RTN                  ; 6573
LDF 6572             ; 6574
RTN                  ; 6575
LD  2   57           ; 6576
LD  0   0            ; 6577
ST  2   57           ; 6578
RTN                  ; 6579
LDF 6576             ; 6580
RTN                  ; 6581
LD  2   58           ; 6582
RTN                  ; 6583
LDF 6582             ; 6584
RTN                  ; 6585
LD  2   58           ; 6586
LD  0   0            ; 6587
ST  2   58           ; 6588
RTN                  ; 6589
LDF 6586             ; 6590
RTN                  ; 6591
LD  2   59           ; 6592
RTN                  ; 6593
LDF 6592             ; 6594
RTN                  ; 6595
LD  2   59           ; 6596
LD  0   0            ; 6597
ST  2   59           ; 6598
RTN                  ; 6599
LDF 6596             ; 6600
RTN                  ; 6601
LD  2   60           ; 6602
RTN                  ; 6603
LDF 6602             ; 6604
RTN                  ; 6605
LD  2   60           ; 6606
LD  0   0            ; 6607
ST  2   60           ; 6608
RTN                  ; 6609
LDF 6606             ; 6610
RTN                  ; 6611
LD  2   61           ; 6612
RTN                  ; 6613
LDF 6612             ; 6614
RTN                  ; 6615
LD  2   61           ; 6616
LD  0   0            ; 6617
ST  2   61           ; 6618
RTN                  ; 6619
LDF 6616             ; 6620
RTN                  ; 6621
LD  2   62           ; 6622
RTN                  ; 6623
LDF 6622             ; 6624
RTN                  ; 6625
LD  2   62           ; 6626
LD  0   0            ; 6627
ST  2   62           ; 6628
RTN                  ; 6629
LDF 6626             ; 6630
RTN                  ; 6631
LD  2   63           ; 6632
RTN                  ; 6633
LDF 6632             ; 6634
RTN                  ; 6635
LD  2   63           ; 6636
LD  0   0            ; 6637
ST  2   63           ; 6638
RTN                  ; 6639
LDF 6636             ; 6640
RTN                  ; 6641
LD  2   64           ; 6642
RTN                  ; 6643
LDF 6642             ; 6644
RTN                  ; 6645
LD  2   64           ; 6646
LD  0   0            ; 6647
ST  2   64           ; 6648
RTN                  ; 6649
LDF 6646             ; 6650
RTN                  ; 6651
LD  2   65           ; 6652
RTN                  ; 6653
LDF 6652             ; 6654
RTN                  ; 6655
LD  2   65           ; 6656
LD  0   0            ; 6657
ST  2   65           ; 6658
RTN                  ; 6659
LDF 6656             ; 6660
RTN                  ; 6661
LD  2   66           ; 6662
RTN                  ; 6663
LDF 6662             ; 6664
RTN                  ; 6665
LD  2   66           ; 6666
LD  0   0            ; 6667
ST  2   66           ; 6668
RTN                  ; 6669
LDF 6666             ; 6670
RTN                  ; 6671
LD  2   67           ; 6672
RTN                  ; 6673
LDF 6672             ; 6674
RTN                  ; 6675
LD  2   67           ; 6676
LD  0   0            ; 6677
ST  2   67           ; 6678
RTN                  ; 6679
LDF 6676             ; 6680
RTN                  ; 6681
LD  2   68           ; 6682
RTN                  ; 6683
LDF 6682             ; 6684
RTN                  ; 6685
LD  2   68           ; 6686
LD  0   0            ; 6687
ST  2   68           ; 6688
RTN                  ; 6689
LDF 6686             ; 6690
RTN                  ; 6691
LD  2   69           ; 6692
RTN                  ; 6693
LDF 6692             ; 6694
RTN                  ; 6695
LD  2   69           ; 6696
LD  0   0            ; 6697
ST  2   69           ; 6698
RTN                  ; 6699
LDF 6696             ; 6700
RTN                  ; 6701
LD  2   70           ; 6702
RTN                  ; 6703
LDF 6702             ; 6704
RTN                  ; 6705
LD  2   70           ; 6706
LD  0   0            ; 6707
ST  2   70           ; 6708
RTN                  ; 6709
LDF 6706             ; 6710
RTN                  ; 6711
LD  2   71           ; 6712
RTN                  ; 6713
LDF 6712             ; 6714
RTN                  ; 6715
LD  2   71           ; 6716
LD  0   0            ; 6717
ST  2   71           ; 6718
RTN                  ; 6719
LDF 6716             ; 6720
RTN                  ; 6721
LD  2   72           ; 6722
RTN                  ; 6723
LDF 6722             ; 6724
RTN                  ; 6725
LD  2   72           ; 6726
LD  0   0            ; 6727
ST  2   72           ; 6728
RTN                  ; 6729
LDF 6726             ; 6730
RTN                  ; 6731
LD  2   73           ; 6732
RTN                  ; 6733
LDF 6732             ; 6734
RTN                  ; 6735
LD  2   73           ; 6736
LD  0   0            ; 6737
ST  2   73           ; 6738
RTN                  ; 6739
LDF 6736             ; 6740
RTN                  ; 6741
LD  2   74           ; 6742
RTN                  ; 6743
LDF 6742             ; 6744
RTN                  ; 6745
LD  2   74           ; 6746
LD  0   0            ; 6747
ST  2   74           ; 6748
RTN                  ; 6749
LDF 6746             ; 6750
RTN                  ; 6751
LD  2   75           ; 6752
RTN                  ; 6753
LDF 6752             ; 6754
RTN                  ; 6755
LD  2   75           ; 6756
LD  0   0            ; 6757
ST  2   75           ; 6758
RTN                  ; 6759
LDF 6756             ; 6760
RTN                  ; 6761
LD  2   76           ; 6762
RTN                  ; 6763
LDF 6762             ; 6764
RTN                  ; 6765
LD  2   76           ; 6766
LD  0   0            ; 6767
ST  2   76           ; 6768
RTN                  ; 6769
LDF 6766             ; 6770
RTN                  ; 6771
LD  2   77           ; 6772
RTN                  ; 6773
LDF 6772             ; 6774
RTN                  ; 6775
LD  2   77           ; 6776
LD  0   0            ; 6777
ST  2   77           ; 6778
RTN                  ; 6779
LDF 6776             ; 6780
RTN                  ; 6781
LD  2   78           ; 6782
RTN                  ; 6783
LDF 6782             ; 6784
RTN                  ; 6785
LD  2   78           ; 6786
LD  0   0            ; 6787
ST  2   78           ; 6788
RTN                  ; 6789
LDF 6786             ; 6790
RTN                  ; 6791
LD  2   79           ; 6792
RTN                  ; 6793
LDF 6792             ; 6794
RTN                  ; 6795
LD  2   79           ; 6796
LD  0   0            ; 6797
ST  2   79           ; 6798
RTN                  ; 6799
LDF 6796             ; 6800
RTN                  ; 6801
LD  2   80           ; 6802
RTN                  ; 6803
LDF 6802             ; 6804
RTN                  ; 6805
LD  2   80           ; 6806
LD  0   0            ; 6807
ST  2   80           ; 6808
RTN                  ; 6809
LDF 6806             ; 6810
RTN                  ; 6811
LD  2   81           ; 6812
RTN                  ; 6813
LDF 6812             ; 6814
RTN                  ; 6815
LD  2   81           ; 6816
LD  0   0            ; 6817
ST  2   81           ; 6818
RTN                  ; 6819
LDF 6816             ; 6820
RTN                  ; 6821
LD  2   82           ; 6822
RTN                  ; 6823
LDF 6822             ; 6824
RTN                  ; 6825
LD  2   82           ; 6826
LD  0   0            ; 6827
ST  2   82           ; 6828
RTN                  ; 6829
LDF 6826             ; 6830
RTN                  ; 6831
LD  2   83           ; 6832
RTN                  ; 6833
LDF 6832             ; 6834
RTN                  ; 6835
LD  2   83           ; 6836
LD  0   0            ; 6837
ST  2   83           ; 6838
RTN                  ; 6839
LDF 6836             ; 6840
RTN                  ; 6841
LD  2   84           ; 6842
RTN                  ; 6843
LDF 6842             ; 6844
RTN                  ; 6845
LD  2   84           ; 6846
LD  0   0            ; 6847
ST  2   84           ; 6848
RTN                  ; 6849
LDF 6846             ; 6850
RTN                  ; 6851
LD  2   85           ; 6852
RTN                  ; 6853
LDF 6852             ; 6854
RTN                  ; 6855
LD  2   85           ; 6856
LD  0   0            ; 6857
ST  2   85           ; 6858
RTN                  ; 6859
LDF 6856             ; 6860
RTN                  ; 6861
LD  2   86           ; 6862
RTN                  ; 6863
LDF 6862             ; 6864
RTN                  ; 6865
LD  2   86           ; 6866
LD  0   0            ; 6867
ST  2   86           ; 6868
RTN                  ; 6869
LDF 6866             ; 6870
RTN                  ; 6871
LD  2   87           ; 6872
RTN                  ; 6873
LDF 6872             ; 6874
RTN                  ; 6875
LD  2   87           ; 6876
LD  0   0            ; 6877
ST  2   87           ; 6878
RTN                  ; 6879
LDF 6876             ; 6880
RTN                  ; 6881
LD  2   88           ; 6882
RTN                  ; 6883
LDF 6882             ; 6884
RTN                  ; 6885
LD  2   88           ; 6886
LD  0   0            ; 6887
ST  2   88           ; 6888
RTN                  ; 6889
LDF 6886             ; 6890
RTN                  ; 6891
LD  2   89           ; 6892
RTN                  ; 6893
LDF 6892             ; 6894
RTN                  ; 6895
LD  2   89           ; 6896
LD  0   0            ; 6897
ST  2   89           ; 6898
RTN                  ; 6899
LDF 6896             ; 6900
RTN                  ; 6901
LD  2   90           ; 6902
RTN                  ; 6903
LDF 6902             ; 6904
RTN                  ; 6905
LD  2   90           ; 6906
LD  0   0            ; 6907
ST  2   90           ; 6908
RTN                  ; 6909
LDF 6906             ; 6910
RTN                  ; 6911
LD  2   91           ; 6912
RTN                  ; 6913
LDF 6912             ; 6914
RTN                  ; 6915
LD  2   91           ; 6916
LD  0   0            ; 6917
ST  2   91           ; 6918
RTN                  ; 6919
LDF 6916             ; 6920
RTN                  ; 6921
LD  2   92           ; 6922
RTN                  ; 6923
LDF 6922             ; 6924
RTN                  ; 6925
LD  2   92           ; 6926
LD  0   0            ; 6927
ST  2   92           ; 6928
RTN                  ; 6929
LDF 6926             ; 6930
RTN                  ; 6931
LD  2   93           ; 6932
RTN                  ; 6933
LDF 6932             ; 6934
RTN                  ; 6935
LD  2   93           ; 6936
LD  0   0            ; 6937
ST  2   93           ; 6938
RTN                  ; 6939
LDF 6936             ; 6940
RTN                  ; 6941
LD  2   94           ; 6942
RTN                  ; 6943
LDF 6942             ; 6944
RTN                  ; 6945
LD  2   94           ; 6946
LD  0   0            ; 6947
ST  2   94           ; 6948
RTN                  ; 6949
LDF 6946             ; 6950
RTN                  ; 6951
LD  2   95           ; 6952
RTN                  ; 6953
LDF 6952             ; 6954
RTN                  ; 6955
LD  2   95           ; 6956
LD  0   0            ; 6957
ST  2   95           ; 6958
RTN                  ; 6959
LDF 6956             ; 6960
RTN                  ; 6961
LD  2   96           ; 6962
RTN                  ; 6963
LDF 6962             ; 6964
RTN                  ; 6965
LD  2   96           ; 6966
LD  0   0            ; 6967
ST  2   96           ; 6968
RTN                  ; 6969
LDF 6966             ; 6970
RTN                  ; 6971
LD  2   97           ; 6972
RTN                  ; 6973
LDF 6972             ; 6974
RTN                  ; 6975
LD  2   97           ; 6976
LD  0   0            ; 6977
ST  2   97           ; 6978
RTN                  ; 6979
LDF 6976             ; 6980
RTN                  ; 6981
LD  2   98           ; 6982
RTN                  ; 6983
LDF 6982             ; 6984
RTN                  ; 6985
LD  2   98           ; 6986
LD  0   0            ; 6987
ST  2   98           ; 6988
RTN                  ; 6989
LDF 6986             ; 6990
RTN                  ; 6991
LD  2   99           ; 6992
RTN                  ; 6993
LDF 6992             ; 6994
RTN                  ; 6995
LD  2   99           ; 6996
LD  0   0            ; 6997
ST  2   99           ; 6998
RTN                  ; 6999
LDF 6996             ; 7000
RTN                  ; 7001
LD  2   100          ; 7002
RTN                  ; 7003
LDF 7002             ; 7004
RTN                  ; 7005
LD  2   100          ; 7006
LD  0   0            ; 7007
ST  2   100          ; 7008
RTN                  ; 7009
LDF 7006             ; 7010
RTN                  ; 7011
LD  2   101          ; 7012
RTN                  ; 7013
LDF 7012             ; 7014
RTN                  ; 7015
LD  2   101          ; 7016
LD  0   0            ; 7017
ST  2   101          ; 7018
RTN                  ; 7019
LDF 7016             ; 7020
RTN                  ; 7021
LD  2   102          ; 7022
RTN                  ; 7023
LDF 7022             ; 7024
RTN                  ; 7025
LD  2   102          ; 7026
LD  0   0            ; 7027
ST  2   102          ; 7028
RTN                  ; 7029
LDF 7026             ; 7030
RTN                  ; 7031
LD  2   103          ; 7032
RTN                  ; 7033
LDF 7032             ; 7034
RTN                  ; 7035
LD  2   103          ; 7036
LD  0   0            ; 7037
ST  2   103          ; 7038
RTN                  ; 7039
LDF 7036             ; 7040
RTN                  ; 7041
LD  2   104          ; 7042
RTN                  ; 7043
LDF 7042             ; 7044
RTN                  ; 7045
LD  2   104          ; 7046
LD  0   0            ; 7047
ST  2   104          ; 7048
RTN                  ; 7049
LDF 7046             ; 7050
RTN                  ; 7051
LD  2   105          ; 7052
RTN                  ; 7053
LDF 7052             ; 7054
RTN                  ; 7055
LD  2   105          ; 7056
LD  0   0            ; 7057
ST  2   105          ; 7058
RTN                  ; 7059
LDF 7056             ; 7060
RTN                  ; 7061
LD  2   106          ; 7062
RTN                  ; 7063
LDF 7062             ; 7064
RTN                  ; 7065
LD  2   106          ; 7066
LD  0   0            ; 7067
ST  2   106          ; 7068
RTN                  ; 7069
LDF 7066             ; 7070
RTN                  ; 7071
LD  2   107          ; 7072
RTN                  ; 7073
LDF 7072             ; 7074
RTN                  ; 7075
LD  2   107          ; 7076
LD  0   0            ; 7077
ST  2   107          ; 7078
RTN                  ; 7079
LDF 7076             ; 7080
RTN                  ; 7081
LD  2   108          ; 7082
RTN                  ; 7083
LDF 7082             ; 7084
RTN                  ; 7085
LD  2   108          ; 7086
LD  0   0            ; 7087
ST  2   108          ; 7088
RTN                  ; 7089
LDF 7086             ; 7090
RTN                  ; 7091
LD  2   109          ; 7092
RTN                  ; 7093
LDF 7092             ; 7094
RTN                  ; 7095
LD  2   109          ; 7096
LD  0   0            ; 7097
ST  2   109          ; 7098
RTN                  ; 7099
LDF 7096             ; 7100
RTN                  ; 7101
LD  2   110          ; 7102
RTN                  ; 7103
LDF 7102             ; 7104
RTN                  ; 7105
LD  2   110          ; 7106
LD  0   0            ; 7107
ST  2   110          ; 7108
RTN                  ; 7109
LDF 7106             ; 7110
RTN                  ; 7111
LD  2   111          ; 7112
RTN                  ; 7113
LDF 7112             ; 7114
RTN                  ; 7115
LD  2   111          ; 7116
LD  0   0            ; 7117
ST  2   111          ; 7118
RTN                  ; 7119
LDF 7116             ; 7120
RTN                  ; 7121
LD  2   112          ; 7122
RTN                  ; 7123
LDF 7122             ; 7124
RTN                  ; 7125
LD  2   112          ; 7126
LD  0   0            ; 7127
ST  2   112          ; 7128
RTN                  ; 7129
LDF 7126             ; 7130
RTN                  ; 7131
LD  2   113          ; 7132
RTN                  ; 7133
LDF 7132             ; 7134
RTN                  ; 7135
LD  2   113          ; 7136
LD  0   0            ; 7137
ST  2   113          ; 7138
RTN                  ; 7139
LDF 7136             ; 7140
RTN                  ; 7141
LD  2   114          ; 7142
RTN                  ; 7143
LDF 7142             ; 7144
RTN                  ; 7145
LD  2   114          ; 7146
LD  0   0            ; 7147
ST  2   114          ; 7148
RTN                  ; 7149
LDF 7146             ; 7150
RTN                  ; 7151
LD  2   115          ; 7152
RTN                  ; 7153
LDF 7152             ; 7154
RTN                  ; 7155
LD  2   115          ; 7156
LD  0   0            ; 7157
ST  2   115          ; 7158
RTN                  ; 7159
LDF 7156             ; 7160
RTN                  ; 7161
LD  2   116          ; 7162
RTN                  ; 7163
LDF 7162             ; 7164
RTN                  ; 7165
LD  2   116          ; 7166
LD  0   0            ; 7167
ST  2   116          ; 7168
RTN                  ; 7169
LDF 7166             ; 7170
RTN                  ; 7171
LD  2   117          ; 7172
RTN                  ; 7173
LDF 7172             ; 7174
RTN                  ; 7175
LD  2   117          ; 7176
LD  0   0            ; 7177
ST  2   117          ; 7178
RTN                  ; 7179
LDF 7176             ; 7180
RTN                  ; 7181
LD  2   118          ; 7182
RTN                  ; 7183
LDF 7182             ; 7184
RTN                  ; 7185
LD  2   118          ; 7186
LD  0   0            ; 7187
ST  2   118          ; 7188
RTN                  ; 7189
LDF 7186             ; 7190
RTN                  ; 7191
LD  2   119          ; 7192
RTN                  ; 7193
LDF 7192             ; 7194
RTN                  ; 7195
LD  2   119          ; 7196
LD  0   0            ; 7197
ST  2   119          ; 7198
RTN                  ; 7199
LDF 7196             ; 7200
RTN                  ; 7201
LD  2   120          ; 7202
RTN                  ; 7203
LDF 7202             ; 7204
RTN                  ; 7205
LD  2   120          ; 7206
LD  0   0            ; 7207
ST  2   120          ; 7208
RTN                  ; 7209
LDF 7206             ; 7210
RTN                  ; 7211
LD  2   121          ; 7212
RTN                  ; 7213
LDF 7212             ; 7214
RTN                  ; 7215
LD  2   121          ; 7216
LD  0   0            ; 7217
ST  2   121          ; 7218
RTN                  ; 7219
LDF 7216             ; 7220
RTN                  ; 7221
LD  2   122          ; 7222
RTN                  ; 7223
LDF 7222             ; 7224
RTN                  ; 7225
LD  2   122          ; 7226
LD  0   0            ; 7227
ST  2   122          ; 7228
RTN                  ; 7229
LDF 7226             ; 7230
RTN                  ; 7231
LD  2   123          ; 7232
RTN                  ; 7233
LDF 7232             ; 7234
RTN                  ; 7235
LD  2   123          ; 7236
LD  0   0            ; 7237
ST  2   123          ; 7238
RTN                  ; 7239
LDF 7236             ; 7240
RTN                  ; 7241
LD  2   124          ; 7242
RTN                  ; 7243
LDF 7242             ; 7244
RTN                  ; 7245
LD  2   124          ; 7246
LD  0   0            ; 7247
ST  2   124          ; 7248
RTN                  ; 7249
LDF 7246             ; 7250
RTN                  ; 7251
LD  2   125          ; 7252
RTN                  ; 7253
LDF 7252             ; 7254
RTN                  ; 7255
LD  2   125          ; 7256
LD  0   0            ; 7257
ST  2   125          ; 7258
RTN                  ; 7259
LDF 7256             ; 7260
RTN                  ; 7261
LD  2   126          ; 7262
RTN                  ; 7263
LDF 7262             ; 7264
RTN                  ; 7265
LD  2   126          ; 7266
LD  0   0            ; 7267
ST  2   126          ; 7268
RTN                  ; 7269
LDF 7266             ; 7270
RTN                  ; 7271
LD  2   127          ; 7272
RTN                  ; 7273
LDF 7272             ; 7274
RTN                  ; 7275
LD  2   127          ; 7276
LD  0   0            ; 7277
ST  2   127          ; 7278
RTN                  ; 7279
LDF 7276             ; 7280
RTN                  ; 7281
LD  2   128          ; 7282
RTN                  ; 7283
LDF 7282             ; 7284
RTN                  ; 7285
LD  2   128          ; 7286
LD  0   0            ; 7287
ST  2   128          ; 7288
RTN                  ; 7289
LDF 7286             ; 7290
RTN                  ; 7291
LD  2   129          ; 7292
RTN                  ; 7293
LDF 7292             ; 7294
RTN                  ; 7295
LD  2   129          ; 7296
LD  0   0            ; 7297
ST  2   129          ; 7298
RTN                  ; 7299
LDF 7296             ; 7300
RTN                  ; 7301
LD  2   130          ; 7302
RTN                  ; 7303
LDF 7302             ; 7304
RTN                  ; 7305
LD  2   130          ; 7306
LD  0   0            ; 7307
ST  2   130          ; 7308
RTN                  ; 7309
LDF 7306             ; 7310
RTN                  ; 7311
LD  2   131          ; 7312
RTN                  ; 7313
LDF 7312             ; 7314
RTN                  ; 7315
LD  2   131          ; 7316
LD  0   0            ; 7317
ST  2   131          ; 7318
RTN                  ; 7319
LDF 7316             ; 7320
RTN                  ; 7321
LD  2   132          ; 7322
RTN                  ; 7323
LDF 7322             ; 7324
RTN                  ; 7325
LD  2   132          ; 7326
LD  0   0            ; 7327
ST  2   132          ; 7328
RTN                  ; 7329
LDF 7326             ; 7330
RTN                  ; 7331
LD  2   133          ; 7332
RTN                  ; 7333
LDF 7332             ; 7334
RTN                  ; 7335
LD  2   133          ; 7336
LD  0   0            ; 7337
ST  2   133          ; 7338
RTN                  ; 7339
LDF 7336             ; 7340
RTN                  ; 7341
LD  2   134          ; 7342
RTN                  ; 7343
LDF 7342             ; 7344
RTN                  ; 7345
LD  2   134          ; 7346
LD  0   0            ; 7347
ST  2   134          ; 7348
RTN                  ; 7349
LDF 7346             ; 7350
RTN                  ; 7351
LD  2   135          ; 7352
RTN                  ; 7353
LDF 7352             ; 7354
RTN                  ; 7355
LD  2   135          ; 7356
LD  0   0            ; 7357
ST  2   135          ; 7358
RTN                  ; 7359
LDF 7356             ; 7360
RTN                  ; 7361
LD  2   136          ; 7362
RTN                  ; 7363
LDF 7362             ; 7364
RTN                  ; 7365
LD  2   136          ; 7366
LD  0   0            ; 7367
ST  2   136          ; 7368
RTN                  ; 7369
LDF 7366             ; 7370
RTN                  ; 7371
LD  2   137          ; 7372
RTN                  ; 7373
LDF 7372             ; 7374
RTN                  ; 7375
LD  2   137          ; 7376
LD  0   0            ; 7377
ST  2   137          ; 7378
RTN                  ; 7379
LDF 7376             ; 7380
RTN                  ; 7381
LD  2   138          ; 7382
RTN                  ; 7383
LDF 7382             ; 7384
RTN                  ; 7385
LD  2   138          ; 7386
LD  0   0            ; 7387
ST  2   138          ; 7388
RTN                  ; 7389
LDF 7386             ; 7390
RTN                  ; 7391
LD  2   139          ; 7392
RTN                  ; 7393
LDF 7392             ; 7394
RTN                  ; 7395
LD  2   139          ; 7396
LD  0   0            ; 7397
ST  2   139          ; 7398
RTN                  ; 7399
LDF 7396             ; 7400
RTN                  ; 7401
LD  2   140          ; 7402
RTN                  ; 7403
LDF 7402             ; 7404
RTN                  ; 7405
LD  2   140          ; 7406
LD  0   0            ; 7407
ST  2   140          ; 7408
RTN                  ; 7409
LDF 7406             ; 7410
RTN                  ; 7411
LD  2   141          ; 7412
RTN                  ; 7413
LDF 7412             ; 7414
RTN                  ; 7415
LD  2   141          ; 7416
LD  0   0            ; 7417
ST  2   141          ; 7418
RTN                  ; 7419
LDF 7416             ; 7420
RTN                  ; 7421
LD  2   142          ; 7422
RTN                  ; 7423
LDF 7422             ; 7424
RTN                  ; 7425
LD  2   142          ; 7426
LD  0   0            ; 7427
ST  2   142          ; 7428
RTN                  ; 7429
LDF 7426             ; 7430
RTN                  ; 7431
LD  2   143          ; 7432
RTN                  ; 7433
LDF 7432             ; 7434
RTN                  ; 7435
LD  2   143          ; 7436
LD  0   0            ; 7437
ST  2   143          ; 7438
RTN                  ; 7439
LDF 7436             ; 7440
RTN                  ; 7441
LD  2   144          ; 7442
RTN                  ; 7443
LDF 7442             ; 7444
RTN                  ; 7445
LD  2   144          ; 7446
LD  0   0            ; 7447
ST  2   144          ; 7448
RTN                  ; 7449
LDF 7446             ; 7450
RTN                  ; 7451
LD  2   145          ; 7452
RTN                  ; 7453
LDF 7452             ; 7454
RTN                  ; 7455
LD  2   145          ; 7456
LD  0   0            ; 7457
ST  2   145          ; 7458
RTN                  ; 7459
LDF 7456             ; 7460
RTN                  ; 7461
LD  2   146          ; 7462
RTN                  ; 7463
LDF 7462             ; 7464
RTN                  ; 7465
LD  2   146          ; 7466
LD  0   0            ; 7467
ST  2   146          ; 7468
RTN                  ; 7469
LDF 7466             ; 7470
RTN                  ; 7471
LD  2   147          ; 7472
RTN                  ; 7473
LDF 7472             ; 7474
RTN                  ; 7475
LD  2   147          ; 7476
LD  0   0            ; 7477
ST  2   147          ; 7478
RTN                  ; 7479
LDF 7476             ; 7480
RTN                  ; 7481
LD  2   148          ; 7482
RTN                  ; 7483
LDF 7482             ; 7484
RTN                  ; 7485
LD  2   148          ; 7486
LD  0   0            ; 7487
ST  2   148          ; 7488
RTN                  ; 7489
LDF 7486             ; 7490
RTN                  ; 7491
LD  2   149          ; 7492
RTN                  ; 7493
LDF 7492             ; 7494
RTN                  ; 7495
LD  2   149          ; 7496
LD  0   0            ; 7497
ST  2   149          ; 7498
RTN                  ; 7499
LDF 7496             ; 7500
RTN                  ; 7501
LD  2   150          ; 7502
RTN                  ; 7503
LDF 7502             ; 7504
RTN                  ; 7505
LD  2   150          ; 7506
LD  0   0            ; 7507
ST  2   150          ; 7508
RTN                  ; 7509
LDF 7506             ; 7510
RTN                  ; 7511
LD  2   151          ; 7512
RTN                  ; 7513
LDF 7512             ; 7514
RTN                  ; 7515
LD  2   151          ; 7516
LD  0   0            ; 7517
ST  2   151          ; 7518
RTN                  ; 7519
LDF 7516             ; 7520
RTN                  ; 7521
LD  2   152          ; 7522
RTN                  ; 7523
LDF 7522             ; 7524
RTN                  ; 7525
LD  2   152          ; 7526
LD  0   0            ; 7527
ST  2   152          ; 7528
RTN                  ; 7529
LDF 7526             ; 7530
RTN                  ; 7531
LD  2   153          ; 7532
RTN                  ; 7533
LDF 7532             ; 7534
RTN                  ; 7535
LD  2   153          ; 7536
LD  0   0            ; 7537
ST  2   153          ; 7538
RTN                  ; 7539
LDF 7536             ; 7540
RTN                  ; 7541
LD  2   154          ; 7542
RTN                  ; 7543
LDF 7542             ; 7544
RTN                  ; 7545
LD  2   154          ; 7546
LD  0   0            ; 7547
ST  2   154          ; 7548
RTN                  ; 7549
LDF 7546             ; 7550
RTN                  ; 7551
LD  2   155          ; 7552
RTN                  ; 7553
LDF 7552             ; 7554
RTN                  ; 7555
LD  2   155          ; 7556
LD  0   0            ; 7557
ST  2   155          ; 7558
RTN                  ; 7559
LDF 7556             ; 7560
RTN                  ; 7561
LD  2   156          ; 7562
RTN                  ; 7563
LDF 7562             ; 7564
RTN                  ; 7565
LD  2   156          ; 7566
LD  0   0            ; 7567
ST  2   156          ; 7568
RTN                  ; 7569
LDF 7566             ; 7570
RTN                  ; 7571
LD  2   157          ; 7572
RTN                  ; 7573
LDF 7572             ; 7574
RTN                  ; 7575
LD  2   157          ; 7576
LD  0   0            ; 7577
ST  2   157          ; 7578
RTN                  ; 7579
LDF 7576             ; 7580
RTN                  ; 7581
LD  2   158          ; 7582
RTN                  ; 7583
LDF 7582             ; 7584
RTN                  ; 7585
LD  2   158          ; 7586
LD  0   0            ; 7587
ST  2   158          ; 7588
RTN                  ; 7589
LDF 7586             ; 7590
RTN                  ; 7591
LD  2   159          ; 7592
RTN                  ; 7593
LDF 7592             ; 7594
RTN                  ; 7595
LD  2   159          ; 7596
LD  0   0            ; 7597
ST  2   159          ; 7598
RTN                  ; 7599
LDF 7596             ; 7600
RTN                  ; 7601
LD  2   160          ; 7602
RTN                  ; 7603
LDF 7602             ; 7604
RTN                  ; 7605
LD  2   160          ; 7606
LD  0   0            ; 7607
ST  2   160          ; 7608
RTN                  ; 7609
LDF 7606             ; 7610
RTN                  ; 7611
LD  2   161          ; 7612
RTN                  ; 7613
LDF 7612             ; 7614
RTN                  ; 7615
LD  2   161          ; 7616
LD  0   0            ; 7617
ST  2   161          ; 7618
RTN                  ; 7619
LDF 7616             ; 7620
RTN                  ; 7621
LD  2   162          ; 7622
RTN                  ; 7623
LDF 7622             ; 7624
RTN                  ; 7625
LD  2   162          ; 7626
LD  0   0            ; 7627
ST  2   162          ; 7628
RTN                  ; 7629
LDF 7626             ; 7630
RTN                  ; 7631
LD  2   163          ; 7632
RTN                  ; 7633
LDF 7632             ; 7634
RTN                  ; 7635
LD  2   163          ; 7636
LD  0   0            ; 7637
ST  2   163          ; 7638
RTN                  ; 7639
LDF 7636             ; 7640
RTN                  ; 7641
LD  2   164          ; 7642
RTN                  ; 7643
LDF 7642             ; 7644
RTN                  ; 7645
LD  2   164          ; 7646
LD  0   0            ; 7647
ST  2   164          ; 7648
RTN                  ; 7649
LDF 7646             ; 7650
RTN                  ; 7651
LD  2   165          ; 7652
RTN                  ; 7653
LDF 7652             ; 7654
RTN                  ; 7655
LD  2   165          ; 7656
LD  0   0            ; 7657
ST  2   165          ; 7658
RTN                  ; 7659
LDF 7656             ; 7660
RTN                  ; 7661
LD  2   166          ; 7662
RTN                  ; 7663
LDF 7662             ; 7664
RTN                  ; 7665
LD  2   166          ; 7666
LD  0   0            ; 7667
ST  2   166          ; 7668
RTN                  ; 7669
LDF 7666             ; 7670
RTN                  ; 7671
LD  2   167          ; 7672
RTN                  ; 7673
LDF 7672             ; 7674
RTN                  ; 7675
LD  2   167          ; 7676
LD  0   0            ; 7677
ST  2   167          ; 7678
RTN                  ; 7679
LDF 7676             ; 7680
RTN                  ; 7681
LD  2   168          ; 7682
RTN                  ; 7683
LDF 7682             ; 7684
RTN                  ; 7685
LD  2   168          ; 7686
LD  0   0            ; 7687
ST  2   168          ; 7688
RTN                  ; 7689
LDF 7686             ; 7690
RTN                  ; 7691
LD  2   169          ; 7692
RTN                  ; 7693
LDF 7692             ; 7694
RTN                  ; 7695
LD  2   169          ; 7696
LD  0   0            ; 7697
ST  2   169          ; 7698
RTN                  ; 7699
LDF 7696             ; 7700
RTN                  ; 7701
LD  2   170          ; 7702
RTN                  ; 7703
LDF 7702             ; 7704
RTN                  ; 7705
LD  2   170          ; 7706
LD  0   0            ; 7707
ST  2   170          ; 7708
RTN                  ; 7709
LDF 7706             ; 7710
RTN                  ; 7711
LD  2   171          ; 7712
RTN                  ; 7713
LDF 7712             ; 7714
RTN                  ; 7715
LD  2   171          ; 7716
LD  0   0            ; 7717
ST  2   171          ; 7718
RTN                  ; 7719
LDF 7716             ; 7720
RTN                  ; 7721
LD  2   172          ; 7722
RTN                  ; 7723
LDF 7722             ; 7724
RTN                  ; 7725
LD  2   172          ; 7726
LD  0   0            ; 7727
ST  2   172          ; 7728
RTN                  ; 7729
LDF 7726             ; 7730
RTN                  ; 7731
LD  2   173          ; 7732
RTN                  ; 7733
LDF 7732             ; 7734
RTN                  ; 7735
LD  2   173          ; 7736
LD  0   0            ; 7737
ST  2   173          ; 7738
RTN                  ; 7739
LDF 7736             ; 7740
RTN                  ; 7741
LD  2   174          ; 7742
RTN                  ; 7743
LDF 7742             ; 7744
RTN                  ; 7745
LD  2   174          ; 7746
LD  0   0            ; 7747
ST  2   174          ; 7748
RTN                  ; 7749
LDF 7746             ; 7750
RTN                  ; 7751
LD  2   175          ; 7752
RTN                  ; 7753
LDF 7752             ; 7754
RTN                  ; 7755
LD  2   175          ; 7756
LD  0   0            ; 7757
ST  2   175          ; 7758
RTN                  ; 7759
LDF 7756             ; 7760
RTN                  ; 7761
LD  2   176          ; 7762
RTN                  ; 7763
LDF 7762             ; 7764
RTN                  ; 7765
LD  2   176          ; 7766
LD  0   0            ; 7767
ST  2   176          ; 7768
RTN                  ; 7769
LDF 7766             ; 7770
RTN                  ; 7771
LD  2   177          ; 7772
RTN                  ; 7773
LDF 7772             ; 7774
RTN                  ; 7775
LD  2   177          ; 7776
LD  0   0            ; 7777
ST  2   177          ; 7778
RTN                  ; 7779
LDF 7776             ; 7780
RTN                  ; 7781
LD  2   178          ; 7782
RTN                  ; 7783
LDF 7782             ; 7784
RTN                  ; 7785
LD  2   178          ; 7786
LD  0   0            ; 7787
ST  2   178          ; 7788
RTN                  ; 7789
LDF 7786             ; 7790
RTN                  ; 7791
LD  2   179          ; 7792
RTN                  ; 7793
LDF 7792             ; 7794
RTN                  ; 7795
LD  2   179          ; 7796
LD  0   0            ; 7797
ST  2   179          ; 7798
RTN                  ; 7799
LDF 7796             ; 7800
RTN                  ; 7801
LD  2   180          ; 7802
RTN                  ; 7803
LDF 7802             ; 7804
RTN                  ; 7805
LD  2   180          ; 7806
LD  0   0            ; 7807
ST  2   180          ; 7808
RTN                  ; 7809
LDF 7806             ; 7810
RTN                  ; 7811
LD  2   181          ; 7812
RTN                  ; 7813
LDF 7812             ; 7814
RTN                  ; 7815
LD  2   181          ; 7816
LD  0   0            ; 7817
ST  2   181          ; 7818
RTN                  ; 7819
LDF 7816             ; 7820
RTN                  ; 7821
LD  2   182          ; 7822
RTN                  ; 7823
LDF 7822             ; 7824
RTN                  ; 7825
LD  2   182          ; 7826
LD  0   0            ; 7827
ST  2   182          ; 7828
RTN                  ; 7829
LDF 7826             ; 7830
RTN                  ; 7831
LD  2   183          ; 7832
RTN                  ; 7833
LDF 7832             ; 7834
RTN                  ; 7835
LD  2   183          ; 7836
LD  0   0            ; 7837
ST  2   183          ; 7838
RTN                  ; 7839
LDF 7836             ; 7840
RTN                  ; 7841
LD  2   184          ; 7842
RTN                  ; 7843
LDF 7842             ; 7844
RTN                  ; 7845
LD  2   184          ; 7846
LD  0   0            ; 7847
ST  2   184          ; 7848
RTN                  ; 7849
LDF 7846             ; 7850
RTN                  ; 7851
LD  2   185          ; 7852
RTN                  ; 7853
LDF 7852             ; 7854
RTN                  ; 7855
LD  2   185          ; 7856
LD  0   0            ; 7857
ST  2   185          ; 7858
RTN                  ; 7859
LDF 7856             ; 7860
RTN                  ; 7861
LD  2   186          ; 7862
RTN                  ; 7863
LDF 7862             ; 7864
RTN                  ; 7865
LD  2   186          ; 7866
LD  0   0            ; 7867
ST  2   186          ; 7868
RTN                  ; 7869
LDF 7866             ; 7870
RTN                  ; 7871
LD  2   187          ; 7872
RTN                  ; 7873
LDF 7872             ; 7874
RTN                  ; 7875
LD  2   187          ; 7876
LD  0   0            ; 7877
ST  2   187          ; 7878
RTN                  ; 7879
LDF 7876             ; 7880
RTN                  ; 7881
LD  2   188          ; 7882
RTN                  ; 7883
LDF 7882             ; 7884
RTN                  ; 7885
LD  2   188          ; 7886
LD  0   0            ; 7887
ST  2   188          ; 7888
RTN                  ; 7889
LDF 7886             ; 7890
RTN                  ; 7891
LD  2   189          ; 7892
RTN                  ; 7893
LDF 7892             ; 7894
RTN                  ; 7895
LD  2   189          ; 7896
LD  0   0            ; 7897
ST  2   189          ; 7898
RTN                  ; 7899
LDF 7896             ; 7900
RTN                  ; 7901
LD  2   190          ; 7902
RTN                  ; 7903
LDF 7902             ; 7904
RTN                  ; 7905
LD  2   190          ; 7906
LD  0   0            ; 7907
ST  2   190          ; 7908
RTN                  ; 7909
LDF 7906             ; 7910
RTN                  ; 7911
LD  2   191          ; 7912
RTN                  ; 7913
LDF 7912             ; 7914
RTN                  ; 7915
LD  2   191          ; 7916
LD  0   0            ; 7917
ST  2   191          ; 7918
RTN                  ; 7919
LDF 7916             ; 7920
RTN                  ; 7921
LD  2   192          ; 7922
RTN                  ; 7923
LDF 7922             ; 7924
RTN                  ; 7925
LD  2   192          ; 7926
LD  0   0            ; 7927
ST  2   192          ; 7928
RTN                  ; 7929
LDF 7926             ; 7930
RTN                  ; 7931
LD  2   193          ; 7932
RTN                  ; 7933
LDF 7932             ; 7934
RTN                  ; 7935
LD  2   193          ; 7936
LD  0   0            ; 7937
ST  2   193          ; 7938
RTN                  ; 7939
LDF 7936             ; 7940
RTN                  ; 7941
LD  2   194          ; 7942
RTN                  ; 7943
LDF 7942             ; 7944
RTN                  ; 7945
LD  2   194          ; 7946
LD  0   0            ; 7947
ST  2   194          ; 7948
RTN                  ; 7949
LDF 7946             ; 7950
RTN                  ; 7951
LD  2   195          ; 7952
RTN                  ; 7953
LDF 7952             ; 7954
RTN                  ; 7955
LD  2   195          ; 7956
LD  0   0            ; 7957
ST  2   195          ; 7958
RTN                  ; 7959
LDF 7956             ; 7960
RTN                  ; 7961
LD  2   196          ; 7962
RTN                  ; 7963
LDF 7962             ; 7964
RTN                  ; 7965
LD  2   196          ; 7966
LD  0   0            ; 7967
ST  2   196          ; 7968
RTN                  ; 7969
LDF 7966             ; 7970
RTN                  ; 7971
LD  2   197          ; 7972
RTN                  ; 7973
LDF 7972             ; 7974
RTN                  ; 7975
LD  2   197          ; 7976
LD  0   0            ; 7977
ST  2   197          ; 7978
RTN                  ; 7979
LDF 7976             ; 7980
RTN                  ; 7981
LD  2   198          ; 7982
RTN                  ; 7983
LDF 7982             ; 7984
RTN                  ; 7985
LD  2   198          ; 7986
LD  0   0            ; 7987
ST  2   198          ; 7988
RTN                  ; 7989
LDF 7986             ; 7990
RTN                  ; 7991
LD  2   199          ; 7992
RTN                  ; 7993
LDF 7992             ; 7994
RTN                  ; 7995
LD  2   199          ; 7996
LD  0   0            ; 7997
ST  2   199          ; 7998
RTN                  ; 7999
LDF 7996             ; 8000
RTN                  ; 8001
LD  2   200          ; 8002
RTN                  ; 8003
LDF 8002             ; 8004
RTN                  ; 8005
LD  2   200          ; 8006
LD  0   0            ; 8007
ST  2   200          ; 8008
RTN                  ; 8009
LDF 8006             ; 8010
RTN                  ; 8011
LD  2   201          ; 8012
RTN                  ; 8013
LDF 8012             ; 8014
RTN                  ; 8015
LD  2   201          ; 8016
LD  0   0            ; 8017
ST  2   201          ; 8018
RTN                  ; 8019
LDF 8016             ; 8020
RTN                  ; 8021
LD  2   202          ; 8022
RTN                  ; 8023
LDF 8022             ; 8024
RTN                  ; 8025
LD  2   202          ; 8026
LD  0   0            ; 8027
ST  2   202          ; 8028
RTN                  ; 8029
LDF 8026             ; 8030
RTN                  ; 8031
LD  2   203          ; 8032
RTN                  ; 8033
LDF 8032             ; 8034
RTN                  ; 8035
LD  2   203          ; 8036
LD  0   0            ; 8037
ST  2   203          ; 8038
RTN                  ; 8039
LDF 8036             ; 8040
RTN                  ; 8041
LD  2   204          ; 8042
RTN                  ; 8043
LDF 8042             ; 8044
RTN                  ; 8045
LD  2   204          ; 8046
LD  0   0            ; 8047
ST  2   204          ; 8048
RTN                  ; 8049
LDF 8046             ; 8050
RTN                  ; 8051
LD  2   205          ; 8052
RTN                  ; 8053
LDF 8052             ; 8054
RTN                  ; 8055
LD  2   205          ; 8056
LD  0   0            ; 8057
ST  2   205          ; 8058
RTN                  ; 8059
LDF 8056             ; 8060
RTN                  ; 8061
LD  2   206          ; 8062
RTN                  ; 8063
LDF 8062             ; 8064
RTN                  ; 8065
LD  2   206          ; 8066
LD  0   0            ; 8067
ST  2   206          ; 8068
RTN                  ; 8069
LDF 8066             ; 8070
RTN                  ; 8071
LD  2   207          ; 8072
RTN                  ; 8073
LDF 8072             ; 8074
RTN                  ; 8075
LD  2   207          ; 8076
LD  0   0            ; 8077
ST  2   207          ; 8078
RTN                  ; 8079
LDF 8076             ; 8080
RTN                  ; 8081
LD  2   208          ; 8082
RTN                  ; 8083
LDF 8082             ; 8084
RTN                  ; 8085
LD  2   208          ; 8086
LD  0   0            ; 8087
ST  2   208          ; 8088
RTN                  ; 8089
LDF 8086             ; 8090
RTN                  ; 8091
LD  2   209          ; 8092
RTN                  ; 8093
LDF 8092             ; 8094
RTN                  ; 8095
LD  2   209          ; 8096
LD  0   0            ; 8097
ST  2   209          ; 8098
RTN                  ; 8099
LDF 8096             ; 8100
RTN                  ; 8101
LD  2   210          ; 8102
RTN                  ; 8103
LDF 8102             ; 8104
RTN                  ; 8105
LD  2   210          ; 8106
LD  0   0            ; 8107
ST  2   210          ; 8108
RTN                  ; 8109
LDF 8106             ; 8110
RTN                  ; 8111
LD  2   211          ; 8112
RTN                  ; 8113
LDF 8112             ; 8114
RTN                  ; 8115
LD  2   211          ; 8116
LD  0   0            ; 8117
ST  2   211          ; 8118
RTN                  ; 8119
LDF 8116             ; 8120
RTN                  ; 8121
LD  2   212          ; 8122
RTN                  ; 8123
LDF 8122             ; 8124
RTN                  ; 8125
LD  2   212          ; 8126
LD  0   0            ; 8127
ST  2   212          ; 8128
RTN                  ; 8129
LDF 8126             ; 8130
RTN                  ; 8131
LD  2   213          ; 8132
RTN                  ; 8133
LDF 8132             ; 8134
RTN                  ; 8135
LD  2   213          ; 8136
LD  0   0            ; 8137
ST  2   213          ; 8138
RTN                  ; 8139
LDF 8136             ; 8140
RTN                  ; 8141
LD  2   214          ; 8142
RTN                  ; 8143
LDF 8142             ; 8144
RTN                  ; 8145
LD  2   214          ; 8146
LD  0   0            ; 8147
ST  2   214          ; 8148
RTN                  ; 8149
LDF 8146             ; 8150
RTN                  ; 8151
LD  2   215          ; 8152
RTN                  ; 8153
LDF 8152             ; 8154
RTN                  ; 8155
LD  2   215          ; 8156
LD  0   0            ; 8157
ST  2   215          ; 8158
RTN                  ; 8159
LDF 8156             ; 8160
RTN                  ; 8161
LD  2   216          ; 8162
RTN                  ; 8163
LDF 8162             ; 8164
RTN                  ; 8165
LD  2   216          ; 8166
LD  0   0            ; 8167
ST  2   216          ; 8168
RTN                  ; 8169
LDF 8166             ; 8170
RTN                  ; 8171
LD  2   217          ; 8172
RTN                  ; 8173
LDF 8172             ; 8174
RTN                  ; 8175
LD  2   217          ; 8176
LD  0   0            ; 8177
ST  2   217          ; 8178
RTN                  ; 8179
LDF 8176             ; 8180
RTN                  ; 8181
LD  2   218          ; 8182
RTN                  ; 8183
LDF 8182             ; 8184
RTN                  ; 8185
LD  2   218          ; 8186
LD  0   0            ; 8187
ST  2   218          ; 8188
RTN                  ; 8189
LDF 8186             ; 8190
RTN                  ; 8191
LD  2   219          ; 8192
RTN                  ; 8193
LDF 8192             ; 8194
RTN                  ; 8195
LD  2   219          ; 8196
LD  0   0            ; 8197
ST  2   219          ; 8198
RTN                  ; 8199
LDF 8196             ; 8200
RTN                  ; 8201
LD  2   220          ; 8202
RTN                  ; 8203
LDF 8202             ; 8204
RTN                  ; 8205
LD  2   220          ; 8206
LD  0   0            ; 8207
ST  2   220          ; 8208
RTN                  ; 8209
LDF 8206             ; 8210
RTN                  ; 8211
LD  2   221          ; 8212
RTN                  ; 8213
LDF 8212             ; 8214
RTN                  ; 8215
LD  2   221          ; 8216
LD  0   0            ; 8217
ST  2   221          ; 8218
RTN                  ; 8219
LDF 8216             ; 8220
RTN                  ; 8221
LD  2   222          ; 8222
RTN                  ; 8223
LDF 8222             ; 8224
RTN                  ; 8225
LD  2   222          ; 8226
LD  0   0            ; 8227
ST  2   222          ; 8228
RTN                  ; 8229
LDF 8226             ; 8230
RTN                  ; 8231
LD  2   223          ; 8232
RTN                  ; 8233
LDF 8232             ; 8234
RTN                  ; 8235
LD  2   223          ; 8236
LD  0   0            ; 8237
ST  2   223          ; 8238
RTN                  ; 8239
LDF 8236             ; 8240
RTN                  ; 8241
LD  2   224          ; 8242
RTN                  ; 8243
LDF 8242             ; 8244
RTN                  ; 8245
LD  2   224          ; 8246
LD  0   0            ; 8247
ST  2   224          ; 8248
RTN                  ; 8249
LDF 8246             ; 8250
RTN                  ; 8251
LD  2   225          ; 8252
RTN                  ; 8253
LDF 8252             ; 8254
RTN                  ; 8255
LD  2   225          ; 8256
LD  0   0            ; 8257
ST  2   225          ; 8258
RTN                  ; 8259
LDF 8256             ; 8260
RTN                  ; 8261
LD  2   226          ; 8262
RTN                  ; 8263
LDF 8262             ; 8264
RTN                  ; 8265
LD  2   226          ; 8266
LD  0   0            ; 8267
ST  2   226          ; 8268
RTN                  ; 8269
LDF 8266             ; 8270
RTN                  ; 8271
LD  2   227          ; 8272
RTN                  ; 8273
LDF 8272             ; 8274
RTN                  ; 8275
LD  2   227          ; 8276
LD  0   0            ; 8277
ST  2   227          ; 8278
RTN                  ; 8279
LDF 8276             ; 8280
RTN                  ; 8281
LD  2   228          ; 8282
RTN                  ; 8283
LDF 8282             ; 8284
RTN                  ; 8285
LD  2   228          ; 8286
LD  0   0            ; 8287
ST  2   228          ; 8288
RTN                  ; 8289
LDF 8286             ; 8290
RTN                  ; 8291
LD  2   229          ; 8292
RTN                  ; 8293
LDF 8292             ; 8294
RTN                  ; 8295
LD  2   229          ; 8296
LD  0   0            ; 8297
ST  2   229          ; 8298
RTN                  ; 8299
LDF 8296             ; 8300
RTN                  ; 8301
LD  2   230          ; 8302
RTN                  ; 8303
LDF 8302             ; 8304
RTN                  ; 8305
LD  2   230          ; 8306
LD  0   0            ; 8307
ST  2   230          ; 8308
RTN                  ; 8309
LDF 8306             ; 8310
RTN                  ; 8311
LD  2   231          ; 8312
RTN                  ; 8313
LDF 8312             ; 8314
RTN                  ; 8315
LD  2   231          ; 8316
LD  0   0            ; 8317
ST  2   231          ; 8318
RTN                  ; 8319
LDF 8316             ; 8320
RTN                  ; 8321
LD  2   232          ; 8322
RTN                  ; 8323
LDF 8322             ; 8324
RTN                  ; 8325
LD  2   232          ; 8326
LD  0   0            ; 8327
ST  2   232          ; 8328
RTN                  ; 8329
LDF 8326             ; 8330
RTN                  ; 8331
LD  2   233          ; 8332
RTN                  ; 8333
LDF 8332             ; 8334
RTN                  ; 8335
LD  2   233          ; 8336
LD  0   0            ; 8337
ST  2   233          ; 8338
RTN                  ; 8339
LDF 8336             ; 8340
RTN                  ; 8341
LD  2   234          ; 8342
RTN                  ; 8343
LDF 8342             ; 8344
RTN                  ; 8345
LD  2   234          ; 8346
LD  0   0            ; 8347
ST  2   234          ; 8348
RTN                  ; 8349
LDF 8346             ; 8350
RTN                  ; 8351
LD  2   235          ; 8352
RTN                  ; 8353
LDF 8352             ; 8354
RTN                  ; 8355
LD  2   235          ; 8356
LD  0   0            ; 8357
ST  2   235          ; 8358
RTN                  ; 8359
LDF 8356             ; 8360
RTN                  ; 8361
LD  2   236          ; 8362
RTN                  ; 8363
LDF 8362             ; 8364
RTN                  ; 8365
LD  2   236          ; 8366
LD  0   0            ; 8367
ST  2   236          ; 8368
RTN                  ; 8369
LDF 8366             ; 8370
RTN                  ; 8371
LD  2   237          ; 8372
RTN                  ; 8373
LDF 8372             ; 8374
RTN                  ; 8375
LD  2   237          ; 8376
LD  0   0            ; 8377
ST  2   237          ; 8378
RTN                  ; 8379
LDF 8376             ; 8380
RTN                  ; 8381
LD  2   238          ; 8382
RTN                  ; 8383
LDF 8382             ; 8384
RTN                  ; 8385
LD  2   238          ; 8386
LD  0   0            ; 8387
ST  2   238          ; 8388
RTN                  ; 8389
LDF 8386             ; 8390
RTN                  ; 8391
LD  2   239          ; 8392
RTN                  ; 8393
LDF 8392             ; 8394
RTN                  ; 8395
LD  2   239          ; 8396
LD  0   0            ; 8397
ST  2   239          ; 8398
RTN                  ; 8399
LDF 8396             ; 8400
RTN                  ; 8401
LD  2   240          ; 8402
RTN                  ; 8403
LDF 8402             ; 8404
RTN                  ; 8405
LD  2   240          ; 8406
LD  0   0            ; 8407
ST  2   240          ; 8408
RTN                  ; 8409
LDF 8406             ; 8410
RTN                  ; 8411
LD  2   241          ; 8412
RTN                  ; 8413
LDF 8412             ; 8414
RTN                  ; 8415
LD  2   241          ; 8416
LD  0   0            ; 8417
ST  2   241          ; 8418
RTN                  ; 8419
LDF 8416             ; 8420
RTN                  ; 8421
LD  2   242          ; 8422
RTN                  ; 8423
LDF 8422             ; 8424
RTN                  ; 8425
LD  2   242          ; 8426
LD  0   0            ; 8427
ST  2   242          ; 8428
RTN                  ; 8429
LDF 8426             ; 8430
RTN                  ; 8431
LD  2   243          ; 8432
RTN                  ; 8433
LDF 8432             ; 8434
RTN                  ; 8435
LD  2   243          ; 8436
LD  0   0            ; 8437
ST  2   243          ; 8438
RTN                  ; 8439
LDF 8436             ; 8440
RTN                  ; 8441
LD  2   244          ; 8442
RTN                  ; 8443
LDF 8442             ; 8444
RTN                  ; 8445
LD  2   244          ; 8446
LD  0   0            ; 8447
ST  2   244          ; 8448
RTN                  ; 8449
LDF 8446             ; 8450
RTN                  ; 8451
LD  2   245          ; 8452
RTN                  ; 8453
LDF 8452             ; 8454
RTN                  ; 8455
LD  2   245          ; 8456
LD  0   0            ; 8457
ST  2   245          ; 8458
RTN                  ; 8459
LDF 8456             ; 8460
RTN                  ; 8461
LD  2   246          ; 8462
RTN                  ; 8463
LDF 8462             ; 8464
RTN                  ; 8465
LD  2   246          ; 8466
LD  0   0            ; 8467
ST  2   246          ; 8468
RTN                  ; 8469
LDF 8466             ; 8470
RTN                  ; 8471
LD  2   247          ; 8472
RTN                  ; 8473
LDF 8472             ; 8474
RTN                  ; 8475
LD  2   247          ; 8476
LD  0   0            ; 8477
ST  2   247          ; 8478
RTN                  ; 8479
LDF 8476             ; 8480
RTN                  ; 8481
LD  2   248          ; 8482
RTN                  ; 8483
LDF 8482             ; 8484
RTN                  ; 8485
LD  2   248          ; 8486
LD  0   0            ; 8487
ST  2   248          ; 8488
RTN                  ; 8489
LDF 8486             ; 8490
RTN                  ; 8491
LD  2   249          ; 8492
RTN                  ; 8493
LDF 8492             ; 8494
RTN                  ; 8495
LD  2   249          ; 8496
LD  0   0            ; 8497
ST  2   249          ; 8498
RTN                  ; 8499
LDF 8496             ; 8500
RTN                  ; 8501
LD  2   250          ; 8502
RTN                  ; 8503
LDF 8502             ; 8504
RTN                  ; 8505
LD  2   250          ; 8506
LD  0   0            ; 8507
ST  2   250          ; 8508
RTN                  ; 8509
LDF 8506             ; 8510
RTN                  ; 8511
LD  2   251          ; 8512
RTN                  ; 8513
LDF 8512             ; 8514
RTN                  ; 8515
LD  2   251          ; 8516
LD  0   0            ; 8517
ST  2   251          ; 8518
RTN                  ; 8519
LDF 8516             ; 8520
RTN                  ; 8521
LD  2   252          ; 8522
RTN                  ; 8523
LDF 8522             ; 8524
RTN                  ; 8525
LD  2   252          ; 8526
LD  0   0            ; 8527
ST  2   252          ; 8528
RTN                  ; 8529
LDF 8526             ; 8530
RTN                  ; 8531
LD  2   253          ; 8532
RTN                  ; 8533
LDF 8532             ; 8534
RTN                  ; 8535
LD  2   253          ; 8536
LD  0   0            ; 8537
ST  2   253          ; 8538
RTN                  ; 8539
LDF 8536             ; 8540
RTN                  ; 8541
LD  2   254          ; 8542
RTN                  ; 8543
LDF 8542             ; 8544
RTN                  ; 8545
LD  2   254          ; 8546
LD  0   0            ; 8547
ST  2   254          ; 8548
RTN                  ; 8549
LDF 8546             ; 8550
RTN                  ; 8551
LD  2   255          ; 8552
RTN                  ; 8553
LDF 8552             ; 8554
RTN                  ; 8555
LD  2   255          ; 8556
LD  0   0            ; 8557
ST  2   255          ; 8558
RTN                  ; 8559
LDF 8556             ; 8560
RTN                  ; 8561
LDC 0               ; generated from native: sample_map ; 8562
LDC 0                ; 8563
LDC 0                ; 8564
LDC 0                ; 8565
LDC 0                ; 8566
LDC 0                ; 8567
LDC 0                ; 8568
LDC 0                ; 8569
LDC 0                ; 8570
LDC 0                ; 8571
LDC 0                ; 8572
LDC 0                ; 8573
LDC 0                ; 8574
LDC 0                ; 8575
LDC 0                ; 8576
LDC 0                ; 8577
LDC 0                ; 8578
LDC 0                ; 8579
LDC 0                ; 8580
LDC 0                ; 8581
LDC 0                ; 8582
LDC 0                ; 8583
LDC 0                ; 8584
LDC 0                ; 8585
CONS                 ; 8586
CONS                 ; 8587
CONS                 ; 8588
CONS                 ; 8589
CONS                 ; 8590
CONS                 ; 8591
CONS                 ; 8592
CONS                 ; 8593
CONS                 ; 8594
CONS                 ; 8595
CONS                 ; 8596
CONS                 ; 8597
CONS                 ; 8598
CONS                 ; 8599
CONS                 ; 8600
CONS                 ; 8601
CONS                 ; 8602
CONS                 ; 8603
CONS                 ; 8604
CONS                 ; 8605
CONS                 ; 8606
CONS                 ; 8607
CONS                 ; 8608
LDC 0                ; 8609
LDC 2                ; 8610
LDC 2                ; 8611
LDC 2                ; 8612
LDC 2                ; 8613
LDC 2                ; 8614
LDC 2                ; 8615
LDC 2                ; 8616
LDC 2                ; 8617
LDC 2                ; 8618
LDC 2                ; 8619
LDC 0                ; 8620
LDC 2                ; 8621
LDC 2                ; 8622
LDC 2                ; 8623
LDC 2                ; 8624
LDC 2                ; 8625
LDC 2                ; 8626
LDC 2                ; 8627
LDC 2                ; 8628
LDC 2                ; 8629
LDC 2                ; 8630
LDC 0                ; 8631
LDC 0                ; 8632
CONS                 ; 8633
CONS                 ; 8634
CONS                 ; 8635
CONS                 ; 8636
CONS                 ; 8637
CONS                 ; 8638
CONS                 ; 8639
CONS                 ; 8640
CONS                 ; 8641
CONS                 ; 8642
CONS                 ; 8643
CONS                 ; 8644
CONS                 ; 8645
CONS                 ; 8646
CONS                 ; 8647
CONS                 ; 8648
CONS                 ; 8649
CONS                 ; 8650
CONS                 ; 8651
CONS                 ; 8652
CONS                 ; 8653
CONS                 ; 8654
CONS                 ; 8655
LDC 0                ; 8656
LDC 2                ; 8657
LDC 0                ; 8658
LDC 0                ; 8659
LDC 0                ; 8660
LDC 2                ; 8661
LDC 0                ; 8662
LDC 0                ; 8663
LDC 0                ; 8664
LDC 0                ; 8665
LDC 2                ; 8666
LDC 0                ; 8667
LDC 2                ; 8668
LDC 0                ; 8669
LDC 0                ; 8670
LDC 0                ; 8671
LDC 0                ; 8672
LDC 2                ; 8673
LDC 0                ; 8674
LDC 0                ; 8675
LDC 0                ; 8676
LDC 2                ; 8677
LDC 0                ; 8678
LDC 0                ; 8679
CONS                 ; 8680
CONS                 ; 8681
CONS                 ; 8682
CONS                 ; 8683
CONS                 ; 8684
CONS                 ; 8685
CONS                 ; 8686
CONS                 ; 8687
CONS                 ; 8688
CONS                 ; 8689
CONS                 ; 8690
CONS                 ; 8691
CONS                 ; 8692
CONS                 ; 8693
CONS                 ; 8694
CONS                 ; 8695
CONS                 ; 8696
CONS                 ; 8697
CONS                 ; 8698
CONS                 ; 8699
CONS                 ; 8700
CONS                 ; 8701
CONS                 ; 8702
LDC 0                ; 8703
LDC 3                ; 8704
LDC 0                ; 8705
LDC 0                ; 8706
LDC 0                ; 8707
LDC 2                ; 8708
LDC 0                ; 8709
LDC 0                ; 8710
LDC 0                ; 8711
LDC 0                ; 8712
LDC 2                ; 8713
LDC 0                ; 8714
LDC 2                ; 8715
LDC 0                ; 8716
LDC 0                ; 8717
LDC 0                ; 8718
LDC 0                ; 8719
LDC 2                ; 8720
LDC 0                ; 8721
LDC 0                ; 8722
LDC 0                ; 8723
LDC 3                ; 8724
LDC 0                ; 8725
LDC 0                ; 8726
CONS                 ; 8727
CONS                 ; 8728
CONS                 ; 8729
CONS                 ; 8730
CONS                 ; 8731
CONS                 ; 8732
CONS                 ; 8733
CONS                 ; 8734
CONS                 ; 8735
CONS                 ; 8736
CONS                 ; 8737
CONS                 ; 8738
CONS                 ; 8739
CONS                 ; 8740
CONS                 ; 8741
CONS                 ; 8742
CONS                 ; 8743
CONS                 ; 8744
CONS                 ; 8745
CONS                 ; 8746
CONS                 ; 8747
CONS                 ; 8748
CONS                 ; 8749
LDC 0                ; 8750
LDC 2                ; 8751
LDC 2                ; 8752
LDC 2                ; 8753
LDC 2                ; 8754
LDC 2                ; 8755
LDC 2                ; 8756
LDC 2                ; 8757
LDC 2                ; 8758
LDC 2                ; 8759
LDC 2                ; 8760
LDC 2                ; 8761
LDC 2                ; 8762
LDC 2                ; 8763
LDC 2                ; 8764
LDC 2                ; 8765
LDC 2                ; 8766
LDC 2                ; 8767
LDC 2                ; 8768
LDC 2                ; 8769
LDC 2                ; 8770
LDC 2                ; 8771
LDC 0                ; 8772
LDC 0                ; 8773
CONS                 ; 8774
CONS                 ; 8775
CONS                 ; 8776
CONS                 ; 8777
CONS                 ; 8778
CONS                 ; 8779
CONS                 ; 8780
CONS                 ; 8781
CONS                 ; 8782
CONS                 ; 8783
CONS                 ; 8784
CONS                 ; 8785
CONS                 ; 8786
CONS                 ; 8787
CONS                 ; 8788
CONS                 ; 8789
CONS                 ; 8790
CONS                 ; 8791
CONS                 ; 8792
CONS                 ; 8793
CONS                 ; 8794
CONS                 ; 8795
CONS                 ; 8796
LDC 0                ; 8797
LDC 2                ; 8798
LDC 0                ; 8799
LDC 0                ; 8800
LDC 0                ; 8801
LDC 2                ; 8802
LDC 0                ; 8803
LDC 2                ; 8804
LDC 0                ; 8805
LDC 0                ; 8806
LDC 0                ; 8807
LDC 0                ; 8808
LDC 0                ; 8809
LDC 0                ; 8810
LDC 0                ; 8811
LDC 2                ; 8812
LDC 0                ; 8813
LDC 2                ; 8814
LDC 0                ; 8815
LDC 0                ; 8816
LDC 0                ; 8817
LDC 2                ; 8818
LDC 0                ; 8819
LDC 0                ; 8820
CONS                 ; 8821
CONS                 ; 8822
CONS                 ; 8823
CONS                 ; 8824
CONS                 ; 8825
CONS                 ; 8826
CONS                 ; 8827
CONS                 ; 8828
CONS                 ; 8829
CONS                 ; 8830
CONS                 ; 8831
CONS                 ; 8832
CONS                 ; 8833
CONS                 ; 8834
CONS                 ; 8835
CONS                 ; 8836
CONS                 ; 8837
CONS                 ; 8838
CONS                 ; 8839
CONS                 ; 8840
CONS                 ; 8841
CONS                 ; 8842
CONS                 ; 8843
LDC 0                ; 8844
LDC 2                ; 8845
LDC 2                ; 8846
LDC 2                ; 8847
LDC 2                ; 8848
LDC 2                ; 8849
LDC 0                ; 8850
LDC 2                ; 8851
LDC 2                ; 8852
LDC 2                ; 8853
LDC 2                ; 8854
LDC 0                ; 8855
LDC 2                ; 8856
LDC 2                ; 8857
LDC 2                ; 8858
LDC 2                ; 8859
LDC 0                ; 8860
LDC 2                ; 8861
LDC 2                ; 8862
LDC 2                ; 8863
LDC 2                ; 8864
LDC 2                ; 8865
LDC 0                ; 8866
LDC 0                ; 8867
CONS                 ; 8868
CONS                 ; 8869
CONS                 ; 8870
CONS                 ; 8871
CONS                 ; 8872
CONS                 ; 8873
CONS                 ; 8874
CONS                 ; 8875
CONS                 ; 8876
CONS                 ; 8877
CONS                 ; 8878
CONS                 ; 8879
CONS                 ; 8880
CONS                 ; 8881
CONS                 ; 8882
CONS                 ; 8883
CONS                 ; 8884
CONS                 ; 8885
CONS                 ; 8886
CONS                 ; 8887
CONS                 ; 8888
CONS                 ; 8889
CONS                 ; 8890
LDC 0                ; 8891
LDC 0                ; 8892
LDC 0                ; 8893
LDC 0                ; 8894
LDC 0                ; 8895
LDC 2                ; 8896
LDC 0                ; 8897
LDC 0                ; 8898
LDC 0                ; 8899
LDC 0                ; 8900
LDC 1                ; 8901
LDC 0                ; 8902
LDC 1                ; 8903
LDC 0                ; 8904
LDC 0                ; 8905
LDC 0                ; 8906
LDC 0                ; 8907
LDC 2                ; 8908
LDC 0                ; 8909
LDC 0                ; 8910
LDC 0                ; 8911
LDC 0                ; 8912
LDC 0                ; 8913
LDC 0                ; 8914
CONS                 ; 8915
CONS                 ; 8916
CONS                 ; 8917
CONS                 ; 8918
CONS                 ; 8919
CONS                 ; 8920
CONS                 ; 8921
CONS                 ; 8922
CONS                 ; 8923
CONS                 ; 8924
CONS                 ; 8925
CONS                 ; 8926
CONS                 ; 8927
CONS                 ; 8928
CONS                 ; 8929
CONS                 ; 8930
CONS                 ; 8931
CONS                 ; 8932
CONS                 ; 8933
CONS                 ; 8934
CONS                 ; 8935
CONS                 ; 8936
CONS                 ; 8937
LDC 0                ; 8938
LDC 1                ; 8939
LDC 1                ; 8940
LDC 1                ; 8941
LDC 0                ; 8942
LDC 2                ; 8943
LDC 0                ; 8944
LDC 1                ; 8945
LDC 1                ; 8946
LDC 1                ; 8947
LDC 1                ; 8948
LDC 6                ; 8949
LDC 1                ; 8950
LDC 1                ; 8951
LDC 1                ; 8952
LDC 1                ; 8953
LDC 0                ; 8954
LDC 2                ; 8955
LDC 0                ; 8956
LDC 1                ; 8957
LDC 1                ; 8958
LDC 1                ; 8959
LDC 0                ; 8960
LDC 0                ; 8961
CONS                 ; 8962
CONS                 ; 8963
CONS                 ; 8964
CONS                 ; 8965
CONS                 ; 8966
CONS                 ; 8967
CONS                 ; 8968
CONS                 ; 8969
CONS                 ; 8970
CONS                 ; 8971
CONS                 ; 8972
CONS                 ; 8973
CONS                 ; 8974
CONS                 ; 8975
CONS                 ; 8976
CONS                 ; 8977
CONS                 ; 8978
CONS                 ; 8979
CONS                 ; 8980
CONS                 ; 8981
CONS                 ; 8982
CONS                 ; 8983
CONS                 ; 8984
LDC 0                ; 8985
LDC 0                ; 8986
LDC 0                ; 8987
LDC 0                ; 8988
LDC 0                ; 8989
LDC 2                ; 8990
LDC 0                ; 8991
LDC 1                ; 8992
LDC 0                ; 8993
LDC 0                ; 8994
LDC 0                ; 8995
LDC 1                ; 8996
LDC 0                ; 8997
LDC 0                ; 8998
LDC 0                ; 8999
LDC 1                ; 9000
LDC 0                ; 9001
LDC 2                ; 9002
LDC 0                ; 9003
LDC 0                ; 9004
LDC 0                ; 9005
LDC 0                ; 9006
LDC 0                ; 9007
LDC 0                ; 9008
CONS                 ; 9009
CONS                 ; 9010
CONS                 ; 9011
CONS                 ; 9012
CONS                 ; 9013
CONS                 ; 9014
CONS                 ; 9015
CONS                 ; 9016
CONS                 ; 9017
CONS                 ; 9018
CONS                 ; 9019
CONS                 ; 9020
CONS                 ; 9021
CONS                 ; 9022
CONS                 ; 9023
CONS                 ; 9024
CONS                 ; 9025
CONS                 ; 9026
CONS                 ; 9027
CONS                 ; 9028
CONS                 ; 9029
CONS                 ; 9030
CONS                 ; 9031
LDC 0                ; 9032
LDC 1                ; 9033
LDC 1                ; 9034
LDC 1                ; 9035
LDC 1                ; 9036
LDC 2                ; 9037
LDC 1                ; 9038
LDC 1                ; 9039
LDC 0                ; 9040
LDC 1                ; 9041
LDC 6                ; 9042
LDC 6                ; 9043
LDC 6                ; 9044
LDC 1                ; 9045
LDC 0                ; 9046
LDC 1                ; 9047
LDC 1                ; 9048
LDC 2                ; 9049
LDC 1                ; 9050
LDC 1                ; 9051
LDC 1                ; 9052
LDC 1                ; 9053
LDC 0                ; 9054
LDC 0                ; 9055
CONS                 ; 9056
CONS                 ; 9057
CONS                 ; 9058
CONS                 ; 9059
CONS                 ; 9060
CONS                 ; 9061
CONS                 ; 9062
CONS                 ; 9063
CONS                 ; 9064
CONS                 ; 9065
CONS                 ; 9066
CONS                 ; 9067
CONS                 ; 9068
CONS                 ; 9069
CONS                 ; 9070
CONS                 ; 9071
CONS                 ; 9072
CONS                 ; 9073
CONS                 ; 9074
CONS                 ; 9075
CONS                 ; 9076
CONS                 ; 9077
CONS                 ; 9078
LDC 0                ; 9079
LDC 0                ; 9080
LDC 0                ; 9081
LDC 0                ; 9082
LDC 0                ; 9083
LDC 2                ; 9084
LDC 0                ; 9085
LDC 1                ; 9086
LDC 0                ; 9087
LDC 0                ; 9088
LDC 0                ; 9089
LDC 0                ; 9090
LDC 0                ; 9091
LDC 0                ; 9092
LDC 0                ; 9093
LDC 1                ; 9094
LDC 0                ; 9095
LDC 2                ; 9096
LDC 0                ; 9097
LDC 0                ; 9098
LDC 0                ; 9099
LDC 0                ; 9100
LDC 0                ; 9101
LDC 0                ; 9102
CONS                 ; 9103
CONS                 ; 9104
CONS                 ; 9105
CONS                 ; 9106
CONS                 ; 9107
CONS                 ; 9108
CONS                 ; 9109
CONS                 ; 9110
CONS                 ; 9111
CONS                 ; 9112
CONS                 ; 9113
CONS                 ; 9114
CONS                 ; 9115
CONS                 ; 9116
CONS                 ; 9117
CONS                 ; 9118
CONS                 ; 9119
CONS                 ; 9120
CONS                 ; 9121
CONS                 ; 9122
CONS                 ; 9123
CONS                 ; 9124
CONS                 ; 9125
LDC 0                ; 9126
LDC 1                ; 9127
LDC 1                ; 9128
LDC 1                ; 9129
LDC 0                ; 9130
LDC 2                ; 9131
LDC 0                ; 9132
LDC 1                ; 9133
LDC 1                ; 9134
LDC 1                ; 9135
LDC 1                ; 9136
LDC 4                ; 9137
LDC 1                ; 9138
LDC 1                ; 9139
LDC 1                ; 9140
LDC 1                ; 9141
LDC 0                ; 9142
LDC 2                ; 9143
LDC 0                ; 9144
LDC 1                ; 9145
LDC 1                ; 9146
LDC 1                ; 9147
LDC 0                ; 9148
LDC 0                ; 9149
CONS                 ; 9150
CONS                 ; 9151
CONS                 ; 9152
CONS                 ; 9153
CONS                 ; 9154
CONS                 ; 9155
CONS                 ; 9156
CONS                 ; 9157
CONS                 ; 9158
CONS                 ; 9159
CONS                 ; 9160
CONS                 ; 9161
CONS                 ; 9162
CONS                 ; 9163
CONS                 ; 9164
CONS                 ; 9165
CONS                 ; 9166
CONS                 ; 9167
CONS                 ; 9168
CONS                 ; 9169
CONS                 ; 9170
CONS                 ; 9171
CONS                 ; 9172
LDC 0                ; 9173
LDC 0                ; 9174
LDC 0                ; 9175
LDC 0                ; 9176
LDC 0                ; 9177
LDC 2                ; 9178
LDC 0                ; 9179
LDC 1                ; 9180
LDC 0                ; 9181
LDC 0                ; 9182
LDC 0                ; 9183
LDC 0                ; 9184
LDC 0                ; 9185
LDC 0                ; 9186
LDC 0                ; 9187
LDC 1                ; 9188
LDC 0                ; 9189
LDC 2                ; 9190
LDC 0                ; 9191
LDC 0                ; 9192
LDC 0                ; 9193
LDC 0                ; 9194
LDC 0                ; 9195
LDC 0                ; 9196
CONS                 ; 9197
CONS                 ; 9198
CONS                 ; 9199
CONS                 ; 9200
CONS                 ; 9201
CONS                 ; 9202
CONS                 ; 9203
CONS                 ; 9204
CONS                 ; 9205
CONS                 ; 9206
CONS                 ; 9207
CONS                 ; 9208
CONS                 ; 9209
CONS                 ; 9210
CONS                 ; 9211
CONS                 ; 9212
CONS                 ; 9213
CONS                 ; 9214
CONS                 ; 9215
CONS                 ; 9216
CONS                 ; 9217
CONS                 ; 9218
CONS                 ; 9219
LDC 0                ; 9220
LDC 2                ; 9221
LDC 2                ; 9222
LDC 2                ; 9223
LDC 2                ; 9224
LDC 2                ; 9225
LDC 2                ; 9226
LDC 2                ; 9227
LDC 2                ; 9228
LDC 2                ; 9229
LDC 2                ; 9230
LDC 0                ; 9231
LDC 2                ; 9232
LDC 2                ; 9233
LDC 2                ; 9234
LDC 2                ; 9235
LDC 2                ; 9236
LDC 2                ; 9237
LDC 2                ; 9238
LDC 2                ; 9239
LDC 2                ; 9240
LDC 2                ; 9241
LDC 0                ; 9242
LDC 0                ; 9243
CONS                 ; 9244
CONS                 ; 9245
CONS                 ; 9246
CONS                 ; 9247
CONS                 ; 9248
CONS                 ; 9249
CONS                 ; 9250
CONS                 ; 9251
CONS                 ; 9252
CONS                 ; 9253
CONS                 ; 9254
CONS                 ; 9255
CONS                 ; 9256
CONS                 ; 9257
CONS                 ; 9258
CONS                 ; 9259
CONS                 ; 9260
CONS                 ; 9261
CONS                 ; 9262
CONS                 ; 9263
CONS                 ; 9264
CONS                 ; 9265
CONS                 ; 9266
LDC 0                ; 9267
LDC 2                ; 9268
LDC 0                ; 9269
LDC 0                ; 9270
LDC 0                ; 9271
LDC 2                ; 9272
LDC 0                ; 9273
LDC 0                ; 9274
LDC 0                ; 9275
LDC 0                ; 9276
LDC 2                ; 9277
LDC 0                ; 9278
LDC 2                ; 9279
LDC 0                ; 9280
LDC 0                ; 9281
LDC 0                ; 9282
LDC 0                ; 9283
LDC 2                ; 9284
LDC 0                ; 9285
LDC 0                ; 9286
LDC 0                ; 9287
LDC 2                ; 9288
LDC 0                ; 9289
LDC 0                ; 9290
CONS                 ; 9291
CONS                 ; 9292
CONS                 ; 9293
CONS                 ; 9294
CONS                 ; 9295
CONS                 ; 9296
CONS                 ; 9297
CONS                 ; 9298
CONS                 ; 9299
CONS                 ; 9300
CONS                 ; 9301
CONS                 ; 9302
CONS                 ; 9303
CONS                 ; 9304
CONS                 ; 9305
CONS                 ; 9306
CONS                 ; 9307
CONS                 ; 9308
CONS                 ; 9309
CONS                 ; 9310
CONS                 ; 9311
CONS                 ; 9312
CONS                 ; 9313
LDC 0                ; 9314
LDC 3                ; 9315
LDC 2                ; 9316
LDC 2                ; 9317
LDC 0                ; 9318
LDC 2                ; 9319
LDC 2                ; 9320
LDC 2                ; 9321
LDC 2                ; 9322
LDC 2                ; 9323
LDC 2                ; 9324
LDC 5                ; 9325
LDC 2                ; 9326
LDC 2                ; 9327
LDC 2                ; 9328
LDC 2                ; 9329
LDC 2                ; 9330
LDC 2                ; 9331
LDC 0                ; 9332
LDC 2                ; 9333
LDC 2                ; 9334
LDC 3                ; 9335
LDC 0                ; 9336
LDC 0                ; 9337
CONS                 ; 9338
CONS                 ; 9339
CONS                 ; 9340
CONS                 ; 9341
CONS                 ; 9342
CONS                 ; 9343
CONS                 ; 9344
CONS                 ; 9345
CONS                 ; 9346
CONS                 ; 9347
CONS                 ; 9348
CONS                 ; 9349
CONS                 ; 9350
CONS                 ; 9351
CONS                 ; 9352
CONS                 ; 9353
CONS                 ; 9354
CONS                 ; 9355
CONS                 ; 9356
CONS                 ; 9357
CONS                 ; 9358
CONS                 ; 9359
CONS                 ; 9360
LDC 0                ; 9361
LDC 0                ; 9362
LDC 0                ; 9363
LDC 2                ; 9364
LDC 0                ; 9365
LDC 2                ; 9366
LDC 0                ; 9367
LDC 2                ; 9368
LDC 0                ; 9369
LDC 0                ; 9370
LDC 0                ; 9371
LDC 0                ; 9372
LDC 0                ; 9373
LDC 0                ; 9374
LDC 0                ; 9375
LDC 2                ; 9376
LDC 0                ; 9377
LDC 2                ; 9378
LDC 0                ; 9379
LDC 2                ; 9380
LDC 0                ; 9381
LDC 0                ; 9382
LDC 0                ; 9383
LDC 0                ; 9384
CONS                 ; 9385
CONS                 ; 9386
CONS                 ; 9387
CONS                 ; 9388
CONS                 ; 9389
CONS                 ; 9390
CONS                 ; 9391
CONS                 ; 9392
CONS                 ; 9393
CONS                 ; 9394
CONS                 ; 9395
CONS                 ; 9396
CONS                 ; 9397
CONS                 ; 9398
CONS                 ; 9399
CONS                 ; 9400
CONS                 ; 9401
CONS                 ; 9402
CONS                 ; 9403
CONS                 ; 9404
CONS                 ; 9405
CONS                 ; 9406
CONS                 ; 9407
LDC 0                ; 9408
LDC 2                ; 9409
LDC 2                ; 9410
LDC 2                ; 9411
LDC 2                ; 9412
LDC 2                ; 9413
LDC 0                ; 9414
LDC 2                ; 9415
LDC 2                ; 9416
LDC 2                ; 9417
LDC 2                ; 9418
LDC 0                ; 9419
LDC 2                ; 9420
LDC 2                ; 9421
LDC 2                ; 9422
LDC 2                ; 9423
LDC 0                ; 9424
LDC 2                ; 9425
LDC 2                ; 9426
LDC 2                ; 9427
LDC 2                ; 9428
LDC 2                ; 9429
LDC 0                ; 9430
LDC 0                ; 9431
CONS                 ; 9432
CONS                 ; 9433
CONS                 ; 9434
CONS                 ; 9435
CONS                 ; 9436
CONS                 ; 9437
CONS                 ; 9438
CONS                 ; 9439
CONS                 ; 9440
CONS                 ; 9441
CONS                 ; 9442
CONS                 ; 9443
CONS                 ; 9444
CONS                 ; 9445
CONS                 ; 9446
CONS                 ; 9447
CONS                 ; 9448
CONS                 ; 9449
CONS                 ; 9450
CONS                 ; 9451
CONS                 ; 9452
CONS                 ; 9453
CONS                 ; 9454
LDC 0                ; 9455
LDC 2                ; 9456
LDC 0                ; 9457
LDC 0                ; 9458
LDC 0                ; 9459
LDC 0                ; 9460
LDC 0                ; 9461
LDC 0                ; 9462
LDC 0                ; 9463
LDC 0                ; 9464
LDC 2                ; 9465
LDC 0                ; 9466
LDC 2                ; 9467
LDC 0                ; 9468
LDC 0                ; 9469
LDC 0                ; 9470
LDC 0                ; 9471
LDC 0                ; 9472
LDC 0                ; 9473
LDC 0                ; 9474
LDC 0                ; 9475
LDC 2                ; 9476
LDC 0                ; 9477
LDC 0                ; 9478
CONS                 ; 9479
CONS                 ; 9480
CONS                 ; 9481
CONS                 ; 9482
CONS                 ; 9483
CONS                 ; 9484
CONS                 ; 9485
CONS                 ; 9486
CONS                 ; 9487
CONS                 ; 9488
CONS                 ; 9489
CONS                 ; 9490
CONS                 ; 9491
CONS                 ; 9492
CONS                 ; 9493
CONS                 ; 9494
CONS                 ; 9495
CONS                 ; 9496
CONS                 ; 9497
CONS                 ; 9498
CONS                 ; 9499
CONS                 ; 9500
CONS                 ; 9501
LDC 0                ; 9502
LDC 2                ; 9503
LDC 2                ; 9504
LDC 2                ; 9505
LDC 2                ; 9506
LDC 2                ; 9507
LDC 2                ; 9508
LDC 2                ; 9509
LDC 2                ; 9510
LDC 2                ; 9511
LDC 2                ; 9512
LDC 2                ; 9513
LDC 2                ; 9514
LDC 2                ; 9515
LDC 2                ; 9516
LDC 2                ; 9517
LDC 2                ; 9518
LDC 2                ; 9519
LDC 2                ; 9520
LDC 2                ; 9521
LDC 2                ; 9522
LDC 2                ; 9523
LDC 0                ; 9524
LDC 0                ; 9525
CONS                 ; 9526
CONS                 ; 9527
CONS                 ; 9528
CONS                 ; 9529
CONS                 ; 9530
CONS                 ; 9531
CONS                 ; 9532
CONS                 ; 9533
CONS                 ; 9534
CONS                 ; 9535
CONS                 ; 9536
CONS                 ; 9537
CONS                 ; 9538
CONS                 ; 9539
CONS                 ; 9540
CONS                 ; 9541
CONS                 ; 9542
CONS                 ; 9543
CONS                 ; 9544
CONS                 ; 9545
CONS                 ; 9546
CONS                 ; 9547
CONS                 ; 9548
LDC 0                ; 9549
LDC 0                ; 9550
LDC 0                ; 9551
LDC 0                ; 9552
LDC 0                ; 9553
LDC 0                ; 9554
LDC 0                ; 9555
LDC 0                ; 9556
LDC 0                ; 9557
LDC 0                ; 9558
LDC 0                ; 9559
LDC 0                ; 9560
LDC 0                ; 9561
LDC 0                ; 9562
LDC 0                ; 9563
LDC 0                ; 9564
LDC 0                ; 9565
LDC 0                ; 9566
LDC 0                ; 9567
LDC 0                ; 9568
LDC 0                ; 9569
LDC 0                ; 9570
LDC 0                ; 9571
LDC 0                ; 9572
CONS                 ; 9573
CONS                 ; 9574
CONS                 ; 9575
CONS                 ; 9576
CONS                 ; 9577
CONS                 ; 9578
CONS                 ; 9579
CONS                 ; 9580
CONS                 ; 9581
CONS                 ; 9582
CONS                 ; 9583
CONS                 ; 9584
CONS                 ; 9585
CONS                 ; 9586
CONS                 ; 9587
CONS                 ; 9588
CONS                 ; 9589
CONS                 ; 9590
CONS                 ; 9591
CONS                 ; 9592
CONS                 ; 9593
CONS                 ; 9594
CONS                 ; 9595
LDC 0                ; 9596
CONS                 ; 9597
CONS                 ; 9598
CONS                 ; 9599
CONS                 ; 9600
CONS                 ; 9601
CONS                 ; 9602
CONS                 ; 9603
CONS                 ; 9604
CONS                 ; 9605
CONS                 ; 9606
CONS                 ; 9607
CONS                 ; 9608
CONS                 ; 9609
CONS                 ; 9610
CONS                 ; 9611
CONS                 ; 9612
CONS                 ; 9613
CONS                 ; 9614
CONS                 ; 9615
CONS                 ; 9616
CONS                 ; 9617
CONS                 ; 9618
LDC 0                ; 9619
LDC 11               ; 9620
LDC 16               ; 9621
CONS                 ; 9622
LDC 2                ; 9623
LDC 3                ; 9624
LDC 0                ; 9625
CONS                 ; 9626
CONS                 ; 9627
CONS                 ; 9628
CONS                 ; 9629
LDC 0                ; 9630
LDC 11               ; 9631
LDC 8                ; 9632
CONS                 ; 9633
LDC 2                ; 9634
CONS                 ; 9635
CONS                 ; 9636
LDC 0                ; 9637
LDC 10               ; 9638
LDC 10               ; 9639
CONS                 ; 9640
LDC 2                ; 9641
CONS                 ; 9642
CONS                 ; 9643
LDC 0                ; 9644
LDC 11               ; 9645
LDC 10               ; 9646
CONS                 ; 9647
LDC 2                ; 9648
CONS                 ; 9649
CONS                 ; 9650
LDC 0                ; 9651
LDC 12               ; 9652
LDC 10               ; 9653
CONS                 ; 9654
LDC 2                ; 9655
CONS                 ; 9656
CONS                 ; 9657
LDC 0                ; 9658
CONS                 ; 9659
CONS                 ; 9660
CONS                 ; 9661
CONS                 ; 9662
LDC 0                ; 9663
CONS                 ; 9664
CONS                 ; 9665
CONS                 ; 9666
RTN                  ; 9667
LD     0 0          ;  <== lambda_1000  [x] (as expr) ; 9668
LD     1 1          ; var g ; 9669
AP     1             ; 9670
LD     1 0          ; var f ; 9671
AP     1             ; 9672
RTN                  ; 9673
LD     0 1          ;  <== lambda_1001  [b, a] (as expr) ; 9674
LD     0 0          ; var b ; 9675
LD     1 0          ; var f ; 9676
AP     2             ; 9677
RTN                  ; 9678
LD     0 0          ;  <== lambda_1002  [d] (as expr) ; 9679
LDF    226          ;  @maybeToList ; 9680
AP     1             ; 9681
RTN                  ; 9682
LD     0 0          ;  <== lambda_1003  [SortedMap<T> acc, Tuple<Integer,T> elem] (as expr) ; 9683
LD     0 1          ; var elem ; 9684
CAR                 ; generateTupleAccess total=2 pos=0 ; 9685
LD     0 1          ; var elem ; 9686
CDR                 ; generateTupleAccess total=2 pos=1 ; 9687
LDF    1308         ;  @sorted_map_assoc ; 9688
AP     3             ; 9689
RTN                  ; 9690
LD     0 0          ;  <== lambda_1004  [Integer a] (as expr) ; 9691
LD     0 0          ; var a ; 9692
LDC    2            ; just constant from code ; 9693
DIV                  ; 9694
LDC    2            ; just constant from code ; 9695
MUL                  ; 9696
CEQ                  ; 9697
SEL    9704 9706    ; IF? 61 ; 9698
LD     0 0          ; var a ; 9699
LDC    2            ; just constant from code ; 9700
DIV                  ; 9701
CONS                 ; 9702
RTN                  ; 9703
LDC    0            ; THEN: 61 ; 9704
JOIN                 ; 9705
LDC    1            ; ELSE: 61 ; 9706
JOIN                 ; 9707
LD     0 1          ;  <== lambda_1005  [Integer elem, Integer acc] (as expr) ; 9708
LDC    2            ; just constant from code ; 9709
MUL                  ; 9710
LD     0 0          ; var elem ; 9711
ADD                  ; 9712
RTN                  ; 9713
LD     0 0          ;  <== lambda_1006  [Tuple<Integer,SortedMap<Cons>> init, Cons step] (as expr) ; 9714
CAR                 ; generateTupleAccess total=2 pos=0 ; 9715
LDC    1            ; just constant from code ; 9716
ADD                  ; 9717
LD     0 0          ; var init ; 9718
CDR                 ; generateTupleAccess total=2 pos=1 ; 9719
LD     0 0          ; var init ; 9720
CAR                 ; generateTupleAccess total=2 pos=0 ; 9721
LD     0 1          ; var step ; 9722
LDF    1308         ;  @sorted_map_assoc ; 9723
AP     3             ; 9724
CONS                 ; 9725
RTN                  ; 9726
LDF    3685         ;  <== lambda_1007  [x] (as expr), ALSO: @array_256 ; 9727
AP     0             ; 9728
RTN                  ; 9729
LD     0 0          ;  <== lambda_1008  [a, b] (as expr) ; 9730
LD     0 1          ; var b ; 9731
CONS                 ; 9732
RTN                  ; 9733
LD     0 0          ;  <== lambda_1009  [Tuple<ListCons<Integer>,Function2<Integer,Integer,Function1<Integer,Integer>>> t] (as expr) ; 9734
CAR                 ; generateTupleAccess total=2 pos=0 ; 9735
LDC    0            ; just constant from code ; 9736
LDF    10284        ;  @lambda_1052 ; 9737
LDF    86           ;  @mapi ; 9738
AP     3             ; 9739
RTN                  ; 9740
LD     0 0          ;  <== lambda_1010  [row, rowy] (as expr) ; 9741
LD     0 1          ; var rowy ; 9742
LDF    3584         ;  @collectWalkableXY ; 9743
AP     2             ; 9744
LDC 0               ; local var space ; 9745
LDF    3576         ;  @my_cat_maybes ; 9746
AP     2             ; 9747
RTN                  ; 9748
LD     1 0          ;  <== lambda_1011  [Point w] (as expr) ; 9749
LD     0 0          ; var w ; 9750
CAR                 ; generateTupleAccess total=2 pos=0 ; 9751
LD     0 0          ; var w ; 9752
CDR                 ; generateTupleAccess total=2 pos=1 ; 9753
LDC 0               ; local var space ; 9754
LDC 0               ; local var space ; 9755
LDC 0               ; local var space ; 9756
LDC 0               ; local var space ; 9757
LDF    3104         ;  @isJunction ; 9758
AP     7             ; 9759
RTN                  ; 9760
LD     0 0          ;  <== lambda_1012  [Point pt] (as expr) ; 9761
LDF    3291         ;  @getPointKey ; 9762
AP     1             ; 9763
LD     0 0          ; var pt ; 9764
CONS                 ; 9765
RTN                  ; 9766
LD     1 0          ;  <== lambda_1013  [j] (as expr) ; 9767
LD     0 0          ; var j ; 9768
LD     1 8          ; var junctions ; 9769
LD     1 6          ; var junctionsList ; 9770
LD     1 1          ; var accessors ; 9771
LDC 0               ; local var space ; 9772
LDF    3222         ;  @findNeighbourJunctions ; 9773
AP     6             ; 9774
RTN                  ; 9775
LD     0 0          ;  <== lambda_1014  [ParsedEdge pe, Integer ix] (as expr) ; 9776
CAR                 ; generateTupleAccess total=7 pos=0 ; 9777
LD     0 0          ; var pe ; 9778
CDR                 ; generateTupleAccess total=7 pos=1 ; 9779
CAR                  ; 9780
LD     0 0          ; var pe ; 9781
CDR                 ; generateTupleAccess total=7 pos=2 ; 9782
CDR                  ; 9783
CAR                  ; 9784
LD     0 0          ; var pe ; 9785
CDR                 ; generateTupleAccess total=7 pos=3 ; 9786
CDR                  ; 9787
CDR                  ; 9788
CAR                  ; 9789
LD     0 0          ; var pe ; 9790
CDR                 ; generateTupleAccess total=7 pos=4 ; 9791
CDR                  ; 9792
CDR                  ; 9793
CDR                  ; 9794
CAR                  ; 9795
LD     0 1          ; var ix ; 9796
LDC    -1           ; just negative constant from code ; 9797
CONS                 ; 9798
CONS                 ; 9799
CONS                 ; 9800
CONS                 ; 9801
CONS                 ; 9802
CONS                 ; 9803
RTN                  ; 9804
LD     0 0          ;  <== lambda_1015  [ParsedEdge pe, Integer ix] (as expr) ; 9805
CAR                 ; generateTupleAccess total=7 pos=0 ; 9806
LD     0 0          ; var pe ; 9807
CDR                 ; generateTupleAccess total=7 pos=1 ; 9808
CAR                  ; 9809
LD     0 0          ; var pe ; 9810
CDR                 ; generateTupleAccess total=7 pos=2 ; 9811
CDR                  ; 9812
CAR                  ; 9813
LD     0 0          ; var pe ; 9814
CDR                 ; generateTupleAccess total=7 pos=3 ; 9815
CDR                  ; 9816
CDR                  ; 9817
CAR                  ; 9818
LD     0 0          ; var pe ; 9819
CDR                 ; generateTupleAccess total=7 pos=4 ; 9820
CDR                  ; 9821
CDR                  ; 9822
CDR                  ; 9823
CAR                  ; 9824
LD     0 0          ; var pe ; 9825
CDR                 ; generateTupleAccess total=7 pos=5 ; 9826
CDR                  ; 9827
CDR                  ; 9828
CDR                  ; 9829
CDR                  ; 9830
CAR                  ; 9831
LD     0 0          ; var pe ; 9832
CDR                 ; generateTupleAccess total=7 pos=1 ; 9833
CAR                  ; 9834
LD     0 0          ; var pe ; 9835
CAR                 ; generateTupleAccess total=7 pos=0 ; 9836
LD     1 10         ; var allParsedEdges2 ; 9837
LDF    3562         ;  @findEdge ; 9838
AP     3             ; 9839
LDF    3568         ;  @edgeNumber ; 9840
AP     1             ; 9841
CONS                 ; 9842
CONS                 ; 9843
CONS                 ; 9844
CONS                 ; 9845
CONS                 ; 9846
CONS                 ; 9847
RTN                  ; 9848
LD     0 0          ;  <== lambda_1016  [GhostState g, ListCons s, Integer ind] (as expr) ; 9849
CDR                 ; generateTupleAccess total=3 pos=1 ; 9850
CAR                  ; 9851
LD     0 1          ; var s ; 9852
LD     0 2          ; var ind ; 9853
CONS                 ; 9854
CONS                 ; 9855
RTN                  ; 9856
LD     0 0          ;  <== lambda_1017  [nextaistate, worldState] (as expr) ; 9857
LD     0 1          ; var worldState ; 9858
LDC 0               ; local var space ; 9859
LDC 0               ; local var space ; 9860
LDC 0               ; local var space ; 9861
LDC 0               ; local var space ; 9862
LDC 0               ; local var space ; 9863
LDC 0               ; local var space ; 9864
LDC 0               ; local var space ; 9865
LDC 0               ; local var space ; 9866
LDC 0               ; local var space ; 9867
LDC 0               ; local var space ; 9868
LDC 0               ; local var space ; 9869
LDC 0               ; local var space ; 9870
LDF    2649         ;  @performMove ; 9871
AP     14            ; 9872
RTN                  ; 9873
LD     0 0          ;  <== lambda_1018  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9874
CDR                 ; generateTupleAccess total=2 pos=1 ; 9875
CAR                 ; generateTupleAccess total=2 pos=0 ; 9876
LD     1 1          ; var start ; 9877
CAR                 ; generateTupleAccess total=2 pos=0 ; 9878
CEQ                  ; 9879
LDC    1            ; for negation ; 9880
SUB                  ; 9881
LD     0 0          ; var t ; 9882
CDR                 ; generateTupleAccess total=2 pos=1 ; 9883
CDR                 ; generateTupleAccess total=2 pos=1 ; 9884
LD     1 1          ; var start ; 9885
CDR                 ; generateTupleAccess total=2 pos=1 ; 9886
CEQ                  ; 9887
LDC    1            ; for negation ; 9888
SUB                  ; 9889
ADD                  ; 9890
SEL    9893 9895    ; IF? 62 ; 9891
RTN                  ; 9892
LDC    1            ; THEN: 62 ; 9893
JOIN                 ; 9894
LDC    0            ; ELSE: 62 ; 9895
JOIN                 ; 9896
LDC    0            ;  <== lambda_1019  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9897
LD     0 0          ; var t ; 9898
CAR                 ; generateTupleAccess total=2 pos=0 ; 9899
AP     1             ; 9900
LDC    2            ; Named Const = CT.PILL ; 9901
CEQ                  ; 9902
SEL    9905 9907    ; IF? 63 ; 9903
RTN                  ; 9904
LDC    1            ; THEN: 63 ; 9905
JOIN                 ; 9906
LDC    0            ; ELSE: 63 ; 9907
JOIN                 ; 9908
LD     0 0          ;  <== lambda_1020  [Point p] (as expr) ; 9909
CAR                 ; generateTupleAccess total=2 pos=0 ; 9910
LD     1 1          ; var start ; 9911
CAR                 ; generateTupleAccess total=2 pos=0 ; 9912
CEQ                  ; 9913
LDC    1            ; for negation ; 9914
SUB                  ; 9915
LD     0 0          ; var p ; 9916
CDR                 ; generateTupleAccess total=2 pos=1 ; 9917
LD     1 1          ; var start ; 9918
CDR                 ; generateTupleAccess total=2 pos=1 ; 9919
CEQ                  ; 9920
LDC    1            ; for negation ; 9921
SUB                  ; 9922
ADD                  ; 9923
SEL    9926 9928    ; IF? 64 ; 9924
RTN                  ; 9925
LDC    1            ; THEN: 64 ; 9926
JOIN                 ; 9927
LDC    0            ; ELSE: 64 ; 9928
JOIN                 ; 9929
LD     1 2          ;  <== lambda_1021  [Point p] (as expr) ; 9930
LD     0 0          ; var p ; 9931
CDR                 ; generateTupleAccess total=2 pos=1 ; 9932
LD     0 0          ; var p ; 9933
CAR                 ; generateTupleAccess total=2 pos=0 ; 9934
LDF    3664         ;  @getMapItem ; 9935
AP     3             ; 9936
LDC    6            ; Named Const = CT.GHOST ; 9937
CEQ                  ; 9938
SEL    9941 9943    ; IF? 65 ; 9939
RTN                  ; 9940
LDC    1            ; THEN: 65 ; 9941
JOIN                 ; 9942
LDC    0            ; ELSE: 65 ; 9943
JOIN                 ; 9944
LDC    0            ;  <== lambda_1022  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9945
LD     0 0          ; var t ; 9946
CAR                 ; generateTupleAccess total=2 pos=0 ; 9947
AP     1             ; 9948
LDC    2            ; Named Const = CT.PILL ; 9949
CEQ                  ; 9950
SEL    9953 9955    ; IF? 66 ; 9951
RTN                  ; 9952
LDC    1            ; THEN: 66 ; 9953
JOIN                 ; 9954
LDC    0            ; ELSE: 66 ; 9955
JOIN                 ; 9956
LD     0 0          ;  <== lambda_1023  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9957
LDC    0            ; just constant from code ; 9958
LD     0 1          ; var t ; 9959
CAR                 ; generateTupleAccess total=2 pos=0 ; 9960
AP     1             ; 9961
LDC    2            ; Named Const = CT.PILL ; 9962
CEQ                  ; 9963
SEL    9967 9969    ; IF? 67 ; 9964
ADD                  ; 9965
RTN                  ; 9966
LDC    1            ; THEN: 67 ; 9967
JOIN                 ; 9968
LDC    0            ; ELSE: 67 ; 9969
JOIN                 ; 9970
LD     0 0          ;  <== lambda_1024  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9971
CDR                 ; generateTupleAccess total=2 pos=1 ; 9972
CAR                 ; generateTupleAccess total=2 pos=0 ; 9973
LD     1 1          ; var start ; 9974
CAR                 ; generateTupleAccess total=2 pos=0 ; 9975
CEQ                  ; 9976
LDC    1            ; for negation ; 9977
SUB                  ; 9978
LD     0 0          ; var t ; 9979
CDR                 ; generateTupleAccess total=2 pos=1 ; 9980
CDR                 ; generateTupleAccess total=2 pos=1 ; 9981
LD     1 1          ; var start ; 9982
CDR                 ; generateTupleAccess total=2 pos=1 ; 9983
CEQ                  ; 9984
LDC    1            ; for negation ; 9985
SUB                  ; 9986
ADD                  ; 9987
SEL    9990 9992    ; IF? 68 ; 9988
RTN                  ; 9989
LDC    1            ; THEN: 68 ; 9990
JOIN                 ; 9991
LDC    0            ; ELSE: 68 ; 9992
JOIN                 ; 9993
LD     0 0          ;  <== lambda_1025  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9994
LDC    0            ; just constant from code ; 9995
LD     0 1          ; var t ; 9996
CAR                 ; generateTupleAccess total=2 pos=0 ; 9997
AP     1             ; 9998
LDC    2            ; Named Const = CT.PILL ; 9999
CEQ                  ; 10000
SEL    10004 10006  ; IF? 69 ; 10001
ADD                  ; 10002
RTN                  ; 10003
LDC    1            ; THEN: 69 ; 10004
JOIN                 ; 10005
LDC    0            ; ELSE: 69 ; 10006
JOIN                 ; 10007
LD     1 1          ;  <== lambda_1026  [e] (as expr) ; 10008
LD     0 0          ; var e ; 10009
LDF    3452         ;  @pointInEdge ; 10010
AP     2             ; 10011
RTN                  ; 10012
LD     0 0          ;  <== lambda_1027  [Queue<ListCons<ParsedEdge>> qq, ParsedEdge e] (as expr) ; 10013
LD     0 1          ; var e ; 10014
LDC    0            ; NULL literal ; 10015
CONS                 ; 10016
LDF    407          ;  @queue_enqueue ; 10017
AP     2             ; 10018
RTN                  ; 10019
LD     0 0          ;  <== lambda_1028  [ParsedEdge e] (as expr) ; 10020
CDR                 ; generateTupleAccess total=7 pos=5 ; 10021
CDR                  ; 10022
CDR                  ; 10023
CDR                  ; 10024
CDR                  ; 10025
CAR                  ; 10026
LDC    0            ; just constant from code ; 10027
CONS                 ; 10028
RTN                  ; 10029
LD     0 0          ;  <== lambda_1029  [r] (as expr) ; 10030
LDC    5            ; just constant from code ; 10031
LD     0 0          ; var r ; 10032
LDF    125          ;  @last ; 10033
AP     1             ; 10034
LD     1 2          ; var worldState ; 10035
CDR                 ; generateTupleAccess total=4 pos=1 ; 10036
CAR                  ; 10037
CDR                 ; generateTupleAccess total=5 pos=1 ; 10038
CAR                  ; 10039
LDC 0               ; local var space ; 10040
LDC 0               ; local var space ; 10041
LDF    2632         ;  @countMyEdgePills ; 10042
AP     4             ; 10043
MUL                  ; 10044
LD     0 0          ; var r ; 10045
LDF    299          ;  @reverse ; 10046
AP     1             ; 10047
CDR                  ; 10048
LDF    2982         ;  @countRoutePills ; 10049
AP     1             ; 10050
ADD                  ; 10051
CONS                 ; 10052
RTN                  ; 10053
LD     0 0          ;  <== lambda_1030  [Tuple<ListCons<ParsedEdge>,Integer> t] (as expr) ; 10054
CDR                 ; generateTupleAccess total=2 pos=1 ; 10055
RTN                  ; 10056
LD     0 0          ;  <== lambda_1031  [Point p] (as expr) ; 10057
CAR                 ; generateTupleAccess total=2 pos=0 ; 10058
LD     1 2          ; var location ; 10059
CAR                 ; generateTupleAccess total=2 pos=0 ; 10060
CEQ                  ; 10061
LDC    1            ; for negation ; 10062
SUB                  ; 10063
LD     0 0          ; var p ; 10064
CDR                 ; generateTupleAccess total=2 pos=1 ; 10065
LD     1 2          ; var location ; 10066
CDR                 ; generateTupleAccess total=2 pos=1 ; 10067
CEQ                  ; 10068
LDC    1            ; for negation ; 10069
SUB                  ; 10070
ADD                  ; 10071
SEL    10074 10076  ; IF? 70 ; 10072
RTN                  ; 10073
LDC    1            ; THEN: 70 ; 10074
JOIN                 ; 10075
LDC    0            ; ELSE: 70 ; 10076
JOIN                 ; 10077
LD     0 0          ;  <== lambda_1032  [ParsedEdge pe] (as expr) ; 10078
CAR                 ; generateTupleAccess total=7 pos=0 ; 10079
LD     1 1          ; var lookingEdge ; 10080
LDC 0               ; local var space ; 10081
LDF    2975         ;  @endingPointOfEdgeRoute ; 10082
AP     2             ; 10083
LDF    2958         ;  @pointEquals ; 10084
AP     2             ; 10085
RTN                  ; 10086
LDC    1            ;  <== lambda_1033  [ParsedEdge f] (as expr) ; 10087
LD     1 3          ; var visited ; 10088
LD     0 0          ; var f ; 10089
CDR                 ; generateTupleAccess total=7 pos=5 ; 10090
CDR                  ; 10091
CDR                  ; 10092
CDR                  ; 10093
CDR                  ; 10094
CAR                  ; 10095
LDF    1277         ;  @sorted_map_contains ; 10096
AP     2             ; 10097
SUB                  ; 10098
RTN                  ; 10099
LD     0 0          ;  <== lambda_1034  [pe] (as expr) ; 10100
LD     1 1          ; var worldState ; 10101
CAR                 ; generateTupleAccess total=4 pos=0 ; 10102
LDC 0               ; local var space ; 10103
LDC 0               ; local var space ; 10104
LDF    2605         ;  @collectAnyEdgePills ; 10105
AP     4             ; 10106
LDF    532          ;  @length ; 10107
AP     1             ; 10108
LDC    0            ; just constant from code ; 10109
CGT                  ; 10110
SEL    10113 10115  ; IF? 71 ; 10111
RTN                  ; 10112
LDC    1            ; THEN: 71 ; 10113
JOIN                 ; 10114
LDC    0            ; ELSE: 71 ; 10115
JOIN                 ; 10116
LD     0 0          ;  <== lambda_1035  [ParsedEdge f] (as expr) ; 10117
CDR                 ; generateTupleAccess total=7 pos=5 ; 10118
CDR                  ; 10119
CDR                  ; 10120
CDR                  ; 10121
CDR                  ; 10122
CAR                  ; 10123
LDC    0            ; just constant from code ; 10124
CONS                 ; 10125
RTN                  ; 10126
LD     0 0          ;  <== lambda_1036  [ParsedEdge f] (as expr) ; 10127
CDR                 ; generateTupleAccess total=7 pos=6 ; 10128
CDR                  ; 10129
CDR                  ; 10130
CDR                  ; 10131
CDR                  ; 10132
CDR                  ; 10133
LDC    0            ; just constant from code ; 10134
CONS                 ; 10135
RTN                  ; 10136
LD     0 0          ;  <== lambda_1037  [ParsedEdge next] (as expr) ; 10137
LD     1 8          ; var lookingEdge ; 10138
CONS                 ; 10139
RTN                  ; 10140
LD     0 0          ;  <== lambda_1038  [Queue<ListCons<ParsedEdge>> qq, ListCons<ParsedEdge> nr] (as expr) ; 10141
LD     0 1          ; var nr ; 10142
LDF    407          ;  @queue_enqueue ; 10143
AP     2             ; 10144
RTN                  ; 10145
LD     0 0          ;  <== lambda_1039  [acc, pe] (as expr) ; 10146
LD     0 1          ; var pe ; 10147
LDC 0               ; local var space ; 10148
LDC 0               ; local var space ; 10149
LDF    2618         ;  @countAnyEdgePills ; 10150
AP     3             ; 10151
ADD                  ; 10152
RTN                  ; 10153
LD     0 0          ;  <== lambda_1040  [p] (as expr) ; 10154
CAR                  ; 10155
LD     0 0          ; var p ; 10156
LDF    125          ;  @last ; 10157
AP     1             ; 10158
LD     0 0          ; var p ; 10159
LD     0 0          ; var p ; 10160
LD     1 4          ; var accessors ; 10161
LDF    3251         ;  @makeEdgeAccess ; 10162
AP     2             ; 10163
LD     0 0          ; var p ; 10164
LDF    532          ;  @length ; 10165
AP     1             ; 10166
LDC    1            ; just constant from code ; 10167
SUB                  ; 10168
LDC    -1           ; just negative constant from code ; 10169
LDC    -1           ; just negative constant from code ; 10170
CONS                 ; 10171
CONS                 ; 10172
CONS                 ; 10173
CONS                 ; 10174
CONS                 ; 10175
CONS                 ; 10176
RTN                  ; 10177
LDC    100          ;  <== lambda_1041  [Point pt] (as expr) ; 10178
LD     0 0          ; var pt ; 10179
CAR                 ; generateTupleAccess total=2 pos=0 ; 10180
LD     1 1          ; var accessors ; 10181
LD     0 0          ; var pt ; 10182
CDR                 ; generateTupleAccess total=2 pos=1 ; 10183
LDF    423          ;  @list_item ; 10184
AP     2             ; 10185
AP     2             ; 10186
RTN                  ; 10187
LD     1 0          ;  <== lambda_1042  [Tuple<Integer,Point> d] (as expr) ; 10188
LD     0 0          ; var d ; 10189
CDR                 ; generateTupleAccess total=2 pos=1 ; 10190
LDF    3084         ;  @isWalkable2 ; 10191
AP     2             ; 10192
LDC    1            ; just constant from code ; 10193
LD     1 4          ; var visited ; 10194
LD     0 0          ; var d ; 10195
CAR                 ; generateTupleAccess total=2 pos=0 ; 10196
LDF    1277         ;  @sorted_map_contains ; 10197
AP     2             ; 10198
SUB                  ; 10199
MUL                  ; 10200
RTN                  ; 10201
LD     1 2          ;  <== lambda_1043  [Tuple<Integer,Point> e] (as expr) ; 10202
LD     0 0          ; var e ; 10203
CAR                 ; generateTupleAccess total=2 pos=0 ; 10204
LDF    1277         ;  @sorted_map_contains ; 10205
AP     2             ; 10206
RTN                  ; 10207
LD     1 3          ;  <== lambda_1044  [Tuple<Integer,Point> e] (as expr) ; 10208
LDF    10292        ;  @lambda_1053 ; 10209
LDF    545          ;  @any ; 10210
AP     2             ; 10211
RTN                  ; 10212
LDC    1            ;  <== lambda_1045  [Tuple<Integer,Point> e] (as expr) ; 10213
LD     1 14         ; var arriveds ; 10214
LD     0 0          ; var e ; 10215
CAR                 ; generateTupleAccess total=2 pos=0 ; 10216
LDF    1277         ;  @sorted_map_contains ; 10217
AP     2             ; 10218
SUB                  ; 10219
RTN                  ; 10220
LD     0 0          ;  <== lambda_1046  [Tuple<Integer,Point> e] (as expr) ; 10221
CDR                 ; generateTupleAccess total=2 pos=1 ; 10222
LD     1 8          ; var thisRoute ; 10223
CONS                 ; 10224
RTN                  ; 10225
LD     0 0          ;  <== lambda_1047  [r, i] (as expr) ; 10226
LD     0 1          ; var i ; 10227
LDF    407          ;  @queue_enqueue ; 10228
AP     2             ; 10229
RTN                  ; 10230
LD     0 0          ;  <== lambda_1048  [Tuple<Integer,Point> e] (as expr) ; 10231
CDR                 ; generateTupleAccess total=2 pos=1 ; 10232
LD     1 8          ; var thisRoute ; 10233
CONS                 ; 10234
RTN                  ; 10235
LD     1 0          ;  <== lambda_1049  [Point ep] (as expr) ; 10236
CAR                 ; generateTupleAccess total=2 pos=0 ; 10237
LD     0 0          ; var ep ; 10238
CAR                 ; generateTupleAccess total=2 pos=0 ; 10239
CEQ                  ; 10240
LD     1 0          ; var pos ; 10241
CDR                 ; generateTupleAccess total=2 pos=1 ; 10242
LD     0 0          ; var ep ; 10243
CDR                 ; generateTupleAccess total=2 pos=1 ; 10244
CEQ                  ; 10245
MUL                  ; 10246
SEL    10249 10251  ; IF? 72 ; 10247
RTN                  ; 10248
LDC    1            ; THEN: 72 ; 10249
JOIN                 ; 10250
LDC    0            ; ELSE: 72 ; 10251
JOIN                 ; 10252
LD     0 0          ;  <== lambda_1050  [ParsedEdge e] (as expr) ; 10253
CAR                 ; generateTupleAccess total=7 pos=0 ; 10254
LD     1 0          ; var a ; 10255
LDF    2958         ;  @pointEquals ; 10256
AP     2             ; 10257
LD     0 0          ; var e ; 10258
CDR                 ; generateTupleAccess total=7 pos=1 ; 10259
CAR                  ; 10260
LD     1 1          ; var b ; 10261
LDF    2958         ;  @pointEquals ; 10262
AP     2             ; 10263
MUL                  ; 10264
RTN                  ; 10265
LD     0 0          ;  <== lambda_1051  [col, colx] (as expr) ; 10266
LDC 0               ; local var space ; 10267
LDF    3070         ;  @isWalkable ; 10268
AP     2             ; 10269
LDC    0            ; just constant from code ; 10270
CGT                  ; 10271
SEL    10274 10281  ; IF? 73 ; 10272
RTN                  ; 10273
LD     0 1          ; THEN: 73 ; 10274
LD     1 1          ; var rowy ; 10275
CONS                 ; 10276
LDC 0               ; local var space ; 10277
LDF    220          ;  @JUST ; 10278
AP     2             ; 10279
JOIN                 ; 10280
LDF    216          ; ELSE: 73, ALSO: @NOTHING ; 10281
AP     0             ; 10282
JOIN                 ; 10283
LD     0 0          ;  <== lambda_1052  [val, ix] (as expr) ; 10284
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 10285
LD     0 1          ; var ix ; 10286
LD     1 0          ; var t ; 10287
CDR                 ; generateTupleAccess total=2 pos=1 ; 10288
AP     2             ; 10289
AP     1             ; 10290
RTN                  ; 10291
LD     1 0          ;  <== lambda_1053  [d] (as expr) ; 10292
CDR                 ; generateTupleAccess total=2 pos=1 ; 10293
LD     0 0          ; var d ; 10294
LDF    2958         ;  @pointEquals ; 10295
AP     2             ; 10296
RTN                  ; 10297
LD     0 0          ;  <== lambda_1054  [x, y] (as expr) ; 10298
LD     0 1          ; var y ; 10299
MUL                  ; 10300
RTN                  ; 10301
LD     0 0          ;  <== lambda_1055  [x, y] (as expr) ; 10302
LD     0 1          ; var y ; 10303
ADD                  ; 10304
LDC    0            ; just constant from code ; 10305
CGT                  ; 10306
SEL    10309 10311  ; IF? 132 ; 10307
RTN                  ; 10308
LDC    1            ; THEN: 132 ; 10309
JOIN                 ; 10310
LDC    0            ; ELSE: 132 ; 10311
JOIN                 ; 10312
LD     0 0          ;  <== lambda_1056  [x, y] (as expr) ; 10313
LD     0 1          ; var y ; 10314
CEQ                  ; 10315
LDC    1            ; for negation ; 10316
SUB                  ; 10317
SEL    10320 10322  ; IF? 133 ; 10318
RTN                  ; 10319
LDC    1            ; THEN: 133 ; 10320
JOIN                 ; 10321
LDC    0            ; ELSE: 133 ; 10322
JOIN                 ; 10323
LD     1 2          ;  <== lambda_1057  [Tuple<Integer,Point> e] (as expr) ; 10324
LD     0 0          ; var e ; 10325
CAR                 ; generateTupleAccess total=2 pos=0 ; 10326
LDF    1277         ;  @sorted_map_contains ; 10327
AP     2             ; 10328
RTN                  ; 10329
