LD     0 0          ;  <== entryPoint  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) @src/app/Sample1.java(52,140) ; 0
LD     0 1          ; var ghostSpecs ; 1
LDC 0               ; local var space ; 2
LDC 0               ; local var space ; 3
LDC 0               ; local var space ; 4
LDF    2494         ;  @entryFactual ; 5
AP     5             ; 6
RTN                  ; 7
LD     0 0          ;  <== mydebug  [T o] (as blk) @src/app/VM.java(82,37) ; 8
DBUG                 ; 9
LD     0 0          ; var o ; 10
RTN                  ; 11
LD     0 0          ;  <== mydebugv  [Object tag, T o] (as blk) @src/app/VM.java(88,50) ; 12
DBUG                 ; 13
LD     0 1          ; var o ; 14
DBUG                 ; 15
LD     0 1          ; var o ; 16
RTN                  ; 17
LD     0 2          ;  <== foldl  [Function2<A,B,A> f, A a, ListCons<B> l] (as blk) @src/app/VM.java(133,75) ; 18
ATOM                 ; 19
SEL    22 24        ; IF? 12 ; 20
RTN                  ; 21
LD     0 1          ; THEN: 12 ; 22
JOIN                 ; 23
LD     0 0          ; ELSE: 12 ; 24
LD     0 1          ; var a ; 25
LD     0 2          ; var l ; 26
CAR                  ; 27
LD     0 0          ; var f ; 28
AP     2             ; 29
LD     0 2          ; var l ; 30
CDR                  ; 31
LDF    18           ;  @foldl ; 32
AP     3             ; 33
JOIN                 ; 34
LD     0 2          ;  <== foldr  [Function2<A,B,B> f, B a, ListCons<A> l] (as blk) @src/app/VM.java(143,75) ; 35
ATOM                 ; 36
SEL    39 41        ; IF? 13 ; 37
RTN                  ; 38
LD     0 1          ; THEN: 13 ; 39
JOIN                 ; 40
LD     0 2          ; ELSE: 13 ; 41
CAR                  ; 42
LD     0 0          ; var f ; 43
LD     0 1          ; var a ; 44
LD     0 2          ; var l ; 45
CDR                  ; 46
LDF    35           ;  @foldr ; 47
AP     3             ; 48
LD     0 0          ; var f ; 49
AP     2             ; 50
JOIN                 ; 51
LDF    10573        ;  <== o  [final Function1<B,C> f, final Function1<A,B> g] (as blk) @src/app/VM.java(152,96), ALSO: @lambda_1014 ; 52
RTN                  ; 53
LDF    10579        ;  <== flip  [Function2<A,B,C> f] (as blk) @src/app/VM.java(178,74), ALSO: @lambda_1015 ; 54
RTN                  ; 55
LD     0 0          ;  <== map  [ListCons<T> c, Function1<T,T2> arg] (as blk) @src/app/VM.java(204,80) ; 56
ATOM                 ; 57
SEL    60 62        ; IF? 3 ; 58
RTN                  ; 59
LDC    0            ; THEN: 3 ; 60
JOIN                 ; 61
LD     0 0          ; ELSE: 3 ; 62
CAR                  ; 63
LD     0 1          ; var arg ; 64
AP     1             ; 65
LD     0 0          ; var c ; 66
CDR                  ; 67
LD     0 1          ; var arg ; 68
LDF    56           ;  @map ; 69
AP     2             ; 70
CONS                 ; 71
JOIN                 ; 72
LD     0 0          ;  <== mapi  [ListCons<D> c, int ix, Function2<D,Integer,D2> arg] (as blk) @src/app/VM.java(242,98) ; 73
ATOM                 ; 74
SEL    77 79        ; IF? 5 ; 75
RTN                  ; 76
LDC    0            ; THEN: 5 ; 77
JOIN                 ; 78
LD     0 0          ; ELSE: 5 ; 79
CAR                  ; 80
LD     0 1          ; var ix ; 81
LD     0 2          ; var arg ; 82
AP     2             ; 83
LD     0 0          ; var c ; 84
CDR                  ; 85
LD     0 1          ; var ix ; 86
LDC    1            ; just constant from code ; 87
ADD                  ; 88
LD     0 2          ; var arg ; 89
LDF    73           ;  @mapi ; 90
AP     3             ; 91
CONS                 ; 92
JOIN                 ; 93
LD     0 0          ;  <== cat_maybes  [ListCons<Maybe<D>> data] (as blk) @src/app/VM.java(251,70) ; 94
LDF    10584        ;  @lambda_1016 ; 95
LDF    56           ;  @map ; 96
AP     2             ; 97
ST     0 1           ; 98
LD     0 1          ; var mtl ; 99
LDF    105          ;  @concat ; 100
AP     1             ; 101
ST     0 2           ; 102
LD     0 2          ; var rv ; 103
RTN                  ; 104
LD     0 0          ;  <== concat  [ListCons<ListCons<D>> data] (as blk) @src/app/VM.java(261,69) ; 105
LDC    0            ; NULL literal ; 106
LDF    136          ;  @concat_acc ; 107
AP     2             ; 108
LDF    286          ;  @reverse ; 109
AP     1             ; 110
RTN                  ; 111
LD     0 0          ;  <== last  [ListCons<D> data] (as blk) @src/app/VM.java(269,47) ; 112
ATOM                 ; 113
SEL    120 122       ; 114
LD     0 0          ; var data ; 115
CDR                  ; 116
ATOM                 ; 117
SEL    123 126      ; IF? 14 ; 118
RTN                  ; 119
BRK                 ; branch@120 ; 120
JOIN                 ; 121
JOIN                ; branch@122 ; 122
LD     0 0          ; THEN: 14 ; 123
CAR                  ; 124
JOIN                 ; 125
LD     0 0          ; ELSE: 14 ; 126
CDR                  ; 127
LDF    112          ;  @last ; 128
AP     1             ; 129
JOIN                 ; 130
LD     0 0          ;  <== concat_set  [ListCons<ListCons<D>> data] (as blk) @src/app/VM.java(278,73) ; 131
LDC    0            ; NULL literal ; 132
LDF    136          ;  @concat_acc ; 133
AP     2             ; 134
RTN                  ; 135
LD     0 0          ;  <== concat_acc  [ListCons<ListCons<D>> data, ListCons<D> acc] (as blk) @src/app/VM.java(286,90) ; 136
ATOM                 ; 137
SEL    140 142      ; IF? 6 ; 138
RTN                  ; 139
LD     0 1          ; THEN: 6 ; 140
JOIN                 ; 141
LD     0 0          ; ELSE: 6 ; 142
CDR                  ; 143
LD     0 0          ; var data ; 144
CAR                  ; 145
LD     0 1          ; var acc ; 146
LDF    152          ;  @concat2 ; 147
AP     2             ; 148
LDF    136          ;  @concat_acc ; 149
AP     2             ; 150
JOIN                 ; 151
LD     0 0          ;  <== concat2  [ListCons<D> data, ListCons<D> data2] (as blk) @src/app/VM.java(294,79) ; 152
ATOM                 ; 153
SEL    156 158      ; IF? 15 ; 154
RTN                  ; 155
LD     0 1          ; THEN: 15 ; 156
JOIN                 ; 157
LD     0 1          ; ELSE: 15 ; 158
ATOM                 ; 159
SEL    162 164      ; IF? 86 ; 160
JOIN                 ; 161
LD     0 0          ; THEN: 86 ; 162
JOIN                 ; 163
LD     0 0          ; ELSE: 86 ; 164
LDF    286          ;  @reverse ; 165
AP     1             ; 166
LD     0 1          ; var data2 ; 167
LDF    188          ;  @concat2_acc ; 168
AP     2             ; 169
JOIN                 ; 170
LD     0 0          ;  <== concat2_set  [ListCons<D> data, ListCons<D> data2] (as blk) @src/app/VM.java(304,83) ; 171
ATOM                 ; 172
SEL    175 177      ; IF? 16 ; 173
RTN                  ; 174
LD     0 1          ; THEN: 16 ; 175
JOIN                 ; 176
LD     0 1          ; ELSE: 16 ; 177
ATOM                 ; 178
SEL    181 183      ; IF? 87 ; 179
JOIN                 ; 180
LD     0 0          ; THEN: 87 ; 181
JOIN                 ; 182
LD     0 0          ; ELSE: 87 ; 183
LD     0 1          ; var data2 ; 184
LDF    188          ;  @concat2_acc ; 185
AP     2             ; 186
JOIN                 ; 187
LD     0 0          ;  <== concat2_acc  [ListCons<D> data, ListCons<D> acc] (as blk) @src/app/VM.java(314,81) ; 188
ATOM                 ; 189
SEL    192 194      ; IF? 17 ; 190
RTN                  ; 191
LD     0 1          ; THEN: 17 ; 192
JOIN                 ; 193
LD     0 0          ; ELSE: 17 ; 194
CDR                  ; 195
LD     0 0          ; var data ; 196
CAR                  ; 197
LD     0 1          ; var acc ; 198
CONS                 ; 199
LDF    188          ;  @concat2_acc ; 200
AP     2             ; 201
JOIN                 ; 202
LDC    0            ;  <== NOTHING  [] (as blk) @src/app/VM.java(322,41) ; 203
LDC    0            ; NULL literal ; 204
CONS                 ; 205
RTN                  ; 206
LDC    1            ;  <== JUST  [T t] (as blk) @src/app/VM.java(330,41) ; 207
LD     0 0          ; var t ; 208
CONS                 ; 209
ST     0 1           ; 210
LD     0 1          ; var tMaybe ; 211
RTN                  ; 212
LD     0 0          ;  <== maybeToList  [Maybe<D> d] (as blk) @src/app/VM.java(336,58) ; 213
LDF    270          ;  @is_nothing ; 214
AP     1             ; 215
LDC    1            ; just constant from code ; 216
CEQ                  ; 217
SEL    220 222      ; IF? 18 ; 218
RTN                  ; 219
LDC    0            ; THEN: 18 ; 220
JOIN                 ; 221
LD     0 0          ; ELSE: 18 ; 222
LDF    275          ;  @from_maybe ; 223
AP     1             ; 224
LDC    0            ; NULL literal ; 225
CONS                 ; 226
JOIN                 ; 227
LDC    0            ;  <== catMaybes_acc  [ListCons<Maybe<D>> data, ListCons<D> acc] (as blk) @src/app/VM.java(344,90) ; 228
ST     0 2           ; 229
LD     0 0          ; var data ; 230
ATOM                 ; 231
SEL    235 238       ; 232
LD     0 2          ; var rv ; 233
RTN                  ; 234
LD     0 1          ; branch@235 ; 235
ST     0 2           ; 236
JOIN                 ; 237
LD     0 0          ; branch@238 ; 238
CAR                  ; 239
LDF    270          ;  @is_nothing ; 240
AP     1             ; 241
ST     0 3           ; 242
LD     0 0          ; var data ; 243
CAR                  ; 244
LDF    275          ;  @from_maybe ; 245
AP     1             ; 246
ST     0 4           ; 247
LD     0 4          ; var data1 ; 248
LD     0 1          ; var acc ; 249
CONS                 ; 250
ST     0 5           ; 251
LD     0 0          ; var data ; 252
CDR                  ; 253
LD     0 3          ; var nothing ; 254
LDC    1            ; just constant from code ; 255
CEQ                  ; 256
SEL    266 268      ; IF? 88 ; 257
LDC 0               ; local var space ; 258
LDC 0               ; local var space ; 259
LDC 0               ; local var space ; 260
LDC 0               ; local var space ; 261
LDF    228          ;  @catMaybes_acc ; 262
AP     6             ; 263
ST     0 2           ; 264
JOIN                 ; 265
LD     0 1          ; THEN: 88 ; 266
JOIN                 ; 267
LD     0 5          ; ELSE: 88 ; 268
JOIN                 ; 269
LDC    1            ;  <== is_nothing  [Maybe<D> head] (as blk) @src/app/VM.java(367,53) ; 270
LD     0 0          ; var head ; 271
CAR                 ; generateTupleAccess total=2 pos=0 ; 272
SUB                  ; 273
RTN                  ; 274
LD     0 0          ;  <== from_maybe  [Maybe<D> head] (as blk) @src/app/VM.java(375,51) ; 275
CAR                 ; generateTupleAccess total=2 pos=0 ; 276
LDC    0            ; just constant from code ; 277
CEQ                  ; 278
SEL    283 285       ; 279
LD     0 0          ; var head ; 280
CDR                 ; generateTupleAccess total=2 pos=1 ; 281
RTN                  ; 282
BRK                 ; branch@283 ; 283
JOIN                 ; 284
JOIN                ; branch@285 ; 285
LD     0 0          ;  <== reverse  [ListCons<D> c] (as blk) @src/app/VM.java(387,57) ; 286
LDC    0            ; NULL literal ; 287
LDF    358          ;  @reverse_acc ; 288
AP     2             ; 289
RTN                  ; 290
LD     0 0          ;  <== maximum_by_acc  [ListCons<D> d, Function1<D,Integer> projection, D acc] (as blk) @src/app/VM.java(392,95) ; 291
ATOM                 ; 292
SEL    295 297      ; IF? 19 ; 293
RTN                  ; 294
LD     0 2          ; THEN: 19 ; 295
JOIN                 ; 296
LD     0 2          ; ELSE: 19 ; 297
LD     0 1          ; var projection ; 298
AP     1             ; 299
LD     0 0          ; var d ; 300
CAR                  ; 301
LD     0 1          ; var projection ; 302
AP     1             ; 303
CGT                  ; 304
SEL    307 314      ; IF? 89 ; 305
JOIN                 ; 306
LD     0 0          ; THEN: 89 ; 307
CDR                  ; 308
LD     0 1          ; var projection ; 309
LD     0 2          ; var acc ; 310
LDF    291          ;  @maximum_by_acc ; 311
AP     3             ; 312
JOIN                 ; 313
LD     0 0          ; ELSE: 89 ; 314
CDR                  ; 315
LD     0 1          ; var projection ; 316
LD     0 0          ; var d ; 317
CAR                  ; 318
LDF    291          ;  @maximum_by_acc ; 319
AP     3             ; 320
JOIN                 ; 321
LD     0 0          ;  <== maximum_by  [ListCons<D> d, Function1<D,Integer> projection] (as blk) @src/app/VM.java(399,84) ; 322
ATOM                 ; 323
SEL    333 335       ; 324
LD     0 0          ; var d ; 325
CDR                  ; 326
LD     0 1          ; var projection ; 327
LD     0 0          ; var d ; 328
CAR                  ; 329
LDF    291          ;  @maximum_by_acc ; 330
AP     3             ; 331
RTN                  ; 332
BRK                 ; branch@333 ; 333
JOIN                 ; 334
JOIN                ; branch@335 ; 335
LD     0 0          ;  <== dropWhile  [ListCons<D> c, Function1<D,Integer> test] (as blk) @src/app/VM.java(408,87) ; 336
ATOM                 ; 337
SEL    340 342      ; IF? 20 ; 338
RTN                  ; 339
LDC    0            ; THEN: 20 ; 340
JOIN                 ; 341
LD     0 0          ; ELSE: 20 ; 342
CAR                  ; 343
LD     0 1          ; var test ; 344
AP     1             ; 345
LDC    1            ; just constant from code ; 346
CEQ                  ; 347
SEL    350 356      ; IF? 90 ; 348
JOIN                 ; 349
LD     0 0          ; THEN: 90 ; 350
CDR                  ; 351
LD     0 1          ; var test ; 352
LDF    336          ;  @dropWhile ; 353
AP     2             ; 354
JOIN                 ; 355
LD     0 0          ; ELSE: 90 ; 356
JOIN                 ; 357
LD     0 0          ;  <== reverse_acc  [ListCons<D> c, ListCons<D> acc] (as blk) @src/app/VM.java(417,78) ; 358
ATOM                 ; 359
SEL    362 364      ; IF? 7 ; 360
RTN                  ; 361
LD     0 1          ; THEN: 7 ; 362
JOIN                 ; 363
LD     0 0          ; ELSE: 7 ; 364
CDR                  ; 365
LD     0 0          ; var c ; 366
CAR                  ; 367
LD     0 1          ; var acc ; 368
CONS                 ; 369
LDF    358          ;  @reverse_acc ; 370
AP     2             ; 371
JOIN                 ; 372
LD     0 0          ;  <== fold0  [ListCons<I> c, R init, Function2<R,I,R> arg] (as blk) @src/app/VM.java(426,80) ; 373
ATOM                 ; 374
SEL    377 379      ; IF? 9 ; 375
RTN                  ; 376
LD     0 1          ; THEN: 9 ; 377
JOIN                 ; 378
LD     0 0          ; ELSE: 9 ; 379
CDR                  ; 380
LD     0 1          ; var init ; 381
LD     0 0          ; var c ; 382
CAR                  ; 383
LD     0 2          ; var arg ; 384
AP     2             ; 385
LD     0 2          ; var arg ; 386
LDF    373          ;  @fold0 ; 387
AP     3             ; 388
JOIN                 ; 389
LD     0 0          ;  <== max  [int a, int b] (as blk) @src/app/VM.java(433,32) ; 390
LD     0 1          ; var b ; 391
CGT                  ; 392
SEL    395 397      ; IF? 21 ; 393
RTN                  ; 394
LD     0 0          ; THEN: 21 ; 395
JOIN                 ; 396
LD     0 1          ; ELSE: 21 ; 397
JOIN                 ; 398
LDC    0            ;  <== queue_new  [] (as blk) @src/app/VM.java(438,36) ; 399
LDC    0            ; NULL literal ; 400
CONS                 ; 401
RTN                  ; 402
LD     0 0          ;  <== queue_enqueue  [Queue<T> q, T v] (as blk) @src/app/VM.java(443,55) ; 403
CAR                 ; generateTupleAccess total=2 pos=0 ; 404
LD     0 1          ; var v ; 405
LD     0 0          ; var q ; 406
CDR                 ; generateTupleAccess total=2 pos=1 ; 407
CONS                 ; 408
CONS                 ; 409
RTN                  ; 410
LD     0 0          ;  <== queue_isempty  [Queue<T> q] (as blk) @src/app/VM.java(451,49) ; 411
CAR                 ; generateTupleAccess total=2 pos=0 ; 412
ATOM                 ; 413
LD     0 0          ; var q ; 414
CDR                 ; generateTupleAccess total=2 pos=1 ; 415
ATOM                 ; 416
MUL                  ; 417
RTN                  ; 418
LDC    0            ;  <== list_item  [Cons list, int n] (as blk) @src/app/VM.java(459,53) ; 419
LD     0 1          ; var n ; 420
CGT                  ; 421
SEL    428 430       ; 422
LD     0 1          ; var n ; 423
LDC    0            ; just constant from code ; 424
CEQ                  ; 425
SEL    431 434      ; IF? 11 ; 426
RTN                  ; 427
BRK                 ; branch@428 ; 428
JOIN                 ; 429
JOIN                ; branch@430 ; 430
LD     0 0          ; THEN: 11 ; 431
CAR                  ; 432
JOIN                 ; 433
LD     0 0          ; ELSE: 11 ; 434
CDR                  ; 435
LD     0 1          ; var n ; 436
LDC    1            ; just constant from code ; 437
SUB                  ; 438
LDF    419          ;  @list_item ; 439
AP     2             ; 440
JOIN                 ; 441
LDC    0            ;  <== list_item  [ListCons<T> list, int n] (as blk) @src/app/VM.java(468,59) ; 442
LD     0 1          ; var n ; 443
CGT                  ; 444
SEL    451 453       ; 445
LD     0 1          ; var n ; 446
LDC    0            ; just constant from code ; 447
CEQ                  ; 448
SEL    454 457      ; IF? 22 ; 449
RTN                  ; 450
BRK                 ; branch@451 ; 451
JOIN                 ; 452
JOIN                ; branch@453 ; 453
LD     0 0          ; THEN: 22 ; 454
CAR                  ; 455
JOIN                 ; 456
LD     0 0          ; ELSE: 22 ; 457
CDR                  ; 458
LD     0 1          ; var n ; 459
LDC    1            ; just constant from code ; 460
SUB                  ; 461
LDF    419          ;  @list_item ; 462
AP     2             ; 463
JOIN                 ; 464
LDC    0            ;  <== list_item_def  [Cons list, int index, Object deflt] (as blk) @src/app/VM.java(477,75) ; 465
LD     0 1          ; var index ; 466
CGT                  ; 467
SEL    470 472      ; IF? 23 ; 468
RTN                  ; 469
LD     0 2          ; THEN: 23 ; 470
JOIN                 ; 471
LD     0 1          ; ELSE: 23 ; 472
LDC    0            ; just constant from code ; 473
CEQ                  ; 474
SEL    477 480      ; IF? 91 ; 475
JOIN                 ; 476
LD     0 0          ; THEN: 91 ; 477
CAR                  ; 478
JOIN                 ; 479
LD     0 0          ; ELSE: 91 ; 480
CDR                  ; 481
LD     0 1          ; var index ; 482
LDC    1            ; just constant from code ; 483
SUB                  ; 484
LDF    419          ;  @list_item ; 485
AP     2             ; 486
JOIN                 ; 487
LDC    0            ;  <== queue_dequeue  [Queue<T> q] (as blk) @src/app/VM.java(486,60) ; 488
ST     0 1           ; 489
LD     0 0          ; var q ; 490
CAR                 ; generateTupleAccess total=2 pos=0 ; 491
ATOM                 ; 492
SEL    496 503       ; 493
LD     0 1          ; var retval ; 494
RTN                  ; 495
LD     0 0          ; branch@496 ; 496
CDR                 ; generateTupleAccess total=2 pos=1 ; 497
ATOM                 ; 498
LDC    1            ; for negation ; 499
SUB                  ; 500
SEL    515 526       ; 501
JOIN                 ; 502
LD     0 0          ; branch@503 ; 503
CAR                 ; generateTupleAccess total=2 pos=0 ; 504
CAR                  ; 505
LD     0 0          ; var q ; 506
CAR                 ; generateTupleAccess total=2 pos=0 ; 507
CDR                  ; 508
LD     0 0          ; var q ; 509
CDR                 ; generateTupleAccess total=2 pos=1 ; 510
CONS                 ; 511
CONS                 ; 512
ST     0 1           ; 513
JOIN                 ; 514
LD     0 0          ; branch@515 ; 515
CDR                 ; generateTupleAccess total=2 pos=1 ; 516
LDF    286          ;  @reverse ; 517
AP     1             ; 518
LDC    0            ; NULL literal ; 519
CONS                 ; 520
LDC 0               ; local var space ; 521
LDF    488          ;  @queue_dequeue ; 522
AP     2             ; 523
ST     0 1           ; 524
JOIN                 ; 525
BRK                 ; branch@526 ; 526
JOIN                 ; 527
LD     0 0          ;  <== length  [ListCons<T> list] (as blk) @src/app/VM.java(504,51) ; 528
LDC    0            ; just constant from code ; 529
LDF    642          ;  @elements_counter ; 530
AP     2             ; 531
RTN                  ; 532
LD     0 0          ;  <== filter  [ListCons<T> list, Function1<T,Integer> pred] (as blk) @src/app/VM.java(512,87) ; 533
LD     0 1          ; var pred ; 534
LDC    0            ; NULL literal ; 535
LDF    605          ;  @filter_acc ; 536
AP     3             ; 537
LDF    286          ;  @reverse ; 538
AP     1             ; 539
RTN                  ; 540
LD     0 0          ;  <== any  [ListCons<T> list, Function1<T,Integer> pred] (as blk) @src/app/VM.java(520,76) ; 541
ATOM                 ; 542
SEL    545 547      ; IF? 24 ; 543
RTN                  ; 544
LDC    0            ; THEN: 24 ; 545
JOIN                 ; 546
LD     0 0          ; ELSE: 24 ; 547
CAR                  ; 548
LD     0 1          ; var pred ; 549
AP     1             ; 550
LDC    1            ; just constant from code ; 551
CEQ                  ; 552
SEL    555 557      ; IF? 92 ; 553
JOIN                 ; 554
LDC    1            ; THEN: 92 ; 555
JOIN                 ; 556
LD     0 0          ; ELSE: 92 ; 557
CDR                  ; 558
LD     0 1          ; var pred ; 559
LDF    541          ;  @any ; 560
AP     2             ; 561
JOIN                 ; 562
LD     0 0          ;  <== noneof  [ListCons<T> list, Function1<T,Integer> pred] (as blk) @src/app/VM.java(531,79) ; 563
ATOM                 ; 564
SEL    567 569      ; IF? 25 ; 565
RTN                  ; 566
LDC    1            ; THEN: 25 ; 567
JOIN                 ; 568
LD     0 0          ; ELSE: 25 ; 569
CAR                  ; 570
LD     0 1          ; var pred ; 571
AP     1             ; 572
LDC    1            ; just constant from code ; 573
CEQ                  ; 574
SEL    577 579      ; IF? 93 ; 575
JOIN                 ; 576
LDC    0            ; THEN: 93 ; 577
JOIN                 ; 578
LD     0 0          ; ELSE: 93 ; 579
CDR                  ; 580
LD     0 1          ; var pred ; 581
LDF    563          ;  @noneof ; 582
AP     2             ; 583
JOIN                 ; 584
LD     0 0          ;  <== empty  [Cons d] (as blk) @src/app/VM.java(542,29) ; 585
ATOM                 ; 586
LDC    1            ; for negation ; 587
SUB                  ; 588
SEL    591 593      ; IF? 26 ; 589
RTN                  ; 590
LDC    0            ; THEN: 26 ; 591
JOIN                 ; 592
LDC    1            ; ELSE: 26 ; 593
JOIN                 ; 594
LD     0 0          ;  <== notempty  [Cons d] (as blk) @src/app/VM.java(550,32) ; 595
ATOM                 ; 596
LDC    1            ; for negation ; 597
SUB                  ; 598
SEL    601 603      ; IF? 27 ; 599
RTN                  ; 600
LDC    1            ; THEN: 27 ; 601
JOIN                 ; 602
LDC    0            ; ELSE: 27 ; 603
JOIN                 ; 604
LD     0 0          ;  <== filter_acc  [ListCons<T> list, Function1<T,Integer> pred, ListCons<T> acc] (as blk) @src/app/VM.java(558,108) ; 605
ATOM                 ; 606
SEL    609 611      ; IF? 8 ; 607
RTN                  ; 608
LD     0 2          ; THEN: 8 ; 609
JOIN                 ; 610
LD     0 0          ; ELSE: 8 ; 611
CDR                  ; 612
LD     0 1          ; var pred ; 613
LD     0 0          ; var list ; 614
CAR                  ; 615
LD     0 1          ; var pred ; 616
AP     1             ; 617
LDC    1            ; just constant from code ; 618
CEQ                  ; 619
SEL    624 629      ; IF? 94 ; 620
LDF    605          ;  @filter_acc ; 621
AP     3             ; 622
JOIN                 ; 623
LD     0 0          ; THEN: 94 ; 624
CAR                  ; 625
LD     0 2          ; var acc ; 626
CONS                 ; 627
JOIN                 ; 628
LD     0 2          ; ELSE: 94 ; 629
JOIN                 ; 630
LD     0 0          ;  <== map_height  [Cons map] (as blk) @src/app/VM.java(565,43) ; 631
LDC    0            ; just constant from code ; 632
LDF    642          ;  @elements_counter ; 633
AP     2             ; 634
RTN                  ; 635
LD     0 0          ;  <== map_width  [Cons map] (as blk) @src/app/VM.java(570,42) ; 636
CAR                  ; 637
LDC    0            ; just constant from code ; 638
LDF    642          ;  @elements_counter ; 639
AP     2             ; 640
RTN                  ; 641
LD     0 0          ;  <== elements_counter  [Cons list, int counter] (as blk) @src/app/VM.java(578,63) ; 642
ATOM                 ; 643
SEL    646 648      ; IF? 1 ; 644
RTN                  ; 645
LD     0 1          ; THEN: 1 ; 646
JOIN                 ; 647
LD     0 0          ; ELSE: 1 ; 648
CDR                  ; 649
LD     0 1          ; var counter ; 650
LDC    1            ; just constant from code ; 651
ADD                  ; 652
LDF    642          ;  @elements_counter ; 653
AP     2             ; 654
JOIN                 ; 655
LD     0 1          ;  <== zip_with  [Function2<A,B,C> f, ListCons<A> x, ListCons<B> y] (as blk) @src/app/VM.java(585,101) ; 656
ATOM                 ; 657
SEL    660 662      ; IF? 4 ; 658
RTN                  ; 659
LDC    0            ; THEN: 4 ; 660
JOIN                 ; 661
LD     0 2          ; ELSE: 4 ; 662
ATOM                 ; 663
SEL    666 668      ; IF? 95 ; 664
JOIN                 ; 665
LDC    0            ; THEN: 95 ; 666
JOIN                 ; 667
LD     0 1          ; ELSE: 95 ; 668
CAR                  ; 669
LD     0 2          ; var y ; 670
CAR                  ; 671
LD     0 0          ; var f ; 672
AP     2             ; 673
LD     0 0          ; var f ; 674
LD     0 1          ; var x ; 675
CDR                  ; 676
LD     0 2          ; var y ; 677
CDR                  ; 678
LDF    656          ;  @zip_with ; 679
AP     3             ; 680
CONS                 ; 681
JOIN                 ; 682
LD     0 1          ;  <== zip3_with  [Function3<A,B,C,R> f, ListCons<A> x, ListCons<B> y, ListCons<C> z] (as blk) @src/app/VM.java(593,123) ; 683
ATOM                 ; 684
SEL    687 689      ; IF? 10 ; 685
RTN                  ; 686
LDC    0            ; THEN: 10 ; 687
JOIN                 ; 688
LD     0 2          ; ELSE: 10 ; 689
ATOM                 ; 690
SEL    693 695      ; IF? 96 ; 691
JOIN                 ; 692
LDC    0            ; THEN: 96 ; 693
JOIN                 ; 694
LD     0 3          ; ELSE: 96 ; 695
ATOM                 ; 696
SEL    699 701      ; IF? 97 ; 697
JOIN                 ; 698
LDC    0            ; THEN: 97 ; 699
JOIN                 ; 700
LD     0 1          ; ELSE: 97 ; 701
CAR                  ; 702
LD     0 2          ; var y ; 703
CAR                  ; 704
LD     0 3          ; var z ; 705
CAR                  ; 706
LD     0 0          ; var f ; 707
AP     3             ; 708
LD     0 0          ; var f ; 709
LD     0 1          ; var x ; 710
CDR                  ; 711
LD     0 2          ; var y ; 712
CDR                  ; 713
LD     0 3          ; var z ; 714
CDR                  ; 715
LDF    683          ;  @zip3_with ; 716
AP     4             ; 717
CONS                 ; 718
JOIN                 ; 719
LD     0 0          ;  <== zip  [final ListCons<A> x, final ListCons<B> y] (as blk) @src/app/VM.java(602,93) ; 720
ATOM                 ; 721
SEL    724 726      ; IF? 28 ; 722
RTN                  ; 723
LDC    0            ; THEN: 28 ; 724
JOIN                 ; 725
LD     0 1          ; ELSE: 28 ; 726
ATOM                 ; 727
SEL    730 732      ; IF? 98 ; 728
JOIN                 ; 729
LDC    0            ; THEN: 98 ; 730
JOIN                 ; 731
LD     0 0          ; ELSE: 98 ; 732
CAR                  ; 733
LD     0 1          ; var y ; 734
CAR                  ; 735
CONS                 ; 736
LD     0 0          ; var x ; 737
CDR                  ; 738
LD     0 1          ; var y ; 739
CDR                  ; 740
LDF    720          ;  @zip ; 741
AP     2             ; 742
CONS                 ; 743
JOIN                 ; 744
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) @src/app/VM.java(612,71) ; 745
LD     0 0          ; var f ; 746
AP     1             ; 747
CAR                  ; 748
ST     0 3           ; 749
LD     0 2          ; var n ; 750
LDC    0            ; just constant from code ; 751
CEQ                  ; 752
SEL    755 759      ; IF? 29 ; 753
RTN                  ; 754
LD     0 3          ; THEN: 29 ; 755
LDC    0            ; NULL literal ; 756
CONS                 ; 757
JOIN                 ; 758
LD     0 3          ; ELSE: 29 ; 759
LD     0 0          ; var f ; 760
LD     0 1          ; var a ; 761
LD     0 0          ; var f ; 762
AP     1             ; 763
CDR                  ; 764
LD     0 2          ; var n ; 765
LDC    1            ; just constant from code ; 766
SUB                  ; 767
LDC 0               ; local var space ; 768
LDF    745          ;  @produce_n ; 769
AP     4             ; 770
CONS                 ; 771
JOIN                 ; 772
LD     0 0          ;  <== range_n  [int n] (as blk) @src/app/VM.java(618,51) ; 773
LDC    0            ; just constant from code ; 774
CEQ                  ; 775
SEL    778 782      ; IF? 2 ; 776
RTN                  ; 777
LD     0 0          ; THEN: 2 ; 778
LDC    0            ; NULL literal ; 779
CONS                 ; 780
JOIN                 ; 781
LD     0 0          ; ELSE: 2 ; 782
LD     0 0          ; var n ; 783
LDC    1            ; just constant from code ; 784
SUB                  ; 785
LDF    773          ;  @range_n ; 786
AP     1             ; 787
CONS                 ; 788
JOIN                 ; 789
LDC    1            ;  <== sorted_node_new  [int key, T val, int lev, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) @src/app/SortedMap.java(40,122) ; 790
LD     0 3          ; var lo ; 791
ATOM                 ; 792
LDC    1            ; for negation ; 793
SUB                  ; 794
SEL    814 817      ; IF? 30 ; 795
ADD                  ; 796
LD     0 4          ; var hi ; 797
ATOM                 ; 798
LDC    1            ; for negation ; 799
SUB                  ; 800
SEL    819 822      ; IF? 31 ; 801
ADD                  ; 802
LD     0 0          ; var key ; 803
LD     0 1          ; var val ; 804
LD     0 2          ; var lev ; 805
LD     0 3          ; var lo ; 806
LD     0 4          ; var hi ; 807
CONS                 ; 808
CONS                 ; 809
CONS                 ; 810
CONS                 ; 811
CONS                 ; 812
RTN                  ; 813
LD     0 3          ; THEN: 30 ; 814
CAR                 ; generateTupleAccess total=6 pos=0 ; 815
JOIN                 ; 816
LDC    0            ; ELSE: 30 ; 817
JOIN                 ; 818
LD     0 4          ; THEN: 31 ; 819
CAR                 ; generateTupleAccess total=6 pos=0 ; 820
JOIN                 ; 821
LDC    0            ; ELSE: 31 ; 822
JOIN                 ; 823
LD     0 0          ;  <== sorted_node_with_lev  [SortedMapNode<T> node, int lev] (as blk) @src/app/SortedMap.java(51,92) ; 824
CDR                 ; generateTupleAccess total=6 pos=1 ; 825
CAR                  ; 826
LD     0 0          ; var node ; 827
CDR                 ; generateTupleAccess total=6 pos=2 ; 828
CDR                  ; 829
CAR                  ; 830
LD     0 1          ; var lev ; 831
LD     0 0          ; var node ; 832
CDR                 ; generateTupleAccess total=6 pos=4 ; 833
CDR                  ; 834
CDR                  ; 835
CDR                  ; 836
CAR                  ; 837
LD     0 0          ; var node ; 838
CDR                 ; generateTupleAccess total=6 pos=5 ; 839
CDR                  ; 840
CDR                  ; 841
CDR                  ; 842
CDR                  ; 843
LDF    790          ;  @sorted_node_new ; 844
AP     5             ; 845
RTN                  ; 846
LD     0 0          ;  <== sorted_node_with_lo_hi  [SortedMapNode<T> node, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) @src/app/SortedMap.java(56,127) ; 847
CDR                 ; generateTupleAccess total=6 pos=1 ; 848
CAR                  ; 849
LD     0 0          ; var node ; 850
CDR                 ; generateTupleAccess total=6 pos=2 ; 851
CDR                  ; 852
CAR                  ; 853
LD     0 0          ; var node ; 854
CDR                 ; generateTupleAccess total=6 pos=3 ; 855
CDR                  ; 856
CDR                  ; 857
CAR                  ; 858
LD     0 1          ; var lo ; 859
LD     0 2          ; var hi ; 860
LDF    790          ;  @sorted_node_new ; 861
AP     5             ; 862
RTN                  ; 863
LD     0 0          ;  <== sorted_node_with_lo  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) @src/app/SortedMap.java(61,103) ; 864
LD     0 1          ; var lo ; 865
LD     0 0          ; var node ; 866
CDR                 ; generateTupleAccess total=6 pos=5 ; 867
CDR                  ; 868
CDR                  ; 869
CDR                  ; 870
CDR                  ; 871
LDF    847          ;  @sorted_node_with_lo_hi ; 872
AP     3             ; 873
RTN                  ; 874
LD     0 0          ;  <== sorted_node_with_hi  [SortedMapNode<T> node, SortedMapNode<T> hi] (as blk) @src/app/SortedMap.java(66,103) ; 875
LD     0 0          ; var node ; 876
CDR                 ; generateTupleAccess total=6 pos=4 ; 877
CDR                  ; 878
CDR                  ; 879
CDR                  ; 880
CAR                  ; 881
LD     0 1          ; var hi ; 882
LDF    847          ;  @sorted_node_with_lo_hi ; 883
AP     3             ; 884
RTN                  ; 885
LD     0 0          ;  <== sorted_node_has  [SortedMapNode<T> node, int key] (as blk) @src/app/SortedMap.java(74,74) ; 886
ATOM                 ; 887
SEL    890 892      ; IF? 32 ; 888
RTN                  ; 889
LDC    0            ; THEN: 32 ; 890
JOIN                 ; 891
LD     0 1          ; ELSE: 32 ; 892
LD     0 0          ; var node ; 893
CDR                 ; generateTupleAccess total=6 pos=1 ; 894
CAR                  ; 895
CEQ                  ; 896
SEL    899 901      ; IF? 99 ; 897
JOIN                 ; 898
LDC    1            ; THEN: 99 ; 899
JOIN                 ; 900
LD     0 0          ; ELSE: 99 ; 901
CDR                 ; generateTupleAccess total=6 pos=1 ; 902
CAR                  ; 903
LD     0 1          ; var key ; 904
CGT                  ; 905
SEL    911 918      ; IF? 100 ; 906
LD     0 1          ; var key ; 907
LDF    886          ;  @sorted_node_has ; 908
AP     2             ; 909
JOIN                 ; 910
LD     0 0          ; THEN: 100 ; 911
CDR                 ; generateTupleAccess total=6 pos=4 ; 912
CDR                  ; 913
CDR                  ; 914
CDR                  ; 915
CAR                  ; 916
JOIN                 ; 917
LD     0 0          ; ELSE: 100 ; 918
CDR                 ; generateTupleAccess total=6 pos=5 ; 919
CDR                  ; 920
CDR                  ; 921
CDR                  ; 922
CDR                  ; 923
JOIN                 ; 924
LD     0 0          ;  <== sorted_node_get  [SortedMapNode<T> node, int key, T def] (as blk) @src/app/SortedMap.java(79,79) ; 925
ATOM                 ; 926
SEL    929 931      ; IF? 33 ; 927
RTN                  ; 928
LD     0 2          ; THEN: 33 ; 929
JOIN                 ; 930
LD     0 1          ; ELSE: 33 ; 931
LD     0 0          ; var node ; 932
CDR                 ; generateTupleAccess total=6 pos=1 ; 933
CAR                  ; 934
CEQ                  ; 935
SEL    938 943      ; IF? 101 ; 936
JOIN                 ; 937
LD     0 0          ; THEN: 101 ; 938
CDR                 ; generateTupleAccess total=6 pos=2 ; 939
CDR                  ; 940
CAR                  ; 941
JOIN                 ; 942
LD     0 0          ; ELSE: 101 ; 943
CDR                 ; generateTupleAccess total=6 pos=1 ; 944
CAR                  ; 945
LD     0 1          ; var key ; 946
CGT                  ; 947
SEL    954 961      ; IF? 102 ; 948
LD     0 1          ; var key ; 949
LD     0 2          ; var def ; 950
LDF    925          ;  @sorted_node_get ; 951
AP     3             ; 952
JOIN                 ; 953
LD     0 0          ; THEN: 102 ; 954
CDR                 ; generateTupleAccess total=6 pos=4 ; 955
CDR                  ; 956
CDR                  ; 957
CDR                  ; 958
CAR                  ; 959
JOIN                 ; 960
LD     0 0          ; ELSE: 102 ; 961
CDR                 ; generateTupleAccess total=6 pos=5 ; 962
CDR                  ; 963
CDR                  ; 964
CDR                  ; 965
CDR                  ; 966
JOIN                 ; 967
LD     0 0          ;  <== sorted_node_put  [SortedMapNode<T> node, int key, T val] (as blk) @src/app/SortedMap.java(84,94) ; 968
ATOM                 ; 969
SEL    972 980      ; IF? 34 ; 970
RTN                  ; 971
LD     0 1          ; THEN: 34 ; 972
LD     0 2          ; var val ; 973
LDC    0            ; just constant from code ; 974
LDC    0            ; NULL literal ; 975
LDC    0            ; NULL literal ; 976
LDF    790          ;  @sorted_node_new ; 977
AP     5             ; 978
JOIN                 ; 979
LD     0 1          ; ELSE: 34 ; 980
LD     0 0          ; var node ; 981
CDR                 ; generateTupleAccess total=6 pos=1 ; 982
CAR                  ; 983
CEQ                  ; 984
SEL    987 995      ; IF? 103 ; 985
JOIN                 ; 986
LD     0 2          ; THEN: 103 ; 987
LD     0 0          ; var node ; 988
CDR                 ; generateTupleAccess total=6 pos=2 ; 989
CDR                  ; 990
CAR                  ; 991
CEQ                  ; 992
SEL    1005 1007    ; IF? 104 ; 993
JOIN                 ; 994
LD     0 0          ; ELSE: 103 ; 995
CDR                 ; generateTupleAccess total=6 pos=1 ; 996
CAR                  ; 997
LD     0 1          ; var key ; 998
CGT                  ; 999
SEL    1029 1044    ; IF? 105 ; 1000
LDC 0               ; local var space ; 1001
LDF    1116         ;  @sorted_node_split ; 1002
AP     2             ; 1003
JOIN                 ; 1004
LD     0 0          ; THEN: 104 ; 1005
JOIN                 ; 1006
LD     0 1          ; ELSE: 104 ; 1007
LD     0 2          ; var val ; 1008
LD     0 0          ; var node ; 1009
CDR                 ; generateTupleAccess total=6 pos=3 ; 1010
CDR                  ; 1011
CDR                  ; 1012
CAR                  ; 1013
LD     0 0          ; var node ; 1014
CDR                 ; generateTupleAccess total=6 pos=4 ; 1015
CDR                  ; 1016
CDR                  ; 1017
CDR                  ; 1018
CAR                  ; 1019
LD     0 0          ; var node ; 1020
CDR                 ; generateTupleAccess total=6 pos=5 ; 1021
CDR                  ; 1022
CDR                  ; 1023
CDR                  ; 1024
CDR                  ; 1025
LDF    790          ;  @sorted_node_new ; 1026
AP     5             ; 1027
JOIN                 ; 1028
LD     0 0          ; THEN: 105 ; 1029
LD     0 0          ; var node ; 1030
CDR                 ; generateTupleAccess total=6 pos=4 ; 1031
CDR                  ; 1032
CDR                  ; 1033
CDR                  ; 1034
CAR                  ; 1035
LD     0 1          ; var key ; 1036
LD     0 2          ; var val ; 1037
LDF    968          ;  @sorted_node_put ; 1038
AP     3             ; 1039
LDC 0               ; local var space ; 1040
LDF    1062         ;  @sorted_node_skew ; 1041
AP     3             ; 1042
JOIN                 ; 1043
LD     0 0          ; ELSE: 105 ; 1044
LD     0 0          ; var node ; 1045
CDR                 ; generateTupleAccess total=6 pos=5 ; 1046
CDR                  ; 1047
CDR                  ; 1048
CDR                  ; 1049
CDR                  ; 1050
LD     0 1          ; var key ; 1051
LD     0 2          ; var val ; 1052
LDF    968          ;  @sorted_node_put ; 1053
AP     3             ; 1054
LDF    875          ;  @sorted_node_with_hi ; 1055
AP     2             ; 1056
LDC    0            ; NULL literal ; 1057
LDC 0               ; local var space ; 1058
LDF    1062         ;  @sorted_node_skew ; 1059
AP     3             ; 1060
JOIN                 ; 1061
LD     0 1          ;  <== sorted_node_skew  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) @src/app/SortedMap.java(94,100) ; 1062
ATOM                 ; 1063
LDC    1            ; for negation ; 1064
SUB                  ; 1065
SEL    1077 1079    ; IF? 35 ; 1066
ST     0 1           ; 1067
LD     0 0          ; var node ; 1068
LD     0 1          ; var lo ; 1069
LDF    864          ;  @sorted_node_with_lo ; 1070
AP     2             ; 1071
ST     0 2           ; 1072
LD     0 1          ; var lo ; 1073
ATOM                 ; 1074
SEL    1086 1088    ; IF? 36 ; 1075
RTN                  ; 1076
LD     0 1          ; THEN: 35 ; 1077
JOIN                 ; 1078
LD     0 0          ; ELSE: 35 ; 1079
CDR                 ; generateTupleAccess total=6 pos=4 ; 1080
CDR                  ; 1081
CDR                  ; 1082
CDR                  ; 1083
CAR                  ; 1084
JOIN                 ; 1085
LD     0 2          ; THEN: 36 ; 1086
JOIN                 ; 1087
LD     0 0          ; ELSE: 36 ; 1088
CDR                 ; generateTupleAccess total=6 pos=3 ; 1089
CDR                  ; 1090
CDR                  ; 1091
CAR                  ; 1092
LD     0 1          ; var lo ; 1093
CDR                 ; generateTupleAccess total=6 pos=3 ; 1094
CDR                  ; 1095
CDR                  ; 1096
CAR                  ; 1097
CGT                  ; 1098
SEL    1101 1103    ; IF? 106 ; 1099
JOIN                 ; 1100
LD     0 2          ; THEN: 106 ; 1101
JOIN                 ; 1102
LD     0 1          ; ELSE: 106 ; 1103
LD     0 0          ; var node ; 1104
LD     0 1          ; var lo ; 1105
CDR                 ; generateTupleAccess total=6 pos=5 ; 1106
CDR                  ; 1107
CDR                  ; 1108
CDR                  ; 1109
CDR                  ; 1110
LDF    864          ;  @sorted_node_with_lo ; 1111
AP     2             ; 1112
LDF    875          ;  @sorted_node_with_hi ; 1113
AP     2             ; 1114
JOIN                 ; 1115
LD     0 0          ;  <== sorted_node_split  [SortedMapNode<T> node] (as blk) @src/app/SortedMap.java(101,80) ; 1116
CDR                 ; generateTupleAccess total=6 pos=5 ; 1117
CDR                  ; 1118
CDR                  ; 1119
CDR                  ; 1120
CDR                  ; 1121
ST     0 1           ; 1122
LD     0 1          ; var hi ; 1123
ATOM                 ; 1124
SEL    1127 1129    ; IF? 37 ; 1125
RTN                  ; 1126
LD     0 0          ; THEN: 37 ; 1127
JOIN                 ; 1128
LD     0 1          ; ELSE: 37 ; 1129
CDR                 ; generateTupleAccess total=6 pos=5 ; 1130
CDR                  ; 1131
CDR                  ; 1132
CDR                  ; 1133
CDR                  ; 1134
ATOM                 ; 1135
SEL    1138 1140    ; IF? 107 ; 1136
JOIN                 ; 1137
LD     0 0          ; THEN: 107 ; 1138
JOIN                 ; 1139
LD     0 0          ; ELSE: 107 ; 1140
CDR                 ; generateTupleAccess total=6 pos=3 ; 1141
CDR                  ; 1142
CDR                  ; 1143
CAR                  ; 1144
LD     0 1          ; var hi ; 1145
CDR                 ; generateTupleAccess total=6 pos=5 ; 1146
CDR                  ; 1147
CDR                  ; 1148
CDR                  ; 1149
CDR                  ; 1150
CDR                 ; generateTupleAccess total=6 pos=3 ; 1151
CDR                  ; 1152
CDR                  ; 1153
CAR                  ; 1154
CGT                  ; 1155
SEL    1158 1160    ; IF? 108 ; 1156
JOIN                 ; 1157
LD     0 0          ; THEN: 108 ; 1158
JOIN                 ; 1159
LD     0 1          ; ELSE: 108 ; 1160
CDR                 ; generateTupleAccess total=6 pos=1 ; 1161
CAR                  ; 1162
LD     0 1          ; var hi ; 1163
CDR                 ; generateTupleAccess total=6 pos=2 ; 1164
CDR                  ; 1165
CAR                  ; 1166
LD     0 1          ; var hi ; 1167
CDR                 ; generateTupleAccess total=6 pos=3 ; 1168
CDR                  ; 1169
CDR                  ; 1170
CAR                  ; 1171
LDC    1            ; just constant from code ; 1172
ADD                  ; 1173
LD     0 0          ; var node ; 1174
LD     0 1          ; var hi ; 1175
CDR                 ; generateTupleAccess total=6 pos=4 ; 1176
CDR                  ; 1177
CDR                  ; 1178
CDR                  ; 1179
CAR                  ; 1180
LDF    875          ;  @sorted_node_with_hi ; 1181
AP     2             ; 1182
LD     0 1          ; var hi ; 1183
CDR                 ; generateTupleAccess total=6 pos=5 ; 1184
CDR                  ; 1185
CDR                  ; 1186
CDR                  ; 1187
CDR                  ; 1188
LDF    790          ;  @sorted_node_new ; 1189
AP     5             ; 1190
JOIN                 ; 1191
LD     0 0          ;  <== sorted_node_walk  [SortedMapNode<T> node, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) @src/app/SortedMap.java(107,114) ; 1192
ATOM                 ; 1193
SEL    1196 1198    ; IF? 38 ; 1194
RTN                  ; 1195
LD     0 1          ; THEN: 38 ; 1196
JOIN                 ; 1197
LD     0 0          ; ELSE: 38 ; 1198
CDR                 ; generateTupleAccess total=6 pos=5 ; 1199
CDR                  ; 1200
CDR                  ; 1201
CDR                  ; 1202
CDR                  ; 1203
ATOM                 ; 1204
LDC    1            ; for negation ; 1205
SUB                  ; 1206
SEL    1209 1239    ; IF? 109 ; 1207
JOIN                 ; 1208
LD     0 0          ; THEN: 109 ; 1209
CDR                 ; generateTupleAccess total=6 pos=5 ; 1210
CDR                  ; 1211
CDR                  ; 1212
CDR                  ; 1213
CDR                  ; 1214
LD     0 0          ; var node ; 1215
CDR                 ; generateTupleAccess total=6 pos=4 ; 1216
CDR                  ; 1217
CDR                  ; 1218
CDR                  ; 1219
CAR                  ; 1220
LD     0 1          ; var acc ; 1221
LD     0 2          ; var fun ; 1222
LDF    1192         ;  @sorted_node_walk ; 1223
AP     3             ; 1224
LD     0 0          ; var node ; 1225
CDR                 ; generateTupleAccess total=6 pos=1 ; 1226
CAR                  ; 1227
LD     0 0          ; var node ; 1228
CDR                 ; generateTupleAccess total=6 pos=2 ; 1229
CDR                  ; 1230
CAR                  ; 1231
CONS                 ; 1232
LD     0 2          ; var fun ; 1233
AP     2             ; 1234
LD     0 2          ; var fun ; 1235
LDF    1192         ;  @sorted_node_walk ; 1236
AP     3             ; 1237
JOIN                 ; 1238
LD     0 0          ; ELSE: 109 ; 1239
CDR                 ; generateTupleAccess total=6 pos=4 ; 1240
CDR                  ; 1241
CDR                  ; 1242
CDR                  ; 1243
CAR                  ; 1244
LD     0 1          ; var acc ; 1245
LD     0 2          ; var fun ; 1246
LDF    1192         ;  @sorted_node_walk ; 1247
AP     3             ; 1248
LD     0 0          ; var node ; 1249
CDR                 ; generateTupleAccess total=6 pos=1 ; 1250
CAR                  ; 1251
LD     0 0          ; var node ; 1252
CDR                 ; generateTupleAccess total=6 pos=2 ; 1253
CDR                  ; 1254
CAR                  ; 1255
CONS                 ; 1256
LD     0 2          ; var fun ; 1257
AP     2             ; 1258
JOIN                 ; 1259
LD     0 0          ;  <== sorted_map_count  [SortedMap<T> m] (as blk) @src/app/SortedMap.java(115,59) ; 1260
CAR                 ; generateTupleAccess total=2 pos=0 ; 1261
ATOM                 ; 1262
LDC    1            ; for negation ; 1263
SUB                  ; 1264
SEL    1267 1271    ; IF? 39 ; 1265
RTN                  ; 1266
LD     0 0          ; THEN: 39 ; 1267
CAR                 ; generateTupleAccess total=2 pos=0 ; 1268
CAR                 ; generateTupleAccess total=6 pos=0 ; 1269
JOIN                 ; 1270
LDC    0            ; ELSE: 39 ; 1271
JOIN                 ; 1272
LD     0 0          ;  <== sorted_map_contains  [SortedMap<T> m, int key] (as blk) @src/app/SortedMap.java(120,71) ; 1273
CAR                 ; generateTupleAccess total=2 pos=0 ; 1274
ATOM                 ; 1275
LDC    1            ; for negation ; 1276
SUB                  ; 1277
SEL    1280 1286    ; IF? 40 ; 1278
RTN                  ; 1279
LD     0 0          ; THEN: 40 ; 1280
CAR                 ; generateTupleAccess total=2 pos=0 ; 1281
LD     0 1          ; var key ; 1282
LDF    886          ;  @sorted_node_has ; 1283
AP     2             ; 1284
JOIN                 ; 1285
LDC    0            ; ELSE: 40 ; 1286
JOIN                 ; 1287
LD     0 0          ;  <== sorted_map_get  [SortedMap<T> m, int key, T def] (as blk) @src/app/SortedMap.java(125,71) ; 1288
CAR                 ; generateTupleAccess total=2 pos=0 ; 1289
ATOM                 ; 1290
LDC    1            ; for negation ; 1291
SUB                  ; 1292
SEL    1295 1302    ; IF? 41 ; 1293
RTN                  ; 1294
LD     0 0          ; THEN: 41 ; 1295
CAR                 ; generateTupleAccess total=2 pos=0 ; 1296
LD     0 1          ; var key ; 1297
LD     0 2          ; var def ; 1298
LDF    925          ;  @sorted_node_get ; 1299
AP     3             ; 1300
JOIN                 ; 1301
LD     0 2          ; ELSE: 41 ; 1302
JOIN                 ; 1303
LD     0 0          ;  <== sorted_map_assoc  [SortedMap<T> m, int key, T val] (as blk) @src/app/SortedMap.java(130,84) ; 1304
CAR                 ; generateTupleAccess total=2 pos=0 ; 1305
LD     0 1          ; var key ; 1306
LD     0 2          ; var val ; 1307
LDF    968          ;  @sorted_node_put ; 1308
AP     3             ; 1309
LDC    0            ; just constant from code ; 1310
CONS                 ; 1311
RTN                  ; 1312
LD     0 1          ;  <== sorted_map_assoc_all  [SortedMap<T> m, ListCons<Tuple<Integer,T>> l] (as blk) @src/app/SortedMap.java(135,103) ; 1313
LD     0 0          ; var m ; 1314
LDF    10492        ;  @lambda_1006 ; 1315
LDF    373          ;  @fold0 ; 1316
AP     3             ; 1317
RTN                  ; 1318
LD     0 0          ;  <== sorted_map_walk  [SortedMap<T> map, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) @src/app/SortedMap.java(142,108) ; 1319
CAR                 ; generateTupleAccess total=2 pos=0 ; 1320
ATOM                 ; 1321
SEL    1324 1326    ; IF? 42 ; 1322
RTN                  ; 1323
LD     0 1          ; THEN: 42 ; 1324
JOIN                 ; 1325
LD     0 0          ; ELSE: 42 ; 1326
CAR                 ; generateTupleAccess total=2 pos=0 ; 1327
LD     0 1          ; var acc ; 1328
LD     0 2          ; var fun ; 1329
LDF    1192         ;  @sorted_node_walk ; 1330
AP     3             ; 1331
JOIN                 ; 1332
LD     0 1          ;  <== ghcstate_read_val  [GHCState state, Cons<Integer,Integer> val_cons] (as blk) @src/app/LambdaGhostEmulator.java(22,89) ; 1333
CAR                  ; 1334
ST     0 2           ; 1335
LD     0 1          ; var val_cons ; 1336
CDR                  ; 1337
ST     0 3           ; 1338
LD     0 2          ; var val_tag ; 1339
LDC    3            ; just constant from code ; 1340
CGT                  ; 1341
SEL    1348 1350     ; 1342
LD     0 2          ; var val_tag ; 1343
LDC    0            ; Named Const = Args.REGISTER ; 1344
CEQ                  ; 1345
SEL    1351 1359    ; IF? 43 ; 1346
RTN                  ; 1347
BRK                 ; branch@1348 ; 1348
JOIN                 ; 1349
JOIN                ; branch@1350 ; 1350
LD     0 0          ; THEN: 43 ; 1351
CDR                 ; generateTupleAccess total=3 pos=1 ; 1352
CAR                  ; 1353
LD     0 3          ; var val ; 1354
LDC    0            ; just constant from code ; 1355
LDF    1288         ;  @sorted_map_get ; 1356
AP     3             ; 1357
JOIN                 ; 1358
LD     0 2          ; ELSE: 43 ; 1359
LDC    1            ; Named Const = Args.REGISTER_INDIRECT ; 1360
CEQ                  ; 1361
SEL    1364 1378    ; IF? 110 ; 1362
JOIN                 ; 1363
LD     0 0          ; THEN: 110 ; 1364
CDR                 ; generateTupleAccess total=3 pos=2 ; 1365
CDR                  ; 1366
LD     0 0          ; var state ; 1367
CDR                 ; generateTupleAccess total=3 pos=1 ; 1368
CAR                  ; 1369
LD     0 3          ; var val ; 1370
LDC    0            ; just constant from code ; 1371
LDF    1288         ;  @sorted_map_get ; 1372
AP     3             ; 1373
LDC    0            ; just constant from code ; 1374
LDF    1288         ;  @sorted_map_get ; 1375
AP     3             ; 1376
JOIN                 ; 1377
LD     0 2          ; ELSE: 110 ; 1378
LDC    2            ; Named Const = Args.CONSTANT ; 1379
CEQ                  ; 1380
SEL    1383 1385    ; IF? 111 ; 1381
JOIN                 ; 1382
LD     0 3          ; THEN: 111 ; 1383
JOIN                 ; 1384
LD     0 0          ; ELSE: 111 ; 1385
CDR                 ; generateTupleAccess total=3 pos=2 ; 1386
CDR                  ; 1387
LD     0 3          ; var val ; 1388
LDC    0            ; just constant from code ; 1389
LDF    1288         ;  @sorted_map_get ; 1390
AP     3             ; 1391
JOIN                 ; 1392
LD     0 1          ;  <== ghcstate_write_val  [GHCState state, Cons arg_cons, Integer val] (as blk) @src/app/LambdaGhostEmulator.java(33,90) ; 1393
CAR                  ; 1394
ST     0 3           ; 1395
LD     0 3          ; var arg_tag ; 1396
LDC    3            ; just constant from code ; 1397
CGT                  ; 1398
SEL    1409 1411     ; 1399
LD     0 3          ; var arg_tag ; 1400
LDC    2            ; just constant from code ; 1401
CEQ                  ; 1402
SEL    1412 1414     ; 1403
LD     0 3          ; var arg_tag ; 1404
LDC    0            ; just constant from code ; 1405
CEQ                  ; 1406
SEL    1415 1431    ; IF? 44 ; 1407
RTN                  ; 1408
BRK                 ; branch@1409 ; 1409
JOIN                 ; 1410
JOIN                ; branch@1411 ; 1411
BRK                 ; branch@1412 ; 1412
JOIN                 ; 1413
JOIN                ; branch@1414 ; 1414
LD     0 0          ; THEN: 44 ; 1415
CAR                 ; generateTupleAccess total=3 pos=0 ; 1416
LD     0 0          ; var state ; 1417
CDR                 ; generateTupleAccess total=3 pos=1 ; 1418
CAR                  ; 1419
LD     0 1          ; var arg_cons ; 1420
CDR                  ; 1421
LD     0 2          ; var val ; 1422
LDF    1304         ;  @sorted_map_assoc ; 1423
AP     3             ; 1424
LD     0 0          ; var state ; 1425
CDR                 ; generateTupleAccess total=3 pos=2 ; 1426
CDR                  ; 1427
CONS                 ; 1428
CONS                 ; 1429
JOIN                 ; 1430
LD     0 3          ; ELSE: 44 ; 1431
LDC    1            ; just constant from code ; 1432
CEQ                  ; 1433
SEL    1436 1458    ; IF? 112 ; 1434
JOIN                 ; 1435
LD     0 0          ; THEN: 112 ; 1436
CAR                 ; generateTupleAccess total=3 pos=0 ; 1437
LD     0 0          ; var state ; 1438
CDR                 ; generateTupleAccess total=3 pos=1 ; 1439
CAR                  ; 1440
LD     0 0          ; var state ; 1441
CDR                 ; generateTupleAccess total=3 pos=1 ; 1442
CAR                  ; 1443
LD     0 1          ; var arg_cons ; 1444
CDR                  ; 1445
LDC    0            ; just constant from code ; 1446
LDF    1288         ;  @sorted_map_get ; 1447
AP     3             ; 1448
LD     0 2          ; var val ; 1449
LDF    1304         ;  @sorted_map_assoc ; 1450
AP     3             ; 1451
LD     0 0          ; var state ; 1452
CDR                 ; generateTupleAccess total=3 pos=2 ; 1453
CDR                  ; 1454
CONS                 ; 1455
CONS                 ; 1456
JOIN                 ; 1457
LD     0 0          ; ELSE: 112 ; 1458
CAR                 ; generateTupleAccess total=3 pos=0 ; 1459
LD     0 0          ; var state ; 1460
CDR                 ; generateTupleAccess total=3 pos=1 ; 1461
CAR                  ; 1462
LD     0 0          ; var state ; 1463
CDR                 ; generateTupleAccess total=3 pos=2 ; 1464
CDR                  ; 1465
LD     0 1          ; var arg_cons ; 1466
CDR                  ; 1467
LD     0 2          ; var val ; 1468
LDF    1304         ;  @sorted_map_assoc ; 1469
AP     3             ; 1470
CONS                 ; 1471
CONS                 ; 1472
JOIN                 ; 1473
LD     0 0          ;  <== ghcstate_assoc  [GHCState state, Cons arg_cons, Cons val_cons] (as blk) @src/app/LambdaGhostEmulator.java(44,88) ; 1474
LD     0 2          ; var val_cons ; 1475
LDC 0               ; local var space ; 1476
LDC 0               ; local var space ; 1477
LDF    1333         ;  @ghcstate_read_val ; 1478
AP     4             ; 1479
ST     0 3           ; 1480
LD     0 0          ; var state ; 1481
LD     0 1          ; var arg_cons ; 1482
LD     0 3          ; var val ; 1483
LDC 0               ; local var space ; 1484
LDF    1393         ;  @ghcstate_write_val ; 1485
AP     4             ; 1486
RTN                  ; 1487
LD     0 0          ;  <== processGhostInfoRequest  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer index, int requestType] (as blk) @src/app/LambdaGhostEmulator.java(50,138) ; 1488
CDR                 ; generateTupleAccess total=4 pos=2 ; 1489
CDR                  ; 1490
CAR                  ; 1491
LD     0 3          ; var index ; 1492
LD     0 1          ; var state ; 1493
CAR                 ; generateTupleAccess total=3 pos=0 ; 1494
LDF    465          ;  @list_item_def ; 1495
AP     3             ; 1496
ST     0 5           ; 1497
LDC    4            ; just constant from code ; 1498
LD     0 4          ; var requestType ; 1499
CEQ                  ; 1500
SEL    1503 1525    ; IF? 45 ; 1501
RTN                  ; 1502
LD     0 5          ; THEN: 45 ; 1503
LD     0 1          ; var state ; 1504
CDR                 ; generateTupleAccess total=3 pos=1 ; 1505
CAR                  ; 1506
LDC    0            ; just constant from code ; 1507
LD     0 2          ; var ghostInfo ; 1508
CAR                 ; generateTupleAccess total=3 pos=0 ; 1509
CAR                 ; generateTupleAccess total=2 pos=0 ; 1510
LDF    1304         ;  @sorted_map_assoc ; 1511
AP     3             ; 1512
LDC    1            ; just constant from code ; 1513
LD     0 2          ; var ghostInfo ; 1514
CAR                 ; generateTupleAccess total=3 pos=0 ; 1515
CDR                 ; generateTupleAccess total=2 pos=1 ; 1516
LDF    1304         ;  @sorted_map_assoc ; 1517
AP     3             ; 1518
LD     0 1          ; var state ; 1519
CDR                 ; generateTupleAccess total=3 pos=2 ; 1520
CDR                  ; 1521
CONS                 ; 1522
CONS                 ; 1523
JOIN                 ; 1524
LDC    5            ; ELSE: 45 ; 1525
LD     0 4          ; var requestType ; 1526
CEQ                  ; 1527
SEL    1530 1554    ; IF? 113 ; 1528
JOIN                 ; 1529
LD     0 5          ; THEN: 113 ; 1530
LD     0 1          ; var state ; 1531
CDR                 ; generateTupleAccess total=3 pos=1 ; 1532
CAR                  ; 1533
LDC    0            ; just constant from code ; 1534
LD     0 5          ; var gs ; 1535
CDR                 ; generateTupleAccess total=3 pos=1 ; 1536
CAR                  ; 1537
CAR                 ; generateTupleAccess total=2 pos=0 ; 1538
LDF    1304         ;  @sorted_map_assoc ; 1539
AP     3             ; 1540
LDC    1            ; just constant from code ; 1541
LD     0 5          ; var gs ; 1542
CDR                 ; generateTupleAccess total=3 pos=1 ; 1543
CAR                  ; 1544
CDR                 ; generateTupleAccess total=2 pos=1 ; 1545
LDF    1304         ;  @sorted_map_assoc ; 1546
AP     3             ; 1547
LD     0 1          ; var state ; 1548
CDR                 ; generateTupleAccess total=3 pos=2 ; 1549
CDR                  ; 1550
CONS                 ; 1551
CONS                 ; 1552
JOIN                 ; 1553
LD     0 5          ; ELSE: 113 ; 1554
LD     0 1          ; var state ; 1555
CDR                 ; generateTupleAccess total=3 pos=1 ; 1556
CAR                  ; 1557
LDC    0            ; just constant from code ; 1558
LD     0 5          ; var gs ; 1559
CAR                 ; generateTupleAccess total=3 pos=0 ; 1560
LDF    1304         ;  @sorted_map_assoc ; 1561
AP     3             ; 1562
LDC    1            ; just constant from code ; 1563
LD     0 5          ; var gs ; 1564
CDR                 ; generateTupleAccess total=3 pos=2 ; 1565
CDR                  ; 1566
LDF    1304         ;  @sorted_map_assoc ; 1567
AP     3             ; 1568
LD     0 1          ; var state ; 1569
CDR                 ; generateTupleAccess total=3 pos=2 ; 1570
CDR                  ; 1571
CONS                 ; 1572
CONS                 ; 1573
JOIN                 ; 1574
LD     0 1          ;  <== processGhostInt  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer num, Cons arg] (as blk) @src/app/LambdaGhostEmulator.java(59,121) ; 1575
CAR                 ; generateTupleAccess total=3 pos=0 ; 1576
ST     0 5           ; 1577
LD     0 2          ; var ghostInfo ; 1578
CDR                 ; generateTupleAccess total=3 pos=2 ; 1579
CDR                  ; 1580
ST     0 6           ; 1581
LDC    0            ; just constant from code ; 1582
LD     0 3          ; var num ; 1583
CEQ                  ; 1584
SEL    1587 1610    ; IF? 46 ; 1585
RTN                  ; 1586
LD     0 5          ; THEN: 46 ; 1587
CAR                 ; generateTupleAccess total=3 pos=0 ; 1588
LD     0 5          ; var gs ; 1589
CDR                 ; generateTupleAccess total=3 pos=1 ; 1590
CAR                  ; 1591
LD     0 1          ; var state ; 1592
CDR                 ; generateTupleAccess total=3 pos=1 ; 1593
CAR                  ; 1594
LDC    0            ; just constant from code ; 1595
LDC    0            ; just constant from code ; 1596
LDF    1288         ;  @sorted_map_get ; 1597
AP     3             ; 1598
CONS                 ; 1599
CONS                 ; 1600
LD     0 1          ; var state ; 1601
CDR                 ; generateTupleAccess total=3 pos=1 ; 1602
CAR                  ; 1603
LD     0 1          ; var state ; 1604
CDR                 ; generateTupleAccess total=3 pos=2 ; 1605
CDR                  ; 1606
CONS                 ; 1607
CONS                 ; 1608
JOIN                 ; 1609
LDC    1            ; ELSE: 46 ; 1610
LD     0 3          ; var num ; 1611
CEQ                  ; 1612
SEL    1615 1643    ; IF? 114 ; 1613
JOIN                 ; 1614
LD     0 5          ; THEN: 114 ; 1615
LD     0 1          ; var state ; 1616
CDR                 ; generateTupleAccess total=3 pos=1 ; 1617
CAR                  ; 1618
LDC    0            ; just constant from code ; 1619
LD     0 0          ; var world ; 1620
CDR                 ; generateTupleAccess total=4 pos=1 ; 1621
CAR                  ; 1622
CDR                 ; generateTupleAccess total=5 pos=1 ; 1623
CAR                  ; 1624
CAR                 ; generateTupleAccess total=2 pos=0 ; 1625
LDF    1304         ;  @sorted_map_assoc ; 1626
AP     3             ; 1627
LDC    1            ; just constant from code ; 1628
LD     0 0          ; var world ; 1629
CDR                 ; generateTupleAccess total=4 pos=1 ; 1630
CAR                  ; 1631
CDR                 ; generateTupleAccess total=5 pos=1 ; 1632
CAR                  ; 1633
CDR                 ; generateTupleAccess total=2 pos=1 ; 1634
LDF    1304         ;  @sorted_map_assoc ; 1635
AP     3             ; 1636
LD     0 1          ; var state ; 1637
CDR                 ; generateTupleAccess total=3 pos=2 ; 1638
CDR                  ; 1639
CONS                 ; 1640
CONS                 ; 1641
JOIN                 ; 1642
LDC    2            ; ELSE: 114 ; 1643
LD     0 3          ; var num ; 1644
CEQ                  ; 1645
SEL    1648 1676    ; IF? 115 ; 1646
JOIN                 ; 1647
LD     0 5          ; THEN: 115 ; 1648
LD     0 1          ; var state ; 1649
CDR                 ; generateTupleAccess total=3 pos=1 ; 1650
CAR                  ; 1651
LDC    0            ; just constant from code ; 1652
LD     0 0          ; var world ; 1653
CDR                 ; generateTupleAccess total=4 pos=1 ; 1654
CAR                  ; 1655
CDR                 ; generateTupleAccess total=5 pos=1 ; 1656
CAR                  ; 1657
CAR                 ; generateTupleAccess total=2 pos=0 ; 1658
LDF    1304         ;  @sorted_map_assoc ; 1659
AP     3             ; 1660
LDC    1            ; just constant from code ; 1661
LD     0 0          ; var world ; 1662
CDR                 ; generateTupleAccess total=4 pos=1 ; 1663
CAR                  ; 1664
CDR                 ; generateTupleAccess total=5 pos=1 ; 1665
CAR                  ; 1666
CDR                 ; generateTupleAccess total=2 pos=1 ; 1667
LDF    1304         ;  @sorted_map_assoc ; 1668
AP     3             ; 1669
LD     0 1          ; var state ; 1670
CDR                 ; generateTupleAccess total=3 pos=2 ; 1671
CDR                  ; 1672
CONS                 ; 1673
CONS                 ; 1674
JOIN                 ; 1675
LDC    3            ; ELSE: 115 ; 1676
LD     0 3          ; var num ; 1677
CEQ                  ; 1678
SEL    1681 1695    ; IF? 116 ; 1679
JOIN                 ; 1680
LD     0 5          ; THEN: 116 ; 1681
LD     0 1          ; var state ; 1682
CDR                 ; generateTupleAccess total=3 pos=1 ; 1683
CAR                  ; 1684
LDC    0            ; just constant from code ; 1685
LD     0 6          ; var currentGhostIndex ; 1686
LDF    1304         ;  @sorted_map_assoc ; 1687
AP     3             ; 1688
LD     0 1          ; var state ; 1689
CDR                 ; generateTupleAccess total=3 pos=2 ; 1690
CDR                  ; 1691
CONS                 ; 1692
CONS                 ; 1693
JOIN                 ; 1694
LDC    4            ; ELSE: 116 ; 1695
LD     0 3          ; var num ; 1696
CEQ                  ; 1697
SEL    1700 1715    ; IF? 117 ; 1698
JOIN                 ; 1699
LD     0 0          ; THEN: 117 ; 1700
LD     0 1          ; var state ; 1701
LD     0 2          ; var ghostInfo ; 1702
LD     0 1          ; var state ; 1703
CDR                 ; generateTupleAccess total=3 pos=1 ; 1704
CAR                  ; 1705
LDC    0            ; just constant from code ; 1706
LDC    0            ; just constant from code ; 1707
LDF    1288         ;  @sorted_map_get ; 1708
AP     3             ; 1709
LDC    4            ; just constant from code ; 1710
LDC 0               ; local var space ; 1711
LDF    1488         ;  @processGhostInfoRequest ; 1712
AP     6             ; 1713
JOIN                 ; 1714
LDC    5            ; ELSE: 117 ; 1715
LD     0 3          ; var num ; 1716
CEQ                  ; 1717
SEL    1720 1735    ; IF? 118 ; 1718
JOIN                 ; 1719
LD     0 0          ; THEN: 118 ; 1720
LD     0 1          ; var state ; 1721
LD     0 2          ; var ghostInfo ; 1722
LD     0 1          ; var state ; 1723
CDR                 ; generateTupleAccess total=3 pos=1 ; 1724
CAR                  ; 1725
LDC    0            ; just constant from code ; 1726
LDC    0            ; just constant from code ; 1727
LDF    1288         ;  @sorted_map_get ; 1728
AP     3             ; 1729
LDC    5            ; just constant from code ; 1730
LDC 0               ; local var space ; 1731
LDF    1488         ;  @processGhostInfoRequest ; 1732
AP     6             ; 1733
JOIN                 ; 1734
LDC    6            ; ELSE: 118 ; 1735
LD     0 3          ; var num ; 1736
CEQ                  ; 1737
SEL    1740 1755    ; IF? 119 ; 1738
JOIN                 ; 1739
LD     0 0          ; THEN: 119 ; 1740
LD     0 1          ; var state ; 1741
LD     0 2          ; var ghostInfo ; 1742
LD     0 1          ; var state ; 1743
CDR                 ; generateTupleAccess total=3 pos=1 ; 1744
CAR                  ; 1745
LDC    0            ; just constant from code ; 1746
LDC    0            ; just constant from code ; 1747
LDF    1288         ;  @sorted_map_get ; 1748
AP     3             ; 1749
LDC    6            ; just constant from code ; 1750
LDC 0               ; local var space ; 1751
LDF    1488         ;  @processGhostInfoRequest ; 1752
AP     6             ; 1753
JOIN                 ; 1754
LDC    7            ; ELSE: 119 ; 1755
LD     0 3          ; var num ; 1756
CEQ                  ; 1757
SEL    1760 1791    ; IF? 120 ; 1758
JOIN                 ; 1759
LD     0 5          ; THEN: 120 ; 1760
LD     0 1          ; var state ; 1761
CDR                 ; generateTupleAccess total=3 pos=1 ; 1762
CAR                  ; 1763
LDC    0            ; just constant from code ; 1764
LD     0 0          ; var world ; 1765
CAR                 ; generateTupleAccess total=4 pos=0 ; 1766
LD     0 1          ; var state ; 1767
CDR                 ; generateTupleAccess total=3 pos=1 ; 1768
CAR                  ; 1769
LDC    0            ; just constant from code ; 1770
LDC    0            ; just constant from code ; 1771
LDF    1288         ;  @sorted_map_get ; 1772
AP     3             ; 1773
LD     0 1          ; var state ; 1774
CDR                 ; generateTupleAccess total=3 pos=1 ; 1775
CAR                  ; 1776
LDC    1            ; just constant from code ; 1777
LDC    0            ; just constant from code ; 1778
LDF    1288         ;  @sorted_map_get ; 1779
AP     3             ; 1780
LDF    4215         ;  @getMapItem ; 1781
AP     3             ; 1782
LDF    1304         ;  @sorted_map_assoc ; 1783
AP     3             ; 1784
LD     0 1          ; var state ; 1785
CDR                 ; generateTupleAccess total=3 pos=2 ; 1786
CDR                  ; 1787
CONS                 ; 1788
CONS                 ; 1789
JOIN                 ; 1790
LD     0 1          ; ELSE: 120 ; 1791
JOIN                 ; 1792
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) @src/app/LambdaGhostEmulator.java(77,78) ; 1793
LD     0 0          ; var f ; 1794
AP     1             ; 1795
CAR                  ; 1796
ST     0 3           ; 1797
LD     0 2          ; var n ; 1798
LDC    0            ; just constant from code ; 1799
CEQ                  ; 1800
SEL    1803 1807    ; IF? 47 ; 1801
RTN                  ; 1802
LD     0 3          ; THEN: 47 ; 1803
LDC    0            ; NULL literal ; 1804
CONS                 ; 1805
JOIN                 ; 1806
LD     0 3          ; ELSE: 47 ; 1807
LD     0 0          ; var f ; 1808
LD     0 1          ; var a ; 1809
LD     0 0          ; var f ; 1810
AP     1             ; 1811
CDR                  ; 1812
LD     0 2          ; var n ; 1813
LDC    1            ; just constant from code ; 1814
SUB                  ; 1815
LDC 0               ; local var space ; 1816
LDF    745          ;  @produce_n ; 1817
AP     4             ; 1818
CONS                 ; 1819
JOIN                 ; 1820
LDF    10588        ;  <== bit_split  [Integer x] (as blk) @src/app/LambdaGhostEmulator.java(83,57), ALSO: @lambda_1017 ; 1821
LD     0 0          ; var x ; 1822
LDC    7            ; just constant from code ; 1823
LDC 0               ; local var space ; 1824
LDF    745          ;  @produce_n ; 1825
AP     4             ; 1826
RTN                  ; 1827
LD     0 0          ;  <== emulate_bitop  [Integer x, Integer y, Function2<Integer,Integer,Integer> f] (as blk) @src/app/LambdaGhostEmulator.java(88,102) ; 1828
LDF    1821         ;  @bit_split ; 1829
AP     1             ; 1830
ST     0 3           ; 1831
LD     0 1          ; var y ; 1832
LDF    1821         ;  @bit_split ; 1833
AP     1             ; 1834
ST     0 4           ; 1835
LDF    10605        ;  @lambda_1018 ; 1836
LDC    0            ; just constant from code ; 1837
LD     0 2          ; var f ; 1838
LD     0 3          ; var bits_x ; 1839
LD     0 4          ; var bits_y ; 1840
LDF    656          ;  @zip_with ; 1841
AP     3             ; 1842
LDF    35           ;  @foldr ; 1843
AP     3             ; 1844
RTN                  ; 1845
LD     0 0          ;  <== intCompare  [int a, int b] (as blk) @src/app/LambdaGhostEmulator.java(97,47) ; 1846
LD     0 1          ; var b ; 1847
CEQ                  ; 1848
SEL    1851 1853    ; IF? 48 ; 1849
RTN                  ; 1850
LDC    1            ; THEN: 48 ; 1851
JOIN                 ; 1852
LDC    0            ; ELSE: 48 ; 1853
JOIN                 ; 1854
LD     0 0          ;  <== ghcstate_bitop  [GHCState state, Cons arg_cons, Cons val_cons, int type] (as blk) @src/app/LambdaGhostEmulator.java(102,98) ; 1855
LD     0 1          ; var arg_cons ; 1856
LDC 0               ; local var space ; 1857
LDC 0               ; local var space ; 1858
LDF    1333         ;  @ghcstate_read_val ; 1859
AP     4             ; 1860
ST     0 4           ; 1861
LD     0 0          ; var state ; 1862
LD     0 2          ; var val_cons ; 1863
LDC 0               ; local var space ; 1864
LDC 0               ; local var space ; 1865
LDF    1333         ;  @ghcstate_read_val ; 1866
AP     4             ; 1867
ST     0 5           ; 1868
LD     0 4          ; var arg ; 1869
LD     0 5          ; var val ; 1870
LD     0 3          ; var type ; 1871
LDC    7            ; Named Const = GHCOps.AND ; 1872
CEQ                  ; 1873
SEL    1887 1889    ; IF? 49 ; 1874
LDC 0               ; local var space ; 1875
LDC 0               ; local var space ; 1876
LDF    1828         ;  @emulate_bitop ; 1877
AP     5             ; 1878
ST     0 6           ; 1879
LD     0 0          ; var state ; 1880
LD     0 1          ; var arg_cons ; 1881
LD     0 6          ; var result ; 1882
LDC 0               ; local var space ; 1883
LDF    1393         ;  @ghcstate_write_val ; 1884
AP     4             ; 1885
RTN                  ; 1886
LDF    11336        ; THEN: 49, ALSO: @lambda_1064 ; 1887
JOIN                 ; 1888
LD     0 3          ; ELSE: 49 ; 1889
LDC    8            ; Named Const = GHCOps.OR ; 1890
CEQ                  ; 1891
SEL    1894 1896    ; IF? 121 ; 1892
JOIN                 ; 1893
LDF    11340        ; THEN: 121, ALSO: @lambda_1065 ; 1894
JOIN                 ; 1895
LDF    11351        ; ELSE: 121, ALSO: @lambda_1066 ; 1896
JOIN                 ; 1897
LD     0 5          ;  <== runGhostStep  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state, Cons step] (as blk) @src/app/LambdaGhostEmulator.java(113,136) ; 1898
CAR                  ; 1899
ST     0 6           ; 1900
LD     0 5          ; var step ; 1901
CDR                  ; 1902
ST     0 7           ; 1903
LD     0 4          ; var state ; 1904
CAR                 ; generateTupleAccess total=3 pos=0 ; 1905
LD     0 4          ; var state ; 1906
CDR                 ; generateTupleAccess total=3 pos=1 ; 1907
CAR                  ; 1908
LDC    8            ; just constant from code ; 1909
LD     0 4          ; var state ; 1910
CDR                 ; generateTupleAccess total=3 pos=1 ; 1911
CAR                  ; 1912
LDC    8            ; just constant from code ; 1913
LDC    0            ; just constant from code ; 1914
LDF    1288         ;  @sorted_map_get ; 1915
AP     3             ; 1916
LDC    1            ; just constant from code ; 1917
ADD                  ; 1918
LDF    1304         ;  @sorted_map_assoc ; 1919
AP     3             ; 1920
LD     0 4          ; var state ; 1921
CDR                 ; generateTupleAccess total=3 pos=2 ; 1922
CDR                  ; 1923
CONS                 ; 1924
CONS                 ; 1925
ST     0 8           ; 1926
LDC    0            ; Named Const = GHCOps.MOV ; 1927
LD     0 6          ; var opcode ; 1928
CEQ                  ; 1929
SEL    1932 1950    ; IF? 50 ; 1930
RTN                  ; 1931
LD     0 0          ; THEN: 50 ; 1932
LD     0 1          ; var world ; 1933
LD     0 2          ; var ghostInfo ; 1934
LD     0 3          ; var lev ; 1935
LD     0 8          ; var inc_pc ; 1936
LD     0 7          ; var args ; 1937
CAR                  ; 1938
LD     0 7          ; var args ; 1939
CDR                  ; 1940
CAR                  ; 1941
LDC 0               ; local var space ; 1942
LDF    1474         ;  @ghcstate_assoc ; 1943
AP     4             ; 1944
LDC 0               ; local var space ; 1945
LDC 0               ; local var space ; 1946
LDF    2410         ;  @runGhost ; 1947
AP     7             ; 1948
JOIN                 ; 1949
LDC    1            ; ELSE: 50 ; 1950
LD     0 6          ; var opcode ; 1951
CEQ                  ; 1952
SEL    1955 1979    ; IF? 122 ; 1953
JOIN                 ; 1954
LD     0 0          ; THEN: 122 ; 1955
LD     0 1          ; var world ; 1956
LD     0 2          ; var ghostInfo ; 1957
LD     0 3          ; var lev ; 1958
LD     0 8          ; var inc_pc ; 1959
LD     0 7          ; var args ; 1960
CAR                  ; 1961
LD     0 8          ; var inc_pc ; 1962
LD     0 7          ; var args ; 1963
CAR                  ; 1964
LDC 0               ; local var space ; 1965
LDC 0               ; local var space ; 1966
LDF    1333         ;  @ghcstate_read_val ; 1967
AP     4             ; 1968
LDC    1            ; just constant from code ; 1969
ADD                  ; 1970
LDC 0               ; local var space ; 1971
LDF    1393         ;  @ghcstate_write_val ; 1972
AP     4             ; 1973
LDC 0               ; local var space ; 1974
LDC 0               ; local var space ; 1975
LDF    2410         ;  @runGhost ; 1976
AP     7             ; 1977
JOIN                 ; 1978
LDC    2            ; ELSE: 122 ; 1979
LD     0 6          ; var opcode ; 1980
CEQ                  ; 1981
SEL    1984 2008    ; IF? 123 ; 1982
JOIN                 ; 1983
LD     0 0          ; THEN: 123 ; 1984
LD     0 1          ; var world ; 1985
LD     0 2          ; var ghostInfo ; 1986
LD     0 3          ; var lev ; 1987
LD     0 8          ; var inc_pc ; 1988
LD     0 7          ; var args ; 1989
CAR                  ; 1990
LD     0 8          ; var inc_pc ; 1991
LD     0 7          ; var args ; 1992
CAR                  ; 1993
LDC 0               ; local var space ; 1994
LDC 0               ; local var space ; 1995
LDF    1333         ;  @ghcstate_read_val ; 1996
AP     4             ; 1997
LDC    1            ; just constant from code ; 1998
SUB                  ; 1999
LDC 0               ; local var space ; 2000
LDF    1393         ;  @ghcstate_write_val ; 2001
AP     4             ; 2002
LDC 0               ; local var space ; 2003
LDC 0               ; local var space ; 2004
LDF    2410         ;  @runGhost ; 2005
AP     7             ; 2006
JOIN                 ; 2007
LDC    3            ; ELSE: 123 ; 2008
LD     0 6          ; var opcode ; 2009
CEQ                  ; 2010
SEL    2013 2044    ; IF? 124 ; 2011
JOIN                 ; 2012
LD     0 0          ; THEN: 124 ; 2013
LD     0 1          ; var world ; 2014
LD     0 2          ; var ghostInfo ; 2015
LD     0 3          ; var lev ; 2016
LD     0 8          ; var inc_pc ; 2017
LD     0 7          ; var args ; 2018
CAR                  ; 2019
LD     0 8          ; var inc_pc ; 2020
LD     0 7          ; var args ; 2021
CAR                  ; 2022
LDC 0               ; local var space ; 2023
LDC 0               ; local var space ; 2024
LDF    1333         ;  @ghcstate_read_val ; 2025
AP     4             ; 2026
LD     0 8          ; var inc_pc ; 2027
LD     0 7          ; var args ; 2028
CDR                  ; 2029
CAR                  ; 2030
LDC 0               ; local var space ; 2031
LDC 0               ; local var space ; 2032
LDF    1333         ;  @ghcstate_read_val ; 2033
AP     4             ; 2034
ADD                  ; 2035
LDC 0               ; local var space ; 2036
LDF    1393         ;  @ghcstate_write_val ; 2037
AP     4             ; 2038
LDC 0               ; local var space ; 2039
LDC 0               ; local var space ; 2040
LDF    2410         ;  @runGhost ; 2041
AP     7             ; 2042
JOIN                 ; 2043
LDC    4            ; ELSE: 124 ; 2044
LD     0 6          ; var opcode ; 2045
CEQ                  ; 2046
SEL    2049 2080    ; IF? 125 ; 2047
JOIN                 ; 2048
LD     0 0          ; THEN: 125 ; 2049
LD     0 1          ; var world ; 2050
LD     0 2          ; var ghostInfo ; 2051
LD     0 3          ; var lev ; 2052
LD     0 8          ; var inc_pc ; 2053
LD     0 7          ; var args ; 2054
CAR                  ; 2055
LD     0 8          ; var inc_pc ; 2056
LD     0 7          ; var args ; 2057
CAR                  ; 2058
LDC 0               ; local var space ; 2059
LDC 0               ; local var space ; 2060
LDF    1333         ;  @ghcstate_read_val ; 2061
AP     4             ; 2062
LD     0 8          ; var inc_pc ; 2063
LD     0 7          ; var args ; 2064
CDR                  ; 2065
CAR                  ; 2066
LDC 0               ; local var space ; 2067
LDC 0               ; local var space ; 2068
LDF    1333         ;  @ghcstate_read_val ; 2069
AP     4             ; 2070
SUB                  ; 2071
LDC 0               ; local var space ; 2072
LDF    1393         ;  @ghcstate_write_val ; 2073
AP     4             ; 2074
LDC 0               ; local var space ; 2075
LDC 0               ; local var space ; 2076
LDF    2410         ;  @runGhost ; 2077
AP     7             ; 2078
JOIN                 ; 2079
LDC    5            ; ELSE: 125 ; 2080
LD     0 6          ; var opcode ; 2081
CEQ                  ; 2082
SEL    2085 2116    ; IF? 126 ; 2083
JOIN                 ; 2084
LD     0 0          ; THEN: 126 ; 2085
LD     0 1          ; var world ; 2086
LD     0 2          ; var ghostInfo ; 2087
LD     0 3          ; var lev ; 2088
LD     0 8          ; var inc_pc ; 2089
LD     0 7          ; var args ; 2090
CAR                  ; 2091
LD     0 8          ; var inc_pc ; 2092
LD     0 7          ; var args ; 2093
CAR                  ; 2094
LDC 0               ; local var space ; 2095
LDC 0               ; local var space ; 2096
LDF    1333         ;  @ghcstate_read_val ; 2097
AP     4             ; 2098
LD     0 8          ; var inc_pc ; 2099
LD     0 7          ; var args ; 2100
CDR                  ; 2101
CAR                  ; 2102
LDC 0               ; local var space ; 2103
LDC 0               ; local var space ; 2104
LDF    1333         ;  @ghcstate_read_val ; 2105
AP     4             ; 2106
MUL                  ; 2107
LDC 0               ; local var space ; 2108
LDF    1393         ;  @ghcstate_write_val ; 2109
AP     4             ; 2110
LDC 0               ; local var space ; 2111
LDC 0               ; local var space ; 2112
LDF    2410         ;  @runGhost ; 2113
AP     7             ; 2114
JOIN                 ; 2115
LDC    6            ; ELSE: 126 ; 2116
LD     0 6          ; var opcode ; 2117
CEQ                  ; 2118
SEL    2121 2152    ; IF? 127 ; 2119
JOIN                 ; 2120
LD     0 0          ; THEN: 127 ; 2121
LD     0 1          ; var world ; 2122
LD     0 2          ; var ghostInfo ; 2123
LD     0 3          ; var lev ; 2124
LD     0 8          ; var inc_pc ; 2125
LD     0 7          ; var args ; 2126
CAR                  ; 2127
LD     0 8          ; var inc_pc ; 2128
LD     0 7          ; var args ; 2129
CAR                  ; 2130
LDC 0               ; local var space ; 2131
LDC 0               ; local var space ; 2132
LDF    1333         ;  @ghcstate_read_val ; 2133
AP     4             ; 2134
LD     0 8          ; var inc_pc ; 2135
LD     0 7          ; var args ; 2136
CDR                  ; 2137
CAR                  ; 2138
LDC 0               ; local var space ; 2139
LDC 0               ; local var space ; 2140
LDF    1333         ;  @ghcstate_read_val ; 2141
AP     4             ; 2142
DIV                  ; 2143
LDC 0               ; local var space ; 2144
LDF    1393         ;  @ghcstate_write_val ; 2145
AP     4             ; 2146
LDC 0               ; local var space ; 2147
LDC 0               ; local var space ; 2148
LDF    2410         ;  @runGhost ; 2149
AP     7             ; 2150
JOIN                 ; 2151
LDC    7            ; ELSE: 127 ; 2152
LD     0 6          ; var opcode ; 2153
CEQ                  ; 2154
SEL    2157 2178    ; IF? 128 ; 2155
JOIN                 ; 2156
LD     0 0          ; THEN: 128 ; 2157
LD     0 1          ; var world ; 2158
LD     0 2          ; var ghostInfo ; 2159
LD     0 3          ; var lev ; 2160
LD     0 8          ; var inc_pc ; 2161
LD     0 7          ; var args ; 2162
CAR                  ; 2163
LD     0 7          ; var args ; 2164
CDR                  ; 2165
CAR                  ; 2166
LDC    7            ; Named Const = GHCOps.AND ; 2167
LDC 0               ; local var space ; 2168
LDC 0               ; local var space ; 2169
LDC 0               ; local var space ; 2170
LDF    1855         ;  @ghcstate_bitop ; 2171
AP     7             ; 2172
LDC 0               ; local var space ; 2173
LDC 0               ; local var space ; 2174
LDF    2410         ;  @runGhost ; 2175
AP     7             ; 2176
JOIN                 ; 2177
LDC    8            ; ELSE: 128 ; 2178
LD     0 6          ; var opcode ; 2179
CEQ                  ; 2180
SEL    2183 2204    ; IF? 129 ; 2181
JOIN                 ; 2182
LD     0 0          ; THEN: 129 ; 2183
LD     0 1          ; var world ; 2184
LD     0 2          ; var ghostInfo ; 2185
LD     0 3          ; var lev ; 2186
LD     0 8          ; var inc_pc ; 2187
LD     0 7          ; var args ; 2188
CAR                  ; 2189
LD     0 7          ; var args ; 2190
CDR                  ; 2191
CAR                  ; 2192
LDC    8            ; Named Const = GHCOps.OR ; 2193
LDC 0               ; local var space ; 2194
LDC 0               ; local var space ; 2195
LDC 0               ; local var space ; 2196
LDF    1855         ;  @ghcstate_bitop ; 2197
AP     7             ; 2198
LDC 0               ; local var space ; 2199
LDC 0               ; local var space ; 2200
LDF    2410         ;  @runGhost ; 2201
AP     7             ; 2202
JOIN                 ; 2203
LDC    9            ; ELSE: 129 ; 2204
LD     0 6          ; var opcode ; 2205
CEQ                  ; 2206
SEL    2209 2230    ; IF? 130 ; 2207
JOIN                 ; 2208
LD     0 0          ; THEN: 130 ; 2209
LD     0 1          ; var world ; 2210
LD     0 2          ; var ghostInfo ; 2211
LD     0 3          ; var lev ; 2212
LD     0 8          ; var inc_pc ; 2213
LD     0 7          ; var args ; 2214
CAR                  ; 2215
LD     0 7          ; var args ; 2216
CDR                  ; 2217
CAR                  ; 2218
LDC    9            ; Named Const = GHCOps.XOR ; 2219
LDC 0               ; local var space ; 2220
LDC 0               ; local var space ; 2221
LDC 0               ; local var space ; 2222
LDF    1855         ;  @ghcstate_bitop ; 2223
AP     7             ; 2224
LDC 0               ; local var space ; 2225
LDC 0               ; local var space ; 2226
LDF    2410         ;  @runGhost ; 2227
AP     7             ; 2228
JOIN                 ; 2229
LDC    10           ; ELSE: 130 ; 2230
LD     0 6          ; var opcode ; 2231
CEQ                  ; 2232
SEL    2235 2262    ; IF? 131 ; 2233
JOIN                 ; 2234
LD     0 0          ; THEN: 131 ; 2235
LD     0 1          ; var world ; 2236
LD     0 2          ; var ghostInfo ; 2237
LD     0 3          ; var lev ; 2238
LD     0 4          ; var state ; 2239
LD     0 7          ; var args ; 2240
CDR                  ; 2241
CDR                  ; 2242
LDC 0               ; local var space ; 2243
LDC 0               ; local var space ; 2244
LDF    1333         ;  @ghcstate_read_val ; 2245
AP     4             ; 2246
LD     0 4          ; var state ; 2247
LD     0 7          ; var args ; 2248
CDR                  ; 2249
CAR                  ; 2250
LDC 0               ; local var space ; 2251
LDC 0               ; local var space ; 2252
LDF    1333         ;  @ghcstate_read_val ; 2253
AP     4             ; 2254
CGT                  ; 2255
SEL    2267 2283    ; IF? 132 ; 2256
LDC 0               ; local var space ; 2257
LDC 0               ; local var space ; 2258
LDF    2410         ;  @runGhost ; 2259
AP     7             ; 2260
JOIN                 ; 2261
LDC    11           ; ELSE: 131 ; 2262
LD     0 6          ; var opcode ; 2263
CEQ                  ; 2264
SEL    2285 2312    ; IF? 133 ; 2265
JOIN                 ; 2266
LD     0 4          ; THEN: 132 ; 2267
CAR                 ; generateTupleAccess total=3 pos=0 ; 2268
LD     0 4          ; var state ; 2269
CDR                 ; generateTupleAccess total=3 pos=1 ; 2270
CAR                  ; 2271
LDC    8            ; just constant from code ; 2272
LD     0 7          ; var args ; 2273
CAR                  ; 2274
LDF    1304         ;  @sorted_map_assoc ; 2275
AP     3             ; 2276
LD     0 4          ; var state ; 2277
CDR                 ; generateTupleAccess total=3 pos=2 ; 2278
CDR                  ; 2279
CONS                 ; 2280
CONS                 ; 2281
JOIN                 ; 2282
LD     0 4          ; ELSE: 132 ; 2283
JOIN                 ; 2284
LD     0 0          ; THEN: 133 ; 2285
LD     0 1          ; var world ; 2286
LD     0 2          ; var ghostInfo ; 2287
LD     0 3          ; var lev ; 2288
LD     0 4          ; var state ; 2289
LD     0 7          ; var args ; 2290
CDR                  ; 2291
CAR                  ; 2292
LDC 0               ; local var space ; 2293
LDC 0               ; local var space ; 2294
LDF    1333         ;  @ghcstate_read_val ; 2295
AP     4             ; 2296
LD     0 4          ; var state ; 2297
LD     0 7          ; var args ; 2298
CDR                  ; 2299
CDR                  ; 2300
LDC 0               ; local var space ; 2301
LDC 0               ; local var space ; 2302
LDF    1333         ;  @ghcstate_read_val ; 2303
AP     4             ; 2304
CEQ                  ; 2305
SEL    2317 2333    ; IF? 134 ; 2306
LDC 0               ; local var space ; 2307
LDC 0               ; local var space ; 2308
LDF    2410         ;  @runGhost ; 2309
AP     7             ; 2310
JOIN                 ; 2311
LDC    12           ; ELSE: 133 ; 2312
LD     0 6          ; var opcode ; 2313
CEQ                  ; 2314
SEL    2335 2362    ; IF? 135 ; 2315
JOIN                 ; 2316
LD     0 4          ; THEN: 134 ; 2317
CAR                 ; generateTupleAccess total=3 pos=0 ; 2318
LD     0 4          ; var state ; 2319
CDR                 ; generateTupleAccess total=3 pos=1 ; 2320
CAR                  ; 2321
LDC    8            ; just constant from code ; 2322
LD     0 7          ; var args ; 2323
CAR                  ; 2324
LDF    1304         ;  @sorted_map_assoc ; 2325
AP     3             ; 2326
LD     0 4          ; var state ; 2327
CDR                 ; generateTupleAccess total=3 pos=2 ; 2328
CDR                  ; 2329
CONS                 ; 2330
CONS                 ; 2331
JOIN                 ; 2332
LD     0 4          ; ELSE: 134 ; 2333
JOIN                 ; 2334
LD     0 0          ; THEN: 135 ; 2335
LD     0 1          ; var world ; 2336
LD     0 2          ; var ghostInfo ; 2337
LD     0 3          ; var lev ; 2338
LD     0 4          ; var state ; 2339
LD     0 7          ; var args ; 2340
CDR                  ; 2341
CAR                  ; 2342
LDC 0               ; local var space ; 2343
LDC 0               ; local var space ; 2344
LDF    1333         ;  @ghcstate_read_val ; 2345
AP     4             ; 2346
LD     0 4          ; var state ; 2347
LD     0 7          ; var args ; 2348
CDR                  ; 2349
CDR                  ; 2350
LDC 0               ; local var space ; 2351
LDC 0               ; local var space ; 2352
LDF    1333         ;  @ghcstate_read_val ; 2353
AP     4             ; 2354
CGT                  ; 2355
SEL    2367 2383    ; IF? 136 ; 2356
LDC 0               ; local var space ; 2357
LDC 0               ; local var space ; 2358
LDF    2410         ;  @runGhost ; 2359
AP     7             ; 2360
JOIN                 ; 2361
LDC    13           ; ELSE: 135 ; 2362
LD     0 6          ; var opcode ; 2363
CEQ                  ; 2364
SEL    2385 2405    ; IF? 137 ; 2365
JOIN                 ; 2366
LD     0 4          ; THEN: 136 ; 2367
CAR                 ; generateTupleAccess total=3 pos=0 ; 2368
LD     0 4          ; var state ; 2369
CDR                 ; generateTupleAccess total=3 pos=1 ; 2370
CAR                  ; 2371
LDC    8            ; just constant from code ; 2372
LD     0 7          ; var args ; 2373
CAR                  ; 2374
LDF    1304         ;  @sorted_map_assoc ; 2375
AP     3             ; 2376
LD     0 4          ; var state ; 2377
CDR                 ; generateTupleAccess total=3 pos=2 ; 2378
CDR                  ; 2379
CONS                 ; 2380
CONS                 ; 2381
JOIN                 ; 2382
LD     0 4          ; ELSE: 136 ; 2383
JOIN                 ; 2384
LD     0 0          ; THEN: 137 ; 2385
LD     0 1          ; var world ; 2386
LD     0 2          ; var ghostInfo ; 2387
LD     0 3          ; var lev ; 2388
LD     0 1          ; var world ; 2389
LD     0 8          ; var inc_pc ; 2390
LD     0 2          ; var ghostInfo ; 2391
LD     0 7          ; var args ; 2392
CAR                  ; 2393
LD     0 7          ; var args ; 2394
CDR                  ; 2395
LDC 0               ; local var space ; 2396
LDC 0               ; local var space ; 2397
LDF    1575         ;  @processGhostInt ; 2398
AP     7             ; 2399
LDC 0               ; local var space ; 2400
LDC 0               ; local var space ; 2401
LDF    2410         ;  @runGhost ; 2402
AP     7             ; 2403
JOIN                 ; 2404
LD     0 4          ; ELSE: 137 ; 2405
CAR                 ; generateTupleAccess total=3 pos=0 ; 2406
CDR                 ; generateTupleAccess total=3 pos=2 ; 2407
CDR                  ; 2408
JOIN                 ; 2409
LD     0 4          ;  <== runGhost  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state] (as blk) @src/app/LambdaGhostEmulator.java(145,121) ; 2410
CDR                 ; generateTupleAccess total=3 pos=1 ; 2411
CAR                  ; 2412
LDC    8            ; just constant from code ; 2413
LDC    0            ; just constant from code ; 2414
LDF    1288         ;  @sorted_map_get ; 2415
AP     3             ; 2416
ST     0 5           ; 2417
LD     0 0          ; var prog ; 2418
LD     0 5          ; var pc ; 2419
LDC    0            ; NULL literal ; 2420
LDF    1288         ;  @sorted_map_get ; 2421
AP     3             ; 2422
ST     0 6           ; 2423
LD     0 6          ; var step ; 2424
ATOM                 ; 2425
SEL    2428 2433    ; IF? 51 ; 2426
RTN                  ; 2427
LD     0 4          ; THEN: 51 ; 2428
CAR                 ; generateTupleAccess total=3 pos=0 ; 2429
CDR                 ; generateTupleAccess total=3 pos=2 ; 2430
CDR                  ; 2431
JOIN                 ; 2432
LD     0 3          ; ELSE: 51 ; 2433
LDC    1023         ; just constant from code ; 2434
CGT                  ; 2435
SEL    2438 2443    ; IF? 138 ; 2436
JOIN                 ; 2437
LD     0 4          ; THEN: 138 ; 2438
CAR                 ; generateTupleAccess total=3 pos=0 ; 2439
CDR                 ; generateTupleAccess total=3 pos=2 ; 2440
CDR                  ; 2441
JOIN                 ; 2442
LD     0 0          ; ELSE: 138 ; 2443
LD     0 1          ; var world ; 2444
LD     0 2          ; var ghostInfo ; 2445
LD     0 3          ; var lev ; 2446
LDC    1            ; just constant from code ; 2447
ADD                  ; 2448
LD     0 4          ; var state ; 2449
LD     0 6          ; var step ; 2450
LDC 0               ; local var space ; 2451
LDC 0               ; local var space ; 2452
LDC 0               ; local var space ; 2453
LDF    1898         ;  @runGhostStep ; 2454
AP     9             ; 2455
JOIN                 ; 2456
LD     0 1          ;  <== getGhostDirection  [WorldState world, GhostInfo ghostInfo] (as blk) @src/app/LambdaGhostEmulator.java(153,83) ; 2457
CDR                 ; generateTupleAccess total=3 pos=1 ; 2458
CAR                  ; 2459
LDC    0            ; just constant from code ; 2460
LDC    0            ; NULL literal ; 2461
LDC    0            ; just constant from code ; 2462
CONS                 ; 2463
CONS                 ; 2464
LDF    10611        ;  @lambda_1019 ; 2465
LDF    373          ;  @fold0 ; 2466
AP     3             ; 2467
ST     0 2           ; 2468
LD     0 0          ; var world ; 2469
CDR                 ; generateTupleAccess total=4 pos=2 ; 2470
CDR                  ; 2471
CAR                  ; 2472
CAR                  ; 2473
ST     0 3           ; 2474
LD     0 2          ; var prog ; 2475
CDR                 ; generateTupleAccess total=2 pos=1 ; 2476
LD     0 0          ; var world ; 2477
LD     0 1          ; var ghostInfo ; 2478
LDC    0            ; just constant from code ; 2479
LD     0 3          ; var ghostState ; 2480
LDC    0            ; NULL literal ; 2481
LDC    0            ; just constant from code ; 2482
CONS                 ; 2483
LDC    0            ; NULL literal ; 2484
LDC    0            ; just constant from code ; 2485
CONS                 ; 2486
CONS                 ; 2487
CONS                 ; 2488
LDC 0               ; local var space ; 2489
LDC 0               ; local var space ; 2490
LDF    2410         ;  @runGhost ; 2491
AP     7             ; 2492
RTN                  ; 2493
LD     0 0          ;  <== entryFactual  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) @src/app/Sample1.java(57,143) ; 2494
LD     0 1          ; var ghostSpecs ; 2495
LDC 0               ; local var space ; 2496
LDF    3479         ;  @createInitialState ; 2497
AP     3             ; 2498
ST     0 2           ; 2499
LD     0 2          ; var initialState ; 2500
CAR                 ; generateTupleAccess total=4 pos=0 ; 2501
CDR                 ; generateTupleAccess total=7 pos=5 ; 2502
CDR                  ; 2503
CDR                  ; 2504
CDR                  ; 2505
CDR                  ; 2506
CAR                  ; 2507
LDC    1            ; just constant from code ; 2508
LDF    419          ;  @list_item ; 2509
AP     2             ; 2510
ST     0 3           ; 2511
LDC    0            ; just constant from code ; 2512
LDC    100          ; Named Const = VMExtras.GET_READER ; 2513
LDC    1            ; just constant from code ; 2514
LD     0 3          ; var newRowAccessor ; 2515
AP     2             ; 2516
AP     1             ; 2517
ST     0 4           ; 2518
LD     0 2          ; var initialState ; 2519
LDF    10555        ;  @lambda_1013 ; 2520
CONS                 ; 2521
RTN                  ; 2522
LDF    4480         ;  <== test01  [] (as blk) @src/app/Sample1.java(67,25), ALSO: @array_256 ; 2523
AP     0             ; 2524
ST     0 0           ; 2525
LDC    100          ; Named Const = VMExtras.GET_READER ; 2526
LDC    22           ; just constant from code ; 2527
LD     0 0          ; var accessor ; 2528
AP     2             ; 2529
ST     0 1           ; 2530
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 2531
LDC    22           ; just constant from code ; 2532
LD     0 0          ; var accessor ; 2533
AP     2             ; 2534
ST     0 2           ; 2535
LDC    77           ; just constant from code ; 2536
LD     0 2          ; var writer101 ; 2537
AP     1             ; 2538
ST     0 3           ; 2539
LDC    0            ; just constant from code ; 2540
LD     0 1          ; var reader101 ; 2541
AP     1             ; 2542
ST     0 4           ; 2543
LDC    0            ; just constant from code ; 2544
RTN                  ; 2545
LD     0 0          ;  <== collectEdgePills  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) @src/app/Sample1.java(78,144) ; 2546
CDR                 ; generateTupleAccess total=10 pos=1 ; 2547
CAR                  ; 2548
LDF    10624        ;  @lambda_1020 ; 2549
LDF    336          ;  @dropWhile ; 2550
AP     2             ; 2551
ST     0 3           ; 2552
LD     0 3          ; var pathRemaining ; 2553
LDF    10647        ;  @lambda_1021 ; 2554
LDF    533          ;  @filter ; 2555
AP     2             ; 2556
ST     0 4           ; 2557
LD     0 4          ; var rv ; 2558
RTN                  ; 2559
LD     0 0          ;  <== collectAnyEdgePills  [ParsedEdge edge, ListCons<ListCons<Integer>> map] (as blk) @src/app/Sample1.java(85,134) ; 2560
CDR                 ; generateTupleAccess total=10 pos=1 ; 2561
CAR                  ; 2562
ST     0 2           ; 2563
LD     0 2          ; var edgeAccess ; 2564
LDF    10659        ;  @lambda_1022 ; 2565
LDF    533          ;  @filter ; 2566
AP     2             ; 2567
ST     0 3           ; 2568
LD     0 3          ; var rv ; 2569
RTN                  ; 2570
LD     0 0          ;  <== countAnyEdgePills  [ParsedEdge edge] (as blk) @src/app/Sample1.java(92,55) ; 2571
CDR                 ; generateTupleAccess total=10 pos=1 ; 2572
CAR                  ; 2573
ST     0 1           ; 2574
LD     0 1          ; var edgeAccess ; 2575
LDC    0            ; just constant from code ; 2576
LDF    10671        ;  @lambda_1023 ; 2577
LDF    373          ;  @fold0 ; 2578
AP     3             ; 2579
ST     0 2           ; 2580
LD     0 2          ; var rv ; 2581
RTN                  ; 2582
LD     0 0          ;  <== countMyEdgePills  [ParsedEdge edge, Point start] (as blk) @src/app/Sample1.java(99,67) ; 2583
CDR                 ; generateTupleAccess total=10 pos=1 ; 2584
CAR                  ; 2585
LDF    10685        ;  @lambda_1024 ; 2586
LDF    336          ;  @dropWhile ; 2587
AP     2             ; 2588
ST     0 2           ; 2589
LD     0 2          ; var pathRemaining ; 2590
LDC    0            ; just constant from code ; 2591
LDC    100          ; just constant from code ; 2592
CONS                 ; 2593
LDF    10708        ;  @lambda_1025 ; 2594
LDF    373          ;  @fold0 ; 2595
AP     3             ; 2596
ST     0 3           ; 2597
LD     0 3          ; var rv ; 2598
CAR                 ; generateTupleAccess total=2 pos=0 ; 2599
RTN                  ; 2600
LD     0 1          ;  <== performMove  [AIState aistate, WorldState worldState] (as blk) @src/app/Sample1.java(129,88) ; 2601
CDR                 ; generateTupleAccess total=4 pos=1 ; 2602
CAR                  ; 2603
CDR                 ; generateTupleAccess total=5 pos=1 ; 2604
CAR                  ; 2605
ST     0 2           ; 2606
LD     0 0          ; var aistate ; 2607
CAR                 ; generateTupleAccess total=4 pos=0 ; 2608
CDR                 ; generateTupleAccess total=7 pos=6 ; 2609
CDR                  ; 2610
CDR                  ; 2611
CDR                  ; 2612
CDR                  ; 2613
CDR                  ; 2614
LD     0 2          ; var location ; 2615
LDF    3945         ;  @findEdgesForPoint ; 2616
AP     2             ; 2617
ST     0 3           ; 2618
LD     0 0          ; var aistate ; 2619
CAR                 ; generateTupleAccess total=4 pos=0 ; 2620
CDR                 ; generateTupleAccess total=7 pos=2 ; 2621
CDR                  ; 2622
CAR                  ; 2623
LDF    10736        ;  @lambda_1026 ; 2624
LDF    56           ;  @map ; 2625
AP     2             ; 2626
ST     0 8           ; 2627
LD     0 1          ; var worldState ; 2628
CDR                 ; generateTupleAccess total=4 pos=2 ; 2629
CDR                  ; 2630
CAR                  ; 2631
LDF    10749        ;  @lambda_1027 ; 2632
LDF    56           ;  @map ; 2633
AP     2             ; 2634
ST     0 8           ; 2635
LD     0 3          ; var edgesForPoint ; 2636
LD     0 0          ; var aistate ; 2637
LD     0 1          ; var worldState ; 2638
LDC 0               ; local var space ; 2639
LDC 0               ; local var space ; 2640
LDC 0               ; local var space ; 2641
LDC 0               ; local var space ; 2642
LDC 0               ; local var space ; 2643
LDC 0               ; local var space ; 2644
LDC 0               ; local var space ; 2645
LDF    3357         ;  @findBestDistantEdge ; 2646
AP     10            ; 2647
ST     0 7           ; 2648
LD     0 7          ; var startEdge ; 2649
CDR                 ; generateTupleAccess total=10 pos=1 ; 2650
CAR                  ; 2651
LDF    10800        ;  @lambda_1034 ; 2652
LDF    336          ;  @dropWhile ; 2653
AP     2             ; 2654
ST     0 9           ; 2655
LD     0 9          ; var pathToWalk ; 2656
LDF    528          ;  @length ; 2657
AP     1             ; 2658
LDC    2            ; just constant from code ; 2659
CGTE                 ; 2660
SEL    2703 2720     ; 2661
LD     0 4          ; var retval ; 2662
CDR                 ; generateTupleAccess total=2 pos=1 ; 2663
LDC    3            ; Named Const = Direction.LEFT ; 2664
CEQ                  ; 2665
SEL    2725 2730    ; IF? 52 ; 2666
ST     0 10          ; 2667
LD     0 4          ; var retval ; 2668
CDR                 ; generateTupleAccess total=2 pos=1 ; 2669
LDC    0            ; Named Const = Direction.UP ; 2670
CEQ                  ; 2671
SEL    2736 2741    ; IF? 53 ; 2672
ST     0 11          ; 2673
LD     0 4          ; var retval ; 2674
CAR                 ; generateTupleAccess total=2 pos=0 ; 2675
ST     0 12          ; 2676
LD     0 12         ; var a ; 2677
CAR                 ; generateTupleAccess total=4 pos=0 ; 2678
CDR                 ; generateTupleAccess total=7 pos=5 ; 2679
CDR                  ; 2680
CDR                  ; 2681
CDR                  ; 2682
CDR                  ; 2683
CAR                  ; 2684
LD     0 11         ; var ny ; 2685
LDF    419          ;  @list_item ; 2686
AP     2             ; 2687
ST     0 13          ; 2688
LDC    0            ; just constant from code ; 2689
LDC    100          ; Named Const = VMExtras.GET_READER ; 2690
LD     0 10         ; var nx ; 2691
LD     0 13         ; var newRowAccessor ; 2692
AP     2             ; 2693
AP     1             ; 2694
ST     0 14          ; 2695
LD     0 14         ; var oldValue ; 2696
LDC    2            ; Named Const = CT.PILL ; 2697
CEQ                  ; 2698
SEL    2747 2754    ; IF? 54 ; 2699
ST     0 14          ; 2700
LD     0 4          ; var retval ; 2701
RTN                  ; 2702
LD     0 9          ; branch@2703 ; 2703
CDR                  ; 2704
CAR                  ; 2705
ST     0 5           ; 2706
LD     0 5          ; var newLocation ; 2707
CDR                 ; generateTupleAccess total=2 pos=1 ; 2708
CAR                 ; generateTupleAccess total=2 pos=0 ; 2709
LD     0 2          ; var location ; 2710
CAR                 ; generateTupleAccess total=2 pos=0 ; 2711
CGT                  ; 2712
SEL    2756 2758    ; IF? 139 ; 2713
ST     0 6           ; 2714
LD     0 0          ; var aistate ; 2715
LD     0 6          ; var direction ; 2716
CONS                 ; 2717
ST     0 4           ; 2718
JOIN                 ; 2719
LD     0 0          ; branch@2720 ; 2720
LDC    0            ; Named Const = Direction.UP ; 2721
CONS                 ; 2722
ST     0 4           ; 2723
JOIN                 ; 2724
LD     0 2          ; THEN: 52 ; 2725
CAR                 ; generateTupleAccess total=2 pos=0 ; 2726
LDC    1            ; just constant from code ; 2727
SUB                  ; 2728
JOIN                 ; 2729
LD     0 4          ; ELSE: 52 ; 2730
CDR                 ; generateTupleAccess total=2 pos=1 ; 2731
LDC    1            ; Named Const = Direction.RIGHT ; 2732
CEQ                  ; 2733
SEL    2766 2771    ; IF? 140 ; 2734
JOIN                 ; 2735
LD     0 2          ; THEN: 53 ; 2736
CDR                 ; generateTupleAccess total=2 pos=1 ; 2737
LDC    1            ; just constant from code ; 2738
SUB                  ; 2739
JOIN                 ; 2740
LD     0 4          ; ELSE: 53 ; 2741
CDR                 ; generateTupleAccess total=2 pos=1 ; 2742
LDC    2            ; Named Const = Direction.DOWN ; 2743
CEQ                  ; 2744
SEL    2774 2779    ; IF? 141 ; 2745
JOIN                 ; 2746
LDC    1            ; THEN: 54 ; 2747
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 2748
LD     0 10         ; var nx ; 2749
LD     0 13         ; var newRowAccessor ; 2750
AP     2             ; 2751
AP     1             ; 2752
JOIN                 ; 2753
LD     0 14         ; ELSE: 54 ; 2754
JOIN                 ; 2755
LDC    1            ; THEN: 139 ; 2756
JOIN                 ; 2757
LD     0 2          ; ELSE: 139 ; 2758
CAR                 ; generateTupleAccess total=2 pos=0 ; 2759
LD     0 5          ; var newLocation ; 2760
CDR                 ; generateTupleAccess total=2 pos=1 ; 2761
CAR                 ; generateTupleAccess total=2 pos=0 ; 2762
CGT                  ; 2763
SEL    2782 2784    ; IF? 142 ; 2764
JOIN                 ; 2765
LD     0 2          ; THEN: 140 ; 2766
CAR                 ; generateTupleAccess total=2 pos=0 ; 2767
LDC    1            ; just constant from code ; 2768
ADD                  ; 2769
JOIN                 ; 2770
LD     0 2          ; ELSE: 140 ; 2771
CAR                 ; generateTupleAccess total=2 pos=0 ; 2772
JOIN                 ; 2773
LD     0 2          ; THEN: 141 ; 2774
CDR                 ; generateTupleAccess total=2 pos=1 ; 2775
LDC    1            ; just constant from code ; 2776
ADD                  ; 2777
JOIN                 ; 2778
LD     0 2          ; ELSE: 141 ; 2779
CDR                 ; generateTupleAccess total=2 pos=1 ; 2780
JOIN                 ; 2781
LDC    3            ; THEN: 142 ; 2782
JOIN                 ; 2783
LD     0 2          ; ELSE: 142 ; 2784
CDR                 ; generateTupleAccess total=2 pos=1 ; 2785
LD     0 5          ; var newLocation ; 2786
CDR                 ; generateTupleAccess total=2 pos=1 ; 2787
CDR                 ; generateTupleAccess total=2 pos=1 ; 2788
CGT                  ; 2789
SEL    2792 2794    ; IF? 143 ; 2790
JOIN                 ; 2791
LDC    0            ; THEN: 143 ; 2792
JOIN                 ; 2793
LDC    2            ; ELSE: 143 ; 2794
JOIN                 ; 2795
LD     0 1          ;  <== waveGhostDangerAcc0  [AIState aistate, Queue<EdgeDangerWaveItem> queue] (as blk) @src/app/Sample1.java(178,86) ; 2796
LDF    411          ;  @queue_isempty ; 2797
AP     1             ; 2798
SEL    2801 2805    ; IF? 55 ; 2799
RTN                  ; 2800
LDC    0            ; THEN: 55 ; 2801
LDF    8            ;  @mydebug ; 2802
AP     1             ; 2803
JOIN                 ; 2804
LD     0 0          ; ELSE: 55 ; 2805
LD     0 1          ; var queue ; 2806
LDC 0               ; local var space ; 2807
LDC 0               ; local var space ; 2808
LDC 0               ; local var space ; 2809
LDC 0               ; local var space ; 2810
LDC 0               ; local var space ; 2811
LDC 0               ; local var space ; 2812
LDF    2816         ;  @waveGhostDangerAcc ; 2813
AP     8             ; 2814
JOIN                 ; 2815
LD     0 1          ;  <== waveGhostDangerAcc  [AIState aistate, Queue<EdgeDangerWaveItem> queue] (as blk) @src/app/Sample1.java(185,85) ; 2816
LDC 0               ; local var space ; 2817
LDF    488          ;  @queue_dequeue ; 2818
AP     2             ; 2819
ST     0 2           ; 2820
LD     0 2          ; var smaller ; 2821
CAR                 ; generateTupleAccess total=2 pos=0 ; 2822
ST     0 3           ; 2823
LDC    0            ; NULL literal ; 2824
LD     0 3          ; var a ; 2825
CAR                 ; generateTupleAccess total=3 pos=0 ; 2826
CDR                 ; generateTupleAccess total=10 pos=3 ; 2827
CDR                  ; 2828
CDR                  ; 2829
CAR                  ; 2830
AP     1             ; 2831
ST     0 4           ; 2832
LD     0 4          ; var precedingEdges ; 2833
LDF    10823        ;  @lambda_1035 ; 2834
LDF    533          ;  @filter ; 2835
AP     2             ; 2836
ST     0 4           ; 2837
LD     0 4          ; var precedingEdges ; 2838
LDF    528          ;  @length ; 2839
AP     1             ; 2840
ST     0 5           ; 2841
LD     0 4          ; var precedingEdges ; 2842
LDF    10839        ;  @lambda_1036 ; 2843
LDF    56           ;  @map ; 2844
AP     2             ; 2845
ST     0 6           ; 2846
LD     0 4          ; var precedingEdges ; 2847
LD     0 2          ; var smaller ; 2848
CDR                 ; generateTupleAccess total=2 pos=1 ; 2849
LDF    10850        ;  @lambda_1037 ; 2850
LDF    373          ;  @fold0 ; 2851
AP     3             ; 2852
ST     0 7           ; 2853
LD     0 3          ; var a ; 2854
CDR                 ; generateTupleAccess total=3 pos=1 ; 2855
CAR                  ; 2856
LDC    5            ; just constant from code ; 2857
CGTE                 ; 2858
SEL    2861 2866    ; IF? 56 ; 2859
RTN                  ; 2860
LD     0 0          ; THEN: 56 ; 2861
LD     0 7          ; var newQueue ; 2862
LDF    2796         ;  @waveGhostDangerAcc0 ; 2863
AP     2             ; 2864
JOIN                 ; 2865
LDC    0            ; ELSE: 56 ; 2866
JOIN                 ; 2867
LD     0 0          ;  <== waveGhostDanger  [AIState aistate, EdgeDangerWaveItem item] (as blk) @src/app/Sample1.java(197,74) ; 2868
CAR                 ; generateTupleAccess total=4 pos=0 ; 2869
CDR                 ; generateTupleAccess total=7 pos=2 ; 2870
CDR                  ; 2871
CAR                  ; 2872
LDF    10871        ;  @lambda_1038 ; 2873
LDF    56           ;  @map ; 2874
AP     2             ; 2875
ST     0 2           ; 2876
LDC    1            ; just constant from code ; 2877
LD     0 1          ; var item ; 2878
CAR                 ; generateTupleAccess total=3 pos=0 ; 2879
CDR                 ; generateTupleAccess total=10 pos=4 ; 2880
CDR                  ; 2881
CDR                  ; 2882
CDR                  ; 2883
CAR                  ; 2884
AP     1             ; 2885
ST     0 3           ; 2886
LDF    399          ;  @queue_new ; 2887
AP     0             ; 2888
LD     0 1          ; var item ; 2889
LDF    403          ;  @queue_enqueue ; 2890
AP     2             ; 2891
ST     0 4           ; 2892
LD     0 0          ; var aistate ; 2893
LD     0 4          ; var q ; 2894
LDF    2796         ;  @waveGhostDangerAcc0 ; 2895
AP     2             ; 2896
ST     0 3           ; 2897
LDC    0            ; just constant from code ; 2898
RTN                  ; 2899
LDC    89006000     ;  <== placeGhostDanger  [AIState aistate, GhostState gs] (as blk) @src/app/Sample1.java(206,65) ; 2900
DBUG                 ; 2901
LDC    89001        ; just constant from code ; 2902
DBUG                 ; 2903
LD     0 0          ; var aistate ; 2904
CAR                 ; generateTupleAccess total=4 pos=0 ; 2905
CDR                 ; generateTupleAccess total=7 pos=6 ; 2906
CDR                  ; 2907
CDR                  ; 2908
CDR                  ; 2909
CDR                  ; 2910
CDR                  ; 2911
LD     0 1          ; var gs ; 2912
CDR                 ; generateTupleAccess total=3 pos=1 ; 2913
CAR                  ; 2914
LDF    3945         ;  @findEdgesForPoint ; 2915
AP     2             ; 2916
ST     0 2           ; 2917
LD     0 1          ; var gs ; 2918
CDR                 ; generateTupleAccess total=3 pos=2 ; 2919
CDR                  ; 2920
ST     0 3           ; 2921
LD     0 3          ; var direction ; 2922
LDC    1            ; just constant from code ; 2923
CEQ                  ; 2924
SEL    2963 2970    ; IF? 57 ; 2925
ST     0 4           ; 2926
LD     0 3          ; var direction ; 2927
LDC    0            ; just constant from code ; 2928
CEQ                  ; 2929
SEL    2975 2982    ; IF? 58 ; 2930
ST     0 5           ; 2931
LD     0 4          ; var nx ; 2932
LD     0 5          ; var ny ; 2933
CONS                 ; 2934
ST     0 6           ; 2935
LD     0 2          ; var edgesForPoint ; 2936
LDF    10880        ;  @lambda_1039 ; 2937
LDF    533          ;  @filter ; 2938
AP     2             ; 2939
ST     0 2           ; 2940
LDC    89002        ; just constant from code ; 2941
DBUG                 ; 2942
LDC    89001        ; just constant from code ; 2943
DBUG                 ; 2944
LD     0 2          ; var edgesForPoint ; 2945
LDF    10915        ;  @lambda_1040 ; 2946
LDF    56           ;  @map ; 2947
AP     2             ; 2948
ST     0 7           ; 2949
LDC    89002        ; just constant from code ; 2950
DBUG                 ; 2951
LDC    89001        ; just constant from code ; 2952
DBUG                 ; 2953
LD     0 2          ; var edgesForPoint ; 2954
LDF    10938        ;  @lambda_1041 ; 2955
LDF    56           ;  @map ; 2956
AP     2             ; 2957
ST     0 7           ; 2958
LDC    89002        ; just constant from code ; 2959
DBUG                 ; 2960
LDC    0            ; just constant from code ; 2961
RTN                  ; 2962
LD     0 1          ; THEN: 57 ; 2963
CDR                 ; generateTupleAccess total=3 pos=1 ; 2964
CAR                  ; 2965
CAR                 ; generateTupleAccess total=2 pos=0 ; 2966
LDC    1            ; just constant from code ; 2967
ADD                  ; 2968
JOIN                 ; 2969
LD     0 3          ; ELSE: 57 ; 2970
LDC    3            ; just constant from code ; 2971
CEQ                  ; 2972
SEL    2987 2994    ; IF? 144 ; 2973
JOIN                 ; 2974
LD     0 1          ; THEN: 58 ; 2975
CDR                 ; generateTupleAccess total=3 pos=1 ; 2976
CAR                  ; 2977
CDR                 ; generateTupleAccess total=2 pos=1 ; 2978
LDC    1            ; just constant from code ; 2979
SUB                  ; 2980
JOIN                 ; 2981
LD     0 3          ; ELSE: 58 ; 2982
LDC    2            ; just constant from code ; 2983
CEQ                  ; 2984
SEL    2999 3006    ; IF? 145 ; 2985
JOIN                 ; 2986
LD     0 1          ; THEN: 144 ; 2987
CDR                 ; generateTupleAccess total=3 pos=1 ; 2988
CAR                  ; 2989
CAR                 ; generateTupleAccess total=2 pos=0 ; 2990
LDC    1            ; just constant from code ; 2991
SUB                  ; 2992
JOIN                 ; 2993
LD     0 1          ; ELSE: 144 ; 2994
CDR                 ; generateTupleAccess total=3 pos=1 ; 2995
CAR                  ; 2996
CAR                 ; generateTupleAccess total=2 pos=0 ; 2997
JOIN                 ; 2998
LD     0 1          ; THEN: 145 ; 2999
CDR                 ; generateTupleAccess total=3 pos=1 ; 3000
CAR                  ; 3001
CDR                 ; generateTupleAccess total=2 pos=1 ; 3002
LDC    1            ; just constant from code ; 3003
ADD                  ; 3004
JOIN                 ; 3005
LD     0 1          ; ELSE: 145 ; 3006
CDR                 ; generateTupleAccess total=3 pos=1 ; 3007
CAR                  ; 3008
CDR                 ; generateTupleAccess total=2 pos=1 ; 3009
JOIN                 ; 3010
LDC    100          ;  <== initialDangerPercent  [int count, int remainingPath] (as blk) @src/app/Sample1.java(229,67) ; 3011
LD     0 1          ; var remainingPath ; 3012
LDC    100          ; just constant from code ; 3013
MUL                  ; 3014
LD     0 0          ; var count ; 3015
DIV                  ; 3016
SUB                  ; 3017
ST     0 2           ; 3018
LDC    50           ; just constant from code ; 3019
LD     0 2          ; var completedPercent ; 3020
LDC    350          ; just constant from code ; 3021
MUL                  ; 3022
LDC    100          ; just constant from code ; 3023
DIV                  ; 3024
ADD                  ; 3025
RTN                  ; 3026
LDC    0            ;  <== addEdgeDanger  [ParsedEdge e, int danger] (as blk) @src/app/Sample1.java(235,56) ; 3027
LDC    100          ; Named Const = VMExtras.GET_READER ; 3028
LDC    0            ; just constant from code ; 3029
LD     0 0          ; var e ; 3030
CDR                 ; generateTupleAccess total=10 pos=5 ; 3031
CDR                  ; 3032
CDR                  ; 3033
CDR                  ; 3034
CDR                  ; 3035
CAR                  ; 3036
AP     2             ; 3037
AP     1             ; 3038
ST     0 2           ; 3039
LD     0 2          ; var oldValue ; 3040
LD     0 1          ; var danger ; 3041
ADD                  ; 3042
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 3043
LDC    0            ; just constant from code ; 3044
LD     0 0          ; var e ; 3045
CDR                 ; generateTupleAccess total=10 pos=5 ; 3046
CDR                  ; 3047
CDR                  ; 3048
CDR                  ; 3049
CDR                  ; 3050
CAR                  ; 3051
AP     2             ; 3052
AP     1             ; 3053
ST     0 3           ; 3054
LDC    0            ; just constant from code ; 3055
RTN                  ; 3056
LD     0 0          ;  <== remainingPath  [ParsedEdge pe, Point location] (as blk) @src/app/Sample1.java(242,101) ; 3057
CDR                 ; generateTupleAccess total=10 pos=1 ; 3058
CAR                  ; 3059
LDF    10958        ;  @lambda_1042 ; 3060
LDF    336          ;  @dropWhile ; 3061
AP     2             ; 3062
ST     0 2           ; 3063
LD     0 2          ; var meAndFurther ; 3064
CDR                  ; 3065
ATOM                 ; 3066
SEL    3069 3071    ; IF? 59 ; 3067
RTN                  ; 3068
LD     0 2          ; THEN: 59 ; 3069
JOIN                 ; 3070
LD     0 2          ; ELSE: 59 ; 3071
CDR                  ; 3072
JOIN                 ; 3073
LD     0 2          ;  <== waveFromEdgeToNearestEdges  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) @src/app/Sample1.java(254,36) ; 3074
LDF    411          ;  @queue_isempty ; 3075
AP     1             ; 3076
SEL    3080 3083     ; 3077
LD     0 5          ; var retval ; 3078
RTN                  ; 3079
LD     0 3          ; branch@3080 ; 3080
ST     0 5           ; 3081
JOIN                 ; 3082
LD     0 0          ; branch@3083 ; 3083
LD     0 1          ; var worldState ; 3084
LD     0 2          ; var edgeQueue ; 3085
LD     0 3          ; var acc ; 3086
LD     0 4          ; var edgesWithDotsSoFar ; 3087
LDC 0               ; local var space ; 3088
LDC 0               ; local var space ; 3089
LDC 0               ; local var space ; 3090
LDC 0               ; local var space ; 3091
LDC 0               ; local var space ; 3092
LDC 0               ; local var space ; 3093
LDC 0               ; local var space ; 3094
LDC 0               ; local var space ; 3095
LDC 0               ; local var space ; 3096
LDC 0               ; local var space ; 3097
LDF    3102         ;  @waveFromEdgeToNearestEdges0 ; 3098
AP     15            ; 3099
ST     0 5           ; 3100
JOIN                 ; 3101
LD     0 2          ;  <== waveFromEdgeToNearestEdges0  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) @src/app/Sample1.java(265,210) ; 3102
LDC 0               ; local var space ; 3103
LDF    488          ;  @queue_dequeue ; 3104
AP     2             ; 3105
ST     0 6           ; 3106
LD     0 6          ; var reduced ; 3107
CAR                 ; generateTupleAccess total=2 pos=0 ; 3108
ST     0 7           ; 3109
LD     0 7          ; var lookingEdge ; 3110
CAR                  ; 3111
ST     0 8           ; 3112
LDC    0            ; NULL literal ; 3113
LD     0 8          ; var lookingEdgeHead ; 3114
CDR                 ; generateTupleAccess total=10 pos=6 ; 3115
CDR                  ; 3116
CDR                  ; 3117
CDR                  ; 3118
CDR                  ; 3119
CDR                  ; 3120
CAR                  ; 3121
AP     1             ; 3122
ST     0 9           ; 3123
LD     0 9          ; var following ; 3124
LDF    10971        ;  @lambda_1043 ; 3125
LDF    533          ;  @filter ; 3126
AP     2             ; 3127
ST     0 9           ; 3128
LD     0 9          ; var following ; 3129
LDF    10987        ;  @lambda_1044 ; 3130
LDF    533          ;  @filter ; 3131
AP     2             ; 3132
ST     0 10          ; 3133
LD     0 9          ; var following ; 3134
LDF    11004        ;  @lambda_1045 ; 3135
LDF    56           ;  @map ; 3136
AP     2             ; 3137
ST     0 11          ; 3138
LD     0 11         ; var newRoutes ; 3139
LD     0 6          ; var reduced ; 3140
CDR                 ; generateTupleAccess total=2 pos=1 ; 3141
LDF    11008        ;  @lambda_1046 ; 3142
LDF    373          ;  @fold0 ; 3143
AP     3             ; 3144
ST     0 12          ; 3145
LD     0 11         ; var newRoutes ; 3146
LD     0 3          ; var acc ; 3147
LDF    171          ;  @concat2_set ; 3148
AP     2             ; 3149
ST     0 13          ; 3150
LD     0 3          ; var acc ; 3151
ATOM                 ; 3152
LDC    1            ; for negation ; 3153
SUB                  ; 3154
SEL    3162 3182    ; IF? 60 ; 3155
ST     0 14          ; 3156
LD     0 14         ; var stopCondition ; 3157
SEL    3184 3186    ; IF? 61 ; 3158
ST     0 5           ; 3159
LD     0 5          ; var retval ; 3160
RTN                  ; 3161
LD     0 4          ; THEN: 60 ; 3162
LDC    3            ; just constant from code ; 3163
CGT                  ; 3164
LD     0 3          ; var acc ; 3165
LDF    528          ;  @length ; 3166
AP     1             ; 3167
LDC    15           ; just constant from code ; 3168
CGT                  ; 3169
MUL                  ; 3170
LD     0 13         ; var newAcc ; 3171
CAR                  ; 3172
LDF    528          ;  @length ; 3173
AP     1             ; 3174
LD     0 3          ; var acc ; 3175
CAR                  ; 3176
LDF    528          ;  @length ; 3177
AP     1             ; 3178
CGT                  ; 3179
MUL                  ; 3180
JOIN                 ; 3181
LDC    0            ; ELSE: 60 ; 3182
JOIN                 ; 3183
LD     0 3          ; THEN: 61 ; 3184
JOIN                 ; 3185
LD     0 0          ; ELSE: 61 ; 3186
LD     0 1          ; var worldState ; 3187
LD     0 12         ; var newqq ; 3188
LD     0 13         ; var newAcc ; 3189
LD     0 4          ; var edgesWithDotsSoFar ; 3190
LD     0 10         ; var withDots ; 3191
LDF    528          ;  @length ; 3192
AP     1             ; 3193
ADD                  ; 3194
LDC 0               ; local var space ; 3195
LDF    3074         ;  @waveFromEdgeToNearestEdges ; 3196
AP     6             ; 3197
JOIN                 ; 3198
LD     0 0          ;  <== pointEquals  [Point a, Point b] (as blk) @src/app/Sample1.java(288,50) ; 3199
CAR                 ; generateTupleAccess total=2 pos=0 ; 3200
LD     0 1          ; var b ; 3201
CAR                 ; generateTupleAccess total=2 pos=0 ; 3202
CEQ                  ; 3203
LD     0 0          ; var a ; 3204
CDR                 ; generateTupleAccess total=2 pos=1 ; 3205
LD     0 1          ; var b ; 3206
CDR                 ; generateTupleAccess total=2 pos=1 ; 3207
CEQ                  ; 3208
MUL                  ; 3209
SEL    3212 3214    ; IF? 62 ; 3210
RTN                  ; 3211
LDC    1            ; THEN: 62 ; 3212
JOIN                 ; 3213
LDC    0            ; ELSE: 62 ; 3214
JOIN                 ; 3215
LD     0 0          ;  <== pointEquals2  [Tuple<Function1<Integer,Integer>,Point> p, Tuple<Function1<Integer,Integer>,Point> q] (as blk) @src/app/Sample1.java(293,123) ; 3216
CDR                 ; generateTupleAccess total=2 pos=1 ; 3217
CAR                 ; generateTupleAccess total=2 pos=0 ; 3218
LD     0 1          ; var q ; 3219
CDR                 ; generateTupleAccess total=2 pos=1 ; 3220
CAR                 ; generateTupleAccess total=2 pos=0 ; 3221
CEQ                  ; 3222
LD     0 0          ; var p ; 3223
CDR                 ; generateTupleAccess total=2 pos=1 ; 3224
CDR                 ; generateTupleAccess total=2 pos=1 ; 3225
LD     0 1          ; var q ; 3226
CDR                 ; generateTupleAccess total=2 pos=1 ; 3227
CDR                 ; generateTupleAccess total=2 pos=1 ; 3228
CEQ                  ; 3229
MUL                  ; 3230
SEL    3233 3235    ; IF? 63 ; 3231
RTN                  ; 3232
LDC    1            ; THEN: 63 ; 3233
JOIN                 ; 3234
LDC    0            ; ELSE: 63 ; 3235
JOIN                 ; 3236
LD     0 0          ;  <== pointEquals3  [Tuple<Function1<Integer,Integer>,Point> p, Point q] (as blk) @src/app/Sample1.java(298,87) ; 3237
CDR                 ; generateTupleAccess total=2 pos=1 ; 3238
CAR                 ; generateTupleAccess total=2 pos=0 ; 3239
LD     0 1          ; var q ; 3240
CAR                 ; generateTupleAccess total=2 pos=0 ; 3241
CEQ                  ; 3242
LD     0 0          ; var p ; 3243
CDR                 ; generateTupleAccess total=2 pos=1 ; 3244
CDR                 ; generateTupleAccess total=2 pos=1 ; 3245
LD     0 1          ; var q ; 3246
CDR                 ; generateTupleAccess total=2 pos=1 ; 3247
CEQ                  ; 3248
MUL                  ; 3249
SEL    3252 3254    ; IF? 64 ; 3250
RTN                  ; 3251
LDC    1            ; THEN: 64 ; 3252
JOIN                 ; 3253
LDC    0            ; ELSE: 64 ; 3254
JOIN                 ; 3255
LD     0 0          ;  <== countRoutePills  [ListCons<ParsedEdge> route] (as blk) @src/app/Sample1.java(303,59) ; 3256
LDC    0            ; just constant from code ; 3257
LDF    11013        ;  @lambda_1047 ; 3258
LDF    373          ;  @fold0 ; 3259
AP     3             ; 3260
RTN                  ; 3261
LD     0 0          ;  <== safetyPercent  [ListCons<ParsedEdge> routeDirected] (as blk) @src/app/Sample1.java(308,70) ; 3262
CAR                  ; 3263
ST     0 1           ; 3264
LDC    0            ; just constant from code ; 3265
LDC    100          ; Named Const = VMExtras.GET_READER ; 3266
LDC    0            ; just constant from code ; 3267
LD     0 1          ; var hd ; 3268
CDR                 ; generateTupleAccess total=10 pos=5 ; 3269
CDR                  ; 3270
CDR                  ; 3271
CDR                  ; 3272
CDR                  ; 3273
CAR                  ; 3274
AP     2             ; 3275
AP     1             ; 3276
ST     0 2           ; 3277
LD     0 0          ; var routeDirected ; 3278
CDR                  ; 3279
ST     0 0           ; 3280
LD     0 0          ; var routeDirected ; 3281
ATOM                 ; 3282
LDC    1            ; for negation ; 3283
SUB                  ; 3284
SEL    3306 3330     ; 3285
LD     0 0          ; var routeDirected ; 3286
ATOM                 ; 3287
LDC    1            ; for negation ; 3288
SUB                  ; 3289
SEL    3331 3352     ; 3290
LD     0 2          ; var danger ; 3291
LDC    100          ; just constant from code ; 3292
CGT                  ; 3293
SEL    3353 3355    ; IF? 65 ; 3294
LDC    100          ; just constant from code ; 3295
MUL                  ; 3296
LDC    100          ; just constant from code ; 3297
DIV                  ; 3298
ST     0 2           ; 3299
LDC    100          ; just constant from code ; 3300
LD     0 2          ; var danger ; 3301
SUB                  ; 3302
ST     0 3           ; 3303
LD     0 3          ; var safety ; 3304
RTN                  ; 3305
LD     0 0          ; branch@3306 ; 3306
CAR                  ; 3307
ST     0 1           ; 3308
LD     0 2          ; var danger ; 3309
LDC    0            ; just constant from code ; 3310
LDC    100          ; Named Const = VMExtras.GET_READER ; 3311
LDC    0            ; just constant from code ; 3312
LD     0 1          ; var hd ; 3313
CDR                 ; generateTupleAccess total=10 pos=5 ; 3314
CDR                  ; 3315
CDR                  ; 3316
CDR                  ; 3317
CDR                  ; 3318
CAR                  ; 3319
AP     2             ; 3320
AP     1             ; 3321
LDC    5            ; just constant from code ; 3322
DIV                  ; 3323
ADD                  ; 3324
ST     0 2           ; 3325
LD     0 0          ; var routeDirected ; 3326
CDR                  ; 3327
ST     0 0           ; 3328
JOIN                 ; 3329
JOIN                ; branch@3330 ; 3330
LD     0 0          ; branch@3331 ; 3331
CAR                  ; 3332
ST     0 1           ; 3333
LD     0 2          ; var danger ; 3334
LDC    0            ; just constant from code ; 3335
LDC    100          ; Named Const = VMExtras.GET_READER ; 3336
LDC    0            ; just constant from code ; 3337
LD     0 1          ; var hd ; 3338
CDR                 ; generateTupleAccess total=10 pos=5 ; 3339
CDR                  ; 3340
CDR                  ; 3341
CDR                  ; 3342
CDR                  ; 3343
CAR                  ; 3344
AP     2             ; 3345
AP     1             ; 3346
LDC    15           ; just constant from code ; 3347
DIV                  ; 3348
ADD                  ; 3349
ST     0 2           ; 3350
JOIN                 ; 3351
JOIN                ; branch@3352 ; 3352
LDC    100          ; THEN: 65 ; 3353
JOIN                 ; 3354
LD     0 2          ; ELSE: 65 ; 3355
JOIN                 ; 3356
LDF    399          ;  <== findBestDistantEdge  [ListCons<ParsedEdge> currentEdges, AIState aistate, WorldState worldState] (as blk) @src/app/Sample1.java(329,118), ALSO: @queue_new ; 3357
AP     0             ; 3358
ST     0 3           ; 3359
LDC    89999901     ; just constant from code ; 3360
DBUG                 ; 3361
LDC    89001        ; just constant from code ; 3362
DBUG                 ; 3363
LD     0 0          ; var currentEdges ; 3364
LD     0 3          ; var q ; 3365
LDF    10760        ;  @lambda_1028 ; 3366
LDF    373          ;  @fold0 ; 3367
AP     3             ; 3368
ST     0 3           ; 3369
LDC    89002        ; just constant from code ; 3370
DBUG                 ; 3371
LDC    89001        ; just constant from code ; 3372
DBUG                 ; 3373
LD     0 1          ; var aistate ; 3374
CAR                 ; generateTupleAccess total=4 pos=0 ; 3375
CDR                 ; generateTupleAccess total=7 pos=2 ; 3376
CDR                  ; 3377
CAR                  ; 3378
LDF    10767        ;  @lambda_1029 ; 3379
LDF    56           ;  @map ; 3380
AP     2             ; 3381
ST     0 4           ; 3382
LD     0 0          ; var currentEdges ; 3383
LDF    10776        ;  @lambda_1030 ; 3384
LDF    56           ;  @map ; 3385
AP     2             ; 3386
ST     0 4           ; 3387
LD     0 1          ; var aistate ; 3388
LD     0 2          ; var worldState ; 3389
LD     0 3          ; var q ; 3390
LDC    0            ; NULL literal ; 3391
LDC    0            ; just constant from code ; 3392
LDC 0               ; local var space ; 3393
LDF    3074         ;  @waveFromEdgeToNearestEdges ; 3394
AP     6             ; 3395
ST     0 5           ; 3396
LDC    89002        ; just constant from code ; 3397
DBUG                 ; 3398
LDC    89001        ; just constant from code ; 3399
DBUG                 ; 3400
LD     0 5          ; var dests ; 3401
LDF    10785        ;  @lambda_1031 ; 3402
LDF    56           ;  @map ; 3403
AP     2             ; 3404
ST     0 6           ; 3405
LDC    89002        ; just constant from code ; 3406
DBUG                 ; 3407
LDC    89001        ; just constant from code ; 3408
DBUG                 ; 3409
LD     0 6          ; var directedRoutes ; 3410
LDF    10789        ;  @lambda_1032 ; 3411
LDF    56           ;  @map ; 3412
AP     2             ; 3413
ST     0 7           ; 3414
LDC    89002        ; just constant from code ; 3415
DBUG                 ; 3416
LDC    89001        ; just constant from code ; 3417
DBUG                 ; 3418
LD     0 7          ; var scores ; 3419
LDF    10796        ;  @lambda_1033 ; 3420
LDF    322          ;  @maximum_by ; 3421
AP     2             ; 3422
ST     0 8           ; 3423
LDC    89002        ; just constant from code ; 3424
DBUG                 ; 3425
LD     0 8          ; var winningRoute ; 3426
CAR                 ; generateTupleAccess total=3 pos=0 ; 3427
CAR                  ; 3428
ST     0 9           ; 3429
LD     0 9          ; var myStart ; 3430
RTN                  ; 3431
LD     0 1          ;  <== calculateRouteScore  [WorldState worldState, ListCons<ParsedEdge> r] (as blk) @src/app/Sample1.java(368,152) ; 3432
CAR                  ; 3433
LD     0 0          ; var worldState ; 3434
CDR                 ; generateTupleAccess total=4 pos=1 ; 3435
CAR                  ; 3436
CDR                 ; generateTupleAccess total=5 pos=1 ; 3437
CAR                  ; 3438
LDC 0               ; local var space ; 3439
LDC 0               ; local var space ; 3440
LDF    2583         ;  @countMyEdgePills ; 3441
AP     4             ; 3442
ST     0 2           ; 3443
LD     0 1          ; var r ; 3444
CDR                  ; 3445
LDF    3256         ;  @countRoutePills ; 3446
AP     1             ; 3447
ST     0 3           ; 3448
LD     0 1          ; var r ; 3449
LDC    10           ; just constant from code ; 3450
LD     0 2          ; var integer ; 3451
MUL                  ; 3452
LDC    3            ; just constant from code ; 3453
LD     0 3          ; var i ; 3454
MUL                  ; 3455
ADD                  ; 3456
LD     0 1          ; var r ; 3457
LDC 0               ; local var space ; 3458
LDC 0               ; local var space ; 3459
LDC 0               ; local var space ; 3460
LDF    3262         ;  @safetyPercent ; 3461
AP     4             ; 3462
MUL                  ; 3463
LDC    100          ; just constant from code ; 3464
DIV                  ; 3465
LD     0 2          ; var integer ; 3466
LD     0 3          ; var i ; 3467
LD     0 1          ; var r ; 3468
LDC 0               ; local var space ; 3469
LDC 0               ; local var space ; 3470
LDC 0               ; local var space ; 3471
LDF    3262         ;  @safetyPercent ; 3472
AP     4             ; 3473
CONS                 ; 3474
CONS                 ; 3475
CONS                 ; 3476
CONS                 ; 3477
RTN                  ; 3478
LD     0 0          ;  <== createInitialState  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) @src/app/Sample1.java(515,85) ; 3479
CDR                 ; generateTupleAccess total=4 pos=2 ; 3480
CDR                  ; 3481
CAR                  ; 3482
LDF    528          ;  @length ; 3483
AP     1             ; 3484
LDF    773          ;  @range_n ; 3485
AP     1             ; 3486
ST     0 2           ; 3487
LD     0 0          ; var ws ; 3488
CAR                 ; generateTupleAccess total=4 pos=0 ; 3489
LDF    4139         ;  @parseStaticMap ; 3490
AP     1             ; 3491
LDC    0            ; just constant from code ; 3492
LDC    0            ; just constant from code ; 3493
LDF    10547        ;  @lambda_1012 ; 3494
LD     0 0          ; var ws ; 3495
CDR                 ; generateTupleAccess total=4 pos=2 ; 3496
CDR                  ; 3497
CAR                  ; 3498
LD     0 1          ; var ghostSpecs ; 3499
LD     0 2          ; var ghostNumbers ; 3500
LDF    683          ;  @zip3_with ; 3501
AP     4             ; 3502
CONS                 ; 3503
CONS                 ; 3504
CONS                 ; 3505
RTN                  ; 3506
LD     0 0          ;  <== isWall  [int test] (as blk) @src/app/Sample1.java(522,32) ; 3507
LDC    0            ; Named Const = CT.WALL ; 3508
CEQ                  ; 3509
SEL    3512 3514    ; IF? 66 ; 3510
RTN                  ; 3511
LDC    1            ; THEN: 66 ; 3512
JOIN                 ; 3513
LDC    0            ; ELSE: 66 ; 3514
JOIN                 ; 3515
LDC    77           ;  <== isWalkable  [int test] (as blk) @src/app/Sample1.java(527,43) ; 3516
ST     0 1           ; 3517
LD     0 0          ; var test ; 3518
LDC    0            ; Named Const = CT.WALL ; 3519
CEQ                  ; 3520
SEL    3524 3527     ; 3521
LD     0 1          ; var retval ; 3522
RTN                  ; 3523
LDC    0            ; branch@3524 ; 3524
ST     0 1           ; 3525
JOIN                 ; 3526
LDC    1            ; branch@3527 ; 3527
ST     0 1           ; 3528
JOIN                 ; 3529
LD     0 0          ;  <== isWalkable2  [ListCons<ListCons<Integer>> map, Point p] (as blk) @src/app/Sample1.java(535,76) ; 3530
LD     0 1          ; var p ; 3531
CDR                 ; generateTupleAccess total=2 pos=1 ; 3532
LD     0 1          ; var p ; 3533
CAR                 ; generateTupleAccess total=2 pos=0 ; 3534
LDF    4215         ;  @getMapItem ; 3535
AP     3             ; 3536
LDC 0               ; local var space ; 3537
LDF    3516         ;  @isWalkable ; 3538
AP     2             ; 3539
RTN                  ; 3540
LD     0 0          ;  <== isJunction  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) @src/app/Sample1.java(541,80) ; 3541
LD     0 2          ; var y ; 3542
LDC    1            ; just constant from code ; 3543
SUB                  ; 3544
LD     0 1          ; var x ; 3545
LDF    4215         ;  @getMapItem ; 3546
AP     3             ; 3547
LDC 0               ; local var space ; 3548
LDF    3516         ;  @isWalkable ; 3549
AP     2             ; 3550
ST     0 3           ; 3551
LD     0 0          ; var map ; 3552
LD     0 2          ; var y ; 3553
LDC    1            ; just constant from code ; 3554
ADD                  ; 3555
LD     0 1          ; var x ; 3556
LDF    4215         ;  @getMapItem ; 3557
AP     3             ; 3558
LDC 0               ; local var space ; 3559
LDF    3516         ;  @isWalkable ; 3560
AP     2             ; 3561
ST     0 4           ; 3562
LD     0 0          ; var map ; 3563
LD     0 2          ; var y ; 3564
LD     0 1          ; var x ; 3565
LDC    1            ; just constant from code ; 3566
SUB                  ; 3567
LDF    4215         ;  @getMapItem ; 3568
AP     3             ; 3569
LDC 0               ; local var space ; 3570
LDF    3516         ;  @isWalkable ; 3571
AP     2             ; 3572
ST     0 5           ; 3573
LD     0 0          ; var map ; 3574
LD     0 2          ; var y ; 3575
LD     0 1          ; var x ; 3576
LDC    1            ; just constant from code ; 3577
ADD                  ; 3578
LDF    4215         ;  @getMapItem ; 3579
AP     3             ; 3580
LDC 0               ; local var space ; 3581
LDF    3516         ;  @isWalkable ; 3582
AP     2             ; 3583
ST     0 6           ; 3584
LD     0 3          ; var a1 ; 3585
LD     0 4          ; var a2 ; 3586
ADD                  ; 3587
LD     0 5          ; var a3 ; 3588
ADD                  ; 3589
LD     0 6          ; var a4 ; 3590
ADD                  ; 3591
ST     0 7           ; 3592
LD     0 7          ; var sum ; 3593
LDC    2            ; just constant from code ; 3594
CGT                  ; 3595
LD     0 7          ; var sum ; 3596
LDC    1            ; just constant from code ; 3597
CEQ                  ; 3598
ADD                  ; 3599
SEL    3602 3604    ; IF? 68 ; 3600
RTN                  ; 3601
LDC    1            ; THEN: 68 ; 3602
JOIN                 ; 3603
LDC    0            ; ELSE: 68 ; 3604
JOIN                 ; 3605
LD     0 0          ;  <== isDeadEnd  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) @src/app/Sample1.java(551,79) ; 3606
LD     0 2          ; var y ; 3607
LDC    1            ; just constant from code ; 3608
SUB                  ; 3609
LD     0 1          ; var x ; 3610
LDF    4215         ;  @getMapItem ; 3611
AP     3             ; 3612
LDC 0               ; local var space ; 3613
LDF    3516         ;  @isWalkable ; 3614
AP     2             ; 3615
ST     0 3           ; 3616
LD     0 0          ; var map ; 3617
LD     0 2          ; var y ; 3618
LDC    1            ; just constant from code ; 3619
ADD                  ; 3620
LD     0 1          ; var x ; 3621
LDF    4215         ;  @getMapItem ; 3622
AP     3             ; 3623
LDC 0               ; local var space ; 3624
LDF    3516         ;  @isWalkable ; 3625
AP     2             ; 3626
ST     0 4           ; 3627
LD     0 0          ; var map ; 3628
LD     0 2          ; var y ; 3629
LD     0 1          ; var x ; 3630
LDC    1            ; just constant from code ; 3631
SUB                  ; 3632
LDF    4215         ;  @getMapItem ; 3633
AP     3             ; 3634
LDC 0               ; local var space ; 3635
LDF    3516         ;  @isWalkable ; 3636
AP     2             ; 3637
ST     0 5           ; 3638
LD     0 0          ; var map ; 3639
LD     0 2          ; var y ; 3640
LD     0 1          ; var x ; 3641
LDC    1            ; just constant from code ; 3642
ADD                  ; 3643
LDF    4215         ;  @getMapItem ; 3644
AP     3             ; 3645
LDC 0               ; local var space ; 3646
LDF    3516         ;  @isWalkable ; 3647
AP     2             ; 3648
ST     0 6           ; 3649
LD     0 3          ; var a1 ; 3650
LD     0 4          ; var a2 ; 3651
ADD                  ; 3652
LD     0 5          ; var a3 ; 3653
ADD                  ; 3654
LD     0 6          ; var a4 ; 3655
ADD                  ; 3656
LDC    1            ; just constant from code ; 3657
CEQ                  ; 3658
SEL    3661 3663    ; IF? 69 ; 3659
RTN                  ; 3660
LDC    1            ; THEN: 69 ; 3661
JOIN                 ; 3662
LDC    0            ; ELSE: 69 ; 3663
JOIN                 ; 3664
LD     0 0          ;  <== findNeighbourJunctions  [ListCons<ListCons<Integer>> map, Point somePoint, SortedMap<Point> allJunctions, ListCons<Point> allJunctions2, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) @src/app/Sample1.java(565,104) ; 3665
LDF    399          ;  @queue_new ; 3666
AP     0             ; 3667
LD     0 1          ; var somePoint ; 3668
LDC    0            ; NULL literal ; 3669
CONS                 ; 3670
LDF    403          ;  @queue_enqueue ; 3671
AP     2             ; 3672
LD     0 2          ; var allJunctions ; 3673
LD     0 3          ; var allJunctions2 ; 3674
LDC    0            ; NULL literal ; 3675
LDC    0            ; just constant from code ; 3676
CONS                 ; 3677
LD     0 1          ; var somePoint ; 3678
LDF    3793         ;  @getPointKey ; 3679
AP     1             ; 3680
LD     0 1          ; var somePoint ; 3681
LDF    1304         ;  @sorted_map_assoc ; 3682
AP     3             ; 3683
LDC    0            ; NULL literal ; 3684
LDC 0               ; local var space ; 3685
LDF    3761         ;  @waveFromPointToNearestJunction ; 3686
AP     7             ; 3687
ST     0 5           ; 3688
LD     0 5          ; var allNeighbourJunctionsPaths ; 3689
LDC    0            ; just constant from code ; 3690
LDF    11021        ;  @lambda_1048 ; 3691
LDF    73           ;  @mapi ; 3692
AP     3             ; 3693
RTN                  ; 3694
LD     0 0          ;  <== eraseFunction1  [Function1 f] (as blk) @src/app/Sample1.java(576,50) ; 3695
RTN                  ; 3696
LD     0 0          ;  <== eraseFunction2  [Function2 f] (as blk) @src/app/Sample1.java(581,50) ; 3697
RTN                  ; 3698
LDF    4268         ;  <== makeParsedEdge  [int id, ListCons<Point> p, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) @src/app/Sample1.java(586,143), ALSO: @array_5 ; 3699
AP     0             ; 3700
ST     0 3           ; 3701
LD     0 0          ; var id ; 3702
LD     0 1          ; var p ; 3703
LD     0 2          ; var accessors ; 3704
LDF    3753         ;  @makeEdgeAccess ; 3705
AP     2             ; 3706
LDC    100          ; Named Const = VMExtras.GET_READER ; 3707
LDC    1            ; just constant from code ; 3708
LD     0 3          ; var a5 ; 3709
AP     2             ; 3710
LDF    3695         ;  @eraseFunction1 ; 3711
AP     1             ; 3712
LDC    100          ; Named Const = VMExtras.GET_READER ; 3713
LDC    0            ; just constant from code ; 3714
LD     0 3          ; var a5 ; 3715
AP     2             ; 3716
LDF    3695         ;  @eraseFunction1 ; 3717
AP     1             ; 3718
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 3719
LDC    2            ; just constant from code ; 3720
LD     0 3          ; var a5 ; 3721
AP     2             ; 3722
LDF    3695         ;  @eraseFunction1 ; 3723
AP     1             ; 3724
LDF    4236         ;  @array_1 ; 3725
AP     0             ; 3726
LDF    3697         ;  @eraseFunction2 ; 3727
AP     1             ; 3728
LDC    100          ; Named Const = VMExtras.GET_READER ; 3729
LDC    3            ; just constant from code ; 3730
LD     0 3          ; var a5 ; 3731
AP     2             ; 3732
LDF    3695         ;  @eraseFunction1 ; 3733
AP     1             ; 3734
LD     0 3          ; var a5 ; 3735
LDF    3697         ;  @eraseFunction2 ; 3736
AP     1             ; 3737
LD     0 1          ; var p ; 3738
CAR                  ; 3739
LD     0 1          ; var p ; 3740
LDF    112          ;  @last ; 3741
AP     1             ; 3742
CONS                 ; 3743
CONS                 ; 3744
CONS                 ; 3745
CONS                 ; 3746
CONS                 ; 3747
CONS                 ; 3748
CONS                 ; 3749
CONS                 ; 3750
CONS                 ; 3751
RTN                  ; 3752
LD     0 0          ;  <== makeEdgeAccess  [ListCons<Point> p, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) @src/app/Sample1.java(604,176) ; 3753
LDF    11028        ;  @lambda_1049 ; 3754
LDF    56           ;  @map ; 3755
AP     2             ; 3756
LD     0 0          ; var p ; 3757
LDF    720          ;  @zip ; 3758
AP     2             ; 3759
RTN                  ; 3760
LD     0 1          ;  <== waveFromPointToNearestJunction  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) @src/app/Sample1.java(611,256) ; 3761
LDF    411          ;  @queue_isempty ; 3762
AP     1             ; 3763
SEL    3767 3770     ; 3764
LD     0 6          ; var retval ; 3765
RTN                  ; 3766
LD     0 5          ; branch@3767 ; 3767
ST     0 6           ; 3768
JOIN                 ; 3769
LD     0 0          ; branch@3770 ; 3770
LD     0 1          ; var pointQueue ; 3771
LD     0 2          ; var destinations ; 3772
LD     0 3          ; var destinations2 ; 3773
LD     0 4          ; var visited ; 3774
LD     0 5          ; var acc ; 3775
LDC 0               ; local var space ; 3776
LDC 0               ; local var space ; 3777
LDC 0               ; local var space ; 3778
LDC 0               ; local var space ; 3779
LDC 0               ; local var space ; 3780
LDC 0               ; local var space ; 3781
LDC 0               ; local var space ; 3782
LDC 0               ; local var space ; 3783
LDC 0               ; local var space ; 3784
LDC 0               ; local var space ; 3785
LDC 0               ; local var space ; 3786
LDC 0               ; local var space ; 3787
LDC 0               ; local var space ; 3788
LDF    3806         ;  @waveFromPointToNearestJunction0 ; 3789
AP     19            ; 3790
ST     0 6           ; 3791
JOIN                 ; 3792
LD     0 0          ;  <== getPointKey  [Point pt] (as blk) @src/app/Sample1.java(622,42) ; 3793
CAR                 ; generateTupleAccess total=2 pos=0 ; 3794
LDC    300          ; just constant from code ; 3795
MUL                  ; 3796
LD     0 0          ; var pt ; 3797
CDR                 ; generateTupleAccess total=2 pos=1 ; 3798
ADD                  ; 3799
RTN                  ; 3800
LD     0 0          ;  <== addPointKeyAll  [ListCons<Point> in] (as blk) @src/app/Sample1.java(627,79) ; 3801
LDF    10486        ;  @lambda_1005 ; 3802
LDF    56           ;  @map ; 3803
AP     2             ; 3804
RTN                  ; 3805
LD     0 1          ;  <== waveFromPointToNearestJunction0  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) @src/app/Sample1.java(632,257) ; 3806
LDC 0               ; local var space ; 3807
LDF    488          ;  @queue_dequeue ; 3808
AP     2             ; 3809
ST     0 7           ; 3810
LD     0 7          ; var emptier ; 3811
CAR                 ; generateTupleAccess total=2 pos=0 ; 3812
ST     0 8           ; 3813
LD     0 8          ; var thisRoute ; 3814
CAR                  ; 3815
ST     0 9           ; 3816
LD     0 9          ; var weAreHere ; 3817
CAR                 ; generateTupleAccess total=2 pos=0 ; 3818
LDC    1            ; just constant from code ; 3819
ADD                  ; 3820
LD     0 9          ; var weAreHere ; 3821
CDR                 ; generateTupleAccess total=2 pos=1 ; 3822
CONS                 ; 3823
LD     0 9          ; var weAreHere ; 3824
CAR                 ; generateTupleAccess total=2 pos=0 ; 3825
LDC    1            ; just constant from code ; 3826
SUB                  ; 3827
LD     0 9          ; var weAreHere ; 3828
CDR                 ; generateTupleAccess total=2 pos=1 ; 3829
CONS                 ; 3830
LD     0 9          ; var weAreHere ; 3831
CAR                 ; generateTupleAccess total=2 pos=0 ; 3832
LD     0 9          ; var weAreHere ; 3833
CDR                 ; generateTupleAccess total=2 pos=1 ; 3834
LDC    1            ; just constant from code ; 3835
ADD                  ; 3836
CONS                 ; 3837
LD     0 9          ; var weAreHere ; 3838
CAR                 ; generateTupleAccess total=2 pos=0 ; 3839
LD     0 9          ; var weAreHere ; 3840
CDR                 ; generateTupleAccess total=2 pos=1 ; 3841
LDC    1            ; just constant from code ; 3842
SUB                  ; 3843
CONS                 ; 3844
LDC    0            ; NULL literal ; 3845
CONS                 ; 3846
CONS                 ; 3847
CONS                 ; 3848
CONS                 ; 3849
LDF    3801         ;  @addPointKeyAll ; 3850
AP     1             ; 3851
ST     0 10          ; 3852
LD     0 10         ; var possibleDestinations ; 3853
LDF    11038        ;  @lambda_1050 ; 3854
LDF    533          ;  @filter ; 3855
AP     2             ; 3856
ST     0 11          ; 3857
LD     0 11         ; var exits ; 3858
LDF    11052        ;  @lambda_1051 ; 3859
LDF    533          ;  @filter ; 3860
AP     2             ; 3861
ST     0 12          ; 3862
LD     0 11         ; var exits ; 3863
LDF    11058        ;  @lambda_1052 ; 3864
LDF    533          ;  @filter ; 3865
AP     2             ; 3866
ST     0 13          ; 3867
LDC    0            ; NULL literal ; 3868
LDC    1            ; just constant from code ; 3869
CONS                 ; 3870
LD     0 12         ; var arrivedsList ; 3871
LDF    1313         ;  @sorted_map_assoc_all ; 3872
AP     2             ; 3873
ST     0 14          ; 3874
LD     0 11         ; var exits ; 3875
LDF    11063        ;  @lambda_1053 ; 3876
LDF    533          ;  @filter ; 3877
AP     2             ; 3878
ST     0 15          ; 3879
LD     0 15         ; var continueds ; 3880
LDF    11071        ;  @lambda_1054 ; 3881
LDF    56           ;  @map ; 3882
AP     2             ; 3883
ST     0 16          ; 3884
LD     0 16         ; var exitRoutes ; 3885
LD     0 7          ; var emptier ; 3886
CDR                 ; generateTupleAccess total=2 pos=1 ; 3887
LDF    11076        ;  @lambda_1055 ; 3888
LDF    373          ;  @fold0 ; 3889
AP     3             ; 3890
ST     0 17          ; 3891
LD     0 5          ; var acc ; 3892
LD     0 12         ; var arrivedsList ; 3893
LDF    11081        ;  @lambda_1056 ; 3894
LDF    56           ;  @map ; 3895
AP     2             ; 3896
LDF    171          ;  @concat2_set ; 3897
AP     2             ; 3898
ST     0 18          ; 3899
LD     0 12         ; var arrivedsList ; 3900
LDF    528          ;  @length ; 3901
AP     1             ; 3902
LD     0 13         ; var arrivedsList2 ; 3903
LDF    528          ;  @length ; 3904
AP     1             ; 3905
CEQ                  ; 3906
LDC    1            ; for negation ; 3907
SUB                  ; 3908
SEL    3925 3944     ; 3909
LD     0 0          ; var map ; 3910
LD     0 17         ; var filledQueue ; 3911
LD     0 2          ; var destinations ; 3912
LD     0 3          ; var destinations2 ; 3913
LD     0 4          ; var visited ; 3914
LD     0 11         ; var exits ; 3915
LDF    1313         ;  @sorted_map_assoc_all ; 3916
AP     2             ; 3917
LD     0 18         ; var newacc ; 3918
LDC 0               ; local var space ; 3919
LDF    3761         ;  @waveFromPointToNearestJunction ; 3920
AP     7             ; 3921
ST     0 6           ; 3922
LD     0 6          ; var retval ; 3923
RTN                  ; 3924
LDC    5000000      ; branch@3925 ; 3925
DBUG                 ; 3926
LD     0 2          ; var destinations ; 3927
DBUG                 ; 3928
LD     0 3          ; var destinations2 ; 3929
DBUG                 ; 3930
LD     0 12         ; var arrivedsList ; 3931
DBUG                 ; 3932
LD     0 13         ; var arrivedsList2 ; 3933
DBUG                 ; 3934
LD     0 11         ; var exits ; 3935
DBUG                 ; 3936
BRK                  ; 3937
LD     0 11         ; var exits ; 3938
LDF    11363        ;  @lambda_1067 ; 3939
LDF    533          ;  @filter ; 3940
AP     2             ; 3941
DBUG                 ; 3942
JOIN                 ; 3943
JOIN                ; branch@3944 ; 3944
LD     0 1          ;  <== findEdgesForPoint  [Function1<Point,ListCons<ParsedEdge>> edgesForPoint, Point pos] (as blk) @src/app/Sample1.java(668,115) ; 3945
LD     0 0          ; var edgesForPoint ; 3946
AP     1             ; 3947
RTN                  ; 3948
LD     0 0          ;  <== parseMap  [ListCons<ListCons<Integer>> m] (as blk) @src/app/Sample1.java(674,68) ; 3949
LDF    10451        ;  @lambda_1000 ; 3950
LDF    56           ;  @map ; 3951
AP     2             ; 3952
ST     0 1           ; 3953
LDF    10454        ;  @lambda_1001 ; 3954
LD     0 0          ; var m ; 3955
LD     0 1          ; var accessors ; 3956
LDF    656          ;  @zip_with ; 3957
AP     3             ; 3958
ST     0 2           ; 3959
LD     0 2          ; var mapAccessors ; 3960
LDF    10458        ;  @lambda_1002 ; 3961
LDF    56           ;  @map ; 3962
AP     2             ; 3963
ST     0 3           ; 3964
LD     0 0          ; var m ; 3965
LDC    0            ; just constant from code ; 3966
LDF    10465        ;  @lambda_1003 ; 3967
LDF    73           ;  @mapi ; 3968
AP     3             ; 3969
ST     0 4           ; 3970
LD     0 4          ; var toConcat ; 3971
LDF    105          ;  @concat ; 3972
AP     1             ; 3973
ST     0 5           ; 3974
LD     0 5          ; var walkableList ; 3975
LDF    10473        ;  @lambda_1004 ; 3976
LDF    533          ;  @filter ; 3977
AP     2             ; 3978
ST     0 6           ; 3979
LDC    0            ; NULL literal ; 3980
LDC    0            ; just constant from code ; 3981
CONS                 ; 3982
LD     0 5          ; var walkableList ; 3983
LDF    3801         ;  @addPointKeyAll ; 3984
AP     1             ; 3985
LDF    1313         ;  @sorted_map_assoc_all ; 3986
AP     2             ; 3987
ST     0 7           ; 3988
LDC    0            ; NULL literal ; 3989
LDC    0            ; just constant from code ; 3990
CONS                 ; 3991
LD     0 6          ; var junctionsList ; 3992
LDF    3801         ;  @addPointKeyAll ; 3993
AP     1             ; 3994
LDF    1313         ;  @sorted_map_assoc_all ; 3995
AP     2             ; 3996
ST     0 8           ; 3997
LD     0 6          ; var junctionsList ; 3998
LDF    10500        ;  @lambda_1007 ; 3999
LDF    56           ;  @map ; 4000
AP     2             ; 4001
LDF    105          ;  @concat ; 4002
AP     1             ; 4003
ST     0 9           ; 4004
LD     0 0          ; var m ; 4005
LDF    528          ;  @length ; 4006
AP     1             ; 4007
LDC 0               ; local var space ; 4008
LDC 0               ; local var space ; 4009
LDC 0               ; local var space ; 4010
LDC 0               ; local var space ; 4011
LDC 0               ; local var space ; 4012
LDC 0               ; local var space ; 4013
LDC 0               ; local var space ; 4014
LDF    4378         ;  @emptyEdgesArrayForMap ; 4015
AP     8             ; 4016
ST     0 10          ; 4017
LD     0 9          ; var allParsedEdges ; 4018
LDF    10521        ;  @lambda_1009 ; 4019
LDF    56           ;  @map ; 4020
AP     2             ; 4021
ST     0 11          ; 4022
LD     0 10         ; var edgesForPoint ; 4023
LDF    4376         ;  @toReadOnlyAccessor ; 4024
AP     1             ; 4025
ST     0 12          ; 4026
LD     0 9          ; var allParsedEdges ; 4027
LDF    10535        ;  @lambda_1011 ; 4028
LDF    56           ;  @map ; 4029
AP     2             ; 4030
ST     0 13          ; 4031
LD     0 7          ; var walkable ; 4032
LD     0 8          ; var junctions ; 4033
LD     0 9          ; var allParsedEdges ; 4034
LDC    0            ; NULL literal ; 4035
LDC    0            ; NULL literal ; 4036
LD     0 1          ; var accessors ; 4037
LD     0 12         ; var readOnlyEdgesForPoint ; 4038
CONS                 ; 4039
CONS                 ; 4040
CONS                 ; 4041
CONS                 ; 4042
CONS                 ; 4043
CONS                 ; 4044
RTN                  ; 4045
LD     0 0          ;  <== updateOtherParsedEdgeFields  [ParsedEdge pe, Function1<Point,ListCons<ParsedEdge>> readOnlyEdgesForPoint] (as blk) @src/app/Sample1.java(701,125) ; 4046
CDR                 ; generateTupleAccess total=10 pos=7 ; 4047
CDR                  ; 4048
CDR                  ; 4049
CDR                  ; 4050
CDR                  ; 4051
CDR                  ; 4052
CDR                  ; 4053
CAR                  ; 4054
LDF    3697         ;  @eraseFunction2 ; 4055
AP     1             ; 4056
ST     0 2           ; 4057
LD     0 1          ; var readOnlyEdgesForPoint ; 4058
LD     0 0          ; var pe ; 4059
CDR                 ; generateTupleAccess total=10 pos=8 ; 4060
CDR                  ; 4061
CDR                  ; 4062
CDR                  ; 4063
CDR                  ; 4064
CDR                  ; 4065
CDR                  ; 4066
CDR                  ; 4067
CAR                  ; 4068
LDF    3945         ;  @findEdgesForPoint ; 4069
AP     2             ; 4070
ST     0 3           ; 4071
LD     0 3          ; var edgesForPoint ; 4072
LDF    11086        ;  @lambda_1057 ; 4073
LDF    533          ;  @filter ; 4074
AP     2             ; 4075
ST     0 4           ; 4076
LD     0 3          ; var edgesForPoint ; 4077
LDF    11132        ;  @lambda_1058 ; 4078
LDF    533          ;  @filter ; 4079
AP     2             ; 4080
ST     0 5           ; 4081
LD     0 1          ; var readOnlyEdgesForPoint ; 4082
LD     0 0          ; var pe ; 4083
CDR                 ; generateTupleAccess total=10 pos=9 ; 4084
CDR                  ; 4085
CDR                  ; 4086
CDR                  ; 4087
CDR                  ; 4088
CDR                  ; 4089
CDR                  ; 4090
CDR                  ; 4091
CDR                  ; 4092
LDF    3945         ;  @findEdgesForPoint ; 4093
AP     2             ; 4094
ST     0 6           ; 4095
LD     0 6          ; var following ; 4096
LDF    11210        ;  @lambda_1059 ; 4097
LDF    533          ;  @filter ; 4098
AP     2             ; 4099
ST     0 7           ; 4100
LD     0 4          ; var oppositeEdge ; 4101
CAR                  ; 4102
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 4103
LDC    1            ; just constant from code ; 4104
LD     0 2          ; var a5 ; 4105
AP     2             ; 4106
AP     1             ; 4107
ST     0 8           ; 4108
LD     0 5          ; var precedingEdges ; 4109
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 4110
LDC    0            ; just constant from code ; 4111
LD     0 2          ; var a5 ; 4112
AP     2             ; 4113
AP     1             ; 4114
ST     0 8           ; 4115
LD     0 7          ; var followingEdges ; 4116
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 4117
LDC    3            ; just constant from code ; 4118
LD     0 2          ; var a5 ; 4119
AP     2             ; 4120
AP     1             ; 4121
ST     0 8           ; 4122
LDC    0            ; just constant from code ; 4123
RTN                  ; 4124
LD     0 0          ;  <== my_cat_maybes  [ListCons<Maybe<Point>> maybeListCons] (as blk) @src/app/Sample1.java(716,80) ; 4125
LDC 0               ; local var space ; 4126
LDC 0               ; local var space ; 4127
LDF    94           ;  @cat_maybes ; 4128
AP     3             ; 4129
ST     0 1           ; 4130
LD     0 1          ; var rv ; 4131
RTN                  ; 4132
LD     0 0          ;  <== collectWalkableXY  [ListCons<Integer> row, Integer rowy] (as blk) @src/app/Sample1.java(722,90) ; 4133
LDC    0            ; just constant from code ; 4134
LDF    11288        ;  @lambda_1060 ; 4135
LDF    73           ;  @mapi ; 4136
AP     3             ; 4137
RTN                  ; 4138
LD     0 0          ;  <== parseStaticMap  [ListCons<ListCons<Integer>> map] (as blk) @src/app/Sample1.java(727,76) ; 4139
LDC 0               ; local var space ; 4140
LDC 0               ; local var space ; 4141
LDC 0               ; local var space ; 4142
LDC 0               ; local var space ; 4143
LDC 0               ; local var space ; 4144
LDC 0               ; local var space ; 4145
LDC 0               ; local var space ; 4146
LDC 0               ; local var space ; 4147
LDC 0               ; local var space ; 4148
LDC 0               ; local var space ; 4149
LDC 0               ; local var space ; 4150
LDC 0               ; local var space ; 4151
LDC 0               ; local var space ; 4152
LDF    3949         ;  @parseMap ; 4153
AP     14            ; 4154
RTN                  ; 4155
LDF    399          ;  <== test2  [] (as blk) @src/app/Sample1.java(733,24), ALSO: @queue_new ; 4156
AP     0             ; 4157
LDC    1            ; just constant from code ; 4158
LDF    403          ;  @queue_enqueue ; 4159
AP     2             ; 4160
LDC    2            ; just constant from code ; 4161
LDF    403          ;  @queue_enqueue ; 4162
AP     2             ; 4163
LDC    3            ; just constant from code ; 4164
LDF    403          ;  @queue_enqueue ; 4165
AP     2             ; 4166
ST     0 0           ; 4167
LD     0 0          ; var queue ; 4168
LDC 0               ; local var space ; 4169
LDF    488          ;  @queue_dequeue ; 4170
AP     2             ; 4171
ST     0 1           ; 4172
LD     0 1          ; var q1 ; 4173
CDR                 ; generateTupleAccess total=2 pos=1 ; 4174
LDC 0               ; local var space ; 4175
LDF    488          ;  @queue_dequeue ; 4176
AP     2             ; 4177
ST     0 1           ; 4178
LD     0 1          ; var q1 ; 4179
CDR                 ; generateTupleAccess total=2 pos=1 ; 4180
LDC 0               ; local var space ; 4181
LDF    488          ;  @queue_dequeue ; 4182
AP     2             ; 4183
ST     0 1           ; 4184
LDC    1            ; just constant from code ; 4185
RTN                  ; 4186
LDC    0            ;  <== test3  [] (as blk) @src/app/Sample1.java(742,24) ; 4187
LDC    0            ; just constant from code ; 4188
CONS                 ; 4189
ST     0 0           ; 4190
LD     0 0          ; var map ; 4191
LDC    30           ; just constant from code ; 4192
LDC    31           ; just constant from code ; 4193
LDF    1304         ;  @sorted_map_assoc ; 4194
AP     3             ; 4195
LDC    20           ; just constant from code ; 4196
LDC    21           ; just constant from code ; 4197
LDF    1304         ;  @sorted_map_assoc ; 4198
AP     3             ; 4199
LDC    10           ; just constant from code ; 4200
LDC    11           ; just constant from code ; 4201
LDF    1304         ;  @sorted_map_assoc ; 4202
AP     3             ; 4203
ST     0 1           ; 4204
LD     0 1          ; var new_map2 ; 4205
LDC    20           ; just constant from code ; 4206
LDC    33           ; just constant from code ; 4207
LDF    1304         ;  @sorted_map_assoc ; 4208
AP     3             ; 4209
LDC    20           ; just constant from code ; 4210
LDC    88           ; just constant from code ; 4211
LDF    1288         ;  @sorted_map_get ; 4212
AP     3             ; 4213
RTN                  ; 4214
LDC    0            ;  <== getMapItem  [ListCons<ListCons<Integer>> map, int y, int x] (as blk) @src/app/Sample1.java(783,84) ; 4215
LD     0 1          ; var y ; 4216
CGT                  ; 4217
LDC    0            ; just constant from code ; 4218
LD     0 2          ; var x ; 4219
CGT                  ; 4220
ADD                  ; 4221
SEL    4224 4226    ; IF? 67 ; 4222
RTN                  ; 4223
LDC    0            ; THEN: 67 ; 4224
JOIN                 ; 4225
LD     0 0          ; ELSE: 67 ; 4226
LD     0 1          ; var y ; 4227
LDC    0            ; just constant from code ; 4228
LDF    465          ;  @list_item_def ; 4229
AP     3             ; 4230
LD     0 2          ; var x ; 4231
LDC    0            ; just constant from code ; 4232
LDF    465          ;  @list_item_def ; 4233
AP     3             ; 4234
JOIN                 ; 4235
LDC 0               ; generated from native: array_1 ; 4236
LDF 4240             ; 4237
AP 1                 ; 4238
RTN                  ; 4239
LDF  4242            ; 4240
RTN                  ; 4241
LD  0   0            ; 4242
LDC 100              ; 4243
CEQ                  ; 4244
TSEL    4246 4252    ; 4245
LD  0   1            ; 4246
LDC 0                ; 4247
CEQ                  ; 4248
TSEL    4260 4250    ; 4249
LDC  0               ; 4250
RTN                  ; 4251
LD  0   1            ; 4252
LDC 0                ; 4253
CEQ                  ; 4254
TSEL    4266 4256    ; 4255
LDC  0               ; 4256
RTN                  ; 4257
LD  2   0            ; 4258
RTN                  ; 4259
LDF 4258             ; 4260
RTN                  ; 4261
LD  2   0            ; 4262
LD  0   0            ; 4263
ST  2   0            ; 4264
RTN                  ; 4265
LDF 4262             ; 4266
RTN                  ; 4267
LDC 0               ; generated from native: array_5 ; 4268
LDC 0                ; 4269
LDC 0                ; 4270
LDC 0                ; 4271
LDC 0                ; 4272
LDF 4276             ; 4273
AP 5                 ; 4274
RTN                  ; 4275
LDF  4278            ; 4276
RTN                  ; 4277
LD  0   0            ; 4278
LDC 100              ; 4279
CEQ                  ; 4280
TSEL    4282 4304    ; 4281
LD  0   1            ; 4282
LDC 0                ; 4283
CEQ                  ; 4284
TSEL    4328 4286    ; 4285
LD  0   1            ; 4286
LDC 1                ; 4287
CEQ                  ; 4288
TSEL    4338 4290    ; 4289
LD  0   1            ; 4290
LDC 2                ; 4291
CEQ                  ; 4292
TSEL    4348 4294    ; 4293
LD  0   1            ; 4294
LDC 3                ; 4295
CEQ                  ; 4296
TSEL    4358 4298    ; 4297
LD  0   1            ; 4298
LDC 4                ; 4299
CEQ                  ; 4300
TSEL    4368 4302    ; 4301
LDC  0               ; 4302
RTN                  ; 4303
LD  0   1            ; 4304
LDC 0                ; 4305
CEQ                  ; 4306
TSEL    4334 4308    ; 4307
LD  0   1            ; 4308
LDC 1                ; 4309
CEQ                  ; 4310
TSEL    4344 4312    ; 4311
LD  0   1            ; 4312
LDC 2                ; 4313
CEQ                  ; 4314
TSEL    4354 4316    ; 4315
LD  0   1            ; 4316
LDC 3                ; 4317
CEQ                  ; 4318
TSEL    4364 4320    ; 4319
LD  0   1            ; 4320
LDC 4                ; 4321
CEQ                  ; 4322
TSEL    4374 4324    ; 4323
LDC  0               ; 4324
RTN                  ; 4325
LD  2   0            ; 4326
RTN                  ; 4327
LDF 4326             ; 4328
RTN                  ; 4329
LD  2   0            ; 4330
LD  0   0            ; 4331
ST  2   0            ; 4332
RTN                  ; 4333
LDF 4330             ; 4334
RTN                  ; 4335
LD  2   1            ; 4336
RTN                  ; 4337
LDF 4336             ; 4338
RTN                  ; 4339
LD  2   1            ; 4340
LD  0   0            ; 4341
ST  2   1            ; 4342
RTN                  ; 4343
LDF 4340             ; 4344
RTN                  ; 4345
LD  2   2            ; 4346
RTN                  ; 4347
LDF 4346             ; 4348
RTN                  ; 4349
LD  2   2            ; 4350
LD  0   0            ; 4351
ST  2   2            ; 4352
RTN                  ; 4353
LDF 4350             ; 4354
RTN                  ; 4355
LD  2   3            ; 4356
RTN                  ; 4357
LDF 4356             ; 4358
RTN                  ; 4359
LD  2   3            ; 4360
LD  0   0            ; 4361
ST  2   3            ; 4362
RTN                  ; 4363
LDF 4360             ; 4364
RTN                  ; 4365
LD  2   4            ; 4366
RTN                  ; 4367
LDF 4366             ; 4368
RTN                  ; 4369
LD  2   4            ; 4370
LD  0   0            ; 4371
ST  2   4            ; 4372
RTN                  ; 4373
LDF 4370             ; 4374
RTN                  ; 4375
LDF    10528        ;  <== toReadOnlyAccessor  [final Function2<Integer,Key,Function1<Value,Value>> readWriteAccessor] (as blk) @src/app/VMExtras.java(25,146), ALSO: @lambda_1010 ; 4376
RTN                  ; 4377
LDF    4480         ;  <== emptyEdgesArrayForMap  [int h] (as blk) @src/app/VMExtras.java(30,128), ALSO: @array_256 ; 4378
AP     0             ; 4379
ST     0 1           ; 4380
LD     0 1          ; var wrapper ; 4381
LD     0 0          ; var h ; 4382
LDC 0               ; local var space ; 4383
LDC 0               ; local var space ; 4384
LDC 0               ; local var space ; 4385
LDC 0               ; local var space ; 4386
LDF    4428         ;  @fillArrayForMap ; 4387
AP     6             ; 4388
ST     0 2           ; 4389
LDC    911110000    ; just constant from code ; 4390
DBUG                 ; 4391
LD     0 2          ; var ignore ; 4392
DBUG                 ; 4393
LDC    2            ; just constant from code ; 4394
LDC    3            ; just constant from code ; 4395
CONS                 ; 4396
ST     0 3           ; 4397
LDC    100          ; Named Const = VMExtras.GET_READER ; 4398
LD     0 3          ; var pt ; 4399
CDR                 ; generateTupleAccess total=2 pos=1 ; 4400
LD     0 1          ; var wrapper ; 4401
AP     2             ; 4402
ST     0 4           ; 4403
LDC    92222        ; just constant from code ; 4404
DBUG                 ; 4405
LDC    0            ; NULL literal ; 4406
LD     0 4          ; var apply ; 4407
AP     1             ; 4408
ST     0 5           ; 4409
LDC    93333        ; just constant from code ; 4410
DBUG                 ; 4411
LDC    100          ; Named Const = VMExtras.GET_READER ; 4412
LD     0 3          ; var pt ; 4413
CAR                 ; generateTupleAccess total=2 pos=0 ; 4414
LD     0 5          ; var apply1 ; 4415
AP     2             ; 4416
ST     0 6           ; 4417
LDC    94444        ; just constant from code ; 4418
DBUG                 ; 4419
LDC    0            ; NULL literal ; 4420
LD     0 6          ; var apply2 ; 4421
AP     1             ; 4422
ST     0 7           ; 4423
LDC    95555        ; just constant from code ; 4424
DBUG                 ; 4425
LDF    10509        ;  @lambda_1008 ; 4426
RTN                  ; 4427
LDC    0            ;  <== fillArrayForMap  [Function2<Integer,Integer,Function1<Function2<Integer,Integer,Function1<ListCons<ParsedEdge>,ListCons<ParsedEdge>>>,Function2<Integer,Integer,Function1<ListCons<ParsedEdge>,ListCons<ParsedEdge>>>>> wrapper, int h] (as blk) @src/app/VMExtras.java(51,262) ; 4428
ST     0 2           ; 4429
LD     0 1          ; var h ; 4430
LDC    0            ; just constant from code ; 4431
CGT                  ; 4432
SEL    4436 4479     ; 4433
LD     0 2          ; var res ; 4434
RTN                  ; 4435
LDF    4480         ; branch@4436, ALSO: @array_256 ; 4436
AP     0             ; 4437
ST     0 5           ; 4438
BRK                  ; 4439
LD     0 5          ; var a256 ; 4440
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 4441
LD     0 1          ; var h ; 4442
LDC    1            ; just constant from code ; 4443
SUB                  ; 4444
LD     0 0          ; var wrapper ; 4445
AP     2             ; 4446
AP     1             ; 4447
ST     0 3           ; 4448
LDC    0            ; NULL literal ; 4449
LDC    100          ; Named Const = VMExtras.GET_READER ; 4450
LD     0 1          ; var h ; 4451
LDC    1            ; just constant from code ; 4452
SUB                  ; 4453
LD     0 0          ; var wrapper ; 4454
AP     2             ; 4455
AP     1             ; 4456
ST     0 4           ; 4457
BRK                  ; 4458
LDC    91000001     ; just constant from code ; 4459
DBUG                 ; 4460
LD     0 4          ; var testStuff ; 4461
DBUG                 ; 4462
LD     0 5          ; var a256 ; 4463
DBUG                 ; 4464
LD     0 0          ; var wrapper ; 4465
LD     0 1          ; var h ; 4466
LDC    1            ; just constant from code ; 4467
SUB                  ; 4468
LDC 0               ; local var space ; 4469
LDC 0               ; local var space ; 4470
LDC 0               ; local var space ; 4471
LDC 0               ; local var space ; 4472
LDF    4428         ;  @fillArrayForMap ; 4473
AP     6             ; 4474
LDC    1            ; just constant from code ; 4475
ADD                  ; 4476
ST     0 2           ; 4477
JOIN                 ; 4478
JOIN                ; branch@4479 ; 4479
LDC 0               ; generated from native: array_256 ; 4480
LDC 0                ; 4481
LDC 0                ; 4482
LDC 0                ; 4483
LDC 0                ; 4484
LDC 0                ; 4485
LDC 0                ; 4486
LDC 0                ; 4487
LDC 0                ; 4488
LDC 0                ; 4489
LDC 0                ; 4490
LDC 0                ; 4491
LDC 0                ; 4492
LDC 0                ; 4493
LDC 0                ; 4494
LDC 0                ; 4495
LDC 0                ; 4496
LDC 0                ; 4497
LDC 0                ; 4498
LDC 0                ; 4499
LDC 0                ; 4500
LDC 0                ; 4501
LDC 0                ; 4502
LDC 0                ; 4503
LDC 0                ; 4504
LDC 0                ; 4505
LDC 0                ; 4506
LDC 0                ; 4507
LDC 0                ; 4508
LDC 0                ; 4509
LDC 0                ; 4510
LDC 0                ; 4511
LDC 0                ; 4512
LDC 0                ; 4513
LDC 0                ; 4514
LDC 0                ; 4515
LDC 0                ; 4516
LDC 0                ; 4517
LDC 0                ; 4518
LDC 0                ; 4519
LDC 0                ; 4520
LDC 0                ; 4521
LDC 0                ; 4522
LDC 0                ; 4523
LDC 0                ; 4524
LDC 0                ; 4525
LDC 0                ; 4526
LDC 0                ; 4527
LDC 0                ; 4528
LDC 0                ; 4529
LDC 0                ; 4530
LDC 0                ; 4531
LDC 0                ; 4532
LDC 0                ; 4533
LDC 0                ; 4534
LDC 0                ; 4535
LDC 0                ; 4536
LDC 0                ; 4537
LDC 0                ; 4538
LDC 0                ; 4539
LDC 0                ; 4540
LDC 0                ; 4541
LDC 0                ; 4542
LDC 0                ; 4543
LDC 0                ; 4544
LDC 0                ; 4545
LDC 0                ; 4546
LDC 0                ; 4547
LDC 0                ; 4548
LDC 0                ; 4549
LDC 0                ; 4550
LDC 0                ; 4551
LDC 0                ; 4552
LDC 0                ; 4553
LDC 0                ; 4554
LDC 0                ; 4555
LDC 0                ; 4556
LDC 0                ; 4557
LDC 0                ; 4558
LDC 0                ; 4559
LDC 0                ; 4560
LDC 0                ; 4561
LDC 0                ; 4562
LDC 0                ; 4563
LDC 0                ; 4564
LDC 0                ; 4565
LDC 0                ; 4566
LDC 0                ; 4567
LDC 0                ; 4568
LDC 0                ; 4569
LDC 0                ; 4570
LDC 0                ; 4571
LDC 0                ; 4572
LDC 0                ; 4573
LDC 0                ; 4574
LDC 0                ; 4575
LDC 0                ; 4576
LDC 0                ; 4577
LDC 0                ; 4578
LDC 0                ; 4579
LDC 0                ; 4580
LDC 0                ; 4581
LDC 0                ; 4582
LDC 0                ; 4583
LDC 0                ; 4584
LDC 0                ; 4585
LDC 0                ; 4586
LDC 0                ; 4587
LDC 0                ; 4588
LDC 0                ; 4589
LDC 0                ; 4590
LDC 0                ; 4591
LDC 0                ; 4592
LDC 0                ; 4593
LDC 0                ; 4594
LDC 0                ; 4595
LDC 0                ; 4596
LDC 0                ; 4597
LDC 0                ; 4598
LDC 0                ; 4599
LDC 0                ; 4600
LDC 0                ; 4601
LDC 0                ; 4602
LDC 0                ; 4603
LDC 0                ; 4604
LDC 0                ; 4605
LDC 0                ; 4606
LDC 0                ; 4607
LDC 0                ; 4608
LDC 0                ; 4609
LDC 0                ; 4610
LDC 0                ; 4611
LDC 0                ; 4612
LDC 0                ; 4613
LDC 0                ; 4614
LDC 0                ; 4615
LDC 0                ; 4616
LDC 0                ; 4617
LDC 0                ; 4618
LDC 0                ; 4619
LDC 0                ; 4620
LDC 0                ; 4621
LDC 0                ; 4622
LDC 0                ; 4623
LDC 0                ; 4624
LDC 0                ; 4625
LDC 0                ; 4626
LDC 0                ; 4627
LDC 0                ; 4628
LDC 0                ; 4629
LDC 0                ; 4630
LDC 0                ; 4631
LDC 0                ; 4632
LDC 0                ; 4633
LDC 0                ; 4634
LDC 0                ; 4635
LDC 0                ; 4636
LDC 0                ; 4637
LDC 0                ; 4638
LDC 0                ; 4639
LDC 0                ; 4640
LDC 0                ; 4641
LDC 0                ; 4642
LDC 0                ; 4643
LDC 0                ; 4644
LDC 0                ; 4645
LDC 0                ; 4646
LDC 0                ; 4647
LDC 0                ; 4648
LDC 0                ; 4649
LDC 0                ; 4650
LDC 0                ; 4651
LDC 0                ; 4652
LDC 0                ; 4653
LDC 0                ; 4654
LDC 0                ; 4655
LDC 0                ; 4656
LDC 0                ; 4657
LDC 0                ; 4658
LDC 0                ; 4659
LDC 0                ; 4660
LDC 0                ; 4661
LDC 0                ; 4662
LDC 0                ; 4663
LDC 0                ; 4664
LDC 0                ; 4665
LDC 0                ; 4666
LDC 0                ; 4667
LDC 0                ; 4668
LDC 0                ; 4669
LDC 0                ; 4670
LDC 0                ; 4671
LDC 0                ; 4672
LDC 0                ; 4673
LDC 0                ; 4674
LDC 0                ; 4675
LDC 0                ; 4676
LDC 0                ; 4677
LDC 0                ; 4678
LDC 0                ; 4679
LDC 0                ; 4680
LDC 0                ; 4681
LDC 0                ; 4682
LDC 0                ; 4683
LDC 0                ; 4684
LDC 0                ; 4685
LDC 0                ; 4686
LDC 0                ; 4687
LDC 0                ; 4688
LDC 0                ; 4689
LDC 0                ; 4690
LDC 0                ; 4691
LDC 0                ; 4692
LDC 0                ; 4693
LDC 0                ; 4694
LDC 0                ; 4695
LDC 0                ; 4696
LDC 0                ; 4697
LDC 0                ; 4698
LDC 0                ; 4699
LDC 0                ; 4700
LDC 0                ; 4701
LDC 0                ; 4702
LDC 0                ; 4703
LDC 0                ; 4704
LDC 0                ; 4705
LDC 0                ; 4706
LDC 0                ; 4707
LDC 0                ; 4708
LDC 0                ; 4709
LDC 0                ; 4710
LDC 0                ; 4711
LDC 0                ; 4712
LDC 0                ; 4713
LDC 0                ; 4714
LDC 0                ; 4715
LDC 0                ; 4716
LDC 0                ; 4717
LDC 0                ; 4718
LDC 0                ; 4719
LDC 0                ; 4720
LDC 0                ; 4721
LDC 0                ; 4722
LDC 0                ; 4723
LDC 0                ; 4724
LDC 0                ; 4725
LDC 0                ; 4726
LDC 0                ; 4727
LDC 0                ; 4728
LDC 0                ; 4729
LDC 0                ; 4730
LDC 0                ; 4731
LDC 0                ; 4732
LDC 0                ; 4733
LDC 0                ; 4734
LDC 0                ; 4735
LDF 4739             ; 4736
AP 256               ; 4737
RTN                  ; 4738
LDF  4741            ; 4739
RTN                  ; 4740
LD  0   0            ; 4741
LDC 100              ; 4742
CEQ                  ; 4743
TSEL  4745 5765      ; 4744
LD 0 1               ; 4745
LDC 127              ; 4746
CGT                  ; 4747
TSEL 5257 4749       ; 4748
LD 0 1               ; 4749
LDC 63               ; 4750
CGT                  ; 4751
TSEL 5005 4753       ; 4752
LD 0 1               ; 4753
LDC 31               ; 4754
CGT                  ; 4755
TSEL 4881 4757       ; 4756
LD 0 1               ; 4757
LDC 15               ; 4758
CGT                  ; 4759
TSEL 4821 4761       ; 4760
LD 0 1               ; 4761
LDC 7                ; 4762
CGT                  ; 4763
TSEL 4793 4765       ; 4764
LD 0 1               ; 4765
LDC 3                ; 4766
CGT                  ; 4767
TSEL 4781 4769       ; 4768
LD 0 1               ; 4769
LDC 1                ; 4770
CGT                  ; 4771
TSEL 4777 4773       ; 4772
LD 0 1               ; 4773
LDC 0                ; 4774
CGT                  ; 4775
TSEL 6797 6787       ; 4776
LD 0 1               ; 4777
LDC 2                ; 4778
CGT                  ; 4779
TSEL 6817 6807       ; 4780
LD 0 1               ; 4781
LDC 5                ; 4782
CGT                  ; 4783
TSEL 4789 4785       ; 4784
LD 0 1               ; 4785
LDC 4                ; 4786
CGT                  ; 4787
TSEL 6837 6827       ; 4788
LD 0 1               ; 4789
LDC 6                ; 4790
CGT                  ; 4791
TSEL 6857 6847       ; 4792
LD 0 1               ; 4793
LDC 11               ; 4794
CGT                  ; 4795
TSEL 4809 4797       ; 4796
LD 0 1               ; 4797
LDC 9                ; 4798
CGT                  ; 4799
TSEL 4805 4801       ; 4800
LD 0 1               ; 4801
LDC 8                ; 4802
CGT                  ; 4803
TSEL 6877 6867       ; 4804
LD 0 1               ; 4805
LDC 10               ; 4806
CGT                  ; 4807
TSEL 6897 6887       ; 4808
LD 0 1               ; 4809
LDC 13               ; 4810
CGT                  ; 4811
TSEL 4817 4813       ; 4812
LD 0 1               ; 4813
LDC 12               ; 4814
CGT                  ; 4815
TSEL 6917 6907       ; 4816
LD 0 1               ; 4817
LDC 14               ; 4818
CGT                  ; 4819
TSEL 6937 6927       ; 4820
LD 0 1               ; 4821
LDC 23               ; 4822
CGT                  ; 4823
TSEL 4853 4825       ; 4824
LD 0 1               ; 4825
LDC 19               ; 4826
CGT                  ; 4827
TSEL 4841 4829       ; 4828
LD 0 1               ; 4829
LDC 17               ; 4830
CGT                  ; 4831
TSEL 4837 4833       ; 4832
LD 0 1               ; 4833
LDC 16               ; 4834
CGT                  ; 4835
TSEL 6957 6947       ; 4836
LD 0 1               ; 4837
LDC 18               ; 4838
CGT                  ; 4839
TSEL 6977 6967       ; 4840
LD 0 1               ; 4841
LDC 21               ; 4842
CGT                  ; 4843
TSEL 4849 4845       ; 4844
LD 0 1               ; 4845
LDC 20               ; 4846
CGT                  ; 4847
TSEL 6997 6987       ; 4848
LD 0 1               ; 4849
LDC 22               ; 4850
CGT                  ; 4851
TSEL 7017 7007       ; 4852
LD 0 1               ; 4853
LDC 27               ; 4854
CGT                  ; 4855
TSEL 4869 4857       ; 4856
LD 0 1               ; 4857
LDC 25               ; 4858
CGT                  ; 4859
TSEL 4865 4861       ; 4860
LD 0 1               ; 4861
LDC 24               ; 4862
CGT                  ; 4863
TSEL 7037 7027       ; 4864
LD 0 1               ; 4865
LDC 26               ; 4866
CGT                  ; 4867
TSEL 7057 7047       ; 4868
LD 0 1               ; 4869
LDC 29               ; 4870
CGT                  ; 4871
TSEL 4877 4873       ; 4872
LD 0 1               ; 4873
LDC 28               ; 4874
CGT                  ; 4875
TSEL 7077 7067       ; 4876
LD 0 1               ; 4877
LDC 30               ; 4878
CGT                  ; 4879
TSEL 7097 7087       ; 4880
LD 0 1               ; 4881
LDC 47               ; 4882
CGT                  ; 4883
TSEL 4945 4885       ; 4884
LD 0 1               ; 4885
LDC 39               ; 4886
CGT                  ; 4887
TSEL 4917 4889       ; 4888
LD 0 1               ; 4889
LDC 35               ; 4890
CGT                  ; 4891
TSEL 4905 4893       ; 4892
LD 0 1               ; 4893
LDC 33               ; 4894
CGT                  ; 4895
TSEL 4901 4897       ; 4896
LD 0 1               ; 4897
LDC 32               ; 4898
CGT                  ; 4899
TSEL 7117 7107       ; 4900
LD 0 1               ; 4901
LDC 34               ; 4902
CGT                  ; 4903
TSEL 7137 7127       ; 4904
LD 0 1               ; 4905
LDC 37               ; 4906
CGT                  ; 4907
TSEL 4913 4909       ; 4908
LD 0 1               ; 4909
LDC 36               ; 4910
CGT                  ; 4911
TSEL 7157 7147       ; 4912
LD 0 1               ; 4913
LDC 38               ; 4914
CGT                  ; 4915
TSEL 7177 7167       ; 4916
LD 0 1               ; 4917
LDC 43               ; 4918
CGT                  ; 4919
TSEL 4933 4921       ; 4920
LD 0 1               ; 4921
LDC 41               ; 4922
CGT                  ; 4923
TSEL 4929 4925       ; 4924
LD 0 1               ; 4925
LDC 40               ; 4926
CGT                  ; 4927
TSEL 7197 7187       ; 4928
LD 0 1               ; 4929
LDC 42               ; 4930
CGT                  ; 4931
TSEL 7217 7207       ; 4932
LD 0 1               ; 4933
LDC 45               ; 4934
CGT                  ; 4935
TSEL 4941 4937       ; 4936
LD 0 1               ; 4937
LDC 44               ; 4938
CGT                  ; 4939
TSEL 7237 7227       ; 4940
LD 0 1               ; 4941
LDC 46               ; 4942
CGT                  ; 4943
TSEL 7257 7247       ; 4944
LD 0 1               ; 4945
LDC 55               ; 4946
CGT                  ; 4947
TSEL 4977 4949       ; 4948
LD 0 1               ; 4949
LDC 51               ; 4950
CGT                  ; 4951
TSEL 4965 4953       ; 4952
LD 0 1               ; 4953
LDC 49               ; 4954
CGT                  ; 4955
TSEL 4961 4957       ; 4956
LD 0 1               ; 4957
LDC 48               ; 4958
CGT                  ; 4959
TSEL 7277 7267       ; 4960
LD 0 1               ; 4961
LDC 50               ; 4962
CGT                  ; 4963
TSEL 7297 7287       ; 4964
LD 0 1               ; 4965
LDC 53               ; 4966
CGT                  ; 4967
TSEL 4973 4969       ; 4968
LD 0 1               ; 4969
LDC 52               ; 4970
CGT                  ; 4971
TSEL 7317 7307       ; 4972
LD 0 1               ; 4973
LDC 54               ; 4974
CGT                  ; 4975
TSEL 7337 7327       ; 4976
LD 0 1               ; 4977
LDC 59               ; 4978
CGT                  ; 4979
TSEL 4993 4981       ; 4980
LD 0 1               ; 4981
LDC 57               ; 4982
CGT                  ; 4983
TSEL 4989 4985       ; 4984
LD 0 1               ; 4985
LDC 56               ; 4986
CGT                  ; 4987
TSEL 7357 7347       ; 4988
LD 0 1               ; 4989
LDC 58               ; 4990
CGT                  ; 4991
TSEL 7377 7367       ; 4992
LD 0 1               ; 4993
LDC 61               ; 4994
CGT                  ; 4995
TSEL 5001 4997       ; 4996
LD 0 1               ; 4997
LDC 60               ; 4998
CGT                  ; 4999
TSEL 7397 7387       ; 5000
LD 0 1               ; 5001
LDC 62               ; 5002
CGT                  ; 5003
TSEL 7417 7407       ; 5004
LD 0 1               ; 5005
LDC 95               ; 5006
CGT                  ; 5007
TSEL 5133 5009       ; 5008
LD 0 1               ; 5009
LDC 79               ; 5010
CGT                  ; 5011
TSEL 5073 5013       ; 5012
LD 0 1               ; 5013
LDC 71               ; 5014
CGT                  ; 5015
TSEL 5045 5017       ; 5016
LD 0 1               ; 5017
LDC 67               ; 5018
CGT                  ; 5019
TSEL 5033 5021       ; 5020
LD 0 1               ; 5021
LDC 65               ; 5022
CGT                  ; 5023
TSEL 5029 5025       ; 5024
LD 0 1               ; 5025
LDC 64               ; 5026
CGT                  ; 5027
TSEL 7437 7427       ; 5028
LD 0 1               ; 5029
LDC 66               ; 5030
CGT                  ; 5031
TSEL 7457 7447       ; 5032
LD 0 1               ; 5033
LDC 69               ; 5034
CGT                  ; 5035
TSEL 5041 5037       ; 5036
LD 0 1               ; 5037
LDC 68               ; 5038
CGT                  ; 5039
TSEL 7477 7467       ; 5040
LD 0 1               ; 5041
LDC 70               ; 5042
CGT                  ; 5043
TSEL 7497 7487       ; 5044
LD 0 1               ; 5045
LDC 75               ; 5046
CGT                  ; 5047
TSEL 5061 5049       ; 5048
LD 0 1               ; 5049
LDC 73               ; 5050
CGT                  ; 5051
TSEL 5057 5053       ; 5052
LD 0 1               ; 5053
LDC 72               ; 5054
CGT                  ; 5055
TSEL 7517 7507       ; 5056
LD 0 1               ; 5057
LDC 74               ; 5058
CGT                  ; 5059
TSEL 7537 7527       ; 5060
LD 0 1               ; 5061
LDC 77               ; 5062
CGT                  ; 5063
TSEL 5069 5065       ; 5064
LD 0 1               ; 5065
LDC 76               ; 5066
CGT                  ; 5067
TSEL 7557 7547       ; 5068
LD 0 1               ; 5069
LDC 78               ; 5070
CGT                  ; 5071
TSEL 7577 7567       ; 5072
LD 0 1               ; 5073
LDC 87               ; 5074
CGT                  ; 5075
TSEL 5105 5077       ; 5076
LD 0 1               ; 5077
LDC 83               ; 5078
CGT                  ; 5079
TSEL 5093 5081       ; 5080
LD 0 1               ; 5081
LDC 81               ; 5082
CGT                  ; 5083
TSEL 5089 5085       ; 5084
LD 0 1               ; 5085
LDC 80               ; 5086
CGT                  ; 5087
TSEL 7597 7587       ; 5088
LD 0 1               ; 5089
LDC 82               ; 5090
CGT                  ; 5091
TSEL 7617 7607       ; 5092
LD 0 1               ; 5093
LDC 85               ; 5094
CGT                  ; 5095
TSEL 5101 5097       ; 5096
LD 0 1               ; 5097
LDC 84               ; 5098
CGT                  ; 5099
TSEL 7637 7627       ; 5100
LD 0 1               ; 5101
LDC 86               ; 5102
CGT                  ; 5103
TSEL 7657 7647       ; 5104
LD 0 1               ; 5105
LDC 91               ; 5106
CGT                  ; 5107
TSEL 5121 5109       ; 5108
LD 0 1               ; 5109
LDC 89               ; 5110
CGT                  ; 5111
TSEL 5117 5113       ; 5112
LD 0 1               ; 5113
LDC 88               ; 5114
CGT                  ; 5115
TSEL 7677 7667       ; 5116
LD 0 1               ; 5117
LDC 90               ; 5118
CGT                  ; 5119
TSEL 7697 7687       ; 5120
LD 0 1               ; 5121
LDC 93               ; 5122
CGT                  ; 5123
TSEL 5129 5125       ; 5124
LD 0 1               ; 5125
LDC 92               ; 5126
CGT                  ; 5127
TSEL 7717 7707       ; 5128
LD 0 1               ; 5129
LDC 94               ; 5130
CGT                  ; 5131
TSEL 7737 7727       ; 5132
LD 0 1               ; 5133
LDC 111              ; 5134
CGT                  ; 5135
TSEL 5197 5137       ; 5136
LD 0 1               ; 5137
LDC 103              ; 5138
CGT                  ; 5139
TSEL 5169 5141       ; 5140
LD 0 1               ; 5141
LDC 99               ; 5142
CGT                  ; 5143
TSEL 5157 5145       ; 5144
LD 0 1               ; 5145
LDC 97               ; 5146
CGT                  ; 5147
TSEL 5153 5149       ; 5148
LD 0 1               ; 5149
LDC 96               ; 5150
CGT                  ; 5151
TSEL 7757 7747       ; 5152
LD 0 1               ; 5153
LDC 98               ; 5154
CGT                  ; 5155
TSEL 7777 7767       ; 5156
LD 0 1               ; 5157
LDC 101              ; 5158
CGT                  ; 5159
TSEL 5165 5161       ; 5160
LD 0 1               ; 5161
LDC 100              ; 5162
CGT                  ; 5163
TSEL 7797 7787       ; 5164
LD 0 1               ; 5165
LDC 102              ; 5166
CGT                  ; 5167
TSEL 7817 7807       ; 5168
LD 0 1               ; 5169
LDC 107              ; 5170
CGT                  ; 5171
TSEL 5185 5173       ; 5172
LD 0 1               ; 5173
LDC 105              ; 5174
CGT                  ; 5175
TSEL 5181 5177       ; 5176
LD 0 1               ; 5177
LDC 104              ; 5178
CGT                  ; 5179
TSEL 7837 7827       ; 5180
LD 0 1               ; 5181
LDC 106              ; 5182
CGT                  ; 5183
TSEL 7857 7847       ; 5184
LD 0 1               ; 5185
LDC 109              ; 5186
CGT                  ; 5187
TSEL 5193 5189       ; 5188
LD 0 1               ; 5189
LDC 108              ; 5190
CGT                  ; 5191
TSEL 7877 7867       ; 5192
LD 0 1               ; 5193
LDC 110              ; 5194
CGT                  ; 5195
TSEL 7897 7887       ; 5196
LD 0 1               ; 5197
LDC 119              ; 5198
CGT                  ; 5199
TSEL 5229 5201       ; 5200
LD 0 1               ; 5201
LDC 115              ; 5202
CGT                  ; 5203
TSEL 5217 5205       ; 5204
LD 0 1               ; 5205
LDC 113              ; 5206
CGT                  ; 5207
TSEL 5213 5209       ; 5208
LD 0 1               ; 5209
LDC 112              ; 5210
CGT                  ; 5211
TSEL 7917 7907       ; 5212
LD 0 1               ; 5213
LDC 114              ; 5214
CGT                  ; 5215
TSEL 7937 7927       ; 5216
LD 0 1               ; 5217
LDC 117              ; 5218
CGT                  ; 5219
TSEL 5225 5221       ; 5220
LD 0 1               ; 5221
LDC 116              ; 5222
CGT                  ; 5223
TSEL 7957 7947       ; 5224
LD 0 1               ; 5225
LDC 118              ; 5226
CGT                  ; 5227
TSEL 7977 7967       ; 5228
LD 0 1               ; 5229
LDC 123              ; 5230
CGT                  ; 5231
TSEL 5245 5233       ; 5232
LD 0 1               ; 5233
LDC 121              ; 5234
CGT                  ; 5235
TSEL 5241 5237       ; 5236
LD 0 1               ; 5237
LDC 120              ; 5238
CGT                  ; 5239
TSEL 7997 7987       ; 5240
LD 0 1               ; 5241
LDC 122              ; 5242
CGT                  ; 5243
TSEL 8017 8007       ; 5244
LD 0 1               ; 5245
LDC 125              ; 5246
CGT                  ; 5247
TSEL 5253 5249       ; 5248
LD 0 1               ; 5249
LDC 124              ; 5250
CGT                  ; 5251
TSEL 8037 8027       ; 5252
LD 0 1               ; 5253
LDC 126              ; 5254
CGT                  ; 5255
TSEL 8057 8047       ; 5256
LD 0 1               ; 5257
LDC 191              ; 5258
CGT                  ; 5259
TSEL 5513 5261       ; 5260
LD 0 1               ; 5261
LDC 159              ; 5262
CGT                  ; 5263
TSEL 5389 5265       ; 5264
LD 0 1               ; 5265
LDC 143              ; 5266
CGT                  ; 5267
TSEL 5329 5269       ; 5268
LD 0 1               ; 5269
LDC 135              ; 5270
CGT                  ; 5271
TSEL 5301 5273       ; 5272
LD 0 1               ; 5273
LDC 131              ; 5274
CGT                  ; 5275
TSEL 5289 5277       ; 5276
LD 0 1               ; 5277
LDC 129              ; 5278
CGT                  ; 5279
TSEL 5285 5281       ; 5280
LD 0 1               ; 5281
LDC 128              ; 5282
CGT                  ; 5283
TSEL 8077 8067       ; 5284
LD 0 1               ; 5285
LDC 130              ; 5286
CGT                  ; 5287
TSEL 8097 8087       ; 5288
LD 0 1               ; 5289
LDC 133              ; 5290
CGT                  ; 5291
TSEL 5297 5293       ; 5292
LD 0 1               ; 5293
LDC 132              ; 5294
CGT                  ; 5295
TSEL 8117 8107       ; 5296
LD 0 1               ; 5297
LDC 134              ; 5298
CGT                  ; 5299
TSEL 8137 8127       ; 5300
LD 0 1               ; 5301
LDC 139              ; 5302
CGT                  ; 5303
TSEL 5317 5305       ; 5304
LD 0 1               ; 5305
LDC 137              ; 5306
CGT                  ; 5307
TSEL 5313 5309       ; 5308
LD 0 1               ; 5309
LDC 136              ; 5310
CGT                  ; 5311
TSEL 8157 8147       ; 5312
LD 0 1               ; 5313
LDC 138              ; 5314
CGT                  ; 5315
TSEL 8177 8167       ; 5316
LD 0 1               ; 5317
LDC 141              ; 5318
CGT                  ; 5319
TSEL 5325 5321       ; 5320
LD 0 1               ; 5321
LDC 140              ; 5322
CGT                  ; 5323
TSEL 8197 8187       ; 5324
LD 0 1               ; 5325
LDC 142              ; 5326
CGT                  ; 5327
TSEL 8217 8207       ; 5328
LD 0 1               ; 5329
LDC 151              ; 5330
CGT                  ; 5331
TSEL 5361 5333       ; 5332
LD 0 1               ; 5333
LDC 147              ; 5334
CGT                  ; 5335
TSEL 5349 5337       ; 5336
LD 0 1               ; 5337
LDC 145              ; 5338
CGT                  ; 5339
TSEL 5345 5341       ; 5340
LD 0 1               ; 5341
LDC 144              ; 5342
CGT                  ; 5343
TSEL 8237 8227       ; 5344
LD 0 1               ; 5345
LDC 146              ; 5346
CGT                  ; 5347
TSEL 8257 8247       ; 5348
LD 0 1               ; 5349
LDC 149              ; 5350
CGT                  ; 5351
TSEL 5357 5353       ; 5352
LD 0 1               ; 5353
LDC 148              ; 5354
CGT                  ; 5355
TSEL 8277 8267       ; 5356
LD 0 1               ; 5357
LDC 150              ; 5358
CGT                  ; 5359
TSEL 8297 8287       ; 5360
LD 0 1               ; 5361
LDC 155              ; 5362
CGT                  ; 5363
TSEL 5377 5365       ; 5364
LD 0 1               ; 5365
LDC 153              ; 5366
CGT                  ; 5367
TSEL 5373 5369       ; 5368
LD 0 1               ; 5369
LDC 152              ; 5370
CGT                  ; 5371
TSEL 8317 8307       ; 5372
LD 0 1               ; 5373
LDC 154              ; 5374
CGT                  ; 5375
TSEL 8337 8327       ; 5376
LD 0 1               ; 5377
LDC 157              ; 5378
CGT                  ; 5379
TSEL 5385 5381       ; 5380
LD 0 1               ; 5381
LDC 156              ; 5382
CGT                  ; 5383
TSEL 8357 8347       ; 5384
LD 0 1               ; 5385
LDC 158              ; 5386
CGT                  ; 5387
TSEL 8377 8367       ; 5388
LD 0 1               ; 5389
LDC 175              ; 5390
CGT                  ; 5391
TSEL 5453 5393       ; 5392
LD 0 1               ; 5393
LDC 167              ; 5394
CGT                  ; 5395
TSEL 5425 5397       ; 5396
LD 0 1               ; 5397
LDC 163              ; 5398
CGT                  ; 5399
TSEL 5413 5401       ; 5400
LD 0 1               ; 5401
LDC 161              ; 5402
CGT                  ; 5403
TSEL 5409 5405       ; 5404
LD 0 1               ; 5405
LDC 160              ; 5406
CGT                  ; 5407
TSEL 8397 8387       ; 5408
LD 0 1               ; 5409
LDC 162              ; 5410
CGT                  ; 5411
TSEL 8417 8407       ; 5412
LD 0 1               ; 5413
LDC 165              ; 5414
CGT                  ; 5415
TSEL 5421 5417       ; 5416
LD 0 1               ; 5417
LDC 164              ; 5418
CGT                  ; 5419
TSEL 8437 8427       ; 5420
LD 0 1               ; 5421
LDC 166              ; 5422
CGT                  ; 5423
TSEL 8457 8447       ; 5424
LD 0 1               ; 5425
LDC 171              ; 5426
CGT                  ; 5427
TSEL 5441 5429       ; 5428
LD 0 1               ; 5429
LDC 169              ; 5430
CGT                  ; 5431
TSEL 5437 5433       ; 5432
LD 0 1               ; 5433
LDC 168              ; 5434
CGT                  ; 5435
TSEL 8477 8467       ; 5436
LD 0 1               ; 5437
LDC 170              ; 5438
CGT                  ; 5439
TSEL 8497 8487       ; 5440
LD 0 1               ; 5441
LDC 173              ; 5442
CGT                  ; 5443
TSEL 5449 5445       ; 5444
LD 0 1               ; 5445
LDC 172              ; 5446
CGT                  ; 5447
TSEL 8517 8507       ; 5448
LD 0 1               ; 5449
LDC 174              ; 5450
CGT                  ; 5451
TSEL 8537 8527       ; 5452
LD 0 1               ; 5453
LDC 183              ; 5454
CGT                  ; 5455
TSEL 5485 5457       ; 5456
LD 0 1               ; 5457
LDC 179              ; 5458
CGT                  ; 5459
TSEL 5473 5461       ; 5460
LD 0 1               ; 5461
LDC 177              ; 5462
CGT                  ; 5463
TSEL 5469 5465       ; 5464
LD 0 1               ; 5465
LDC 176              ; 5466
CGT                  ; 5467
TSEL 8557 8547       ; 5468
LD 0 1               ; 5469
LDC 178              ; 5470
CGT                  ; 5471
TSEL 8577 8567       ; 5472
LD 0 1               ; 5473
LDC 181              ; 5474
CGT                  ; 5475
TSEL 5481 5477       ; 5476
LD 0 1               ; 5477
LDC 180              ; 5478
CGT                  ; 5479
TSEL 8597 8587       ; 5480
LD 0 1               ; 5481
LDC 182              ; 5482
CGT                  ; 5483
TSEL 8617 8607       ; 5484
LD 0 1               ; 5485
LDC 187              ; 5486
CGT                  ; 5487
TSEL 5501 5489       ; 5488
LD 0 1               ; 5489
LDC 185              ; 5490
CGT                  ; 5491
TSEL 5497 5493       ; 5492
LD 0 1               ; 5493
LDC 184              ; 5494
CGT                  ; 5495
TSEL 8637 8627       ; 5496
LD 0 1               ; 5497
LDC 186              ; 5498
CGT                  ; 5499
TSEL 8657 8647       ; 5500
LD 0 1               ; 5501
LDC 189              ; 5502
CGT                  ; 5503
TSEL 5509 5505       ; 5504
LD 0 1               ; 5505
LDC 188              ; 5506
CGT                  ; 5507
TSEL 8677 8667       ; 5508
LD 0 1               ; 5509
LDC 190              ; 5510
CGT                  ; 5511
TSEL 8697 8687       ; 5512
LD 0 1               ; 5513
LDC 223              ; 5514
CGT                  ; 5515
TSEL 5641 5517       ; 5516
LD 0 1               ; 5517
LDC 207              ; 5518
CGT                  ; 5519
TSEL 5581 5521       ; 5520
LD 0 1               ; 5521
LDC 199              ; 5522
CGT                  ; 5523
TSEL 5553 5525       ; 5524
LD 0 1               ; 5525
LDC 195              ; 5526
CGT                  ; 5527
TSEL 5541 5529       ; 5528
LD 0 1               ; 5529
LDC 193              ; 5530
CGT                  ; 5531
TSEL 5537 5533       ; 5532
LD 0 1               ; 5533
LDC 192              ; 5534
CGT                  ; 5535
TSEL 8717 8707       ; 5536
LD 0 1               ; 5537
LDC 194              ; 5538
CGT                  ; 5539
TSEL 8737 8727       ; 5540
LD 0 1               ; 5541
LDC 197              ; 5542
CGT                  ; 5543
TSEL 5549 5545       ; 5544
LD 0 1               ; 5545
LDC 196              ; 5546
CGT                  ; 5547
TSEL 8757 8747       ; 5548
LD 0 1               ; 5549
LDC 198              ; 5550
CGT                  ; 5551
TSEL 8777 8767       ; 5552
LD 0 1               ; 5553
LDC 203              ; 5554
CGT                  ; 5555
TSEL 5569 5557       ; 5556
LD 0 1               ; 5557
LDC 201              ; 5558
CGT                  ; 5559
TSEL 5565 5561       ; 5560
LD 0 1               ; 5561
LDC 200              ; 5562
CGT                  ; 5563
TSEL 8797 8787       ; 5564
LD 0 1               ; 5565
LDC 202              ; 5566
CGT                  ; 5567
TSEL 8817 8807       ; 5568
LD 0 1               ; 5569
LDC 205              ; 5570
CGT                  ; 5571
TSEL 5577 5573       ; 5572
LD 0 1               ; 5573
LDC 204              ; 5574
CGT                  ; 5575
TSEL 8837 8827       ; 5576
LD 0 1               ; 5577
LDC 206              ; 5578
CGT                  ; 5579
TSEL 8857 8847       ; 5580
LD 0 1               ; 5581
LDC 215              ; 5582
CGT                  ; 5583
TSEL 5613 5585       ; 5584
LD 0 1               ; 5585
LDC 211              ; 5586
CGT                  ; 5587
TSEL 5601 5589       ; 5588
LD 0 1               ; 5589
LDC 209              ; 5590
CGT                  ; 5591
TSEL 5597 5593       ; 5592
LD 0 1               ; 5593
LDC 208              ; 5594
CGT                  ; 5595
TSEL 8877 8867       ; 5596
LD 0 1               ; 5597
LDC 210              ; 5598
CGT                  ; 5599
TSEL 8897 8887       ; 5600
LD 0 1               ; 5601
LDC 213              ; 5602
CGT                  ; 5603
TSEL 5609 5605       ; 5604
LD 0 1               ; 5605
LDC 212              ; 5606
CGT                  ; 5607
TSEL 8917 8907       ; 5608
LD 0 1               ; 5609
LDC 214              ; 5610
CGT                  ; 5611
TSEL 8937 8927       ; 5612
LD 0 1               ; 5613
LDC 219              ; 5614
CGT                  ; 5615
TSEL 5629 5617       ; 5616
LD 0 1               ; 5617
LDC 217              ; 5618
CGT                  ; 5619
TSEL 5625 5621       ; 5620
LD 0 1               ; 5621
LDC 216              ; 5622
CGT                  ; 5623
TSEL 8957 8947       ; 5624
LD 0 1               ; 5625
LDC 218              ; 5626
CGT                  ; 5627
TSEL 8977 8967       ; 5628
LD 0 1               ; 5629
LDC 221              ; 5630
CGT                  ; 5631
TSEL 5637 5633       ; 5632
LD 0 1               ; 5633
LDC 220              ; 5634
CGT                  ; 5635
TSEL 8997 8987       ; 5636
LD 0 1               ; 5637
LDC 222              ; 5638
CGT                  ; 5639
TSEL 9017 9007       ; 5640
LD 0 1               ; 5641
LDC 239              ; 5642
CGT                  ; 5643
TSEL 5705 5645       ; 5644
LD 0 1               ; 5645
LDC 231              ; 5646
CGT                  ; 5647
TSEL 5677 5649       ; 5648
LD 0 1               ; 5649
LDC 227              ; 5650
CGT                  ; 5651
TSEL 5665 5653       ; 5652
LD 0 1               ; 5653
LDC 225              ; 5654
CGT                  ; 5655
TSEL 5661 5657       ; 5656
LD 0 1               ; 5657
LDC 224              ; 5658
CGT                  ; 5659
TSEL 9037 9027       ; 5660
LD 0 1               ; 5661
LDC 226              ; 5662
CGT                  ; 5663
TSEL 9057 9047       ; 5664
LD 0 1               ; 5665
LDC 229              ; 5666
CGT                  ; 5667
TSEL 5673 5669       ; 5668
LD 0 1               ; 5669
LDC 228              ; 5670
CGT                  ; 5671
TSEL 9077 9067       ; 5672
LD 0 1               ; 5673
LDC 230              ; 5674
CGT                  ; 5675
TSEL 9097 9087       ; 5676
LD 0 1               ; 5677
LDC 235              ; 5678
CGT                  ; 5679
TSEL 5693 5681       ; 5680
LD 0 1               ; 5681
LDC 233              ; 5682
CGT                  ; 5683
TSEL 5689 5685       ; 5684
LD 0 1               ; 5685
LDC 232              ; 5686
CGT                  ; 5687
TSEL 9117 9107       ; 5688
LD 0 1               ; 5689
LDC 234              ; 5690
CGT                  ; 5691
TSEL 9137 9127       ; 5692
LD 0 1               ; 5693
LDC 237              ; 5694
CGT                  ; 5695
TSEL 5701 5697       ; 5696
LD 0 1               ; 5697
LDC 236              ; 5698
CGT                  ; 5699
TSEL 9157 9147       ; 5700
LD 0 1               ; 5701
LDC 238              ; 5702
CGT                  ; 5703
TSEL 9177 9167       ; 5704
LD 0 1               ; 5705
LDC 247              ; 5706
CGT                  ; 5707
TSEL 5737 5709       ; 5708
LD 0 1               ; 5709
LDC 243              ; 5710
CGT                  ; 5711
TSEL 5725 5713       ; 5712
LD 0 1               ; 5713
LDC 241              ; 5714
CGT                  ; 5715
TSEL 5721 5717       ; 5716
LD 0 1               ; 5717
LDC 240              ; 5718
CGT                  ; 5719
TSEL 9197 9187       ; 5720
LD 0 1               ; 5721
LDC 242              ; 5722
CGT                  ; 5723
TSEL 9217 9207       ; 5724
LD 0 1               ; 5725
LDC 245              ; 5726
CGT                  ; 5727
TSEL 5733 5729       ; 5728
LD 0 1               ; 5729
LDC 244              ; 5730
CGT                  ; 5731
TSEL 9237 9227       ; 5732
LD 0 1               ; 5733
LDC 246              ; 5734
CGT                  ; 5735
TSEL 9257 9247       ; 5736
LD 0 1               ; 5737
LDC 251              ; 5738
CGT                  ; 5739
TSEL 5753 5741       ; 5740
LD 0 1               ; 5741
LDC 249              ; 5742
CGT                  ; 5743
TSEL 5749 5745       ; 5744
LD 0 1               ; 5745
LDC 248              ; 5746
CGT                  ; 5747
TSEL 9277 9267       ; 5748
LD 0 1               ; 5749
LDC 250              ; 5750
CGT                  ; 5751
TSEL 9297 9287       ; 5752
LD 0 1               ; 5753
LDC 253              ; 5754
CGT                  ; 5755
TSEL 5761 5757       ; 5756
LD 0 1               ; 5757
LDC 252              ; 5758
CGT                  ; 5759
TSEL 9317 9307       ; 5760
LD 0 1               ; 5761
LDC 254              ; 5762
CGT                  ; 5763
TSEL 9337 9327       ; 5764
LD 0 1               ; 5765
LDC 127              ; 5766
CGT                  ; 5767
TSEL 6277 5769       ; 5768
LD 0 1               ; 5769
LDC 63               ; 5770
CGT                  ; 5771
TSEL 6025 5773       ; 5772
LD 0 1               ; 5773
LDC 31               ; 5774
CGT                  ; 5775
TSEL 5901 5777       ; 5776
LD 0 1               ; 5777
LDC 15               ; 5778
CGT                  ; 5779
TSEL 5841 5781       ; 5780
LD 0 1               ; 5781
LDC 7                ; 5782
CGT                  ; 5783
TSEL 5813 5785       ; 5784
LD 0 1               ; 5785
LDC 3                ; 5786
CGT                  ; 5787
TSEL 5801 5789       ; 5788
LD 0 1               ; 5789
LDC 1                ; 5790
CGT                  ; 5791
TSEL 5797 5793       ; 5792
LD 0 1               ; 5793
LDC 0                ; 5794
CGT                  ; 5795
TSEL 6803 6793       ; 5796
LD 0 1               ; 5797
LDC 2                ; 5798
CGT                  ; 5799
TSEL 6823 6813       ; 5800
LD 0 1               ; 5801
LDC 5                ; 5802
CGT                  ; 5803
TSEL 5809 5805       ; 5804
LD 0 1               ; 5805
LDC 4                ; 5806
CGT                  ; 5807
TSEL 6843 6833       ; 5808
LD 0 1               ; 5809
LDC 6                ; 5810
CGT                  ; 5811
TSEL 6863 6853       ; 5812
LD 0 1               ; 5813
LDC 11               ; 5814
CGT                  ; 5815
TSEL 5829 5817       ; 5816
LD 0 1               ; 5817
LDC 9                ; 5818
CGT                  ; 5819
TSEL 5825 5821       ; 5820
LD 0 1               ; 5821
LDC 8                ; 5822
CGT                  ; 5823
TSEL 6883 6873       ; 5824
LD 0 1               ; 5825
LDC 10               ; 5826
CGT                  ; 5827
TSEL 6903 6893       ; 5828
LD 0 1               ; 5829
LDC 13               ; 5830
CGT                  ; 5831
TSEL 5837 5833       ; 5832
LD 0 1               ; 5833
LDC 12               ; 5834
CGT                  ; 5835
TSEL 6923 6913       ; 5836
LD 0 1               ; 5837
LDC 14               ; 5838
CGT                  ; 5839
TSEL 6943 6933       ; 5840
LD 0 1               ; 5841
LDC 23               ; 5842
CGT                  ; 5843
TSEL 5873 5845       ; 5844
LD 0 1               ; 5845
LDC 19               ; 5846
CGT                  ; 5847
TSEL 5861 5849       ; 5848
LD 0 1               ; 5849
LDC 17               ; 5850
CGT                  ; 5851
TSEL 5857 5853       ; 5852
LD 0 1               ; 5853
LDC 16               ; 5854
CGT                  ; 5855
TSEL 6963 6953       ; 5856
LD 0 1               ; 5857
LDC 18               ; 5858
CGT                  ; 5859
TSEL 6983 6973       ; 5860
LD 0 1               ; 5861
LDC 21               ; 5862
CGT                  ; 5863
TSEL 5869 5865       ; 5864
LD 0 1               ; 5865
LDC 20               ; 5866
CGT                  ; 5867
TSEL 7003 6993       ; 5868
LD 0 1               ; 5869
LDC 22               ; 5870
CGT                  ; 5871
TSEL 7023 7013       ; 5872
LD 0 1               ; 5873
LDC 27               ; 5874
CGT                  ; 5875
TSEL 5889 5877       ; 5876
LD 0 1               ; 5877
LDC 25               ; 5878
CGT                  ; 5879
TSEL 5885 5881       ; 5880
LD 0 1               ; 5881
LDC 24               ; 5882
CGT                  ; 5883
TSEL 7043 7033       ; 5884
LD 0 1               ; 5885
LDC 26               ; 5886
CGT                  ; 5887
TSEL 7063 7053       ; 5888
LD 0 1               ; 5889
LDC 29               ; 5890
CGT                  ; 5891
TSEL 5897 5893       ; 5892
LD 0 1               ; 5893
LDC 28               ; 5894
CGT                  ; 5895
TSEL 7083 7073       ; 5896
LD 0 1               ; 5897
LDC 30               ; 5898
CGT                  ; 5899
TSEL 7103 7093       ; 5900
LD 0 1               ; 5901
LDC 47               ; 5902
CGT                  ; 5903
TSEL 5965 5905       ; 5904
LD 0 1               ; 5905
LDC 39               ; 5906
CGT                  ; 5907
TSEL 5937 5909       ; 5908
LD 0 1               ; 5909
LDC 35               ; 5910
CGT                  ; 5911
TSEL 5925 5913       ; 5912
LD 0 1               ; 5913
LDC 33               ; 5914
CGT                  ; 5915
TSEL 5921 5917       ; 5916
LD 0 1               ; 5917
LDC 32               ; 5918
CGT                  ; 5919
TSEL 7123 7113       ; 5920
LD 0 1               ; 5921
LDC 34               ; 5922
CGT                  ; 5923
TSEL 7143 7133       ; 5924
LD 0 1               ; 5925
LDC 37               ; 5926
CGT                  ; 5927
TSEL 5933 5929       ; 5928
LD 0 1               ; 5929
LDC 36               ; 5930
CGT                  ; 5931
TSEL 7163 7153       ; 5932
LD 0 1               ; 5933
LDC 38               ; 5934
CGT                  ; 5935
TSEL 7183 7173       ; 5936
LD 0 1               ; 5937
LDC 43               ; 5938
CGT                  ; 5939
TSEL 5953 5941       ; 5940
LD 0 1               ; 5941
LDC 41               ; 5942
CGT                  ; 5943
TSEL 5949 5945       ; 5944
LD 0 1               ; 5945
LDC 40               ; 5946
CGT                  ; 5947
TSEL 7203 7193       ; 5948
LD 0 1               ; 5949
LDC 42               ; 5950
CGT                  ; 5951
TSEL 7223 7213       ; 5952
LD 0 1               ; 5953
LDC 45               ; 5954
CGT                  ; 5955
TSEL 5961 5957       ; 5956
LD 0 1               ; 5957
LDC 44               ; 5958
CGT                  ; 5959
TSEL 7243 7233       ; 5960
LD 0 1               ; 5961
LDC 46               ; 5962
CGT                  ; 5963
TSEL 7263 7253       ; 5964
LD 0 1               ; 5965
LDC 55               ; 5966
CGT                  ; 5967
TSEL 5997 5969       ; 5968
LD 0 1               ; 5969
LDC 51               ; 5970
CGT                  ; 5971
TSEL 5985 5973       ; 5972
LD 0 1               ; 5973
LDC 49               ; 5974
CGT                  ; 5975
TSEL 5981 5977       ; 5976
LD 0 1               ; 5977
LDC 48               ; 5978
CGT                  ; 5979
TSEL 7283 7273       ; 5980
LD 0 1               ; 5981
LDC 50               ; 5982
CGT                  ; 5983
TSEL 7303 7293       ; 5984
LD 0 1               ; 5985
LDC 53               ; 5986
CGT                  ; 5987
TSEL 5993 5989       ; 5988
LD 0 1               ; 5989
LDC 52               ; 5990
CGT                  ; 5991
TSEL 7323 7313       ; 5992
LD 0 1               ; 5993
LDC 54               ; 5994
CGT                  ; 5995
TSEL 7343 7333       ; 5996
LD 0 1               ; 5997
LDC 59               ; 5998
CGT                  ; 5999
TSEL 6013 6001       ; 6000
LD 0 1               ; 6001
LDC 57               ; 6002
CGT                  ; 6003
TSEL 6009 6005       ; 6004
LD 0 1               ; 6005
LDC 56               ; 6006
CGT                  ; 6007
TSEL 7363 7353       ; 6008
LD 0 1               ; 6009
LDC 58               ; 6010
CGT                  ; 6011
TSEL 7383 7373       ; 6012
LD 0 1               ; 6013
LDC 61               ; 6014
CGT                  ; 6015
TSEL 6021 6017       ; 6016
LD 0 1               ; 6017
LDC 60               ; 6018
CGT                  ; 6019
TSEL 7403 7393       ; 6020
LD 0 1               ; 6021
LDC 62               ; 6022
CGT                  ; 6023
TSEL 7423 7413       ; 6024
LD 0 1               ; 6025
LDC 95               ; 6026
CGT                  ; 6027
TSEL 6153 6029       ; 6028
LD 0 1               ; 6029
LDC 79               ; 6030
CGT                  ; 6031
TSEL 6093 6033       ; 6032
LD 0 1               ; 6033
LDC 71               ; 6034
CGT                  ; 6035
TSEL 6065 6037       ; 6036
LD 0 1               ; 6037
LDC 67               ; 6038
CGT                  ; 6039
TSEL 6053 6041       ; 6040
LD 0 1               ; 6041
LDC 65               ; 6042
CGT                  ; 6043
TSEL 6049 6045       ; 6044
LD 0 1               ; 6045
LDC 64               ; 6046
CGT                  ; 6047
TSEL 7443 7433       ; 6048
LD 0 1               ; 6049
LDC 66               ; 6050
CGT                  ; 6051
TSEL 7463 7453       ; 6052
LD 0 1               ; 6053
LDC 69               ; 6054
CGT                  ; 6055
TSEL 6061 6057       ; 6056
LD 0 1               ; 6057
LDC 68               ; 6058
CGT                  ; 6059
TSEL 7483 7473       ; 6060
LD 0 1               ; 6061
LDC 70               ; 6062
CGT                  ; 6063
TSEL 7503 7493       ; 6064
LD 0 1               ; 6065
LDC 75               ; 6066
CGT                  ; 6067
TSEL 6081 6069       ; 6068
LD 0 1               ; 6069
LDC 73               ; 6070
CGT                  ; 6071
TSEL 6077 6073       ; 6072
LD 0 1               ; 6073
LDC 72               ; 6074
CGT                  ; 6075
TSEL 7523 7513       ; 6076
LD 0 1               ; 6077
LDC 74               ; 6078
CGT                  ; 6079
TSEL 7543 7533       ; 6080
LD 0 1               ; 6081
LDC 77               ; 6082
CGT                  ; 6083
TSEL 6089 6085       ; 6084
LD 0 1               ; 6085
LDC 76               ; 6086
CGT                  ; 6087
TSEL 7563 7553       ; 6088
LD 0 1               ; 6089
LDC 78               ; 6090
CGT                  ; 6091
TSEL 7583 7573       ; 6092
LD 0 1               ; 6093
LDC 87               ; 6094
CGT                  ; 6095
TSEL 6125 6097       ; 6096
LD 0 1               ; 6097
LDC 83               ; 6098
CGT                  ; 6099
TSEL 6113 6101       ; 6100
LD 0 1               ; 6101
LDC 81               ; 6102
CGT                  ; 6103
TSEL 6109 6105       ; 6104
LD 0 1               ; 6105
LDC 80               ; 6106
CGT                  ; 6107
TSEL 7603 7593       ; 6108
LD 0 1               ; 6109
LDC 82               ; 6110
CGT                  ; 6111
TSEL 7623 7613       ; 6112
LD 0 1               ; 6113
LDC 85               ; 6114
CGT                  ; 6115
TSEL 6121 6117       ; 6116
LD 0 1               ; 6117
LDC 84               ; 6118
CGT                  ; 6119
TSEL 7643 7633       ; 6120
LD 0 1               ; 6121
LDC 86               ; 6122
CGT                  ; 6123
TSEL 7663 7653       ; 6124
LD 0 1               ; 6125
LDC 91               ; 6126
CGT                  ; 6127
TSEL 6141 6129       ; 6128
LD 0 1               ; 6129
LDC 89               ; 6130
CGT                  ; 6131
TSEL 6137 6133       ; 6132
LD 0 1               ; 6133
LDC 88               ; 6134
CGT                  ; 6135
TSEL 7683 7673       ; 6136
LD 0 1               ; 6137
LDC 90               ; 6138
CGT                  ; 6139
TSEL 7703 7693       ; 6140
LD 0 1               ; 6141
LDC 93               ; 6142
CGT                  ; 6143
TSEL 6149 6145       ; 6144
LD 0 1               ; 6145
LDC 92               ; 6146
CGT                  ; 6147
TSEL 7723 7713       ; 6148
LD 0 1               ; 6149
LDC 94               ; 6150
CGT                  ; 6151
TSEL 7743 7733       ; 6152
LD 0 1               ; 6153
LDC 111              ; 6154
CGT                  ; 6155
TSEL 6217 6157       ; 6156
LD 0 1               ; 6157
LDC 103              ; 6158
CGT                  ; 6159
TSEL 6189 6161       ; 6160
LD 0 1               ; 6161
LDC 99               ; 6162
CGT                  ; 6163
TSEL 6177 6165       ; 6164
LD 0 1               ; 6165
LDC 97               ; 6166
CGT                  ; 6167
TSEL 6173 6169       ; 6168
LD 0 1               ; 6169
LDC 96               ; 6170
CGT                  ; 6171
TSEL 7763 7753       ; 6172
LD 0 1               ; 6173
LDC 98               ; 6174
CGT                  ; 6175
TSEL 7783 7773       ; 6176
LD 0 1               ; 6177
LDC 101              ; 6178
CGT                  ; 6179
TSEL 6185 6181       ; 6180
LD 0 1               ; 6181
LDC 100              ; 6182
CGT                  ; 6183
TSEL 7803 7793       ; 6184
LD 0 1               ; 6185
LDC 102              ; 6186
CGT                  ; 6187
TSEL 7823 7813       ; 6188
LD 0 1               ; 6189
LDC 107              ; 6190
CGT                  ; 6191
TSEL 6205 6193       ; 6192
LD 0 1               ; 6193
LDC 105              ; 6194
CGT                  ; 6195
TSEL 6201 6197       ; 6196
LD 0 1               ; 6197
LDC 104              ; 6198
CGT                  ; 6199
TSEL 7843 7833       ; 6200
LD 0 1               ; 6201
LDC 106              ; 6202
CGT                  ; 6203
TSEL 7863 7853       ; 6204
LD 0 1               ; 6205
LDC 109              ; 6206
CGT                  ; 6207
TSEL 6213 6209       ; 6208
LD 0 1               ; 6209
LDC 108              ; 6210
CGT                  ; 6211
TSEL 7883 7873       ; 6212
LD 0 1               ; 6213
LDC 110              ; 6214
CGT                  ; 6215
TSEL 7903 7893       ; 6216
LD 0 1               ; 6217
LDC 119              ; 6218
CGT                  ; 6219
TSEL 6249 6221       ; 6220
LD 0 1               ; 6221
LDC 115              ; 6222
CGT                  ; 6223
TSEL 6237 6225       ; 6224
LD 0 1               ; 6225
LDC 113              ; 6226
CGT                  ; 6227
TSEL 6233 6229       ; 6228
LD 0 1               ; 6229
LDC 112              ; 6230
CGT                  ; 6231
TSEL 7923 7913       ; 6232
LD 0 1               ; 6233
LDC 114              ; 6234
CGT                  ; 6235
TSEL 7943 7933       ; 6236
LD 0 1               ; 6237
LDC 117              ; 6238
CGT                  ; 6239
TSEL 6245 6241       ; 6240
LD 0 1               ; 6241
LDC 116              ; 6242
CGT                  ; 6243
TSEL 7963 7953       ; 6244
LD 0 1               ; 6245
LDC 118              ; 6246
CGT                  ; 6247
TSEL 7983 7973       ; 6248
LD 0 1               ; 6249
LDC 123              ; 6250
CGT                  ; 6251
TSEL 6265 6253       ; 6252
LD 0 1               ; 6253
LDC 121              ; 6254
CGT                  ; 6255
TSEL 6261 6257       ; 6256
LD 0 1               ; 6257
LDC 120              ; 6258
CGT                  ; 6259
TSEL 8003 7993       ; 6260
LD 0 1               ; 6261
LDC 122              ; 6262
CGT                  ; 6263
TSEL 8023 8013       ; 6264
LD 0 1               ; 6265
LDC 125              ; 6266
CGT                  ; 6267
TSEL 6273 6269       ; 6268
LD 0 1               ; 6269
LDC 124              ; 6270
CGT                  ; 6271
TSEL 8043 8033       ; 6272
LD 0 1               ; 6273
LDC 126              ; 6274
CGT                  ; 6275
TSEL 8063 8053       ; 6276
LD 0 1               ; 6277
LDC 191              ; 6278
CGT                  ; 6279
TSEL 6533 6281       ; 6280
LD 0 1               ; 6281
LDC 159              ; 6282
CGT                  ; 6283
TSEL 6409 6285       ; 6284
LD 0 1               ; 6285
LDC 143              ; 6286
CGT                  ; 6287
TSEL 6349 6289       ; 6288
LD 0 1               ; 6289
LDC 135              ; 6290
CGT                  ; 6291
TSEL 6321 6293       ; 6292
LD 0 1               ; 6293
LDC 131              ; 6294
CGT                  ; 6295
TSEL 6309 6297       ; 6296
LD 0 1               ; 6297
LDC 129              ; 6298
CGT                  ; 6299
TSEL 6305 6301       ; 6300
LD 0 1               ; 6301
LDC 128              ; 6302
CGT                  ; 6303
TSEL 8083 8073       ; 6304
LD 0 1               ; 6305
LDC 130              ; 6306
CGT                  ; 6307
TSEL 8103 8093       ; 6308
LD 0 1               ; 6309
LDC 133              ; 6310
CGT                  ; 6311
TSEL 6317 6313       ; 6312
LD 0 1               ; 6313
LDC 132              ; 6314
CGT                  ; 6315
TSEL 8123 8113       ; 6316
LD 0 1               ; 6317
LDC 134              ; 6318
CGT                  ; 6319
TSEL 8143 8133       ; 6320
LD 0 1               ; 6321
LDC 139              ; 6322
CGT                  ; 6323
TSEL 6337 6325       ; 6324
LD 0 1               ; 6325
LDC 137              ; 6326
CGT                  ; 6327
TSEL 6333 6329       ; 6328
LD 0 1               ; 6329
LDC 136              ; 6330
CGT                  ; 6331
TSEL 8163 8153       ; 6332
LD 0 1               ; 6333
LDC 138              ; 6334
CGT                  ; 6335
TSEL 8183 8173       ; 6336
LD 0 1               ; 6337
LDC 141              ; 6338
CGT                  ; 6339
TSEL 6345 6341       ; 6340
LD 0 1               ; 6341
LDC 140              ; 6342
CGT                  ; 6343
TSEL 8203 8193       ; 6344
LD 0 1               ; 6345
LDC 142              ; 6346
CGT                  ; 6347
TSEL 8223 8213       ; 6348
LD 0 1               ; 6349
LDC 151              ; 6350
CGT                  ; 6351
TSEL 6381 6353       ; 6352
LD 0 1               ; 6353
LDC 147              ; 6354
CGT                  ; 6355
TSEL 6369 6357       ; 6356
LD 0 1               ; 6357
LDC 145              ; 6358
CGT                  ; 6359
TSEL 6365 6361       ; 6360
LD 0 1               ; 6361
LDC 144              ; 6362
CGT                  ; 6363
TSEL 8243 8233       ; 6364
LD 0 1               ; 6365
LDC 146              ; 6366
CGT                  ; 6367
TSEL 8263 8253       ; 6368
LD 0 1               ; 6369
LDC 149              ; 6370
CGT                  ; 6371
TSEL 6377 6373       ; 6372
LD 0 1               ; 6373
LDC 148              ; 6374
CGT                  ; 6375
TSEL 8283 8273       ; 6376
LD 0 1               ; 6377
LDC 150              ; 6378
CGT                  ; 6379
TSEL 8303 8293       ; 6380
LD 0 1               ; 6381
LDC 155              ; 6382
CGT                  ; 6383
TSEL 6397 6385       ; 6384
LD 0 1               ; 6385
LDC 153              ; 6386
CGT                  ; 6387
TSEL 6393 6389       ; 6388
LD 0 1               ; 6389
LDC 152              ; 6390
CGT                  ; 6391
TSEL 8323 8313       ; 6392
LD 0 1               ; 6393
LDC 154              ; 6394
CGT                  ; 6395
TSEL 8343 8333       ; 6396
LD 0 1               ; 6397
LDC 157              ; 6398
CGT                  ; 6399
TSEL 6405 6401       ; 6400
LD 0 1               ; 6401
LDC 156              ; 6402
CGT                  ; 6403
TSEL 8363 8353       ; 6404
LD 0 1               ; 6405
LDC 158              ; 6406
CGT                  ; 6407
TSEL 8383 8373       ; 6408
LD 0 1               ; 6409
LDC 175              ; 6410
CGT                  ; 6411
TSEL 6473 6413       ; 6412
LD 0 1               ; 6413
LDC 167              ; 6414
CGT                  ; 6415
TSEL 6445 6417       ; 6416
LD 0 1               ; 6417
LDC 163              ; 6418
CGT                  ; 6419
TSEL 6433 6421       ; 6420
LD 0 1               ; 6421
LDC 161              ; 6422
CGT                  ; 6423
TSEL 6429 6425       ; 6424
LD 0 1               ; 6425
LDC 160              ; 6426
CGT                  ; 6427
TSEL 8403 8393       ; 6428
LD 0 1               ; 6429
LDC 162              ; 6430
CGT                  ; 6431
TSEL 8423 8413       ; 6432
LD 0 1               ; 6433
LDC 165              ; 6434
CGT                  ; 6435
TSEL 6441 6437       ; 6436
LD 0 1               ; 6437
LDC 164              ; 6438
CGT                  ; 6439
TSEL 8443 8433       ; 6440
LD 0 1               ; 6441
LDC 166              ; 6442
CGT                  ; 6443
TSEL 8463 8453       ; 6444
LD 0 1               ; 6445
LDC 171              ; 6446
CGT                  ; 6447
TSEL 6461 6449       ; 6448
LD 0 1               ; 6449
LDC 169              ; 6450
CGT                  ; 6451
TSEL 6457 6453       ; 6452
LD 0 1               ; 6453
LDC 168              ; 6454
CGT                  ; 6455
TSEL 8483 8473       ; 6456
LD 0 1               ; 6457
LDC 170              ; 6458
CGT                  ; 6459
TSEL 8503 8493       ; 6460
LD 0 1               ; 6461
LDC 173              ; 6462
CGT                  ; 6463
TSEL 6469 6465       ; 6464
LD 0 1               ; 6465
LDC 172              ; 6466
CGT                  ; 6467
TSEL 8523 8513       ; 6468
LD 0 1               ; 6469
LDC 174              ; 6470
CGT                  ; 6471
TSEL 8543 8533       ; 6472
LD 0 1               ; 6473
LDC 183              ; 6474
CGT                  ; 6475
TSEL 6505 6477       ; 6476
LD 0 1               ; 6477
LDC 179              ; 6478
CGT                  ; 6479
TSEL 6493 6481       ; 6480
LD 0 1               ; 6481
LDC 177              ; 6482
CGT                  ; 6483
TSEL 6489 6485       ; 6484
LD 0 1               ; 6485
LDC 176              ; 6486
CGT                  ; 6487
TSEL 8563 8553       ; 6488
LD 0 1               ; 6489
LDC 178              ; 6490
CGT                  ; 6491
TSEL 8583 8573       ; 6492
LD 0 1               ; 6493
LDC 181              ; 6494
CGT                  ; 6495
TSEL 6501 6497       ; 6496
LD 0 1               ; 6497
LDC 180              ; 6498
CGT                  ; 6499
TSEL 8603 8593       ; 6500
LD 0 1               ; 6501
LDC 182              ; 6502
CGT                  ; 6503
TSEL 8623 8613       ; 6504
LD 0 1               ; 6505
LDC 187              ; 6506
CGT                  ; 6507
TSEL 6521 6509       ; 6508
LD 0 1               ; 6509
LDC 185              ; 6510
CGT                  ; 6511
TSEL 6517 6513       ; 6512
LD 0 1               ; 6513
LDC 184              ; 6514
CGT                  ; 6515
TSEL 8643 8633       ; 6516
LD 0 1               ; 6517
LDC 186              ; 6518
CGT                  ; 6519
TSEL 8663 8653       ; 6520
LD 0 1               ; 6521
LDC 189              ; 6522
CGT                  ; 6523
TSEL 6529 6525       ; 6524
LD 0 1               ; 6525
LDC 188              ; 6526
CGT                  ; 6527
TSEL 8683 8673       ; 6528
LD 0 1               ; 6529
LDC 190              ; 6530
CGT                  ; 6531
TSEL 8703 8693       ; 6532
LD 0 1               ; 6533
LDC 223              ; 6534
CGT                  ; 6535
TSEL 6661 6537       ; 6536
LD 0 1               ; 6537
LDC 207              ; 6538
CGT                  ; 6539
TSEL 6601 6541       ; 6540
LD 0 1               ; 6541
LDC 199              ; 6542
CGT                  ; 6543
TSEL 6573 6545       ; 6544
LD 0 1               ; 6545
LDC 195              ; 6546
CGT                  ; 6547
TSEL 6561 6549       ; 6548
LD 0 1               ; 6549
LDC 193              ; 6550
CGT                  ; 6551
TSEL 6557 6553       ; 6552
LD 0 1               ; 6553
LDC 192              ; 6554
CGT                  ; 6555
TSEL 8723 8713       ; 6556
LD 0 1               ; 6557
LDC 194              ; 6558
CGT                  ; 6559
TSEL 8743 8733       ; 6560
LD 0 1               ; 6561
LDC 197              ; 6562
CGT                  ; 6563
TSEL 6569 6565       ; 6564
LD 0 1               ; 6565
LDC 196              ; 6566
CGT                  ; 6567
TSEL 8763 8753       ; 6568
LD 0 1               ; 6569
LDC 198              ; 6570
CGT                  ; 6571
TSEL 8783 8773       ; 6572
LD 0 1               ; 6573
LDC 203              ; 6574
CGT                  ; 6575
TSEL 6589 6577       ; 6576
LD 0 1               ; 6577
LDC 201              ; 6578
CGT                  ; 6579
TSEL 6585 6581       ; 6580
LD 0 1               ; 6581
LDC 200              ; 6582
CGT                  ; 6583
TSEL 8803 8793       ; 6584
LD 0 1               ; 6585
LDC 202              ; 6586
CGT                  ; 6587
TSEL 8823 8813       ; 6588
LD 0 1               ; 6589
LDC 205              ; 6590
CGT                  ; 6591
TSEL 6597 6593       ; 6592
LD 0 1               ; 6593
LDC 204              ; 6594
CGT                  ; 6595
TSEL 8843 8833       ; 6596
LD 0 1               ; 6597
LDC 206              ; 6598
CGT                  ; 6599
TSEL 8863 8853       ; 6600
LD 0 1               ; 6601
LDC 215              ; 6602
CGT                  ; 6603
TSEL 6633 6605       ; 6604
LD 0 1               ; 6605
LDC 211              ; 6606
CGT                  ; 6607
TSEL 6621 6609       ; 6608
LD 0 1               ; 6609
LDC 209              ; 6610
CGT                  ; 6611
TSEL 6617 6613       ; 6612
LD 0 1               ; 6613
LDC 208              ; 6614
CGT                  ; 6615
TSEL 8883 8873       ; 6616
LD 0 1               ; 6617
LDC 210              ; 6618
CGT                  ; 6619
TSEL 8903 8893       ; 6620
LD 0 1               ; 6621
LDC 213              ; 6622
CGT                  ; 6623
TSEL 6629 6625       ; 6624
LD 0 1               ; 6625
LDC 212              ; 6626
CGT                  ; 6627
TSEL 8923 8913       ; 6628
LD 0 1               ; 6629
LDC 214              ; 6630
CGT                  ; 6631
TSEL 8943 8933       ; 6632
LD 0 1               ; 6633
LDC 219              ; 6634
CGT                  ; 6635
TSEL 6649 6637       ; 6636
LD 0 1               ; 6637
LDC 217              ; 6638
CGT                  ; 6639
TSEL 6645 6641       ; 6640
LD 0 1               ; 6641
LDC 216              ; 6642
CGT                  ; 6643
TSEL 8963 8953       ; 6644
LD 0 1               ; 6645
LDC 218              ; 6646
CGT                  ; 6647
TSEL 8983 8973       ; 6648
LD 0 1               ; 6649
LDC 221              ; 6650
CGT                  ; 6651
TSEL 6657 6653       ; 6652
LD 0 1               ; 6653
LDC 220              ; 6654
CGT                  ; 6655
TSEL 9003 8993       ; 6656
LD 0 1               ; 6657
LDC 222              ; 6658
CGT                  ; 6659
TSEL 9023 9013       ; 6660
LD 0 1               ; 6661
LDC 239              ; 6662
CGT                  ; 6663
TSEL 6725 6665       ; 6664
LD 0 1               ; 6665
LDC 231              ; 6666
CGT                  ; 6667
TSEL 6697 6669       ; 6668
LD 0 1               ; 6669
LDC 227              ; 6670
CGT                  ; 6671
TSEL 6685 6673       ; 6672
LD 0 1               ; 6673
LDC 225              ; 6674
CGT                  ; 6675
TSEL 6681 6677       ; 6676
LD 0 1               ; 6677
LDC 224              ; 6678
CGT                  ; 6679
TSEL 9043 9033       ; 6680
LD 0 1               ; 6681
LDC 226              ; 6682
CGT                  ; 6683
TSEL 9063 9053       ; 6684
LD 0 1               ; 6685
LDC 229              ; 6686
CGT                  ; 6687
TSEL 6693 6689       ; 6688
LD 0 1               ; 6689
LDC 228              ; 6690
CGT                  ; 6691
TSEL 9083 9073       ; 6692
LD 0 1               ; 6693
LDC 230              ; 6694
CGT                  ; 6695
TSEL 9103 9093       ; 6696
LD 0 1               ; 6697
LDC 235              ; 6698
CGT                  ; 6699
TSEL 6713 6701       ; 6700
LD 0 1               ; 6701
LDC 233              ; 6702
CGT                  ; 6703
TSEL 6709 6705       ; 6704
LD 0 1               ; 6705
LDC 232              ; 6706
CGT                  ; 6707
TSEL 9123 9113       ; 6708
LD 0 1               ; 6709
LDC 234              ; 6710
CGT                  ; 6711
TSEL 9143 9133       ; 6712
LD 0 1               ; 6713
LDC 237              ; 6714
CGT                  ; 6715
TSEL 6721 6717       ; 6716
LD 0 1               ; 6717
LDC 236              ; 6718
CGT                  ; 6719
TSEL 9163 9153       ; 6720
LD 0 1               ; 6721
LDC 238              ; 6722
CGT                  ; 6723
TSEL 9183 9173       ; 6724
LD 0 1               ; 6725
LDC 247              ; 6726
CGT                  ; 6727
TSEL 6757 6729       ; 6728
LD 0 1               ; 6729
LDC 243              ; 6730
CGT                  ; 6731
TSEL 6745 6733       ; 6732
LD 0 1               ; 6733
LDC 241              ; 6734
CGT                  ; 6735
TSEL 6741 6737       ; 6736
LD 0 1               ; 6737
LDC 240              ; 6738
CGT                  ; 6739
TSEL 9203 9193       ; 6740
LD 0 1               ; 6741
LDC 242              ; 6742
CGT                  ; 6743
TSEL 9223 9213       ; 6744
LD 0 1               ; 6745
LDC 245              ; 6746
CGT                  ; 6747
TSEL 6753 6749       ; 6748
LD 0 1               ; 6749
LDC 244              ; 6750
CGT                  ; 6751
TSEL 9243 9233       ; 6752
LD 0 1               ; 6753
LDC 246              ; 6754
CGT                  ; 6755
TSEL 9263 9253       ; 6756
LD 0 1               ; 6757
LDC 251              ; 6758
CGT                  ; 6759
TSEL 6773 6761       ; 6760
LD 0 1               ; 6761
LDC 249              ; 6762
CGT                  ; 6763
TSEL 6769 6765       ; 6764
LD 0 1               ; 6765
LDC 248              ; 6766
CGT                  ; 6767
TSEL 9283 9273       ; 6768
LD 0 1               ; 6769
LDC 250              ; 6770
CGT                  ; 6771
TSEL 9303 9293       ; 6772
LD 0 1               ; 6773
LDC 253              ; 6774
CGT                  ; 6775
TSEL 6781 6777       ; 6776
LD 0 1               ; 6777
LDC 252              ; 6778
CGT                  ; 6779
TSEL 9323 9313       ; 6780
LD 0 1               ; 6781
LDC 254              ; 6782
CGT                  ; 6783
TSEL 9343 9333       ; 6784
LD  2   0            ; 6785
RTN                  ; 6786
LDF 6785             ; 6787
RTN                  ; 6788
LD  2   0            ; 6789
LD  0   0            ; 6790
ST  2   0            ; 6791
RTN                  ; 6792
LDF 6789             ; 6793
RTN                  ; 6794
LD  2   1            ; 6795
RTN                  ; 6796
LDF 6795             ; 6797
RTN                  ; 6798
LD  2   1            ; 6799
LD  0   0            ; 6800
ST  2   1            ; 6801
RTN                  ; 6802
LDF 6799             ; 6803
RTN                  ; 6804
LD  2   2            ; 6805
RTN                  ; 6806
LDF 6805             ; 6807
RTN                  ; 6808
LD  2   2            ; 6809
LD  0   0            ; 6810
ST  2   2            ; 6811
RTN                  ; 6812
LDF 6809             ; 6813
RTN                  ; 6814
LD  2   3            ; 6815
RTN                  ; 6816
LDF 6815             ; 6817
RTN                  ; 6818
LD  2   3            ; 6819
LD  0   0            ; 6820
ST  2   3            ; 6821
RTN                  ; 6822
LDF 6819             ; 6823
RTN                  ; 6824
LD  2   4            ; 6825
RTN                  ; 6826
LDF 6825             ; 6827
RTN                  ; 6828
LD  2   4            ; 6829
LD  0   0            ; 6830
ST  2   4            ; 6831
RTN                  ; 6832
LDF 6829             ; 6833
RTN                  ; 6834
LD  2   5            ; 6835
RTN                  ; 6836
LDF 6835             ; 6837
RTN                  ; 6838
LD  2   5            ; 6839
LD  0   0            ; 6840
ST  2   5            ; 6841
RTN                  ; 6842
LDF 6839             ; 6843
RTN                  ; 6844
LD  2   6            ; 6845
RTN                  ; 6846
LDF 6845             ; 6847
RTN                  ; 6848
LD  2   6            ; 6849
LD  0   0            ; 6850
ST  2   6            ; 6851
RTN                  ; 6852
LDF 6849             ; 6853
RTN                  ; 6854
LD  2   7            ; 6855
RTN                  ; 6856
LDF 6855             ; 6857
RTN                  ; 6858
LD  2   7            ; 6859
LD  0   0            ; 6860
ST  2   7            ; 6861
RTN                  ; 6862
LDF 6859             ; 6863
RTN                  ; 6864
LD  2   8            ; 6865
RTN                  ; 6866
LDF 6865             ; 6867
RTN                  ; 6868
LD  2   8            ; 6869
LD  0   0            ; 6870
ST  2   8            ; 6871
RTN                  ; 6872
LDF 6869             ; 6873
RTN                  ; 6874
LD  2   9            ; 6875
RTN                  ; 6876
LDF 6875             ; 6877
RTN                  ; 6878
LD  2   9            ; 6879
LD  0   0            ; 6880
ST  2   9            ; 6881
RTN                  ; 6882
LDF 6879             ; 6883
RTN                  ; 6884
LD  2   10           ; 6885
RTN                  ; 6886
LDF 6885             ; 6887
RTN                  ; 6888
LD  2   10           ; 6889
LD  0   0            ; 6890
ST  2   10           ; 6891
RTN                  ; 6892
LDF 6889             ; 6893
RTN                  ; 6894
LD  2   11           ; 6895
RTN                  ; 6896
LDF 6895             ; 6897
RTN                  ; 6898
LD  2   11           ; 6899
LD  0   0            ; 6900
ST  2   11           ; 6901
RTN                  ; 6902
LDF 6899             ; 6903
RTN                  ; 6904
LD  2   12           ; 6905
RTN                  ; 6906
LDF 6905             ; 6907
RTN                  ; 6908
LD  2   12           ; 6909
LD  0   0            ; 6910
ST  2   12           ; 6911
RTN                  ; 6912
LDF 6909             ; 6913
RTN                  ; 6914
LD  2   13           ; 6915
RTN                  ; 6916
LDF 6915             ; 6917
RTN                  ; 6918
LD  2   13           ; 6919
LD  0   0            ; 6920
ST  2   13           ; 6921
RTN                  ; 6922
LDF 6919             ; 6923
RTN                  ; 6924
LD  2   14           ; 6925
RTN                  ; 6926
LDF 6925             ; 6927
RTN                  ; 6928
LD  2   14           ; 6929
LD  0   0            ; 6930
ST  2   14           ; 6931
RTN                  ; 6932
LDF 6929             ; 6933
RTN                  ; 6934
LD  2   15           ; 6935
RTN                  ; 6936
LDF 6935             ; 6937
RTN                  ; 6938
LD  2   15           ; 6939
LD  0   0            ; 6940
ST  2   15           ; 6941
RTN                  ; 6942
LDF 6939             ; 6943
RTN                  ; 6944
LD  2   16           ; 6945
RTN                  ; 6946
LDF 6945             ; 6947
RTN                  ; 6948
LD  2   16           ; 6949
LD  0   0            ; 6950
ST  2   16           ; 6951
RTN                  ; 6952
LDF 6949             ; 6953
RTN                  ; 6954
LD  2   17           ; 6955
RTN                  ; 6956
LDF 6955             ; 6957
RTN                  ; 6958
LD  2   17           ; 6959
LD  0   0            ; 6960
ST  2   17           ; 6961
RTN                  ; 6962
LDF 6959             ; 6963
RTN                  ; 6964
LD  2   18           ; 6965
RTN                  ; 6966
LDF 6965             ; 6967
RTN                  ; 6968
LD  2   18           ; 6969
LD  0   0            ; 6970
ST  2   18           ; 6971
RTN                  ; 6972
LDF 6969             ; 6973
RTN                  ; 6974
LD  2   19           ; 6975
RTN                  ; 6976
LDF 6975             ; 6977
RTN                  ; 6978
LD  2   19           ; 6979
LD  0   0            ; 6980
ST  2   19           ; 6981
RTN                  ; 6982
LDF 6979             ; 6983
RTN                  ; 6984
LD  2   20           ; 6985
RTN                  ; 6986
LDF 6985             ; 6987
RTN                  ; 6988
LD  2   20           ; 6989
LD  0   0            ; 6990
ST  2   20           ; 6991
RTN                  ; 6992
LDF 6989             ; 6993
RTN                  ; 6994
LD  2   21           ; 6995
RTN                  ; 6996
LDF 6995             ; 6997
RTN                  ; 6998
LD  2   21           ; 6999
LD  0   0            ; 7000
ST  2   21           ; 7001
RTN                  ; 7002
LDF 6999             ; 7003
RTN                  ; 7004
LD  2   22           ; 7005
RTN                  ; 7006
LDF 7005             ; 7007
RTN                  ; 7008
LD  2   22           ; 7009
LD  0   0            ; 7010
ST  2   22           ; 7011
RTN                  ; 7012
LDF 7009             ; 7013
RTN                  ; 7014
LD  2   23           ; 7015
RTN                  ; 7016
LDF 7015             ; 7017
RTN                  ; 7018
LD  2   23           ; 7019
LD  0   0            ; 7020
ST  2   23           ; 7021
RTN                  ; 7022
LDF 7019             ; 7023
RTN                  ; 7024
LD  2   24           ; 7025
RTN                  ; 7026
LDF 7025             ; 7027
RTN                  ; 7028
LD  2   24           ; 7029
LD  0   0            ; 7030
ST  2   24           ; 7031
RTN                  ; 7032
LDF 7029             ; 7033
RTN                  ; 7034
LD  2   25           ; 7035
RTN                  ; 7036
LDF 7035             ; 7037
RTN                  ; 7038
LD  2   25           ; 7039
LD  0   0            ; 7040
ST  2   25           ; 7041
RTN                  ; 7042
LDF 7039             ; 7043
RTN                  ; 7044
LD  2   26           ; 7045
RTN                  ; 7046
LDF 7045             ; 7047
RTN                  ; 7048
LD  2   26           ; 7049
LD  0   0            ; 7050
ST  2   26           ; 7051
RTN                  ; 7052
LDF 7049             ; 7053
RTN                  ; 7054
LD  2   27           ; 7055
RTN                  ; 7056
LDF 7055             ; 7057
RTN                  ; 7058
LD  2   27           ; 7059
LD  0   0            ; 7060
ST  2   27           ; 7061
RTN                  ; 7062
LDF 7059             ; 7063
RTN                  ; 7064
LD  2   28           ; 7065
RTN                  ; 7066
LDF 7065             ; 7067
RTN                  ; 7068
LD  2   28           ; 7069
LD  0   0            ; 7070
ST  2   28           ; 7071
RTN                  ; 7072
LDF 7069             ; 7073
RTN                  ; 7074
LD  2   29           ; 7075
RTN                  ; 7076
LDF 7075             ; 7077
RTN                  ; 7078
LD  2   29           ; 7079
LD  0   0            ; 7080
ST  2   29           ; 7081
RTN                  ; 7082
LDF 7079             ; 7083
RTN                  ; 7084
LD  2   30           ; 7085
RTN                  ; 7086
LDF 7085             ; 7087
RTN                  ; 7088
LD  2   30           ; 7089
LD  0   0            ; 7090
ST  2   30           ; 7091
RTN                  ; 7092
LDF 7089             ; 7093
RTN                  ; 7094
LD  2   31           ; 7095
RTN                  ; 7096
LDF 7095             ; 7097
RTN                  ; 7098
LD  2   31           ; 7099
LD  0   0            ; 7100
ST  2   31           ; 7101
RTN                  ; 7102
LDF 7099             ; 7103
RTN                  ; 7104
LD  2   32           ; 7105
RTN                  ; 7106
LDF 7105             ; 7107
RTN                  ; 7108
LD  2   32           ; 7109
LD  0   0            ; 7110
ST  2   32           ; 7111
RTN                  ; 7112
LDF 7109             ; 7113
RTN                  ; 7114
LD  2   33           ; 7115
RTN                  ; 7116
LDF 7115             ; 7117
RTN                  ; 7118
LD  2   33           ; 7119
LD  0   0            ; 7120
ST  2   33           ; 7121
RTN                  ; 7122
LDF 7119             ; 7123
RTN                  ; 7124
LD  2   34           ; 7125
RTN                  ; 7126
LDF 7125             ; 7127
RTN                  ; 7128
LD  2   34           ; 7129
LD  0   0            ; 7130
ST  2   34           ; 7131
RTN                  ; 7132
LDF 7129             ; 7133
RTN                  ; 7134
LD  2   35           ; 7135
RTN                  ; 7136
LDF 7135             ; 7137
RTN                  ; 7138
LD  2   35           ; 7139
LD  0   0            ; 7140
ST  2   35           ; 7141
RTN                  ; 7142
LDF 7139             ; 7143
RTN                  ; 7144
LD  2   36           ; 7145
RTN                  ; 7146
LDF 7145             ; 7147
RTN                  ; 7148
LD  2   36           ; 7149
LD  0   0            ; 7150
ST  2   36           ; 7151
RTN                  ; 7152
LDF 7149             ; 7153
RTN                  ; 7154
LD  2   37           ; 7155
RTN                  ; 7156
LDF 7155             ; 7157
RTN                  ; 7158
LD  2   37           ; 7159
LD  0   0            ; 7160
ST  2   37           ; 7161
RTN                  ; 7162
LDF 7159             ; 7163
RTN                  ; 7164
LD  2   38           ; 7165
RTN                  ; 7166
LDF 7165             ; 7167
RTN                  ; 7168
LD  2   38           ; 7169
LD  0   0            ; 7170
ST  2   38           ; 7171
RTN                  ; 7172
LDF 7169             ; 7173
RTN                  ; 7174
LD  2   39           ; 7175
RTN                  ; 7176
LDF 7175             ; 7177
RTN                  ; 7178
LD  2   39           ; 7179
LD  0   0            ; 7180
ST  2   39           ; 7181
RTN                  ; 7182
LDF 7179             ; 7183
RTN                  ; 7184
LD  2   40           ; 7185
RTN                  ; 7186
LDF 7185             ; 7187
RTN                  ; 7188
LD  2   40           ; 7189
LD  0   0            ; 7190
ST  2   40           ; 7191
RTN                  ; 7192
LDF 7189             ; 7193
RTN                  ; 7194
LD  2   41           ; 7195
RTN                  ; 7196
LDF 7195             ; 7197
RTN                  ; 7198
LD  2   41           ; 7199
LD  0   0            ; 7200
ST  2   41           ; 7201
RTN                  ; 7202
LDF 7199             ; 7203
RTN                  ; 7204
LD  2   42           ; 7205
RTN                  ; 7206
LDF 7205             ; 7207
RTN                  ; 7208
LD  2   42           ; 7209
LD  0   0            ; 7210
ST  2   42           ; 7211
RTN                  ; 7212
LDF 7209             ; 7213
RTN                  ; 7214
LD  2   43           ; 7215
RTN                  ; 7216
LDF 7215             ; 7217
RTN                  ; 7218
LD  2   43           ; 7219
LD  0   0            ; 7220
ST  2   43           ; 7221
RTN                  ; 7222
LDF 7219             ; 7223
RTN                  ; 7224
LD  2   44           ; 7225
RTN                  ; 7226
LDF 7225             ; 7227
RTN                  ; 7228
LD  2   44           ; 7229
LD  0   0            ; 7230
ST  2   44           ; 7231
RTN                  ; 7232
LDF 7229             ; 7233
RTN                  ; 7234
LD  2   45           ; 7235
RTN                  ; 7236
LDF 7235             ; 7237
RTN                  ; 7238
LD  2   45           ; 7239
LD  0   0            ; 7240
ST  2   45           ; 7241
RTN                  ; 7242
LDF 7239             ; 7243
RTN                  ; 7244
LD  2   46           ; 7245
RTN                  ; 7246
LDF 7245             ; 7247
RTN                  ; 7248
LD  2   46           ; 7249
LD  0   0            ; 7250
ST  2   46           ; 7251
RTN                  ; 7252
LDF 7249             ; 7253
RTN                  ; 7254
LD  2   47           ; 7255
RTN                  ; 7256
LDF 7255             ; 7257
RTN                  ; 7258
LD  2   47           ; 7259
LD  0   0            ; 7260
ST  2   47           ; 7261
RTN                  ; 7262
LDF 7259             ; 7263
RTN                  ; 7264
LD  2   48           ; 7265
RTN                  ; 7266
LDF 7265             ; 7267
RTN                  ; 7268
LD  2   48           ; 7269
LD  0   0            ; 7270
ST  2   48           ; 7271
RTN                  ; 7272
LDF 7269             ; 7273
RTN                  ; 7274
LD  2   49           ; 7275
RTN                  ; 7276
LDF 7275             ; 7277
RTN                  ; 7278
LD  2   49           ; 7279
LD  0   0            ; 7280
ST  2   49           ; 7281
RTN                  ; 7282
LDF 7279             ; 7283
RTN                  ; 7284
LD  2   50           ; 7285
RTN                  ; 7286
LDF 7285             ; 7287
RTN                  ; 7288
LD  2   50           ; 7289
LD  0   0            ; 7290
ST  2   50           ; 7291
RTN                  ; 7292
LDF 7289             ; 7293
RTN                  ; 7294
LD  2   51           ; 7295
RTN                  ; 7296
LDF 7295             ; 7297
RTN                  ; 7298
LD  2   51           ; 7299
LD  0   0            ; 7300
ST  2   51           ; 7301
RTN                  ; 7302
LDF 7299             ; 7303
RTN                  ; 7304
LD  2   52           ; 7305
RTN                  ; 7306
LDF 7305             ; 7307
RTN                  ; 7308
LD  2   52           ; 7309
LD  0   0            ; 7310
ST  2   52           ; 7311
RTN                  ; 7312
LDF 7309             ; 7313
RTN                  ; 7314
LD  2   53           ; 7315
RTN                  ; 7316
LDF 7315             ; 7317
RTN                  ; 7318
LD  2   53           ; 7319
LD  0   0            ; 7320
ST  2   53           ; 7321
RTN                  ; 7322
LDF 7319             ; 7323
RTN                  ; 7324
LD  2   54           ; 7325
RTN                  ; 7326
LDF 7325             ; 7327
RTN                  ; 7328
LD  2   54           ; 7329
LD  0   0            ; 7330
ST  2   54           ; 7331
RTN                  ; 7332
LDF 7329             ; 7333
RTN                  ; 7334
LD  2   55           ; 7335
RTN                  ; 7336
LDF 7335             ; 7337
RTN                  ; 7338
LD  2   55           ; 7339
LD  0   0            ; 7340
ST  2   55           ; 7341
RTN                  ; 7342
LDF 7339             ; 7343
RTN                  ; 7344
LD  2   56           ; 7345
RTN                  ; 7346
LDF 7345             ; 7347
RTN                  ; 7348
LD  2   56           ; 7349
LD  0   0            ; 7350
ST  2   56           ; 7351
RTN                  ; 7352
LDF 7349             ; 7353
RTN                  ; 7354
LD  2   57           ; 7355
RTN                  ; 7356
LDF 7355             ; 7357
RTN                  ; 7358
LD  2   57           ; 7359
LD  0   0            ; 7360
ST  2   57           ; 7361
RTN                  ; 7362
LDF 7359             ; 7363
RTN                  ; 7364
LD  2   58           ; 7365
RTN                  ; 7366
LDF 7365             ; 7367
RTN                  ; 7368
LD  2   58           ; 7369
LD  0   0            ; 7370
ST  2   58           ; 7371
RTN                  ; 7372
LDF 7369             ; 7373
RTN                  ; 7374
LD  2   59           ; 7375
RTN                  ; 7376
LDF 7375             ; 7377
RTN                  ; 7378
LD  2   59           ; 7379
LD  0   0            ; 7380
ST  2   59           ; 7381
RTN                  ; 7382
LDF 7379             ; 7383
RTN                  ; 7384
LD  2   60           ; 7385
RTN                  ; 7386
LDF 7385             ; 7387
RTN                  ; 7388
LD  2   60           ; 7389
LD  0   0            ; 7390
ST  2   60           ; 7391
RTN                  ; 7392
LDF 7389             ; 7393
RTN                  ; 7394
LD  2   61           ; 7395
RTN                  ; 7396
LDF 7395             ; 7397
RTN                  ; 7398
LD  2   61           ; 7399
LD  0   0            ; 7400
ST  2   61           ; 7401
RTN                  ; 7402
LDF 7399             ; 7403
RTN                  ; 7404
LD  2   62           ; 7405
RTN                  ; 7406
LDF 7405             ; 7407
RTN                  ; 7408
LD  2   62           ; 7409
LD  0   0            ; 7410
ST  2   62           ; 7411
RTN                  ; 7412
LDF 7409             ; 7413
RTN                  ; 7414
LD  2   63           ; 7415
RTN                  ; 7416
LDF 7415             ; 7417
RTN                  ; 7418
LD  2   63           ; 7419
LD  0   0            ; 7420
ST  2   63           ; 7421
RTN                  ; 7422
LDF 7419             ; 7423
RTN                  ; 7424
LD  2   64           ; 7425
RTN                  ; 7426
LDF 7425             ; 7427
RTN                  ; 7428
LD  2   64           ; 7429
LD  0   0            ; 7430
ST  2   64           ; 7431
RTN                  ; 7432
LDF 7429             ; 7433
RTN                  ; 7434
LD  2   65           ; 7435
RTN                  ; 7436
LDF 7435             ; 7437
RTN                  ; 7438
LD  2   65           ; 7439
LD  0   0            ; 7440
ST  2   65           ; 7441
RTN                  ; 7442
LDF 7439             ; 7443
RTN                  ; 7444
LD  2   66           ; 7445
RTN                  ; 7446
LDF 7445             ; 7447
RTN                  ; 7448
LD  2   66           ; 7449
LD  0   0            ; 7450
ST  2   66           ; 7451
RTN                  ; 7452
LDF 7449             ; 7453
RTN                  ; 7454
LD  2   67           ; 7455
RTN                  ; 7456
LDF 7455             ; 7457
RTN                  ; 7458
LD  2   67           ; 7459
LD  0   0            ; 7460
ST  2   67           ; 7461
RTN                  ; 7462
LDF 7459             ; 7463
RTN                  ; 7464
LD  2   68           ; 7465
RTN                  ; 7466
LDF 7465             ; 7467
RTN                  ; 7468
LD  2   68           ; 7469
LD  0   0            ; 7470
ST  2   68           ; 7471
RTN                  ; 7472
LDF 7469             ; 7473
RTN                  ; 7474
LD  2   69           ; 7475
RTN                  ; 7476
LDF 7475             ; 7477
RTN                  ; 7478
LD  2   69           ; 7479
LD  0   0            ; 7480
ST  2   69           ; 7481
RTN                  ; 7482
LDF 7479             ; 7483
RTN                  ; 7484
LD  2   70           ; 7485
RTN                  ; 7486
LDF 7485             ; 7487
RTN                  ; 7488
LD  2   70           ; 7489
LD  0   0            ; 7490
ST  2   70           ; 7491
RTN                  ; 7492
LDF 7489             ; 7493
RTN                  ; 7494
LD  2   71           ; 7495
RTN                  ; 7496
LDF 7495             ; 7497
RTN                  ; 7498
LD  2   71           ; 7499
LD  0   0            ; 7500
ST  2   71           ; 7501
RTN                  ; 7502
LDF 7499             ; 7503
RTN                  ; 7504
LD  2   72           ; 7505
RTN                  ; 7506
LDF 7505             ; 7507
RTN                  ; 7508
LD  2   72           ; 7509
LD  0   0            ; 7510
ST  2   72           ; 7511
RTN                  ; 7512
LDF 7509             ; 7513
RTN                  ; 7514
LD  2   73           ; 7515
RTN                  ; 7516
LDF 7515             ; 7517
RTN                  ; 7518
LD  2   73           ; 7519
LD  0   0            ; 7520
ST  2   73           ; 7521
RTN                  ; 7522
LDF 7519             ; 7523
RTN                  ; 7524
LD  2   74           ; 7525
RTN                  ; 7526
LDF 7525             ; 7527
RTN                  ; 7528
LD  2   74           ; 7529
LD  0   0            ; 7530
ST  2   74           ; 7531
RTN                  ; 7532
LDF 7529             ; 7533
RTN                  ; 7534
LD  2   75           ; 7535
RTN                  ; 7536
LDF 7535             ; 7537
RTN                  ; 7538
LD  2   75           ; 7539
LD  0   0            ; 7540
ST  2   75           ; 7541
RTN                  ; 7542
LDF 7539             ; 7543
RTN                  ; 7544
LD  2   76           ; 7545
RTN                  ; 7546
LDF 7545             ; 7547
RTN                  ; 7548
LD  2   76           ; 7549
LD  0   0            ; 7550
ST  2   76           ; 7551
RTN                  ; 7552
LDF 7549             ; 7553
RTN                  ; 7554
LD  2   77           ; 7555
RTN                  ; 7556
LDF 7555             ; 7557
RTN                  ; 7558
LD  2   77           ; 7559
LD  0   0            ; 7560
ST  2   77           ; 7561
RTN                  ; 7562
LDF 7559             ; 7563
RTN                  ; 7564
LD  2   78           ; 7565
RTN                  ; 7566
LDF 7565             ; 7567
RTN                  ; 7568
LD  2   78           ; 7569
LD  0   0            ; 7570
ST  2   78           ; 7571
RTN                  ; 7572
LDF 7569             ; 7573
RTN                  ; 7574
LD  2   79           ; 7575
RTN                  ; 7576
LDF 7575             ; 7577
RTN                  ; 7578
LD  2   79           ; 7579
LD  0   0            ; 7580
ST  2   79           ; 7581
RTN                  ; 7582
LDF 7579             ; 7583
RTN                  ; 7584
LD  2   80           ; 7585
RTN                  ; 7586
LDF 7585             ; 7587
RTN                  ; 7588
LD  2   80           ; 7589
LD  0   0            ; 7590
ST  2   80           ; 7591
RTN                  ; 7592
LDF 7589             ; 7593
RTN                  ; 7594
LD  2   81           ; 7595
RTN                  ; 7596
LDF 7595             ; 7597
RTN                  ; 7598
LD  2   81           ; 7599
LD  0   0            ; 7600
ST  2   81           ; 7601
RTN                  ; 7602
LDF 7599             ; 7603
RTN                  ; 7604
LD  2   82           ; 7605
RTN                  ; 7606
LDF 7605             ; 7607
RTN                  ; 7608
LD  2   82           ; 7609
LD  0   0            ; 7610
ST  2   82           ; 7611
RTN                  ; 7612
LDF 7609             ; 7613
RTN                  ; 7614
LD  2   83           ; 7615
RTN                  ; 7616
LDF 7615             ; 7617
RTN                  ; 7618
LD  2   83           ; 7619
LD  0   0            ; 7620
ST  2   83           ; 7621
RTN                  ; 7622
LDF 7619             ; 7623
RTN                  ; 7624
LD  2   84           ; 7625
RTN                  ; 7626
LDF 7625             ; 7627
RTN                  ; 7628
LD  2   84           ; 7629
LD  0   0            ; 7630
ST  2   84           ; 7631
RTN                  ; 7632
LDF 7629             ; 7633
RTN                  ; 7634
LD  2   85           ; 7635
RTN                  ; 7636
LDF 7635             ; 7637
RTN                  ; 7638
LD  2   85           ; 7639
LD  0   0            ; 7640
ST  2   85           ; 7641
RTN                  ; 7642
LDF 7639             ; 7643
RTN                  ; 7644
LD  2   86           ; 7645
RTN                  ; 7646
LDF 7645             ; 7647
RTN                  ; 7648
LD  2   86           ; 7649
LD  0   0            ; 7650
ST  2   86           ; 7651
RTN                  ; 7652
LDF 7649             ; 7653
RTN                  ; 7654
LD  2   87           ; 7655
RTN                  ; 7656
LDF 7655             ; 7657
RTN                  ; 7658
LD  2   87           ; 7659
LD  0   0            ; 7660
ST  2   87           ; 7661
RTN                  ; 7662
LDF 7659             ; 7663
RTN                  ; 7664
LD  2   88           ; 7665
RTN                  ; 7666
LDF 7665             ; 7667
RTN                  ; 7668
LD  2   88           ; 7669
LD  0   0            ; 7670
ST  2   88           ; 7671
RTN                  ; 7672
LDF 7669             ; 7673
RTN                  ; 7674
LD  2   89           ; 7675
RTN                  ; 7676
LDF 7675             ; 7677
RTN                  ; 7678
LD  2   89           ; 7679
LD  0   0            ; 7680
ST  2   89           ; 7681
RTN                  ; 7682
LDF 7679             ; 7683
RTN                  ; 7684
LD  2   90           ; 7685
RTN                  ; 7686
LDF 7685             ; 7687
RTN                  ; 7688
LD  2   90           ; 7689
LD  0   0            ; 7690
ST  2   90           ; 7691
RTN                  ; 7692
LDF 7689             ; 7693
RTN                  ; 7694
LD  2   91           ; 7695
RTN                  ; 7696
LDF 7695             ; 7697
RTN                  ; 7698
LD  2   91           ; 7699
LD  0   0            ; 7700
ST  2   91           ; 7701
RTN                  ; 7702
LDF 7699             ; 7703
RTN                  ; 7704
LD  2   92           ; 7705
RTN                  ; 7706
LDF 7705             ; 7707
RTN                  ; 7708
LD  2   92           ; 7709
LD  0   0            ; 7710
ST  2   92           ; 7711
RTN                  ; 7712
LDF 7709             ; 7713
RTN                  ; 7714
LD  2   93           ; 7715
RTN                  ; 7716
LDF 7715             ; 7717
RTN                  ; 7718
LD  2   93           ; 7719
LD  0   0            ; 7720
ST  2   93           ; 7721
RTN                  ; 7722
LDF 7719             ; 7723
RTN                  ; 7724
LD  2   94           ; 7725
RTN                  ; 7726
LDF 7725             ; 7727
RTN                  ; 7728
LD  2   94           ; 7729
LD  0   0            ; 7730
ST  2   94           ; 7731
RTN                  ; 7732
LDF 7729             ; 7733
RTN                  ; 7734
LD  2   95           ; 7735
RTN                  ; 7736
LDF 7735             ; 7737
RTN                  ; 7738
LD  2   95           ; 7739
LD  0   0            ; 7740
ST  2   95           ; 7741
RTN                  ; 7742
LDF 7739             ; 7743
RTN                  ; 7744
LD  2   96           ; 7745
RTN                  ; 7746
LDF 7745             ; 7747
RTN                  ; 7748
LD  2   96           ; 7749
LD  0   0            ; 7750
ST  2   96           ; 7751
RTN                  ; 7752
LDF 7749             ; 7753
RTN                  ; 7754
LD  2   97           ; 7755
RTN                  ; 7756
LDF 7755             ; 7757
RTN                  ; 7758
LD  2   97           ; 7759
LD  0   0            ; 7760
ST  2   97           ; 7761
RTN                  ; 7762
LDF 7759             ; 7763
RTN                  ; 7764
LD  2   98           ; 7765
RTN                  ; 7766
LDF 7765             ; 7767
RTN                  ; 7768
LD  2   98           ; 7769
LD  0   0            ; 7770
ST  2   98           ; 7771
RTN                  ; 7772
LDF 7769             ; 7773
RTN                  ; 7774
LD  2   99           ; 7775
RTN                  ; 7776
LDF 7775             ; 7777
RTN                  ; 7778
LD  2   99           ; 7779
LD  0   0            ; 7780
ST  2   99           ; 7781
RTN                  ; 7782
LDF 7779             ; 7783
RTN                  ; 7784
LD  2   100          ; 7785
RTN                  ; 7786
LDF 7785             ; 7787
RTN                  ; 7788
LD  2   100          ; 7789
LD  0   0            ; 7790
ST  2   100          ; 7791
RTN                  ; 7792
LDF 7789             ; 7793
RTN                  ; 7794
LD  2   101          ; 7795
RTN                  ; 7796
LDF 7795             ; 7797
RTN                  ; 7798
LD  2   101          ; 7799
LD  0   0            ; 7800
ST  2   101          ; 7801
RTN                  ; 7802
LDF 7799             ; 7803
RTN                  ; 7804
LD  2   102          ; 7805
RTN                  ; 7806
LDF 7805             ; 7807
RTN                  ; 7808
LD  2   102          ; 7809
LD  0   0            ; 7810
ST  2   102          ; 7811
RTN                  ; 7812
LDF 7809             ; 7813
RTN                  ; 7814
LD  2   103          ; 7815
RTN                  ; 7816
LDF 7815             ; 7817
RTN                  ; 7818
LD  2   103          ; 7819
LD  0   0            ; 7820
ST  2   103          ; 7821
RTN                  ; 7822
LDF 7819             ; 7823
RTN                  ; 7824
LD  2   104          ; 7825
RTN                  ; 7826
LDF 7825             ; 7827
RTN                  ; 7828
LD  2   104          ; 7829
LD  0   0            ; 7830
ST  2   104          ; 7831
RTN                  ; 7832
LDF 7829             ; 7833
RTN                  ; 7834
LD  2   105          ; 7835
RTN                  ; 7836
LDF 7835             ; 7837
RTN                  ; 7838
LD  2   105          ; 7839
LD  0   0            ; 7840
ST  2   105          ; 7841
RTN                  ; 7842
LDF 7839             ; 7843
RTN                  ; 7844
LD  2   106          ; 7845
RTN                  ; 7846
LDF 7845             ; 7847
RTN                  ; 7848
LD  2   106          ; 7849
LD  0   0            ; 7850
ST  2   106          ; 7851
RTN                  ; 7852
LDF 7849             ; 7853
RTN                  ; 7854
LD  2   107          ; 7855
RTN                  ; 7856
LDF 7855             ; 7857
RTN                  ; 7858
LD  2   107          ; 7859
LD  0   0            ; 7860
ST  2   107          ; 7861
RTN                  ; 7862
LDF 7859             ; 7863
RTN                  ; 7864
LD  2   108          ; 7865
RTN                  ; 7866
LDF 7865             ; 7867
RTN                  ; 7868
LD  2   108          ; 7869
LD  0   0            ; 7870
ST  2   108          ; 7871
RTN                  ; 7872
LDF 7869             ; 7873
RTN                  ; 7874
LD  2   109          ; 7875
RTN                  ; 7876
LDF 7875             ; 7877
RTN                  ; 7878
LD  2   109          ; 7879
LD  0   0            ; 7880
ST  2   109          ; 7881
RTN                  ; 7882
LDF 7879             ; 7883
RTN                  ; 7884
LD  2   110          ; 7885
RTN                  ; 7886
LDF 7885             ; 7887
RTN                  ; 7888
LD  2   110          ; 7889
LD  0   0            ; 7890
ST  2   110          ; 7891
RTN                  ; 7892
LDF 7889             ; 7893
RTN                  ; 7894
LD  2   111          ; 7895
RTN                  ; 7896
LDF 7895             ; 7897
RTN                  ; 7898
LD  2   111          ; 7899
LD  0   0            ; 7900
ST  2   111          ; 7901
RTN                  ; 7902
LDF 7899             ; 7903
RTN                  ; 7904
LD  2   112          ; 7905
RTN                  ; 7906
LDF 7905             ; 7907
RTN                  ; 7908
LD  2   112          ; 7909
LD  0   0            ; 7910
ST  2   112          ; 7911
RTN                  ; 7912
LDF 7909             ; 7913
RTN                  ; 7914
LD  2   113          ; 7915
RTN                  ; 7916
LDF 7915             ; 7917
RTN                  ; 7918
LD  2   113          ; 7919
LD  0   0            ; 7920
ST  2   113          ; 7921
RTN                  ; 7922
LDF 7919             ; 7923
RTN                  ; 7924
LD  2   114          ; 7925
RTN                  ; 7926
LDF 7925             ; 7927
RTN                  ; 7928
LD  2   114          ; 7929
LD  0   0            ; 7930
ST  2   114          ; 7931
RTN                  ; 7932
LDF 7929             ; 7933
RTN                  ; 7934
LD  2   115          ; 7935
RTN                  ; 7936
LDF 7935             ; 7937
RTN                  ; 7938
LD  2   115          ; 7939
LD  0   0            ; 7940
ST  2   115          ; 7941
RTN                  ; 7942
LDF 7939             ; 7943
RTN                  ; 7944
LD  2   116          ; 7945
RTN                  ; 7946
LDF 7945             ; 7947
RTN                  ; 7948
LD  2   116          ; 7949
LD  0   0            ; 7950
ST  2   116          ; 7951
RTN                  ; 7952
LDF 7949             ; 7953
RTN                  ; 7954
LD  2   117          ; 7955
RTN                  ; 7956
LDF 7955             ; 7957
RTN                  ; 7958
LD  2   117          ; 7959
LD  0   0            ; 7960
ST  2   117          ; 7961
RTN                  ; 7962
LDF 7959             ; 7963
RTN                  ; 7964
LD  2   118          ; 7965
RTN                  ; 7966
LDF 7965             ; 7967
RTN                  ; 7968
LD  2   118          ; 7969
LD  0   0            ; 7970
ST  2   118          ; 7971
RTN                  ; 7972
LDF 7969             ; 7973
RTN                  ; 7974
LD  2   119          ; 7975
RTN                  ; 7976
LDF 7975             ; 7977
RTN                  ; 7978
LD  2   119          ; 7979
LD  0   0            ; 7980
ST  2   119          ; 7981
RTN                  ; 7982
LDF 7979             ; 7983
RTN                  ; 7984
LD  2   120          ; 7985
RTN                  ; 7986
LDF 7985             ; 7987
RTN                  ; 7988
LD  2   120          ; 7989
LD  0   0            ; 7990
ST  2   120          ; 7991
RTN                  ; 7992
LDF 7989             ; 7993
RTN                  ; 7994
LD  2   121          ; 7995
RTN                  ; 7996
LDF 7995             ; 7997
RTN                  ; 7998
LD  2   121          ; 7999
LD  0   0            ; 8000
ST  2   121          ; 8001
RTN                  ; 8002
LDF 7999             ; 8003
RTN                  ; 8004
LD  2   122          ; 8005
RTN                  ; 8006
LDF 8005             ; 8007
RTN                  ; 8008
LD  2   122          ; 8009
LD  0   0            ; 8010
ST  2   122          ; 8011
RTN                  ; 8012
LDF 8009             ; 8013
RTN                  ; 8014
LD  2   123          ; 8015
RTN                  ; 8016
LDF 8015             ; 8017
RTN                  ; 8018
LD  2   123          ; 8019
LD  0   0            ; 8020
ST  2   123          ; 8021
RTN                  ; 8022
LDF 8019             ; 8023
RTN                  ; 8024
LD  2   124          ; 8025
RTN                  ; 8026
LDF 8025             ; 8027
RTN                  ; 8028
LD  2   124          ; 8029
LD  0   0            ; 8030
ST  2   124          ; 8031
RTN                  ; 8032
LDF 8029             ; 8033
RTN                  ; 8034
LD  2   125          ; 8035
RTN                  ; 8036
LDF 8035             ; 8037
RTN                  ; 8038
LD  2   125          ; 8039
LD  0   0            ; 8040
ST  2   125          ; 8041
RTN                  ; 8042
LDF 8039             ; 8043
RTN                  ; 8044
LD  2   126          ; 8045
RTN                  ; 8046
LDF 8045             ; 8047
RTN                  ; 8048
LD  2   126          ; 8049
LD  0   0            ; 8050
ST  2   126          ; 8051
RTN                  ; 8052
LDF 8049             ; 8053
RTN                  ; 8054
LD  2   127          ; 8055
RTN                  ; 8056
LDF 8055             ; 8057
RTN                  ; 8058
LD  2   127          ; 8059
LD  0   0            ; 8060
ST  2   127          ; 8061
RTN                  ; 8062
LDF 8059             ; 8063
RTN                  ; 8064
LD  2   128          ; 8065
RTN                  ; 8066
LDF 8065             ; 8067
RTN                  ; 8068
LD  2   128          ; 8069
LD  0   0            ; 8070
ST  2   128          ; 8071
RTN                  ; 8072
LDF 8069             ; 8073
RTN                  ; 8074
LD  2   129          ; 8075
RTN                  ; 8076
LDF 8075             ; 8077
RTN                  ; 8078
LD  2   129          ; 8079
LD  0   0            ; 8080
ST  2   129          ; 8081
RTN                  ; 8082
LDF 8079             ; 8083
RTN                  ; 8084
LD  2   130          ; 8085
RTN                  ; 8086
LDF 8085             ; 8087
RTN                  ; 8088
LD  2   130          ; 8089
LD  0   0            ; 8090
ST  2   130          ; 8091
RTN                  ; 8092
LDF 8089             ; 8093
RTN                  ; 8094
LD  2   131          ; 8095
RTN                  ; 8096
LDF 8095             ; 8097
RTN                  ; 8098
LD  2   131          ; 8099
LD  0   0            ; 8100
ST  2   131          ; 8101
RTN                  ; 8102
LDF 8099             ; 8103
RTN                  ; 8104
LD  2   132          ; 8105
RTN                  ; 8106
LDF 8105             ; 8107
RTN                  ; 8108
LD  2   132          ; 8109
LD  0   0            ; 8110
ST  2   132          ; 8111
RTN                  ; 8112
LDF 8109             ; 8113
RTN                  ; 8114
LD  2   133          ; 8115
RTN                  ; 8116
LDF 8115             ; 8117
RTN                  ; 8118
LD  2   133          ; 8119
LD  0   0            ; 8120
ST  2   133          ; 8121
RTN                  ; 8122
LDF 8119             ; 8123
RTN                  ; 8124
LD  2   134          ; 8125
RTN                  ; 8126
LDF 8125             ; 8127
RTN                  ; 8128
LD  2   134          ; 8129
LD  0   0            ; 8130
ST  2   134          ; 8131
RTN                  ; 8132
LDF 8129             ; 8133
RTN                  ; 8134
LD  2   135          ; 8135
RTN                  ; 8136
LDF 8135             ; 8137
RTN                  ; 8138
LD  2   135          ; 8139
LD  0   0            ; 8140
ST  2   135          ; 8141
RTN                  ; 8142
LDF 8139             ; 8143
RTN                  ; 8144
LD  2   136          ; 8145
RTN                  ; 8146
LDF 8145             ; 8147
RTN                  ; 8148
LD  2   136          ; 8149
LD  0   0            ; 8150
ST  2   136          ; 8151
RTN                  ; 8152
LDF 8149             ; 8153
RTN                  ; 8154
LD  2   137          ; 8155
RTN                  ; 8156
LDF 8155             ; 8157
RTN                  ; 8158
LD  2   137          ; 8159
LD  0   0            ; 8160
ST  2   137          ; 8161
RTN                  ; 8162
LDF 8159             ; 8163
RTN                  ; 8164
LD  2   138          ; 8165
RTN                  ; 8166
LDF 8165             ; 8167
RTN                  ; 8168
LD  2   138          ; 8169
LD  0   0            ; 8170
ST  2   138          ; 8171
RTN                  ; 8172
LDF 8169             ; 8173
RTN                  ; 8174
LD  2   139          ; 8175
RTN                  ; 8176
LDF 8175             ; 8177
RTN                  ; 8178
LD  2   139          ; 8179
LD  0   0            ; 8180
ST  2   139          ; 8181
RTN                  ; 8182
LDF 8179             ; 8183
RTN                  ; 8184
LD  2   140          ; 8185
RTN                  ; 8186
LDF 8185             ; 8187
RTN                  ; 8188
LD  2   140          ; 8189
LD  0   0            ; 8190
ST  2   140          ; 8191
RTN                  ; 8192
LDF 8189             ; 8193
RTN                  ; 8194
LD  2   141          ; 8195
RTN                  ; 8196
LDF 8195             ; 8197
RTN                  ; 8198
LD  2   141          ; 8199
LD  0   0            ; 8200
ST  2   141          ; 8201
RTN                  ; 8202
LDF 8199             ; 8203
RTN                  ; 8204
LD  2   142          ; 8205
RTN                  ; 8206
LDF 8205             ; 8207
RTN                  ; 8208
LD  2   142          ; 8209
LD  0   0            ; 8210
ST  2   142          ; 8211
RTN                  ; 8212
LDF 8209             ; 8213
RTN                  ; 8214
LD  2   143          ; 8215
RTN                  ; 8216
LDF 8215             ; 8217
RTN                  ; 8218
LD  2   143          ; 8219
LD  0   0            ; 8220
ST  2   143          ; 8221
RTN                  ; 8222
LDF 8219             ; 8223
RTN                  ; 8224
LD  2   144          ; 8225
RTN                  ; 8226
LDF 8225             ; 8227
RTN                  ; 8228
LD  2   144          ; 8229
LD  0   0            ; 8230
ST  2   144          ; 8231
RTN                  ; 8232
LDF 8229             ; 8233
RTN                  ; 8234
LD  2   145          ; 8235
RTN                  ; 8236
LDF 8235             ; 8237
RTN                  ; 8238
LD  2   145          ; 8239
LD  0   0            ; 8240
ST  2   145          ; 8241
RTN                  ; 8242
LDF 8239             ; 8243
RTN                  ; 8244
LD  2   146          ; 8245
RTN                  ; 8246
LDF 8245             ; 8247
RTN                  ; 8248
LD  2   146          ; 8249
LD  0   0            ; 8250
ST  2   146          ; 8251
RTN                  ; 8252
LDF 8249             ; 8253
RTN                  ; 8254
LD  2   147          ; 8255
RTN                  ; 8256
LDF 8255             ; 8257
RTN                  ; 8258
LD  2   147          ; 8259
LD  0   0            ; 8260
ST  2   147          ; 8261
RTN                  ; 8262
LDF 8259             ; 8263
RTN                  ; 8264
LD  2   148          ; 8265
RTN                  ; 8266
LDF 8265             ; 8267
RTN                  ; 8268
LD  2   148          ; 8269
LD  0   0            ; 8270
ST  2   148          ; 8271
RTN                  ; 8272
LDF 8269             ; 8273
RTN                  ; 8274
LD  2   149          ; 8275
RTN                  ; 8276
LDF 8275             ; 8277
RTN                  ; 8278
LD  2   149          ; 8279
LD  0   0            ; 8280
ST  2   149          ; 8281
RTN                  ; 8282
LDF 8279             ; 8283
RTN                  ; 8284
LD  2   150          ; 8285
RTN                  ; 8286
LDF 8285             ; 8287
RTN                  ; 8288
LD  2   150          ; 8289
LD  0   0            ; 8290
ST  2   150          ; 8291
RTN                  ; 8292
LDF 8289             ; 8293
RTN                  ; 8294
LD  2   151          ; 8295
RTN                  ; 8296
LDF 8295             ; 8297
RTN                  ; 8298
LD  2   151          ; 8299
LD  0   0            ; 8300
ST  2   151          ; 8301
RTN                  ; 8302
LDF 8299             ; 8303
RTN                  ; 8304
LD  2   152          ; 8305
RTN                  ; 8306
LDF 8305             ; 8307
RTN                  ; 8308
LD  2   152          ; 8309
LD  0   0            ; 8310
ST  2   152          ; 8311
RTN                  ; 8312
LDF 8309             ; 8313
RTN                  ; 8314
LD  2   153          ; 8315
RTN                  ; 8316
LDF 8315             ; 8317
RTN                  ; 8318
LD  2   153          ; 8319
LD  0   0            ; 8320
ST  2   153          ; 8321
RTN                  ; 8322
LDF 8319             ; 8323
RTN                  ; 8324
LD  2   154          ; 8325
RTN                  ; 8326
LDF 8325             ; 8327
RTN                  ; 8328
LD  2   154          ; 8329
LD  0   0            ; 8330
ST  2   154          ; 8331
RTN                  ; 8332
LDF 8329             ; 8333
RTN                  ; 8334
LD  2   155          ; 8335
RTN                  ; 8336
LDF 8335             ; 8337
RTN                  ; 8338
LD  2   155          ; 8339
LD  0   0            ; 8340
ST  2   155          ; 8341
RTN                  ; 8342
LDF 8339             ; 8343
RTN                  ; 8344
LD  2   156          ; 8345
RTN                  ; 8346
LDF 8345             ; 8347
RTN                  ; 8348
LD  2   156          ; 8349
LD  0   0            ; 8350
ST  2   156          ; 8351
RTN                  ; 8352
LDF 8349             ; 8353
RTN                  ; 8354
LD  2   157          ; 8355
RTN                  ; 8356
LDF 8355             ; 8357
RTN                  ; 8358
LD  2   157          ; 8359
LD  0   0            ; 8360
ST  2   157          ; 8361
RTN                  ; 8362
LDF 8359             ; 8363
RTN                  ; 8364
LD  2   158          ; 8365
RTN                  ; 8366
LDF 8365             ; 8367
RTN                  ; 8368
LD  2   158          ; 8369
LD  0   0            ; 8370
ST  2   158          ; 8371
RTN                  ; 8372
LDF 8369             ; 8373
RTN                  ; 8374
LD  2   159          ; 8375
RTN                  ; 8376
LDF 8375             ; 8377
RTN                  ; 8378
LD  2   159          ; 8379
LD  0   0            ; 8380
ST  2   159          ; 8381
RTN                  ; 8382
LDF 8379             ; 8383
RTN                  ; 8384
LD  2   160          ; 8385
RTN                  ; 8386
LDF 8385             ; 8387
RTN                  ; 8388
LD  2   160          ; 8389
LD  0   0            ; 8390
ST  2   160          ; 8391
RTN                  ; 8392
LDF 8389             ; 8393
RTN                  ; 8394
LD  2   161          ; 8395
RTN                  ; 8396
LDF 8395             ; 8397
RTN                  ; 8398
LD  2   161          ; 8399
LD  0   0            ; 8400
ST  2   161          ; 8401
RTN                  ; 8402
LDF 8399             ; 8403
RTN                  ; 8404
LD  2   162          ; 8405
RTN                  ; 8406
LDF 8405             ; 8407
RTN                  ; 8408
LD  2   162          ; 8409
LD  0   0            ; 8410
ST  2   162          ; 8411
RTN                  ; 8412
LDF 8409             ; 8413
RTN                  ; 8414
LD  2   163          ; 8415
RTN                  ; 8416
LDF 8415             ; 8417
RTN                  ; 8418
LD  2   163          ; 8419
LD  0   0            ; 8420
ST  2   163          ; 8421
RTN                  ; 8422
LDF 8419             ; 8423
RTN                  ; 8424
LD  2   164          ; 8425
RTN                  ; 8426
LDF 8425             ; 8427
RTN                  ; 8428
LD  2   164          ; 8429
LD  0   0            ; 8430
ST  2   164          ; 8431
RTN                  ; 8432
LDF 8429             ; 8433
RTN                  ; 8434
LD  2   165          ; 8435
RTN                  ; 8436
LDF 8435             ; 8437
RTN                  ; 8438
LD  2   165          ; 8439
LD  0   0            ; 8440
ST  2   165          ; 8441
RTN                  ; 8442
LDF 8439             ; 8443
RTN                  ; 8444
LD  2   166          ; 8445
RTN                  ; 8446
LDF 8445             ; 8447
RTN                  ; 8448
LD  2   166          ; 8449
LD  0   0            ; 8450
ST  2   166          ; 8451
RTN                  ; 8452
LDF 8449             ; 8453
RTN                  ; 8454
LD  2   167          ; 8455
RTN                  ; 8456
LDF 8455             ; 8457
RTN                  ; 8458
LD  2   167          ; 8459
LD  0   0            ; 8460
ST  2   167          ; 8461
RTN                  ; 8462
LDF 8459             ; 8463
RTN                  ; 8464
LD  2   168          ; 8465
RTN                  ; 8466
LDF 8465             ; 8467
RTN                  ; 8468
LD  2   168          ; 8469
LD  0   0            ; 8470
ST  2   168          ; 8471
RTN                  ; 8472
LDF 8469             ; 8473
RTN                  ; 8474
LD  2   169          ; 8475
RTN                  ; 8476
LDF 8475             ; 8477
RTN                  ; 8478
LD  2   169          ; 8479
LD  0   0            ; 8480
ST  2   169          ; 8481
RTN                  ; 8482
LDF 8479             ; 8483
RTN                  ; 8484
LD  2   170          ; 8485
RTN                  ; 8486
LDF 8485             ; 8487
RTN                  ; 8488
LD  2   170          ; 8489
LD  0   0            ; 8490
ST  2   170          ; 8491
RTN                  ; 8492
LDF 8489             ; 8493
RTN                  ; 8494
LD  2   171          ; 8495
RTN                  ; 8496
LDF 8495             ; 8497
RTN                  ; 8498
LD  2   171          ; 8499
LD  0   0            ; 8500
ST  2   171          ; 8501
RTN                  ; 8502
LDF 8499             ; 8503
RTN                  ; 8504
LD  2   172          ; 8505
RTN                  ; 8506
LDF 8505             ; 8507
RTN                  ; 8508
LD  2   172          ; 8509
LD  0   0            ; 8510
ST  2   172          ; 8511
RTN                  ; 8512
LDF 8509             ; 8513
RTN                  ; 8514
LD  2   173          ; 8515
RTN                  ; 8516
LDF 8515             ; 8517
RTN                  ; 8518
LD  2   173          ; 8519
LD  0   0            ; 8520
ST  2   173          ; 8521
RTN                  ; 8522
LDF 8519             ; 8523
RTN                  ; 8524
LD  2   174          ; 8525
RTN                  ; 8526
LDF 8525             ; 8527
RTN                  ; 8528
LD  2   174          ; 8529
LD  0   0            ; 8530
ST  2   174          ; 8531
RTN                  ; 8532
LDF 8529             ; 8533
RTN                  ; 8534
LD  2   175          ; 8535
RTN                  ; 8536
LDF 8535             ; 8537
RTN                  ; 8538
LD  2   175          ; 8539
LD  0   0            ; 8540
ST  2   175          ; 8541
RTN                  ; 8542
LDF 8539             ; 8543
RTN                  ; 8544
LD  2   176          ; 8545
RTN                  ; 8546
LDF 8545             ; 8547
RTN                  ; 8548
LD  2   176          ; 8549
LD  0   0            ; 8550
ST  2   176          ; 8551
RTN                  ; 8552
LDF 8549             ; 8553
RTN                  ; 8554
LD  2   177          ; 8555
RTN                  ; 8556
LDF 8555             ; 8557
RTN                  ; 8558
LD  2   177          ; 8559
LD  0   0            ; 8560
ST  2   177          ; 8561
RTN                  ; 8562
LDF 8559             ; 8563
RTN                  ; 8564
LD  2   178          ; 8565
RTN                  ; 8566
LDF 8565             ; 8567
RTN                  ; 8568
LD  2   178          ; 8569
LD  0   0            ; 8570
ST  2   178          ; 8571
RTN                  ; 8572
LDF 8569             ; 8573
RTN                  ; 8574
LD  2   179          ; 8575
RTN                  ; 8576
LDF 8575             ; 8577
RTN                  ; 8578
LD  2   179          ; 8579
LD  0   0            ; 8580
ST  2   179          ; 8581
RTN                  ; 8582
LDF 8579             ; 8583
RTN                  ; 8584
LD  2   180          ; 8585
RTN                  ; 8586
LDF 8585             ; 8587
RTN                  ; 8588
LD  2   180          ; 8589
LD  0   0            ; 8590
ST  2   180          ; 8591
RTN                  ; 8592
LDF 8589             ; 8593
RTN                  ; 8594
LD  2   181          ; 8595
RTN                  ; 8596
LDF 8595             ; 8597
RTN                  ; 8598
LD  2   181          ; 8599
LD  0   0            ; 8600
ST  2   181          ; 8601
RTN                  ; 8602
LDF 8599             ; 8603
RTN                  ; 8604
LD  2   182          ; 8605
RTN                  ; 8606
LDF 8605             ; 8607
RTN                  ; 8608
LD  2   182          ; 8609
LD  0   0            ; 8610
ST  2   182          ; 8611
RTN                  ; 8612
LDF 8609             ; 8613
RTN                  ; 8614
LD  2   183          ; 8615
RTN                  ; 8616
LDF 8615             ; 8617
RTN                  ; 8618
LD  2   183          ; 8619
LD  0   0            ; 8620
ST  2   183          ; 8621
RTN                  ; 8622
LDF 8619             ; 8623
RTN                  ; 8624
LD  2   184          ; 8625
RTN                  ; 8626
LDF 8625             ; 8627
RTN                  ; 8628
LD  2   184          ; 8629
LD  0   0            ; 8630
ST  2   184          ; 8631
RTN                  ; 8632
LDF 8629             ; 8633
RTN                  ; 8634
LD  2   185          ; 8635
RTN                  ; 8636
LDF 8635             ; 8637
RTN                  ; 8638
LD  2   185          ; 8639
LD  0   0            ; 8640
ST  2   185          ; 8641
RTN                  ; 8642
LDF 8639             ; 8643
RTN                  ; 8644
LD  2   186          ; 8645
RTN                  ; 8646
LDF 8645             ; 8647
RTN                  ; 8648
LD  2   186          ; 8649
LD  0   0            ; 8650
ST  2   186          ; 8651
RTN                  ; 8652
LDF 8649             ; 8653
RTN                  ; 8654
LD  2   187          ; 8655
RTN                  ; 8656
LDF 8655             ; 8657
RTN                  ; 8658
LD  2   187          ; 8659
LD  0   0            ; 8660
ST  2   187          ; 8661
RTN                  ; 8662
LDF 8659             ; 8663
RTN                  ; 8664
LD  2   188          ; 8665
RTN                  ; 8666
LDF 8665             ; 8667
RTN                  ; 8668
LD  2   188          ; 8669
LD  0   0            ; 8670
ST  2   188          ; 8671
RTN                  ; 8672
LDF 8669             ; 8673
RTN                  ; 8674
LD  2   189          ; 8675
RTN                  ; 8676
LDF 8675             ; 8677
RTN                  ; 8678
LD  2   189          ; 8679
LD  0   0            ; 8680
ST  2   189          ; 8681
RTN                  ; 8682
LDF 8679             ; 8683
RTN                  ; 8684
LD  2   190          ; 8685
RTN                  ; 8686
LDF 8685             ; 8687
RTN                  ; 8688
LD  2   190          ; 8689
LD  0   0            ; 8690
ST  2   190          ; 8691
RTN                  ; 8692
LDF 8689             ; 8693
RTN                  ; 8694
LD  2   191          ; 8695
RTN                  ; 8696
LDF 8695             ; 8697
RTN                  ; 8698
LD  2   191          ; 8699
LD  0   0            ; 8700
ST  2   191          ; 8701
RTN                  ; 8702
LDF 8699             ; 8703
RTN                  ; 8704
LD  2   192          ; 8705
RTN                  ; 8706
LDF 8705             ; 8707
RTN                  ; 8708
LD  2   192          ; 8709
LD  0   0            ; 8710
ST  2   192          ; 8711
RTN                  ; 8712
LDF 8709             ; 8713
RTN                  ; 8714
LD  2   193          ; 8715
RTN                  ; 8716
LDF 8715             ; 8717
RTN                  ; 8718
LD  2   193          ; 8719
LD  0   0            ; 8720
ST  2   193          ; 8721
RTN                  ; 8722
LDF 8719             ; 8723
RTN                  ; 8724
LD  2   194          ; 8725
RTN                  ; 8726
LDF 8725             ; 8727
RTN                  ; 8728
LD  2   194          ; 8729
LD  0   0            ; 8730
ST  2   194          ; 8731
RTN                  ; 8732
LDF 8729             ; 8733
RTN                  ; 8734
LD  2   195          ; 8735
RTN                  ; 8736
LDF 8735             ; 8737
RTN                  ; 8738
LD  2   195          ; 8739
LD  0   0            ; 8740
ST  2   195          ; 8741
RTN                  ; 8742
LDF 8739             ; 8743
RTN                  ; 8744
LD  2   196          ; 8745
RTN                  ; 8746
LDF 8745             ; 8747
RTN                  ; 8748
LD  2   196          ; 8749
LD  0   0            ; 8750
ST  2   196          ; 8751
RTN                  ; 8752
LDF 8749             ; 8753
RTN                  ; 8754
LD  2   197          ; 8755
RTN                  ; 8756
LDF 8755             ; 8757
RTN                  ; 8758
LD  2   197          ; 8759
LD  0   0            ; 8760
ST  2   197          ; 8761
RTN                  ; 8762
LDF 8759             ; 8763
RTN                  ; 8764
LD  2   198          ; 8765
RTN                  ; 8766
LDF 8765             ; 8767
RTN                  ; 8768
LD  2   198          ; 8769
LD  0   0            ; 8770
ST  2   198          ; 8771
RTN                  ; 8772
LDF 8769             ; 8773
RTN                  ; 8774
LD  2   199          ; 8775
RTN                  ; 8776
LDF 8775             ; 8777
RTN                  ; 8778
LD  2   199          ; 8779
LD  0   0            ; 8780
ST  2   199          ; 8781
RTN                  ; 8782
LDF 8779             ; 8783
RTN                  ; 8784
LD  2   200          ; 8785
RTN                  ; 8786
LDF 8785             ; 8787
RTN                  ; 8788
LD  2   200          ; 8789
LD  0   0            ; 8790
ST  2   200          ; 8791
RTN                  ; 8792
LDF 8789             ; 8793
RTN                  ; 8794
LD  2   201          ; 8795
RTN                  ; 8796
LDF 8795             ; 8797
RTN                  ; 8798
LD  2   201          ; 8799
LD  0   0            ; 8800
ST  2   201          ; 8801
RTN                  ; 8802
LDF 8799             ; 8803
RTN                  ; 8804
LD  2   202          ; 8805
RTN                  ; 8806
LDF 8805             ; 8807
RTN                  ; 8808
LD  2   202          ; 8809
LD  0   0            ; 8810
ST  2   202          ; 8811
RTN                  ; 8812
LDF 8809             ; 8813
RTN                  ; 8814
LD  2   203          ; 8815
RTN                  ; 8816
LDF 8815             ; 8817
RTN                  ; 8818
LD  2   203          ; 8819
LD  0   0            ; 8820
ST  2   203          ; 8821
RTN                  ; 8822
LDF 8819             ; 8823
RTN                  ; 8824
LD  2   204          ; 8825
RTN                  ; 8826
LDF 8825             ; 8827
RTN                  ; 8828
LD  2   204          ; 8829
LD  0   0            ; 8830
ST  2   204          ; 8831
RTN                  ; 8832
LDF 8829             ; 8833
RTN                  ; 8834
LD  2   205          ; 8835
RTN                  ; 8836
LDF 8835             ; 8837
RTN                  ; 8838
LD  2   205          ; 8839
LD  0   0            ; 8840
ST  2   205          ; 8841
RTN                  ; 8842
LDF 8839             ; 8843
RTN                  ; 8844
LD  2   206          ; 8845
RTN                  ; 8846
LDF 8845             ; 8847
RTN                  ; 8848
LD  2   206          ; 8849
LD  0   0            ; 8850
ST  2   206          ; 8851
RTN                  ; 8852
LDF 8849             ; 8853
RTN                  ; 8854
LD  2   207          ; 8855
RTN                  ; 8856
LDF 8855             ; 8857
RTN                  ; 8858
LD  2   207          ; 8859
LD  0   0            ; 8860
ST  2   207          ; 8861
RTN                  ; 8862
LDF 8859             ; 8863
RTN                  ; 8864
LD  2   208          ; 8865
RTN                  ; 8866
LDF 8865             ; 8867
RTN                  ; 8868
LD  2   208          ; 8869
LD  0   0            ; 8870
ST  2   208          ; 8871
RTN                  ; 8872
LDF 8869             ; 8873
RTN                  ; 8874
LD  2   209          ; 8875
RTN                  ; 8876
LDF 8875             ; 8877
RTN                  ; 8878
LD  2   209          ; 8879
LD  0   0            ; 8880
ST  2   209          ; 8881
RTN                  ; 8882
LDF 8879             ; 8883
RTN                  ; 8884
LD  2   210          ; 8885
RTN                  ; 8886
LDF 8885             ; 8887
RTN                  ; 8888
LD  2   210          ; 8889
LD  0   0            ; 8890
ST  2   210          ; 8891
RTN                  ; 8892
LDF 8889             ; 8893
RTN                  ; 8894
LD  2   211          ; 8895
RTN                  ; 8896
LDF 8895             ; 8897
RTN                  ; 8898
LD  2   211          ; 8899
LD  0   0            ; 8900
ST  2   211          ; 8901
RTN                  ; 8902
LDF 8899             ; 8903
RTN                  ; 8904
LD  2   212          ; 8905
RTN                  ; 8906
LDF 8905             ; 8907
RTN                  ; 8908
LD  2   212          ; 8909
LD  0   0            ; 8910
ST  2   212          ; 8911
RTN                  ; 8912
LDF 8909             ; 8913
RTN                  ; 8914
LD  2   213          ; 8915
RTN                  ; 8916
LDF 8915             ; 8917
RTN                  ; 8918
LD  2   213          ; 8919
LD  0   0            ; 8920
ST  2   213          ; 8921
RTN                  ; 8922
LDF 8919             ; 8923
RTN                  ; 8924
LD  2   214          ; 8925
RTN                  ; 8926
LDF 8925             ; 8927
RTN                  ; 8928
LD  2   214          ; 8929
LD  0   0            ; 8930
ST  2   214          ; 8931
RTN                  ; 8932
LDF 8929             ; 8933
RTN                  ; 8934
LD  2   215          ; 8935
RTN                  ; 8936
LDF 8935             ; 8937
RTN                  ; 8938
LD  2   215          ; 8939
LD  0   0            ; 8940
ST  2   215          ; 8941
RTN                  ; 8942
LDF 8939             ; 8943
RTN                  ; 8944
LD  2   216          ; 8945
RTN                  ; 8946
LDF 8945             ; 8947
RTN                  ; 8948
LD  2   216          ; 8949
LD  0   0            ; 8950
ST  2   216          ; 8951
RTN                  ; 8952
LDF 8949             ; 8953
RTN                  ; 8954
LD  2   217          ; 8955
RTN                  ; 8956
LDF 8955             ; 8957
RTN                  ; 8958
LD  2   217          ; 8959
LD  0   0            ; 8960
ST  2   217          ; 8961
RTN                  ; 8962
LDF 8959             ; 8963
RTN                  ; 8964
LD  2   218          ; 8965
RTN                  ; 8966
LDF 8965             ; 8967
RTN                  ; 8968
LD  2   218          ; 8969
LD  0   0            ; 8970
ST  2   218          ; 8971
RTN                  ; 8972
LDF 8969             ; 8973
RTN                  ; 8974
LD  2   219          ; 8975
RTN                  ; 8976
LDF 8975             ; 8977
RTN                  ; 8978
LD  2   219          ; 8979
LD  0   0            ; 8980
ST  2   219          ; 8981
RTN                  ; 8982
LDF 8979             ; 8983
RTN                  ; 8984
LD  2   220          ; 8985
RTN                  ; 8986
LDF 8985             ; 8987
RTN                  ; 8988
LD  2   220          ; 8989
LD  0   0            ; 8990
ST  2   220          ; 8991
RTN                  ; 8992
LDF 8989             ; 8993
RTN                  ; 8994
LD  2   221          ; 8995
RTN                  ; 8996
LDF 8995             ; 8997
RTN                  ; 8998
LD  2   221          ; 8999
LD  0   0            ; 9000
ST  2   221          ; 9001
RTN                  ; 9002
LDF 8999             ; 9003
RTN                  ; 9004
LD  2   222          ; 9005
RTN                  ; 9006
LDF 9005             ; 9007
RTN                  ; 9008
LD  2   222          ; 9009
LD  0   0            ; 9010
ST  2   222          ; 9011
RTN                  ; 9012
LDF 9009             ; 9013
RTN                  ; 9014
LD  2   223          ; 9015
RTN                  ; 9016
LDF 9015             ; 9017
RTN                  ; 9018
LD  2   223          ; 9019
LD  0   0            ; 9020
ST  2   223          ; 9021
RTN                  ; 9022
LDF 9019             ; 9023
RTN                  ; 9024
LD  2   224          ; 9025
RTN                  ; 9026
LDF 9025             ; 9027
RTN                  ; 9028
LD  2   224          ; 9029
LD  0   0            ; 9030
ST  2   224          ; 9031
RTN                  ; 9032
LDF 9029             ; 9033
RTN                  ; 9034
LD  2   225          ; 9035
RTN                  ; 9036
LDF 9035             ; 9037
RTN                  ; 9038
LD  2   225          ; 9039
LD  0   0            ; 9040
ST  2   225          ; 9041
RTN                  ; 9042
LDF 9039             ; 9043
RTN                  ; 9044
LD  2   226          ; 9045
RTN                  ; 9046
LDF 9045             ; 9047
RTN                  ; 9048
LD  2   226          ; 9049
LD  0   0            ; 9050
ST  2   226          ; 9051
RTN                  ; 9052
LDF 9049             ; 9053
RTN                  ; 9054
LD  2   227          ; 9055
RTN                  ; 9056
LDF 9055             ; 9057
RTN                  ; 9058
LD  2   227          ; 9059
LD  0   0            ; 9060
ST  2   227          ; 9061
RTN                  ; 9062
LDF 9059             ; 9063
RTN                  ; 9064
LD  2   228          ; 9065
RTN                  ; 9066
LDF 9065             ; 9067
RTN                  ; 9068
LD  2   228          ; 9069
LD  0   0            ; 9070
ST  2   228          ; 9071
RTN                  ; 9072
LDF 9069             ; 9073
RTN                  ; 9074
LD  2   229          ; 9075
RTN                  ; 9076
LDF 9075             ; 9077
RTN                  ; 9078
LD  2   229          ; 9079
LD  0   0            ; 9080
ST  2   229          ; 9081
RTN                  ; 9082
LDF 9079             ; 9083
RTN                  ; 9084
LD  2   230          ; 9085
RTN                  ; 9086
LDF 9085             ; 9087
RTN                  ; 9088
LD  2   230          ; 9089
LD  0   0            ; 9090
ST  2   230          ; 9091
RTN                  ; 9092
LDF 9089             ; 9093
RTN                  ; 9094
LD  2   231          ; 9095
RTN                  ; 9096
LDF 9095             ; 9097
RTN                  ; 9098
LD  2   231          ; 9099
LD  0   0            ; 9100
ST  2   231          ; 9101
RTN                  ; 9102
LDF 9099             ; 9103
RTN                  ; 9104
LD  2   232          ; 9105
RTN                  ; 9106
LDF 9105             ; 9107
RTN                  ; 9108
LD  2   232          ; 9109
LD  0   0            ; 9110
ST  2   232          ; 9111
RTN                  ; 9112
LDF 9109             ; 9113
RTN                  ; 9114
LD  2   233          ; 9115
RTN                  ; 9116
LDF 9115             ; 9117
RTN                  ; 9118
LD  2   233          ; 9119
LD  0   0            ; 9120
ST  2   233          ; 9121
RTN                  ; 9122
LDF 9119             ; 9123
RTN                  ; 9124
LD  2   234          ; 9125
RTN                  ; 9126
LDF 9125             ; 9127
RTN                  ; 9128
LD  2   234          ; 9129
LD  0   0            ; 9130
ST  2   234          ; 9131
RTN                  ; 9132
LDF 9129             ; 9133
RTN                  ; 9134
LD  2   235          ; 9135
RTN                  ; 9136
LDF 9135             ; 9137
RTN                  ; 9138
LD  2   235          ; 9139
LD  0   0            ; 9140
ST  2   235          ; 9141
RTN                  ; 9142
LDF 9139             ; 9143
RTN                  ; 9144
LD  2   236          ; 9145
RTN                  ; 9146
LDF 9145             ; 9147
RTN                  ; 9148
LD  2   236          ; 9149
LD  0   0            ; 9150
ST  2   236          ; 9151
RTN                  ; 9152
LDF 9149             ; 9153
RTN                  ; 9154
LD  2   237          ; 9155
RTN                  ; 9156
LDF 9155             ; 9157
RTN                  ; 9158
LD  2   237          ; 9159
LD  0   0            ; 9160
ST  2   237          ; 9161
RTN                  ; 9162
LDF 9159             ; 9163
RTN                  ; 9164
LD  2   238          ; 9165
RTN                  ; 9166
LDF 9165             ; 9167
RTN                  ; 9168
LD  2   238          ; 9169
LD  0   0            ; 9170
ST  2   238          ; 9171
RTN                  ; 9172
LDF 9169             ; 9173
RTN                  ; 9174
LD  2   239          ; 9175
RTN                  ; 9176
LDF 9175             ; 9177
RTN                  ; 9178
LD  2   239          ; 9179
LD  0   0            ; 9180
ST  2   239          ; 9181
RTN                  ; 9182
LDF 9179             ; 9183
RTN                  ; 9184
LD  2   240          ; 9185
RTN                  ; 9186
LDF 9185             ; 9187
RTN                  ; 9188
LD  2   240          ; 9189
LD  0   0            ; 9190
ST  2   240          ; 9191
RTN                  ; 9192
LDF 9189             ; 9193
RTN                  ; 9194
LD  2   241          ; 9195
RTN                  ; 9196
LDF 9195             ; 9197
RTN                  ; 9198
LD  2   241          ; 9199
LD  0   0            ; 9200
ST  2   241          ; 9201
RTN                  ; 9202
LDF 9199             ; 9203
RTN                  ; 9204
LD  2   242          ; 9205
RTN                  ; 9206
LDF 9205             ; 9207
RTN                  ; 9208
LD  2   242          ; 9209
LD  0   0            ; 9210
ST  2   242          ; 9211
RTN                  ; 9212
LDF 9209             ; 9213
RTN                  ; 9214
LD  2   243          ; 9215
RTN                  ; 9216
LDF 9215             ; 9217
RTN                  ; 9218
LD  2   243          ; 9219
LD  0   0            ; 9220
ST  2   243          ; 9221
RTN                  ; 9222
LDF 9219             ; 9223
RTN                  ; 9224
LD  2   244          ; 9225
RTN                  ; 9226
LDF 9225             ; 9227
RTN                  ; 9228
LD  2   244          ; 9229
LD  0   0            ; 9230
ST  2   244          ; 9231
RTN                  ; 9232
LDF 9229             ; 9233
RTN                  ; 9234
LD  2   245          ; 9235
RTN                  ; 9236
LDF 9235             ; 9237
RTN                  ; 9238
LD  2   245          ; 9239
LD  0   0            ; 9240
ST  2   245          ; 9241
RTN                  ; 9242
LDF 9239             ; 9243
RTN                  ; 9244
LD  2   246          ; 9245
RTN                  ; 9246
LDF 9245             ; 9247
RTN                  ; 9248
LD  2   246          ; 9249
LD  0   0            ; 9250
ST  2   246          ; 9251
RTN                  ; 9252
LDF 9249             ; 9253
RTN                  ; 9254
LD  2   247          ; 9255
RTN                  ; 9256
LDF 9255             ; 9257
RTN                  ; 9258
LD  2   247          ; 9259
LD  0   0            ; 9260
ST  2   247          ; 9261
RTN                  ; 9262
LDF 9259             ; 9263
RTN                  ; 9264
LD  2   248          ; 9265
RTN                  ; 9266
LDF 9265             ; 9267
RTN                  ; 9268
LD  2   248          ; 9269
LD  0   0            ; 9270
ST  2   248          ; 9271
RTN                  ; 9272
LDF 9269             ; 9273
RTN                  ; 9274
LD  2   249          ; 9275
RTN                  ; 9276
LDF 9275             ; 9277
RTN                  ; 9278
LD  2   249          ; 9279
LD  0   0            ; 9280
ST  2   249          ; 9281
RTN                  ; 9282
LDF 9279             ; 9283
RTN                  ; 9284
LD  2   250          ; 9285
RTN                  ; 9286
LDF 9285             ; 9287
RTN                  ; 9288
LD  2   250          ; 9289
LD  0   0            ; 9290
ST  2   250          ; 9291
RTN                  ; 9292
LDF 9289             ; 9293
RTN                  ; 9294
LD  2   251          ; 9295
RTN                  ; 9296
LDF 9295             ; 9297
RTN                  ; 9298
LD  2   251          ; 9299
LD  0   0            ; 9300
ST  2   251          ; 9301
RTN                  ; 9302
LDF 9299             ; 9303
RTN                  ; 9304
LD  2   252          ; 9305
RTN                  ; 9306
LDF 9305             ; 9307
RTN                  ; 9308
LD  2   252          ; 9309
LD  0   0            ; 9310
ST  2   252          ; 9311
RTN                  ; 9312
LDF 9309             ; 9313
RTN                  ; 9314
LD  2   253          ; 9315
RTN                  ; 9316
LDF 9315             ; 9317
RTN                  ; 9318
LD  2   253          ; 9319
LD  0   0            ; 9320
ST  2   253          ; 9321
RTN                  ; 9322
LDF 9319             ; 9323
RTN                  ; 9324
LD  2   254          ; 9325
RTN                  ; 9326
LDF 9325             ; 9327
RTN                  ; 9328
LD  2   254          ; 9329
LD  0   0            ; 9330
ST  2   254          ; 9331
RTN                  ; 9332
LDF 9329             ; 9333
RTN                  ; 9334
LD  2   255          ; 9335
RTN                  ; 9336
LDF 9335             ; 9337
RTN                  ; 9338
LD  2   255          ; 9339
LD  0   0            ; 9340
ST  2   255          ; 9341
RTN                  ; 9342
LDF 9339             ; 9343
RTN                  ; 9344
LDC 0               ; generated from native: sample_map ; 9345
LDC 0                ; 9346
LDC 0                ; 9347
LDC 0                ; 9348
LDC 0                ; 9349
LDC 0                ; 9350
LDC 0                ; 9351
LDC 0                ; 9352
LDC 0                ; 9353
LDC 0                ; 9354
LDC 0                ; 9355
LDC 0                ; 9356
LDC 0                ; 9357
LDC 0                ; 9358
LDC 0                ; 9359
LDC 0                ; 9360
LDC 0                ; 9361
LDC 0                ; 9362
LDC 0                ; 9363
LDC 0                ; 9364
LDC 0                ; 9365
LDC 0                ; 9366
LDC 0                ; 9367
LDC 0                ; 9368
CONS                 ; 9369
CONS                 ; 9370
CONS                 ; 9371
CONS                 ; 9372
CONS                 ; 9373
CONS                 ; 9374
CONS                 ; 9375
CONS                 ; 9376
CONS                 ; 9377
CONS                 ; 9378
CONS                 ; 9379
CONS                 ; 9380
CONS                 ; 9381
CONS                 ; 9382
CONS                 ; 9383
CONS                 ; 9384
CONS                 ; 9385
CONS                 ; 9386
CONS                 ; 9387
CONS                 ; 9388
CONS                 ; 9389
CONS                 ; 9390
CONS                 ; 9391
LDC 0                ; 9392
LDC 2                ; 9393
LDC 2                ; 9394
LDC 2                ; 9395
LDC 2                ; 9396
LDC 2                ; 9397
LDC 2                ; 9398
LDC 2                ; 9399
LDC 2                ; 9400
LDC 2                ; 9401
LDC 2                ; 9402
LDC 0                ; 9403
LDC 2                ; 9404
LDC 2                ; 9405
LDC 2                ; 9406
LDC 2                ; 9407
LDC 2                ; 9408
LDC 2                ; 9409
LDC 2                ; 9410
LDC 2                ; 9411
LDC 2                ; 9412
LDC 2                ; 9413
LDC 0                ; 9414
LDC 0                ; 9415
CONS                 ; 9416
CONS                 ; 9417
CONS                 ; 9418
CONS                 ; 9419
CONS                 ; 9420
CONS                 ; 9421
CONS                 ; 9422
CONS                 ; 9423
CONS                 ; 9424
CONS                 ; 9425
CONS                 ; 9426
CONS                 ; 9427
CONS                 ; 9428
CONS                 ; 9429
CONS                 ; 9430
CONS                 ; 9431
CONS                 ; 9432
CONS                 ; 9433
CONS                 ; 9434
CONS                 ; 9435
CONS                 ; 9436
CONS                 ; 9437
CONS                 ; 9438
LDC 0                ; 9439
LDC 2                ; 9440
LDC 0                ; 9441
LDC 0                ; 9442
LDC 0                ; 9443
LDC 2                ; 9444
LDC 0                ; 9445
LDC 0                ; 9446
LDC 0                ; 9447
LDC 0                ; 9448
LDC 2                ; 9449
LDC 0                ; 9450
LDC 2                ; 9451
LDC 0                ; 9452
LDC 0                ; 9453
LDC 0                ; 9454
LDC 0                ; 9455
LDC 2                ; 9456
LDC 0                ; 9457
LDC 0                ; 9458
LDC 0                ; 9459
LDC 2                ; 9460
LDC 0                ; 9461
LDC 0                ; 9462
CONS                 ; 9463
CONS                 ; 9464
CONS                 ; 9465
CONS                 ; 9466
CONS                 ; 9467
CONS                 ; 9468
CONS                 ; 9469
CONS                 ; 9470
CONS                 ; 9471
CONS                 ; 9472
CONS                 ; 9473
CONS                 ; 9474
CONS                 ; 9475
CONS                 ; 9476
CONS                 ; 9477
CONS                 ; 9478
CONS                 ; 9479
CONS                 ; 9480
CONS                 ; 9481
CONS                 ; 9482
CONS                 ; 9483
CONS                 ; 9484
CONS                 ; 9485
LDC 0                ; 9486
LDC 3                ; 9487
LDC 0                ; 9488
LDC 0                ; 9489
LDC 0                ; 9490
LDC 2                ; 9491
LDC 0                ; 9492
LDC 0                ; 9493
LDC 0                ; 9494
LDC 0                ; 9495
LDC 2                ; 9496
LDC 0                ; 9497
LDC 2                ; 9498
LDC 0                ; 9499
LDC 0                ; 9500
LDC 0                ; 9501
LDC 0                ; 9502
LDC 2                ; 9503
LDC 0                ; 9504
LDC 0                ; 9505
LDC 0                ; 9506
LDC 3                ; 9507
LDC 0                ; 9508
LDC 0                ; 9509
CONS                 ; 9510
CONS                 ; 9511
CONS                 ; 9512
CONS                 ; 9513
CONS                 ; 9514
CONS                 ; 9515
CONS                 ; 9516
CONS                 ; 9517
CONS                 ; 9518
CONS                 ; 9519
CONS                 ; 9520
CONS                 ; 9521
CONS                 ; 9522
CONS                 ; 9523
CONS                 ; 9524
CONS                 ; 9525
CONS                 ; 9526
CONS                 ; 9527
CONS                 ; 9528
CONS                 ; 9529
CONS                 ; 9530
CONS                 ; 9531
CONS                 ; 9532
LDC 0                ; 9533
LDC 2                ; 9534
LDC 2                ; 9535
LDC 2                ; 9536
LDC 2                ; 9537
LDC 2                ; 9538
LDC 2                ; 9539
LDC 2                ; 9540
LDC 2                ; 9541
LDC 2                ; 9542
LDC 2                ; 9543
LDC 2                ; 9544
LDC 2                ; 9545
LDC 2                ; 9546
LDC 2                ; 9547
LDC 2                ; 9548
LDC 2                ; 9549
LDC 2                ; 9550
LDC 2                ; 9551
LDC 2                ; 9552
LDC 2                ; 9553
LDC 2                ; 9554
LDC 0                ; 9555
LDC 0                ; 9556
CONS                 ; 9557
CONS                 ; 9558
CONS                 ; 9559
CONS                 ; 9560
CONS                 ; 9561
CONS                 ; 9562
CONS                 ; 9563
CONS                 ; 9564
CONS                 ; 9565
CONS                 ; 9566
CONS                 ; 9567
CONS                 ; 9568
CONS                 ; 9569
CONS                 ; 9570
CONS                 ; 9571
CONS                 ; 9572
CONS                 ; 9573
CONS                 ; 9574
CONS                 ; 9575
CONS                 ; 9576
CONS                 ; 9577
CONS                 ; 9578
CONS                 ; 9579
LDC 0                ; 9580
LDC 2                ; 9581
LDC 0                ; 9582
LDC 0                ; 9583
LDC 0                ; 9584
LDC 2                ; 9585
LDC 0                ; 9586
LDC 2                ; 9587
LDC 0                ; 9588
LDC 0                ; 9589
LDC 0                ; 9590
LDC 0                ; 9591
LDC 0                ; 9592
LDC 0                ; 9593
LDC 0                ; 9594
LDC 2                ; 9595
LDC 0                ; 9596
LDC 2                ; 9597
LDC 0                ; 9598
LDC 0                ; 9599
LDC 0                ; 9600
LDC 2                ; 9601
LDC 0                ; 9602
LDC 0                ; 9603
CONS                 ; 9604
CONS                 ; 9605
CONS                 ; 9606
CONS                 ; 9607
CONS                 ; 9608
CONS                 ; 9609
CONS                 ; 9610
CONS                 ; 9611
CONS                 ; 9612
CONS                 ; 9613
CONS                 ; 9614
CONS                 ; 9615
CONS                 ; 9616
CONS                 ; 9617
CONS                 ; 9618
CONS                 ; 9619
CONS                 ; 9620
CONS                 ; 9621
CONS                 ; 9622
CONS                 ; 9623
CONS                 ; 9624
CONS                 ; 9625
CONS                 ; 9626
LDC 0                ; 9627
LDC 2                ; 9628
LDC 2                ; 9629
LDC 2                ; 9630
LDC 2                ; 9631
LDC 2                ; 9632
LDC 0                ; 9633
LDC 2                ; 9634
LDC 2                ; 9635
LDC 2                ; 9636
LDC 2                ; 9637
LDC 0                ; 9638
LDC 2                ; 9639
LDC 2                ; 9640
LDC 2                ; 9641
LDC 2                ; 9642
LDC 0                ; 9643
LDC 2                ; 9644
LDC 2                ; 9645
LDC 2                ; 9646
LDC 2                ; 9647
LDC 2                ; 9648
LDC 0                ; 9649
LDC 0                ; 9650
CONS                 ; 9651
CONS                 ; 9652
CONS                 ; 9653
CONS                 ; 9654
CONS                 ; 9655
CONS                 ; 9656
CONS                 ; 9657
CONS                 ; 9658
CONS                 ; 9659
CONS                 ; 9660
CONS                 ; 9661
CONS                 ; 9662
CONS                 ; 9663
CONS                 ; 9664
CONS                 ; 9665
CONS                 ; 9666
CONS                 ; 9667
CONS                 ; 9668
CONS                 ; 9669
CONS                 ; 9670
CONS                 ; 9671
CONS                 ; 9672
CONS                 ; 9673
LDC 0                ; 9674
LDC 0                ; 9675
LDC 0                ; 9676
LDC 0                ; 9677
LDC 0                ; 9678
LDC 2                ; 9679
LDC 0                ; 9680
LDC 0                ; 9681
LDC 0                ; 9682
LDC 0                ; 9683
LDC 1                ; 9684
LDC 0                ; 9685
LDC 1                ; 9686
LDC 0                ; 9687
LDC 0                ; 9688
LDC 0                ; 9689
LDC 0                ; 9690
LDC 2                ; 9691
LDC 0                ; 9692
LDC 0                ; 9693
LDC 0                ; 9694
LDC 0                ; 9695
LDC 0                ; 9696
LDC 0                ; 9697
CONS                 ; 9698
CONS                 ; 9699
CONS                 ; 9700
CONS                 ; 9701
CONS                 ; 9702
CONS                 ; 9703
CONS                 ; 9704
CONS                 ; 9705
CONS                 ; 9706
CONS                 ; 9707
CONS                 ; 9708
CONS                 ; 9709
CONS                 ; 9710
CONS                 ; 9711
CONS                 ; 9712
CONS                 ; 9713
CONS                 ; 9714
CONS                 ; 9715
CONS                 ; 9716
CONS                 ; 9717
CONS                 ; 9718
CONS                 ; 9719
CONS                 ; 9720
LDC 0                ; 9721
LDC 1                ; 9722
LDC 1                ; 9723
LDC 1                ; 9724
LDC 0                ; 9725
LDC 2                ; 9726
LDC 0                ; 9727
LDC 1                ; 9728
LDC 1                ; 9729
LDC 1                ; 9730
LDC 1                ; 9731
LDC 6                ; 9732
LDC 1                ; 9733
LDC 1                ; 9734
LDC 1                ; 9735
LDC 1                ; 9736
LDC 0                ; 9737
LDC 2                ; 9738
LDC 0                ; 9739
LDC 1                ; 9740
LDC 1                ; 9741
LDC 1                ; 9742
LDC 0                ; 9743
LDC 0                ; 9744
CONS                 ; 9745
CONS                 ; 9746
CONS                 ; 9747
CONS                 ; 9748
CONS                 ; 9749
CONS                 ; 9750
CONS                 ; 9751
CONS                 ; 9752
CONS                 ; 9753
CONS                 ; 9754
CONS                 ; 9755
CONS                 ; 9756
CONS                 ; 9757
CONS                 ; 9758
CONS                 ; 9759
CONS                 ; 9760
CONS                 ; 9761
CONS                 ; 9762
CONS                 ; 9763
CONS                 ; 9764
CONS                 ; 9765
CONS                 ; 9766
CONS                 ; 9767
LDC 0                ; 9768
LDC 0                ; 9769
LDC 0                ; 9770
LDC 0                ; 9771
LDC 0                ; 9772
LDC 2                ; 9773
LDC 0                ; 9774
LDC 1                ; 9775
LDC 0                ; 9776
LDC 0                ; 9777
LDC 0                ; 9778
LDC 1                ; 9779
LDC 0                ; 9780
LDC 0                ; 9781
LDC 0                ; 9782
LDC 1                ; 9783
LDC 0                ; 9784
LDC 2                ; 9785
LDC 0                ; 9786
LDC 0                ; 9787
LDC 0                ; 9788
LDC 0                ; 9789
LDC 0                ; 9790
LDC 0                ; 9791
CONS                 ; 9792
CONS                 ; 9793
CONS                 ; 9794
CONS                 ; 9795
CONS                 ; 9796
CONS                 ; 9797
CONS                 ; 9798
CONS                 ; 9799
CONS                 ; 9800
CONS                 ; 9801
CONS                 ; 9802
CONS                 ; 9803
CONS                 ; 9804
CONS                 ; 9805
CONS                 ; 9806
CONS                 ; 9807
CONS                 ; 9808
CONS                 ; 9809
CONS                 ; 9810
CONS                 ; 9811
CONS                 ; 9812
CONS                 ; 9813
CONS                 ; 9814
LDC 0                ; 9815
LDC 1                ; 9816
LDC 1                ; 9817
LDC 1                ; 9818
LDC 1                ; 9819
LDC 2                ; 9820
LDC 1                ; 9821
LDC 1                ; 9822
LDC 0                ; 9823
LDC 1                ; 9824
LDC 6                ; 9825
LDC 6                ; 9826
LDC 6                ; 9827
LDC 1                ; 9828
LDC 0                ; 9829
LDC 1                ; 9830
LDC 1                ; 9831
LDC 2                ; 9832
LDC 1                ; 9833
LDC 1                ; 9834
LDC 1                ; 9835
LDC 1                ; 9836
LDC 0                ; 9837
LDC 0                ; 9838
CONS                 ; 9839
CONS                 ; 9840
CONS                 ; 9841
CONS                 ; 9842
CONS                 ; 9843
CONS                 ; 9844
CONS                 ; 9845
CONS                 ; 9846
CONS                 ; 9847
CONS                 ; 9848
CONS                 ; 9849
CONS                 ; 9850
CONS                 ; 9851
CONS                 ; 9852
CONS                 ; 9853
CONS                 ; 9854
CONS                 ; 9855
CONS                 ; 9856
CONS                 ; 9857
CONS                 ; 9858
CONS                 ; 9859
CONS                 ; 9860
CONS                 ; 9861
LDC 0                ; 9862
LDC 0                ; 9863
LDC 0                ; 9864
LDC 0                ; 9865
LDC 0                ; 9866
LDC 2                ; 9867
LDC 0                ; 9868
LDC 1                ; 9869
LDC 0                ; 9870
LDC 0                ; 9871
LDC 0                ; 9872
LDC 0                ; 9873
LDC 0                ; 9874
LDC 0                ; 9875
LDC 0                ; 9876
LDC 1                ; 9877
LDC 0                ; 9878
LDC 2                ; 9879
LDC 0                ; 9880
LDC 0                ; 9881
LDC 0                ; 9882
LDC 0                ; 9883
LDC 0                ; 9884
LDC 0                ; 9885
CONS                 ; 9886
CONS                 ; 9887
CONS                 ; 9888
CONS                 ; 9889
CONS                 ; 9890
CONS                 ; 9891
CONS                 ; 9892
CONS                 ; 9893
CONS                 ; 9894
CONS                 ; 9895
CONS                 ; 9896
CONS                 ; 9897
CONS                 ; 9898
CONS                 ; 9899
CONS                 ; 9900
CONS                 ; 9901
CONS                 ; 9902
CONS                 ; 9903
CONS                 ; 9904
CONS                 ; 9905
CONS                 ; 9906
CONS                 ; 9907
CONS                 ; 9908
LDC 0                ; 9909
LDC 1                ; 9910
LDC 1                ; 9911
LDC 1                ; 9912
LDC 0                ; 9913
LDC 2                ; 9914
LDC 0                ; 9915
LDC 1                ; 9916
LDC 1                ; 9917
LDC 1                ; 9918
LDC 1                ; 9919
LDC 4                ; 9920
LDC 1                ; 9921
LDC 1                ; 9922
LDC 1                ; 9923
LDC 1                ; 9924
LDC 0                ; 9925
LDC 2                ; 9926
LDC 0                ; 9927
LDC 1                ; 9928
LDC 1                ; 9929
LDC 1                ; 9930
LDC 0                ; 9931
LDC 0                ; 9932
CONS                 ; 9933
CONS                 ; 9934
CONS                 ; 9935
CONS                 ; 9936
CONS                 ; 9937
CONS                 ; 9938
CONS                 ; 9939
CONS                 ; 9940
CONS                 ; 9941
CONS                 ; 9942
CONS                 ; 9943
CONS                 ; 9944
CONS                 ; 9945
CONS                 ; 9946
CONS                 ; 9947
CONS                 ; 9948
CONS                 ; 9949
CONS                 ; 9950
CONS                 ; 9951
CONS                 ; 9952
CONS                 ; 9953
CONS                 ; 9954
CONS                 ; 9955
LDC 0                ; 9956
LDC 0                ; 9957
LDC 0                ; 9958
LDC 0                ; 9959
LDC 0                ; 9960
LDC 2                ; 9961
LDC 0                ; 9962
LDC 1                ; 9963
LDC 0                ; 9964
LDC 0                ; 9965
LDC 0                ; 9966
LDC 0                ; 9967
LDC 0                ; 9968
LDC 0                ; 9969
LDC 0                ; 9970
LDC 1                ; 9971
LDC 0                ; 9972
LDC 2                ; 9973
LDC 0                ; 9974
LDC 0                ; 9975
LDC 0                ; 9976
LDC 0                ; 9977
LDC 0                ; 9978
LDC 0                ; 9979
CONS                 ; 9980
CONS                 ; 9981
CONS                 ; 9982
CONS                 ; 9983
CONS                 ; 9984
CONS                 ; 9985
CONS                 ; 9986
CONS                 ; 9987
CONS                 ; 9988
CONS                 ; 9989
CONS                 ; 9990
CONS                 ; 9991
CONS                 ; 9992
CONS                 ; 9993
CONS                 ; 9994
CONS                 ; 9995
CONS                 ; 9996
CONS                 ; 9997
CONS                 ; 9998
CONS                 ; 9999
CONS                 ; 10000
CONS                 ; 10001
CONS                 ; 10002
LDC 0                ; 10003
LDC 2                ; 10004
LDC 2                ; 10005
LDC 2                ; 10006
LDC 2                ; 10007
LDC 2                ; 10008
LDC 2                ; 10009
LDC 2                ; 10010
LDC 2                ; 10011
LDC 2                ; 10012
LDC 2                ; 10013
LDC 0                ; 10014
LDC 2                ; 10015
LDC 2                ; 10016
LDC 2                ; 10017
LDC 2                ; 10018
LDC 2                ; 10019
LDC 2                ; 10020
LDC 2                ; 10021
LDC 2                ; 10022
LDC 2                ; 10023
LDC 2                ; 10024
LDC 0                ; 10025
LDC 0                ; 10026
CONS                 ; 10027
CONS                 ; 10028
CONS                 ; 10029
CONS                 ; 10030
CONS                 ; 10031
CONS                 ; 10032
CONS                 ; 10033
CONS                 ; 10034
CONS                 ; 10035
CONS                 ; 10036
CONS                 ; 10037
CONS                 ; 10038
CONS                 ; 10039
CONS                 ; 10040
CONS                 ; 10041
CONS                 ; 10042
CONS                 ; 10043
CONS                 ; 10044
CONS                 ; 10045
CONS                 ; 10046
CONS                 ; 10047
CONS                 ; 10048
CONS                 ; 10049
LDC 0                ; 10050
LDC 2                ; 10051
LDC 0                ; 10052
LDC 0                ; 10053
LDC 0                ; 10054
LDC 2                ; 10055
LDC 0                ; 10056
LDC 0                ; 10057
LDC 0                ; 10058
LDC 0                ; 10059
LDC 2                ; 10060
LDC 0                ; 10061
LDC 2                ; 10062
LDC 0                ; 10063
LDC 0                ; 10064
LDC 0                ; 10065
LDC 0                ; 10066
LDC 2                ; 10067
LDC 0                ; 10068
LDC 0                ; 10069
LDC 0                ; 10070
LDC 2                ; 10071
LDC 0                ; 10072
LDC 0                ; 10073
CONS                 ; 10074
CONS                 ; 10075
CONS                 ; 10076
CONS                 ; 10077
CONS                 ; 10078
CONS                 ; 10079
CONS                 ; 10080
CONS                 ; 10081
CONS                 ; 10082
CONS                 ; 10083
CONS                 ; 10084
CONS                 ; 10085
CONS                 ; 10086
CONS                 ; 10087
CONS                 ; 10088
CONS                 ; 10089
CONS                 ; 10090
CONS                 ; 10091
CONS                 ; 10092
CONS                 ; 10093
CONS                 ; 10094
CONS                 ; 10095
CONS                 ; 10096
LDC 0                ; 10097
LDC 3                ; 10098
LDC 2                ; 10099
LDC 2                ; 10100
LDC 0                ; 10101
LDC 2                ; 10102
LDC 2                ; 10103
LDC 2                ; 10104
LDC 2                ; 10105
LDC 2                ; 10106
LDC 2                ; 10107
LDC 5                ; 10108
LDC 2                ; 10109
LDC 2                ; 10110
LDC 2                ; 10111
LDC 2                ; 10112
LDC 2                ; 10113
LDC 2                ; 10114
LDC 0                ; 10115
LDC 2                ; 10116
LDC 2                ; 10117
LDC 3                ; 10118
LDC 0                ; 10119
LDC 0                ; 10120
CONS                 ; 10121
CONS                 ; 10122
CONS                 ; 10123
CONS                 ; 10124
CONS                 ; 10125
CONS                 ; 10126
CONS                 ; 10127
CONS                 ; 10128
CONS                 ; 10129
CONS                 ; 10130
CONS                 ; 10131
CONS                 ; 10132
CONS                 ; 10133
CONS                 ; 10134
CONS                 ; 10135
CONS                 ; 10136
CONS                 ; 10137
CONS                 ; 10138
CONS                 ; 10139
CONS                 ; 10140
CONS                 ; 10141
CONS                 ; 10142
CONS                 ; 10143
LDC 0                ; 10144
LDC 0                ; 10145
LDC 0                ; 10146
LDC 2                ; 10147
LDC 0                ; 10148
LDC 2                ; 10149
LDC 0                ; 10150
LDC 2                ; 10151
LDC 0                ; 10152
LDC 0                ; 10153
LDC 0                ; 10154
LDC 0                ; 10155
LDC 0                ; 10156
LDC 0                ; 10157
LDC 0                ; 10158
LDC 2                ; 10159
LDC 0                ; 10160
LDC 2                ; 10161
LDC 0                ; 10162
LDC 2                ; 10163
LDC 0                ; 10164
LDC 0                ; 10165
LDC 0                ; 10166
LDC 0                ; 10167
CONS                 ; 10168
CONS                 ; 10169
CONS                 ; 10170
CONS                 ; 10171
CONS                 ; 10172
CONS                 ; 10173
CONS                 ; 10174
CONS                 ; 10175
CONS                 ; 10176
CONS                 ; 10177
CONS                 ; 10178
CONS                 ; 10179
CONS                 ; 10180
CONS                 ; 10181
CONS                 ; 10182
CONS                 ; 10183
CONS                 ; 10184
CONS                 ; 10185
CONS                 ; 10186
CONS                 ; 10187
CONS                 ; 10188
CONS                 ; 10189
CONS                 ; 10190
LDC 0                ; 10191
LDC 2                ; 10192
LDC 2                ; 10193
LDC 2                ; 10194
LDC 2                ; 10195
LDC 2                ; 10196
LDC 0                ; 10197
LDC 2                ; 10198
LDC 2                ; 10199
LDC 2                ; 10200
LDC 2                ; 10201
LDC 0                ; 10202
LDC 2                ; 10203
LDC 2                ; 10204
LDC 2                ; 10205
LDC 2                ; 10206
LDC 0                ; 10207
LDC 2                ; 10208
LDC 2                ; 10209
LDC 2                ; 10210
LDC 2                ; 10211
LDC 2                ; 10212
LDC 0                ; 10213
LDC 0                ; 10214
CONS                 ; 10215
CONS                 ; 10216
CONS                 ; 10217
CONS                 ; 10218
CONS                 ; 10219
CONS                 ; 10220
CONS                 ; 10221
CONS                 ; 10222
CONS                 ; 10223
CONS                 ; 10224
CONS                 ; 10225
CONS                 ; 10226
CONS                 ; 10227
CONS                 ; 10228
CONS                 ; 10229
CONS                 ; 10230
CONS                 ; 10231
CONS                 ; 10232
CONS                 ; 10233
CONS                 ; 10234
CONS                 ; 10235
CONS                 ; 10236
CONS                 ; 10237
LDC 0                ; 10238
LDC 2                ; 10239
LDC 0                ; 10240
LDC 0                ; 10241
LDC 0                ; 10242
LDC 0                ; 10243
LDC 0                ; 10244
LDC 0                ; 10245
LDC 0                ; 10246
LDC 0                ; 10247
LDC 2                ; 10248
LDC 0                ; 10249
LDC 2                ; 10250
LDC 0                ; 10251
LDC 0                ; 10252
LDC 0                ; 10253
LDC 0                ; 10254
LDC 0                ; 10255
LDC 0                ; 10256
LDC 0                ; 10257
LDC 0                ; 10258
LDC 2                ; 10259
LDC 0                ; 10260
LDC 0                ; 10261
CONS                 ; 10262
CONS                 ; 10263
CONS                 ; 10264
CONS                 ; 10265
CONS                 ; 10266
CONS                 ; 10267
CONS                 ; 10268
CONS                 ; 10269
CONS                 ; 10270
CONS                 ; 10271
CONS                 ; 10272
CONS                 ; 10273
CONS                 ; 10274
CONS                 ; 10275
CONS                 ; 10276
CONS                 ; 10277
CONS                 ; 10278
CONS                 ; 10279
CONS                 ; 10280
CONS                 ; 10281
CONS                 ; 10282
CONS                 ; 10283
CONS                 ; 10284
LDC 0                ; 10285
LDC 2                ; 10286
LDC 2                ; 10287
LDC 2                ; 10288
LDC 2                ; 10289
LDC 2                ; 10290
LDC 2                ; 10291
LDC 2                ; 10292
LDC 2                ; 10293
LDC 2                ; 10294
LDC 2                ; 10295
LDC 2                ; 10296
LDC 2                ; 10297
LDC 2                ; 10298
LDC 2                ; 10299
LDC 2                ; 10300
LDC 2                ; 10301
LDC 2                ; 10302
LDC 2                ; 10303
LDC 2                ; 10304
LDC 2                ; 10305
LDC 2                ; 10306
LDC 0                ; 10307
LDC 0                ; 10308
CONS                 ; 10309
CONS                 ; 10310
CONS                 ; 10311
CONS                 ; 10312
CONS                 ; 10313
CONS                 ; 10314
CONS                 ; 10315
CONS                 ; 10316
CONS                 ; 10317
CONS                 ; 10318
CONS                 ; 10319
CONS                 ; 10320
CONS                 ; 10321
CONS                 ; 10322
CONS                 ; 10323
CONS                 ; 10324
CONS                 ; 10325
CONS                 ; 10326
CONS                 ; 10327
CONS                 ; 10328
CONS                 ; 10329
CONS                 ; 10330
CONS                 ; 10331
LDC 0                ; 10332
LDC 0                ; 10333
LDC 0                ; 10334
LDC 0                ; 10335
LDC 0                ; 10336
LDC 0                ; 10337
LDC 0                ; 10338
LDC 0                ; 10339
LDC 0                ; 10340
LDC 0                ; 10341
LDC 0                ; 10342
LDC 0                ; 10343
LDC 0                ; 10344
LDC 0                ; 10345
LDC 0                ; 10346
LDC 0                ; 10347
LDC 0                ; 10348
LDC 0                ; 10349
LDC 0                ; 10350
LDC 0                ; 10351
LDC 0                ; 10352
LDC 0                ; 10353
LDC 0                ; 10354
LDC 0                ; 10355
CONS                 ; 10356
CONS                 ; 10357
CONS                 ; 10358
CONS                 ; 10359
CONS                 ; 10360
CONS                 ; 10361
CONS                 ; 10362
CONS                 ; 10363
CONS                 ; 10364
CONS                 ; 10365
CONS                 ; 10366
CONS                 ; 10367
CONS                 ; 10368
CONS                 ; 10369
CONS                 ; 10370
CONS                 ; 10371
CONS                 ; 10372
CONS                 ; 10373
CONS                 ; 10374
CONS                 ; 10375
CONS                 ; 10376
CONS                 ; 10377
CONS                 ; 10378
LDC 0                ; 10379
CONS                 ; 10380
CONS                 ; 10381
CONS                 ; 10382
CONS                 ; 10383
CONS                 ; 10384
CONS                 ; 10385
CONS                 ; 10386
CONS                 ; 10387
CONS                 ; 10388
CONS                 ; 10389
CONS                 ; 10390
CONS                 ; 10391
CONS                 ; 10392
CONS                 ; 10393
CONS                 ; 10394
CONS                 ; 10395
CONS                 ; 10396
CONS                 ; 10397
CONS                 ; 10398
CONS                 ; 10399
CONS                 ; 10400
CONS                 ; 10401
LDC 0                ; 10402
LDC 11               ; 10403
LDC 16               ; 10404
CONS                 ; 10405
LDC 2                ; 10406
LDC 3                ; 10407
LDC 0                ; 10408
CONS                 ; 10409
CONS                 ; 10410
CONS                 ; 10411
CONS                 ; 10412
LDC 0                ; 10413
LDC 11               ; 10414
LDC 8                ; 10415
CONS                 ; 10416
LDC 2                ; 10417
CONS                 ; 10418
CONS                 ; 10419
LDC 0                ; 10420
LDC 10               ; 10421
LDC 10               ; 10422
CONS                 ; 10423
LDC 2                ; 10424
CONS                 ; 10425
CONS                 ; 10426
LDC 0                ; 10427
LDC 11               ; 10428
LDC 10               ; 10429
CONS                 ; 10430
LDC 2                ; 10431
CONS                 ; 10432
CONS                 ; 10433
LDC 0                ; 10434
LDC 12               ; 10435
LDC 10               ; 10436
CONS                 ; 10437
LDC 2                ; 10438
CONS                 ; 10439
CONS                 ; 10440
LDC 0                ; 10441
CONS                 ; 10442
CONS                 ; 10443
CONS                 ; 10444
CONS                 ; 10445
LDC 0                ; 10446
CONS                 ; 10447
CONS                 ; 10448
CONS                 ; 10449
RTN                  ; 10450
LDF    4480         ;  <== lambda_1000  [x] (as expr), @src/app/Sample1.java(675,101), ALSO: @array_256 ; 10451
AP     0             ; 10452
RTN                  ; 10453
LD     0 0          ;  <== lambda_1001  [a, b] (as expr), @src/app/Sample1.java(676,135) ; 10454
LD     0 1          ; var b ; 10455
CONS                 ; 10456
RTN                  ; 10457
LD     0 0          ;  <== lambda_1002  [Tuple<ListCons<Integer>,Function2<Integer,Integer,Function1<Integer,Integer>>> t] (as expr), @src/app/Sample1.java(678,24) ; 10458
CAR                 ; generateTupleAccess total=2 pos=0 ; 10459
LDC    0            ; just constant from code ; 10460
LDF    11306        ;  @lambda_1061 ; 10461
LDF    73           ;  @mapi ; 10462
AP     3             ; 10463
RTN                  ; 10464
LD     0 0          ;  <== lambda_1003  [row, rowy] (as expr), @src/app/Sample1.java(680,71) ; 10465
LD     0 1          ; var rowy ; 10466
LDF    4133         ;  @collectWalkableXY ; 10467
AP     2             ; 10468
LDC 0               ; local var space ; 10469
LDF    4125         ;  @my_cat_maybes ; 10470
AP     2             ; 10471
RTN                  ; 10472
LD     1 0          ;  <== lambda_1004  [Point w] (as expr), @src/app/Sample1.java(682,74) ; 10473
LD     0 0          ; var w ; 10474
CAR                 ; generateTupleAccess total=2 pos=0 ; 10475
LD     0 0          ; var w ; 10476
CDR                 ; generateTupleAccess total=2 pos=1 ; 10477
LDC 0               ; local var space ; 10478
LDC 0               ; local var space ; 10479
LDC 0               ; local var space ; 10480
LDC 0               ; local var space ; 10481
LDC 0               ; local var space ; 10482
LDF    3541         ;  @isJunction ; 10483
AP     8             ; 10484
RTN                  ; 10485
LD     0 0          ;  <== lambda_1005  [Point pt] (as expr), @src/app/Sample1.java(628,37) ; 10486
LDF    3793         ;  @getPointKey ; 10487
AP     1             ; 10488
LD     0 0          ; var pt ; 10489
CONS                 ; 10490
RTN                  ; 10491
LD     0 0          ;  <== lambda_1006  [SortedMap<T> acc, Tuple<Integer,T> elem] (as expr), @src/app/SortedMap.java(138,62) ; 10492
LD     0 1          ; var elem ; 10493
CAR                 ; generateTupleAccess total=2 pos=0 ; 10494
LD     0 1          ; var elem ; 10495
CDR                 ; generateTupleAccess total=2 pos=1 ; 10496
LDF    1304         ;  @sorted_map_assoc ; 10497
AP     3             ; 10498
RTN                  ; 10499
LD     1 0          ;  <== lambda_1007  [j] (as expr), @src/app/Sample1.java(686,79) ; 10500
LD     0 0          ; var j ; 10501
LD     1 8          ; var junctions ; 10502
LD     1 6          ; var junctionsList ; 10503
LD     1 1          ; var accessors ; 10504
LDC 0               ; local var space ; 10505
LDF    3665         ;  @findNeighbourJunctions ; 10506
AP     6             ; 10507
RTN                  ; 10508
LD     0 0          ;  <== lambda_1008  [final Integer op, final Point p] (as expr), @src/app/VMExtras.java(47,52) ; 10509
LD     0 1          ; var p ; 10510
CAR                 ; generateTupleAccess total=2 pos=0 ; 10511
LDC    0            ; NULL literal ; 10512
LDC    100          ; Named Const = VMExtras.GET_READER ; 10513
LD     0 1          ; var p ; 10514
CDR                 ; generateTupleAccess total=2 pos=1 ; 10515
LD     1 1          ; var wrapper ; 10516
AP     2             ; 10517
AP     1             ; 10518
AP     2             ; 10519
RTN                  ; 10520
LD     0 0          ;  <== lambda_1009  [ParsedEdge e] (as expr), @src/app/Sample1.java(689,62) ; 10521
CDR                 ; generateTupleAccess total=10 pos=1 ; 10522
CAR                  ; 10523
LDF    11314        ;  @lambda_1062 ; 10524
LDF    56           ;  @map ; 10525
AP     2             ; 10526
RTN                  ; 10527
LDC    0            ;  <== lambda_1010  [Key k] (as expr), @src/app/VMExtras.java(26,26) ; 10528
LDC    100          ; Named Const = VMExtras.GET_READER ; 10529
LD     0 0          ; var k ; 10530
LD     1 0          ; var readWriteAccessor ; 10531
AP     2             ; 10532
AP     1             ; 10533
RTN                  ; 10534
LD     0 0          ;  <== lambda_1011  [pe] (as expr), @src/app/Sample1.java(693,62) ; 10535
LD     1 12         ; var readOnlyEdgesForPoint ; 10536
LDC 0               ; local var space ; 10537
LDC 0               ; local var space ; 10538
LDC 0               ; local var space ; 10539
LDC 0               ; local var space ; 10540
LDC 0               ; local var space ; 10541
LDC 0               ; local var space ; 10542
LDC 0               ; local var space ; 10543
LDF    4046         ;  @updateOtherParsedEdgeFields ; 10544
AP     9             ; 10545
RTN                  ; 10546
LD     0 0          ;  <== lambda_1012  [GhostState g, ListCons s, Integer ind] (as expr), @src/app/Sample1.java(518,70) ; 10547
CDR                 ; generateTupleAccess total=3 pos=1 ; 10548
CAR                  ; 10549
LD     0 1          ; var s ; 10550
LD     0 2          ; var ind ; 10551
CONS                 ; 10552
CONS                 ; 10553
RTN                  ; 10554
LD     0 0          ;  <== lambda_1013  [nextaistate, worldState] (as expr), @src/app/Sample1.java(63,70) ; 10555
LD     0 1          ; var worldState ; 10556
LDC 0               ; local var space ; 10557
LDC 0               ; local var space ; 10558
LDC 0               ; local var space ; 10559
LDC 0               ; local var space ; 10560
LDC 0               ; local var space ; 10561
LDC 0               ; local var space ; 10562
LDC 0               ; local var space ; 10563
LDC 0               ; local var space ; 10564
LDC 0               ; local var space ; 10565
LDC 0               ; local var space ; 10566
LDC 0               ; local var space ; 10567
LDC 0               ; local var space ; 10568
LDC 0               ; local var space ; 10569
LDF    2601         ;  @performMove ; 10570
AP     15            ; 10571
RTN                  ; 10572
LD     0 0          ;  <== lambda_1014  [x] (as expr), @src/app/VM.java(153,20) ; 10573
LD     1 1          ; var g ; 10574
AP     1             ; 10575
LD     1 0          ; var f ; 10576
AP     1             ; 10577
RTN                  ; 10578
LD     0 1          ;  <== lambda_1015  [b, a] (as expr), @src/app/VM.java(179,25) ; 10579
LD     0 0          ; var b ; 10580
LD     1 0          ; var f ; 10581
AP     2             ; 10582
RTN                  ; 10583
LD     0 0          ;  <== lambda_1016  [d] (as expr), @src/app/VM.java(252,53) ; 10584
LDF    213          ;  @maybeToList ; 10585
AP     1             ; 10586
RTN                  ; 10587
LD     0 0          ;  <== lambda_1017  [Integer a] (as expr), @src/app/LambdaGhostEmulator.java(84,40) ; 10588
LD     0 0          ; var a ; 10589
LDC    2            ; just constant from code ; 10590
DIV                  ; 10591
LDC    2            ; just constant from code ; 10592
MUL                  ; 10593
CEQ                  ; 10594
SEL    10601 10603  ; IF? 70 ; 10595
LD     0 0          ; var a ; 10596
LDC    2            ; just constant from code ; 10597
DIV                  ; 10598
CONS                 ; 10599
RTN                  ; 10600
LDC    0            ; THEN: 70 ; 10601
JOIN                 ; 10602
LDC    1            ; ELSE: 70 ; 10603
JOIN                 ; 10604
LD     0 1          ;  <== lambda_1018  [Integer elem, Integer acc] (as expr), @src/app/LambdaGhostEmulator.java(91,52) ; 10605
LDC    2            ; just constant from code ; 10606
MUL                  ; 10607
LD     0 0          ; var elem ; 10608
ADD                  ; 10609
RTN                  ; 10610
LD     0 0          ;  <== lambda_1019  [Tuple<Integer,SortedMap<Cons>> init, Cons step] (as expr), @src/app/LambdaGhostEmulator.java(157,77) ; 10611
CAR                 ; generateTupleAccess total=2 pos=0 ; 10612
LDC    1            ; just constant from code ; 10613
ADD                  ; 10614
LD     0 0          ; var init ; 10615
CDR                 ; generateTupleAccess total=2 pos=1 ; 10616
LD     0 0          ; var init ; 10617
CAR                 ; generateTupleAccess total=2 pos=0 ; 10618
LD     0 1          ; var step ; 10619
LDF    1304         ;  @sorted_map_assoc ; 10620
AP     3             ; 10621
CONS                 ; 10622
RTN                  ; 10623
LD     0 0          ;  <== lambda_1020  [Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(79,152) ; 10624
CDR                 ; generateTupleAccess total=2 pos=1 ; 10625
CAR                 ; generateTupleAccess total=2 pos=0 ; 10626
LD     1 1          ; var start ; 10627
CAR                 ; generateTupleAccess total=2 pos=0 ; 10628
CEQ                  ; 10629
LDC    1            ; for negation ; 10630
SUB                  ; 10631
LD     0 0          ; var t ; 10632
CDR                 ; generateTupleAccess total=2 pos=1 ; 10633
CDR                 ; generateTupleAccess total=2 pos=1 ; 10634
LD     1 1          ; var start ; 10635
CDR                 ; generateTupleAccess total=2 pos=1 ; 10636
CEQ                  ; 10637
LDC    1            ; for negation ; 10638
SUB                  ; 10639
ADD                  ; 10640
SEL    10643 10645  ; IF? 71 ; 10641
RTN                  ; 10642
LDC    1            ; THEN: 71 ; 10643
JOIN                 ; 10644
LDC    0            ; ELSE: 71 ; 10645
JOIN                 ; 10646
LDC    0            ;  <== lambda_1021  [Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(80,136) ; 10647
LD     0 0          ; var t ; 10648
CAR                 ; generateTupleAccess total=2 pos=0 ; 10649
AP     1             ; 10650
LDC    2            ; Named Const = CT.PILL ; 10651
CEQ                  ; 10652
SEL    10655 10657  ; IF? 72 ; 10653
RTN                  ; 10654
LDC    1            ; THEN: 72 ; 10655
JOIN                 ; 10656
LDC    0            ; ELSE: 72 ; 10657
JOIN                 ; 10658
LDC    0            ;  <== lambda_1022  [Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(87,133) ; 10659
LD     0 0          ; var t ; 10660
CAR                 ; generateTupleAccess total=2 pos=0 ; 10661
AP     1             ; 10662
LDC    2            ; Named Const = CT.PILL ; 10663
CEQ                  ; 10664
SEL    10667 10669  ; IF? 73 ; 10665
RTN                  ; 10666
LDC    1            ; THEN: 73 ; 10667
JOIN                 ; 10668
LDC    0            ; ELSE: 73 ; 10669
JOIN                 ; 10670
LD     0 0          ;  <== lambda_1023  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(94,104) ; 10671
LDC    0            ; just constant from code ; 10672
LD     0 1          ; var t ; 10673
CAR                 ; generateTupleAccess total=2 pos=0 ; 10674
AP     1             ; 10675
LDC    2            ; Named Const = CT.PILL ; 10676
CEQ                  ; 10677
SEL    10681 10683  ; IF? 74 ; 10678
ADD                  ; 10679
RTN                  ; 10680
LDC    1            ; THEN: 74 ; 10681
JOIN                 ; 10682
LDC    0            ; ELSE: 74 ; 10683
JOIN                 ; 10684
LD     0 0          ;  <== lambda_1024  [Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(100,152) ; 10685
CDR                 ; generateTupleAccess total=2 pos=1 ; 10686
CAR                 ; generateTupleAccess total=2 pos=0 ; 10687
LD     1 1          ; var start ; 10688
CAR                 ; generateTupleAccess total=2 pos=0 ; 10689
CEQ                  ; 10690
LDC    1            ; for negation ; 10691
SUB                  ; 10692
LD     0 0          ; var t ; 10693
CDR                 ; generateTupleAccess total=2 pos=1 ; 10694
CDR                 ; generateTupleAccess total=2 pos=1 ; 10695
LD     1 1          ; var start ; 10696
CDR                 ; generateTupleAccess total=2 pos=1 ; 10697
CEQ                  ; 10698
LDC    1            ; for negation ; 10699
SUB                  ; 10700
ADD                  ; 10701
SEL    10704 10706  ; IF? 75 ; 10702
RTN                  ; 10703
LDC    1            ; THEN: 75 ; 10704
JOIN                 ; 10705
LDC    0            ; ELSE: 75 ; 10706
JOIN                 ; 10707
LD     0 0          ;  <== lambda_1025  [Tuple<Integer,Integer> acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(101,173) ; 10708
CAR                 ; generateTupleAccess total=2 pos=0 ; 10709
LD     0 0          ; var acc ; 10710
CDR                 ; generateTupleAccess total=2 pos=1 ; 10711
LDC    0            ; just constant from code ; 10712
LD     0 1          ; var t ; 10713
CAR                 ; generateTupleAccess total=2 pos=0 ; 10714
AP     1             ; 10715
LDC    2            ; Named Const = CT.PILL ; 10716
CEQ                  ; 10717
SEL    10732 10734  ; IF? 76 ; 10718
MUL                  ; 10719
ADD                  ; 10720
LD     0 0          ; var acc ; 10721
CDR                 ; generateTupleAccess total=2 pos=1 ; 10722
LDC    100          ; just constant from code ; 10723
MUL                  ; 10724
LDC    20           ; just constant from code ; 10725
DIV                  ; 10726
LDC    1            ; just constant from code ; 10727
LDF    390          ;  @max ; 10728
AP     2             ; 10729
CONS                 ; 10730
RTN                  ; 10731
LDC    1            ; THEN: 76 ; 10732
JOIN                 ; 10733
LDC    0            ; ELSE: 76 ; 10734
JOIN                 ; 10735
LDC    0            ;  <== lambda_1026  [ParsedEdge e] (as expr), @src/app/Sample1.java(136,90) ; 10736
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 10737
LDC    0            ; just constant from code ; 10738
LD     0 0          ; var e ; 10739
CDR                 ; generateTupleAccess total=10 pos=5 ; 10740
CDR                  ; 10741
CDR                  ; 10742
CDR                  ; 10743
CDR                  ; 10744
CAR                  ; 10745
AP     2             ; 10746
AP     1             ; 10747
RTN                  ; 10748
LD     1 0          ;  <== lambda_1027  [g] (as expr), @src/app/Sample1.java(137,43) ; 10749
LD     0 0          ; var g ; 10750
LDC 0               ; local var space ; 10751
LDC 0               ; local var space ; 10752
LDC 0               ; local var space ; 10753
LDC 0               ; local var space ; 10754
LDC 0               ; local var space ; 10755
LDC 0               ; local var space ; 10756
LDF    2900         ;  @placeGhostDanger ; 10757
AP     8             ; 10758
RTN                  ; 10759
LD     0 0          ;  <== lambda_1028  [Queue<ListCons<ParsedEdge>> qq, ParsedEdge e] (as expr), @src/app/Sample1.java(333,85) ; 10760
LD     0 1          ; var e ; 10761
LDC    0            ; NULL literal ; 10762
CONS                 ; 10763
LDF    403          ;  @queue_enqueue ; 10764
AP     2             ; 10765
RTN                  ; 10766
LDC    0            ;  <== lambda_1029  [ParsedEdge pe] (as expr), @src/app/Sample1.java(337,92) ; 10767
LD     0 0          ; var pe ; 10768
CDR                 ; generateTupleAccess total=10 pos=4 ; 10769
CDR                  ; 10770
CDR                  ; 10771
CDR                  ; 10772
CAR                  ; 10773
AP     1             ; 10774
RTN                  ; 10775
LDC    1            ;  <== lambda_1030  [ParsedEdge pe] (as expr), @src/app/Sample1.java(338,51) ; 10776
LD     0 0          ; var pe ; 10777
CDR                 ; generateTupleAccess total=10 pos=4 ; 10778
CDR                  ; 10779
CDR                  ; 10780
CDR                  ; 10781
CAR                  ; 10782
AP     1             ; 10783
RTN                  ; 10784
LD     0 0          ;  <== lambda_1031  [d] (as expr), @src/app/Sample1.java(343,74) ; 10785
LDF    286          ;  @reverse ; 10786
AP     1             ; 10787
RTN                  ; 10788
LD     1 2          ;  <== lambda_1032  [r] (as expr), @src/app/Sample1.java(347,127) ; 10789
LD     0 0          ; var r ; 10790
LDC 0               ; local var space ; 10791
LDC 0               ; local var space ; 10792
LDF    3432         ;  @calculateRouteScore ; 10793
AP     4             ; 10794
RTN                  ; 10795
LD     0 0          ;  <== lambda_1033  [Triple<ListCons<ParsedEdge>,Integer,Triple<Integer,Integer,Integer>> t] (as expr), @src/app/Sample1.java(350,195) ; 10796
CDR                 ; generateTupleAccess total=3 pos=1 ; 10797
CAR                  ; 10798
RTN                  ; 10799
LD     0 0          ;  <== lambda_1034  [Tuple<Function1<Integer,Integer>,Point> ea] (as expr), @src/app/Sample1.java(139,155) ; 10800
CDR                 ; generateTupleAccess total=2 pos=1 ; 10801
CAR                 ; generateTupleAccess total=2 pos=0 ; 10802
LD     1 2          ; var location ; 10803
CAR                 ; generateTupleAccess total=2 pos=0 ; 10804
CEQ                  ; 10805
LDC    1            ; for negation ; 10806
SUB                  ; 10807
LD     0 0          ; var ea ; 10808
CDR                 ; generateTupleAccess total=2 pos=1 ; 10809
CDR                 ; generateTupleAccess total=2 pos=1 ; 10810
LD     1 2          ; var location ; 10811
CDR                 ; generateTupleAccess total=2 pos=1 ; 10812
CEQ                  ; 10813
LDC    1            ; for negation ; 10814
SUB                  ; 10815
ADD                  ; 10816
SEL    10819 10821  ; IF? 77 ; 10817
RTN                  ; 10818
LDC    1            ; THEN: 77 ; 10819
JOIN                 ; 10820
LDC    0            ; ELSE: 77 ; 10821
JOIN                 ; 10822
LDC    1            ;  <== lambda_1035  [ParsedEdge fe] (as expr), @src/app/Sample1.java(189,67) ; 10823
LD     0 0          ; var fe ; 10824
CDR                 ; generateTupleAccess total=10 pos=4 ; 10825
CDR                  ; 10826
CDR                  ; 10827
CDR                  ; 10828
CAR                  ; 10829
AP     1             ; 10830
LDC    0            ; just constant from code ; 10831
CEQ                  ; 10832
SEL    10835 10837  ; IF? 78 ; 10833
RTN                  ; 10834
LDC    1            ; THEN: 78 ; 10835
JOIN                 ; 10836
LDC    0            ; ELSE: 78 ; 10837
JOIN                 ; 10838
LD     0 0          ;  <== lambda_1036  [ParsedEdge fe] (as expr), @src/app/Sample1.java(191,70) ; 10839
LD     1 3          ; var a ; 10840
CDR                 ; generateTupleAccess total=3 pos=1 ; 10841
CAR                  ; 10842
LD     1 5          ; var countNewEdges ; 10843
DIV                  ; 10844
LDC 0               ; local var space ; 10845
LDC 0               ; local var space ; 10846
LDF    3027         ;  @addEdgeDanger ; 10847
AP     4             ; 10848
RTN                  ; 10849
LD     0 0          ;  <== lambda_1037  [Queue<EdgeDangerWaveItem> qq, ParsedEdge pe] (as expr), @src/app/Sample1.java(192,127) ; 10850
LD     0 1          ; var pe ; 10851
LD     1 3          ; var a ; 10852
CDR                 ; generateTupleAccess total=3 pos=1 ; 10853
CAR                  ; 10854
LD     1 5          ; var countNewEdges ; 10855
DIV                  ; 10856
LD     1 3          ; var a ; 10857
CDR                 ; generateTupleAccess total=3 pos=2 ; 10858
CDR                  ; 10859
LD     0 1          ; var pe ; 10860
CDR                 ; generateTupleAccess total=10 pos=1 ; 10861
CAR                  ; 10862
LDF    528          ;  @length ; 10863
AP     1             ; 10864
ADD                  ; 10865
CONS                 ; 10866
CONS                 ; 10867
LDF    403          ;  @queue_enqueue ; 10868
AP     2             ; 10869
RTN                  ; 10870
LDC    0            ;  <== lambda_1038  [ParsedEdge pe] (as expr), @src/app/Sample1.java(198,92) ; 10871
LD     0 0          ; var pe ; 10872
CDR                 ; generateTupleAccess total=10 pos=4 ; 10873
CDR                  ; 10874
CDR                  ; 10875
CDR                  ; 10876
CAR                  ; 10877
AP     1             ; 10878
RTN                  ; 10879
LD     0 0          ;  <== lambda_1039  [e] (as expr), @src/app/Sample1.java(217,53) ; 10880
LD     1 1          ; var gs ; 10881
CDR                 ; generateTupleAccess total=3 pos=1 ; 10882
CAR                  ; 10883
LDC 0               ; local var space ; 10884
LDF    3057         ;  @remainingPath ; 10885
AP     3             ; 10886
CAR                  ; 10887
LD     1 6          ; var nextPoint ; 10888
LDF    3237         ;  @pointEquals3 ; 10889
AP     2             ; 10890
LDC    1            ; just constant from code ; 10891
CEQ                  ; 10892
LD     0 0          ; var e ; 10893
LD     1 1          ; var gs ; 10894
CDR                 ; generateTupleAccess total=3 pos=1 ; 10895
CAR                  ; 10896
LDC 0               ; local var space ; 10897
LDF    3057         ;  @remainingPath ; 10898
AP     3             ; 10899
CAR                  ; 10900
LD     1 1          ; var gs ; 10901
CDR                 ; generateTupleAccess total=3 pos=1 ; 10902
CAR                  ; 10903
LDF    3237         ;  @pointEquals3 ; 10904
AP     2             ; 10905
LDC    1            ; just constant from code ; 10906
CEQ                  ; 10907
ADD                  ; 10908
SEL    10911 10913  ; IF? 79 ; 10909
RTN                  ; 10910
LDC    1            ; THEN: 79 ; 10911
JOIN                 ; 10912
LDC    0            ; ELSE: 79 ; 10913
JOIN                 ; 10914
LD     0 0          ;  <== lambda_1040  [ParsedEdge e] (as expr), @src/app/Sample1.java(220,68) ; 10915
LD     0 0          ; var e ; 10916
CDR                 ; generateTupleAccess total=10 pos=1 ; 10917
CAR                  ; 10918
LDF    528          ;  @length ; 10919
AP     1             ; 10920
LD     0 0          ; var e ; 10921
LD     1 1          ; var gs ; 10922
CDR                 ; generateTupleAccess total=3 pos=1 ; 10923
CAR                  ; 10924
LDC 0               ; local var space ; 10925
LDF    3057         ;  @remainingPath ; 10926
AP     3             ; 10927
LDF    528          ;  @length ; 10928
AP     1             ; 10929
LDC 0               ; local var space ; 10930
LDF    3011         ;  @initialDangerPercent ; 10931
AP     3             ; 10932
LDC 0               ; local var space ; 10933
LDC 0               ; local var space ; 10934
LDF    3027         ;  @addEdgeDanger ; 10935
AP     4             ; 10936
RTN                  ; 10937
LD     1 0          ;  <== lambda_1041  [e] (as expr), @src/app/Sample1.java(223,39) ; 10938
LD     0 0          ; var e ; 10939
LDC    100          ; just constant from code ; 10940
LD     0 0          ; var e ; 10941
LD     1 1          ; var gs ; 10942
CDR                 ; generateTupleAccess total=3 pos=1 ; 10943
CAR                  ; 10944
LDC 0               ; local var space ; 10945
LDF    3057         ;  @remainingPath ; 10946
AP     3             ; 10947
LDF    528          ;  @length ; 10948
AP     1             ; 10949
CONS                 ; 10950
CONS                 ; 10951
LDC 0               ; local var space ; 10952
LDC 0               ; local var space ; 10953
LDC 0               ; local var space ; 10954
LDF    2868         ;  @waveGhostDanger ; 10955
AP     5             ; 10956
RTN                  ; 10957
LD     0 0          ;  <== lambda_1042  [Tuple<Function1<Integer,Integer>,Point> ea] (as expr), @src/app/Sample1.java(243,150) ; 10958
CDR                 ; generateTupleAccess total=2 pos=1 ; 10959
LD     1 1          ; var location ; 10960
LDF    3199         ;  @pointEquals ; 10961
AP     2             ; 10962
LDC    0            ; just constant from code ; 10963
CEQ                  ; 10964
SEL    10967 10969  ; IF? 80 ; 10965
RTN                  ; 10966
LDC    1            ; THEN: 80 ; 10967
JOIN                 ; 10968
LDC    0            ; ELSE: 80 ; 10969
JOIN                 ; 10970
LDC    1            ;  <== lambda_1043  [ParsedEdge f] (as expr), @src/app/Sample1.java(271,56) ; 10971
LD     0 0          ; var f ; 10972
CDR                 ; generateTupleAccess total=10 pos=4 ; 10973
CDR                  ; 10974
CDR                  ; 10975
CDR                  ; 10976
CAR                  ; 10977
AP     1             ; 10978
LDC    0            ; just constant from code ; 10979
CEQ                  ; 10980
SEL    10983 10985  ; IF? 81 ; 10981
RTN                  ; 10982
LDC    1            ; THEN: 81 ; 10983
JOIN                 ; 10984
LDC    0            ; ELSE: 81 ; 10985
JOIN                 ; 10986
LD     0 0          ;  <== lambda_1044  [pe] (as expr), @src/app/Sample1.java(272,66) ; 10987
LD     1 1          ; var worldState ; 10988
CAR                 ; generateTupleAccess total=4 pos=0 ; 10989
LDC 0               ; local var space ; 10990
LDC 0               ; local var space ; 10991
LDF    2560         ;  @collectAnyEdgePills ; 10992
AP     4             ; 10993
LDF    528          ;  @length ; 10994
AP     1             ; 10995
LDC    0            ; just constant from code ; 10996
CGT                  ; 10997
SEL    11000 11002  ; IF? 82 ; 10998
RTN                  ; 10999
LDC    1            ; THEN: 82 ; 11000
JOIN                 ; 11001
LDC    0            ; ELSE: 82 ; 11002
JOIN                 ; 11003
LD     0 0          ;  <== lambda_1045  [ParsedEdge next] (as expr), @src/app/Sample1.java(274,87) ; 11004
LD     1 7          ; var lookingEdge ; 11005
CONS                 ; 11006
RTN                  ; 11007
LD     0 0          ;  <== lambda_1046  [Queue<ListCons<ParsedEdge>> qq, ListCons<ParsedEdge> nr] (as expr), @src/app/Sample1.java(275,133) ; 11008
LD     0 1          ; var nr ; 11009
LDF    403          ;  @queue_enqueue ; 11010
AP     2             ; 11011
RTN                  ; 11012
LD     0 0          ;  <== lambda_1047  [acc, pe] (as expr), @src/app/Sample1.java(304,44) ; 11013
LD     0 1          ; var pe ; 11014
LDC 0               ; local var space ; 11015
LDC 0               ; local var space ; 11016
LDF    2571         ;  @countAnyEdgePills ; 11017
AP     3             ; 11018
ADD                  ; 11019
RTN                  ; 11020
LD     0 1          ;  <== lambda_1048  [p, ix] (as expr), @src/app/Sample1.java(572,62) ; 11021
LD     0 0          ; var p ; 11022
LD     1 4          ; var accessors ; 11023
LDC 0               ; local var space ; 11024
LDF    3699         ;  @makeParsedEdge ; 11025
AP     4             ; 11026
RTN                  ; 11027
LDC    100          ;  <== lambda_1049  [Point pt] (as expr), @src/app/Sample1.java(606,16) ; 11028
LD     0 0          ; var pt ; 11029
CAR                 ; generateTupleAccess total=2 pos=0 ; 11030
LD     1 1          ; var accessors ; 11031
LD     0 0          ; var pt ; 11032
CDR                 ; generateTupleAccess total=2 pos=1 ; 11033
LDF    419          ;  @list_item ; 11034
AP     2             ; 11035
AP     2             ; 11036
RTN                  ; 11037
LD     1 0          ;  <== lambda_1050  [Tuple<Integer,Point> d] (as expr), @src/app/Sample1.java(645,106) ; 11038
LD     0 0          ; var d ; 11039
CDR                 ; generateTupleAccess total=2 pos=1 ; 11040
LDF    3530         ;  @isWalkable2 ; 11041
AP     2             ; 11042
LDC    1            ; just constant from code ; 11043
LD     1 4          ; var visited ; 11044
LD     0 0          ; var d ; 11045
CAR                 ; generateTupleAccess total=2 pos=0 ; 11046
LDF    1273         ;  @sorted_map_contains ; 11047
AP     2             ; 11048
SUB                  ; 11049
MUL                  ; 11050
RTN                  ; 11051
LD     1 2          ;  <== lambda_1051  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(646,98) ; 11052
LD     0 0          ; var e ; 11053
CAR                 ; generateTupleAccess total=2 pos=0 ; 11054
LDF    1273         ;  @sorted_map_contains ; 11055
AP     2             ; 11056
RTN                  ; 11057
LD     1 3          ;  <== lambda_1052  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(647,99) ; 11058
LDF    11330        ;  @lambda_1063 ; 11059
LDF    541          ;  @any ; 11060
AP     2             ; 11061
RTN                  ; 11062
LDC    1            ;  <== lambda_1053  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(649,96) ; 11063
LD     1 14         ; var arriveds ; 11064
LD     0 0          ; var e ; 11065
CAR                 ; generateTupleAccess total=2 pos=0 ; 11066
LDF    1273         ;  @sorted_map_contains ; 11067
AP     2             ; 11068
SUB                  ; 11069
RTN                  ; 11070
LD     0 0          ;  <== lambda_1054  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(650,92) ; 11071
CDR                 ; generateTupleAccess total=2 pos=1 ; 11072
LD     1 8          ; var thisRoute ; 11073
CONS                 ; 11074
RTN                  ; 11075
LD     0 0          ;  <== lambda_1055  [r, i] (as expr), @src/app/Sample1.java(651,84) ; 11076
LD     0 1          ; var i ; 11077
LDF    403          ;  @queue_enqueue ; 11078
AP     2             ; 11079
RTN                  ; 11080
LD     0 0          ;  <== lambda_1056  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(652,107) ; 11081
CDR                 ; generateTupleAccess total=2 pos=1 ; 11082
LD     1 8          ; var thisRoute ; 11083
CONS                 ; 11084
RTN                  ; 11085
LD     0 0          ;  <== lambda_1057  [ParsedEdge me] (as expr), @src/app/Sample1.java(704,85) ; 11086
CDR                 ; generateTupleAccess total=10 pos=9 ; 11087
CDR                  ; 11088
CDR                  ; 11089
CDR                  ; 11090
CDR                  ; 11091
CDR                  ; 11092
CDR                  ; 11093
CDR                  ; 11094
CDR                  ; 11095
LD     1 0          ; var pe ; 11096
CDR                 ; generateTupleAccess total=10 pos=8 ; 11097
CDR                  ; 11098
CDR                  ; 11099
CDR                  ; 11100
CDR                  ; 11101
CDR                  ; 11102
CDR                  ; 11103
CDR                  ; 11104
CAR                  ; 11105
LDF    3199         ;  @pointEquals ; 11106
AP     2             ; 11107
LD     0 0          ; var me ; 11108
CDR                 ; generateTupleAccess total=10 pos=8 ; 11109
CDR                  ; 11110
CDR                  ; 11111
CDR                  ; 11112
CDR                  ; 11113
CDR                  ; 11114
CDR                  ; 11115
CDR                  ; 11116
CAR                  ; 11117
LD     1 0          ; var pe ; 11118
CDR                 ; generateTupleAccess total=10 pos=9 ; 11119
CDR                  ; 11120
CDR                  ; 11121
CDR                  ; 11122
CDR                  ; 11123
CDR                  ; 11124
CDR                  ; 11125
CDR                  ; 11126
CDR                  ; 11127
LDF    3199         ;  @pointEquals ; 11128
AP     2             ; 11129
MUL                  ; 11130
RTN                  ; 11131
LD     0 0          ;  <== lambda_1058  [ParsedEdge me] (as expr), @src/app/Sample1.java(705,87) ; 11132
CDR                 ; generateTupleAccess total=10 pos=9 ; 11133
CDR                  ; 11134
CDR                  ; 11135
CDR                  ; 11136
CDR                  ; 11137
CDR                  ; 11138
CDR                  ; 11139
CDR                  ; 11140
CDR                  ; 11141
LD     1 0          ; var pe ; 11142
CDR                 ; generateTupleAccess total=10 pos=8 ; 11143
CDR                  ; 11144
CDR                  ; 11145
CDR                  ; 11146
CDR                  ; 11147
CDR                  ; 11148
CDR                  ; 11149
CDR                  ; 11150
CAR                  ; 11151
LDF    3199         ;  @pointEquals ; 11152
AP     2             ; 11153
LDC    1            ; just constant from code ; 11154
CEQ                  ; 11155
LD     0 0          ; var me ; 11156
CDR                 ; generateTupleAccess total=10 pos=9 ; 11157
CDR                  ; 11158
CDR                  ; 11159
CDR                  ; 11160
CDR                  ; 11161
CDR                  ; 11162
CDR                  ; 11163
CDR                  ; 11164
CDR                  ; 11165
LD     1 0          ; var pe ; 11166
CDR                 ; generateTupleAccess total=10 pos=8 ; 11167
CDR                  ; 11168
CDR                  ; 11169
CDR                  ; 11170
CDR                  ; 11171
CDR                  ; 11172
CDR                  ; 11173
CDR                  ; 11174
CAR                  ; 11175
LDF    3199         ;  @pointEquals ; 11176
AP     2             ; 11177
LD     0 0          ; var me ; 11178
CDR                 ; generateTupleAccess total=10 pos=8 ; 11179
CDR                  ; 11180
CDR                  ; 11181
CDR                  ; 11182
CDR                  ; 11183
CDR                  ; 11184
CDR                  ; 11185
CDR                  ; 11186
CAR                  ; 11187
LD     1 0          ; var pe ; 11188
CDR                 ; generateTupleAccess total=10 pos=9 ; 11189
CDR                  ; 11190
CDR                  ; 11191
CDR                  ; 11192
CDR                  ; 11193
CDR                  ; 11194
CDR                  ; 11195
CDR                  ; 11196
CDR                  ; 11197
LDF    3199         ;  @pointEquals ; 11198
AP     2             ; 11199
MUL                  ; 11200
LDC    0            ; just constant from code ; 11201
CEQ                  ; 11202
MUL                  ; 11203
SEL    11206 11208  ; IF? 83 ; 11204
RTN                  ; 11205
LDC    1            ; THEN: 83 ; 11206
JOIN                 ; 11207
LDC    0            ; ELSE: 83 ; 11208
JOIN                 ; 11209
LD     0 0          ;  <== lambda_1059  [ParsedEdge me] (as expr), @src/app/Sample1.java(707,83) ; 11210
CDR                 ; generateTupleAccess total=10 pos=8 ; 11211
CDR                  ; 11212
CDR                  ; 11213
CDR                  ; 11214
CDR                  ; 11215
CDR                  ; 11216
CDR                  ; 11217
CDR                  ; 11218
CAR                  ; 11219
LD     1 0          ; var pe ; 11220
CDR                 ; generateTupleAccess total=10 pos=9 ; 11221
CDR                  ; 11222
CDR                  ; 11223
CDR                  ; 11224
CDR                  ; 11225
CDR                  ; 11226
CDR                  ; 11227
CDR                  ; 11228
CDR                  ; 11229
LDF    3199         ;  @pointEquals ; 11230
AP     2             ; 11231
LDC    1            ; just constant from code ; 11232
CEQ                  ; 11233
LD     0 0          ; var me ; 11234
CDR                 ; generateTupleAccess total=10 pos=9 ; 11235
CDR                  ; 11236
CDR                  ; 11237
CDR                  ; 11238
CDR                  ; 11239
CDR                  ; 11240
CDR                  ; 11241
CDR                  ; 11242
CDR                  ; 11243
LD     1 0          ; var pe ; 11244
CDR                 ; generateTupleAccess total=10 pos=8 ; 11245
CDR                  ; 11246
CDR                  ; 11247
CDR                  ; 11248
CDR                  ; 11249
CDR                  ; 11250
CDR                  ; 11251
CDR                  ; 11252
CAR                  ; 11253
LDF    3199         ;  @pointEquals ; 11254
AP     2             ; 11255
LD     0 0          ; var me ; 11256
CDR                 ; generateTupleAccess total=10 pos=8 ; 11257
CDR                  ; 11258
CDR                  ; 11259
CDR                  ; 11260
CDR                  ; 11261
CDR                  ; 11262
CDR                  ; 11263
CDR                  ; 11264
CAR                  ; 11265
LD     1 0          ; var pe ; 11266
CDR                 ; generateTupleAccess total=10 pos=9 ; 11267
CDR                  ; 11268
CDR                  ; 11269
CDR                  ; 11270
CDR                  ; 11271
CDR                  ; 11272
CDR                  ; 11273
CDR                  ; 11274
CDR                  ; 11275
LDF    3199         ;  @pointEquals ; 11276
AP     2             ; 11277
MUL                  ; 11278
LDC    0            ; just constant from code ; 11279
CEQ                  ; 11280
MUL                  ; 11281
SEL    11284 11286  ; IF? 84 ; 11282
RTN                  ; 11283
LDC    1            ; THEN: 84 ; 11284
JOIN                 ; 11285
LDC    0            ; ELSE: 84 ; 11286
JOIN                 ; 11287
LD     0 0          ;  <== lambda_1060  [col, colx] (as expr), @src/app/Sample1.java(723,43) ; 11288
LDC 0               ; local var space ; 11289
LDF    3516         ;  @isWalkable ; 11290
AP     2             ; 11291
LDC    0            ; just constant from code ; 11292
CGT                  ; 11293
SEL    11296 11303  ; IF? 85 ; 11294
RTN                  ; 11295
LD     0 1          ; THEN: 85 ; 11296
LD     1 1          ; var rowy ; 11297
CONS                 ; 11298
LDC 0               ; local var space ; 11299
LDF    207          ;  @JUST ; 11300
AP     2             ; 11301
JOIN                 ; 11302
LDF    203          ; ELSE: 85, ALSO: @NOTHING ; 11303
AP     0             ; 11304
JOIN                 ; 11305
LD     0 0          ;  <== lambda_1061  [val, ix] (as expr), @src/app/Sample1.java(678,50) ; 11306
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 11307
LD     0 1          ; var ix ; 11308
LD     1 0          ; var t ; 11309
CDR                 ; generateTupleAccess total=2 pos=1 ; 11310
AP     2             ; 11311
AP     1             ; 11312
RTN                  ; 11313
LD     1 0          ;  <== lambda_1062  [Tuple<Function1<Integer,Integer>,Point> ea] (as expr), @src/app/Sample1.java(689,130) ; 11314
LDC    0            ; NULL literal ; 11315
LDC    100          ; Named Const = VMExtras.GET_READER ; 11316
LD     0 0          ; var ea ; 11317
CDR                 ; generateTupleAccess total=2 pos=1 ; 11318
LD     2 10         ; var edgesForPoint ; 11319
AP     2             ; 11320
AP     1             ; 11321
CONS                 ; 11322
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 11323
LD     0 0          ; var ea ; 11324
CDR                 ; generateTupleAccess total=2 pos=1 ; 11325
LD     2 10         ; var edgesForPoint ; 11326
AP     2             ; 11327
AP     1             ; 11328
RTN                  ; 11329
LD     1 0          ;  <== lambda_1063  [d] (as expr), @src/app/Sample1.java(647,125) ; 11330
CDR                 ; generateTupleAccess total=2 pos=1 ; 11331
LD     0 0          ; var d ; 11332
LDF    3199         ;  @pointEquals ; 11333
AP     2             ; 11334
RTN                  ; 11335
LD     0 0          ;  <== lambda_1064  [x, y] (as expr), @src/app/LambdaGhostEmulator.java(106,48) ; 11336
LD     0 1          ; var y ; 11337
MUL                  ; 11338
RTN                  ; 11339
LD     0 0          ;  <== lambda_1065  [x, y] (as expr), @src/app/LambdaGhostEmulator.java(107,57) ; 11340
LD     0 1          ; var y ; 11341
ADD                  ; 11342
LDC    0            ; just constant from code ; 11343
CGT                  ; 11344
SEL    11347 11349  ; IF? 146 ; 11345
RTN                  ; 11346
LDC    1            ; THEN: 146 ; 11347
JOIN                 ; 11348
LDC    0            ; ELSE: 146 ; 11349
JOIN                 ; 11350
LD     0 0          ;  <== lambda_1066  [x, y] (as expr), @src/app/LambdaGhostEmulator.java(108,37) ; 11351
LD     0 1          ; var y ; 11352
LDF    1846         ;  @intCompare ; 11353
AP     2             ; 11354
LDC    1            ; just constant from code ; 11355
CEQ                  ; 11356
SEL    11359 11361  ; IF? 147 ; 11357
RTN                  ; 11358
LDC    0            ; THEN: 147 ; 11359
JOIN                 ; 11360
LDC    1            ; ELSE: 147 ; 11361
JOIN                 ; 11362
LD     1 2          ;  <== lambda_1067  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(661,61) ; 11363
LD     0 0          ; var e ; 11364
CAR                 ; generateTupleAccess total=2 pos=0 ; 11365
LDF    1273         ;  @sorted_map_contains ; 11366
AP     2             ; 11367
RTN                  ; 11368

