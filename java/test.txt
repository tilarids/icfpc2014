LDC    1            ;  <== entryPoint  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 0
LDC    0            ; just constant from code ; 1
CEQ                  ; 2
SEL    5 13         ; IF? 1 ; 3
RTN                  ; 4
LD     0 0          ; THEN: 1 ; 5
LD     0 1          ; var ghostSpecs ; 6
LDC 0               ; local var space ; 7
LDC 0               ; local var space ; 8
LDC 0               ; local var space ; 9
LDF    2525         ;  @entryFactual ; 10
AP     5             ; 11
JOIN                 ; 12
LDC 0               ; ELSE: 1 ; 13
LDC 0               ; local var space ; 14
LDC 0               ; local var space ; 15
LDC 0               ; local var space ; 16
LDC 0               ; local var space ; 17
LDF    2489         ;  @entryCPUEmulator ; 18
AP     5             ; 19
JOIN                 ; 20
LD     0 0          ;  <== mydebug  [T o] (as blk) ; 21
DBUG                 ; 22
LD     0 0          ; var o ; 23
RTN                  ; 24
LD     0 0          ;  <== mydebugv  [Object tag, T o] (as blk) ; 25
DBUG                 ; 26
LD     0 1          ; var o ; 27
DBUG                 ; 28
LD     0 1          ; var o ; 29
RTN                  ; 30
LD     0 2          ;  <== foldl  [Function2<A,B,A> f, A a, ListCons<B> l] (as blk) ; 31
ATOM                 ; 32
SEL    35 37        ; IF? 2 ; 33
RTN                  ; 34
LD     0 1          ; THEN: 2 ; 35
JOIN                 ; 36
LD     0 0          ; ELSE: 2 ; 37
LD     0 1          ; var a ; 38
LD     0 2          ; var l ; 39
CAR                  ; 40
LD     0 0          ; var f ; 41
AP     2             ; 42
LD     0 2          ; var l ; 43
CDR                  ; 44
LDF    31           ;  @foldl ; 45
AP     3             ; 46
JOIN                 ; 47
LD     0 2          ;  <== foldr  [Function2<A,B,B> f, B a, ListCons<A> l] (as blk) ; 48
ATOM                 ; 49
SEL    52 54        ; IF? 3 ; 50
RTN                  ; 51
LD     0 1          ; THEN: 3 ; 52
JOIN                 ; 53
LD     0 2          ; ELSE: 3 ; 54
CAR                  ; 55
LD     0 0          ; var f ; 56
LD     0 1          ; var a ; 57
LD     0 2          ; var l ; 58
CDR                  ; 59
LDF    48           ;  @foldr ; 60
AP     3             ; 61
LD     0 0          ; var f ; 62
AP     2             ; 63
JOIN                 ; 64
LDF    9601         ;  <== o  [final Function1<B,C> f, final Function1<A,B> g] (as blk), ALSO: @lambda_1000 ; 65
RTN                  ; 66
LDF    9607         ;  <== flip  [Function2<A,B,C> f] (as blk), ALSO: @lambda_1001 ; 67
RTN                  ; 68
LD     0 0          ;  <== map  [ListCons<T> c, Function1<T,T2> arg] (as blk) ; 69
ATOM                 ; 70
SEL    73 75        ; IF? 4 ; 71
RTN                  ; 72
LDC    0            ; THEN: 4 ; 73
JOIN                 ; 74
LD     0 0          ; ELSE: 4 ; 75
CAR                  ; 76
LD     0 1          ; var arg ; 77
AP     1             ; 78
LD     0 0          ; var c ; 79
CDR                  ; 80
LD     0 1          ; var arg ; 81
LDF    69           ;  @map ; 82
AP     2             ; 83
CONS                 ; 84
JOIN                 ; 85
LD     0 0          ;  <== mapi  [ListCons<D> c, int ix, Function2<D,Integer,D2> arg] (as blk) ; 86
ATOM                 ; 87
SEL    90 92        ; IF? 5 ; 88
RTN                  ; 89
LDC    0            ; THEN: 5 ; 90
JOIN                 ; 91
LD     0 0          ; ELSE: 5 ; 92
CAR                  ; 93
LD     0 1          ; var ix ; 94
LD     0 2          ; var arg ; 95
AP     2             ; 96
LD     0 0          ; var c ; 97
CDR                  ; 98
LD     0 1          ; var ix ; 99
LDC    1            ; just constant from code ; 100
ADD                  ; 101
LD     0 2          ; var arg ; 102
LDF    86           ;  @mapi ; 103
AP     3             ; 104
CONS                 ; 105
JOIN                 ; 106
LD     0 0          ;  <== cat_maybes  [ListCons<Maybe<D>> data] (as blk) ; 107
LDF    9612         ;  @lambda_1002 ; 108
LDF    69           ;  @map ; 109
AP     2             ; 110
ST     0 1           ; 111
LD     0 1          ; var mtl ; 112
LDF    118          ;  @concat ; 113
AP     1             ; 114
ST     0 2           ; 115
LD     0 2          ; var rv ; 116
RTN                  ; 117
LD     0 0          ;  <== concat  [ListCons<ListCons<D>> data] (as blk) ; 118
LDC    0            ; NULL literal ; 119
LDF    149          ;  @concat_acc ; 120
AP     2             ; 121
LDF    299          ;  @reverse ; 122
AP     1             ; 123
RTN                  ; 124
LD     0 0          ;  <== last  [ListCons<D> data] (as blk) ; 125
ATOM                 ; 126
SEL    133 135       ; 127
LD     0 0          ; var data ; 128
CDR                  ; 129
ATOM                 ; 130
SEL    136 139      ; IF? 8 ; 131
RTN                  ; 132
BRK                 ; branch@133 ; 133
JOIN                 ; 134
JOIN                ; branch@135 ; 135
LD     0 0          ; THEN: 8 ; 136
CAR                  ; 137
JOIN                 ; 138
LD     0 0          ; ELSE: 8 ; 139
CDR                  ; 140
LDF    125          ;  @last ; 141
AP     1             ; 142
JOIN                 ; 143
LD     0 0          ;  <== concat_set  [ListCons<ListCons<D>> data] (as blk) ; 144
LDC    0            ; NULL literal ; 145
LDF    149          ;  @concat_acc ; 146
AP     2             ; 147
RTN                  ; 148
LD     0 0          ;  <== concat_acc  [ListCons<ListCons<D>> data, ListCons<D> acc] (as blk) ; 149
ATOM                 ; 150
SEL    153 155      ; IF? 6 ; 151
RTN                  ; 152
LD     0 1          ; THEN: 6 ; 153
JOIN                 ; 154
LD     0 0          ; ELSE: 6 ; 155
CDR                  ; 156
LD     0 0          ; var data ; 157
CAR                  ; 158
LD     0 1          ; var acc ; 159
LDF    165          ;  @concat2 ; 160
AP     2             ; 161
LDF    149          ;  @concat_acc ; 162
AP     2             ; 163
JOIN                 ; 164
LD     0 0          ;  <== concat2  [ListCons<D> data, ListCons<D> data2] (as blk) ; 165
ATOM                 ; 166
SEL    169 171      ; IF? 9 ; 167
RTN                  ; 168
LD     0 1          ; THEN: 9 ; 169
JOIN                 ; 170
LD     0 1          ; ELSE: 9 ; 171
ATOM                 ; 172
SEL    175 177      ; IF? 72 ; 173
JOIN                 ; 174
LD     0 0          ; THEN: 72 ; 175
JOIN                 ; 176
LD     0 0          ; ELSE: 72 ; 177
LDF    299          ;  @reverse ; 178
AP     1             ; 179
LD     0 1          ; var data2 ; 180
LDF    201          ;  @concat2_acc ; 181
AP     2             ; 182
JOIN                 ; 183
LD     0 0          ;  <== concat2_set  [ListCons<D> data, ListCons<D> data2] (as blk) ; 184
ATOM                 ; 185
SEL    188 190      ; IF? 10 ; 186
RTN                  ; 187
LD     0 1          ; THEN: 10 ; 188
JOIN                 ; 189
LD     0 1          ; ELSE: 10 ; 190
ATOM                 ; 191
SEL    194 196      ; IF? 73 ; 192
JOIN                 ; 193
LD     0 0          ; THEN: 73 ; 194
JOIN                 ; 195
LD     0 0          ; ELSE: 73 ; 196
LD     0 1          ; var data2 ; 197
LDF    201          ;  @concat2_acc ; 198
AP     2             ; 199
JOIN                 ; 200
LD     0 0          ;  <== concat2_acc  [ListCons<D> data, ListCons<D> acc] (as blk) ; 201
ATOM                 ; 202
SEL    205 207      ; IF? 11 ; 203
RTN                  ; 204
LD     0 1          ; THEN: 11 ; 205
JOIN                 ; 206
LD     0 0          ; ELSE: 11 ; 207
CDR                  ; 208
LD     0 0          ; var data ; 209
CAR                  ; 210
LD     0 1          ; var acc ; 211
CONS                 ; 212
LDF    201          ;  @concat2_acc ; 213
AP     2             ; 214
JOIN                 ; 215
LDC    0            ;  <== NOTHING  [] (as blk) ; 216
LDC    0            ; NULL literal ; 217
CONS                 ; 218
RTN                  ; 219
LDC    1            ;  <== JUST  [T t] (as blk) ; 220
LD     0 0          ; var t ; 221
CONS                 ; 222
ST     0 1           ; 223
LD     0 1          ; var tMaybe ; 224
RTN                  ; 225
LD     0 0          ;  <== maybeToList  [Maybe<D> d] (as blk) ; 226
LDF    283          ;  @is_nothing ; 227
AP     1             ; 228
LDC    1            ; just constant from code ; 229
CEQ                  ; 230
SEL    233 235      ; IF? 12 ; 231
RTN                  ; 232
LDC    0            ; THEN: 12 ; 233
JOIN                 ; 234
LD     0 0          ; ELSE: 12 ; 235
LDF    288          ;  @from_maybe ; 236
AP     1             ; 237
LDC    0            ; NULL literal ; 238
CONS                 ; 239
JOIN                 ; 240
LDC    0            ;  <== catMaybes_acc  [ListCons<Maybe<D>> data, ListCons<D> acc] (as blk) ; 241
ST     0 2           ; 242
LD     0 0          ; var data ; 243
ATOM                 ; 244
SEL    248 251       ; 245
LD     0 2          ; var rv ; 246
RTN                  ; 247
LD     0 1          ; branch@248 ; 248
ST     0 2           ; 249
JOIN                 ; 250
LD     0 0          ; branch@251 ; 251
CAR                  ; 252
LDF    283          ;  @is_nothing ; 253
AP     1             ; 254
ST     0 3           ; 255
LD     0 0          ; var data ; 256
CAR                  ; 257
LDF    288          ;  @from_maybe ; 258
AP     1             ; 259
ST     0 4           ; 260
LD     0 4          ; var data1 ; 261
LD     0 1          ; var acc ; 262
CONS                 ; 263
ST     0 5           ; 264
LD     0 0          ; var data ; 265
CDR                  ; 266
LD     0 3          ; var nothing ; 267
LDC    1            ; just constant from code ; 268
CEQ                  ; 269
SEL    279 281      ; IF? 74 ; 270
LDC 0               ; local var space ; 271
LDC 0               ; local var space ; 272
LDC 0               ; local var space ; 273
LDC 0               ; local var space ; 274
LDF    241          ;  @catMaybes_acc ; 275
AP     6             ; 276
ST     0 2           ; 277
JOIN                 ; 278
LD     0 1          ; THEN: 74 ; 279
JOIN                 ; 280
LD     0 5          ; ELSE: 74 ; 281
JOIN                 ; 282
LDC    1            ;  <== is_nothing  [Maybe<D> head] (as blk) ; 283
LD     0 0          ; var head ; 284
CAR                 ; generateTupleAccess total=2 pos=0 ; 285
SUB                  ; 286
RTN                  ; 287
LD     0 0          ;  <== from_maybe  [Maybe<D> head] (as blk) ; 288
CAR                 ; generateTupleAccess total=2 pos=0 ; 289
LDC    0            ; just constant from code ; 290
CEQ                  ; 291
SEL    296 298       ; 292
LD     0 0          ; var head ; 293
CDR                 ; generateTupleAccess total=2 pos=1 ; 294
RTN                  ; 295
BRK                 ; branch@296 ; 296
JOIN                 ; 297
JOIN                ; branch@298 ; 298
LD     0 0          ;  <== reverse  [ListCons<D> c] (as blk) ; 299
LDC    0            ; NULL literal ; 300
LDF    371          ;  @reverse_acc ; 301
AP     2             ; 302
RTN                  ; 303
LD     0 0          ;  <== maximum_by_acc  [ListCons<D> d, Function1<D,Integer> projection, D acc] (as blk) ; 304
ATOM                 ; 305
SEL    308 310      ; IF? 13 ; 306
RTN                  ; 307
LD     0 2          ; THEN: 13 ; 308
JOIN                 ; 309
LD     0 2          ; ELSE: 13 ; 310
LD     0 1          ; var projection ; 311
AP     1             ; 312
LD     0 0          ; var d ; 313
CAR                  ; 314
LD     0 1          ; var projection ; 315
AP     1             ; 316
CGT                  ; 317
SEL    320 327      ; IF? 75 ; 318
JOIN                 ; 319
LD     0 0          ; THEN: 75 ; 320
CDR                  ; 321
LD     0 1          ; var projection ; 322
LD     0 2          ; var acc ; 323
LDF    304          ;  @maximum_by_acc ; 324
AP     3             ; 325
JOIN                 ; 326
LD     0 0          ; ELSE: 75 ; 327
CDR                  ; 328
LD     0 1          ; var projection ; 329
LD     0 0          ; var d ; 330
CAR                  ; 331
LDF    304          ;  @maximum_by_acc ; 332
AP     3             ; 333
JOIN                 ; 334
LD     0 0          ;  <== maximum_by  [ListCons<D> d, Function1<D,Integer> projection] (as blk) ; 335
ATOM                 ; 336
SEL    346 348       ; 337
LD     0 0          ; var d ; 338
CDR                  ; 339
LD     0 1          ; var projection ; 340
LD     0 0          ; var d ; 341
CAR                  ; 342
LDF    304          ;  @maximum_by_acc ; 343
AP     3             ; 344
RTN                  ; 345
BRK                 ; branch@346 ; 346
JOIN                 ; 347
JOIN                ; branch@348 ; 348
LD     0 0          ;  <== dropWhile  [ListCons<D> c, Function1<D,Integer> test] (as blk) ; 349
ATOM                 ; 350
SEL    353 355      ; IF? 14 ; 351
RTN                  ; 352
LDC    0            ; THEN: 14 ; 353
JOIN                 ; 354
LD     0 0          ; ELSE: 14 ; 355
CAR                  ; 356
LD     0 1          ; var test ; 357
AP     1             ; 358
LDC    1            ; just constant from code ; 359
CEQ                  ; 360
SEL    363 369      ; IF? 76 ; 361
JOIN                 ; 362
LD     0 0          ; THEN: 76 ; 363
CDR                  ; 364
LD     0 1          ; var test ; 365
LDF    349          ;  @dropWhile ; 366
AP     2             ; 367
JOIN                 ; 368
LD     0 0          ; ELSE: 76 ; 369
JOIN                 ; 370
LD     0 0          ;  <== reverse_acc  [ListCons<D> c, ListCons<D> acc] (as blk) ; 371
ATOM                 ; 372
SEL    375 377      ; IF? 7 ; 373
RTN                  ; 374
LD     0 1          ; THEN: 7 ; 375
JOIN                 ; 376
LD     0 0          ; ELSE: 7 ; 377
CDR                  ; 378
LD     0 0          ; var c ; 379
CAR                  ; 380
LD     0 1          ; var acc ; 381
CONS                 ; 382
LDF    371          ;  @reverse_acc ; 383
AP     2             ; 384
JOIN                 ; 385
LD     0 0          ;  <== fold0  [ListCons<I> c, R init, Function2<R,I,R> arg] (as blk) ; 386
ATOM                 ; 387
SEL    390 392      ; IF? 15 ; 388
RTN                  ; 389
LD     0 1          ; THEN: 15 ; 390
JOIN                 ; 391
LD     0 0          ; ELSE: 15 ; 392
CDR                  ; 393
LD     0 1          ; var init ; 394
LD     0 0          ; var c ; 395
CAR                  ; 396
LD     0 2          ; var arg ; 397
AP     2             ; 398
LD     0 2          ; var arg ; 399
LDF    386          ;  @fold0 ; 400
AP     3             ; 401
JOIN                 ; 402
LDC    0            ;  <== queue_new  [] (as blk) ; 403
LDC    0            ; NULL literal ; 404
CONS                 ; 405
RTN                  ; 406
LD     0 0          ;  <== queue_enqueue  [Queue<T> q, T v] (as blk) ; 407
CAR                 ; generateTupleAccess total=2 pos=0 ; 408
LD     0 1          ; var v ; 409
LD     0 0          ; var q ; 410
CDR                 ; generateTupleAccess total=2 pos=1 ; 411
CONS                 ; 412
CONS                 ; 413
RTN                  ; 414
LD     0 0          ;  <== queue_isempty  [Queue<T> q] (as blk) ; 415
CAR                 ; generateTupleAccess total=2 pos=0 ; 416
ATOM                 ; 417
LD     0 0          ; var q ; 418
CDR                 ; generateTupleAccess total=2 pos=1 ; 419
ATOM                 ; 420
MUL                  ; 421
RTN                  ; 422
LDC    0            ;  <== list_item  [Cons list, int n] (as blk) ; 423
LD     0 1          ; var n ; 424
CGT                  ; 425
SEL    432 434       ; 426
LD     0 1          ; var n ; 427
LDC    0            ; just constant from code ; 428
CEQ                  ; 429
SEL    435 438      ; IF? 16 ; 430
RTN                  ; 431
BRK                 ; branch@432 ; 432
JOIN                 ; 433
JOIN                ; branch@434 ; 434
LD     0 0          ; THEN: 16 ; 435
CAR                  ; 436
JOIN                 ; 437
LD     0 0          ; ELSE: 16 ; 438
CDR                  ; 439
LD     0 1          ; var n ; 440
LDC    1            ; just constant from code ; 441
SUB                  ; 442
LDF    423          ;  @list_item ; 443
AP     2             ; 444
JOIN                 ; 445
LDC    0            ;  <== list_item  [ListCons<T> list, int n] (as blk) ; 446
LD     0 1          ; var n ; 447
CGT                  ; 448
SEL    455 457       ; 449
LD     0 1          ; var n ; 450
LDC    0            ; just constant from code ; 451
CEQ                  ; 452
SEL    458 461      ; IF? 17 ; 453
RTN                  ; 454
BRK                 ; branch@455 ; 455
JOIN                 ; 456
JOIN                ; branch@457 ; 457
LD     0 0          ; THEN: 17 ; 458
CAR                  ; 459
JOIN                 ; 460
LD     0 0          ; ELSE: 17 ; 461
CDR                  ; 462
LD     0 1          ; var n ; 463
LDC    1            ; just constant from code ; 464
SUB                  ; 465
LDF    423          ;  @list_item ; 466
AP     2             ; 467
JOIN                 ; 468
LDC    0            ;  <== list_item_def  [Cons list, int index, Object deflt] (as blk) ; 469
LD     0 1          ; var index ; 470
CGT                  ; 471
SEL    474 476      ; IF? 18 ; 472
RTN                  ; 473
LD     0 2          ; THEN: 18 ; 474
JOIN                 ; 475
LD     0 1          ; ELSE: 18 ; 476
LDC    0            ; just constant from code ; 477
CEQ                  ; 478
SEL    481 484      ; IF? 77 ; 479
JOIN                 ; 480
LD     0 0          ; THEN: 77 ; 481
CAR                  ; 482
JOIN                 ; 483
LD     0 0          ; ELSE: 77 ; 484
CDR                  ; 485
LD     0 1          ; var index ; 486
LDC    1            ; just constant from code ; 487
SUB                  ; 488
LDF    423          ;  @list_item ; 489
AP     2             ; 490
JOIN                 ; 491
LDC    0            ;  <== queue_dequeue  [Queue<T> q] (as blk) ; 492
ST     0 1           ; 493
LD     0 0          ; var q ; 494
CAR                 ; generateTupleAccess total=2 pos=0 ; 495
ATOM                 ; 496
SEL    500 507       ; 497
LD     0 1          ; var retval ; 498
RTN                  ; 499
LD     0 0          ; branch@500 ; 500
CDR                 ; generateTupleAccess total=2 pos=1 ; 501
ATOM                 ; 502
LDC    1            ; for negation ; 503
SUB                  ; 504
SEL    519 530       ; 505
JOIN                 ; 506
LD     0 0          ; branch@507 ; 507
CAR                 ; generateTupleAccess total=2 pos=0 ; 508
CAR                  ; 509
LD     0 0          ; var q ; 510
CAR                 ; generateTupleAccess total=2 pos=0 ; 511
CDR                  ; 512
LD     0 0          ; var q ; 513
CDR                 ; generateTupleAccess total=2 pos=1 ; 514
CONS                 ; 515
CONS                 ; 516
ST     0 1           ; 517
JOIN                 ; 518
LD     0 0          ; branch@519 ; 519
CDR                 ; generateTupleAccess total=2 pos=1 ; 520
LDF    299          ;  @reverse ; 521
AP     1             ; 522
LDC    0            ; NULL literal ; 523
CONS                 ; 524
LDC 0               ; local var space ; 525
LDF    492          ;  @queue_dequeue ; 526
AP     2             ; 527
ST     0 1           ; 528
JOIN                 ; 529
BRK                 ; branch@530 ; 530
JOIN                 ; 531
LD     0 0          ;  <== length  [ListCons<T> list] (as blk) ; 532
LDC    0            ; just constant from code ; 533
LDF    646          ;  @elements_counter ; 534
AP     2             ; 535
RTN                  ; 536
LD     0 0          ;  <== filter  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 537
LD     0 1          ; var pred ; 538
LDC    0            ; NULL literal ; 539
LDF    609          ;  @filter_acc ; 540
AP     3             ; 541
LDF    299          ;  @reverse ; 542
AP     1             ; 543
RTN                  ; 544
LD     0 0          ;  <== any  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 545
ATOM                 ; 546
SEL    549 551      ; IF? 21 ; 547
RTN                  ; 548
LDC    0            ; THEN: 21 ; 549
JOIN                 ; 550
LD     0 0          ; ELSE: 21 ; 551
CAR                  ; 552
LD     0 1          ; var pred ; 553
AP     1             ; 554
LDC    1            ; just constant from code ; 555
CEQ                  ; 556
SEL    559 561      ; IF? 78 ; 557
JOIN                 ; 558
LDC    1            ; THEN: 78 ; 559
JOIN                 ; 560
LD     0 0          ; ELSE: 78 ; 561
CDR                  ; 562
LD     0 1          ; var pred ; 563
LDF    545          ;  @any ; 564
AP     2             ; 565
JOIN                 ; 566
LD     0 0          ;  <== noneof  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 567
ATOM                 ; 568
SEL    571 573      ; IF? 22 ; 569
RTN                  ; 570
LDC    1            ; THEN: 22 ; 571
JOIN                 ; 572
LD     0 0          ; ELSE: 22 ; 573
CAR                  ; 574
LD     0 1          ; var pred ; 575
AP     1             ; 576
LDC    1            ; just constant from code ; 577
CEQ                  ; 578
SEL    581 583      ; IF? 79 ; 579
JOIN                 ; 580
LDC    0            ; THEN: 79 ; 581
JOIN                 ; 582
LD     0 0          ; ELSE: 79 ; 583
CDR                  ; 584
LD     0 1          ; var pred ; 585
LDF    567          ;  @noneof ; 586
AP     2             ; 587
JOIN                 ; 588
LD     0 0          ;  <== empty  [Cons d] (as blk) ; 589
ATOM                 ; 590
LDC    1            ; for negation ; 591
SUB                  ; 592
SEL    595 597      ; IF? 23 ; 593
RTN                  ; 594
LDC    0            ; THEN: 23 ; 595
JOIN                 ; 596
LDC    1            ; ELSE: 23 ; 597
JOIN                 ; 598
LD     0 0          ;  <== notempty  [Cons d] (as blk) ; 599
ATOM                 ; 600
LDC    1            ; for negation ; 601
SUB                  ; 602
SEL    605 607      ; IF? 24 ; 603
RTN                  ; 604
LDC    1            ; THEN: 24 ; 605
JOIN                 ; 606
LDC    0            ; ELSE: 24 ; 607
JOIN                 ; 608
LD     0 0          ;  <== filter_acc  [ListCons<T> list, Function1<T,Integer> pred, ListCons<T> acc] (as blk) ; 609
ATOM                 ; 610
SEL    613 615      ; IF? 20 ; 611
RTN                  ; 612
LD     0 2          ; THEN: 20 ; 613
JOIN                 ; 614
LD     0 0          ; ELSE: 20 ; 615
CDR                  ; 616
LD     0 1          ; var pred ; 617
LD     0 0          ; var list ; 618
CAR                  ; 619
LD     0 1          ; var pred ; 620
AP     1             ; 621
LDC    1            ; just constant from code ; 622
CEQ                  ; 623
SEL    628 633      ; IF? 80 ; 624
LDF    609          ;  @filter_acc ; 625
AP     3             ; 626
JOIN                 ; 627
LD     0 0          ; THEN: 80 ; 628
CAR                  ; 629
LD     0 2          ; var acc ; 630
CONS                 ; 631
JOIN                 ; 632
LD     0 2          ; ELSE: 80 ; 633
JOIN                 ; 634
LD     0 0          ;  <== map_height  [Cons map] (as blk) ; 635
LDC    0            ; just constant from code ; 636
LDF    646          ;  @elements_counter ; 637
AP     2             ; 638
RTN                  ; 639
LD     0 0          ;  <== map_width  [Cons map] (as blk) ; 640
CAR                  ; 641
LDC    0            ; just constant from code ; 642
LDF    646          ;  @elements_counter ; 643
AP     2             ; 644
RTN                  ; 645
LD     0 0          ;  <== elements_counter  [Cons list, int counter] (as blk) ; 646
ATOM                 ; 647
SEL    650 652      ; IF? 19 ; 648
RTN                  ; 649
LD     0 1          ; THEN: 19 ; 650
JOIN                 ; 651
LD     0 0          ; ELSE: 19 ; 652
CDR                  ; 653
LD     0 1          ; var counter ; 654
LDC    1            ; just constant from code ; 655
ADD                  ; 656
LDF    646          ;  @elements_counter ; 657
AP     2             ; 658
JOIN                 ; 659
LD     0 1          ;  <== zip_with  [Function2<A,B,C> f, ListCons<A> x, ListCons<B> y] (as blk) ; 660
ATOM                 ; 661
SEL    664 666      ; IF? 25 ; 662
RTN                  ; 663
LDC    0            ; THEN: 25 ; 664
JOIN                 ; 665
LD     0 2          ; ELSE: 25 ; 666
ATOM                 ; 667
SEL    670 672      ; IF? 81 ; 668
JOIN                 ; 669
LDC    0            ; THEN: 81 ; 670
JOIN                 ; 671
LD     0 1          ; ELSE: 81 ; 672
CAR                  ; 673
LD     0 2          ; var y ; 674
CAR                  ; 675
LD     0 0          ; var f ; 676
AP     2             ; 677
LD     0 0          ; var f ; 678
LD     0 1          ; var x ; 679
CDR                  ; 680
LD     0 2          ; var y ; 681
CDR                  ; 682
LDF    660          ;  @zip_with ; 683
AP     3             ; 684
CONS                 ; 685
JOIN                 ; 686
LD     0 1          ;  <== zip3_with  [Function3<A,B,C,R> f, ListCons<A> x, ListCons<B> y, ListCons<C> z] (as blk) ; 687
ATOM                 ; 688
SEL    691 693      ; IF? 26 ; 689
RTN                  ; 690
LDC    0            ; THEN: 26 ; 691
JOIN                 ; 692
LD     0 2          ; ELSE: 26 ; 693
ATOM                 ; 694
SEL    697 699      ; IF? 82 ; 695
JOIN                 ; 696
LDC    0            ; THEN: 82 ; 697
JOIN                 ; 698
LD     0 3          ; ELSE: 82 ; 699
ATOM                 ; 700
SEL    703 705      ; IF? 83 ; 701
JOIN                 ; 702
LDC    0            ; THEN: 83 ; 703
JOIN                 ; 704
LD     0 1          ; ELSE: 83 ; 705
CAR                  ; 706
LD     0 2          ; var y ; 707
CAR                  ; 708
LD     0 3          ; var z ; 709
CAR                  ; 710
LD     0 0          ; var f ; 711
AP     3             ; 712
LD     0 0          ; var f ; 713
LD     0 1          ; var x ; 714
CDR                  ; 715
LD     0 2          ; var y ; 716
CDR                  ; 717
LD     0 3          ; var z ; 718
CDR                  ; 719
LDF    687          ;  @zip3_with ; 720
AP     4             ; 721
CONS                 ; 722
JOIN                 ; 723
LD     0 0          ;  <== zip  [final ListCons<A> x, final ListCons<B> y] (as blk) ; 724
ATOM                 ; 725
SEL    728 730      ; IF? 27 ; 726
RTN                  ; 727
LDC    0            ; THEN: 27 ; 728
JOIN                 ; 729
LD     0 1          ; ELSE: 27 ; 730
ATOM                 ; 731
SEL    734 736      ; IF? 84 ; 732
JOIN                 ; 733
LDC    0            ; THEN: 84 ; 734
JOIN                 ; 735
LD     0 0          ; ELSE: 84 ; 736
CAR                  ; 737
LD     0 1          ; var y ; 738
CAR                  ; 739
CONS                 ; 740
LD     0 0          ; var x ; 741
CDR                  ; 742
LD     0 1          ; var y ; 743
CDR                  ; 744
LDF    724          ;  @zip ; 745
AP     2             ; 746
CONS                 ; 747
JOIN                 ; 748
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 749
LD     0 0          ; var f ; 750
AP     1             ; 751
CAR                  ; 752
ST     0 3           ; 753
LD     0 2          ; var n ; 754
LDC    0            ; just constant from code ; 755
CEQ                  ; 756
SEL    759 763      ; IF? 28 ; 757
RTN                  ; 758
LD     0 3          ; THEN: 28 ; 759
LDC    0            ; NULL literal ; 760
CONS                 ; 761
JOIN                 ; 762
LD     0 3          ; ELSE: 28 ; 763
LD     0 0          ; var f ; 764
LD     0 1          ; var a ; 765
LD     0 0          ; var f ; 766
AP     1             ; 767
CDR                  ; 768
LD     0 2          ; var n ; 769
LDC    1            ; just constant from code ; 770
SUB                  ; 771
LDC 0               ; local var space ; 772
LDF    749          ;  @produce_n ; 773
AP     4             ; 774
CONS                 ; 775
JOIN                 ; 776
LD     0 0          ;  <== range_n  [int n] (as blk) ; 777
LDC    0            ; just constant from code ; 778
CEQ                  ; 779
SEL    782 786      ; IF? 29 ; 780
RTN                  ; 781
LD     0 0          ; THEN: 29 ; 782
LDC    0            ; NULL literal ; 783
CONS                 ; 784
JOIN                 ; 785
LD     0 0          ; ELSE: 29 ; 786
LD     0 0          ; var n ; 787
LDC    1            ; just constant from code ; 788
SUB                  ; 789
LDF    777          ;  @range_n ; 790
AP     1             ; 791
CONS                 ; 792
JOIN                 ; 793
LDC    1            ;  <== sorted_node_new  [int key, T val, int lev, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 794
LD     0 3          ; var lo ; 795
ATOM                 ; 796
LDC    1            ; for negation ; 797
SUB                  ; 798
SEL    818 821      ; IF? 30 ; 799
ADD                  ; 800
LD     0 4          ; var hi ; 801
ATOM                 ; 802
LDC    1            ; for negation ; 803
SUB                  ; 804
SEL    823 826      ; IF? 31 ; 805
ADD                  ; 806
LD     0 0          ; var key ; 807
LD     0 1          ; var val ; 808
LD     0 2          ; var lev ; 809
LD     0 3          ; var lo ; 810
LD     0 4          ; var hi ; 811
CONS                 ; 812
CONS                 ; 813
CONS                 ; 814
CONS                 ; 815
CONS                 ; 816
RTN                  ; 817
LD     0 3          ; THEN: 30 ; 818
CAR                 ; generateTupleAccess total=6 pos=0 ; 819
JOIN                 ; 820
LDC    0            ; ELSE: 30 ; 821
JOIN                 ; 822
LD     0 4          ; THEN: 31 ; 823
CAR                 ; generateTupleAccess total=6 pos=0 ; 824
JOIN                 ; 825
LDC    0            ; ELSE: 31 ; 826
JOIN                 ; 827
LD     0 0          ;  <== sorted_node_with_lev  [SortedMapNode<T> node, int lev] (as blk) ; 828
CDR                 ; generateTupleAccess total=6 pos=1 ; 829
CAR                  ; 830
LD     0 0          ; var node ; 831
CDR                 ; generateTupleAccess total=6 pos=2 ; 832
CDR                  ; 833
CAR                  ; 834
LD     0 1          ; var lev ; 835
LD     0 0          ; var node ; 836
CDR                 ; generateTupleAccess total=6 pos=4 ; 837
CDR                  ; 838
CDR                  ; 839
CDR                  ; 840
CAR                  ; 841
LD     0 0          ; var node ; 842
CDR                 ; generateTupleAccess total=6 pos=5 ; 843
CDR                  ; 844
CDR                  ; 845
CDR                  ; 846
CDR                  ; 847
LDF    794          ;  @sorted_node_new ; 848
AP     5             ; 849
RTN                  ; 850
LD     0 0          ;  <== sorted_node_with_lo_hi  [SortedMapNode<T> node, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 851
CDR                 ; generateTupleAccess total=6 pos=1 ; 852
CAR                  ; 853
LD     0 0          ; var node ; 854
CDR                 ; generateTupleAccess total=6 pos=2 ; 855
CDR                  ; 856
CAR                  ; 857
LD     0 0          ; var node ; 858
CDR                 ; generateTupleAccess total=6 pos=3 ; 859
CDR                  ; 860
CDR                  ; 861
CAR                  ; 862
LD     0 1          ; var lo ; 863
LD     0 2          ; var hi ; 864
LDF    794          ;  @sorted_node_new ; 865
AP     5             ; 866
RTN                  ; 867
LD     0 0          ;  <== sorted_node_with_lo  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 868
LD     0 1          ; var lo ; 869
LD     0 0          ; var node ; 870
CDR                 ; generateTupleAccess total=6 pos=5 ; 871
CDR                  ; 872
CDR                  ; 873
CDR                  ; 874
CDR                  ; 875
LDF    851          ;  @sorted_node_with_lo_hi ; 876
AP     3             ; 877
RTN                  ; 878
LD     0 0          ;  <== sorted_node_with_hi  [SortedMapNode<T> node, SortedMapNode<T> hi] (as blk) ; 879
LD     0 0          ; var node ; 880
CDR                 ; generateTupleAccess total=6 pos=4 ; 881
CDR                  ; 882
CDR                  ; 883
CDR                  ; 884
CAR                  ; 885
LD     0 1          ; var hi ; 886
LDF    851          ;  @sorted_node_with_lo_hi ; 887
AP     3             ; 888
RTN                  ; 889
LD     0 0          ;  <== sorted_node_has  [SortedMapNode<T> node, int key] (as blk) ; 890
ATOM                 ; 891
SEL    894 896      ; IF? 32 ; 892
RTN                  ; 893
LDC    0            ; THEN: 32 ; 894
JOIN                 ; 895
LD     0 1          ; ELSE: 32 ; 896
LD     0 0          ; var node ; 897
CDR                 ; generateTupleAccess total=6 pos=1 ; 898
CAR                  ; 899
CEQ                  ; 900
SEL    903 905      ; IF? 85 ; 901
JOIN                 ; 902
LDC    1            ; THEN: 85 ; 903
JOIN                 ; 904
LD     0 0          ; ELSE: 85 ; 905
CDR                 ; generateTupleAccess total=6 pos=1 ; 906
CAR                  ; 907
LD     0 1          ; var key ; 908
CGT                  ; 909
SEL    915 922      ; IF? 86 ; 910
LD     0 1          ; var key ; 911
LDF    890          ;  @sorted_node_has ; 912
AP     2             ; 913
JOIN                 ; 914
LD     0 0          ; THEN: 86 ; 915
CDR                 ; generateTupleAccess total=6 pos=4 ; 916
CDR                  ; 917
CDR                  ; 918
CDR                  ; 919
CAR                  ; 920
JOIN                 ; 921
LD     0 0          ; ELSE: 86 ; 922
CDR                 ; generateTupleAccess total=6 pos=5 ; 923
CDR                  ; 924
CDR                  ; 925
CDR                  ; 926
CDR                  ; 927
JOIN                 ; 928
LD     0 0          ;  <== sorted_node_get  [SortedMapNode<T> node, int key, T def] (as blk) ; 929
ATOM                 ; 930
SEL    933 935      ; IF? 33 ; 931
RTN                  ; 932
LD     0 2          ; THEN: 33 ; 933
JOIN                 ; 934
LD     0 1          ; ELSE: 33 ; 935
LD     0 0          ; var node ; 936
CDR                 ; generateTupleAccess total=6 pos=1 ; 937
CAR                  ; 938
CEQ                  ; 939
SEL    942 947      ; IF? 87 ; 940
JOIN                 ; 941
LD     0 0          ; THEN: 87 ; 942
CDR                 ; generateTupleAccess total=6 pos=2 ; 943
CDR                  ; 944
CAR                  ; 945
JOIN                 ; 946
LD     0 0          ; ELSE: 87 ; 947
CDR                 ; generateTupleAccess total=6 pos=1 ; 948
CAR                  ; 949
LD     0 1          ; var key ; 950
CGT                  ; 951
SEL    958 965      ; IF? 88 ; 952
LD     0 1          ; var key ; 953
LD     0 2          ; var def ; 954
LDF    929          ;  @sorted_node_get ; 955
AP     3             ; 956
JOIN                 ; 957
LD     0 0          ; THEN: 88 ; 958
CDR                 ; generateTupleAccess total=6 pos=4 ; 959
CDR                  ; 960
CDR                  ; 961
CDR                  ; 962
CAR                  ; 963
JOIN                 ; 964
LD     0 0          ; ELSE: 88 ; 965
CDR                 ; generateTupleAccess total=6 pos=5 ; 966
CDR                  ; 967
CDR                  ; 968
CDR                  ; 969
CDR                  ; 970
JOIN                 ; 971
LD     0 0          ;  <== sorted_node_put  [SortedMapNode<T> node, int key, T val] (as blk) ; 972
ATOM                 ; 973
SEL    976 984      ; IF? 34 ; 974
RTN                  ; 975
LD     0 1          ; THEN: 34 ; 976
LD     0 2          ; var val ; 977
LDC    0            ; just constant from code ; 978
LDC    0            ; NULL literal ; 979
LDC    0            ; NULL literal ; 980
LDF    794          ;  @sorted_node_new ; 981
AP     5             ; 982
JOIN                 ; 983
LD     0 1          ; ELSE: 34 ; 984
LD     0 0          ; var node ; 985
CDR                 ; generateTupleAccess total=6 pos=1 ; 986
CAR                  ; 987
CEQ                  ; 988
SEL    991 999      ; IF? 89 ; 989
JOIN                 ; 990
LD     0 2          ; THEN: 89 ; 991
LD     0 0          ; var node ; 992
CDR                 ; generateTupleAccess total=6 pos=2 ; 993
CDR                  ; 994
CAR                  ; 995
CEQ                  ; 996
SEL    1009 1011    ; IF? 90 ; 997
JOIN                 ; 998
LD     0 0          ; ELSE: 89 ; 999
CDR                 ; generateTupleAccess total=6 pos=1 ; 1000
CAR                  ; 1001
LD     0 1          ; var key ; 1002
CGT                  ; 1003
SEL    1033 1048    ; IF? 91 ; 1004
LDC 0               ; local var space ; 1005
LDF    1120         ;  @sorted_node_split ; 1006
AP     2             ; 1007
JOIN                 ; 1008
LD     0 0          ; THEN: 90 ; 1009
JOIN                 ; 1010
LD     0 1          ; ELSE: 90 ; 1011
LD     0 2          ; var val ; 1012
LD     0 0          ; var node ; 1013
CDR                 ; generateTupleAccess total=6 pos=3 ; 1014
CDR                  ; 1015
CDR                  ; 1016
CAR                  ; 1017
LD     0 0          ; var node ; 1018
CDR                 ; generateTupleAccess total=6 pos=4 ; 1019
CDR                  ; 1020
CDR                  ; 1021
CDR                  ; 1022
CAR                  ; 1023
LD     0 0          ; var node ; 1024
CDR                 ; generateTupleAccess total=6 pos=5 ; 1025
CDR                  ; 1026
CDR                  ; 1027
CDR                  ; 1028
CDR                  ; 1029
LDF    794          ;  @sorted_node_new ; 1030
AP     5             ; 1031
JOIN                 ; 1032
LD     0 0          ; THEN: 91 ; 1033
LD     0 0          ; var node ; 1034
CDR                 ; generateTupleAccess total=6 pos=4 ; 1035
CDR                  ; 1036
CDR                  ; 1037
CDR                  ; 1038
CAR                  ; 1039
LD     0 1          ; var key ; 1040
LD     0 2          ; var val ; 1041
LDF    972          ;  @sorted_node_put ; 1042
AP     3             ; 1043
LDC 0               ; local var space ; 1044
LDF    1066         ;  @sorted_node_skew ; 1045
AP     3             ; 1046
JOIN                 ; 1047
LD     0 0          ; ELSE: 91 ; 1048
LD     0 0          ; var node ; 1049
CDR                 ; generateTupleAccess total=6 pos=5 ; 1050
CDR                  ; 1051
CDR                  ; 1052
CDR                  ; 1053
CDR                  ; 1054
LD     0 1          ; var key ; 1055
LD     0 2          ; var val ; 1056
LDF    972          ;  @sorted_node_put ; 1057
AP     3             ; 1058
LDF    879          ;  @sorted_node_with_hi ; 1059
AP     2             ; 1060
LDC    0            ; NULL literal ; 1061
LDC 0               ; local var space ; 1062
LDF    1066         ;  @sorted_node_skew ; 1063
AP     3             ; 1064
JOIN                 ; 1065
LD     0 1          ;  <== sorted_node_skew  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 1066
ATOM                 ; 1067
LDC    1            ; for negation ; 1068
SUB                  ; 1069
SEL    1081 1083    ; IF? 35 ; 1070
ST     0 1           ; 1071
LD     0 0          ; var node ; 1072
LD     0 1          ; var lo ; 1073
LDF    868          ;  @sorted_node_with_lo ; 1074
AP     2             ; 1075
ST     0 2           ; 1076
LD     0 1          ; var lo ; 1077
ATOM                 ; 1078
SEL    1090 1092    ; IF? 36 ; 1079
RTN                  ; 1080
LD     0 1          ; THEN: 35 ; 1081
JOIN                 ; 1082
LD     0 0          ; ELSE: 35 ; 1083
CDR                 ; generateTupleAccess total=6 pos=4 ; 1084
CDR                  ; 1085
CDR                  ; 1086
CDR                  ; 1087
CAR                  ; 1088
JOIN                 ; 1089
LD     0 2          ; THEN: 36 ; 1090
JOIN                 ; 1091
LD     0 0          ; ELSE: 36 ; 1092
CDR                 ; generateTupleAccess total=6 pos=3 ; 1093
CDR                  ; 1094
CDR                  ; 1095
CAR                  ; 1096
LD     0 1          ; var lo ; 1097
CDR                 ; generateTupleAccess total=6 pos=3 ; 1098
CDR                  ; 1099
CDR                  ; 1100
CAR                  ; 1101
CGT                  ; 1102
SEL    1105 1107    ; IF? 92 ; 1103
JOIN                 ; 1104
LD     0 2          ; THEN: 92 ; 1105
JOIN                 ; 1106
LD     0 1          ; ELSE: 92 ; 1107
LD     0 0          ; var node ; 1108
LD     0 1          ; var lo ; 1109
CDR                 ; generateTupleAccess total=6 pos=5 ; 1110
CDR                  ; 1111
CDR                  ; 1112
CDR                  ; 1113
CDR                  ; 1114
LDF    868          ;  @sorted_node_with_lo ; 1115
AP     2             ; 1116
LDF    879          ;  @sorted_node_with_hi ; 1117
AP     2             ; 1118
JOIN                 ; 1119
LD     0 0          ;  <== sorted_node_split  [SortedMapNode<T> node] (as blk) ; 1120
CDR                 ; generateTupleAccess total=6 pos=5 ; 1121
CDR                  ; 1122
CDR                  ; 1123
CDR                  ; 1124
CDR                  ; 1125
ST     0 1           ; 1126
LD     0 1          ; var hi ; 1127
ATOM                 ; 1128
SEL    1131 1133    ; IF? 37 ; 1129
RTN                  ; 1130
LD     0 0          ; THEN: 37 ; 1131
JOIN                 ; 1132
LD     0 1          ; ELSE: 37 ; 1133
CDR                 ; generateTupleAccess total=6 pos=5 ; 1134
CDR                  ; 1135
CDR                  ; 1136
CDR                  ; 1137
CDR                  ; 1138
ATOM                 ; 1139
SEL    1142 1144    ; IF? 93 ; 1140
JOIN                 ; 1141
LD     0 0          ; THEN: 93 ; 1142
JOIN                 ; 1143
LD     0 0          ; ELSE: 93 ; 1144
CDR                 ; generateTupleAccess total=6 pos=3 ; 1145
CDR                  ; 1146
CDR                  ; 1147
CAR                  ; 1148
LD     0 1          ; var hi ; 1149
CDR                 ; generateTupleAccess total=6 pos=5 ; 1150
CDR                  ; 1151
CDR                  ; 1152
CDR                  ; 1153
CDR                  ; 1154
CDR                 ; generateTupleAccess total=6 pos=3 ; 1155
CDR                  ; 1156
CDR                  ; 1157
CAR                  ; 1158
CGT                  ; 1159
SEL    1162 1164    ; IF? 94 ; 1160
JOIN                 ; 1161
LD     0 0          ; THEN: 94 ; 1162
JOIN                 ; 1163
LD     0 1          ; ELSE: 94 ; 1164
CDR                 ; generateTupleAccess total=6 pos=1 ; 1165
CAR                  ; 1166
LD     0 1          ; var hi ; 1167
CDR                 ; generateTupleAccess total=6 pos=2 ; 1168
CDR                  ; 1169
CAR                  ; 1170
LD     0 1          ; var hi ; 1171
CDR                 ; generateTupleAccess total=6 pos=3 ; 1172
CDR                  ; 1173
CDR                  ; 1174
CAR                  ; 1175
LDC    1            ; just constant from code ; 1176
ADD                  ; 1177
LD     0 0          ; var node ; 1178
LD     0 1          ; var hi ; 1179
CDR                 ; generateTupleAccess total=6 pos=4 ; 1180
CDR                  ; 1181
CDR                  ; 1182
CDR                  ; 1183
CAR                  ; 1184
LDF    879          ;  @sorted_node_with_hi ; 1185
AP     2             ; 1186
LD     0 1          ; var hi ; 1187
CDR                 ; generateTupleAccess total=6 pos=5 ; 1188
CDR                  ; 1189
CDR                  ; 1190
CDR                  ; 1191
CDR                  ; 1192
LDF    794          ;  @sorted_node_new ; 1193
AP     5             ; 1194
JOIN                 ; 1195
LD     0 0          ;  <== sorted_node_walk  [SortedMapNode<T> node, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) ; 1196
ATOM                 ; 1197
SEL    1200 1202    ; IF? 38 ; 1198
RTN                  ; 1199
LD     0 1          ; THEN: 38 ; 1200
JOIN                 ; 1201
LD     0 0          ; ELSE: 38 ; 1202
CDR                 ; generateTupleAccess total=6 pos=5 ; 1203
CDR                  ; 1204
CDR                  ; 1205
CDR                  ; 1206
CDR                  ; 1207
ATOM                 ; 1208
LDC    1            ; for negation ; 1209
SUB                  ; 1210
SEL    1213 1243    ; IF? 95 ; 1211
JOIN                 ; 1212
LD     0 0          ; THEN: 95 ; 1213
CDR                 ; generateTupleAccess total=6 pos=5 ; 1214
CDR                  ; 1215
CDR                  ; 1216
CDR                  ; 1217
CDR                  ; 1218
LD     0 0          ; var node ; 1219
CDR                 ; generateTupleAccess total=6 pos=4 ; 1220
CDR                  ; 1221
CDR                  ; 1222
CDR                  ; 1223
CAR                  ; 1224
LD     0 1          ; var acc ; 1225
LD     0 2          ; var fun ; 1226
LDF    1196         ;  @sorted_node_walk ; 1227
AP     3             ; 1228
LD     0 0          ; var node ; 1229
CDR                 ; generateTupleAccess total=6 pos=1 ; 1230
CAR                  ; 1231
LD     0 0          ; var node ; 1232
CDR                 ; generateTupleAccess total=6 pos=2 ; 1233
CDR                  ; 1234
CAR                  ; 1235
CONS                 ; 1236
LD     0 2          ; var fun ; 1237
AP     2             ; 1238
LD     0 2          ; var fun ; 1239
LDF    1196         ;  @sorted_node_walk ; 1240
AP     3             ; 1241
JOIN                 ; 1242
LD     0 0          ; ELSE: 95 ; 1243
CDR                 ; generateTupleAccess total=6 pos=4 ; 1244
CDR                  ; 1245
CDR                  ; 1246
CDR                  ; 1247
CAR                  ; 1248
LD     0 1          ; var acc ; 1249
LD     0 2          ; var fun ; 1250
LDF    1196         ;  @sorted_node_walk ; 1251
AP     3             ; 1252
LD     0 0          ; var node ; 1253
CDR                 ; generateTupleAccess total=6 pos=1 ; 1254
CAR                  ; 1255
LD     0 0          ; var node ; 1256
CDR                 ; generateTupleAccess total=6 pos=2 ; 1257
CDR                  ; 1258
CAR                  ; 1259
CONS                 ; 1260
LD     0 2          ; var fun ; 1261
AP     2             ; 1262
JOIN                 ; 1263
LD     0 0          ;  <== sorted_map_count  [SortedMap<T> m] (as blk) ; 1264
CAR                 ; generateTupleAccess total=2 pos=0 ; 1265
ATOM                 ; 1266
LDC    1            ; for negation ; 1267
SUB                  ; 1268
SEL    1271 1275    ; IF? 39 ; 1269
RTN                  ; 1270
LD     0 0          ; THEN: 39 ; 1271
CAR                 ; generateTupleAccess total=2 pos=0 ; 1272
CAR                 ; generateTupleAccess total=6 pos=0 ; 1273
JOIN                 ; 1274
LDC    0            ; ELSE: 39 ; 1275
JOIN                 ; 1276
LD     0 0          ;  <== sorted_map_contains  [SortedMap<T> m, int key] (as blk) ; 1277
CAR                 ; generateTupleAccess total=2 pos=0 ; 1278
ATOM                 ; 1279
LDC    1            ; for negation ; 1280
SUB                  ; 1281
SEL    1284 1290    ; IF? 40 ; 1282
RTN                  ; 1283
LD     0 0          ; THEN: 40 ; 1284
CAR                 ; generateTupleAccess total=2 pos=0 ; 1285
LD     0 1          ; var key ; 1286
LDF    890          ;  @sorted_node_has ; 1287
AP     2             ; 1288
JOIN                 ; 1289
LDC    0            ; ELSE: 40 ; 1290
JOIN                 ; 1291
LD     0 0          ;  <== sorted_map_get  [SortedMap<T> m, int key, T def] (as blk) ; 1292
CAR                 ; generateTupleAccess total=2 pos=0 ; 1293
ATOM                 ; 1294
LDC    1            ; for negation ; 1295
SUB                  ; 1296
SEL    1299 1306    ; IF? 41 ; 1297
RTN                  ; 1298
LD     0 0          ; THEN: 41 ; 1299
CAR                 ; generateTupleAccess total=2 pos=0 ; 1300
LD     0 1          ; var key ; 1301
LD     0 2          ; var def ; 1302
LDF    929          ;  @sorted_node_get ; 1303
AP     3             ; 1304
JOIN                 ; 1305
LD     0 2          ; ELSE: 41 ; 1306
JOIN                 ; 1307
LD     0 0          ;  <== sorted_map_assoc  [SortedMap<T> m, int key, T val] (as blk) ; 1308
CAR                 ; generateTupleAccess total=2 pos=0 ; 1309
LD     0 1          ; var key ; 1310
LD     0 2          ; var val ; 1311
LDF    972          ;  @sorted_node_put ; 1312
AP     3             ; 1313
LDC    0            ; just constant from code ; 1314
CONS                 ; 1315
RTN                  ; 1316
LD     0 1          ;  <== sorted_map_assoc_all  [SortedMap<T> m, ListCons<Tuple<Integer,T>> l] (as blk) ; 1317
LD     0 0          ; var m ; 1318
LDF    9616         ;  @lambda_1003 ; 1319
LDF    386          ;  @fold0 ; 1320
AP     3             ; 1321
RTN                  ; 1322
LD     0 0          ;  <== sorted_map_walk  [SortedMap<T> map, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) ; 1323
CAR                 ; generateTupleAccess total=2 pos=0 ; 1324
ATOM                 ; 1325
SEL    1328 1330    ; IF? 42 ; 1326
RTN                  ; 1327
LD     0 1          ; THEN: 42 ; 1328
JOIN                 ; 1329
LD     0 0          ; ELSE: 42 ; 1330
CAR                 ; generateTupleAccess total=2 pos=0 ; 1331
LD     0 1          ; var acc ; 1332
LD     0 2          ; var fun ; 1333
LDF    1196         ;  @sorted_node_walk ; 1334
AP     3             ; 1335
JOIN                 ; 1336
LD     0 1          ;  <== ghcstate_read_val  [GHCState state, Cons<Integer,Integer> val_cons] (as blk) ; 1337
CAR                  ; 1338
ST     0 2           ; 1339
LD     0 1          ; var val_cons ; 1340
CDR                  ; 1341
ST     0 3           ; 1342
LD     0 2          ; var val_tag ; 1343
LDC    3            ; just constant from code ; 1344
CGT                  ; 1345
SEL    1352 1354     ; 1346
LD     0 2          ; var val_tag ; 1347
LDC    0            ; Named Const = Args.REGISTER ; 1348
CEQ                  ; 1349
SEL    1355 1363    ; IF? 43 ; 1350
RTN                  ; 1351
BRK                 ; branch@1352 ; 1352
JOIN                 ; 1353
JOIN                ; branch@1354 ; 1354
LD     0 0          ; THEN: 43 ; 1355
CDR                 ; generateTupleAccess total=3 pos=1 ; 1356
CAR                  ; 1357
LD     0 3          ; var val ; 1358
LDC    0            ; just constant from code ; 1359
LDF    1292         ;  @sorted_map_get ; 1360
AP     3             ; 1361
JOIN                 ; 1362
LD     0 2          ; ELSE: 43 ; 1363
LDC    1            ; Named Const = Args.REGISTER_INDIRECT ; 1364
CEQ                  ; 1365
SEL    1368 1382    ; IF? 96 ; 1366
JOIN                 ; 1367
LD     0 0          ; THEN: 96 ; 1368
CDR                 ; generateTupleAccess total=3 pos=2 ; 1369
CDR                  ; 1370
LD     0 0          ; var state ; 1371
CDR                 ; generateTupleAccess total=3 pos=1 ; 1372
CAR                  ; 1373
LD     0 3          ; var val ; 1374
LDC    0            ; just constant from code ; 1375
LDF    1292         ;  @sorted_map_get ; 1376
AP     3             ; 1377
LDC    0            ; just constant from code ; 1378
LDF    1292         ;  @sorted_map_get ; 1379
AP     3             ; 1380
JOIN                 ; 1381
LD     0 2          ; ELSE: 96 ; 1382
LDC    2            ; Named Const = Args.CONSTANT ; 1383
CEQ                  ; 1384
SEL    1387 1389    ; IF? 97 ; 1385
JOIN                 ; 1386
LD     0 3          ; THEN: 97 ; 1387
JOIN                 ; 1388
LD     0 0          ; ELSE: 97 ; 1389
CDR                 ; generateTupleAccess total=3 pos=2 ; 1390
CDR                  ; 1391
LD     0 3          ; var val ; 1392
LDC    0            ; just constant from code ; 1393
LDF    1292         ;  @sorted_map_get ; 1394
AP     3             ; 1395
JOIN                 ; 1396
LD     0 1          ;  <== ghcstate_write_val  [GHCState state, Cons arg_cons, Integer val] (as blk) ; 1397
CAR                  ; 1398
ST     0 3           ; 1399
LD     0 3          ; var arg_tag ; 1400
LDC    3            ; just constant from code ; 1401
CGT                  ; 1402
SEL    1413 1415     ; 1403
LD     0 3          ; var arg_tag ; 1404
LDC    2            ; just constant from code ; 1405
CEQ                  ; 1406
SEL    1416 1418     ; 1407
LD     0 3          ; var arg_tag ; 1408
LDC    0            ; just constant from code ; 1409
CEQ                  ; 1410
SEL    1419 1435    ; IF? 44 ; 1411
RTN                  ; 1412
BRK                 ; branch@1413 ; 1413
JOIN                 ; 1414
JOIN                ; branch@1415 ; 1415
BRK                 ; branch@1416 ; 1416
JOIN                 ; 1417
JOIN                ; branch@1418 ; 1418
LD     0 0          ; THEN: 44 ; 1419
CAR                 ; generateTupleAccess total=3 pos=0 ; 1420
LD     0 0          ; var state ; 1421
CDR                 ; generateTupleAccess total=3 pos=1 ; 1422
CAR                  ; 1423
LD     0 1          ; var arg_cons ; 1424
CDR                  ; 1425
LD     0 2          ; var val ; 1426
LDF    1308         ;  @sorted_map_assoc ; 1427
AP     3             ; 1428
LD     0 0          ; var state ; 1429
CDR                 ; generateTupleAccess total=3 pos=2 ; 1430
CDR                  ; 1431
CONS                 ; 1432
CONS                 ; 1433
JOIN                 ; 1434
LD     0 3          ; ELSE: 44 ; 1435
LDC    1            ; just constant from code ; 1436
CEQ                  ; 1437
SEL    1440 1462    ; IF? 98 ; 1438
JOIN                 ; 1439
LD     0 0          ; THEN: 98 ; 1440
CAR                 ; generateTupleAccess total=3 pos=0 ; 1441
LD     0 0          ; var state ; 1442
CDR                 ; generateTupleAccess total=3 pos=1 ; 1443
CAR                  ; 1444
LD     0 0          ; var state ; 1445
CDR                 ; generateTupleAccess total=3 pos=1 ; 1446
CAR                  ; 1447
LD     0 1          ; var arg_cons ; 1448
CDR                  ; 1449
LDC    0            ; just constant from code ; 1450
LDF    1292         ;  @sorted_map_get ; 1451
AP     3             ; 1452
LD     0 2          ; var val ; 1453
LDF    1308         ;  @sorted_map_assoc ; 1454
AP     3             ; 1455
LD     0 0          ; var state ; 1456
CDR                 ; generateTupleAccess total=3 pos=2 ; 1457
CDR                  ; 1458
CONS                 ; 1459
CONS                 ; 1460
JOIN                 ; 1461
LD     0 0          ; ELSE: 98 ; 1462
CAR                 ; generateTupleAccess total=3 pos=0 ; 1463
LD     0 0          ; var state ; 1464
CDR                 ; generateTupleAccess total=3 pos=1 ; 1465
CAR                  ; 1466
LD     0 0          ; var state ; 1467
CDR                 ; generateTupleAccess total=3 pos=2 ; 1468
CDR                  ; 1469
LD     0 1          ; var arg_cons ; 1470
CDR                  ; 1471
LD     0 2          ; var val ; 1472
LDF    1308         ;  @sorted_map_assoc ; 1473
AP     3             ; 1474
CONS                 ; 1475
CONS                 ; 1476
JOIN                 ; 1477
LD     0 0          ;  <== ghcstate_assoc  [GHCState state, Cons arg_cons, Cons val_cons] (as blk) ; 1478
LD     0 2          ; var val_cons ; 1479
LDC 0               ; local var space ; 1480
LDC 0               ; local var space ; 1481
LDF    1337         ;  @ghcstate_read_val ; 1482
AP     4             ; 1483
ST     0 3           ; 1484
LD     0 0          ; var state ; 1485
LD     0 1          ; var arg_cons ; 1486
LD     0 3          ; var val ; 1487
LDC 0               ; local var space ; 1488
LDF    1397         ;  @ghcstate_write_val ; 1489
AP     4             ; 1490
RTN                  ; 1491
LD     0 0          ;  <== processGhostInfoRequest  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer index, int requestType] (as blk) ; 1492
CDR                 ; generateTupleAccess total=4 pos=2 ; 1493
CDR                  ; 1494
CAR                  ; 1495
LD     0 3          ; var index ; 1496
LD     0 1          ; var state ; 1497
CAR                 ; generateTupleAccess total=3 pos=0 ; 1498
LDF    469          ;  @list_item_def ; 1499
AP     3             ; 1500
ST     0 5           ; 1501
LDC    4            ; just constant from code ; 1502
LD     0 4          ; var requestType ; 1503
CEQ                  ; 1504
SEL    1507 1529    ; IF? 45 ; 1505
RTN                  ; 1506
LD     0 5          ; THEN: 45 ; 1507
LD     0 1          ; var state ; 1508
CDR                 ; generateTupleAccess total=3 pos=1 ; 1509
CAR                  ; 1510
LDC    0            ; just constant from code ; 1511
LD     0 2          ; var ghostInfo ; 1512
CAR                 ; generateTupleAccess total=3 pos=0 ; 1513
CAR                 ; generateTupleAccess total=2 pos=0 ; 1514
LDF    1308         ;  @sorted_map_assoc ; 1515
AP     3             ; 1516
LDC    1            ; just constant from code ; 1517
LD     0 2          ; var ghostInfo ; 1518
CAR                 ; generateTupleAccess total=3 pos=0 ; 1519
CDR                 ; generateTupleAccess total=2 pos=1 ; 1520
LDF    1308         ;  @sorted_map_assoc ; 1521
AP     3             ; 1522
LD     0 1          ; var state ; 1523
CDR                 ; generateTupleAccess total=3 pos=2 ; 1524
CDR                  ; 1525
CONS                 ; 1526
CONS                 ; 1527
JOIN                 ; 1528
LDC    5            ; ELSE: 45 ; 1529
LD     0 4          ; var requestType ; 1530
CEQ                  ; 1531
SEL    1534 1558    ; IF? 99 ; 1532
JOIN                 ; 1533
LD     0 5          ; THEN: 99 ; 1534
LD     0 1          ; var state ; 1535
CDR                 ; generateTupleAccess total=3 pos=1 ; 1536
CAR                  ; 1537
LDC    0            ; just constant from code ; 1538
LD     0 5          ; var gs ; 1539
CDR                 ; generateTupleAccess total=3 pos=1 ; 1540
CAR                  ; 1541
CAR                 ; generateTupleAccess total=2 pos=0 ; 1542
LDF    1308         ;  @sorted_map_assoc ; 1543
AP     3             ; 1544
LDC    1            ; just constant from code ; 1545
LD     0 5          ; var gs ; 1546
CDR                 ; generateTupleAccess total=3 pos=1 ; 1547
CAR                  ; 1548
CDR                 ; generateTupleAccess total=2 pos=1 ; 1549
LDF    1308         ;  @sorted_map_assoc ; 1550
AP     3             ; 1551
LD     0 1          ; var state ; 1552
CDR                 ; generateTupleAccess total=3 pos=2 ; 1553
CDR                  ; 1554
CONS                 ; 1555
CONS                 ; 1556
JOIN                 ; 1557
LD     0 5          ; ELSE: 99 ; 1558
LD     0 1          ; var state ; 1559
CDR                 ; generateTupleAccess total=3 pos=1 ; 1560
CAR                  ; 1561
LDC    0            ; just constant from code ; 1562
LD     0 5          ; var gs ; 1563
CAR                 ; generateTupleAccess total=3 pos=0 ; 1564
LDF    1308         ;  @sorted_map_assoc ; 1565
AP     3             ; 1566
LDC    1            ; just constant from code ; 1567
LD     0 5          ; var gs ; 1568
CDR                 ; generateTupleAccess total=3 pos=2 ; 1569
CDR                  ; 1570
LDF    1308         ;  @sorted_map_assoc ; 1571
AP     3             ; 1572
LD     0 1          ; var state ; 1573
CDR                 ; generateTupleAccess total=3 pos=2 ; 1574
CDR                  ; 1575
CONS                 ; 1576
CONS                 ; 1577
JOIN                 ; 1578
LD     0 1          ;  <== processGhostInt  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer num, Cons arg] (as blk) ; 1579
CAR                 ; generateTupleAccess total=3 pos=0 ; 1580
ST     0 5           ; 1581
LD     0 2          ; var ghostInfo ; 1582
CDR                 ; generateTupleAccess total=3 pos=2 ; 1583
CDR                  ; 1584
ST     0 6           ; 1585
LDC    0            ; just constant from code ; 1586
LD     0 3          ; var num ; 1587
CEQ                  ; 1588
SEL    1591 1614    ; IF? 46 ; 1589
RTN                  ; 1590
LD     0 5          ; THEN: 46 ; 1591
CAR                 ; generateTupleAccess total=3 pos=0 ; 1592
LD     0 5          ; var gs ; 1593
CDR                 ; generateTupleAccess total=3 pos=1 ; 1594
CAR                  ; 1595
LD     0 1          ; var state ; 1596
CDR                 ; generateTupleAccess total=3 pos=1 ; 1597
CAR                  ; 1598
LDC    0            ; just constant from code ; 1599
LDC    0            ; just constant from code ; 1600
LDF    1292         ;  @sorted_map_get ; 1601
AP     3             ; 1602
CONS                 ; 1603
CONS                 ; 1604
LD     0 1          ; var state ; 1605
CDR                 ; generateTupleAccess total=3 pos=1 ; 1606
CAR                  ; 1607
LD     0 1          ; var state ; 1608
CDR                 ; generateTupleAccess total=3 pos=2 ; 1609
CDR                  ; 1610
CONS                 ; 1611
CONS                 ; 1612
JOIN                 ; 1613
LDC    1            ; ELSE: 46 ; 1614
LD     0 3          ; var num ; 1615
CEQ                  ; 1616
SEL    1619 1647    ; IF? 100 ; 1617
JOIN                 ; 1618
LD     0 5          ; THEN: 100 ; 1619
LD     0 1          ; var state ; 1620
CDR                 ; generateTupleAccess total=3 pos=1 ; 1621
CAR                  ; 1622
LDC    0            ; just constant from code ; 1623
LD     0 0          ; var world ; 1624
CDR                 ; generateTupleAccess total=4 pos=1 ; 1625
CAR                  ; 1626
CDR                 ; generateTupleAccess total=5 pos=1 ; 1627
CAR                  ; 1628
CAR                 ; generateTupleAccess total=2 pos=0 ; 1629
LDF    1308         ;  @sorted_map_assoc ; 1630
AP     3             ; 1631
LDC    1            ; just constant from code ; 1632
LD     0 0          ; var world ; 1633
CDR                 ; generateTupleAccess total=4 pos=1 ; 1634
CAR                  ; 1635
CDR                 ; generateTupleAccess total=5 pos=1 ; 1636
CAR                  ; 1637
CDR                 ; generateTupleAccess total=2 pos=1 ; 1638
LDF    1308         ;  @sorted_map_assoc ; 1639
AP     3             ; 1640
LD     0 1          ; var state ; 1641
CDR                 ; generateTupleAccess total=3 pos=2 ; 1642
CDR                  ; 1643
CONS                 ; 1644
CONS                 ; 1645
JOIN                 ; 1646
LDC    2            ; ELSE: 100 ; 1647
LD     0 3          ; var num ; 1648
CEQ                  ; 1649
SEL    1652 1680    ; IF? 101 ; 1650
JOIN                 ; 1651
LD     0 5          ; THEN: 101 ; 1652
LD     0 1          ; var state ; 1653
CDR                 ; generateTupleAccess total=3 pos=1 ; 1654
CAR                  ; 1655
LDC    0            ; just constant from code ; 1656
LD     0 0          ; var world ; 1657
CDR                 ; generateTupleAccess total=4 pos=1 ; 1658
CAR                  ; 1659
CDR                 ; generateTupleAccess total=5 pos=1 ; 1660
CAR                  ; 1661
CAR                 ; generateTupleAccess total=2 pos=0 ; 1662
LDF    1308         ;  @sorted_map_assoc ; 1663
AP     3             ; 1664
LDC    1            ; just constant from code ; 1665
LD     0 0          ; var world ; 1666
CDR                 ; generateTupleAccess total=4 pos=1 ; 1667
CAR                  ; 1668
CDR                 ; generateTupleAccess total=5 pos=1 ; 1669
CAR                  ; 1670
CDR                 ; generateTupleAccess total=2 pos=1 ; 1671
LDF    1308         ;  @sorted_map_assoc ; 1672
AP     3             ; 1673
LD     0 1          ; var state ; 1674
CDR                 ; generateTupleAccess total=3 pos=2 ; 1675
CDR                  ; 1676
CONS                 ; 1677
CONS                 ; 1678
JOIN                 ; 1679
LDC    3            ; ELSE: 101 ; 1680
LD     0 3          ; var num ; 1681
CEQ                  ; 1682
SEL    1685 1699    ; IF? 102 ; 1683
JOIN                 ; 1684
LD     0 5          ; THEN: 102 ; 1685
LD     0 1          ; var state ; 1686
CDR                 ; generateTupleAccess total=3 pos=1 ; 1687
CAR                  ; 1688
LDC    0            ; just constant from code ; 1689
LD     0 6          ; var currentGhostIndex ; 1690
LDF    1308         ;  @sorted_map_assoc ; 1691
AP     3             ; 1692
LD     0 1          ; var state ; 1693
CDR                 ; generateTupleAccess total=3 pos=2 ; 1694
CDR                  ; 1695
CONS                 ; 1696
CONS                 ; 1697
JOIN                 ; 1698
LDC    4            ; ELSE: 102 ; 1699
LD     0 3          ; var num ; 1700
CEQ                  ; 1701
SEL    1704 1719    ; IF? 103 ; 1702
JOIN                 ; 1703
LD     0 0          ; THEN: 103 ; 1704
LD     0 1          ; var state ; 1705
LD     0 2          ; var ghostInfo ; 1706
LD     0 1          ; var state ; 1707
CDR                 ; generateTupleAccess total=3 pos=1 ; 1708
CAR                  ; 1709
LDC    0            ; just constant from code ; 1710
LDC    0            ; just constant from code ; 1711
LDF    1292         ;  @sorted_map_get ; 1712
AP     3             ; 1713
LDC    4            ; just constant from code ; 1714
LDC 0               ; local var space ; 1715
LDF    1492         ;  @processGhostInfoRequest ; 1716
AP     6             ; 1717
JOIN                 ; 1718
LDC    5            ; ELSE: 103 ; 1719
LD     0 3          ; var num ; 1720
CEQ                  ; 1721
SEL    1724 1739    ; IF? 104 ; 1722
JOIN                 ; 1723
LD     0 0          ; THEN: 104 ; 1724
LD     0 1          ; var state ; 1725
LD     0 2          ; var ghostInfo ; 1726
LD     0 1          ; var state ; 1727
CDR                 ; generateTupleAccess total=3 pos=1 ; 1728
CAR                  ; 1729
LDC    0            ; just constant from code ; 1730
LDC    0            ; just constant from code ; 1731
LDF    1292         ;  @sorted_map_get ; 1732
AP     3             ; 1733
LDC    5            ; just constant from code ; 1734
LDC 0               ; local var space ; 1735
LDF    1492         ;  @processGhostInfoRequest ; 1736
AP     6             ; 1737
JOIN                 ; 1738
LDC    6            ; ELSE: 104 ; 1739
LD     0 3          ; var num ; 1740
CEQ                  ; 1741
SEL    1744 1759    ; IF? 105 ; 1742
JOIN                 ; 1743
LD     0 0          ; THEN: 105 ; 1744
LD     0 1          ; var state ; 1745
LD     0 2          ; var ghostInfo ; 1746
LD     0 1          ; var state ; 1747
CDR                 ; generateTupleAccess total=3 pos=1 ; 1748
CAR                  ; 1749
LDC    0            ; just constant from code ; 1750
LDC    0            ; just constant from code ; 1751
LDF    1292         ;  @sorted_map_get ; 1752
AP     3             ; 1753
LDC    6            ; just constant from code ; 1754
LDC 0               ; local var space ; 1755
LDF    1492         ;  @processGhostInfoRequest ; 1756
AP     6             ; 1757
JOIN                 ; 1758
LDC    7            ; ELSE: 105 ; 1759
LD     0 3          ; var num ; 1760
CEQ                  ; 1761
SEL    1764 1795    ; IF? 106 ; 1762
JOIN                 ; 1763
LD     0 5          ; THEN: 106 ; 1764
LD     0 1          ; var state ; 1765
CDR                 ; generateTupleAccess total=3 pos=1 ; 1766
CAR                  ; 1767
LDC    0            ; just constant from code ; 1768
LD     0 0          ; var world ; 1769
CAR                 ; generateTupleAccess total=4 pos=0 ; 1770
LD     0 1          ; var state ; 1771
CDR                 ; generateTupleAccess total=3 pos=1 ; 1772
CAR                  ; 1773
LDC    0            ; just constant from code ; 1774
LDC    0            ; just constant from code ; 1775
LDF    1292         ;  @sorted_map_get ; 1776
AP     3             ; 1777
LD     0 1          ; var state ; 1778
CDR                 ; generateTupleAccess total=3 pos=1 ; 1779
CAR                  ; 1780
LDC    1            ; just constant from code ; 1781
LDC    0            ; just constant from code ; 1782
LDF    1292         ;  @sorted_map_get ; 1783
AP     3             ; 1784
LDF    3597         ;  @getMapItem ; 1785
AP     3             ; 1786
LDF    1308         ;  @sorted_map_assoc ; 1787
AP     3             ; 1788
LD     0 1          ; var state ; 1789
CDR                 ; generateTupleAccess total=3 pos=2 ; 1790
CDR                  ; 1791
CONS                 ; 1792
CONS                 ; 1793
JOIN                 ; 1794
LD     0 1          ; ELSE: 106 ; 1795
JOIN                 ; 1796
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 1797
LD     0 0          ; var f ; 1798
AP     1             ; 1799
CAR                  ; 1800
ST     0 3           ; 1801
LD     0 2          ; var n ; 1802
LDC    0            ; just constant from code ; 1803
CEQ                  ; 1804
SEL    1807 1811    ; IF? 47 ; 1805
RTN                  ; 1806
LD     0 3          ; THEN: 47 ; 1807
LDC    0            ; NULL literal ; 1808
CONS                 ; 1809
JOIN                 ; 1810
LD     0 3          ; ELSE: 47 ; 1811
LD     0 0          ; var f ; 1812
LD     0 1          ; var a ; 1813
LD     0 0          ; var f ; 1814
AP     1             ; 1815
CDR                  ; 1816
LD     0 2          ; var n ; 1817
LDC    1            ; just constant from code ; 1818
SUB                  ; 1819
LDC 0               ; local var space ; 1820
LDF    749          ;  @produce_n ; 1821
AP     4             ; 1822
CONS                 ; 1823
JOIN                 ; 1824
LDF    9624         ;  <== bit_split  [Integer x] (as blk), ALSO: @lambda_1004 ; 1825
LD     0 0          ; var x ; 1826
LDC    7            ; just constant from code ; 1827
LDC 0               ; local var space ; 1828
LDF    749          ;  @produce_n ; 1829
AP     4             ; 1830
RTN                  ; 1831
LD     0 0          ;  <== emulate_bitop  [Integer x, Integer y, Function2<Integer,Integer,Integer> f] (as blk) ; 1832
LDF    1825         ;  @bit_split ; 1833
AP     1             ; 1834
ST     0 3           ; 1835
LD     0 1          ; var y ; 1836
LDF    1825         ;  @bit_split ; 1837
AP     1             ; 1838
ST     0 4           ; 1839
LDF    9641         ;  @lambda_1005 ; 1840
LDC    0            ; just constant from code ; 1841
LD     0 2          ; var f ; 1842
LD     0 3          ; var bits_x ; 1843
LD     0 4          ; var bits_y ; 1844
LDF    660          ;  @zip_with ; 1845
AP     3             ; 1846
LDF    48           ;  @foldr ; 1847
AP     3             ; 1848
RTN                  ; 1849
LD     0 0          ;  <== ghcstate_bitop  [GHCState state, Cons arg_cons, Cons val_cons, int type] (as blk) ; 1850
LD     0 1          ; var arg_cons ; 1851
LDC 0               ; local var space ; 1852
LDC 0               ; local var space ; 1853
LDF    1337         ;  @ghcstate_read_val ; 1854
AP     4             ; 1855
ST     0 4           ; 1856
LD     0 0          ; var state ; 1857
LD     0 2          ; var val_cons ; 1858
LDC 0               ; local var space ; 1859
LDC 0               ; local var space ; 1860
LDF    1337         ;  @ghcstate_read_val ; 1861
AP     4             ; 1862
ST     0 5           ; 1863
LD     0 4          ; var arg ; 1864
LD     0 5          ; var val ; 1865
LD     0 3          ; var type ; 1866
LDC    7            ; Named Const = GHCOps.AND ; 1867
CEQ                  ; 1868
SEL    1882 1884    ; IF? 48 ; 1869
LDC 0               ; local var space ; 1870
LDC 0               ; local var space ; 1871
LDF    1832         ;  @emulate_bitop ; 1872
AP     5             ; 1873
ST     0 6           ; 1874
LD     0 0          ; var state ; 1875
LD     0 1          ; var arg_cons ; 1876
LD     0 6          ; var result ; 1877
LDC 0               ; local var space ; 1878
LDF    1397         ;  @ghcstate_write_val ; 1879
AP     4             ; 1880
RTN                  ; 1881
LDF    10229        ; THEN: 48, ALSO: @lambda_1054 ; 1882
JOIN                 ; 1883
LD     0 3          ; ELSE: 48 ; 1884
LDC    8            ; Named Const = GHCOps.OR ; 1885
CEQ                  ; 1886
SEL    1889 1891    ; IF? 107 ; 1887
JOIN                 ; 1888
LDF    10233        ; THEN: 107, ALSO: @lambda_1055 ; 1889
JOIN                 ; 1890
LDF    10244        ; ELSE: 107, ALSO: @lambda_1056 ; 1891
JOIN                 ; 1892
LD     0 5          ;  <== runGhostStep  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state, Cons step] (as blk) ; 1893
CAR                  ; 1894
ST     0 6           ; 1895
LD     0 5          ; var step ; 1896
CDR                  ; 1897
ST     0 7           ; 1898
LD     0 4          ; var state ; 1899
CAR                 ; generateTupleAccess total=3 pos=0 ; 1900
LD     0 4          ; var state ; 1901
CDR                 ; generateTupleAccess total=3 pos=1 ; 1902
CAR                  ; 1903
LDC    8            ; just constant from code ; 1904
LD     0 4          ; var state ; 1905
CDR                 ; generateTupleAccess total=3 pos=1 ; 1906
CAR                  ; 1907
LDC    8            ; just constant from code ; 1908
LDC    0            ; just constant from code ; 1909
LDF    1292         ;  @sorted_map_get ; 1910
AP     3             ; 1911
LDC    1            ; just constant from code ; 1912
ADD                  ; 1913
LDF    1308         ;  @sorted_map_assoc ; 1914
AP     3             ; 1915
LD     0 4          ; var state ; 1916
CDR                 ; generateTupleAccess total=3 pos=2 ; 1917
CDR                  ; 1918
CONS                 ; 1919
CONS                 ; 1920
ST     0 8           ; 1921
LDC    0            ; Named Const = GHCOps.MOV ; 1922
LD     0 6          ; var opcode ; 1923
CEQ                  ; 1924
SEL    1927 1945    ; IF? 49 ; 1925
RTN                  ; 1926
LD     0 0          ; THEN: 49 ; 1927
LD     0 1          ; var world ; 1928
LD     0 2          ; var ghostInfo ; 1929
LD     0 3          ; var lev ; 1930
LD     0 8          ; var inc_pc ; 1931
LD     0 7          ; var args ; 1932
CAR                  ; 1933
LD     0 7          ; var args ; 1934
CDR                  ; 1935
CAR                  ; 1936
LDC 0               ; local var space ; 1937
LDF    1478         ;  @ghcstate_assoc ; 1938
AP     4             ; 1939
LDC 0               ; local var space ; 1940
LDC 0               ; local var space ; 1941
LDF    2405         ;  @runGhost ; 1942
AP     7             ; 1943
JOIN                 ; 1944
LDC    1            ; ELSE: 49 ; 1945
LD     0 6          ; var opcode ; 1946
CEQ                  ; 1947
SEL    1950 1974    ; IF? 108 ; 1948
JOIN                 ; 1949
LD     0 0          ; THEN: 108 ; 1950
LD     0 1          ; var world ; 1951
LD     0 2          ; var ghostInfo ; 1952
LD     0 3          ; var lev ; 1953
LD     0 8          ; var inc_pc ; 1954
LD     0 7          ; var args ; 1955
CAR                  ; 1956
LD     0 8          ; var inc_pc ; 1957
LD     0 7          ; var args ; 1958
CAR                  ; 1959
LDC 0               ; local var space ; 1960
LDC 0               ; local var space ; 1961
LDF    1337         ;  @ghcstate_read_val ; 1962
AP     4             ; 1963
LDC    1            ; just constant from code ; 1964
ADD                  ; 1965
LDC 0               ; local var space ; 1966
LDF    1397         ;  @ghcstate_write_val ; 1967
AP     4             ; 1968
LDC 0               ; local var space ; 1969
LDC 0               ; local var space ; 1970
LDF    2405         ;  @runGhost ; 1971
AP     7             ; 1972
JOIN                 ; 1973
LDC    2            ; ELSE: 108 ; 1974
LD     0 6          ; var opcode ; 1975
CEQ                  ; 1976
SEL    1979 2003    ; IF? 109 ; 1977
JOIN                 ; 1978
LD     0 0          ; THEN: 109 ; 1979
LD     0 1          ; var world ; 1980
LD     0 2          ; var ghostInfo ; 1981
LD     0 3          ; var lev ; 1982
LD     0 8          ; var inc_pc ; 1983
LD     0 7          ; var args ; 1984
CAR                  ; 1985
LD     0 8          ; var inc_pc ; 1986
LD     0 7          ; var args ; 1987
CAR                  ; 1988
LDC 0               ; local var space ; 1989
LDC 0               ; local var space ; 1990
LDF    1337         ;  @ghcstate_read_val ; 1991
AP     4             ; 1992
LDC    1            ; just constant from code ; 1993
SUB                  ; 1994
LDC 0               ; local var space ; 1995
LDF    1397         ;  @ghcstate_write_val ; 1996
AP     4             ; 1997
LDC 0               ; local var space ; 1998
LDC 0               ; local var space ; 1999
LDF    2405         ;  @runGhost ; 2000
AP     7             ; 2001
JOIN                 ; 2002
LDC    3            ; ELSE: 109 ; 2003
LD     0 6          ; var opcode ; 2004
CEQ                  ; 2005
SEL    2008 2039    ; IF? 110 ; 2006
JOIN                 ; 2007
LD     0 0          ; THEN: 110 ; 2008
LD     0 1          ; var world ; 2009
LD     0 2          ; var ghostInfo ; 2010
LD     0 3          ; var lev ; 2011
LD     0 8          ; var inc_pc ; 2012
LD     0 7          ; var args ; 2013
CAR                  ; 2014
LD     0 8          ; var inc_pc ; 2015
LD     0 7          ; var args ; 2016
CAR                  ; 2017
LDC 0               ; local var space ; 2018
LDC 0               ; local var space ; 2019
LDF    1337         ;  @ghcstate_read_val ; 2020
AP     4             ; 2021
LD     0 8          ; var inc_pc ; 2022
LD     0 7          ; var args ; 2023
CDR                  ; 2024
CAR                  ; 2025
LDC 0               ; local var space ; 2026
LDC 0               ; local var space ; 2027
LDF    1337         ;  @ghcstate_read_val ; 2028
AP     4             ; 2029
ADD                  ; 2030
LDC 0               ; local var space ; 2031
LDF    1397         ;  @ghcstate_write_val ; 2032
AP     4             ; 2033
LDC 0               ; local var space ; 2034
LDC 0               ; local var space ; 2035
LDF    2405         ;  @runGhost ; 2036
AP     7             ; 2037
JOIN                 ; 2038
LDC    4            ; ELSE: 110 ; 2039
LD     0 6          ; var opcode ; 2040
CEQ                  ; 2041
SEL    2044 2075    ; IF? 111 ; 2042
JOIN                 ; 2043
LD     0 0          ; THEN: 111 ; 2044
LD     0 1          ; var world ; 2045
LD     0 2          ; var ghostInfo ; 2046
LD     0 3          ; var lev ; 2047
LD     0 8          ; var inc_pc ; 2048
LD     0 7          ; var args ; 2049
CAR                  ; 2050
LD     0 8          ; var inc_pc ; 2051
LD     0 7          ; var args ; 2052
CAR                  ; 2053
LDC 0               ; local var space ; 2054
LDC 0               ; local var space ; 2055
LDF    1337         ;  @ghcstate_read_val ; 2056
AP     4             ; 2057
LD     0 8          ; var inc_pc ; 2058
LD     0 7          ; var args ; 2059
CDR                  ; 2060
CAR                  ; 2061
LDC 0               ; local var space ; 2062
LDC 0               ; local var space ; 2063
LDF    1337         ;  @ghcstate_read_val ; 2064
AP     4             ; 2065
SUB                  ; 2066
LDC 0               ; local var space ; 2067
LDF    1397         ;  @ghcstate_write_val ; 2068
AP     4             ; 2069
LDC 0               ; local var space ; 2070
LDC 0               ; local var space ; 2071
LDF    2405         ;  @runGhost ; 2072
AP     7             ; 2073
JOIN                 ; 2074
LDC    5            ; ELSE: 111 ; 2075
LD     0 6          ; var opcode ; 2076
CEQ                  ; 2077
SEL    2080 2111    ; IF? 112 ; 2078
JOIN                 ; 2079
LD     0 0          ; THEN: 112 ; 2080
LD     0 1          ; var world ; 2081
LD     0 2          ; var ghostInfo ; 2082
LD     0 3          ; var lev ; 2083
LD     0 8          ; var inc_pc ; 2084
LD     0 7          ; var args ; 2085
CAR                  ; 2086
LD     0 8          ; var inc_pc ; 2087
LD     0 7          ; var args ; 2088
CAR                  ; 2089
LDC 0               ; local var space ; 2090
LDC 0               ; local var space ; 2091
LDF    1337         ;  @ghcstate_read_val ; 2092
AP     4             ; 2093
LD     0 8          ; var inc_pc ; 2094
LD     0 7          ; var args ; 2095
CDR                  ; 2096
CAR                  ; 2097
LDC 0               ; local var space ; 2098
LDC 0               ; local var space ; 2099
LDF    1337         ;  @ghcstate_read_val ; 2100
AP     4             ; 2101
MUL                  ; 2102
LDC 0               ; local var space ; 2103
LDF    1397         ;  @ghcstate_write_val ; 2104
AP     4             ; 2105
LDC 0               ; local var space ; 2106
LDC 0               ; local var space ; 2107
LDF    2405         ;  @runGhost ; 2108
AP     7             ; 2109
JOIN                 ; 2110
LDC    6            ; ELSE: 112 ; 2111
LD     0 6          ; var opcode ; 2112
CEQ                  ; 2113
SEL    2116 2147    ; IF? 113 ; 2114
JOIN                 ; 2115
LD     0 0          ; THEN: 113 ; 2116
LD     0 1          ; var world ; 2117
LD     0 2          ; var ghostInfo ; 2118
LD     0 3          ; var lev ; 2119
LD     0 8          ; var inc_pc ; 2120
LD     0 7          ; var args ; 2121
CAR                  ; 2122
LD     0 8          ; var inc_pc ; 2123
LD     0 7          ; var args ; 2124
CAR                  ; 2125
LDC 0               ; local var space ; 2126
LDC 0               ; local var space ; 2127
LDF    1337         ;  @ghcstate_read_val ; 2128
AP     4             ; 2129
LD     0 8          ; var inc_pc ; 2130
LD     0 7          ; var args ; 2131
CDR                  ; 2132
CAR                  ; 2133
LDC 0               ; local var space ; 2134
LDC 0               ; local var space ; 2135
LDF    1337         ;  @ghcstate_read_val ; 2136
AP     4             ; 2137
DIV                  ; 2138
LDC 0               ; local var space ; 2139
LDF    1397         ;  @ghcstate_write_val ; 2140
AP     4             ; 2141
LDC 0               ; local var space ; 2142
LDC 0               ; local var space ; 2143
LDF    2405         ;  @runGhost ; 2144
AP     7             ; 2145
JOIN                 ; 2146
LDC    7            ; ELSE: 113 ; 2147
LD     0 6          ; var opcode ; 2148
CEQ                  ; 2149
SEL    2152 2173    ; IF? 114 ; 2150
JOIN                 ; 2151
LD     0 0          ; THEN: 114 ; 2152
LD     0 1          ; var world ; 2153
LD     0 2          ; var ghostInfo ; 2154
LD     0 3          ; var lev ; 2155
LD     0 8          ; var inc_pc ; 2156
LD     0 7          ; var args ; 2157
CAR                  ; 2158
LD     0 7          ; var args ; 2159
CDR                  ; 2160
CAR                  ; 2161
LDC    7            ; Named Const = GHCOps.AND ; 2162
LDC 0               ; local var space ; 2163
LDC 0               ; local var space ; 2164
LDC 0               ; local var space ; 2165
LDF    1850         ;  @ghcstate_bitop ; 2166
AP     7             ; 2167
LDC 0               ; local var space ; 2168
LDC 0               ; local var space ; 2169
LDF    2405         ;  @runGhost ; 2170
AP     7             ; 2171
JOIN                 ; 2172
LDC    8            ; ELSE: 114 ; 2173
LD     0 6          ; var opcode ; 2174
CEQ                  ; 2175
SEL    2178 2199    ; IF? 115 ; 2176
JOIN                 ; 2177
LD     0 0          ; THEN: 115 ; 2178
LD     0 1          ; var world ; 2179
LD     0 2          ; var ghostInfo ; 2180
LD     0 3          ; var lev ; 2181
LD     0 8          ; var inc_pc ; 2182
LD     0 7          ; var args ; 2183
CAR                  ; 2184
LD     0 7          ; var args ; 2185
CDR                  ; 2186
CAR                  ; 2187
LDC    8            ; Named Const = GHCOps.OR ; 2188
LDC 0               ; local var space ; 2189
LDC 0               ; local var space ; 2190
LDC 0               ; local var space ; 2191
LDF    1850         ;  @ghcstate_bitop ; 2192
AP     7             ; 2193
LDC 0               ; local var space ; 2194
LDC 0               ; local var space ; 2195
LDF    2405         ;  @runGhost ; 2196
AP     7             ; 2197
JOIN                 ; 2198
LDC    9            ; ELSE: 115 ; 2199
LD     0 6          ; var opcode ; 2200
CEQ                  ; 2201
SEL    2204 2225    ; IF? 116 ; 2202
JOIN                 ; 2203
LD     0 0          ; THEN: 116 ; 2204
LD     0 1          ; var world ; 2205
LD     0 2          ; var ghostInfo ; 2206
LD     0 3          ; var lev ; 2207
LD     0 8          ; var inc_pc ; 2208
LD     0 7          ; var args ; 2209
CAR                  ; 2210
LD     0 7          ; var args ; 2211
CDR                  ; 2212
CAR                  ; 2213
LDC    9            ; Named Const = GHCOps.XOR ; 2214
LDC 0               ; local var space ; 2215
LDC 0               ; local var space ; 2216
LDC 0               ; local var space ; 2217
LDF    1850         ;  @ghcstate_bitop ; 2218
AP     7             ; 2219
LDC 0               ; local var space ; 2220
LDC 0               ; local var space ; 2221
LDF    2405         ;  @runGhost ; 2222
AP     7             ; 2223
JOIN                 ; 2224
LDC    10           ; ELSE: 116 ; 2225
LD     0 6          ; var opcode ; 2226
CEQ                  ; 2227
SEL    2230 2257    ; IF? 117 ; 2228
JOIN                 ; 2229
LD     0 0          ; THEN: 117 ; 2230
LD     0 1          ; var world ; 2231
LD     0 2          ; var ghostInfo ; 2232
LD     0 3          ; var lev ; 2233
LD     0 4          ; var state ; 2234
LD     0 7          ; var args ; 2235
CDR                  ; 2236
CDR                  ; 2237
LDC 0               ; local var space ; 2238
LDC 0               ; local var space ; 2239
LDF    1337         ;  @ghcstate_read_val ; 2240
AP     4             ; 2241
LD     0 4          ; var state ; 2242
LD     0 7          ; var args ; 2243
CDR                  ; 2244
CAR                  ; 2245
LDC 0               ; local var space ; 2246
LDC 0               ; local var space ; 2247
LDF    1337         ;  @ghcstate_read_val ; 2248
AP     4             ; 2249
CGT                  ; 2250
SEL    2262 2278    ; IF? 118 ; 2251
LDC 0               ; local var space ; 2252
LDC 0               ; local var space ; 2253
LDF    2405         ;  @runGhost ; 2254
AP     7             ; 2255
JOIN                 ; 2256
LDC    11           ; ELSE: 117 ; 2257
LD     0 6          ; var opcode ; 2258
CEQ                  ; 2259
SEL    2280 2307    ; IF? 119 ; 2260
JOIN                 ; 2261
LD     0 4          ; THEN: 118 ; 2262
CAR                 ; generateTupleAccess total=3 pos=0 ; 2263
LD     0 4          ; var state ; 2264
CDR                 ; generateTupleAccess total=3 pos=1 ; 2265
CAR                  ; 2266
LDC    8            ; just constant from code ; 2267
LD     0 7          ; var args ; 2268
CAR                  ; 2269
LDF    1308         ;  @sorted_map_assoc ; 2270
AP     3             ; 2271
LD     0 4          ; var state ; 2272
CDR                 ; generateTupleAccess total=3 pos=2 ; 2273
CDR                  ; 2274
CONS                 ; 2275
CONS                 ; 2276
JOIN                 ; 2277
LD     0 4          ; ELSE: 118 ; 2278
JOIN                 ; 2279
LD     0 0          ; THEN: 119 ; 2280
LD     0 1          ; var world ; 2281
LD     0 2          ; var ghostInfo ; 2282
LD     0 3          ; var lev ; 2283
LD     0 4          ; var state ; 2284
LD     0 7          ; var args ; 2285
CDR                  ; 2286
CAR                  ; 2287
LDC 0               ; local var space ; 2288
LDC 0               ; local var space ; 2289
LDF    1337         ;  @ghcstate_read_val ; 2290
AP     4             ; 2291
LD     0 4          ; var state ; 2292
LD     0 7          ; var args ; 2293
CDR                  ; 2294
CDR                  ; 2295
LDC 0               ; local var space ; 2296
LDC 0               ; local var space ; 2297
LDF    1337         ;  @ghcstate_read_val ; 2298
AP     4             ; 2299
CEQ                  ; 2300
SEL    2312 2328    ; IF? 120 ; 2301
LDC 0               ; local var space ; 2302
LDC 0               ; local var space ; 2303
LDF    2405         ;  @runGhost ; 2304
AP     7             ; 2305
JOIN                 ; 2306
LDC    12           ; ELSE: 119 ; 2307
LD     0 6          ; var opcode ; 2308
CEQ                  ; 2309
SEL    2330 2357    ; IF? 121 ; 2310
JOIN                 ; 2311
LD     0 4          ; THEN: 120 ; 2312
CAR                 ; generateTupleAccess total=3 pos=0 ; 2313
LD     0 4          ; var state ; 2314
CDR                 ; generateTupleAccess total=3 pos=1 ; 2315
CAR                  ; 2316
LDC    8            ; just constant from code ; 2317
LD     0 7          ; var args ; 2318
CAR                  ; 2319
LDF    1308         ;  @sorted_map_assoc ; 2320
AP     3             ; 2321
LD     0 4          ; var state ; 2322
CDR                 ; generateTupleAccess total=3 pos=2 ; 2323
CDR                  ; 2324
CONS                 ; 2325
CONS                 ; 2326
JOIN                 ; 2327
LD     0 4          ; ELSE: 120 ; 2328
JOIN                 ; 2329
LD     0 0          ; THEN: 121 ; 2330
LD     0 1          ; var world ; 2331
LD     0 2          ; var ghostInfo ; 2332
LD     0 3          ; var lev ; 2333
LD     0 4          ; var state ; 2334
LD     0 7          ; var args ; 2335
CDR                  ; 2336
CAR                  ; 2337
LDC 0               ; local var space ; 2338
LDC 0               ; local var space ; 2339
LDF    1337         ;  @ghcstate_read_val ; 2340
AP     4             ; 2341
LD     0 4          ; var state ; 2342
LD     0 7          ; var args ; 2343
CDR                  ; 2344
CDR                  ; 2345
LDC 0               ; local var space ; 2346
LDC 0               ; local var space ; 2347
LDF    1337         ;  @ghcstate_read_val ; 2348
AP     4             ; 2349
CGT                  ; 2350
SEL    2362 2378    ; IF? 122 ; 2351
LDC 0               ; local var space ; 2352
LDC 0               ; local var space ; 2353
LDF    2405         ;  @runGhost ; 2354
AP     7             ; 2355
JOIN                 ; 2356
LDC    13           ; ELSE: 121 ; 2357
LD     0 6          ; var opcode ; 2358
CEQ                  ; 2359
SEL    2380 2400    ; IF? 123 ; 2360
JOIN                 ; 2361
LD     0 4          ; THEN: 122 ; 2362
CAR                 ; generateTupleAccess total=3 pos=0 ; 2363
LD     0 4          ; var state ; 2364
CDR                 ; generateTupleAccess total=3 pos=1 ; 2365
CAR                  ; 2366
LDC    8            ; just constant from code ; 2367
LD     0 7          ; var args ; 2368
CAR                  ; 2369
LDF    1308         ;  @sorted_map_assoc ; 2370
AP     3             ; 2371
LD     0 4          ; var state ; 2372
CDR                 ; generateTupleAccess total=3 pos=2 ; 2373
CDR                  ; 2374
CONS                 ; 2375
CONS                 ; 2376
JOIN                 ; 2377
LD     0 4          ; ELSE: 122 ; 2378
JOIN                 ; 2379
LD     0 0          ; THEN: 123 ; 2380
LD     0 1          ; var world ; 2381
LD     0 2          ; var ghostInfo ; 2382
LD     0 3          ; var lev ; 2383
LD     0 1          ; var world ; 2384
LD     0 8          ; var inc_pc ; 2385
LD     0 2          ; var ghostInfo ; 2386
LD     0 7          ; var args ; 2387
CAR                  ; 2388
LD     0 7          ; var args ; 2389
CDR                  ; 2390
LDC 0               ; local var space ; 2391
LDC 0               ; local var space ; 2392
LDF    1579         ;  @processGhostInt ; 2393
AP     7             ; 2394
LDC 0               ; local var space ; 2395
LDC 0               ; local var space ; 2396
LDF    2405         ;  @runGhost ; 2397
AP     7             ; 2398
JOIN                 ; 2399
LD     0 4          ; ELSE: 123 ; 2400
CAR                 ; generateTupleAccess total=3 pos=0 ; 2401
CDR                 ; generateTupleAccess total=3 pos=2 ; 2402
CDR                  ; 2403
JOIN                 ; 2404
LD     0 4          ;  <== runGhost  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state] (as blk) ; 2405
CDR                 ; generateTupleAccess total=3 pos=1 ; 2406
CAR                  ; 2407
LDC    8            ; just constant from code ; 2408
LDC    0            ; just constant from code ; 2409
LDF    1292         ;  @sorted_map_get ; 2410
AP     3             ; 2411
ST     0 5           ; 2412
LD     0 0          ; var prog ; 2413
LD     0 5          ; var pc ; 2414
LDC    0            ; NULL literal ; 2415
LDF    1292         ;  @sorted_map_get ; 2416
AP     3             ; 2417
ST     0 6           ; 2418
LD     0 6          ; var step ; 2419
ATOM                 ; 2420
SEL    2423 2428    ; IF? 50 ; 2421
RTN                  ; 2422
LD     0 4          ; THEN: 50 ; 2423
CAR                 ; generateTupleAccess total=3 pos=0 ; 2424
CDR                 ; generateTupleAccess total=3 pos=2 ; 2425
CDR                  ; 2426
JOIN                 ; 2427
LD     0 3          ; ELSE: 50 ; 2428
LDC    1023         ; just constant from code ; 2429
CGT                  ; 2430
SEL    2433 2438    ; IF? 124 ; 2431
JOIN                 ; 2432
LD     0 4          ; THEN: 124 ; 2433
CAR                 ; generateTupleAccess total=3 pos=0 ; 2434
CDR                 ; generateTupleAccess total=3 pos=2 ; 2435
CDR                  ; 2436
JOIN                 ; 2437
LD     0 0          ; ELSE: 124 ; 2438
LD     0 1          ; var world ; 2439
LD     0 2          ; var ghostInfo ; 2440
LD     0 3          ; var lev ; 2441
LDC    1            ; just constant from code ; 2442
ADD                  ; 2443
LD     0 4          ; var state ; 2444
LD     0 6          ; var step ; 2445
LDC 0               ; local var space ; 2446
LDC 0               ; local var space ; 2447
LDC 0               ; local var space ; 2448
LDF    1893         ;  @runGhostStep ; 2449
AP     9             ; 2450
JOIN                 ; 2451
LD     0 1          ;  <== getGhostDirection  [WorldState world, GhostInfo ghostInfo] (as blk) ; 2452
CDR                 ; generateTupleAccess total=3 pos=1 ; 2453
CAR                  ; 2454
LDC    0            ; just constant from code ; 2455
LDC    0            ; NULL literal ; 2456
LDC    0            ; just constant from code ; 2457
CONS                 ; 2458
CONS                 ; 2459
LDF    9647         ;  @lambda_1006 ; 2460
LDF    386          ;  @fold0 ; 2461
AP     3             ; 2462
ST     0 2           ; 2463
LD     0 0          ; var world ; 2464
CDR                 ; generateTupleAccess total=4 pos=2 ; 2465
CDR                  ; 2466
CAR                  ; 2467
CAR                  ; 2468
ST     0 3           ; 2469
LD     0 2          ; var prog ; 2470
CDR                 ; generateTupleAccess total=2 pos=1 ; 2471
LD     0 0          ; var world ; 2472
LD     0 1          ; var ghostInfo ; 2473
LDC    0            ; just constant from code ; 2474
LD     0 3          ; var ghostState ; 2475
LDC    0            ; NULL literal ; 2476
LDC    0            ; just constant from code ; 2477
CONS                 ; 2478
LDC    0            ; NULL literal ; 2479
LDC    0            ; just constant from code ; 2480
CONS                 ; 2481
CONS                 ; 2482
CONS                 ; 2483
LDC 0               ; local var space ; 2484
LDC 0               ; local var space ; 2485
LDF    2405         ;  @runGhost ; 2486
AP     7             ; 2487
RTN                  ; 2488
LDC    1000001      ;  <== entryCPUEmulator  [] (as blk) ; 2489
DBUG                 ; 2490
LDF    8495         ;  @sample_map ; 2491
AP     0             ; 2492
ST     0 0           ; 2493
LDC    1000002      ; just constant from code ; 2494
DBUG                 ; 2495
LD     0 0          ; var ws ; 2496
DBUG                 ; 2497
BRK                  ; 2498
LD     0 0          ; var ws ; 2499
LDC    0            ; NULL literal ; 2500
LDC 0               ; local var space ; 2501
LDC 0               ; local var space ; 2502
LDC 0               ; local var space ; 2503
LDF    2525         ;  @entryFactual ; 2504
AP     5             ; 2505
ST     0 1           ; 2506
LDC    1000003      ; just constant from code ; 2507
DBUG                 ; 2508
LD     0 0          ; var ws ; 2509
DBUG                 ; 2510
BRK                  ; 2511
LD     0 1          ; var initialDone ; 2512
CDR                 ; generateTupleAccess total=2 pos=1 ; 2513
ST     0 2           ; 2514
LD     0 1          ; var initialDone ; 2515
CAR                 ; generateTupleAccess total=2 pos=0 ; 2516
ST     0 3           ; 2517
LD     0 3          ; var a ; 2518
LD     0 0          ; var ws ; 2519
LD     0 2          ; var b ; 2520
AP     2             ; 2521
ST     0 4           ; 2522
LDC    0            ; NULL literal ; 2523
RTN                  ; 2524
LD     0 0          ;  <== entryFactual  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 2525
LD     0 1          ; var ghostSpecs ; 2526
LDC 0               ; local var space ; 2527
LDF    3025         ;  @createInitialState ; 2528
AP     3             ; 2529
ST     0 2           ; 2530
LD     0 2          ; var initialState ; 2531
CAR                 ; generateTupleAccess total=4 pos=0 ; 2532
CDR                 ; generateTupleAccess total=6 pos=5 ; 2533
CDR                  ; 2534
CDR                  ; 2535
CDR                  ; 2536
CDR                  ; 2537
LDC    1            ; just constant from code ; 2538
LDF    423          ;  @list_item ; 2539
AP     2             ; 2540
ST     0 3           ; 2541
LDC    0            ; just constant from code ; 2542
LDC    100          ; Named Const = VMExtras.GET_READER ; 2543
LDC    1            ; just constant from code ; 2544
LD     0 3          ; var newRowAccessor ; 2545
AP     2             ; 2546
AP     1             ; 2547
ST     0 4           ; 2548
LD     0 2          ; var initialState ; 2549
LDF    9790         ;  @lambda_1017 ; 2550
CONS                 ; 2551
RTN                  ; 2552
LDF    3618         ;  <== test01  [] (as blk), ALSO: @array_256 ; 2553
AP     0             ; 2554
ST     0 0           ; 2555
LDC    100          ; Named Const = VMExtras.GET_READER ; 2556
LDC    22           ; just constant from code ; 2557
LD     0 0          ; var accessor ; 2558
AP     2             ; 2559
ST     0 1           ; 2560
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 2561
LDC    22           ; just constant from code ; 2562
LD     0 0          ; var accessor ; 2563
AP     2             ; 2564
ST     0 2           ; 2565
LDC    77           ; just constant from code ; 2566
LD     0 2          ; var writer101 ; 2567
AP     1             ; 2568
ST     0 3           ; 2569
LDC    0            ; just constant from code ; 2570
LD     0 1          ; var reader101 ; 2571
AP     1             ; 2572
ST     0 4           ; 2573
LDC    0            ; just constant from code ; 2574
RTN                  ; 2575
LD     0 0          ;  <== collectEdgePills  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 2576
CDR                 ; generateTupleAccess total=7 pos=3 ; 2577
CDR                  ; 2578
CDR                  ; 2579
CAR                  ; 2580
LDF    9807         ;  @lambda_1018 ; 2581
LDF    349          ;  @dropWhile ; 2582
AP     2             ; 2583
ST     0 3           ; 2584
LD     0 3          ; var pathRemaining ; 2585
LDF    9830         ;  @lambda_1019 ; 2586
LDF    537          ;  @filter ; 2587
AP     2             ; 2588
ST     0 4           ; 2589
LD     0 4          ; var rv ; 2590
RTN                  ; 2591
LD     0 0          ;  <== collectEdgeGhosts  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 2592
CDR                 ; generateTupleAccess total=7 pos=2 ; 2593
CDR                  ; 2594
CAR                  ; 2595
LDF    9842         ;  @lambda_1020 ; 2596
LDF    349          ;  @dropWhile ; 2597
AP     2             ; 2598
ST     0 3           ; 2599
LD     0 3          ; var pathOnEdge ; 2600
LDF    9863         ;  @lambda_1021 ; 2601
LDF    537          ;  @filter ; 2602
AP     2             ; 2603
RTN                  ; 2604
LD     0 0          ;  <== collectAnyEdgePills  [ParsedEdge edge, ListCons<ListCons<Integer>> map] (as blk) ; 2605
CDR                 ; generateTupleAccess total=7 pos=3 ; 2606
CDR                  ; 2607
CDR                  ; 2608
CAR                  ; 2609
ST     0 2           ; 2610
LD     0 2          ; var edgeAccess ; 2611
LDF    9878         ;  @lambda_1022 ; 2612
LDF    537          ;  @filter ; 2613
AP     2             ; 2614
ST     0 3           ; 2615
LD     0 3          ; var rv ; 2616
RTN                  ; 2617
LD     0 0          ;  <== countAnyEdgePills  [ParsedEdge edge] (as blk) ; 2618
CDR                 ; generateTupleAccess total=7 pos=3 ; 2619
CDR                  ; 2620
CDR                  ; 2621
CAR                  ; 2622
ST     0 1           ; 2623
LD     0 1          ; var edgeAccess ; 2624
LDC    0            ; just constant from code ; 2625
LDF    9890         ;  @lambda_1023 ; 2626
LDF    386          ;  @fold0 ; 2627
AP     3             ; 2628
ST     0 2           ; 2629
LD     0 2          ; var rv ; 2630
RTN                  ; 2631
LD     0 0          ;  <== countMyEdgePills  [ParsedEdge edge, Point start] (as blk) ; 2632
CDR                 ; generateTupleAccess total=7 pos=3 ; 2633
CDR                  ; 2634
CDR                  ; 2635
CAR                  ; 2636
LDF    9904         ;  @lambda_1024 ; 2637
LDF    349          ;  @dropWhile ; 2638
AP     2             ; 2639
ST     0 2           ; 2640
LD     0 2          ; var pathRemaining ; 2641
LDC    0            ; just constant from code ; 2642
LDF    9927         ;  @lambda_1025 ; 2643
LDF    386          ;  @fold0 ; 2644
AP     3             ; 2645
ST     0 3           ; 2646
LD     0 3          ; var rv ; 2647
RTN                  ; 2648
LD     0 1          ;  <== performMove  [AIState aistate, WorldState worldState] (as blk) ; 2649
CDR                 ; generateTupleAccess total=4 pos=1 ; 2650
CAR                  ; 2651
CDR                 ; generateTupleAccess total=5 pos=1 ; 2652
CAR                  ; 2653
ST     0 2           ; 2654
LD     0 0          ; var aistate ; 2655
LD     0 2          ; var location ; 2656
LDF    3376         ;  @findEdgesForPoint ; 2657
AP     2             ; 2658
ST     0 3           ; 2659
LD     0 3          ; var edgesForPoint ; 2660
LD     0 0          ; var aistate ; 2661
LD     0 1          ; var worldState ; 2662
LDC 0               ; local var space ; 2663
LDC 0               ; local var space ; 2664
LDC 0               ; local var space ; 2665
LDC 0               ; local var space ; 2666
LDC 0               ; local var space ; 2667
LDF    2980         ;  @findBestDistantEdge ; 2668
AP     8             ; 2669
ST     0 7           ; 2670
LD     0 7          ; var startEdge ; 2671
CDR                 ; generateTupleAccess total=7 pos=2 ; 2672
CDR                  ; 2673
CAR                  ; 2674
LDF    9988         ;  @lambda_1031 ; 2675
LDF    349          ;  @dropWhile ; 2676
AP     2             ; 2677
ST     0 8           ; 2678
LD     0 8          ; var pathToWalk ; 2679
LDF    532          ;  @length ; 2680
AP     1             ; 2681
LDC    2            ; just constant from code ; 2682
CGTE                 ; 2683
SEL    2725 2741     ; 2684
LD     0 4          ; var retval ; 2685
CDR                 ; generateTupleAccess total=2 pos=1 ; 2686
LDC    3            ; Named Const = Direction.LEFT ; 2687
CEQ                  ; 2688
SEL    2746 2751    ; IF? 51 ; 2689
ST     0 9           ; 2690
LD     0 4          ; var retval ; 2691
CDR                 ; generateTupleAccess total=2 pos=1 ; 2692
LDC    0            ; Named Const = Direction.UP ; 2693
CEQ                  ; 2694
SEL    2757 2762    ; IF? 52 ; 2695
ST     0 10          ; 2696
LD     0 4          ; var retval ; 2697
CAR                 ; generateTupleAccess total=2 pos=0 ; 2698
ST     0 11          ; 2699
LD     0 11         ; var a ; 2700
CAR                 ; generateTupleAccess total=4 pos=0 ; 2701
CDR                 ; generateTupleAccess total=6 pos=5 ; 2702
CDR                  ; 2703
CDR                  ; 2704
CDR                  ; 2705
CDR                  ; 2706
LD     0 10         ; var ny ; 2707
LDF    423          ;  @list_item ; 2708
AP     2             ; 2709
ST     0 12          ; 2710
LDC    0            ; just constant from code ; 2711
LDC    100          ; Named Const = VMExtras.GET_READER ; 2712
LD     0 9          ; var nx ; 2713
LD     0 12         ; var newRowAccessor ; 2714
AP     2             ; 2715
AP     1             ; 2716
ST     0 13          ; 2717
LD     0 13         ; var oldValue ; 2718
LDC    2            ; Named Const = CT.PILL ; 2719
CEQ                  ; 2720
SEL    2768 2775    ; IF? 53 ; 2721
ST     0 13          ; 2722
LD     0 4          ; var retval ; 2723
RTN                  ; 2724
LD     0 8          ; branch@2725 ; 2725
CDR                  ; 2726
CAR                  ; 2727
ST     0 5           ; 2728
LD     0 5          ; var newLocation ; 2729
CAR                 ; generateTupleAccess total=2 pos=0 ; 2730
LD     0 2          ; var location ; 2731
CAR                 ; generateTupleAccess total=2 pos=0 ; 2732
CGT                  ; 2733
SEL    2777 2779    ; IF? 125 ; 2734
ST     0 6           ; 2735
LD     0 0          ; var aistate ; 2736
LD     0 6          ; var direction ; 2737
CONS                 ; 2738
ST     0 4           ; 2739
JOIN                 ; 2740
LD     0 0          ; branch@2741 ; 2741
LDC    0            ; Named Const = Direction.UP ; 2742
CONS                 ; 2743
ST     0 4           ; 2744
JOIN                 ; 2745
LD     0 2          ; THEN: 51 ; 2746
CAR                 ; generateTupleAccess total=2 pos=0 ; 2747
LDC    1            ; just constant from code ; 2748
SUB                  ; 2749
JOIN                 ; 2750
LD     0 4          ; ELSE: 51 ; 2751
CDR                 ; generateTupleAccess total=2 pos=1 ; 2752
LDC    1            ; Named Const = Direction.RIGHT ; 2753
CEQ                  ; 2754
SEL    2786 2791    ; IF? 126 ; 2755
JOIN                 ; 2756
LD     0 2          ; THEN: 52 ; 2757
CDR                 ; generateTupleAccess total=2 pos=1 ; 2758
LDC    1            ; just constant from code ; 2759
SUB                  ; 2760
JOIN                 ; 2761
LD     0 4          ; ELSE: 52 ; 2762
CDR                 ; generateTupleAccess total=2 pos=1 ; 2763
LDC    2            ; Named Const = Direction.DOWN ; 2764
CEQ                  ; 2765
SEL    2794 2799    ; IF? 127 ; 2766
JOIN                 ; 2767
LDC    1            ; THEN: 53 ; 2768
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 2769
LD     0 9          ; var nx ; 2770
LD     0 12         ; var newRowAccessor ; 2771
AP     2             ; 2772
AP     1             ; 2773
JOIN                 ; 2774
LD     0 13         ; ELSE: 53 ; 2775
JOIN                 ; 2776
LDC    1            ; THEN: 125 ; 2777
JOIN                 ; 2778
LD     0 2          ; ELSE: 125 ; 2779
CAR                 ; generateTupleAccess total=2 pos=0 ; 2780
LD     0 5          ; var newLocation ; 2781
CAR                 ; generateTupleAccess total=2 pos=0 ; 2782
CGT                  ; 2783
SEL    2802 2804    ; IF? 128 ; 2784
JOIN                 ; 2785
LD     0 2          ; THEN: 126 ; 2786
CAR                 ; generateTupleAccess total=2 pos=0 ; 2787
LDC    1            ; just constant from code ; 2788
ADD                  ; 2789
JOIN                 ; 2790
LD     0 2          ; ELSE: 126 ; 2791
CAR                 ; generateTupleAccess total=2 pos=0 ; 2792
JOIN                 ; 2793
LD     0 2          ; THEN: 127 ; 2794
CDR                 ; generateTupleAccess total=2 pos=1 ; 2795
LDC    1            ; just constant from code ; 2796
ADD                  ; 2797
JOIN                 ; 2798
LD     0 2          ; ELSE: 127 ; 2799
CDR                 ; generateTupleAccess total=2 pos=1 ; 2800
JOIN                 ; 2801
LDC    3            ; THEN: 128 ; 2802
JOIN                 ; 2803
LD     0 2          ; ELSE: 128 ; 2804
CDR                 ; generateTupleAccess total=2 pos=1 ; 2805
LD     0 5          ; var newLocation ; 2806
CDR                 ; generateTupleAccess total=2 pos=1 ; 2807
CGT                  ; 2808
SEL    2811 2813    ; IF? 129 ; 2809
JOIN                 ; 2810
LDC    0            ; THEN: 129 ; 2811
JOIN                 ; 2812
LDC    2            ; ELSE: 129 ; 2813
JOIN                 ; 2814
LD     0 2          ;  <== waveFromEdgeToNearestEdges  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 2815
LDF    415          ;  @queue_isempty ; 2816
AP     1             ; 2817
SEL    2821 2824     ; 2818
LD     0 6          ; var retval ; 2819
RTN                  ; 2820
LD     0 4          ; branch@2821 ; 2821
ST     0 6           ; 2822
JOIN                 ; 2823
LD     0 0          ; branch@2824 ; 2824
LD     0 1          ; var worldState ; 2825
LD     0 2          ; var edgeQueue ; 2826
LD     0 3          ; var visited ; 2827
LD     0 4          ; var acc ; 2828
LD     0 5          ; var edgesWithDotsSoFar ; 2829
LDC 0               ; local var space ; 2830
LDC 0               ; local var space ; 2831
LDC 0               ; local var space ; 2832
LDC 0               ; local var space ; 2833
LDC 0               ; local var space ; 2834
LDC 0               ; local var space ; 2835
LDC 0               ; local var space ; 2836
LDC 0               ; local var space ; 2837
LDC 0               ; local var space ; 2838
LDC 0               ; local var space ; 2839
LDF    2844         ;  @waveFromEdgeToNearestEdges0 ; 2840
AP     16            ; 2841
ST     0 6           ; 2842
JOIN                 ; 2843
LD     0 2          ;  <== waveFromEdgeToNearestEdges0  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 2844
LDC 0               ; local var space ; 2845
LDF    492          ;  @queue_dequeue ; 2846
AP     2             ; 2847
ST     0 7           ; 2848
LD     0 7          ; var reduced ; 2849
CAR                 ; generateTupleAccess total=2 pos=0 ; 2850
ST     0 8           ; 2851
LD     0 0          ; var aistate ; 2852
CAR                 ; generateTupleAccess total=4 pos=0 ; 2853
CDR                 ; generateTupleAccess total=6 pos=2 ; 2854
CDR                  ; 2855
CAR                  ; 2856
LD     0 8          ; var lookingEdge ; 2857
LDF    2945         ;  @findFollowingEdges ; 2858
AP     2             ; 2859
ST     0 9           ; 2860
LD     0 9          ; var following ; 2861
LDF    10018        ;  @lambda_1033 ; 2862
LDF    537          ;  @filter ; 2863
AP     2             ; 2864
ST     0 9           ; 2865
LD     0 9          ; var following ; 2866
LDF    10031        ;  @lambda_1034 ; 2867
LDF    537          ;  @filter ; 2868
AP     2             ; 2869
ST     0 10          ; 2870
LD     0 3          ; var visited ; 2871
LD     0 9          ; var following ; 2872
LDF    10048        ;  @lambda_1035 ; 2873
LDF    69           ;  @map ; 2874
AP     2             ; 2875
LDF    1317         ;  @sorted_map_assoc_all ; 2876
AP     2             ; 2877
ST     0 11          ; 2878
LD     0 11         ; var nvisited ; 2879
LD     0 9          ; var following ; 2880
LDF    10058        ;  @lambda_1036 ; 2881
LDF    69           ;  @map ; 2882
AP     2             ; 2883
LDF    1317         ;  @sorted_map_assoc_all ; 2884
AP     2             ; 2885
ST     0 11          ; 2886
LD     0 9          ; var following ; 2887
LDF    10068        ;  @lambda_1037 ; 2888
LDF    69           ;  @map ; 2889
AP     2             ; 2890
ST     0 12          ; 2891
LD     0 12         ; var newRoutes ; 2892
LD     0 7          ; var reduced ; 2893
CDR                 ; generateTupleAccess total=2 pos=1 ; 2894
LDF    10072        ;  @lambda_1038 ; 2895
LDF    386          ;  @fold0 ; 2896
AP     3             ; 2897
ST     0 13          ; 2898
LD     0 12         ; var newRoutes ; 2899
LD     0 4          ; var acc ; 2900
LDF    184          ;  @concat2_set ; 2901
AP     2             ; 2902
ST     0 14          ; 2903
LD     0 5          ; var edgesWithDotsSoFar ; 2904
LDC    3            ; just constant from code ; 2905
CGT                  ; 2906
LD     0 4          ; var acc ; 2907
LDF    532          ;  @length ; 2908
AP     1             ; 2909
LDC    15           ; just constant from code ; 2910
CGT                  ; 2911
MUL                  ; 2912
LD     0 14         ; var newAcc ; 2913
CAR                  ; 2914
LDF    532          ;  @length ; 2915
AP     1             ; 2916
LD     0 4          ; var acc ; 2917
CAR                  ; 2918
LDF    532          ;  @length ; 2919
AP     1             ; 2920
CGT                  ; 2921
MUL                  ; 2922
ST     0 15          ; 2923
LD     0 15         ; var stopCondition ; 2924
SEL    2929 2931    ; IF? 54 ; 2925
ST     0 6           ; 2926
LD     0 6          ; var retval ; 2927
RTN                  ; 2928
LD     0 4          ; THEN: 54 ; 2929
JOIN                 ; 2930
LD     0 0          ; ELSE: 54 ; 2931
LD     0 1          ; var worldState ; 2932
LD     0 13         ; var newqq ; 2933
LD     0 11         ; var nvisited ; 2934
LD     0 14         ; var newAcc ; 2935
LD     0 5          ; var edgesWithDotsSoFar ; 2936
LD     0 10         ; var withDots ; 2937
LDF    532          ;  @length ; 2938
AP     1             ; 2939
ADD                  ; 2940
LDC 0               ; local var space ; 2941
LDF    2815         ;  @waveFromEdgeToNearestEdges ; 2942
AP     7             ; 2943
JOIN                 ; 2944
LD     0 0          ;  <== findFollowingEdges  [ListCons<ParsedEdge> parsedEdges, ListCons<ParsedEdge> lookingEdge] (as blk) ; 2945
LDF    10009        ;  @lambda_1032 ; 2946
LDF    537          ;  @filter ; 2947
AP     2             ; 2948
RTN                  ; 2949
LD     0 0          ;  <== pointEquals  [Point a, Point b] (as blk) ; 2950
CAR                 ; generateTupleAccess total=2 pos=0 ; 2951
LD     0 1          ; var b ; 2952
CAR                 ; generateTupleAccess total=2 pos=0 ; 2953
CEQ                  ; 2954
LD     0 0          ; var a ; 2955
CDR                 ; generateTupleAccess total=2 pos=1 ; 2956
LD     0 1          ; var b ; 2957
CDR                 ; generateTupleAccess total=2 pos=1 ; 2958
CEQ                  ; 2959
MUL                  ; 2960
SEL    2963 2965    ; IF? 55 ; 2961
RTN                  ; 2962
LDC    1            ; THEN: 55 ; 2963
JOIN                 ; 2964
LDC    0            ; ELSE: 55 ; 2965
JOIN                 ; 2966
LD     0 0          ;  <== endingPointOfEdgeRoute  [ListCons<ParsedEdge> lookingEdge] (as blk) ; 2967
CAR                  ; 2968
ST     0 1           ; 2969
LD     0 1          ; var lastEdge ; 2970
CDR                 ; generateTupleAccess total=7 pos=1 ; 2971
CAR                  ; 2972
RTN                  ; 2973
LD     0 0          ;  <== countRoutePills  [ListCons<ParsedEdge> route] (as blk) ; 2974
LDC    0            ; just constant from code ; 2975
LDF    10077        ;  @lambda_1039 ; 2976
LDF    386          ;  @fold0 ; 2977
AP     3             ; 2978
RTN                  ; 2979
LDF    403          ;  <== findBestDistantEdge  [ListCons<ParsedEdge> currentEdges, AIState aistate, WorldState worldState] (as blk), ALSO: @queue_new ; 2980
AP     0             ; 2981
ST     0 3           ; 2982
LD     0 0          ; var currentEdges ; 2983
LD     0 3          ; var q ; 2984
LDF    9944         ;  @lambda_1027 ; 2985
LDF    386          ;  @fold0 ; 2986
AP     3             ; 2987
ST     0 3           ; 2988
LD     0 1          ; var aistate ; 2989
LD     0 2          ; var worldState ; 2990
LD     0 3          ; var q ; 2991
LDC    0            ; NULL literal ; 2992
LDC    0            ; just constant from code ; 2993
CONS                 ; 2994
LD     0 0          ; var currentEdges ; 2995
LDF    9951         ;  @lambda_1028 ; 2996
LDF    69           ;  @map ; 2997
AP     2             ; 2998
LDF    1317         ;  @sorted_map_assoc_all ; 2999
AP     2             ; 3000
LDC    0            ; NULL literal ; 3001
LDC    0            ; just constant from code ; 3002
LDC 0               ; local var space ; 3003
LDF    2815         ;  @waveFromEdgeToNearestEdges ; 3004
AP     7             ; 3005
ST     0 4           ; 3006
LD     0 4          ; var dests ; 3007
LDF    9961         ;  @lambda_1029 ; 3008
LDF    69           ;  @map ; 3009
AP     2             ; 3010
ST     0 5           ; 3011
LD     0 5          ; var scores ; 3012
LDF    9985         ;  @lambda_1030 ; 3013
LDF    335          ;  @maximum_by ; 3014
AP     2             ; 3015
ST     0 6           ; 3016
LD     0 6          ; var winningRoute ; 3017
CAR                 ; generateTupleAccess total=2 pos=0 ; 3018
LDF    299          ;  @reverse ; 3019
AP     1             ; 3020
CAR                  ; 3021
ST     0 7           ; 3022
LD     0 7          ; var myStart ; 3023
RTN                  ; 3024
LD     0 0          ;  <== createInitialState  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 3025
CDR                 ; generateTupleAccess total=4 pos=2 ; 3026
CDR                  ; 3027
CAR                  ; 3028
LDF    532          ;  @length ; 3029
AP     1             ; 3030
LDF    777          ;  @range_n ; 3031
AP     1             ; 3032
ST     0 2           ; 3033
LD     0 0          ; var ws ; 3034
CAR                 ; generateTupleAccess total=4 pos=0 ; 3035
LDF    3523         ;  @parseStaticMap ; 3036
AP     1             ; 3037
LDC    0            ; just constant from code ; 3038
LDC    0            ; just constant from code ; 3039
LDF    9782         ;  @lambda_1016 ; 3040
LD     0 0          ; var ws ; 3041
CDR                 ; generateTupleAccess total=4 pos=2 ; 3042
CDR                  ; 3043
CAR                  ; 3044
LD     0 1          ; var ghostSpecs ; 3045
LD     0 2          ; var ghostNumbers ; 3046
LDF    687          ;  @zip3_with ; 3047
AP     4             ; 3048
CONS                 ; 3049
CONS                 ; 3050
CONS                 ; 3051
RTN                  ; 3052
LD     0 0          ;  <== isWall  [int test] (as blk) ; 3053
LDC    0            ; Named Const = CT.WALL ; 3054
CEQ                  ; 3055
SEL    3058 3060    ; IF? 56 ; 3056
RTN                  ; 3057
LDC    1            ; THEN: 56 ; 3058
JOIN                 ; 3059
LDC    0            ; ELSE: 56 ; 3060
JOIN                 ; 3061
LDC    77           ;  <== isWalkable  [int test] (as blk) ; 3062
ST     0 1           ; 3063
LD     0 0          ; var test ; 3064
LDC    0            ; Named Const = CT.WALL ; 3065
CEQ                  ; 3066
SEL    3070 3073     ; 3067
LD     0 1          ; var retval ; 3068
RTN                  ; 3069
LDC    0            ; branch@3070 ; 3070
ST     0 1           ; 3071
JOIN                 ; 3072
LDC    1            ; branch@3073 ; 3073
ST     0 1           ; 3074
JOIN                 ; 3075
LD     0 0          ;  <== isWalkable2  [ListCons<ListCons<Integer>> map, Point p] (as blk) ; 3076
LD     0 1          ; var p ; 3077
CDR                 ; generateTupleAccess total=2 pos=1 ; 3078
LD     0 1          ; var p ; 3079
CAR                 ; generateTupleAccess total=2 pos=0 ; 3080
LDF    3597         ;  @getMapItem ; 3081
AP     3             ; 3082
LDC 0               ; local var space ; 3083
LDF    3062         ;  @isWalkable ; 3084
AP     2             ; 3085
RTN                  ; 3086
LD     0 0          ;  <== isWalkable3  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 3087
LD     0 2          ; var y ; 3088
LD     0 1          ; var x ; 3089
LDF    3597         ;  @getMapItem ; 3090
AP     3             ; 3091
LDC 0               ; local var space ; 3092
LDF    3062         ;  @isWalkable ; 3093
AP     2             ; 3094
RTN                  ; 3095
LD     0 0          ;  <== isJunction  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 3096
LD     0 2          ; var y ; 3097
LDC    1            ; just constant from code ; 3098
SUB                  ; 3099
LD     0 1          ; var x ; 3100
LDF    3597         ;  @getMapItem ; 3101
AP     3             ; 3102
LDC 0               ; local var space ; 3103
LDF    3062         ;  @isWalkable ; 3104
AP     2             ; 3105
ST     0 3           ; 3106
LD     0 0          ; var map ; 3107
LD     0 2          ; var y ; 3108
LDC    1            ; just constant from code ; 3109
ADD                  ; 3110
LD     0 1          ; var x ; 3111
LDF    3597         ;  @getMapItem ; 3112
AP     3             ; 3113
LDC 0               ; local var space ; 3114
LDF    3062         ;  @isWalkable ; 3115
AP     2             ; 3116
ST     0 4           ; 3117
LD     0 0          ; var map ; 3118
LD     0 2          ; var y ; 3119
LD     0 1          ; var x ; 3120
LDC    1            ; just constant from code ; 3121
SUB                  ; 3122
LDF    3597         ;  @getMapItem ; 3123
AP     3             ; 3124
LDC 0               ; local var space ; 3125
LDF    3062         ;  @isWalkable ; 3126
AP     2             ; 3127
ST     0 5           ; 3128
LD     0 0          ; var map ; 3129
LD     0 2          ; var y ; 3130
LD     0 1          ; var x ; 3131
LDC    1            ; just constant from code ; 3132
ADD                  ; 3133
LDF    3597         ;  @getMapItem ; 3134
AP     3             ; 3135
LDC 0               ; local var space ; 3136
LDF    3062         ;  @isWalkable ; 3137
AP     2             ; 3138
ST     0 6           ; 3139
LD     0 3          ; var a1 ; 3140
LD     0 4          ; var a2 ; 3141
ADD                  ; 3142
LD     0 5          ; var a3 ; 3143
ADD                  ; 3144
LD     0 6          ; var a4 ; 3145
ADD                  ; 3146
LDC    2            ; just constant from code ; 3147
CGT                  ; 3148
SEL    3151 3153    ; IF? 58 ; 3149
RTN                  ; 3150
LDC    1            ; THEN: 58 ; 3151
JOIN                 ; 3152
LDC    0            ; ELSE: 58 ; 3153
JOIN                 ; 3154
LD     0 0          ;  <== findNeighbourJunctions  [ListCons<ListCons<Integer>> map, Point somePoint, SortedMap<Point> allJunctions, ListCons<Point> allJunctions2, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 3155
LDF    403          ;  @queue_new ; 3156
AP     0             ; 3157
LD     0 1          ; var somePoint ; 3158
LDC    0            ; NULL literal ; 3159
CONS                 ; 3160
LDF    407          ;  @queue_enqueue ; 3161
AP     2             ; 3162
LD     0 2          ; var allJunctions ; 3163
LD     0 3          ; var allJunctions2 ; 3164
LDC    0            ; NULL literal ; 3165
LDC    0            ; just constant from code ; 3166
CONS                 ; 3167
LD     0 1          ; var somePoint ; 3168
LDF    3224         ;  @getPointKey ; 3169
AP     1             ; 3170
LD     0 1          ; var somePoint ; 3171
LDF    1308         ;  @sorted_map_assoc ; 3172
AP     3             ; 3173
LDC    0            ; NULL literal ; 3174
LDC 0               ; local var space ; 3175
LDF    3192         ;  @waveFromPointToNearestJunction ; 3176
AP     7             ; 3177
ST     0 5           ; 3178
LD     0 5          ; var allNeighbourJunctionsPaths ; 3179
LDF    10085        ;  @lambda_1040 ; 3180
LDF    69           ;  @map ; 3181
AP     2             ; 3182
RTN                  ; 3183
LD     0 0          ;  <== makeEdgeAccess  [ListCons<Point> p, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 3184
LDF    10109        ;  @lambda_1041 ; 3185
LDF    69           ;  @map ; 3186
AP     2             ; 3187
LD     0 0          ; var p ; 3188
LDF    724          ;  @zip ; 3189
AP     2             ; 3190
RTN                  ; 3191
LD     0 1          ;  <== waveFromPointToNearestJunction  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 3192
LDF    415          ;  @queue_isempty ; 3193
AP     1             ; 3194
SEL    3198 3201     ; 3195
LD     0 6          ; var retval ; 3196
RTN                  ; 3197
LD     0 5          ; branch@3198 ; 3198
ST     0 6           ; 3199
JOIN                 ; 3200
LD     0 0          ; branch@3201 ; 3201
LD     0 1          ; var pointQueue ; 3202
LD     0 2          ; var destinations ; 3203
LD     0 3          ; var destinations2 ; 3204
LD     0 4          ; var visited ; 3205
LD     0 5          ; var acc ; 3206
LDC 0               ; local var space ; 3207
LDC 0               ; local var space ; 3208
LDC 0               ; local var space ; 3209
LDC 0               ; local var space ; 3210
LDC 0               ; local var space ; 3211
LDC 0               ; local var space ; 3212
LDC 0               ; local var space ; 3213
LDC 0               ; local var space ; 3214
LDC 0               ; local var space ; 3215
LDC 0               ; local var space ; 3216
LDC 0               ; local var space ; 3217
LDC 0               ; local var space ; 3218
LDC 0               ; local var space ; 3219
LDF    3237         ;  @waveFromPointToNearestJunction0 ; 3220
AP     19            ; 3221
ST     0 6           ; 3222
JOIN                 ; 3223
LD     0 0          ;  <== getPointKey  [Point pt] (as blk) ; 3224
CAR                 ; generateTupleAccess total=2 pos=0 ; 3225
LDC    300          ; just constant from code ; 3226
MUL                  ; 3227
LD     0 0          ; var pt ; 3228
CDR                 ; generateTupleAccess total=2 pos=1 ; 3229
ADD                  ; 3230
RTN                  ; 3231
LD     0 0          ;  <== addPointKeyAll  [ListCons<Point> in] (as blk) ; 3232
LDF    9694         ;  @lambda_1012 ; 3233
LDF    69           ;  @map ; 3234
AP     2             ; 3235
RTN                  ; 3236
LD     0 1          ;  <== waveFromPointToNearestJunction0  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 3237
LDC 0               ; local var space ; 3238
LDF    492          ;  @queue_dequeue ; 3239
AP     2             ; 3240
ST     0 7           ; 3241
LD     0 7          ; var emptier ; 3242
CAR                 ; generateTupleAccess total=2 pos=0 ; 3243
ST     0 8           ; 3244
LD     0 8          ; var thisRoute ; 3245
CAR                  ; 3246
ST     0 9           ; 3247
LD     0 9          ; var weAreHere ; 3248
CAR                 ; generateTupleAccess total=2 pos=0 ; 3249
LDC    1            ; just constant from code ; 3250
ADD                  ; 3251
LD     0 9          ; var weAreHere ; 3252
CDR                 ; generateTupleAccess total=2 pos=1 ; 3253
CONS                 ; 3254
LD     0 9          ; var weAreHere ; 3255
CAR                 ; generateTupleAccess total=2 pos=0 ; 3256
LDC    1            ; just constant from code ; 3257
SUB                  ; 3258
LD     0 9          ; var weAreHere ; 3259
CDR                 ; generateTupleAccess total=2 pos=1 ; 3260
CONS                 ; 3261
LD     0 9          ; var weAreHere ; 3262
CAR                 ; generateTupleAccess total=2 pos=0 ; 3263
LD     0 9          ; var weAreHere ; 3264
CDR                 ; generateTupleAccess total=2 pos=1 ; 3265
LDC    1            ; just constant from code ; 3266
ADD                  ; 3267
CONS                 ; 3268
LD     0 9          ; var weAreHere ; 3269
CAR                 ; generateTupleAccess total=2 pos=0 ; 3270
LD     0 9          ; var weAreHere ; 3271
CDR                 ; generateTupleAccess total=2 pos=1 ; 3272
LDC    1            ; just constant from code ; 3273
SUB                  ; 3274
CONS                 ; 3275
LDC    0            ; NULL literal ; 3276
CONS                 ; 3277
CONS                 ; 3278
CONS                 ; 3279
CONS                 ; 3280
LDF    3232         ;  @addPointKeyAll ; 3281
AP     1             ; 3282
ST     0 10          ; 3283
LD     0 10         ; var possibleDestinations ; 3284
LDF    10119        ;  @lambda_1042 ; 3285
LDF    537          ;  @filter ; 3286
AP     2             ; 3287
ST     0 11          ; 3288
LD     0 11         ; var exits ; 3289
LDF    10133        ;  @lambda_1043 ; 3290
LDF    537          ;  @filter ; 3291
AP     2             ; 3292
ST     0 12          ; 3293
LD     0 11         ; var exits ; 3294
LDF    10139        ;  @lambda_1044 ; 3295
LDF    537          ;  @filter ; 3296
AP     2             ; 3297
ST     0 13          ; 3298
LDC    0            ; NULL literal ; 3299
LDC    1            ; just constant from code ; 3300
CONS                 ; 3301
LD     0 12         ; var arrivedsList ; 3302
LDF    1317         ;  @sorted_map_assoc_all ; 3303
AP     2             ; 3304
ST     0 14          ; 3305
LD     0 11         ; var exits ; 3306
LDF    10144        ;  @lambda_1045 ; 3307
LDF    537          ;  @filter ; 3308
AP     2             ; 3309
ST     0 15          ; 3310
LD     0 15         ; var continueds ; 3311
LDF    10152        ;  @lambda_1046 ; 3312
LDF    69           ;  @map ; 3313
AP     2             ; 3314
ST     0 16          ; 3315
LD     0 16         ; var exitRoutes ; 3316
LD     0 7          ; var emptier ; 3317
CDR                 ; generateTupleAccess total=2 pos=1 ; 3318
LDF    10157        ;  @lambda_1047 ; 3319
LDF    386          ;  @fold0 ; 3320
AP     3             ; 3321
ST     0 17          ; 3322
LD     0 5          ; var acc ; 3323
LD     0 12         ; var arrivedsList ; 3324
LDF    10162        ;  @lambda_1048 ; 3325
LDF    69           ;  @map ; 3326
AP     2             ; 3327
LDF    184          ;  @concat2_set ; 3328
AP     2             ; 3329
ST     0 18          ; 3330
LD     0 12         ; var arrivedsList ; 3331
LDF    532          ;  @length ; 3332
AP     1             ; 3333
LD     0 13         ; var arrivedsList2 ; 3334
LDF    532          ;  @length ; 3335
AP     1             ; 3336
CEQ                  ; 3337
LDC    1            ; for negation ; 3338
SUB                  ; 3339
SEL    3356 3375     ; 3340
LD     0 0          ; var map ; 3341
LD     0 17         ; var filledQueue ; 3342
LD     0 2          ; var destinations ; 3343
LD     0 3          ; var destinations2 ; 3344
LD     0 4          ; var visited ; 3345
LD     0 11         ; var exits ; 3346
LDF    1317         ;  @sorted_map_assoc_all ; 3347
AP     2             ; 3348
LD     0 18         ; var newacc ; 3349
LDC 0               ; local var space ; 3350
LDF    3192         ;  @waveFromPointToNearestJunction ; 3351
AP     7             ; 3352
ST     0 6           ; 3353
LD     0 6          ; var retval ; 3354
RTN                  ; 3355
LDC    5000000      ; branch@3356 ; 3356
DBUG                 ; 3357
LD     0 2          ; var destinations ; 3358
DBUG                 ; 3359
LD     0 3          ; var destinations2 ; 3360
DBUG                 ; 3361
LD     0 12         ; var arrivedsList ; 3362
DBUG                 ; 3363
LD     0 13         ; var arrivedsList2 ; 3364
DBUG                 ; 3365
LD     0 11         ; var exits ; 3366
DBUG                 ; 3367
BRK                  ; 3368
LD     0 11         ; var exits ; 3369
LDF    10255        ;  @lambda_1057 ; 3370
LDF    537          ;  @filter ; 3371
AP     2             ; 3372
DBUG                 ; 3373
JOIN                 ; 3374
JOIN                ; branch@3375 ; 3375
LD     0 0          ;  <== findEdgesForPoint  [AIState state, Point pos] (as blk) ; 3376
CAR                 ; generateTupleAccess total=4 pos=0 ; 3377
CDR                 ; generateTupleAccess total=6 pos=2 ; 3378
CDR                  ; 3379
CAR                  ; 3380
LDF    9939         ;  @lambda_1026 ; 3381
LDF    537          ;  @filter ; 3382
AP     2             ; 3383
RTN                  ; 3384
LD     0 1          ;  <== pointInEdge  [Point pos, ParsedEdge e] (as blk) ; 3385
CDR                 ; generateTupleAccess total=7 pos=2 ; 3386
CDR                  ; 3387
CAR                  ; 3388
LDF    10167        ;  @lambda_1049 ; 3389
LDF    545          ;  @any ; 3390
AP     2             ; 3391
RTN                  ; 3392
LDC    4000001      ;  <== parseMap  [ListCons<ListCons<Integer>> m] (as blk) ; 3393
DBUG                 ; 3394
LD     0 0          ; var m ; 3395
LDF    9660         ;  @lambda_1007 ; 3396
LDF    69           ;  @map ; 3397
AP     2             ; 3398
ST     0 1           ; 3399
LDC    4000002      ; just constant from code ; 3400
DBUG                 ; 3401
LDF    9663         ;  @lambda_1008 ; 3402
LD     0 0          ; var m ; 3403
LD     0 1          ; var accessors ; 3404
LDF    660          ;  @zip_with ; 3405
AP     3             ; 3406
ST     0 2           ; 3407
LDC    4000003      ; just constant from code ; 3408
DBUG                 ; 3409
LD     0 2          ; var mapAccessors ; 3410
LDF    9667         ;  @lambda_1009 ; 3411
LDF    69           ;  @map ; 3412
AP     2             ; 3413
ST     0 3           ; 3414
LDC    4000004      ; just constant from code ; 3415
DBUG                 ; 3416
LD     0 0          ; var m ; 3417
LDC    0            ; just constant from code ; 3418
LDF    9674         ;  @lambda_1010 ; 3419
LDF    86           ;  @mapi ; 3420
AP     3             ; 3421
ST     0 4           ; 3422
LDC    4000005      ; just constant from code ; 3423
DBUG                 ; 3424
LD     0 4          ; var toConcat ; 3425
LDF    118          ;  @concat ; 3426
AP     1             ; 3427
ST     0 5           ; 3428
LD     0 5          ; var walkableList ; 3429
LDF    9682         ;  @lambda_1011 ; 3430
LDF    537          ;  @filter ; 3431
AP     2             ; 3432
ST     0 6           ; 3433
LDC    4000006      ; just constant from code ; 3434
DBUG                 ; 3435
LDC    0            ; NULL literal ; 3436
LDC    0            ; just constant from code ; 3437
CONS                 ; 3438
LD     0 5          ; var walkableList ; 3439
LDF    3232         ;  @addPointKeyAll ; 3440
AP     1             ; 3441
LDF    1317         ;  @sorted_map_assoc_all ; 3442
AP     2             ; 3443
ST     0 7           ; 3444
LDC    4000007      ; just constant from code ; 3445
DBUG                 ; 3446
LDC    0            ; NULL literal ; 3447
LDC    0            ; just constant from code ; 3448
CONS                 ; 3449
LD     0 6          ; var junctionsList ; 3450
LDF    3232         ;  @addPointKeyAll ; 3451
AP     1             ; 3452
LDF    1317         ;  @sorted_map_assoc_all ; 3453
AP     2             ; 3454
ST     0 8           ; 3455
LDC    4000008      ; just constant from code ; 3456
DBUG                 ; 3457
LD     0 6          ; var junctionsList ; 3458
LDF    9700         ;  @lambda_1013 ; 3459
LDF    69           ;  @map ; 3460
AP     2             ; 3461
LDF    118          ;  @concat ; 3462
AP     1             ; 3463
ST     0 9           ; 3464
LDC    4000009      ; just constant from code ; 3465
DBUG                 ; 3466
LD     0 9          ; var allParsedEdges ; 3467
LDC    0            ; just constant from code ; 3468
LDF    9709         ;  @lambda_1014 ; 3469
LDF    86           ;  @mapi ; 3470
AP     3             ; 3471
ST     0 10          ; 3472
LDC    4000010      ; just constant from code ; 3473
DBUG                 ; 3474
LD     0 10         ; var allParsedEdges2 ; 3475
LDC    0            ; just constant from code ; 3476
LDF    9738         ;  @lambda_1015 ; 3477
LDF    86           ;  @mapi ; 3478
AP     3             ; 3479
ST     0 11          ; 3480
LDC    4000011      ; just constant from code ; 3481
DBUG                 ; 3482
LD     0 7          ; var walkable ; 3483
LD     0 8          ; var junctions ; 3484
LD     0 11         ; var allParsedEdges3 ; 3485
LDC    0            ; NULL literal ; 3486
LDC    0            ; NULL literal ; 3487
LD     0 1          ; var accessors ; 3488
CONS                 ; 3489
CONS                 ; 3490
CONS                 ; 3491
CONS                 ; 3492
CONS                 ; 3493
RTN                  ; 3494
LD     0 2          ;  <== findEdge  [Point a, Point b, ListCons<ParsedEdge> edges] (as blk) ; 3495
LDF    10184        ;  @lambda_1050 ; 3496
LDF    537          ;  @filter ; 3497
AP     2             ; 3498
CAR                  ; 3499
RTN                  ; 3500
LD     0 0          ;  <== edgeNumber  [ParsedEdge edge] (as blk) ; 3501
CDR                 ; generateTupleAccess total=7 pos=5 ; 3502
CDR                  ; 3503
CDR                  ; 3504
CDR                  ; 3505
CDR                  ; 3506
CAR                  ; 3507
RTN                  ; 3508
LD     0 0          ;  <== my_cat_maybes  [ListCons<Maybe<Point>> maybeListCons] (as blk) ; 3509
LDC 0               ; local var space ; 3510
LDC 0               ; local var space ; 3511
LDF    107          ;  @cat_maybes ; 3512
AP     3             ; 3513
ST     0 1           ; 3514
LD     0 1          ; var rv ; 3515
RTN                  ; 3516
LD     0 0          ;  <== collectWalkableXY  [ListCons<Integer> row, Integer rowy] (as blk) ; 3517
LDC    0            ; just constant from code ; 3518
LDF    10197        ;  @lambda_1051 ; 3519
LDF    86           ;  @mapi ; 3520
AP     3             ; 3521
RTN                  ; 3522
LD     0 0          ;  <== parseStaticMap  [ListCons<ListCons<Integer>> map] (as blk) ; 3523
LDC 0               ; local var space ; 3524
LDC 0               ; local var space ; 3525
LDC 0               ; local var space ; 3526
LDC 0               ; local var space ; 3527
LDC 0               ; local var space ; 3528
LDC 0               ; local var space ; 3529
LDC 0               ; local var space ; 3530
LDC 0               ; local var space ; 3531
LDC 0               ; local var space ; 3532
LDC 0               ; local var space ; 3533
LDC 0               ; local var space ; 3534
LDF    3393         ;  @parseMap ; 3535
AP     12            ; 3536
RTN                  ; 3537
LDF    403          ;  <== test2  [] (as blk), ALSO: @queue_new ; 3538
AP     0             ; 3539
LDC    1            ; just constant from code ; 3540
LDF    407          ;  @queue_enqueue ; 3541
AP     2             ; 3542
LDC    2            ; just constant from code ; 3543
LDF    407          ;  @queue_enqueue ; 3544
AP     2             ; 3545
LDC    3            ; just constant from code ; 3546
LDF    407          ;  @queue_enqueue ; 3547
AP     2             ; 3548
ST     0 0           ; 3549
LD     0 0          ; var queue ; 3550
LDC 0               ; local var space ; 3551
LDF    492          ;  @queue_dequeue ; 3552
AP     2             ; 3553
ST     0 1           ; 3554
LD     0 1          ; var q1 ; 3555
CDR                 ; generateTupleAccess total=2 pos=1 ; 3556
LDC 0               ; local var space ; 3557
LDF    492          ;  @queue_dequeue ; 3558
AP     2             ; 3559
ST     0 1           ; 3560
LD     0 1          ; var q1 ; 3561
CDR                 ; generateTupleAccess total=2 pos=1 ; 3562
LDC 0               ; local var space ; 3563
LDF    492          ;  @queue_dequeue ; 3564
AP     2             ; 3565
ST     0 1           ; 3566
LDC    1            ; just constant from code ; 3567
RTN                  ; 3568
LDC    0            ;  <== test3  [] (as blk) ; 3569
LDC    0            ; just constant from code ; 3570
CONS                 ; 3571
ST     0 0           ; 3572
LD     0 0          ; var map ; 3573
LDC    30           ; just constant from code ; 3574
LDC    31           ; just constant from code ; 3575
LDF    1308         ;  @sorted_map_assoc ; 3576
AP     3             ; 3577
LDC    20           ; just constant from code ; 3578
LDC    21           ; just constant from code ; 3579
LDF    1308         ;  @sorted_map_assoc ; 3580
AP     3             ; 3581
LDC    10           ; just constant from code ; 3582
LDC    11           ; just constant from code ; 3583
LDF    1308         ;  @sorted_map_assoc ; 3584
AP     3             ; 3585
ST     0 1           ; 3586
LD     0 1          ; var new_map2 ; 3587
LDC    20           ; just constant from code ; 3588
LDC    33           ; just constant from code ; 3589
LDF    1308         ;  @sorted_map_assoc ; 3590
AP     3             ; 3591
LDC    20           ; just constant from code ; 3592
LDC    88           ; just constant from code ; 3593
LDF    1292         ;  @sorted_map_get ; 3594
AP     3             ; 3595
RTN                  ; 3596
LDC    0            ;  <== getMapItem  [ListCons<ListCons<Integer>> map, int y, int x] (as blk) ; 3597
LD     0 1          ; var y ; 3598
CGT                  ; 3599
LDC    0            ; just constant from code ; 3600
LD     0 2          ; var x ; 3601
CGT                  ; 3602
ADD                  ; 3603
SEL    3606 3608    ; IF? 57 ; 3604
RTN                  ; 3605
LDC    0            ; THEN: 57 ; 3606
JOIN                 ; 3607
LD     0 0          ; ELSE: 57 ; 3608
LD     0 1          ; var y ; 3609
LDC    0            ; just constant from code ; 3610
LDF    469          ;  @list_item_def ; 3611
AP     3             ; 3612
LD     0 2          ; var x ; 3613
LDC    0            ; just constant from code ; 3614
LDF    469          ;  @list_item_def ; 3615
AP     3             ; 3616
JOIN                 ; 3617
LDC 0               ; generated from native: array_256 ; 3618
LDC 0                ; 3619
LDC 0                ; 3620
LDC 0                ; 3621
LDC 0                ; 3622
LDC 0                ; 3623
LDC 0                ; 3624
LDC 0                ; 3625
LDC 0                ; 3626
LDC 0                ; 3627
LDC 0                ; 3628
LDC 0                ; 3629
LDC 0                ; 3630
LDC 0                ; 3631
LDC 0                ; 3632
LDC 0                ; 3633
LDC 0                ; 3634
LDC 0                ; 3635
LDC 0                ; 3636
LDC 0                ; 3637
LDC 0                ; 3638
LDC 0                ; 3639
LDC 0                ; 3640
LDC 0                ; 3641
LDC 0                ; 3642
LDC 0                ; 3643
LDC 0                ; 3644
LDC 0                ; 3645
LDC 0                ; 3646
LDC 0                ; 3647
LDC 0                ; 3648
LDC 0                ; 3649
LDC 0                ; 3650
LDC 0                ; 3651
LDC 0                ; 3652
LDC 0                ; 3653
LDC 0                ; 3654
LDC 0                ; 3655
LDC 0                ; 3656
LDC 0                ; 3657
LDC 0                ; 3658
LDC 0                ; 3659
LDC 0                ; 3660
LDC 0                ; 3661
LDC 0                ; 3662
LDC 0                ; 3663
LDC 0                ; 3664
LDC 0                ; 3665
LDC 0                ; 3666
LDC 0                ; 3667
LDC 0                ; 3668
LDC 0                ; 3669
LDC 0                ; 3670
LDC 0                ; 3671
LDC 0                ; 3672
LDC 0                ; 3673
LDC 0                ; 3674
LDC 0                ; 3675
LDC 0                ; 3676
LDC 0                ; 3677
LDC 0                ; 3678
LDC 0                ; 3679
LDC 0                ; 3680
LDC 0                ; 3681
LDC 0                ; 3682
LDC 0                ; 3683
LDC 0                ; 3684
LDC 0                ; 3685
LDC 0                ; 3686
LDC 0                ; 3687
LDC 0                ; 3688
LDC 0                ; 3689
LDC 0                ; 3690
LDC 0                ; 3691
LDC 0                ; 3692
LDC 0                ; 3693
LDC 0                ; 3694
LDC 0                ; 3695
LDC 0                ; 3696
LDC 0                ; 3697
LDC 0                ; 3698
LDC 0                ; 3699
LDC 0                ; 3700
LDC 0                ; 3701
LDC 0                ; 3702
LDC 0                ; 3703
LDC 0                ; 3704
LDC 0                ; 3705
LDC 0                ; 3706
LDC 0                ; 3707
LDC 0                ; 3708
LDC 0                ; 3709
LDC 0                ; 3710
LDC 0                ; 3711
LDC 0                ; 3712
LDC 0                ; 3713
LDC 0                ; 3714
LDC 0                ; 3715
LDC 0                ; 3716
LDC 0                ; 3717
LDC 0                ; 3718
LDC 0                ; 3719
LDC 0                ; 3720
LDC 0                ; 3721
LDC 0                ; 3722
LDC 0                ; 3723
LDC 0                ; 3724
LDC 0                ; 3725
LDC 0                ; 3726
LDC 0                ; 3727
LDC 0                ; 3728
LDC 0                ; 3729
LDC 0                ; 3730
LDC 0                ; 3731
LDC 0                ; 3732
LDC 0                ; 3733
LDC 0                ; 3734
LDC 0                ; 3735
LDC 0                ; 3736
LDC 0                ; 3737
LDC 0                ; 3738
LDC 0                ; 3739
LDC 0                ; 3740
LDC 0                ; 3741
LDC 0                ; 3742
LDC 0                ; 3743
LDC 0                ; 3744
LDC 0                ; 3745
LDC 0                ; 3746
LDC 0                ; 3747
LDC 0                ; 3748
LDC 0                ; 3749
LDC 0                ; 3750
LDC 0                ; 3751
LDC 0                ; 3752
LDC 0                ; 3753
LDC 0                ; 3754
LDC 0                ; 3755
LDC 0                ; 3756
LDC 0                ; 3757
LDC 0                ; 3758
LDC 0                ; 3759
LDC 0                ; 3760
LDC 0                ; 3761
LDC 0                ; 3762
LDC 0                ; 3763
LDC 0                ; 3764
LDC 0                ; 3765
LDC 0                ; 3766
LDC 0                ; 3767
LDC 0                ; 3768
LDC 0                ; 3769
LDC 0                ; 3770
LDC 0                ; 3771
LDC 0                ; 3772
LDC 0                ; 3773
LDC 0                ; 3774
LDC 0                ; 3775
LDC 0                ; 3776
LDC 0                ; 3777
LDC 0                ; 3778
LDC 0                ; 3779
LDC 0                ; 3780
LDC 0                ; 3781
LDC 0                ; 3782
LDC 0                ; 3783
LDC 0                ; 3784
LDC 0                ; 3785
LDC 0                ; 3786
LDC 0                ; 3787
LDC 0                ; 3788
LDC 0                ; 3789
LDC 0                ; 3790
LDC 0                ; 3791
LDC 0                ; 3792
LDC 0                ; 3793
LDC 0                ; 3794
LDC 0                ; 3795
LDC 0                ; 3796
LDC 0                ; 3797
LDC 0                ; 3798
LDC 0                ; 3799
LDC 0                ; 3800
LDC 0                ; 3801
LDC 0                ; 3802
LDC 0                ; 3803
LDC 0                ; 3804
LDC 0                ; 3805
LDC 0                ; 3806
LDC 0                ; 3807
LDC 0                ; 3808
LDC 0                ; 3809
LDC 0                ; 3810
LDC 0                ; 3811
LDC 0                ; 3812
LDC 0                ; 3813
LDC 0                ; 3814
LDC 0                ; 3815
LDC 0                ; 3816
LDC 0                ; 3817
LDC 0                ; 3818
LDC 0                ; 3819
LDC 0                ; 3820
LDC 0                ; 3821
LDC 0                ; 3822
LDC 0                ; 3823
LDC 0                ; 3824
LDC 0                ; 3825
LDC 0                ; 3826
LDC 0                ; 3827
LDC 0                ; 3828
LDC 0                ; 3829
LDC 0                ; 3830
LDC 0                ; 3831
LDC 0                ; 3832
LDC 0                ; 3833
LDC 0                ; 3834
LDC 0                ; 3835
LDC 0                ; 3836
LDC 0                ; 3837
LDC 0                ; 3838
LDC 0                ; 3839
LDC 0                ; 3840
LDC 0                ; 3841
LDC 0                ; 3842
LDC 0                ; 3843
LDC 0                ; 3844
LDC 0                ; 3845
LDC 0                ; 3846
LDC 0                ; 3847
LDC 0                ; 3848
LDC 0                ; 3849
LDC 0                ; 3850
LDC 0                ; 3851
LDC 0                ; 3852
LDC 0                ; 3853
LDC 0                ; 3854
LDC 0                ; 3855
LDC 0                ; 3856
LDC 0                ; 3857
LDC 0                ; 3858
LDC 0                ; 3859
LDC 0                ; 3860
LDC 0                ; 3861
LDC 0                ; 3862
LDC 0                ; 3863
LDC 0                ; 3864
LDC 0                ; 3865
LDC 0                ; 3866
LDC 0                ; 3867
LDC 0                ; 3868
LDC 0                ; 3869
LDC 0                ; 3870
LDC 0                ; 3871
LDC 0                ; 3872
LDC 0                ; 3873
LDF 3877             ; 3874
AP 256               ; 3875
RTN                  ; 3876
LDF  3879            ; 3877
RTN                  ; 3878
LD  0   0            ; 3879
LDC 100              ; 3880
CEQ                  ; 3881
TSEL    3883 4909    ; 3882
LD  0   1            ; 3883
LDC 0                ; 3884
CEQ                  ; 3885
TSEL    5937 3887    ; 3886
LD  0   1            ; 3887
LDC 1                ; 3888
CEQ                  ; 3889
TSEL    5947 3891    ; 3890
LD  0   1            ; 3891
LDC 2                ; 3892
CEQ                  ; 3893
TSEL    5957 3895    ; 3894
LD  0   1            ; 3895
LDC 3                ; 3896
CEQ                  ; 3897
TSEL    5967 3899    ; 3898
LD  0   1            ; 3899
LDC 4                ; 3900
CEQ                  ; 3901
TSEL    5977 3903    ; 3902
LD  0   1            ; 3903
LDC 5                ; 3904
CEQ                  ; 3905
TSEL    5987 3907    ; 3906
LD  0   1            ; 3907
LDC 6                ; 3908
CEQ                  ; 3909
TSEL    5997 3911    ; 3910
LD  0   1            ; 3911
LDC 7                ; 3912
CEQ                  ; 3913
TSEL    6007 3915    ; 3914
LD  0   1            ; 3915
LDC 8                ; 3916
CEQ                  ; 3917
TSEL    6017 3919    ; 3918
LD  0   1            ; 3919
LDC 9                ; 3920
CEQ                  ; 3921
TSEL    6027 3923    ; 3922
LD  0   1            ; 3923
LDC 10               ; 3924
CEQ                  ; 3925
TSEL    6037 3927    ; 3926
LD  0   1            ; 3927
LDC 11               ; 3928
CEQ                  ; 3929
TSEL    6047 3931    ; 3930
LD  0   1            ; 3931
LDC 12               ; 3932
CEQ                  ; 3933
TSEL    6057 3935    ; 3934
LD  0   1            ; 3935
LDC 13               ; 3936
CEQ                  ; 3937
TSEL    6067 3939    ; 3938
LD  0   1            ; 3939
LDC 14               ; 3940
CEQ                  ; 3941
TSEL    6077 3943    ; 3942
LD  0   1            ; 3943
LDC 15               ; 3944
CEQ                  ; 3945
TSEL    6087 3947    ; 3946
LD  0   1            ; 3947
LDC 16               ; 3948
CEQ                  ; 3949
TSEL    6097 3951    ; 3950
LD  0   1            ; 3951
LDC 17               ; 3952
CEQ                  ; 3953
TSEL    6107 3955    ; 3954
LD  0   1            ; 3955
LDC 18               ; 3956
CEQ                  ; 3957
TSEL    6117 3959    ; 3958
LD  0   1            ; 3959
LDC 19               ; 3960
CEQ                  ; 3961
TSEL    6127 3963    ; 3962
LD  0   1            ; 3963
LDC 20               ; 3964
CEQ                  ; 3965
TSEL    6137 3967    ; 3966
LD  0   1            ; 3967
LDC 21               ; 3968
CEQ                  ; 3969
TSEL    6147 3971    ; 3970
LD  0   1            ; 3971
LDC 22               ; 3972
CEQ                  ; 3973
TSEL    6157 3975    ; 3974
LD  0   1            ; 3975
LDC 23               ; 3976
CEQ                  ; 3977
TSEL    6167 3979    ; 3978
LD  0   1            ; 3979
LDC 24               ; 3980
CEQ                  ; 3981
TSEL    6177 3983    ; 3982
LD  0   1            ; 3983
LDC 25               ; 3984
CEQ                  ; 3985
TSEL    6187 3987    ; 3986
LD  0   1            ; 3987
LDC 26               ; 3988
CEQ                  ; 3989
TSEL    6197 3991    ; 3990
LD  0   1            ; 3991
LDC 27               ; 3992
CEQ                  ; 3993
TSEL    6207 3995    ; 3994
LD  0   1            ; 3995
LDC 28               ; 3996
CEQ                  ; 3997
TSEL    6217 3999    ; 3998
LD  0   1            ; 3999
LDC 29               ; 4000
CEQ                  ; 4001
TSEL    6227 4003    ; 4002
LD  0   1            ; 4003
LDC 30               ; 4004
CEQ                  ; 4005
TSEL    6237 4007    ; 4006
LD  0   1            ; 4007
LDC 31               ; 4008
CEQ                  ; 4009
TSEL    6247 4011    ; 4010
LD  0   1            ; 4011
LDC 32               ; 4012
CEQ                  ; 4013
TSEL    6257 4015    ; 4014
LD  0   1            ; 4015
LDC 33               ; 4016
CEQ                  ; 4017
TSEL    6267 4019    ; 4018
LD  0   1            ; 4019
LDC 34               ; 4020
CEQ                  ; 4021
TSEL    6277 4023    ; 4022
LD  0   1            ; 4023
LDC 35               ; 4024
CEQ                  ; 4025
TSEL    6287 4027    ; 4026
LD  0   1            ; 4027
LDC 36               ; 4028
CEQ                  ; 4029
TSEL    6297 4031    ; 4030
LD  0   1            ; 4031
LDC 37               ; 4032
CEQ                  ; 4033
TSEL    6307 4035    ; 4034
LD  0   1            ; 4035
LDC 38               ; 4036
CEQ                  ; 4037
TSEL    6317 4039    ; 4038
LD  0   1            ; 4039
LDC 39               ; 4040
CEQ                  ; 4041
TSEL    6327 4043    ; 4042
LD  0   1            ; 4043
LDC 40               ; 4044
CEQ                  ; 4045
TSEL    6337 4047    ; 4046
LD  0   1            ; 4047
LDC 41               ; 4048
CEQ                  ; 4049
TSEL    6347 4051    ; 4050
LD  0   1            ; 4051
LDC 42               ; 4052
CEQ                  ; 4053
TSEL    6357 4055    ; 4054
LD  0   1            ; 4055
LDC 43               ; 4056
CEQ                  ; 4057
TSEL    6367 4059    ; 4058
LD  0   1            ; 4059
LDC 44               ; 4060
CEQ                  ; 4061
TSEL    6377 4063    ; 4062
LD  0   1            ; 4063
LDC 45               ; 4064
CEQ                  ; 4065
TSEL    6387 4067    ; 4066
LD  0   1            ; 4067
LDC 46               ; 4068
CEQ                  ; 4069
TSEL    6397 4071    ; 4070
LD  0   1            ; 4071
LDC 47               ; 4072
CEQ                  ; 4073
TSEL    6407 4075    ; 4074
LD  0   1            ; 4075
LDC 48               ; 4076
CEQ                  ; 4077
TSEL    6417 4079    ; 4078
LD  0   1            ; 4079
LDC 49               ; 4080
CEQ                  ; 4081
TSEL    6427 4083    ; 4082
LD  0   1            ; 4083
LDC 50               ; 4084
CEQ                  ; 4085
TSEL    6437 4087    ; 4086
LD  0   1            ; 4087
LDC 51               ; 4088
CEQ                  ; 4089
TSEL    6447 4091    ; 4090
LD  0   1            ; 4091
LDC 52               ; 4092
CEQ                  ; 4093
TSEL    6457 4095    ; 4094
LD  0   1            ; 4095
LDC 53               ; 4096
CEQ                  ; 4097
TSEL    6467 4099    ; 4098
LD  0   1            ; 4099
LDC 54               ; 4100
CEQ                  ; 4101
TSEL    6477 4103    ; 4102
LD  0   1            ; 4103
LDC 55               ; 4104
CEQ                  ; 4105
TSEL    6487 4107    ; 4106
LD  0   1            ; 4107
LDC 56               ; 4108
CEQ                  ; 4109
TSEL    6497 4111    ; 4110
LD  0   1            ; 4111
LDC 57               ; 4112
CEQ                  ; 4113
TSEL    6507 4115    ; 4114
LD  0   1            ; 4115
LDC 58               ; 4116
CEQ                  ; 4117
TSEL    6517 4119    ; 4118
LD  0   1            ; 4119
LDC 59               ; 4120
CEQ                  ; 4121
TSEL    6527 4123    ; 4122
LD  0   1            ; 4123
LDC 60               ; 4124
CEQ                  ; 4125
TSEL    6537 4127    ; 4126
LD  0   1            ; 4127
LDC 61               ; 4128
CEQ                  ; 4129
TSEL    6547 4131    ; 4130
LD  0   1            ; 4131
LDC 62               ; 4132
CEQ                  ; 4133
TSEL    6557 4135    ; 4134
LD  0   1            ; 4135
LDC 63               ; 4136
CEQ                  ; 4137
TSEL    6567 4139    ; 4138
LD  0   1            ; 4139
LDC 64               ; 4140
CEQ                  ; 4141
TSEL    6577 4143    ; 4142
LD  0   1            ; 4143
LDC 65               ; 4144
CEQ                  ; 4145
TSEL    6587 4147    ; 4146
LD  0   1            ; 4147
LDC 66               ; 4148
CEQ                  ; 4149
TSEL    6597 4151    ; 4150
LD  0   1            ; 4151
LDC 67               ; 4152
CEQ                  ; 4153
TSEL    6607 4155    ; 4154
LD  0   1            ; 4155
LDC 68               ; 4156
CEQ                  ; 4157
TSEL    6617 4159    ; 4158
LD  0   1            ; 4159
LDC 69               ; 4160
CEQ                  ; 4161
TSEL    6627 4163    ; 4162
LD  0   1            ; 4163
LDC 70               ; 4164
CEQ                  ; 4165
TSEL    6637 4167    ; 4166
LD  0   1            ; 4167
LDC 71               ; 4168
CEQ                  ; 4169
TSEL    6647 4171    ; 4170
LD  0   1            ; 4171
LDC 72               ; 4172
CEQ                  ; 4173
TSEL    6657 4175    ; 4174
LD  0   1            ; 4175
LDC 73               ; 4176
CEQ                  ; 4177
TSEL    6667 4179    ; 4178
LD  0   1            ; 4179
LDC 74               ; 4180
CEQ                  ; 4181
TSEL    6677 4183    ; 4182
LD  0   1            ; 4183
LDC 75               ; 4184
CEQ                  ; 4185
TSEL    6687 4187    ; 4186
LD  0   1            ; 4187
LDC 76               ; 4188
CEQ                  ; 4189
TSEL    6697 4191    ; 4190
LD  0   1            ; 4191
LDC 77               ; 4192
CEQ                  ; 4193
TSEL    6707 4195    ; 4194
LD  0   1            ; 4195
LDC 78               ; 4196
CEQ                  ; 4197
TSEL    6717 4199    ; 4198
LD  0   1            ; 4199
LDC 79               ; 4200
CEQ                  ; 4201
TSEL    6727 4203    ; 4202
LD  0   1            ; 4203
LDC 80               ; 4204
CEQ                  ; 4205
TSEL    6737 4207    ; 4206
LD  0   1            ; 4207
LDC 81               ; 4208
CEQ                  ; 4209
TSEL    6747 4211    ; 4210
LD  0   1            ; 4211
LDC 82               ; 4212
CEQ                  ; 4213
TSEL    6757 4215    ; 4214
LD  0   1            ; 4215
LDC 83               ; 4216
CEQ                  ; 4217
TSEL    6767 4219    ; 4218
LD  0   1            ; 4219
LDC 84               ; 4220
CEQ                  ; 4221
TSEL    6777 4223    ; 4222
LD  0   1            ; 4223
LDC 85               ; 4224
CEQ                  ; 4225
TSEL    6787 4227    ; 4226
LD  0   1            ; 4227
LDC 86               ; 4228
CEQ                  ; 4229
TSEL    6797 4231    ; 4230
LD  0   1            ; 4231
LDC 87               ; 4232
CEQ                  ; 4233
TSEL    6807 4235    ; 4234
LD  0   1            ; 4235
LDC 88               ; 4236
CEQ                  ; 4237
TSEL    6817 4239    ; 4238
LD  0   1            ; 4239
LDC 89               ; 4240
CEQ                  ; 4241
TSEL    6827 4243    ; 4242
LD  0   1            ; 4243
LDC 90               ; 4244
CEQ                  ; 4245
TSEL    6837 4247    ; 4246
LD  0   1            ; 4247
LDC 91               ; 4248
CEQ                  ; 4249
TSEL    6847 4251    ; 4250
LD  0   1            ; 4251
LDC 92               ; 4252
CEQ                  ; 4253
TSEL    6857 4255    ; 4254
LD  0   1            ; 4255
LDC 93               ; 4256
CEQ                  ; 4257
TSEL    6867 4259    ; 4258
LD  0   1            ; 4259
LDC 94               ; 4260
CEQ                  ; 4261
TSEL    6877 4263    ; 4262
LD  0   1            ; 4263
LDC 95               ; 4264
CEQ                  ; 4265
TSEL    6887 4267    ; 4266
LD  0   1            ; 4267
LDC 96               ; 4268
CEQ                  ; 4269
TSEL    6897 4271    ; 4270
LD  0   1            ; 4271
LDC 97               ; 4272
CEQ                  ; 4273
TSEL    6907 4275    ; 4274
LD  0   1            ; 4275
LDC 98               ; 4276
CEQ                  ; 4277
TSEL    6917 4279    ; 4278
LD  0   1            ; 4279
LDC 99               ; 4280
CEQ                  ; 4281
TSEL    6927 4283    ; 4282
LD  0   1            ; 4283
LDC 100              ; 4284
CEQ                  ; 4285
TSEL    6937 4287    ; 4286
LD  0   1            ; 4287
LDC 101              ; 4288
CEQ                  ; 4289
TSEL    6947 4291    ; 4290
LD  0   1            ; 4291
LDC 102              ; 4292
CEQ                  ; 4293
TSEL    6957 4295    ; 4294
LD  0   1            ; 4295
LDC 103              ; 4296
CEQ                  ; 4297
TSEL    6967 4299    ; 4298
LD  0   1            ; 4299
LDC 104              ; 4300
CEQ                  ; 4301
TSEL    6977 4303    ; 4302
LD  0   1            ; 4303
LDC 105              ; 4304
CEQ                  ; 4305
TSEL    6987 4307    ; 4306
LD  0   1            ; 4307
LDC 106              ; 4308
CEQ                  ; 4309
TSEL    6997 4311    ; 4310
LD  0   1            ; 4311
LDC 107              ; 4312
CEQ                  ; 4313
TSEL    7007 4315    ; 4314
LD  0   1            ; 4315
LDC 108              ; 4316
CEQ                  ; 4317
TSEL    7017 4319    ; 4318
LD  0   1            ; 4319
LDC 109              ; 4320
CEQ                  ; 4321
TSEL    7027 4323    ; 4322
LD  0   1            ; 4323
LDC 110              ; 4324
CEQ                  ; 4325
TSEL    7037 4327    ; 4326
LD  0   1            ; 4327
LDC 111              ; 4328
CEQ                  ; 4329
TSEL    7047 4331    ; 4330
LD  0   1            ; 4331
LDC 112              ; 4332
CEQ                  ; 4333
TSEL    7057 4335    ; 4334
LD  0   1            ; 4335
LDC 113              ; 4336
CEQ                  ; 4337
TSEL    7067 4339    ; 4338
LD  0   1            ; 4339
LDC 114              ; 4340
CEQ                  ; 4341
TSEL    7077 4343    ; 4342
LD  0   1            ; 4343
LDC 115              ; 4344
CEQ                  ; 4345
TSEL    7087 4347    ; 4346
LD  0   1            ; 4347
LDC 116              ; 4348
CEQ                  ; 4349
TSEL    7097 4351    ; 4350
LD  0   1            ; 4351
LDC 117              ; 4352
CEQ                  ; 4353
TSEL    7107 4355    ; 4354
LD  0   1            ; 4355
LDC 118              ; 4356
CEQ                  ; 4357
TSEL    7117 4359    ; 4358
LD  0   1            ; 4359
LDC 119              ; 4360
CEQ                  ; 4361
TSEL    7127 4363    ; 4362
LD  0   1            ; 4363
LDC 120              ; 4364
CEQ                  ; 4365
TSEL    7137 4367    ; 4366
LD  0   1            ; 4367
LDC 121              ; 4368
CEQ                  ; 4369
TSEL    7147 4371    ; 4370
LD  0   1            ; 4371
LDC 122              ; 4372
CEQ                  ; 4373
TSEL    7157 4375    ; 4374
LD  0   1            ; 4375
LDC 123              ; 4376
CEQ                  ; 4377
TSEL    7167 4379    ; 4378
LD  0   1            ; 4379
LDC 124              ; 4380
CEQ                  ; 4381
TSEL    7177 4383    ; 4382
LD  0   1            ; 4383
LDC 125              ; 4384
CEQ                  ; 4385
TSEL    7187 4387    ; 4386
LD  0   1            ; 4387
LDC 126              ; 4388
CEQ                  ; 4389
TSEL    7197 4391    ; 4390
LD  0   1            ; 4391
LDC 127              ; 4392
CEQ                  ; 4393
TSEL    7207 4395    ; 4394
LD  0   1            ; 4395
LDC 128              ; 4396
CEQ                  ; 4397
TSEL    7217 4399    ; 4398
LD  0   1            ; 4399
LDC 129              ; 4400
CEQ                  ; 4401
TSEL    7227 4403    ; 4402
LD  0   1            ; 4403
LDC 130              ; 4404
CEQ                  ; 4405
TSEL    7237 4407    ; 4406
LD  0   1            ; 4407
LDC 131              ; 4408
CEQ                  ; 4409
TSEL    7247 4411    ; 4410
LD  0   1            ; 4411
LDC 132              ; 4412
CEQ                  ; 4413
TSEL    7257 4415    ; 4414
LD  0   1            ; 4415
LDC 133              ; 4416
CEQ                  ; 4417
TSEL    7267 4419    ; 4418
LD  0   1            ; 4419
LDC 134              ; 4420
CEQ                  ; 4421
TSEL    7277 4423    ; 4422
LD  0   1            ; 4423
LDC 135              ; 4424
CEQ                  ; 4425
TSEL    7287 4427    ; 4426
LD  0   1            ; 4427
LDC 136              ; 4428
CEQ                  ; 4429
TSEL    7297 4431    ; 4430
LD  0   1            ; 4431
LDC 137              ; 4432
CEQ                  ; 4433
TSEL    7307 4435    ; 4434
LD  0   1            ; 4435
LDC 138              ; 4436
CEQ                  ; 4437
TSEL    7317 4439    ; 4438
LD  0   1            ; 4439
LDC 139              ; 4440
CEQ                  ; 4441
TSEL    7327 4443    ; 4442
LD  0   1            ; 4443
LDC 140              ; 4444
CEQ                  ; 4445
TSEL    7337 4447    ; 4446
LD  0   1            ; 4447
LDC 141              ; 4448
CEQ                  ; 4449
TSEL    7347 4451    ; 4450
LD  0   1            ; 4451
LDC 142              ; 4452
CEQ                  ; 4453
TSEL    7357 4455    ; 4454
LD  0   1            ; 4455
LDC 143              ; 4456
CEQ                  ; 4457
TSEL    7367 4459    ; 4458
LD  0   1            ; 4459
LDC 144              ; 4460
CEQ                  ; 4461
TSEL    7377 4463    ; 4462
LD  0   1            ; 4463
LDC 145              ; 4464
CEQ                  ; 4465
TSEL    7387 4467    ; 4466
LD  0   1            ; 4467
LDC 146              ; 4468
CEQ                  ; 4469
TSEL    7397 4471    ; 4470
LD  0   1            ; 4471
LDC 147              ; 4472
CEQ                  ; 4473
TSEL    7407 4475    ; 4474
LD  0   1            ; 4475
LDC 148              ; 4476
CEQ                  ; 4477
TSEL    7417 4479    ; 4478
LD  0   1            ; 4479
LDC 149              ; 4480
CEQ                  ; 4481
TSEL    7427 4483    ; 4482
LD  0   1            ; 4483
LDC 150              ; 4484
CEQ                  ; 4485
TSEL    7437 4487    ; 4486
LD  0   1            ; 4487
LDC 151              ; 4488
CEQ                  ; 4489
TSEL    7447 4491    ; 4490
LD  0   1            ; 4491
LDC 152              ; 4492
CEQ                  ; 4493
TSEL    7457 4495    ; 4494
LD  0   1            ; 4495
LDC 153              ; 4496
CEQ                  ; 4497
TSEL    7467 4499    ; 4498
LD  0   1            ; 4499
LDC 154              ; 4500
CEQ                  ; 4501
TSEL    7477 4503    ; 4502
LD  0   1            ; 4503
LDC 155              ; 4504
CEQ                  ; 4505
TSEL    7487 4507    ; 4506
LD  0   1            ; 4507
LDC 156              ; 4508
CEQ                  ; 4509
TSEL    7497 4511    ; 4510
LD  0   1            ; 4511
LDC 157              ; 4512
CEQ                  ; 4513
TSEL    7507 4515    ; 4514
LD  0   1            ; 4515
LDC 158              ; 4516
CEQ                  ; 4517
TSEL    7517 4519    ; 4518
LD  0   1            ; 4519
LDC 159              ; 4520
CEQ                  ; 4521
TSEL    7527 4523    ; 4522
LD  0   1            ; 4523
LDC 160              ; 4524
CEQ                  ; 4525
TSEL    7537 4527    ; 4526
LD  0   1            ; 4527
LDC 161              ; 4528
CEQ                  ; 4529
TSEL    7547 4531    ; 4530
LD  0   1            ; 4531
LDC 162              ; 4532
CEQ                  ; 4533
TSEL    7557 4535    ; 4534
LD  0   1            ; 4535
LDC 163              ; 4536
CEQ                  ; 4537
TSEL    7567 4539    ; 4538
LD  0   1            ; 4539
LDC 164              ; 4540
CEQ                  ; 4541
TSEL    7577 4543    ; 4542
LD  0   1            ; 4543
LDC 165              ; 4544
CEQ                  ; 4545
TSEL    7587 4547    ; 4546
LD  0   1            ; 4547
LDC 166              ; 4548
CEQ                  ; 4549
TSEL    7597 4551    ; 4550
LD  0   1            ; 4551
LDC 167              ; 4552
CEQ                  ; 4553
TSEL    7607 4555    ; 4554
LD  0   1            ; 4555
LDC 168              ; 4556
CEQ                  ; 4557
TSEL    7617 4559    ; 4558
LD  0   1            ; 4559
LDC 169              ; 4560
CEQ                  ; 4561
TSEL    7627 4563    ; 4562
LD  0   1            ; 4563
LDC 170              ; 4564
CEQ                  ; 4565
TSEL    7637 4567    ; 4566
LD  0   1            ; 4567
LDC 171              ; 4568
CEQ                  ; 4569
TSEL    7647 4571    ; 4570
LD  0   1            ; 4571
LDC 172              ; 4572
CEQ                  ; 4573
TSEL    7657 4575    ; 4574
LD  0   1            ; 4575
LDC 173              ; 4576
CEQ                  ; 4577
TSEL    7667 4579    ; 4578
LD  0   1            ; 4579
LDC 174              ; 4580
CEQ                  ; 4581
TSEL    7677 4583    ; 4582
LD  0   1            ; 4583
LDC 175              ; 4584
CEQ                  ; 4585
TSEL    7687 4587    ; 4586
LD  0   1            ; 4587
LDC 176              ; 4588
CEQ                  ; 4589
TSEL    7697 4591    ; 4590
LD  0   1            ; 4591
LDC 177              ; 4592
CEQ                  ; 4593
TSEL    7707 4595    ; 4594
LD  0   1            ; 4595
LDC 178              ; 4596
CEQ                  ; 4597
TSEL    7717 4599    ; 4598
LD  0   1            ; 4599
LDC 179              ; 4600
CEQ                  ; 4601
TSEL    7727 4603    ; 4602
LD  0   1            ; 4603
LDC 180              ; 4604
CEQ                  ; 4605
TSEL    7737 4607    ; 4606
LD  0   1            ; 4607
LDC 181              ; 4608
CEQ                  ; 4609
TSEL    7747 4611    ; 4610
LD  0   1            ; 4611
LDC 182              ; 4612
CEQ                  ; 4613
TSEL    7757 4615    ; 4614
LD  0   1            ; 4615
LDC 183              ; 4616
CEQ                  ; 4617
TSEL    7767 4619    ; 4618
LD  0   1            ; 4619
LDC 184              ; 4620
CEQ                  ; 4621
TSEL    7777 4623    ; 4622
LD  0   1            ; 4623
LDC 185              ; 4624
CEQ                  ; 4625
TSEL    7787 4627    ; 4626
LD  0   1            ; 4627
LDC 186              ; 4628
CEQ                  ; 4629
TSEL    7797 4631    ; 4630
LD  0   1            ; 4631
LDC 187              ; 4632
CEQ                  ; 4633
TSEL    7807 4635    ; 4634
LD  0   1            ; 4635
LDC 188              ; 4636
CEQ                  ; 4637
TSEL    7817 4639    ; 4638
LD  0   1            ; 4639
LDC 189              ; 4640
CEQ                  ; 4641
TSEL    7827 4643    ; 4642
LD  0   1            ; 4643
LDC 190              ; 4644
CEQ                  ; 4645
TSEL    7837 4647    ; 4646
LD  0   1            ; 4647
LDC 191              ; 4648
CEQ                  ; 4649
TSEL    7847 4651    ; 4650
LD  0   1            ; 4651
LDC 192              ; 4652
CEQ                  ; 4653
TSEL    7857 4655    ; 4654
LD  0   1            ; 4655
LDC 193              ; 4656
CEQ                  ; 4657
TSEL    7867 4659    ; 4658
LD  0   1            ; 4659
LDC 194              ; 4660
CEQ                  ; 4661
TSEL    7877 4663    ; 4662
LD  0   1            ; 4663
LDC 195              ; 4664
CEQ                  ; 4665
TSEL    7887 4667    ; 4666
LD  0   1            ; 4667
LDC 196              ; 4668
CEQ                  ; 4669
TSEL    7897 4671    ; 4670
LD  0   1            ; 4671
LDC 197              ; 4672
CEQ                  ; 4673
TSEL    7907 4675    ; 4674
LD  0   1            ; 4675
LDC 198              ; 4676
CEQ                  ; 4677
TSEL    7917 4679    ; 4678
LD  0   1            ; 4679
LDC 199              ; 4680
CEQ                  ; 4681
TSEL    7927 4683    ; 4682
LD  0   1            ; 4683
LDC 200              ; 4684
CEQ                  ; 4685
TSEL    7937 4687    ; 4686
LD  0   1            ; 4687
LDC 201              ; 4688
CEQ                  ; 4689
TSEL    7947 4691    ; 4690
LD  0   1            ; 4691
LDC 202              ; 4692
CEQ                  ; 4693
TSEL    7957 4695    ; 4694
LD  0   1            ; 4695
LDC 203              ; 4696
CEQ                  ; 4697
TSEL    7967 4699    ; 4698
LD  0   1            ; 4699
LDC 204              ; 4700
CEQ                  ; 4701
TSEL    7977 4703    ; 4702
LD  0   1            ; 4703
LDC 205              ; 4704
CEQ                  ; 4705
TSEL    7987 4707    ; 4706
LD  0   1            ; 4707
LDC 206              ; 4708
CEQ                  ; 4709
TSEL    7997 4711    ; 4710
LD  0   1            ; 4711
LDC 207              ; 4712
CEQ                  ; 4713
TSEL    8007 4715    ; 4714
LD  0   1            ; 4715
LDC 208              ; 4716
CEQ                  ; 4717
TSEL    8017 4719    ; 4718
LD  0   1            ; 4719
LDC 209              ; 4720
CEQ                  ; 4721
TSEL    8027 4723    ; 4722
LD  0   1            ; 4723
LDC 210              ; 4724
CEQ                  ; 4725
TSEL    8037 4727    ; 4726
LD  0   1            ; 4727
LDC 211              ; 4728
CEQ                  ; 4729
TSEL    8047 4731    ; 4730
LD  0   1            ; 4731
LDC 212              ; 4732
CEQ                  ; 4733
TSEL    8057 4735    ; 4734
LD  0   1            ; 4735
LDC 213              ; 4736
CEQ                  ; 4737
TSEL    8067 4739    ; 4738
LD  0   1            ; 4739
LDC 214              ; 4740
CEQ                  ; 4741
TSEL    8077 4743    ; 4742
LD  0   1            ; 4743
LDC 215              ; 4744
CEQ                  ; 4745
TSEL    8087 4747    ; 4746
LD  0   1            ; 4747
LDC 216              ; 4748
CEQ                  ; 4749
TSEL    8097 4751    ; 4750
LD  0   1            ; 4751
LDC 217              ; 4752
CEQ                  ; 4753
TSEL    8107 4755    ; 4754
LD  0   1            ; 4755
LDC 218              ; 4756
CEQ                  ; 4757
TSEL    8117 4759    ; 4758
LD  0   1            ; 4759
LDC 219              ; 4760
CEQ                  ; 4761
TSEL    8127 4763    ; 4762
LD  0   1            ; 4763
LDC 220              ; 4764
CEQ                  ; 4765
TSEL    8137 4767    ; 4766
LD  0   1            ; 4767
LDC 221              ; 4768
CEQ                  ; 4769
TSEL    8147 4771    ; 4770
LD  0   1            ; 4771
LDC 222              ; 4772
CEQ                  ; 4773
TSEL    8157 4775    ; 4774
LD  0   1            ; 4775
LDC 223              ; 4776
CEQ                  ; 4777
TSEL    8167 4779    ; 4778
LD  0   1            ; 4779
LDC 224              ; 4780
CEQ                  ; 4781
TSEL    8177 4783    ; 4782
LD  0   1            ; 4783
LDC 225              ; 4784
CEQ                  ; 4785
TSEL    8187 4787    ; 4786
LD  0   1            ; 4787
LDC 226              ; 4788
CEQ                  ; 4789
TSEL    8197 4791    ; 4790
LD  0   1            ; 4791
LDC 227              ; 4792
CEQ                  ; 4793
TSEL    8207 4795    ; 4794
LD  0   1            ; 4795
LDC 228              ; 4796
CEQ                  ; 4797
TSEL    8217 4799    ; 4798
LD  0   1            ; 4799
LDC 229              ; 4800
CEQ                  ; 4801
TSEL    8227 4803    ; 4802
LD  0   1            ; 4803
LDC 230              ; 4804
CEQ                  ; 4805
TSEL    8237 4807    ; 4806
LD  0   1            ; 4807
LDC 231              ; 4808
CEQ                  ; 4809
TSEL    8247 4811    ; 4810
LD  0   1            ; 4811
LDC 232              ; 4812
CEQ                  ; 4813
TSEL    8257 4815    ; 4814
LD  0   1            ; 4815
LDC 233              ; 4816
CEQ                  ; 4817
TSEL    8267 4819    ; 4818
LD  0   1            ; 4819
LDC 234              ; 4820
CEQ                  ; 4821
TSEL    8277 4823    ; 4822
LD  0   1            ; 4823
LDC 235              ; 4824
CEQ                  ; 4825
TSEL    8287 4827    ; 4826
LD  0   1            ; 4827
LDC 236              ; 4828
CEQ                  ; 4829
TSEL    8297 4831    ; 4830
LD  0   1            ; 4831
LDC 237              ; 4832
CEQ                  ; 4833
TSEL    8307 4835    ; 4834
LD  0   1            ; 4835
LDC 238              ; 4836
CEQ                  ; 4837
TSEL    8317 4839    ; 4838
LD  0   1            ; 4839
LDC 239              ; 4840
CEQ                  ; 4841
TSEL    8327 4843    ; 4842
LD  0   1            ; 4843
LDC 240              ; 4844
CEQ                  ; 4845
TSEL    8337 4847    ; 4846
LD  0   1            ; 4847
LDC 241              ; 4848
CEQ                  ; 4849
TSEL    8347 4851    ; 4850
LD  0   1            ; 4851
LDC 242              ; 4852
CEQ                  ; 4853
TSEL    8357 4855    ; 4854
LD  0   1            ; 4855
LDC 243              ; 4856
CEQ                  ; 4857
TSEL    8367 4859    ; 4858
LD  0   1            ; 4859
LDC 244              ; 4860
CEQ                  ; 4861
TSEL    8377 4863    ; 4862
LD  0   1            ; 4863
LDC 245              ; 4864
CEQ                  ; 4865
TSEL    8387 4867    ; 4866
LD  0   1            ; 4867
LDC 246              ; 4868
CEQ                  ; 4869
TSEL    8397 4871    ; 4870
LD  0   1            ; 4871
LDC 247              ; 4872
CEQ                  ; 4873
TSEL    8407 4875    ; 4874
LD  0   1            ; 4875
LDC 248              ; 4876
CEQ                  ; 4877
TSEL    8417 4879    ; 4878
LD  0   1            ; 4879
LDC 249              ; 4880
CEQ                  ; 4881
TSEL    8427 4883    ; 4882
LD  0   1            ; 4883
LDC 250              ; 4884
CEQ                  ; 4885
TSEL    8437 4887    ; 4886
LD  0   1            ; 4887
LDC 251              ; 4888
CEQ                  ; 4889
TSEL    8447 4891    ; 4890
LD  0   1            ; 4891
LDC 252              ; 4892
CEQ                  ; 4893
TSEL    8457 4895    ; 4894
LD  0   1            ; 4895
LDC 253              ; 4896
CEQ                  ; 4897
TSEL    8467 4899    ; 4898
LD  0   1            ; 4899
LDC 254              ; 4900
CEQ                  ; 4901
TSEL    8477 4903    ; 4902
LD  0   1            ; 4903
LDC 255              ; 4904
CEQ                  ; 4905
TSEL    8487 4907    ; 4906
LDC  0               ; 4907
RTN                  ; 4908
LD  0   1            ; 4909
LDC 0                ; 4910
CEQ                  ; 4911
TSEL    5943 4913    ; 4912
LD  0   1            ; 4913
LDC 1                ; 4914
CEQ                  ; 4915
TSEL    5953 4917    ; 4916
LD  0   1            ; 4917
LDC 2                ; 4918
CEQ                  ; 4919
TSEL    5963 4921    ; 4920
LD  0   1            ; 4921
LDC 3                ; 4922
CEQ                  ; 4923
TSEL    5973 4925    ; 4924
LD  0   1            ; 4925
LDC 4                ; 4926
CEQ                  ; 4927
TSEL    5983 4929    ; 4928
LD  0   1            ; 4929
LDC 5                ; 4930
CEQ                  ; 4931
TSEL    5993 4933    ; 4932
LD  0   1            ; 4933
LDC 6                ; 4934
CEQ                  ; 4935
TSEL    6003 4937    ; 4936
LD  0   1            ; 4937
LDC 7                ; 4938
CEQ                  ; 4939
TSEL    6013 4941    ; 4940
LD  0   1            ; 4941
LDC 8                ; 4942
CEQ                  ; 4943
TSEL    6023 4945    ; 4944
LD  0   1            ; 4945
LDC 9                ; 4946
CEQ                  ; 4947
TSEL    6033 4949    ; 4948
LD  0   1            ; 4949
LDC 10               ; 4950
CEQ                  ; 4951
TSEL    6043 4953    ; 4952
LD  0   1            ; 4953
LDC 11               ; 4954
CEQ                  ; 4955
TSEL    6053 4957    ; 4956
LD  0   1            ; 4957
LDC 12               ; 4958
CEQ                  ; 4959
TSEL    6063 4961    ; 4960
LD  0   1            ; 4961
LDC 13               ; 4962
CEQ                  ; 4963
TSEL    6073 4965    ; 4964
LD  0   1            ; 4965
LDC 14               ; 4966
CEQ                  ; 4967
TSEL    6083 4969    ; 4968
LD  0   1            ; 4969
LDC 15               ; 4970
CEQ                  ; 4971
TSEL    6093 4973    ; 4972
LD  0   1            ; 4973
LDC 16               ; 4974
CEQ                  ; 4975
TSEL    6103 4977    ; 4976
LD  0   1            ; 4977
LDC 17               ; 4978
CEQ                  ; 4979
TSEL    6113 4981    ; 4980
LD  0   1            ; 4981
LDC 18               ; 4982
CEQ                  ; 4983
TSEL    6123 4985    ; 4984
LD  0   1            ; 4985
LDC 19               ; 4986
CEQ                  ; 4987
TSEL    6133 4989    ; 4988
LD  0   1            ; 4989
LDC 20               ; 4990
CEQ                  ; 4991
TSEL    6143 4993    ; 4992
LD  0   1            ; 4993
LDC 21               ; 4994
CEQ                  ; 4995
TSEL    6153 4997    ; 4996
LD  0   1            ; 4997
LDC 22               ; 4998
CEQ                  ; 4999
TSEL    6163 5001    ; 5000
LD  0   1            ; 5001
LDC 23               ; 5002
CEQ                  ; 5003
TSEL    6173 5005    ; 5004
LD  0   1            ; 5005
LDC 24               ; 5006
CEQ                  ; 5007
TSEL    6183 5009    ; 5008
LD  0   1            ; 5009
LDC 25               ; 5010
CEQ                  ; 5011
TSEL    6193 5013    ; 5012
LD  0   1            ; 5013
LDC 26               ; 5014
CEQ                  ; 5015
TSEL    6203 5017    ; 5016
LD  0   1            ; 5017
LDC 27               ; 5018
CEQ                  ; 5019
TSEL    6213 5021    ; 5020
LD  0   1            ; 5021
LDC 28               ; 5022
CEQ                  ; 5023
TSEL    6223 5025    ; 5024
LD  0   1            ; 5025
LDC 29               ; 5026
CEQ                  ; 5027
TSEL    6233 5029    ; 5028
LD  0   1            ; 5029
LDC 30               ; 5030
CEQ                  ; 5031
TSEL    6243 5033    ; 5032
LD  0   1            ; 5033
LDC 31               ; 5034
CEQ                  ; 5035
TSEL    6253 5037    ; 5036
LD  0   1            ; 5037
LDC 32               ; 5038
CEQ                  ; 5039
TSEL    6263 5041    ; 5040
LD  0   1            ; 5041
LDC 33               ; 5042
CEQ                  ; 5043
TSEL    6273 5045    ; 5044
LD  0   1            ; 5045
LDC 34               ; 5046
CEQ                  ; 5047
TSEL    6283 5049    ; 5048
LD  0   1            ; 5049
LDC 35               ; 5050
CEQ                  ; 5051
TSEL    6293 5053    ; 5052
LD  0   1            ; 5053
LDC 36               ; 5054
CEQ                  ; 5055
TSEL    6303 5057    ; 5056
LD  0   1            ; 5057
LDC 37               ; 5058
CEQ                  ; 5059
TSEL    6313 5061    ; 5060
LD  0   1            ; 5061
LDC 38               ; 5062
CEQ                  ; 5063
TSEL    6323 5065    ; 5064
LD  0   1            ; 5065
LDC 39               ; 5066
CEQ                  ; 5067
TSEL    6333 5069    ; 5068
LD  0   1            ; 5069
LDC 40               ; 5070
CEQ                  ; 5071
TSEL    6343 5073    ; 5072
LD  0   1            ; 5073
LDC 41               ; 5074
CEQ                  ; 5075
TSEL    6353 5077    ; 5076
LD  0   1            ; 5077
LDC 42               ; 5078
CEQ                  ; 5079
TSEL    6363 5081    ; 5080
LD  0   1            ; 5081
LDC 43               ; 5082
CEQ                  ; 5083
TSEL    6373 5085    ; 5084
LD  0   1            ; 5085
LDC 44               ; 5086
CEQ                  ; 5087
TSEL    6383 5089    ; 5088
LD  0   1            ; 5089
LDC 45               ; 5090
CEQ                  ; 5091
TSEL    6393 5093    ; 5092
LD  0   1            ; 5093
LDC 46               ; 5094
CEQ                  ; 5095
TSEL    6403 5097    ; 5096
LD  0   1            ; 5097
LDC 47               ; 5098
CEQ                  ; 5099
TSEL    6413 5101    ; 5100
LD  0   1            ; 5101
LDC 48               ; 5102
CEQ                  ; 5103
TSEL    6423 5105    ; 5104
LD  0   1            ; 5105
LDC 49               ; 5106
CEQ                  ; 5107
TSEL    6433 5109    ; 5108
LD  0   1            ; 5109
LDC 50               ; 5110
CEQ                  ; 5111
TSEL    6443 5113    ; 5112
LD  0   1            ; 5113
LDC 51               ; 5114
CEQ                  ; 5115
TSEL    6453 5117    ; 5116
LD  0   1            ; 5117
LDC 52               ; 5118
CEQ                  ; 5119
TSEL    6463 5121    ; 5120
LD  0   1            ; 5121
LDC 53               ; 5122
CEQ                  ; 5123
TSEL    6473 5125    ; 5124
LD  0   1            ; 5125
LDC 54               ; 5126
CEQ                  ; 5127
TSEL    6483 5129    ; 5128
LD  0   1            ; 5129
LDC 55               ; 5130
CEQ                  ; 5131
TSEL    6493 5133    ; 5132
LD  0   1            ; 5133
LDC 56               ; 5134
CEQ                  ; 5135
TSEL    6503 5137    ; 5136
LD  0   1            ; 5137
LDC 57               ; 5138
CEQ                  ; 5139
TSEL    6513 5141    ; 5140
LD  0   1            ; 5141
LDC 58               ; 5142
CEQ                  ; 5143
TSEL    6523 5145    ; 5144
LD  0   1            ; 5145
LDC 59               ; 5146
CEQ                  ; 5147
TSEL    6533 5149    ; 5148
LD  0   1            ; 5149
LDC 60               ; 5150
CEQ                  ; 5151
TSEL    6543 5153    ; 5152
LD  0   1            ; 5153
LDC 61               ; 5154
CEQ                  ; 5155
TSEL    6553 5157    ; 5156
LD  0   1            ; 5157
LDC 62               ; 5158
CEQ                  ; 5159
TSEL    6563 5161    ; 5160
LD  0   1            ; 5161
LDC 63               ; 5162
CEQ                  ; 5163
TSEL    6573 5165    ; 5164
LD  0   1            ; 5165
LDC 64               ; 5166
CEQ                  ; 5167
TSEL    6583 5169    ; 5168
LD  0   1            ; 5169
LDC 65               ; 5170
CEQ                  ; 5171
TSEL    6593 5173    ; 5172
LD  0   1            ; 5173
LDC 66               ; 5174
CEQ                  ; 5175
TSEL    6603 5177    ; 5176
LD  0   1            ; 5177
LDC 67               ; 5178
CEQ                  ; 5179
TSEL    6613 5181    ; 5180
LD  0   1            ; 5181
LDC 68               ; 5182
CEQ                  ; 5183
TSEL    6623 5185    ; 5184
LD  0   1            ; 5185
LDC 69               ; 5186
CEQ                  ; 5187
TSEL    6633 5189    ; 5188
LD  0   1            ; 5189
LDC 70               ; 5190
CEQ                  ; 5191
TSEL    6643 5193    ; 5192
LD  0   1            ; 5193
LDC 71               ; 5194
CEQ                  ; 5195
TSEL    6653 5197    ; 5196
LD  0   1            ; 5197
LDC 72               ; 5198
CEQ                  ; 5199
TSEL    6663 5201    ; 5200
LD  0   1            ; 5201
LDC 73               ; 5202
CEQ                  ; 5203
TSEL    6673 5205    ; 5204
LD  0   1            ; 5205
LDC 74               ; 5206
CEQ                  ; 5207
TSEL    6683 5209    ; 5208
LD  0   1            ; 5209
LDC 75               ; 5210
CEQ                  ; 5211
TSEL    6693 5213    ; 5212
LD  0   1            ; 5213
LDC 76               ; 5214
CEQ                  ; 5215
TSEL    6703 5217    ; 5216
LD  0   1            ; 5217
LDC 77               ; 5218
CEQ                  ; 5219
TSEL    6713 5221    ; 5220
LD  0   1            ; 5221
LDC 78               ; 5222
CEQ                  ; 5223
TSEL    6723 5225    ; 5224
LD  0   1            ; 5225
LDC 79               ; 5226
CEQ                  ; 5227
TSEL    6733 5229    ; 5228
LD  0   1            ; 5229
LDC 80               ; 5230
CEQ                  ; 5231
TSEL    6743 5233    ; 5232
LD  0   1            ; 5233
LDC 81               ; 5234
CEQ                  ; 5235
TSEL    6753 5237    ; 5236
LD  0   1            ; 5237
LDC 82               ; 5238
CEQ                  ; 5239
TSEL    6763 5241    ; 5240
LD  0   1            ; 5241
LDC 83               ; 5242
CEQ                  ; 5243
TSEL    6773 5245    ; 5244
LD  0   1            ; 5245
LDC 84               ; 5246
CEQ                  ; 5247
TSEL    6783 5249    ; 5248
LD  0   1            ; 5249
LDC 85               ; 5250
CEQ                  ; 5251
TSEL    6793 5253    ; 5252
LD  0   1            ; 5253
LDC 86               ; 5254
CEQ                  ; 5255
TSEL    6803 5257    ; 5256
LD  0   1            ; 5257
LDC 87               ; 5258
CEQ                  ; 5259
TSEL    6813 5261    ; 5260
LD  0   1            ; 5261
LDC 88               ; 5262
CEQ                  ; 5263
TSEL    6823 5265    ; 5264
LD  0   1            ; 5265
LDC 89               ; 5266
CEQ                  ; 5267
TSEL    6833 5269    ; 5268
LD  0   1            ; 5269
LDC 90               ; 5270
CEQ                  ; 5271
TSEL    6843 5273    ; 5272
LD  0   1            ; 5273
LDC 91               ; 5274
CEQ                  ; 5275
TSEL    6853 5277    ; 5276
LD  0   1            ; 5277
LDC 92               ; 5278
CEQ                  ; 5279
TSEL    6863 5281    ; 5280
LD  0   1            ; 5281
LDC 93               ; 5282
CEQ                  ; 5283
TSEL    6873 5285    ; 5284
LD  0   1            ; 5285
LDC 94               ; 5286
CEQ                  ; 5287
TSEL    6883 5289    ; 5288
LD  0   1            ; 5289
LDC 95               ; 5290
CEQ                  ; 5291
TSEL    6893 5293    ; 5292
LD  0   1            ; 5293
LDC 96               ; 5294
CEQ                  ; 5295
TSEL    6903 5297    ; 5296
LD  0   1            ; 5297
LDC 97               ; 5298
CEQ                  ; 5299
TSEL    6913 5301    ; 5300
LD  0   1            ; 5301
LDC 98               ; 5302
CEQ                  ; 5303
TSEL    6923 5305    ; 5304
LD  0   1            ; 5305
LDC 99               ; 5306
CEQ                  ; 5307
TSEL    6933 5309    ; 5308
LD  0   1            ; 5309
LDC 100              ; 5310
CEQ                  ; 5311
TSEL    6943 5313    ; 5312
LD  0   1            ; 5313
LDC 101              ; 5314
CEQ                  ; 5315
TSEL    6953 5317    ; 5316
LD  0   1            ; 5317
LDC 102              ; 5318
CEQ                  ; 5319
TSEL    6963 5321    ; 5320
LD  0   1            ; 5321
LDC 103              ; 5322
CEQ                  ; 5323
TSEL    6973 5325    ; 5324
LD  0   1            ; 5325
LDC 104              ; 5326
CEQ                  ; 5327
TSEL    6983 5329    ; 5328
LD  0   1            ; 5329
LDC 105              ; 5330
CEQ                  ; 5331
TSEL    6993 5333    ; 5332
LD  0   1            ; 5333
LDC 106              ; 5334
CEQ                  ; 5335
TSEL    7003 5337    ; 5336
LD  0   1            ; 5337
LDC 107              ; 5338
CEQ                  ; 5339
TSEL    7013 5341    ; 5340
LD  0   1            ; 5341
LDC 108              ; 5342
CEQ                  ; 5343
TSEL    7023 5345    ; 5344
LD  0   1            ; 5345
LDC 109              ; 5346
CEQ                  ; 5347
TSEL    7033 5349    ; 5348
LD  0   1            ; 5349
LDC 110              ; 5350
CEQ                  ; 5351
TSEL    7043 5353    ; 5352
LD  0   1            ; 5353
LDC 111              ; 5354
CEQ                  ; 5355
TSEL    7053 5357    ; 5356
LD  0   1            ; 5357
LDC 112              ; 5358
CEQ                  ; 5359
TSEL    7063 5361    ; 5360
LD  0   1            ; 5361
LDC 113              ; 5362
CEQ                  ; 5363
TSEL    7073 5365    ; 5364
LD  0   1            ; 5365
LDC 114              ; 5366
CEQ                  ; 5367
TSEL    7083 5369    ; 5368
LD  0   1            ; 5369
LDC 115              ; 5370
CEQ                  ; 5371
TSEL    7093 5373    ; 5372
LD  0   1            ; 5373
LDC 116              ; 5374
CEQ                  ; 5375
TSEL    7103 5377    ; 5376
LD  0   1            ; 5377
LDC 117              ; 5378
CEQ                  ; 5379
TSEL    7113 5381    ; 5380
LD  0   1            ; 5381
LDC 118              ; 5382
CEQ                  ; 5383
TSEL    7123 5385    ; 5384
LD  0   1            ; 5385
LDC 119              ; 5386
CEQ                  ; 5387
TSEL    7133 5389    ; 5388
LD  0   1            ; 5389
LDC 120              ; 5390
CEQ                  ; 5391
TSEL    7143 5393    ; 5392
LD  0   1            ; 5393
LDC 121              ; 5394
CEQ                  ; 5395
TSEL    7153 5397    ; 5396
LD  0   1            ; 5397
LDC 122              ; 5398
CEQ                  ; 5399
TSEL    7163 5401    ; 5400
LD  0   1            ; 5401
LDC 123              ; 5402
CEQ                  ; 5403
TSEL    7173 5405    ; 5404
LD  0   1            ; 5405
LDC 124              ; 5406
CEQ                  ; 5407
TSEL    7183 5409    ; 5408
LD  0   1            ; 5409
LDC 125              ; 5410
CEQ                  ; 5411
TSEL    7193 5413    ; 5412
LD  0   1            ; 5413
LDC 126              ; 5414
CEQ                  ; 5415
TSEL    7203 5417    ; 5416
LD  0   1            ; 5417
LDC 127              ; 5418
CEQ                  ; 5419
TSEL    7213 5421    ; 5420
LD  0   1            ; 5421
LDC 128              ; 5422
CEQ                  ; 5423
TSEL    7223 5425    ; 5424
LD  0   1            ; 5425
LDC 129              ; 5426
CEQ                  ; 5427
TSEL    7233 5429    ; 5428
LD  0   1            ; 5429
LDC 130              ; 5430
CEQ                  ; 5431
TSEL    7243 5433    ; 5432
LD  0   1            ; 5433
LDC 131              ; 5434
CEQ                  ; 5435
TSEL    7253 5437    ; 5436
LD  0   1            ; 5437
LDC 132              ; 5438
CEQ                  ; 5439
TSEL    7263 5441    ; 5440
LD  0   1            ; 5441
LDC 133              ; 5442
CEQ                  ; 5443
TSEL    7273 5445    ; 5444
LD  0   1            ; 5445
LDC 134              ; 5446
CEQ                  ; 5447
TSEL    7283 5449    ; 5448
LD  0   1            ; 5449
LDC 135              ; 5450
CEQ                  ; 5451
TSEL    7293 5453    ; 5452
LD  0   1            ; 5453
LDC 136              ; 5454
CEQ                  ; 5455
TSEL    7303 5457    ; 5456
LD  0   1            ; 5457
LDC 137              ; 5458
CEQ                  ; 5459
TSEL    7313 5461    ; 5460
LD  0   1            ; 5461
LDC 138              ; 5462
CEQ                  ; 5463
TSEL    7323 5465    ; 5464
LD  0   1            ; 5465
LDC 139              ; 5466
CEQ                  ; 5467
TSEL    7333 5469    ; 5468
LD  0   1            ; 5469
LDC 140              ; 5470
CEQ                  ; 5471
TSEL    7343 5473    ; 5472
LD  0   1            ; 5473
LDC 141              ; 5474
CEQ                  ; 5475
TSEL    7353 5477    ; 5476
LD  0   1            ; 5477
LDC 142              ; 5478
CEQ                  ; 5479
TSEL    7363 5481    ; 5480
LD  0   1            ; 5481
LDC 143              ; 5482
CEQ                  ; 5483
TSEL    7373 5485    ; 5484
LD  0   1            ; 5485
LDC 144              ; 5486
CEQ                  ; 5487
TSEL    7383 5489    ; 5488
LD  0   1            ; 5489
LDC 145              ; 5490
CEQ                  ; 5491
TSEL    7393 5493    ; 5492
LD  0   1            ; 5493
LDC 146              ; 5494
CEQ                  ; 5495
TSEL    7403 5497    ; 5496
LD  0   1            ; 5497
LDC 147              ; 5498
CEQ                  ; 5499
TSEL    7413 5501    ; 5500
LD  0   1            ; 5501
LDC 148              ; 5502
CEQ                  ; 5503
TSEL    7423 5505    ; 5504
LD  0   1            ; 5505
LDC 149              ; 5506
CEQ                  ; 5507
TSEL    7433 5509    ; 5508
LD  0   1            ; 5509
LDC 150              ; 5510
CEQ                  ; 5511
TSEL    7443 5513    ; 5512
LD  0   1            ; 5513
LDC 151              ; 5514
CEQ                  ; 5515
TSEL    7453 5517    ; 5516
LD  0   1            ; 5517
LDC 152              ; 5518
CEQ                  ; 5519
TSEL    7463 5521    ; 5520
LD  0   1            ; 5521
LDC 153              ; 5522
CEQ                  ; 5523
TSEL    7473 5525    ; 5524
LD  0   1            ; 5525
LDC 154              ; 5526
CEQ                  ; 5527
TSEL    7483 5529    ; 5528
LD  0   1            ; 5529
LDC 155              ; 5530
CEQ                  ; 5531
TSEL    7493 5533    ; 5532
LD  0   1            ; 5533
LDC 156              ; 5534
CEQ                  ; 5535
TSEL    7503 5537    ; 5536
LD  0   1            ; 5537
LDC 157              ; 5538
CEQ                  ; 5539
TSEL    7513 5541    ; 5540
LD  0   1            ; 5541
LDC 158              ; 5542
CEQ                  ; 5543
TSEL    7523 5545    ; 5544
LD  0   1            ; 5545
LDC 159              ; 5546
CEQ                  ; 5547
TSEL    7533 5549    ; 5548
LD  0   1            ; 5549
LDC 160              ; 5550
CEQ                  ; 5551
TSEL    7543 5553    ; 5552
LD  0   1            ; 5553
LDC 161              ; 5554
CEQ                  ; 5555
TSEL    7553 5557    ; 5556
LD  0   1            ; 5557
LDC 162              ; 5558
CEQ                  ; 5559
TSEL    7563 5561    ; 5560
LD  0   1            ; 5561
LDC 163              ; 5562
CEQ                  ; 5563
TSEL    7573 5565    ; 5564
LD  0   1            ; 5565
LDC 164              ; 5566
CEQ                  ; 5567
TSEL    7583 5569    ; 5568
LD  0   1            ; 5569
LDC 165              ; 5570
CEQ                  ; 5571
TSEL    7593 5573    ; 5572
LD  0   1            ; 5573
LDC 166              ; 5574
CEQ                  ; 5575
TSEL    7603 5577    ; 5576
LD  0   1            ; 5577
LDC 167              ; 5578
CEQ                  ; 5579
TSEL    7613 5581    ; 5580
LD  0   1            ; 5581
LDC 168              ; 5582
CEQ                  ; 5583
TSEL    7623 5585    ; 5584
LD  0   1            ; 5585
LDC 169              ; 5586
CEQ                  ; 5587
TSEL    7633 5589    ; 5588
LD  0   1            ; 5589
LDC 170              ; 5590
CEQ                  ; 5591
TSEL    7643 5593    ; 5592
LD  0   1            ; 5593
LDC 171              ; 5594
CEQ                  ; 5595
TSEL    7653 5597    ; 5596
LD  0   1            ; 5597
LDC 172              ; 5598
CEQ                  ; 5599
TSEL    7663 5601    ; 5600
LD  0   1            ; 5601
LDC 173              ; 5602
CEQ                  ; 5603
TSEL    7673 5605    ; 5604
LD  0   1            ; 5605
LDC 174              ; 5606
CEQ                  ; 5607
TSEL    7683 5609    ; 5608
LD  0   1            ; 5609
LDC 175              ; 5610
CEQ                  ; 5611
TSEL    7693 5613    ; 5612
LD  0   1            ; 5613
LDC 176              ; 5614
CEQ                  ; 5615
TSEL    7703 5617    ; 5616
LD  0   1            ; 5617
LDC 177              ; 5618
CEQ                  ; 5619
TSEL    7713 5621    ; 5620
LD  0   1            ; 5621
LDC 178              ; 5622
CEQ                  ; 5623
TSEL    7723 5625    ; 5624
LD  0   1            ; 5625
LDC 179              ; 5626
CEQ                  ; 5627
TSEL    7733 5629    ; 5628
LD  0   1            ; 5629
LDC 180              ; 5630
CEQ                  ; 5631
TSEL    7743 5633    ; 5632
LD  0   1            ; 5633
LDC 181              ; 5634
CEQ                  ; 5635
TSEL    7753 5637    ; 5636
LD  0   1            ; 5637
LDC 182              ; 5638
CEQ                  ; 5639
TSEL    7763 5641    ; 5640
LD  0   1            ; 5641
LDC 183              ; 5642
CEQ                  ; 5643
TSEL    7773 5645    ; 5644
LD  0   1            ; 5645
LDC 184              ; 5646
CEQ                  ; 5647
TSEL    7783 5649    ; 5648
LD  0   1            ; 5649
LDC 185              ; 5650
CEQ                  ; 5651
TSEL    7793 5653    ; 5652
LD  0   1            ; 5653
LDC 186              ; 5654
CEQ                  ; 5655
TSEL    7803 5657    ; 5656
LD  0   1            ; 5657
LDC 187              ; 5658
CEQ                  ; 5659
TSEL    7813 5661    ; 5660
LD  0   1            ; 5661
LDC 188              ; 5662
CEQ                  ; 5663
TSEL    7823 5665    ; 5664
LD  0   1            ; 5665
LDC 189              ; 5666
CEQ                  ; 5667
TSEL    7833 5669    ; 5668
LD  0   1            ; 5669
LDC 190              ; 5670
CEQ                  ; 5671
TSEL    7843 5673    ; 5672
LD  0   1            ; 5673
LDC 191              ; 5674
CEQ                  ; 5675
TSEL    7853 5677    ; 5676
LD  0   1            ; 5677
LDC 192              ; 5678
CEQ                  ; 5679
TSEL    7863 5681    ; 5680
LD  0   1            ; 5681
LDC 193              ; 5682
CEQ                  ; 5683
TSEL    7873 5685    ; 5684
LD  0   1            ; 5685
LDC 194              ; 5686
CEQ                  ; 5687
TSEL    7883 5689    ; 5688
LD  0   1            ; 5689
LDC 195              ; 5690
CEQ                  ; 5691
TSEL    7893 5693    ; 5692
LD  0   1            ; 5693
LDC 196              ; 5694
CEQ                  ; 5695
TSEL    7903 5697    ; 5696
LD  0   1            ; 5697
LDC 197              ; 5698
CEQ                  ; 5699
TSEL    7913 5701    ; 5700
LD  0   1            ; 5701
LDC 198              ; 5702
CEQ                  ; 5703
TSEL    7923 5705    ; 5704
LD  0   1            ; 5705
LDC 199              ; 5706
CEQ                  ; 5707
TSEL    7933 5709    ; 5708
LD  0   1            ; 5709
LDC 200              ; 5710
CEQ                  ; 5711
TSEL    7943 5713    ; 5712
LD  0   1            ; 5713
LDC 201              ; 5714
CEQ                  ; 5715
TSEL    7953 5717    ; 5716
LD  0   1            ; 5717
LDC 202              ; 5718
CEQ                  ; 5719
TSEL    7963 5721    ; 5720
LD  0   1            ; 5721
LDC 203              ; 5722
CEQ                  ; 5723
TSEL    7973 5725    ; 5724
LD  0   1            ; 5725
LDC 204              ; 5726
CEQ                  ; 5727
TSEL    7983 5729    ; 5728
LD  0   1            ; 5729
LDC 205              ; 5730
CEQ                  ; 5731
TSEL    7993 5733    ; 5732
LD  0   1            ; 5733
LDC 206              ; 5734
CEQ                  ; 5735
TSEL    8003 5737    ; 5736
LD  0   1            ; 5737
LDC 207              ; 5738
CEQ                  ; 5739
TSEL    8013 5741    ; 5740
LD  0   1            ; 5741
LDC 208              ; 5742
CEQ                  ; 5743
TSEL    8023 5745    ; 5744
LD  0   1            ; 5745
LDC 209              ; 5746
CEQ                  ; 5747
TSEL    8033 5749    ; 5748
LD  0   1            ; 5749
LDC 210              ; 5750
CEQ                  ; 5751
TSEL    8043 5753    ; 5752
LD  0   1            ; 5753
LDC 211              ; 5754
CEQ                  ; 5755
TSEL    8053 5757    ; 5756
LD  0   1            ; 5757
LDC 212              ; 5758
CEQ                  ; 5759
TSEL    8063 5761    ; 5760
LD  0   1            ; 5761
LDC 213              ; 5762
CEQ                  ; 5763
TSEL    8073 5765    ; 5764
LD  0   1            ; 5765
LDC 214              ; 5766
CEQ                  ; 5767
TSEL    8083 5769    ; 5768
LD  0   1            ; 5769
LDC 215              ; 5770
CEQ                  ; 5771
TSEL    8093 5773    ; 5772
LD  0   1            ; 5773
LDC 216              ; 5774
CEQ                  ; 5775
TSEL    8103 5777    ; 5776
LD  0   1            ; 5777
LDC 217              ; 5778
CEQ                  ; 5779
TSEL    8113 5781    ; 5780
LD  0   1            ; 5781
LDC 218              ; 5782
CEQ                  ; 5783
TSEL    8123 5785    ; 5784
LD  0   1            ; 5785
LDC 219              ; 5786
CEQ                  ; 5787
TSEL    8133 5789    ; 5788
LD  0   1            ; 5789
LDC 220              ; 5790
CEQ                  ; 5791
TSEL    8143 5793    ; 5792
LD  0   1            ; 5793
LDC 221              ; 5794
CEQ                  ; 5795
TSEL    8153 5797    ; 5796
LD  0   1            ; 5797
LDC 222              ; 5798
CEQ                  ; 5799
TSEL    8163 5801    ; 5800
LD  0   1            ; 5801
LDC 223              ; 5802
CEQ                  ; 5803
TSEL    8173 5805    ; 5804
LD  0   1            ; 5805
LDC 224              ; 5806
CEQ                  ; 5807
TSEL    8183 5809    ; 5808
LD  0   1            ; 5809
LDC 225              ; 5810
CEQ                  ; 5811
TSEL    8193 5813    ; 5812
LD  0   1            ; 5813
LDC 226              ; 5814
CEQ                  ; 5815
TSEL    8203 5817    ; 5816
LD  0   1            ; 5817
LDC 227              ; 5818
CEQ                  ; 5819
TSEL    8213 5821    ; 5820
LD  0   1            ; 5821
LDC 228              ; 5822
CEQ                  ; 5823
TSEL    8223 5825    ; 5824
LD  0   1            ; 5825
LDC 229              ; 5826
CEQ                  ; 5827
TSEL    8233 5829    ; 5828
LD  0   1            ; 5829
LDC 230              ; 5830
CEQ                  ; 5831
TSEL    8243 5833    ; 5832
LD  0   1            ; 5833
LDC 231              ; 5834
CEQ                  ; 5835
TSEL    8253 5837    ; 5836
LD  0   1            ; 5837
LDC 232              ; 5838
CEQ                  ; 5839
TSEL    8263 5841    ; 5840
LD  0   1            ; 5841
LDC 233              ; 5842
CEQ                  ; 5843
TSEL    8273 5845    ; 5844
LD  0   1            ; 5845
LDC 234              ; 5846
CEQ                  ; 5847
TSEL    8283 5849    ; 5848
LD  0   1            ; 5849
LDC 235              ; 5850
CEQ                  ; 5851
TSEL    8293 5853    ; 5852
LD  0   1            ; 5853
LDC 236              ; 5854
CEQ                  ; 5855
TSEL    8303 5857    ; 5856
LD  0   1            ; 5857
LDC 237              ; 5858
CEQ                  ; 5859
TSEL    8313 5861    ; 5860
LD  0   1            ; 5861
LDC 238              ; 5862
CEQ                  ; 5863
TSEL    8323 5865    ; 5864
LD  0   1            ; 5865
LDC 239              ; 5866
CEQ                  ; 5867
TSEL    8333 5869    ; 5868
LD  0   1            ; 5869
LDC 240              ; 5870
CEQ                  ; 5871
TSEL    8343 5873    ; 5872
LD  0   1            ; 5873
LDC 241              ; 5874
CEQ                  ; 5875
TSEL    8353 5877    ; 5876
LD  0   1            ; 5877
LDC 242              ; 5878
CEQ                  ; 5879
TSEL    8363 5881    ; 5880
LD  0   1            ; 5881
LDC 243              ; 5882
CEQ                  ; 5883
TSEL    8373 5885    ; 5884
LD  0   1            ; 5885
LDC 244              ; 5886
CEQ                  ; 5887
TSEL    8383 5889    ; 5888
LD  0   1            ; 5889
LDC 245              ; 5890
CEQ                  ; 5891
TSEL    8393 5893    ; 5892
LD  0   1            ; 5893
LDC 246              ; 5894
CEQ                  ; 5895
TSEL    8403 5897    ; 5896
LD  0   1            ; 5897
LDC 247              ; 5898
CEQ                  ; 5899
TSEL    8413 5901    ; 5900
LD  0   1            ; 5901
LDC 248              ; 5902
CEQ                  ; 5903
TSEL    8423 5905    ; 5904
LD  0   1            ; 5905
LDC 249              ; 5906
CEQ                  ; 5907
TSEL    8433 5909    ; 5908
LD  0   1            ; 5909
LDC 250              ; 5910
CEQ                  ; 5911
TSEL    8443 5913    ; 5912
LD  0   1            ; 5913
LDC 251              ; 5914
CEQ                  ; 5915
TSEL    8453 5917    ; 5916
LD  0   1            ; 5917
LDC 252              ; 5918
CEQ                  ; 5919
TSEL    8463 5921    ; 5920
LD  0   1            ; 5921
LDC 253              ; 5922
CEQ                  ; 5923
TSEL    8473 5925    ; 5924
LD  0   1            ; 5925
LDC 254              ; 5926
CEQ                  ; 5927
TSEL    8483 5929    ; 5928
LD  0   1            ; 5929
LDC 255              ; 5930
CEQ                  ; 5931
TSEL    8493 5933    ; 5932
LDC  0               ; 5933
RTN                  ; 5934
LD  2   0            ; 5935
RTN                  ; 5936
LDF 5935             ; 5937
RTN                  ; 5938
LD  2   0            ; 5939
LD  0   0            ; 5940
ST  2   0            ; 5941
RTN                  ; 5942
LDF 5939             ; 5943
RTN                  ; 5944
LD  2   1            ; 5945
RTN                  ; 5946
LDF 5945             ; 5947
RTN                  ; 5948
LD  2   1            ; 5949
LD  0   0            ; 5950
ST  2   1            ; 5951
RTN                  ; 5952
LDF 5949             ; 5953
RTN                  ; 5954
LD  2   2            ; 5955
RTN                  ; 5956
LDF 5955             ; 5957
RTN                  ; 5958
LD  2   2            ; 5959
LD  0   0            ; 5960
ST  2   2            ; 5961
RTN                  ; 5962
LDF 5959             ; 5963
RTN                  ; 5964
LD  2   3            ; 5965
RTN                  ; 5966
LDF 5965             ; 5967
RTN                  ; 5968
LD  2   3            ; 5969
LD  0   0            ; 5970
ST  2   3            ; 5971
RTN                  ; 5972
LDF 5969             ; 5973
RTN                  ; 5974
LD  2   4            ; 5975
RTN                  ; 5976
LDF 5975             ; 5977
RTN                  ; 5978
LD  2   4            ; 5979
LD  0   0            ; 5980
ST  2   4            ; 5981
RTN                  ; 5982
LDF 5979             ; 5983
RTN                  ; 5984
LD  2   5            ; 5985
RTN                  ; 5986
LDF 5985             ; 5987
RTN                  ; 5988
LD  2   5            ; 5989
LD  0   0            ; 5990
ST  2   5            ; 5991
RTN                  ; 5992
LDF 5989             ; 5993
RTN                  ; 5994
LD  2   6            ; 5995
RTN                  ; 5996
LDF 5995             ; 5997
RTN                  ; 5998
LD  2   6            ; 5999
LD  0   0            ; 6000
ST  2   6            ; 6001
RTN                  ; 6002
LDF 5999             ; 6003
RTN                  ; 6004
LD  2   7            ; 6005
RTN                  ; 6006
LDF 6005             ; 6007
RTN                  ; 6008
LD  2   7            ; 6009
LD  0   0            ; 6010
ST  2   7            ; 6011
RTN                  ; 6012
LDF 6009             ; 6013
RTN                  ; 6014
LD  2   8            ; 6015
RTN                  ; 6016
LDF 6015             ; 6017
RTN                  ; 6018
LD  2   8            ; 6019
LD  0   0            ; 6020
ST  2   8            ; 6021
RTN                  ; 6022
LDF 6019             ; 6023
RTN                  ; 6024
LD  2   9            ; 6025
RTN                  ; 6026
LDF 6025             ; 6027
RTN                  ; 6028
LD  2   9            ; 6029
LD  0   0            ; 6030
ST  2   9            ; 6031
RTN                  ; 6032
LDF 6029             ; 6033
RTN                  ; 6034
LD  2   10           ; 6035
RTN                  ; 6036
LDF 6035             ; 6037
RTN                  ; 6038
LD  2   10           ; 6039
LD  0   0            ; 6040
ST  2   10           ; 6041
RTN                  ; 6042
LDF 6039             ; 6043
RTN                  ; 6044
LD  2   11           ; 6045
RTN                  ; 6046
LDF 6045             ; 6047
RTN                  ; 6048
LD  2   11           ; 6049
LD  0   0            ; 6050
ST  2   11           ; 6051
RTN                  ; 6052
LDF 6049             ; 6053
RTN                  ; 6054
LD  2   12           ; 6055
RTN                  ; 6056
LDF 6055             ; 6057
RTN                  ; 6058
LD  2   12           ; 6059
LD  0   0            ; 6060
ST  2   12           ; 6061
RTN                  ; 6062
LDF 6059             ; 6063
RTN                  ; 6064
LD  2   13           ; 6065
RTN                  ; 6066
LDF 6065             ; 6067
RTN                  ; 6068
LD  2   13           ; 6069
LD  0   0            ; 6070
ST  2   13           ; 6071
RTN                  ; 6072
LDF 6069             ; 6073
RTN                  ; 6074
LD  2   14           ; 6075
RTN                  ; 6076
LDF 6075             ; 6077
RTN                  ; 6078
LD  2   14           ; 6079
LD  0   0            ; 6080
ST  2   14           ; 6081
RTN                  ; 6082
LDF 6079             ; 6083
RTN                  ; 6084
LD  2   15           ; 6085
RTN                  ; 6086
LDF 6085             ; 6087
RTN                  ; 6088
LD  2   15           ; 6089
LD  0   0            ; 6090
ST  2   15           ; 6091
RTN                  ; 6092
LDF 6089             ; 6093
RTN                  ; 6094
LD  2   16           ; 6095
RTN                  ; 6096
LDF 6095             ; 6097
RTN                  ; 6098
LD  2   16           ; 6099
LD  0   0            ; 6100
ST  2   16           ; 6101
RTN                  ; 6102
LDF 6099             ; 6103
RTN                  ; 6104
LD  2   17           ; 6105
RTN                  ; 6106
LDF 6105             ; 6107
RTN                  ; 6108
LD  2   17           ; 6109
LD  0   0            ; 6110
ST  2   17           ; 6111
RTN                  ; 6112
LDF 6109             ; 6113
RTN                  ; 6114
LD  2   18           ; 6115
RTN                  ; 6116
LDF 6115             ; 6117
RTN                  ; 6118
LD  2   18           ; 6119
LD  0   0            ; 6120
ST  2   18           ; 6121
RTN                  ; 6122
LDF 6119             ; 6123
RTN                  ; 6124
LD  2   19           ; 6125
RTN                  ; 6126
LDF 6125             ; 6127
RTN                  ; 6128
LD  2   19           ; 6129
LD  0   0            ; 6130
ST  2   19           ; 6131
RTN                  ; 6132
LDF 6129             ; 6133
RTN                  ; 6134
LD  2   20           ; 6135
RTN                  ; 6136
LDF 6135             ; 6137
RTN                  ; 6138
LD  2   20           ; 6139
LD  0   0            ; 6140
ST  2   20           ; 6141
RTN                  ; 6142
LDF 6139             ; 6143
RTN                  ; 6144
LD  2   21           ; 6145
RTN                  ; 6146
LDF 6145             ; 6147
RTN                  ; 6148
LD  2   21           ; 6149
LD  0   0            ; 6150
ST  2   21           ; 6151
RTN                  ; 6152
LDF 6149             ; 6153
RTN                  ; 6154
LD  2   22           ; 6155
RTN                  ; 6156
LDF 6155             ; 6157
RTN                  ; 6158
LD  2   22           ; 6159
LD  0   0            ; 6160
ST  2   22           ; 6161
RTN                  ; 6162
LDF 6159             ; 6163
RTN                  ; 6164
LD  2   23           ; 6165
RTN                  ; 6166
LDF 6165             ; 6167
RTN                  ; 6168
LD  2   23           ; 6169
LD  0   0            ; 6170
ST  2   23           ; 6171
RTN                  ; 6172
LDF 6169             ; 6173
RTN                  ; 6174
LD  2   24           ; 6175
RTN                  ; 6176
LDF 6175             ; 6177
RTN                  ; 6178
LD  2   24           ; 6179
LD  0   0            ; 6180
ST  2   24           ; 6181
RTN                  ; 6182
LDF 6179             ; 6183
RTN                  ; 6184
LD  2   25           ; 6185
RTN                  ; 6186
LDF 6185             ; 6187
RTN                  ; 6188
LD  2   25           ; 6189
LD  0   0            ; 6190
ST  2   25           ; 6191
RTN                  ; 6192
LDF 6189             ; 6193
RTN                  ; 6194
LD  2   26           ; 6195
RTN                  ; 6196
LDF 6195             ; 6197
RTN                  ; 6198
LD  2   26           ; 6199
LD  0   0            ; 6200
ST  2   26           ; 6201
RTN                  ; 6202
LDF 6199             ; 6203
RTN                  ; 6204
LD  2   27           ; 6205
RTN                  ; 6206
LDF 6205             ; 6207
RTN                  ; 6208
LD  2   27           ; 6209
LD  0   0            ; 6210
ST  2   27           ; 6211
RTN                  ; 6212
LDF 6209             ; 6213
RTN                  ; 6214
LD  2   28           ; 6215
RTN                  ; 6216
LDF 6215             ; 6217
RTN                  ; 6218
LD  2   28           ; 6219
LD  0   0            ; 6220
ST  2   28           ; 6221
RTN                  ; 6222
LDF 6219             ; 6223
RTN                  ; 6224
LD  2   29           ; 6225
RTN                  ; 6226
LDF 6225             ; 6227
RTN                  ; 6228
LD  2   29           ; 6229
LD  0   0            ; 6230
ST  2   29           ; 6231
RTN                  ; 6232
LDF 6229             ; 6233
RTN                  ; 6234
LD  2   30           ; 6235
RTN                  ; 6236
LDF 6235             ; 6237
RTN                  ; 6238
LD  2   30           ; 6239
LD  0   0            ; 6240
ST  2   30           ; 6241
RTN                  ; 6242
LDF 6239             ; 6243
RTN                  ; 6244
LD  2   31           ; 6245
RTN                  ; 6246
LDF 6245             ; 6247
RTN                  ; 6248
LD  2   31           ; 6249
LD  0   0            ; 6250
ST  2   31           ; 6251
RTN                  ; 6252
LDF 6249             ; 6253
RTN                  ; 6254
LD  2   32           ; 6255
RTN                  ; 6256
LDF 6255             ; 6257
RTN                  ; 6258
LD  2   32           ; 6259
LD  0   0            ; 6260
ST  2   32           ; 6261
RTN                  ; 6262
LDF 6259             ; 6263
RTN                  ; 6264
LD  2   33           ; 6265
RTN                  ; 6266
LDF 6265             ; 6267
RTN                  ; 6268
LD  2   33           ; 6269
LD  0   0            ; 6270
ST  2   33           ; 6271
RTN                  ; 6272
LDF 6269             ; 6273
RTN                  ; 6274
LD  2   34           ; 6275
RTN                  ; 6276
LDF 6275             ; 6277
RTN                  ; 6278
LD  2   34           ; 6279
LD  0   0            ; 6280
ST  2   34           ; 6281
RTN                  ; 6282
LDF 6279             ; 6283
RTN                  ; 6284
LD  2   35           ; 6285
RTN                  ; 6286
LDF 6285             ; 6287
RTN                  ; 6288
LD  2   35           ; 6289
LD  0   0            ; 6290
ST  2   35           ; 6291
RTN                  ; 6292
LDF 6289             ; 6293
RTN                  ; 6294
LD  2   36           ; 6295
RTN                  ; 6296
LDF 6295             ; 6297
RTN                  ; 6298
LD  2   36           ; 6299
LD  0   0            ; 6300
ST  2   36           ; 6301
RTN                  ; 6302
LDF 6299             ; 6303
RTN                  ; 6304
LD  2   37           ; 6305
RTN                  ; 6306
LDF 6305             ; 6307
RTN                  ; 6308
LD  2   37           ; 6309
LD  0   0            ; 6310
ST  2   37           ; 6311
RTN                  ; 6312
LDF 6309             ; 6313
RTN                  ; 6314
LD  2   38           ; 6315
RTN                  ; 6316
LDF 6315             ; 6317
RTN                  ; 6318
LD  2   38           ; 6319
LD  0   0            ; 6320
ST  2   38           ; 6321
RTN                  ; 6322
LDF 6319             ; 6323
RTN                  ; 6324
LD  2   39           ; 6325
RTN                  ; 6326
LDF 6325             ; 6327
RTN                  ; 6328
LD  2   39           ; 6329
LD  0   0            ; 6330
ST  2   39           ; 6331
RTN                  ; 6332
LDF 6329             ; 6333
RTN                  ; 6334
LD  2   40           ; 6335
RTN                  ; 6336
LDF 6335             ; 6337
RTN                  ; 6338
LD  2   40           ; 6339
LD  0   0            ; 6340
ST  2   40           ; 6341
RTN                  ; 6342
LDF 6339             ; 6343
RTN                  ; 6344
LD  2   41           ; 6345
RTN                  ; 6346
LDF 6345             ; 6347
RTN                  ; 6348
LD  2   41           ; 6349
LD  0   0            ; 6350
ST  2   41           ; 6351
RTN                  ; 6352
LDF 6349             ; 6353
RTN                  ; 6354
LD  2   42           ; 6355
RTN                  ; 6356
LDF 6355             ; 6357
RTN                  ; 6358
LD  2   42           ; 6359
LD  0   0            ; 6360
ST  2   42           ; 6361
RTN                  ; 6362
LDF 6359             ; 6363
RTN                  ; 6364
LD  2   43           ; 6365
RTN                  ; 6366
LDF 6365             ; 6367
RTN                  ; 6368
LD  2   43           ; 6369
LD  0   0            ; 6370
ST  2   43           ; 6371
RTN                  ; 6372
LDF 6369             ; 6373
RTN                  ; 6374
LD  2   44           ; 6375
RTN                  ; 6376
LDF 6375             ; 6377
RTN                  ; 6378
LD  2   44           ; 6379
LD  0   0            ; 6380
ST  2   44           ; 6381
RTN                  ; 6382
LDF 6379             ; 6383
RTN                  ; 6384
LD  2   45           ; 6385
RTN                  ; 6386
LDF 6385             ; 6387
RTN                  ; 6388
LD  2   45           ; 6389
LD  0   0            ; 6390
ST  2   45           ; 6391
RTN                  ; 6392
LDF 6389             ; 6393
RTN                  ; 6394
LD  2   46           ; 6395
RTN                  ; 6396
LDF 6395             ; 6397
RTN                  ; 6398
LD  2   46           ; 6399
LD  0   0            ; 6400
ST  2   46           ; 6401
RTN                  ; 6402
LDF 6399             ; 6403
RTN                  ; 6404
LD  2   47           ; 6405
RTN                  ; 6406
LDF 6405             ; 6407
RTN                  ; 6408
LD  2   47           ; 6409
LD  0   0            ; 6410
ST  2   47           ; 6411
RTN                  ; 6412
LDF 6409             ; 6413
RTN                  ; 6414
LD  2   48           ; 6415
RTN                  ; 6416
LDF 6415             ; 6417
RTN                  ; 6418
LD  2   48           ; 6419
LD  0   0            ; 6420
ST  2   48           ; 6421
RTN                  ; 6422
LDF 6419             ; 6423
RTN                  ; 6424
LD  2   49           ; 6425
RTN                  ; 6426
LDF 6425             ; 6427
RTN                  ; 6428
LD  2   49           ; 6429
LD  0   0            ; 6430
ST  2   49           ; 6431
RTN                  ; 6432
LDF 6429             ; 6433
RTN                  ; 6434
LD  2   50           ; 6435
RTN                  ; 6436
LDF 6435             ; 6437
RTN                  ; 6438
LD  2   50           ; 6439
LD  0   0            ; 6440
ST  2   50           ; 6441
RTN                  ; 6442
LDF 6439             ; 6443
RTN                  ; 6444
LD  2   51           ; 6445
RTN                  ; 6446
LDF 6445             ; 6447
RTN                  ; 6448
LD  2   51           ; 6449
LD  0   0            ; 6450
ST  2   51           ; 6451
RTN                  ; 6452
LDF 6449             ; 6453
RTN                  ; 6454
LD  2   52           ; 6455
RTN                  ; 6456
LDF 6455             ; 6457
RTN                  ; 6458
LD  2   52           ; 6459
LD  0   0            ; 6460
ST  2   52           ; 6461
RTN                  ; 6462
LDF 6459             ; 6463
RTN                  ; 6464
LD  2   53           ; 6465
RTN                  ; 6466
LDF 6465             ; 6467
RTN                  ; 6468
LD  2   53           ; 6469
LD  0   0            ; 6470
ST  2   53           ; 6471
RTN                  ; 6472
LDF 6469             ; 6473
RTN                  ; 6474
LD  2   54           ; 6475
RTN                  ; 6476
LDF 6475             ; 6477
RTN                  ; 6478
LD  2   54           ; 6479
LD  0   0            ; 6480
ST  2   54           ; 6481
RTN                  ; 6482
LDF 6479             ; 6483
RTN                  ; 6484
LD  2   55           ; 6485
RTN                  ; 6486
LDF 6485             ; 6487
RTN                  ; 6488
LD  2   55           ; 6489
LD  0   0            ; 6490
ST  2   55           ; 6491
RTN                  ; 6492
LDF 6489             ; 6493
RTN                  ; 6494
LD  2   56           ; 6495
RTN                  ; 6496
LDF 6495             ; 6497
RTN                  ; 6498
LD  2   56           ; 6499
LD  0   0            ; 6500
ST  2   56           ; 6501
RTN                  ; 6502
LDF 6499             ; 6503
RTN                  ; 6504
LD  2   57           ; 6505
RTN                  ; 6506
LDF 6505             ; 6507
RTN                  ; 6508
LD  2   57           ; 6509
LD  0   0            ; 6510
ST  2   57           ; 6511
RTN                  ; 6512
LDF 6509             ; 6513
RTN                  ; 6514
LD  2   58           ; 6515
RTN                  ; 6516
LDF 6515             ; 6517
RTN                  ; 6518
LD  2   58           ; 6519
LD  0   0            ; 6520
ST  2   58           ; 6521
RTN                  ; 6522
LDF 6519             ; 6523
RTN                  ; 6524
LD  2   59           ; 6525
RTN                  ; 6526
LDF 6525             ; 6527
RTN                  ; 6528
LD  2   59           ; 6529
LD  0   0            ; 6530
ST  2   59           ; 6531
RTN                  ; 6532
LDF 6529             ; 6533
RTN                  ; 6534
LD  2   60           ; 6535
RTN                  ; 6536
LDF 6535             ; 6537
RTN                  ; 6538
LD  2   60           ; 6539
LD  0   0            ; 6540
ST  2   60           ; 6541
RTN                  ; 6542
LDF 6539             ; 6543
RTN                  ; 6544
LD  2   61           ; 6545
RTN                  ; 6546
LDF 6545             ; 6547
RTN                  ; 6548
LD  2   61           ; 6549
LD  0   0            ; 6550
ST  2   61           ; 6551
RTN                  ; 6552
LDF 6549             ; 6553
RTN                  ; 6554
LD  2   62           ; 6555
RTN                  ; 6556
LDF 6555             ; 6557
RTN                  ; 6558
LD  2   62           ; 6559
LD  0   0            ; 6560
ST  2   62           ; 6561
RTN                  ; 6562
LDF 6559             ; 6563
RTN                  ; 6564
LD  2   63           ; 6565
RTN                  ; 6566
LDF 6565             ; 6567
RTN                  ; 6568
LD  2   63           ; 6569
LD  0   0            ; 6570
ST  2   63           ; 6571
RTN                  ; 6572
LDF 6569             ; 6573
RTN                  ; 6574
LD  2   64           ; 6575
RTN                  ; 6576
LDF 6575             ; 6577
RTN                  ; 6578
LD  2   64           ; 6579
LD  0   0            ; 6580
ST  2   64           ; 6581
RTN                  ; 6582
LDF 6579             ; 6583
RTN                  ; 6584
LD  2   65           ; 6585
RTN                  ; 6586
LDF 6585             ; 6587
RTN                  ; 6588
LD  2   65           ; 6589
LD  0   0            ; 6590
ST  2   65           ; 6591
RTN                  ; 6592
LDF 6589             ; 6593
RTN                  ; 6594
LD  2   66           ; 6595
RTN                  ; 6596
LDF 6595             ; 6597
RTN                  ; 6598
LD  2   66           ; 6599
LD  0   0            ; 6600
ST  2   66           ; 6601
RTN                  ; 6602
LDF 6599             ; 6603
RTN                  ; 6604
LD  2   67           ; 6605
RTN                  ; 6606
LDF 6605             ; 6607
RTN                  ; 6608
LD  2   67           ; 6609
LD  0   0            ; 6610
ST  2   67           ; 6611
RTN                  ; 6612
LDF 6609             ; 6613
RTN                  ; 6614
LD  2   68           ; 6615
RTN                  ; 6616
LDF 6615             ; 6617
RTN                  ; 6618
LD  2   68           ; 6619
LD  0   0            ; 6620
ST  2   68           ; 6621
RTN                  ; 6622
LDF 6619             ; 6623
RTN                  ; 6624
LD  2   69           ; 6625
RTN                  ; 6626
LDF 6625             ; 6627
RTN                  ; 6628
LD  2   69           ; 6629
LD  0   0            ; 6630
ST  2   69           ; 6631
RTN                  ; 6632
LDF 6629             ; 6633
RTN                  ; 6634
LD  2   70           ; 6635
RTN                  ; 6636
LDF 6635             ; 6637
RTN                  ; 6638
LD  2   70           ; 6639
LD  0   0            ; 6640
ST  2   70           ; 6641
RTN                  ; 6642
LDF 6639             ; 6643
RTN                  ; 6644
LD  2   71           ; 6645
RTN                  ; 6646
LDF 6645             ; 6647
RTN                  ; 6648
LD  2   71           ; 6649
LD  0   0            ; 6650
ST  2   71           ; 6651
RTN                  ; 6652
LDF 6649             ; 6653
RTN                  ; 6654
LD  2   72           ; 6655
RTN                  ; 6656
LDF 6655             ; 6657
RTN                  ; 6658
LD  2   72           ; 6659
LD  0   0            ; 6660
ST  2   72           ; 6661
RTN                  ; 6662
LDF 6659             ; 6663
RTN                  ; 6664
LD  2   73           ; 6665
RTN                  ; 6666
LDF 6665             ; 6667
RTN                  ; 6668
LD  2   73           ; 6669
LD  0   0            ; 6670
ST  2   73           ; 6671
RTN                  ; 6672
LDF 6669             ; 6673
RTN                  ; 6674
LD  2   74           ; 6675
RTN                  ; 6676
LDF 6675             ; 6677
RTN                  ; 6678
LD  2   74           ; 6679
LD  0   0            ; 6680
ST  2   74           ; 6681
RTN                  ; 6682
LDF 6679             ; 6683
RTN                  ; 6684
LD  2   75           ; 6685
RTN                  ; 6686
LDF 6685             ; 6687
RTN                  ; 6688
LD  2   75           ; 6689
LD  0   0            ; 6690
ST  2   75           ; 6691
RTN                  ; 6692
LDF 6689             ; 6693
RTN                  ; 6694
LD  2   76           ; 6695
RTN                  ; 6696
LDF 6695             ; 6697
RTN                  ; 6698
LD  2   76           ; 6699
LD  0   0            ; 6700
ST  2   76           ; 6701
RTN                  ; 6702
LDF 6699             ; 6703
RTN                  ; 6704
LD  2   77           ; 6705
RTN                  ; 6706
LDF 6705             ; 6707
RTN                  ; 6708
LD  2   77           ; 6709
LD  0   0            ; 6710
ST  2   77           ; 6711
RTN                  ; 6712
LDF 6709             ; 6713
RTN                  ; 6714
LD  2   78           ; 6715
RTN                  ; 6716
LDF 6715             ; 6717
RTN                  ; 6718
LD  2   78           ; 6719
LD  0   0            ; 6720
ST  2   78           ; 6721
RTN                  ; 6722
LDF 6719             ; 6723
RTN                  ; 6724
LD  2   79           ; 6725
RTN                  ; 6726
LDF 6725             ; 6727
RTN                  ; 6728
LD  2   79           ; 6729
LD  0   0            ; 6730
ST  2   79           ; 6731
RTN                  ; 6732
LDF 6729             ; 6733
RTN                  ; 6734
LD  2   80           ; 6735
RTN                  ; 6736
LDF 6735             ; 6737
RTN                  ; 6738
LD  2   80           ; 6739
LD  0   0            ; 6740
ST  2   80           ; 6741
RTN                  ; 6742
LDF 6739             ; 6743
RTN                  ; 6744
LD  2   81           ; 6745
RTN                  ; 6746
LDF 6745             ; 6747
RTN                  ; 6748
LD  2   81           ; 6749
LD  0   0            ; 6750
ST  2   81           ; 6751
RTN                  ; 6752
LDF 6749             ; 6753
RTN                  ; 6754
LD  2   82           ; 6755
RTN                  ; 6756
LDF 6755             ; 6757
RTN                  ; 6758
LD  2   82           ; 6759
LD  0   0            ; 6760
ST  2   82           ; 6761
RTN                  ; 6762
LDF 6759             ; 6763
RTN                  ; 6764
LD  2   83           ; 6765
RTN                  ; 6766
LDF 6765             ; 6767
RTN                  ; 6768
LD  2   83           ; 6769
LD  0   0            ; 6770
ST  2   83           ; 6771
RTN                  ; 6772
LDF 6769             ; 6773
RTN                  ; 6774
LD  2   84           ; 6775
RTN                  ; 6776
LDF 6775             ; 6777
RTN                  ; 6778
LD  2   84           ; 6779
LD  0   0            ; 6780
ST  2   84           ; 6781
RTN                  ; 6782
LDF 6779             ; 6783
RTN                  ; 6784
LD  2   85           ; 6785
RTN                  ; 6786
LDF 6785             ; 6787
RTN                  ; 6788
LD  2   85           ; 6789
LD  0   0            ; 6790
ST  2   85           ; 6791
RTN                  ; 6792
LDF 6789             ; 6793
RTN                  ; 6794
LD  2   86           ; 6795
RTN                  ; 6796
LDF 6795             ; 6797
RTN                  ; 6798
LD  2   86           ; 6799
LD  0   0            ; 6800
ST  2   86           ; 6801
RTN                  ; 6802
LDF 6799             ; 6803
RTN                  ; 6804
LD  2   87           ; 6805
RTN                  ; 6806
LDF 6805             ; 6807
RTN                  ; 6808
LD  2   87           ; 6809
LD  0   0            ; 6810
ST  2   87           ; 6811
RTN                  ; 6812
LDF 6809             ; 6813
RTN                  ; 6814
LD  2   88           ; 6815
RTN                  ; 6816
LDF 6815             ; 6817
RTN                  ; 6818
LD  2   88           ; 6819
LD  0   0            ; 6820
ST  2   88           ; 6821
RTN                  ; 6822
LDF 6819             ; 6823
RTN                  ; 6824
LD  2   89           ; 6825
RTN                  ; 6826
LDF 6825             ; 6827
RTN                  ; 6828
LD  2   89           ; 6829
LD  0   0            ; 6830
ST  2   89           ; 6831
RTN                  ; 6832
LDF 6829             ; 6833
RTN                  ; 6834
LD  2   90           ; 6835
RTN                  ; 6836
LDF 6835             ; 6837
RTN                  ; 6838
LD  2   90           ; 6839
LD  0   0            ; 6840
ST  2   90           ; 6841
RTN                  ; 6842
LDF 6839             ; 6843
RTN                  ; 6844
LD  2   91           ; 6845
RTN                  ; 6846
LDF 6845             ; 6847
RTN                  ; 6848
LD  2   91           ; 6849
LD  0   0            ; 6850
ST  2   91           ; 6851
RTN                  ; 6852
LDF 6849             ; 6853
RTN                  ; 6854
LD  2   92           ; 6855
RTN                  ; 6856
LDF 6855             ; 6857
RTN                  ; 6858
LD  2   92           ; 6859
LD  0   0            ; 6860
ST  2   92           ; 6861
RTN                  ; 6862
LDF 6859             ; 6863
RTN                  ; 6864
LD  2   93           ; 6865
RTN                  ; 6866
LDF 6865             ; 6867
RTN                  ; 6868
LD  2   93           ; 6869
LD  0   0            ; 6870
ST  2   93           ; 6871
RTN                  ; 6872
LDF 6869             ; 6873
RTN                  ; 6874
LD  2   94           ; 6875
RTN                  ; 6876
LDF 6875             ; 6877
RTN                  ; 6878
LD  2   94           ; 6879
LD  0   0            ; 6880
ST  2   94           ; 6881
RTN                  ; 6882
LDF 6879             ; 6883
RTN                  ; 6884
LD  2   95           ; 6885
RTN                  ; 6886
LDF 6885             ; 6887
RTN                  ; 6888
LD  2   95           ; 6889
LD  0   0            ; 6890
ST  2   95           ; 6891
RTN                  ; 6892
LDF 6889             ; 6893
RTN                  ; 6894
LD  2   96           ; 6895
RTN                  ; 6896
LDF 6895             ; 6897
RTN                  ; 6898
LD  2   96           ; 6899
LD  0   0            ; 6900
ST  2   96           ; 6901
RTN                  ; 6902
LDF 6899             ; 6903
RTN                  ; 6904
LD  2   97           ; 6905
RTN                  ; 6906
LDF 6905             ; 6907
RTN                  ; 6908
LD  2   97           ; 6909
LD  0   0            ; 6910
ST  2   97           ; 6911
RTN                  ; 6912
LDF 6909             ; 6913
RTN                  ; 6914
LD  2   98           ; 6915
RTN                  ; 6916
LDF 6915             ; 6917
RTN                  ; 6918
LD  2   98           ; 6919
LD  0   0            ; 6920
ST  2   98           ; 6921
RTN                  ; 6922
LDF 6919             ; 6923
RTN                  ; 6924
LD  2   99           ; 6925
RTN                  ; 6926
LDF 6925             ; 6927
RTN                  ; 6928
LD  2   99           ; 6929
LD  0   0            ; 6930
ST  2   99           ; 6931
RTN                  ; 6932
LDF 6929             ; 6933
RTN                  ; 6934
LD  2   100          ; 6935
RTN                  ; 6936
LDF 6935             ; 6937
RTN                  ; 6938
LD  2   100          ; 6939
LD  0   0            ; 6940
ST  2   100          ; 6941
RTN                  ; 6942
LDF 6939             ; 6943
RTN                  ; 6944
LD  2   101          ; 6945
RTN                  ; 6946
LDF 6945             ; 6947
RTN                  ; 6948
LD  2   101          ; 6949
LD  0   0            ; 6950
ST  2   101          ; 6951
RTN                  ; 6952
LDF 6949             ; 6953
RTN                  ; 6954
LD  2   102          ; 6955
RTN                  ; 6956
LDF 6955             ; 6957
RTN                  ; 6958
LD  2   102          ; 6959
LD  0   0            ; 6960
ST  2   102          ; 6961
RTN                  ; 6962
LDF 6959             ; 6963
RTN                  ; 6964
LD  2   103          ; 6965
RTN                  ; 6966
LDF 6965             ; 6967
RTN                  ; 6968
LD  2   103          ; 6969
LD  0   0            ; 6970
ST  2   103          ; 6971
RTN                  ; 6972
LDF 6969             ; 6973
RTN                  ; 6974
LD  2   104          ; 6975
RTN                  ; 6976
LDF 6975             ; 6977
RTN                  ; 6978
LD  2   104          ; 6979
LD  0   0            ; 6980
ST  2   104          ; 6981
RTN                  ; 6982
LDF 6979             ; 6983
RTN                  ; 6984
LD  2   105          ; 6985
RTN                  ; 6986
LDF 6985             ; 6987
RTN                  ; 6988
LD  2   105          ; 6989
LD  0   0            ; 6990
ST  2   105          ; 6991
RTN                  ; 6992
LDF 6989             ; 6993
RTN                  ; 6994
LD  2   106          ; 6995
RTN                  ; 6996
LDF 6995             ; 6997
RTN                  ; 6998
LD  2   106          ; 6999
LD  0   0            ; 7000
ST  2   106          ; 7001
RTN                  ; 7002
LDF 6999             ; 7003
RTN                  ; 7004
LD  2   107          ; 7005
RTN                  ; 7006
LDF 7005             ; 7007
RTN                  ; 7008
LD  2   107          ; 7009
LD  0   0            ; 7010
ST  2   107          ; 7011
RTN                  ; 7012
LDF 7009             ; 7013
RTN                  ; 7014
LD  2   108          ; 7015
RTN                  ; 7016
LDF 7015             ; 7017
RTN                  ; 7018
LD  2   108          ; 7019
LD  0   0            ; 7020
ST  2   108          ; 7021
RTN                  ; 7022
LDF 7019             ; 7023
RTN                  ; 7024
LD  2   109          ; 7025
RTN                  ; 7026
LDF 7025             ; 7027
RTN                  ; 7028
LD  2   109          ; 7029
LD  0   0            ; 7030
ST  2   109          ; 7031
RTN                  ; 7032
LDF 7029             ; 7033
RTN                  ; 7034
LD  2   110          ; 7035
RTN                  ; 7036
LDF 7035             ; 7037
RTN                  ; 7038
LD  2   110          ; 7039
LD  0   0            ; 7040
ST  2   110          ; 7041
RTN                  ; 7042
LDF 7039             ; 7043
RTN                  ; 7044
LD  2   111          ; 7045
RTN                  ; 7046
LDF 7045             ; 7047
RTN                  ; 7048
LD  2   111          ; 7049
LD  0   0            ; 7050
ST  2   111          ; 7051
RTN                  ; 7052
LDF 7049             ; 7053
RTN                  ; 7054
LD  2   112          ; 7055
RTN                  ; 7056
LDF 7055             ; 7057
RTN                  ; 7058
LD  2   112          ; 7059
LD  0   0            ; 7060
ST  2   112          ; 7061
RTN                  ; 7062
LDF 7059             ; 7063
RTN                  ; 7064
LD  2   113          ; 7065
RTN                  ; 7066
LDF 7065             ; 7067
RTN                  ; 7068
LD  2   113          ; 7069
LD  0   0            ; 7070
ST  2   113          ; 7071
RTN                  ; 7072
LDF 7069             ; 7073
RTN                  ; 7074
LD  2   114          ; 7075
RTN                  ; 7076
LDF 7075             ; 7077
RTN                  ; 7078
LD  2   114          ; 7079
LD  0   0            ; 7080
ST  2   114          ; 7081
RTN                  ; 7082
LDF 7079             ; 7083
RTN                  ; 7084
LD  2   115          ; 7085
RTN                  ; 7086
LDF 7085             ; 7087
RTN                  ; 7088
LD  2   115          ; 7089
LD  0   0            ; 7090
ST  2   115          ; 7091
RTN                  ; 7092
LDF 7089             ; 7093
RTN                  ; 7094
LD  2   116          ; 7095
RTN                  ; 7096
LDF 7095             ; 7097
RTN                  ; 7098
LD  2   116          ; 7099
LD  0   0            ; 7100
ST  2   116          ; 7101
RTN                  ; 7102
LDF 7099             ; 7103
RTN                  ; 7104
LD  2   117          ; 7105
RTN                  ; 7106
LDF 7105             ; 7107
RTN                  ; 7108
LD  2   117          ; 7109
LD  0   0            ; 7110
ST  2   117          ; 7111
RTN                  ; 7112
LDF 7109             ; 7113
RTN                  ; 7114
LD  2   118          ; 7115
RTN                  ; 7116
LDF 7115             ; 7117
RTN                  ; 7118
LD  2   118          ; 7119
LD  0   0            ; 7120
ST  2   118          ; 7121
RTN                  ; 7122
LDF 7119             ; 7123
RTN                  ; 7124
LD  2   119          ; 7125
RTN                  ; 7126
LDF 7125             ; 7127
RTN                  ; 7128
LD  2   119          ; 7129
LD  0   0            ; 7130
ST  2   119          ; 7131
RTN                  ; 7132
LDF 7129             ; 7133
RTN                  ; 7134
LD  2   120          ; 7135
RTN                  ; 7136
LDF 7135             ; 7137
RTN                  ; 7138
LD  2   120          ; 7139
LD  0   0            ; 7140
ST  2   120          ; 7141
RTN                  ; 7142
LDF 7139             ; 7143
RTN                  ; 7144
LD  2   121          ; 7145
RTN                  ; 7146
LDF 7145             ; 7147
RTN                  ; 7148
LD  2   121          ; 7149
LD  0   0            ; 7150
ST  2   121          ; 7151
RTN                  ; 7152
LDF 7149             ; 7153
RTN                  ; 7154
LD  2   122          ; 7155
RTN                  ; 7156
LDF 7155             ; 7157
RTN                  ; 7158
LD  2   122          ; 7159
LD  0   0            ; 7160
ST  2   122          ; 7161
RTN                  ; 7162
LDF 7159             ; 7163
RTN                  ; 7164
LD  2   123          ; 7165
RTN                  ; 7166
LDF 7165             ; 7167
RTN                  ; 7168
LD  2   123          ; 7169
LD  0   0            ; 7170
ST  2   123          ; 7171
RTN                  ; 7172
LDF 7169             ; 7173
RTN                  ; 7174
LD  2   124          ; 7175
RTN                  ; 7176
LDF 7175             ; 7177
RTN                  ; 7178
LD  2   124          ; 7179
LD  0   0            ; 7180
ST  2   124          ; 7181
RTN                  ; 7182
LDF 7179             ; 7183
RTN                  ; 7184
LD  2   125          ; 7185
RTN                  ; 7186
LDF 7185             ; 7187
RTN                  ; 7188
LD  2   125          ; 7189
LD  0   0            ; 7190
ST  2   125          ; 7191
RTN                  ; 7192
LDF 7189             ; 7193
RTN                  ; 7194
LD  2   126          ; 7195
RTN                  ; 7196
LDF 7195             ; 7197
RTN                  ; 7198
LD  2   126          ; 7199
LD  0   0            ; 7200
ST  2   126          ; 7201
RTN                  ; 7202
LDF 7199             ; 7203
RTN                  ; 7204
LD  2   127          ; 7205
RTN                  ; 7206
LDF 7205             ; 7207
RTN                  ; 7208
LD  2   127          ; 7209
LD  0   0            ; 7210
ST  2   127          ; 7211
RTN                  ; 7212
LDF 7209             ; 7213
RTN                  ; 7214
LD  2   128          ; 7215
RTN                  ; 7216
LDF 7215             ; 7217
RTN                  ; 7218
LD  2   128          ; 7219
LD  0   0            ; 7220
ST  2   128          ; 7221
RTN                  ; 7222
LDF 7219             ; 7223
RTN                  ; 7224
LD  2   129          ; 7225
RTN                  ; 7226
LDF 7225             ; 7227
RTN                  ; 7228
LD  2   129          ; 7229
LD  0   0            ; 7230
ST  2   129          ; 7231
RTN                  ; 7232
LDF 7229             ; 7233
RTN                  ; 7234
LD  2   130          ; 7235
RTN                  ; 7236
LDF 7235             ; 7237
RTN                  ; 7238
LD  2   130          ; 7239
LD  0   0            ; 7240
ST  2   130          ; 7241
RTN                  ; 7242
LDF 7239             ; 7243
RTN                  ; 7244
LD  2   131          ; 7245
RTN                  ; 7246
LDF 7245             ; 7247
RTN                  ; 7248
LD  2   131          ; 7249
LD  0   0            ; 7250
ST  2   131          ; 7251
RTN                  ; 7252
LDF 7249             ; 7253
RTN                  ; 7254
LD  2   132          ; 7255
RTN                  ; 7256
LDF 7255             ; 7257
RTN                  ; 7258
LD  2   132          ; 7259
LD  0   0            ; 7260
ST  2   132          ; 7261
RTN                  ; 7262
LDF 7259             ; 7263
RTN                  ; 7264
LD  2   133          ; 7265
RTN                  ; 7266
LDF 7265             ; 7267
RTN                  ; 7268
LD  2   133          ; 7269
LD  0   0            ; 7270
ST  2   133          ; 7271
RTN                  ; 7272
LDF 7269             ; 7273
RTN                  ; 7274
LD  2   134          ; 7275
RTN                  ; 7276
LDF 7275             ; 7277
RTN                  ; 7278
LD  2   134          ; 7279
LD  0   0            ; 7280
ST  2   134          ; 7281
RTN                  ; 7282
LDF 7279             ; 7283
RTN                  ; 7284
LD  2   135          ; 7285
RTN                  ; 7286
LDF 7285             ; 7287
RTN                  ; 7288
LD  2   135          ; 7289
LD  0   0            ; 7290
ST  2   135          ; 7291
RTN                  ; 7292
LDF 7289             ; 7293
RTN                  ; 7294
LD  2   136          ; 7295
RTN                  ; 7296
LDF 7295             ; 7297
RTN                  ; 7298
LD  2   136          ; 7299
LD  0   0            ; 7300
ST  2   136          ; 7301
RTN                  ; 7302
LDF 7299             ; 7303
RTN                  ; 7304
LD  2   137          ; 7305
RTN                  ; 7306
LDF 7305             ; 7307
RTN                  ; 7308
LD  2   137          ; 7309
LD  0   0            ; 7310
ST  2   137          ; 7311
RTN                  ; 7312
LDF 7309             ; 7313
RTN                  ; 7314
LD  2   138          ; 7315
RTN                  ; 7316
LDF 7315             ; 7317
RTN                  ; 7318
LD  2   138          ; 7319
LD  0   0            ; 7320
ST  2   138          ; 7321
RTN                  ; 7322
LDF 7319             ; 7323
RTN                  ; 7324
LD  2   139          ; 7325
RTN                  ; 7326
LDF 7325             ; 7327
RTN                  ; 7328
LD  2   139          ; 7329
LD  0   0            ; 7330
ST  2   139          ; 7331
RTN                  ; 7332
LDF 7329             ; 7333
RTN                  ; 7334
LD  2   140          ; 7335
RTN                  ; 7336
LDF 7335             ; 7337
RTN                  ; 7338
LD  2   140          ; 7339
LD  0   0            ; 7340
ST  2   140          ; 7341
RTN                  ; 7342
LDF 7339             ; 7343
RTN                  ; 7344
LD  2   141          ; 7345
RTN                  ; 7346
LDF 7345             ; 7347
RTN                  ; 7348
LD  2   141          ; 7349
LD  0   0            ; 7350
ST  2   141          ; 7351
RTN                  ; 7352
LDF 7349             ; 7353
RTN                  ; 7354
LD  2   142          ; 7355
RTN                  ; 7356
LDF 7355             ; 7357
RTN                  ; 7358
LD  2   142          ; 7359
LD  0   0            ; 7360
ST  2   142          ; 7361
RTN                  ; 7362
LDF 7359             ; 7363
RTN                  ; 7364
LD  2   143          ; 7365
RTN                  ; 7366
LDF 7365             ; 7367
RTN                  ; 7368
LD  2   143          ; 7369
LD  0   0            ; 7370
ST  2   143          ; 7371
RTN                  ; 7372
LDF 7369             ; 7373
RTN                  ; 7374
LD  2   144          ; 7375
RTN                  ; 7376
LDF 7375             ; 7377
RTN                  ; 7378
LD  2   144          ; 7379
LD  0   0            ; 7380
ST  2   144          ; 7381
RTN                  ; 7382
LDF 7379             ; 7383
RTN                  ; 7384
LD  2   145          ; 7385
RTN                  ; 7386
LDF 7385             ; 7387
RTN                  ; 7388
LD  2   145          ; 7389
LD  0   0            ; 7390
ST  2   145          ; 7391
RTN                  ; 7392
LDF 7389             ; 7393
RTN                  ; 7394
LD  2   146          ; 7395
RTN                  ; 7396
LDF 7395             ; 7397
RTN                  ; 7398
LD  2   146          ; 7399
LD  0   0            ; 7400
ST  2   146          ; 7401
RTN                  ; 7402
LDF 7399             ; 7403
RTN                  ; 7404
LD  2   147          ; 7405
RTN                  ; 7406
LDF 7405             ; 7407
RTN                  ; 7408
LD  2   147          ; 7409
LD  0   0            ; 7410
ST  2   147          ; 7411
RTN                  ; 7412
LDF 7409             ; 7413
RTN                  ; 7414
LD  2   148          ; 7415
RTN                  ; 7416
LDF 7415             ; 7417
RTN                  ; 7418
LD  2   148          ; 7419
LD  0   0            ; 7420
ST  2   148          ; 7421
RTN                  ; 7422
LDF 7419             ; 7423
RTN                  ; 7424
LD  2   149          ; 7425
RTN                  ; 7426
LDF 7425             ; 7427
RTN                  ; 7428
LD  2   149          ; 7429
LD  0   0            ; 7430
ST  2   149          ; 7431
RTN                  ; 7432
LDF 7429             ; 7433
RTN                  ; 7434
LD  2   150          ; 7435
RTN                  ; 7436
LDF 7435             ; 7437
RTN                  ; 7438
LD  2   150          ; 7439
LD  0   0            ; 7440
ST  2   150          ; 7441
RTN                  ; 7442
LDF 7439             ; 7443
RTN                  ; 7444
LD  2   151          ; 7445
RTN                  ; 7446
LDF 7445             ; 7447
RTN                  ; 7448
LD  2   151          ; 7449
LD  0   0            ; 7450
ST  2   151          ; 7451
RTN                  ; 7452
LDF 7449             ; 7453
RTN                  ; 7454
LD  2   152          ; 7455
RTN                  ; 7456
LDF 7455             ; 7457
RTN                  ; 7458
LD  2   152          ; 7459
LD  0   0            ; 7460
ST  2   152          ; 7461
RTN                  ; 7462
LDF 7459             ; 7463
RTN                  ; 7464
LD  2   153          ; 7465
RTN                  ; 7466
LDF 7465             ; 7467
RTN                  ; 7468
LD  2   153          ; 7469
LD  0   0            ; 7470
ST  2   153          ; 7471
RTN                  ; 7472
LDF 7469             ; 7473
RTN                  ; 7474
LD  2   154          ; 7475
RTN                  ; 7476
LDF 7475             ; 7477
RTN                  ; 7478
LD  2   154          ; 7479
LD  0   0            ; 7480
ST  2   154          ; 7481
RTN                  ; 7482
LDF 7479             ; 7483
RTN                  ; 7484
LD  2   155          ; 7485
RTN                  ; 7486
LDF 7485             ; 7487
RTN                  ; 7488
LD  2   155          ; 7489
LD  0   0            ; 7490
ST  2   155          ; 7491
RTN                  ; 7492
LDF 7489             ; 7493
RTN                  ; 7494
LD  2   156          ; 7495
RTN                  ; 7496
LDF 7495             ; 7497
RTN                  ; 7498
LD  2   156          ; 7499
LD  0   0            ; 7500
ST  2   156          ; 7501
RTN                  ; 7502
LDF 7499             ; 7503
RTN                  ; 7504
LD  2   157          ; 7505
RTN                  ; 7506
LDF 7505             ; 7507
RTN                  ; 7508
LD  2   157          ; 7509
LD  0   0            ; 7510
ST  2   157          ; 7511
RTN                  ; 7512
LDF 7509             ; 7513
RTN                  ; 7514
LD  2   158          ; 7515
RTN                  ; 7516
LDF 7515             ; 7517
RTN                  ; 7518
LD  2   158          ; 7519
LD  0   0            ; 7520
ST  2   158          ; 7521
RTN                  ; 7522
LDF 7519             ; 7523
RTN                  ; 7524
LD  2   159          ; 7525
RTN                  ; 7526
LDF 7525             ; 7527
RTN                  ; 7528
LD  2   159          ; 7529
LD  0   0            ; 7530
ST  2   159          ; 7531
RTN                  ; 7532
LDF 7529             ; 7533
RTN                  ; 7534
LD  2   160          ; 7535
RTN                  ; 7536
LDF 7535             ; 7537
RTN                  ; 7538
LD  2   160          ; 7539
LD  0   0            ; 7540
ST  2   160          ; 7541
RTN                  ; 7542
LDF 7539             ; 7543
RTN                  ; 7544
LD  2   161          ; 7545
RTN                  ; 7546
LDF 7545             ; 7547
RTN                  ; 7548
LD  2   161          ; 7549
LD  0   0            ; 7550
ST  2   161          ; 7551
RTN                  ; 7552
LDF 7549             ; 7553
RTN                  ; 7554
LD  2   162          ; 7555
RTN                  ; 7556
LDF 7555             ; 7557
RTN                  ; 7558
LD  2   162          ; 7559
LD  0   0            ; 7560
ST  2   162          ; 7561
RTN                  ; 7562
LDF 7559             ; 7563
RTN                  ; 7564
LD  2   163          ; 7565
RTN                  ; 7566
LDF 7565             ; 7567
RTN                  ; 7568
LD  2   163          ; 7569
LD  0   0            ; 7570
ST  2   163          ; 7571
RTN                  ; 7572
LDF 7569             ; 7573
RTN                  ; 7574
LD  2   164          ; 7575
RTN                  ; 7576
LDF 7575             ; 7577
RTN                  ; 7578
LD  2   164          ; 7579
LD  0   0            ; 7580
ST  2   164          ; 7581
RTN                  ; 7582
LDF 7579             ; 7583
RTN                  ; 7584
LD  2   165          ; 7585
RTN                  ; 7586
LDF 7585             ; 7587
RTN                  ; 7588
LD  2   165          ; 7589
LD  0   0            ; 7590
ST  2   165          ; 7591
RTN                  ; 7592
LDF 7589             ; 7593
RTN                  ; 7594
LD  2   166          ; 7595
RTN                  ; 7596
LDF 7595             ; 7597
RTN                  ; 7598
LD  2   166          ; 7599
LD  0   0            ; 7600
ST  2   166          ; 7601
RTN                  ; 7602
LDF 7599             ; 7603
RTN                  ; 7604
LD  2   167          ; 7605
RTN                  ; 7606
LDF 7605             ; 7607
RTN                  ; 7608
LD  2   167          ; 7609
LD  0   0            ; 7610
ST  2   167          ; 7611
RTN                  ; 7612
LDF 7609             ; 7613
RTN                  ; 7614
LD  2   168          ; 7615
RTN                  ; 7616
LDF 7615             ; 7617
RTN                  ; 7618
LD  2   168          ; 7619
LD  0   0            ; 7620
ST  2   168          ; 7621
RTN                  ; 7622
LDF 7619             ; 7623
RTN                  ; 7624
LD  2   169          ; 7625
RTN                  ; 7626
LDF 7625             ; 7627
RTN                  ; 7628
LD  2   169          ; 7629
LD  0   0            ; 7630
ST  2   169          ; 7631
RTN                  ; 7632
LDF 7629             ; 7633
RTN                  ; 7634
LD  2   170          ; 7635
RTN                  ; 7636
LDF 7635             ; 7637
RTN                  ; 7638
LD  2   170          ; 7639
LD  0   0            ; 7640
ST  2   170          ; 7641
RTN                  ; 7642
LDF 7639             ; 7643
RTN                  ; 7644
LD  2   171          ; 7645
RTN                  ; 7646
LDF 7645             ; 7647
RTN                  ; 7648
LD  2   171          ; 7649
LD  0   0            ; 7650
ST  2   171          ; 7651
RTN                  ; 7652
LDF 7649             ; 7653
RTN                  ; 7654
LD  2   172          ; 7655
RTN                  ; 7656
LDF 7655             ; 7657
RTN                  ; 7658
LD  2   172          ; 7659
LD  0   0            ; 7660
ST  2   172          ; 7661
RTN                  ; 7662
LDF 7659             ; 7663
RTN                  ; 7664
LD  2   173          ; 7665
RTN                  ; 7666
LDF 7665             ; 7667
RTN                  ; 7668
LD  2   173          ; 7669
LD  0   0            ; 7670
ST  2   173          ; 7671
RTN                  ; 7672
LDF 7669             ; 7673
RTN                  ; 7674
LD  2   174          ; 7675
RTN                  ; 7676
LDF 7675             ; 7677
RTN                  ; 7678
LD  2   174          ; 7679
LD  0   0            ; 7680
ST  2   174          ; 7681
RTN                  ; 7682
LDF 7679             ; 7683
RTN                  ; 7684
LD  2   175          ; 7685
RTN                  ; 7686
LDF 7685             ; 7687
RTN                  ; 7688
LD  2   175          ; 7689
LD  0   0            ; 7690
ST  2   175          ; 7691
RTN                  ; 7692
LDF 7689             ; 7693
RTN                  ; 7694
LD  2   176          ; 7695
RTN                  ; 7696
LDF 7695             ; 7697
RTN                  ; 7698
LD  2   176          ; 7699
LD  0   0            ; 7700
ST  2   176          ; 7701
RTN                  ; 7702
LDF 7699             ; 7703
RTN                  ; 7704
LD  2   177          ; 7705
RTN                  ; 7706
LDF 7705             ; 7707
RTN                  ; 7708
LD  2   177          ; 7709
LD  0   0            ; 7710
ST  2   177          ; 7711
RTN                  ; 7712
LDF 7709             ; 7713
RTN                  ; 7714
LD  2   178          ; 7715
RTN                  ; 7716
LDF 7715             ; 7717
RTN                  ; 7718
LD  2   178          ; 7719
LD  0   0            ; 7720
ST  2   178          ; 7721
RTN                  ; 7722
LDF 7719             ; 7723
RTN                  ; 7724
LD  2   179          ; 7725
RTN                  ; 7726
LDF 7725             ; 7727
RTN                  ; 7728
LD  2   179          ; 7729
LD  0   0            ; 7730
ST  2   179          ; 7731
RTN                  ; 7732
LDF 7729             ; 7733
RTN                  ; 7734
LD  2   180          ; 7735
RTN                  ; 7736
LDF 7735             ; 7737
RTN                  ; 7738
LD  2   180          ; 7739
LD  0   0            ; 7740
ST  2   180          ; 7741
RTN                  ; 7742
LDF 7739             ; 7743
RTN                  ; 7744
LD  2   181          ; 7745
RTN                  ; 7746
LDF 7745             ; 7747
RTN                  ; 7748
LD  2   181          ; 7749
LD  0   0            ; 7750
ST  2   181          ; 7751
RTN                  ; 7752
LDF 7749             ; 7753
RTN                  ; 7754
LD  2   182          ; 7755
RTN                  ; 7756
LDF 7755             ; 7757
RTN                  ; 7758
LD  2   182          ; 7759
LD  0   0            ; 7760
ST  2   182          ; 7761
RTN                  ; 7762
LDF 7759             ; 7763
RTN                  ; 7764
LD  2   183          ; 7765
RTN                  ; 7766
LDF 7765             ; 7767
RTN                  ; 7768
LD  2   183          ; 7769
LD  0   0            ; 7770
ST  2   183          ; 7771
RTN                  ; 7772
LDF 7769             ; 7773
RTN                  ; 7774
LD  2   184          ; 7775
RTN                  ; 7776
LDF 7775             ; 7777
RTN                  ; 7778
LD  2   184          ; 7779
LD  0   0            ; 7780
ST  2   184          ; 7781
RTN                  ; 7782
LDF 7779             ; 7783
RTN                  ; 7784
LD  2   185          ; 7785
RTN                  ; 7786
LDF 7785             ; 7787
RTN                  ; 7788
LD  2   185          ; 7789
LD  0   0            ; 7790
ST  2   185          ; 7791
RTN                  ; 7792
LDF 7789             ; 7793
RTN                  ; 7794
LD  2   186          ; 7795
RTN                  ; 7796
LDF 7795             ; 7797
RTN                  ; 7798
LD  2   186          ; 7799
LD  0   0            ; 7800
ST  2   186          ; 7801
RTN                  ; 7802
LDF 7799             ; 7803
RTN                  ; 7804
LD  2   187          ; 7805
RTN                  ; 7806
LDF 7805             ; 7807
RTN                  ; 7808
LD  2   187          ; 7809
LD  0   0            ; 7810
ST  2   187          ; 7811
RTN                  ; 7812
LDF 7809             ; 7813
RTN                  ; 7814
LD  2   188          ; 7815
RTN                  ; 7816
LDF 7815             ; 7817
RTN                  ; 7818
LD  2   188          ; 7819
LD  0   0            ; 7820
ST  2   188          ; 7821
RTN                  ; 7822
LDF 7819             ; 7823
RTN                  ; 7824
LD  2   189          ; 7825
RTN                  ; 7826
LDF 7825             ; 7827
RTN                  ; 7828
LD  2   189          ; 7829
LD  0   0            ; 7830
ST  2   189          ; 7831
RTN                  ; 7832
LDF 7829             ; 7833
RTN                  ; 7834
LD  2   190          ; 7835
RTN                  ; 7836
LDF 7835             ; 7837
RTN                  ; 7838
LD  2   190          ; 7839
LD  0   0            ; 7840
ST  2   190          ; 7841
RTN                  ; 7842
LDF 7839             ; 7843
RTN                  ; 7844
LD  2   191          ; 7845
RTN                  ; 7846
LDF 7845             ; 7847
RTN                  ; 7848
LD  2   191          ; 7849
LD  0   0            ; 7850
ST  2   191          ; 7851
RTN                  ; 7852
LDF 7849             ; 7853
RTN                  ; 7854
LD  2   192          ; 7855
RTN                  ; 7856
LDF 7855             ; 7857
RTN                  ; 7858
LD  2   192          ; 7859
LD  0   0            ; 7860
ST  2   192          ; 7861
RTN                  ; 7862
LDF 7859             ; 7863
RTN                  ; 7864
LD  2   193          ; 7865
RTN                  ; 7866
LDF 7865             ; 7867
RTN                  ; 7868
LD  2   193          ; 7869
LD  0   0            ; 7870
ST  2   193          ; 7871
RTN                  ; 7872
LDF 7869             ; 7873
RTN                  ; 7874
LD  2   194          ; 7875
RTN                  ; 7876
LDF 7875             ; 7877
RTN                  ; 7878
LD  2   194          ; 7879
LD  0   0            ; 7880
ST  2   194          ; 7881
RTN                  ; 7882
LDF 7879             ; 7883
RTN                  ; 7884
LD  2   195          ; 7885
RTN                  ; 7886
LDF 7885             ; 7887
RTN                  ; 7888
LD  2   195          ; 7889
LD  0   0            ; 7890
ST  2   195          ; 7891
RTN                  ; 7892
LDF 7889             ; 7893
RTN                  ; 7894
LD  2   196          ; 7895
RTN                  ; 7896
LDF 7895             ; 7897
RTN                  ; 7898
LD  2   196          ; 7899
LD  0   0            ; 7900
ST  2   196          ; 7901
RTN                  ; 7902
LDF 7899             ; 7903
RTN                  ; 7904
LD  2   197          ; 7905
RTN                  ; 7906
LDF 7905             ; 7907
RTN                  ; 7908
LD  2   197          ; 7909
LD  0   0            ; 7910
ST  2   197          ; 7911
RTN                  ; 7912
LDF 7909             ; 7913
RTN                  ; 7914
LD  2   198          ; 7915
RTN                  ; 7916
LDF 7915             ; 7917
RTN                  ; 7918
LD  2   198          ; 7919
LD  0   0            ; 7920
ST  2   198          ; 7921
RTN                  ; 7922
LDF 7919             ; 7923
RTN                  ; 7924
LD  2   199          ; 7925
RTN                  ; 7926
LDF 7925             ; 7927
RTN                  ; 7928
LD  2   199          ; 7929
LD  0   0            ; 7930
ST  2   199          ; 7931
RTN                  ; 7932
LDF 7929             ; 7933
RTN                  ; 7934
LD  2   200          ; 7935
RTN                  ; 7936
LDF 7935             ; 7937
RTN                  ; 7938
LD  2   200          ; 7939
LD  0   0            ; 7940
ST  2   200          ; 7941
RTN                  ; 7942
LDF 7939             ; 7943
RTN                  ; 7944
LD  2   201          ; 7945
RTN                  ; 7946
LDF 7945             ; 7947
RTN                  ; 7948
LD  2   201          ; 7949
LD  0   0            ; 7950
ST  2   201          ; 7951
RTN                  ; 7952
LDF 7949             ; 7953
RTN                  ; 7954
LD  2   202          ; 7955
RTN                  ; 7956
LDF 7955             ; 7957
RTN                  ; 7958
LD  2   202          ; 7959
LD  0   0            ; 7960
ST  2   202          ; 7961
RTN                  ; 7962
LDF 7959             ; 7963
RTN                  ; 7964
LD  2   203          ; 7965
RTN                  ; 7966
LDF 7965             ; 7967
RTN                  ; 7968
LD  2   203          ; 7969
LD  0   0            ; 7970
ST  2   203          ; 7971
RTN                  ; 7972
LDF 7969             ; 7973
RTN                  ; 7974
LD  2   204          ; 7975
RTN                  ; 7976
LDF 7975             ; 7977
RTN                  ; 7978
LD  2   204          ; 7979
LD  0   0            ; 7980
ST  2   204          ; 7981
RTN                  ; 7982
LDF 7979             ; 7983
RTN                  ; 7984
LD  2   205          ; 7985
RTN                  ; 7986
LDF 7985             ; 7987
RTN                  ; 7988
LD  2   205          ; 7989
LD  0   0            ; 7990
ST  2   205          ; 7991
RTN                  ; 7992
LDF 7989             ; 7993
RTN                  ; 7994
LD  2   206          ; 7995
RTN                  ; 7996
LDF 7995             ; 7997
RTN                  ; 7998
LD  2   206          ; 7999
LD  0   0            ; 8000
ST  2   206          ; 8001
RTN                  ; 8002
LDF 7999             ; 8003
RTN                  ; 8004
LD  2   207          ; 8005
RTN                  ; 8006
LDF 8005             ; 8007
RTN                  ; 8008
LD  2   207          ; 8009
LD  0   0            ; 8010
ST  2   207          ; 8011
RTN                  ; 8012
LDF 8009             ; 8013
RTN                  ; 8014
LD  2   208          ; 8015
RTN                  ; 8016
LDF 8015             ; 8017
RTN                  ; 8018
LD  2   208          ; 8019
LD  0   0            ; 8020
ST  2   208          ; 8021
RTN                  ; 8022
LDF 8019             ; 8023
RTN                  ; 8024
LD  2   209          ; 8025
RTN                  ; 8026
LDF 8025             ; 8027
RTN                  ; 8028
LD  2   209          ; 8029
LD  0   0            ; 8030
ST  2   209          ; 8031
RTN                  ; 8032
LDF 8029             ; 8033
RTN                  ; 8034
LD  2   210          ; 8035
RTN                  ; 8036
LDF 8035             ; 8037
RTN                  ; 8038
LD  2   210          ; 8039
LD  0   0            ; 8040
ST  2   210          ; 8041
RTN                  ; 8042
LDF 8039             ; 8043
RTN                  ; 8044
LD  2   211          ; 8045
RTN                  ; 8046
LDF 8045             ; 8047
RTN                  ; 8048
LD  2   211          ; 8049
LD  0   0            ; 8050
ST  2   211          ; 8051
RTN                  ; 8052
LDF 8049             ; 8053
RTN                  ; 8054
LD  2   212          ; 8055
RTN                  ; 8056
LDF 8055             ; 8057
RTN                  ; 8058
LD  2   212          ; 8059
LD  0   0            ; 8060
ST  2   212          ; 8061
RTN                  ; 8062
LDF 8059             ; 8063
RTN                  ; 8064
LD  2   213          ; 8065
RTN                  ; 8066
LDF 8065             ; 8067
RTN                  ; 8068
LD  2   213          ; 8069
LD  0   0            ; 8070
ST  2   213          ; 8071
RTN                  ; 8072
LDF 8069             ; 8073
RTN                  ; 8074
LD  2   214          ; 8075
RTN                  ; 8076
LDF 8075             ; 8077
RTN                  ; 8078
LD  2   214          ; 8079
LD  0   0            ; 8080
ST  2   214          ; 8081
RTN                  ; 8082
LDF 8079             ; 8083
RTN                  ; 8084
LD  2   215          ; 8085
RTN                  ; 8086
LDF 8085             ; 8087
RTN                  ; 8088
LD  2   215          ; 8089
LD  0   0            ; 8090
ST  2   215          ; 8091
RTN                  ; 8092
LDF 8089             ; 8093
RTN                  ; 8094
LD  2   216          ; 8095
RTN                  ; 8096
LDF 8095             ; 8097
RTN                  ; 8098
LD  2   216          ; 8099
LD  0   0            ; 8100
ST  2   216          ; 8101
RTN                  ; 8102
LDF 8099             ; 8103
RTN                  ; 8104
LD  2   217          ; 8105
RTN                  ; 8106
LDF 8105             ; 8107
RTN                  ; 8108
LD  2   217          ; 8109
LD  0   0            ; 8110
ST  2   217          ; 8111
RTN                  ; 8112
LDF 8109             ; 8113
RTN                  ; 8114
LD  2   218          ; 8115
RTN                  ; 8116
LDF 8115             ; 8117
RTN                  ; 8118
LD  2   218          ; 8119
LD  0   0            ; 8120
ST  2   218          ; 8121
RTN                  ; 8122
LDF 8119             ; 8123
RTN                  ; 8124
LD  2   219          ; 8125
RTN                  ; 8126
LDF 8125             ; 8127
RTN                  ; 8128
LD  2   219          ; 8129
LD  0   0            ; 8130
ST  2   219          ; 8131
RTN                  ; 8132
LDF 8129             ; 8133
RTN                  ; 8134
LD  2   220          ; 8135
RTN                  ; 8136
LDF 8135             ; 8137
RTN                  ; 8138
LD  2   220          ; 8139
LD  0   0            ; 8140
ST  2   220          ; 8141
RTN                  ; 8142
LDF 8139             ; 8143
RTN                  ; 8144
LD  2   221          ; 8145
RTN                  ; 8146
LDF 8145             ; 8147
RTN                  ; 8148
LD  2   221          ; 8149
LD  0   0            ; 8150
ST  2   221          ; 8151
RTN                  ; 8152
LDF 8149             ; 8153
RTN                  ; 8154
LD  2   222          ; 8155
RTN                  ; 8156
LDF 8155             ; 8157
RTN                  ; 8158
LD  2   222          ; 8159
LD  0   0            ; 8160
ST  2   222          ; 8161
RTN                  ; 8162
LDF 8159             ; 8163
RTN                  ; 8164
LD  2   223          ; 8165
RTN                  ; 8166
LDF 8165             ; 8167
RTN                  ; 8168
LD  2   223          ; 8169
LD  0   0            ; 8170
ST  2   223          ; 8171
RTN                  ; 8172
LDF 8169             ; 8173
RTN                  ; 8174
LD  2   224          ; 8175
RTN                  ; 8176
LDF 8175             ; 8177
RTN                  ; 8178
LD  2   224          ; 8179
LD  0   0            ; 8180
ST  2   224          ; 8181
RTN                  ; 8182
LDF 8179             ; 8183
RTN                  ; 8184
LD  2   225          ; 8185
RTN                  ; 8186
LDF 8185             ; 8187
RTN                  ; 8188
LD  2   225          ; 8189
LD  0   0            ; 8190
ST  2   225          ; 8191
RTN                  ; 8192
LDF 8189             ; 8193
RTN                  ; 8194
LD  2   226          ; 8195
RTN                  ; 8196
LDF 8195             ; 8197
RTN                  ; 8198
LD  2   226          ; 8199
LD  0   0            ; 8200
ST  2   226          ; 8201
RTN                  ; 8202
LDF 8199             ; 8203
RTN                  ; 8204
LD  2   227          ; 8205
RTN                  ; 8206
LDF 8205             ; 8207
RTN                  ; 8208
LD  2   227          ; 8209
LD  0   0            ; 8210
ST  2   227          ; 8211
RTN                  ; 8212
LDF 8209             ; 8213
RTN                  ; 8214
LD  2   228          ; 8215
RTN                  ; 8216
LDF 8215             ; 8217
RTN                  ; 8218
LD  2   228          ; 8219
LD  0   0            ; 8220
ST  2   228          ; 8221
RTN                  ; 8222
LDF 8219             ; 8223
RTN                  ; 8224
LD  2   229          ; 8225
RTN                  ; 8226
LDF 8225             ; 8227
RTN                  ; 8228
LD  2   229          ; 8229
LD  0   0            ; 8230
ST  2   229          ; 8231
RTN                  ; 8232
LDF 8229             ; 8233
RTN                  ; 8234
LD  2   230          ; 8235
RTN                  ; 8236
LDF 8235             ; 8237
RTN                  ; 8238
LD  2   230          ; 8239
LD  0   0            ; 8240
ST  2   230          ; 8241
RTN                  ; 8242
LDF 8239             ; 8243
RTN                  ; 8244
LD  2   231          ; 8245
RTN                  ; 8246
LDF 8245             ; 8247
RTN                  ; 8248
LD  2   231          ; 8249
LD  0   0            ; 8250
ST  2   231          ; 8251
RTN                  ; 8252
LDF 8249             ; 8253
RTN                  ; 8254
LD  2   232          ; 8255
RTN                  ; 8256
LDF 8255             ; 8257
RTN                  ; 8258
LD  2   232          ; 8259
LD  0   0            ; 8260
ST  2   232          ; 8261
RTN                  ; 8262
LDF 8259             ; 8263
RTN                  ; 8264
LD  2   233          ; 8265
RTN                  ; 8266
LDF 8265             ; 8267
RTN                  ; 8268
LD  2   233          ; 8269
LD  0   0            ; 8270
ST  2   233          ; 8271
RTN                  ; 8272
LDF 8269             ; 8273
RTN                  ; 8274
LD  2   234          ; 8275
RTN                  ; 8276
LDF 8275             ; 8277
RTN                  ; 8278
LD  2   234          ; 8279
LD  0   0            ; 8280
ST  2   234          ; 8281
RTN                  ; 8282
LDF 8279             ; 8283
RTN                  ; 8284
LD  2   235          ; 8285
RTN                  ; 8286
LDF 8285             ; 8287
RTN                  ; 8288
LD  2   235          ; 8289
LD  0   0            ; 8290
ST  2   235          ; 8291
RTN                  ; 8292
LDF 8289             ; 8293
RTN                  ; 8294
LD  2   236          ; 8295
RTN                  ; 8296
LDF 8295             ; 8297
RTN                  ; 8298
LD  2   236          ; 8299
LD  0   0            ; 8300
ST  2   236          ; 8301
RTN                  ; 8302
LDF 8299             ; 8303
RTN                  ; 8304
LD  2   237          ; 8305
RTN                  ; 8306
LDF 8305             ; 8307
RTN                  ; 8308
LD  2   237          ; 8309
LD  0   0            ; 8310
ST  2   237          ; 8311
RTN                  ; 8312
LDF 8309             ; 8313
RTN                  ; 8314
LD  2   238          ; 8315
RTN                  ; 8316
LDF 8315             ; 8317
RTN                  ; 8318
LD  2   238          ; 8319
LD  0   0            ; 8320
ST  2   238          ; 8321
RTN                  ; 8322
LDF 8319             ; 8323
RTN                  ; 8324
LD  2   239          ; 8325
RTN                  ; 8326
LDF 8325             ; 8327
RTN                  ; 8328
LD  2   239          ; 8329
LD  0   0            ; 8330
ST  2   239          ; 8331
RTN                  ; 8332
LDF 8329             ; 8333
RTN                  ; 8334
LD  2   240          ; 8335
RTN                  ; 8336
LDF 8335             ; 8337
RTN                  ; 8338
LD  2   240          ; 8339
LD  0   0            ; 8340
ST  2   240          ; 8341
RTN                  ; 8342
LDF 8339             ; 8343
RTN                  ; 8344
LD  2   241          ; 8345
RTN                  ; 8346
LDF 8345             ; 8347
RTN                  ; 8348
LD  2   241          ; 8349
LD  0   0            ; 8350
ST  2   241          ; 8351
RTN                  ; 8352
LDF 8349             ; 8353
RTN                  ; 8354
LD  2   242          ; 8355
RTN                  ; 8356
LDF 8355             ; 8357
RTN                  ; 8358
LD  2   242          ; 8359
LD  0   0            ; 8360
ST  2   242          ; 8361
RTN                  ; 8362
LDF 8359             ; 8363
RTN                  ; 8364
LD  2   243          ; 8365
RTN                  ; 8366
LDF 8365             ; 8367
RTN                  ; 8368
LD  2   243          ; 8369
LD  0   0            ; 8370
ST  2   243          ; 8371
RTN                  ; 8372
LDF 8369             ; 8373
RTN                  ; 8374
LD  2   244          ; 8375
RTN                  ; 8376
LDF 8375             ; 8377
RTN                  ; 8378
LD  2   244          ; 8379
LD  0   0            ; 8380
ST  2   244          ; 8381
RTN                  ; 8382
LDF 8379             ; 8383
RTN                  ; 8384
LD  2   245          ; 8385
RTN                  ; 8386
LDF 8385             ; 8387
RTN                  ; 8388
LD  2   245          ; 8389
LD  0   0            ; 8390
ST  2   245          ; 8391
RTN                  ; 8392
LDF 8389             ; 8393
RTN                  ; 8394
LD  2   246          ; 8395
RTN                  ; 8396
LDF 8395             ; 8397
RTN                  ; 8398
LD  2   246          ; 8399
LD  0   0            ; 8400
ST  2   246          ; 8401
RTN                  ; 8402
LDF 8399             ; 8403
RTN                  ; 8404
LD  2   247          ; 8405
RTN                  ; 8406
LDF 8405             ; 8407
RTN                  ; 8408
LD  2   247          ; 8409
LD  0   0            ; 8410
ST  2   247          ; 8411
RTN                  ; 8412
LDF 8409             ; 8413
RTN                  ; 8414
LD  2   248          ; 8415
RTN                  ; 8416
LDF 8415             ; 8417
RTN                  ; 8418
LD  2   248          ; 8419
LD  0   0            ; 8420
ST  2   248          ; 8421
RTN                  ; 8422
LDF 8419             ; 8423
RTN                  ; 8424
LD  2   249          ; 8425
RTN                  ; 8426
LDF 8425             ; 8427
RTN                  ; 8428
LD  2   249          ; 8429
LD  0   0            ; 8430
ST  2   249          ; 8431
RTN                  ; 8432
LDF 8429             ; 8433
RTN                  ; 8434
LD  2   250          ; 8435
RTN                  ; 8436
LDF 8435             ; 8437
RTN                  ; 8438
LD  2   250          ; 8439
LD  0   0            ; 8440
ST  2   250          ; 8441
RTN                  ; 8442
LDF 8439             ; 8443
RTN                  ; 8444
LD  2   251          ; 8445
RTN                  ; 8446
LDF 8445             ; 8447
RTN                  ; 8448
LD  2   251          ; 8449
LD  0   0            ; 8450
ST  2   251          ; 8451
RTN                  ; 8452
LDF 8449             ; 8453
RTN                  ; 8454
LD  2   252          ; 8455
RTN                  ; 8456
LDF 8455             ; 8457
RTN                  ; 8458
LD  2   252          ; 8459
LD  0   0            ; 8460
ST  2   252          ; 8461
RTN                  ; 8462
LDF 8459             ; 8463
RTN                  ; 8464
LD  2   253          ; 8465
RTN                  ; 8466
LDF 8465             ; 8467
RTN                  ; 8468
LD  2   253          ; 8469
LD  0   0            ; 8470
ST  2   253          ; 8471
RTN                  ; 8472
LDF 8469             ; 8473
RTN                  ; 8474
LD  2   254          ; 8475
RTN                  ; 8476
LDF 8475             ; 8477
RTN                  ; 8478
LD  2   254          ; 8479
LD  0   0            ; 8480
ST  2   254          ; 8481
RTN                  ; 8482
LDF 8479             ; 8483
RTN                  ; 8484
LD  2   255          ; 8485
RTN                  ; 8486
LDF 8485             ; 8487
RTN                  ; 8488
LD  2   255          ; 8489
LD  0   0            ; 8490
ST  2   255          ; 8491
RTN                  ; 8492
LDF 8489             ; 8493
RTN                  ; 8494
LDC 0               ; generated from native: sample_map ; 8495
LDC 0                ; 8496
LDC 0                ; 8497
LDC 0                ; 8498
LDC 0                ; 8499
LDC 0                ; 8500
LDC 0                ; 8501
LDC 0                ; 8502
LDC 0                ; 8503
LDC 0                ; 8504
LDC 0                ; 8505
LDC 0                ; 8506
LDC 0                ; 8507
LDC 0                ; 8508
LDC 0                ; 8509
LDC 0                ; 8510
LDC 0                ; 8511
LDC 0                ; 8512
LDC 0                ; 8513
LDC 0                ; 8514
LDC 0                ; 8515
LDC 0                ; 8516
LDC 0                ; 8517
LDC 0                ; 8518
CONS                 ; 8519
CONS                 ; 8520
CONS                 ; 8521
CONS                 ; 8522
CONS                 ; 8523
CONS                 ; 8524
CONS                 ; 8525
CONS                 ; 8526
CONS                 ; 8527
CONS                 ; 8528
CONS                 ; 8529
CONS                 ; 8530
CONS                 ; 8531
CONS                 ; 8532
CONS                 ; 8533
CONS                 ; 8534
CONS                 ; 8535
CONS                 ; 8536
CONS                 ; 8537
CONS                 ; 8538
CONS                 ; 8539
CONS                 ; 8540
CONS                 ; 8541
LDC 0                ; 8542
LDC 2                ; 8543
LDC 2                ; 8544
LDC 2                ; 8545
LDC 2                ; 8546
LDC 2                ; 8547
LDC 2                ; 8548
LDC 2                ; 8549
LDC 2                ; 8550
LDC 2                ; 8551
LDC 2                ; 8552
LDC 0                ; 8553
LDC 2                ; 8554
LDC 2                ; 8555
LDC 2                ; 8556
LDC 2                ; 8557
LDC 2                ; 8558
LDC 2                ; 8559
LDC 2                ; 8560
LDC 2                ; 8561
LDC 2                ; 8562
LDC 2                ; 8563
LDC 0                ; 8564
LDC 0                ; 8565
CONS                 ; 8566
CONS                 ; 8567
CONS                 ; 8568
CONS                 ; 8569
CONS                 ; 8570
CONS                 ; 8571
CONS                 ; 8572
CONS                 ; 8573
CONS                 ; 8574
CONS                 ; 8575
CONS                 ; 8576
CONS                 ; 8577
CONS                 ; 8578
CONS                 ; 8579
CONS                 ; 8580
CONS                 ; 8581
CONS                 ; 8582
CONS                 ; 8583
CONS                 ; 8584
CONS                 ; 8585
CONS                 ; 8586
CONS                 ; 8587
CONS                 ; 8588
LDC 0                ; 8589
LDC 2                ; 8590
LDC 0                ; 8591
LDC 0                ; 8592
LDC 0                ; 8593
LDC 2                ; 8594
LDC 0                ; 8595
LDC 0                ; 8596
LDC 0                ; 8597
LDC 0                ; 8598
LDC 2                ; 8599
LDC 0                ; 8600
LDC 2                ; 8601
LDC 0                ; 8602
LDC 0                ; 8603
LDC 0                ; 8604
LDC 0                ; 8605
LDC 2                ; 8606
LDC 0                ; 8607
LDC 0                ; 8608
LDC 0                ; 8609
LDC 2                ; 8610
LDC 0                ; 8611
LDC 0                ; 8612
CONS                 ; 8613
CONS                 ; 8614
CONS                 ; 8615
CONS                 ; 8616
CONS                 ; 8617
CONS                 ; 8618
CONS                 ; 8619
CONS                 ; 8620
CONS                 ; 8621
CONS                 ; 8622
CONS                 ; 8623
CONS                 ; 8624
CONS                 ; 8625
CONS                 ; 8626
CONS                 ; 8627
CONS                 ; 8628
CONS                 ; 8629
CONS                 ; 8630
CONS                 ; 8631
CONS                 ; 8632
CONS                 ; 8633
CONS                 ; 8634
CONS                 ; 8635
LDC 0                ; 8636
LDC 3                ; 8637
LDC 0                ; 8638
LDC 0                ; 8639
LDC 0                ; 8640
LDC 2                ; 8641
LDC 0                ; 8642
LDC 0                ; 8643
LDC 0                ; 8644
LDC 0                ; 8645
LDC 2                ; 8646
LDC 0                ; 8647
LDC 2                ; 8648
LDC 0                ; 8649
LDC 0                ; 8650
LDC 0                ; 8651
LDC 0                ; 8652
LDC 2                ; 8653
LDC 0                ; 8654
LDC 0                ; 8655
LDC 0                ; 8656
LDC 3                ; 8657
LDC 0                ; 8658
LDC 0                ; 8659
CONS                 ; 8660
CONS                 ; 8661
CONS                 ; 8662
CONS                 ; 8663
CONS                 ; 8664
CONS                 ; 8665
CONS                 ; 8666
CONS                 ; 8667
CONS                 ; 8668
CONS                 ; 8669
CONS                 ; 8670
CONS                 ; 8671
CONS                 ; 8672
CONS                 ; 8673
CONS                 ; 8674
CONS                 ; 8675
CONS                 ; 8676
CONS                 ; 8677
CONS                 ; 8678
CONS                 ; 8679
CONS                 ; 8680
CONS                 ; 8681
CONS                 ; 8682
LDC 0                ; 8683
LDC 2                ; 8684
LDC 2                ; 8685
LDC 2                ; 8686
LDC 2                ; 8687
LDC 2                ; 8688
LDC 2                ; 8689
LDC 2                ; 8690
LDC 2                ; 8691
LDC 2                ; 8692
LDC 2                ; 8693
LDC 2                ; 8694
LDC 2                ; 8695
LDC 2                ; 8696
LDC 2                ; 8697
LDC 2                ; 8698
LDC 2                ; 8699
LDC 2                ; 8700
LDC 2                ; 8701
LDC 2                ; 8702
LDC 2                ; 8703
LDC 2                ; 8704
LDC 0                ; 8705
LDC 0                ; 8706
CONS                 ; 8707
CONS                 ; 8708
CONS                 ; 8709
CONS                 ; 8710
CONS                 ; 8711
CONS                 ; 8712
CONS                 ; 8713
CONS                 ; 8714
CONS                 ; 8715
CONS                 ; 8716
CONS                 ; 8717
CONS                 ; 8718
CONS                 ; 8719
CONS                 ; 8720
CONS                 ; 8721
CONS                 ; 8722
CONS                 ; 8723
CONS                 ; 8724
CONS                 ; 8725
CONS                 ; 8726
CONS                 ; 8727
CONS                 ; 8728
CONS                 ; 8729
LDC 0                ; 8730
LDC 2                ; 8731
LDC 0                ; 8732
LDC 0                ; 8733
LDC 0                ; 8734
LDC 2                ; 8735
LDC 0                ; 8736
LDC 2                ; 8737
LDC 0                ; 8738
LDC 0                ; 8739
LDC 0                ; 8740
LDC 0                ; 8741
LDC 0                ; 8742
LDC 0                ; 8743
LDC 0                ; 8744
LDC 2                ; 8745
LDC 0                ; 8746
LDC 2                ; 8747
LDC 0                ; 8748
LDC 0                ; 8749
LDC 0                ; 8750
LDC 2                ; 8751
LDC 0                ; 8752
LDC 0                ; 8753
CONS                 ; 8754
CONS                 ; 8755
CONS                 ; 8756
CONS                 ; 8757
CONS                 ; 8758
CONS                 ; 8759
CONS                 ; 8760
CONS                 ; 8761
CONS                 ; 8762
CONS                 ; 8763
CONS                 ; 8764
CONS                 ; 8765
CONS                 ; 8766
CONS                 ; 8767
CONS                 ; 8768
CONS                 ; 8769
CONS                 ; 8770
CONS                 ; 8771
CONS                 ; 8772
CONS                 ; 8773
CONS                 ; 8774
CONS                 ; 8775
CONS                 ; 8776
LDC 0                ; 8777
LDC 2                ; 8778
LDC 2                ; 8779
LDC 2                ; 8780
LDC 2                ; 8781
LDC 2                ; 8782
LDC 0                ; 8783
LDC 2                ; 8784
LDC 2                ; 8785
LDC 2                ; 8786
LDC 2                ; 8787
LDC 0                ; 8788
LDC 2                ; 8789
LDC 2                ; 8790
LDC 2                ; 8791
LDC 2                ; 8792
LDC 0                ; 8793
LDC 2                ; 8794
LDC 2                ; 8795
LDC 2                ; 8796
LDC 2                ; 8797
LDC 2                ; 8798
LDC 0                ; 8799
LDC 0                ; 8800
CONS                 ; 8801
CONS                 ; 8802
CONS                 ; 8803
CONS                 ; 8804
CONS                 ; 8805
CONS                 ; 8806
CONS                 ; 8807
CONS                 ; 8808
CONS                 ; 8809
CONS                 ; 8810
CONS                 ; 8811
CONS                 ; 8812
CONS                 ; 8813
CONS                 ; 8814
CONS                 ; 8815
CONS                 ; 8816
CONS                 ; 8817
CONS                 ; 8818
CONS                 ; 8819
CONS                 ; 8820
CONS                 ; 8821
CONS                 ; 8822
CONS                 ; 8823
LDC 0                ; 8824
LDC 0                ; 8825
LDC 0                ; 8826
LDC 0                ; 8827
LDC 0                ; 8828
LDC 2                ; 8829
LDC 0                ; 8830
LDC 0                ; 8831
LDC 0                ; 8832
LDC 0                ; 8833
LDC 1                ; 8834
LDC 0                ; 8835
LDC 1                ; 8836
LDC 0                ; 8837
LDC 0                ; 8838
LDC 0                ; 8839
LDC 0                ; 8840
LDC 2                ; 8841
LDC 0                ; 8842
LDC 0                ; 8843
LDC 0                ; 8844
LDC 0                ; 8845
LDC 0                ; 8846
LDC 0                ; 8847
CONS                 ; 8848
CONS                 ; 8849
CONS                 ; 8850
CONS                 ; 8851
CONS                 ; 8852
CONS                 ; 8853
CONS                 ; 8854
CONS                 ; 8855
CONS                 ; 8856
CONS                 ; 8857
CONS                 ; 8858
CONS                 ; 8859
CONS                 ; 8860
CONS                 ; 8861
CONS                 ; 8862
CONS                 ; 8863
CONS                 ; 8864
CONS                 ; 8865
CONS                 ; 8866
CONS                 ; 8867
CONS                 ; 8868
CONS                 ; 8869
CONS                 ; 8870
LDC 0                ; 8871
LDC 1                ; 8872
LDC 1                ; 8873
LDC 1                ; 8874
LDC 0                ; 8875
LDC 2                ; 8876
LDC 0                ; 8877
LDC 1                ; 8878
LDC 1                ; 8879
LDC 1                ; 8880
LDC 1                ; 8881
LDC 6                ; 8882
LDC 1                ; 8883
LDC 1                ; 8884
LDC 1                ; 8885
LDC 1                ; 8886
LDC 0                ; 8887
LDC 2                ; 8888
LDC 0                ; 8889
LDC 1                ; 8890
LDC 1                ; 8891
LDC 1                ; 8892
LDC 0                ; 8893
LDC 0                ; 8894
CONS                 ; 8895
CONS                 ; 8896
CONS                 ; 8897
CONS                 ; 8898
CONS                 ; 8899
CONS                 ; 8900
CONS                 ; 8901
CONS                 ; 8902
CONS                 ; 8903
CONS                 ; 8904
CONS                 ; 8905
CONS                 ; 8906
CONS                 ; 8907
CONS                 ; 8908
CONS                 ; 8909
CONS                 ; 8910
CONS                 ; 8911
CONS                 ; 8912
CONS                 ; 8913
CONS                 ; 8914
CONS                 ; 8915
CONS                 ; 8916
CONS                 ; 8917
LDC 0                ; 8918
LDC 0                ; 8919
LDC 0                ; 8920
LDC 0                ; 8921
LDC 0                ; 8922
LDC 2                ; 8923
LDC 0                ; 8924
LDC 1                ; 8925
LDC 0                ; 8926
LDC 0                ; 8927
LDC 0                ; 8928
LDC 1                ; 8929
LDC 0                ; 8930
LDC 0                ; 8931
LDC 0                ; 8932
LDC 1                ; 8933
LDC 0                ; 8934
LDC 2                ; 8935
LDC 0                ; 8936
LDC 0                ; 8937
LDC 0                ; 8938
LDC 0                ; 8939
LDC 0                ; 8940
LDC 0                ; 8941
CONS                 ; 8942
CONS                 ; 8943
CONS                 ; 8944
CONS                 ; 8945
CONS                 ; 8946
CONS                 ; 8947
CONS                 ; 8948
CONS                 ; 8949
CONS                 ; 8950
CONS                 ; 8951
CONS                 ; 8952
CONS                 ; 8953
CONS                 ; 8954
CONS                 ; 8955
CONS                 ; 8956
CONS                 ; 8957
CONS                 ; 8958
CONS                 ; 8959
CONS                 ; 8960
CONS                 ; 8961
CONS                 ; 8962
CONS                 ; 8963
CONS                 ; 8964
LDC 0                ; 8965
LDC 1                ; 8966
LDC 1                ; 8967
LDC 1                ; 8968
LDC 1                ; 8969
LDC 2                ; 8970
LDC 1                ; 8971
LDC 1                ; 8972
LDC 0                ; 8973
LDC 1                ; 8974
LDC 6                ; 8975
LDC 6                ; 8976
LDC 6                ; 8977
LDC 1                ; 8978
LDC 0                ; 8979
LDC 1                ; 8980
LDC 1                ; 8981
LDC 2                ; 8982
LDC 1                ; 8983
LDC 1                ; 8984
LDC 1                ; 8985
LDC 1                ; 8986
LDC 0                ; 8987
LDC 0                ; 8988
CONS                 ; 8989
CONS                 ; 8990
CONS                 ; 8991
CONS                 ; 8992
CONS                 ; 8993
CONS                 ; 8994
CONS                 ; 8995
CONS                 ; 8996
CONS                 ; 8997
CONS                 ; 8998
CONS                 ; 8999
CONS                 ; 9000
CONS                 ; 9001
CONS                 ; 9002
CONS                 ; 9003
CONS                 ; 9004
CONS                 ; 9005
CONS                 ; 9006
CONS                 ; 9007
CONS                 ; 9008
CONS                 ; 9009
CONS                 ; 9010
CONS                 ; 9011
LDC 0                ; 9012
LDC 0                ; 9013
LDC 0                ; 9014
LDC 0                ; 9015
LDC 0                ; 9016
LDC 2                ; 9017
LDC 0                ; 9018
LDC 1                ; 9019
LDC 0                ; 9020
LDC 0                ; 9021
LDC 0                ; 9022
LDC 0                ; 9023
LDC 0                ; 9024
LDC 0                ; 9025
LDC 0                ; 9026
LDC 1                ; 9027
LDC 0                ; 9028
LDC 2                ; 9029
LDC 0                ; 9030
LDC 0                ; 9031
LDC 0                ; 9032
LDC 0                ; 9033
LDC 0                ; 9034
LDC 0                ; 9035
CONS                 ; 9036
CONS                 ; 9037
CONS                 ; 9038
CONS                 ; 9039
CONS                 ; 9040
CONS                 ; 9041
CONS                 ; 9042
CONS                 ; 9043
CONS                 ; 9044
CONS                 ; 9045
CONS                 ; 9046
CONS                 ; 9047
CONS                 ; 9048
CONS                 ; 9049
CONS                 ; 9050
CONS                 ; 9051
CONS                 ; 9052
CONS                 ; 9053
CONS                 ; 9054
CONS                 ; 9055
CONS                 ; 9056
CONS                 ; 9057
CONS                 ; 9058
LDC 0                ; 9059
LDC 1                ; 9060
LDC 1                ; 9061
LDC 1                ; 9062
LDC 0                ; 9063
LDC 2                ; 9064
LDC 0                ; 9065
LDC 1                ; 9066
LDC 1                ; 9067
LDC 1                ; 9068
LDC 1                ; 9069
LDC 4                ; 9070
LDC 1                ; 9071
LDC 1                ; 9072
LDC 1                ; 9073
LDC 1                ; 9074
LDC 0                ; 9075
LDC 2                ; 9076
LDC 0                ; 9077
LDC 1                ; 9078
LDC 1                ; 9079
LDC 1                ; 9080
LDC 0                ; 9081
LDC 0                ; 9082
CONS                 ; 9083
CONS                 ; 9084
CONS                 ; 9085
CONS                 ; 9086
CONS                 ; 9087
CONS                 ; 9088
CONS                 ; 9089
CONS                 ; 9090
CONS                 ; 9091
CONS                 ; 9092
CONS                 ; 9093
CONS                 ; 9094
CONS                 ; 9095
CONS                 ; 9096
CONS                 ; 9097
CONS                 ; 9098
CONS                 ; 9099
CONS                 ; 9100
CONS                 ; 9101
CONS                 ; 9102
CONS                 ; 9103
CONS                 ; 9104
CONS                 ; 9105
LDC 0                ; 9106
LDC 0                ; 9107
LDC 0                ; 9108
LDC 0                ; 9109
LDC 0                ; 9110
LDC 2                ; 9111
LDC 0                ; 9112
LDC 1                ; 9113
LDC 0                ; 9114
LDC 0                ; 9115
LDC 0                ; 9116
LDC 0                ; 9117
LDC 0                ; 9118
LDC 0                ; 9119
LDC 0                ; 9120
LDC 1                ; 9121
LDC 0                ; 9122
LDC 2                ; 9123
LDC 0                ; 9124
LDC 0                ; 9125
LDC 0                ; 9126
LDC 0                ; 9127
LDC 0                ; 9128
LDC 0                ; 9129
CONS                 ; 9130
CONS                 ; 9131
CONS                 ; 9132
CONS                 ; 9133
CONS                 ; 9134
CONS                 ; 9135
CONS                 ; 9136
CONS                 ; 9137
CONS                 ; 9138
CONS                 ; 9139
CONS                 ; 9140
CONS                 ; 9141
CONS                 ; 9142
CONS                 ; 9143
CONS                 ; 9144
CONS                 ; 9145
CONS                 ; 9146
CONS                 ; 9147
CONS                 ; 9148
CONS                 ; 9149
CONS                 ; 9150
CONS                 ; 9151
CONS                 ; 9152
LDC 0                ; 9153
LDC 2                ; 9154
LDC 2                ; 9155
LDC 2                ; 9156
LDC 2                ; 9157
LDC 2                ; 9158
LDC 2                ; 9159
LDC 2                ; 9160
LDC 2                ; 9161
LDC 2                ; 9162
LDC 2                ; 9163
LDC 0                ; 9164
LDC 2                ; 9165
LDC 2                ; 9166
LDC 2                ; 9167
LDC 2                ; 9168
LDC 2                ; 9169
LDC 2                ; 9170
LDC 2                ; 9171
LDC 2                ; 9172
LDC 2                ; 9173
LDC 2                ; 9174
LDC 0                ; 9175
LDC 0                ; 9176
CONS                 ; 9177
CONS                 ; 9178
CONS                 ; 9179
CONS                 ; 9180
CONS                 ; 9181
CONS                 ; 9182
CONS                 ; 9183
CONS                 ; 9184
CONS                 ; 9185
CONS                 ; 9186
CONS                 ; 9187
CONS                 ; 9188
CONS                 ; 9189
CONS                 ; 9190
CONS                 ; 9191
CONS                 ; 9192
CONS                 ; 9193
CONS                 ; 9194
CONS                 ; 9195
CONS                 ; 9196
CONS                 ; 9197
CONS                 ; 9198
CONS                 ; 9199
LDC 0                ; 9200
LDC 2                ; 9201
LDC 0                ; 9202
LDC 0                ; 9203
LDC 0                ; 9204
LDC 2                ; 9205
LDC 0                ; 9206
LDC 0                ; 9207
LDC 0                ; 9208
LDC 0                ; 9209
LDC 2                ; 9210
LDC 0                ; 9211
LDC 2                ; 9212
LDC 0                ; 9213
LDC 0                ; 9214
LDC 0                ; 9215
LDC 0                ; 9216
LDC 2                ; 9217
LDC 0                ; 9218
LDC 0                ; 9219
LDC 0                ; 9220
LDC 2                ; 9221
LDC 0                ; 9222
LDC 0                ; 9223
CONS                 ; 9224
CONS                 ; 9225
CONS                 ; 9226
CONS                 ; 9227
CONS                 ; 9228
CONS                 ; 9229
CONS                 ; 9230
CONS                 ; 9231
CONS                 ; 9232
CONS                 ; 9233
CONS                 ; 9234
CONS                 ; 9235
CONS                 ; 9236
CONS                 ; 9237
CONS                 ; 9238
CONS                 ; 9239
CONS                 ; 9240
CONS                 ; 9241
CONS                 ; 9242
CONS                 ; 9243
CONS                 ; 9244
CONS                 ; 9245
CONS                 ; 9246
LDC 0                ; 9247
LDC 3                ; 9248
LDC 2                ; 9249
LDC 2                ; 9250
LDC 0                ; 9251
LDC 2                ; 9252
LDC 2                ; 9253
LDC 2                ; 9254
LDC 2                ; 9255
LDC 2                ; 9256
LDC 2                ; 9257
LDC 5                ; 9258
LDC 2                ; 9259
LDC 2                ; 9260
LDC 2                ; 9261
LDC 2                ; 9262
LDC 2                ; 9263
LDC 2                ; 9264
LDC 0                ; 9265
LDC 2                ; 9266
LDC 2                ; 9267
LDC 3                ; 9268
LDC 0                ; 9269
LDC 0                ; 9270
CONS                 ; 9271
CONS                 ; 9272
CONS                 ; 9273
CONS                 ; 9274
CONS                 ; 9275
CONS                 ; 9276
CONS                 ; 9277
CONS                 ; 9278
CONS                 ; 9279
CONS                 ; 9280
CONS                 ; 9281
CONS                 ; 9282
CONS                 ; 9283
CONS                 ; 9284
CONS                 ; 9285
CONS                 ; 9286
CONS                 ; 9287
CONS                 ; 9288
CONS                 ; 9289
CONS                 ; 9290
CONS                 ; 9291
CONS                 ; 9292
CONS                 ; 9293
LDC 0                ; 9294
LDC 0                ; 9295
LDC 0                ; 9296
LDC 2                ; 9297
LDC 0                ; 9298
LDC 2                ; 9299
LDC 0                ; 9300
LDC 2                ; 9301
LDC 0                ; 9302
LDC 0                ; 9303
LDC 0                ; 9304
LDC 0                ; 9305
LDC 0                ; 9306
LDC 0                ; 9307
LDC 0                ; 9308
LDC 2                ; 9309
LDC 0                ; 9310
LDC 2                ; 9311
LDC 0                ; 9312
LDC 2                ; 9313
LDC 0                ; 9314
LDC 0                ; 9315
LDC 0                ; 9316
LDC 0                ; 9317
CONS                 ; 9318
CONS                 ; 9319
CONS                 ; 9320
CONS                 ; 9321
CONS                 ; 9322
CONS                 ; 9323
CONS                 ; 9324
CONS                 ; 9325
CONS                 ; 9326
CONS                 ; 9327
CONS                 ; 9328
CONS                 ; 9329
CONS                 ; 9330
CONS                 ; 9331
CONS                 ; 9332
CONS                 ; 9333
CONS                 ; 9334
CONS                 ; 9335
CONS                 ; 9336
CONS                 ; 9337
CONS                 ; 9338
CONS                 ; 9339
CONS                 ; 9340
LDC 0                ; 9341
LDC 2                ; 9342
LDC 2                ; 9343
LDC 2                ; 9344
LDC 2                ; 9345
LDC 2                ; 9346
LDC 0                ; 9347
LDC 2                ; 9348
LDC 2                ; 9349
LDC 2                ; 9350
LDC 2                ; 9351
LDC 0                ; 9352
LDC 2                ; 9353
LDC 2                ; 9354
LDC 2                ; 9355
LDC 2                ; 9356
LDC 0                ; 9357
LDC 2                ; 9358
LDC 2                ; 9359
LDC 2                ; 9360
LDC 2                ; 9361
LDC 2                ; 9362
LDC 0                ; 9363
LDC 0                ; 9364
CONS                 ; 9365
CONS                 ; 9366
CONS                 ; 9367
CONS                 ; 9368
CONS                 ; 9369
CONS                 ; 9370
CONS                 ; 9371
CONS                 ; 9372
CONS                 ; 9373
CONS                 ; 9374
CONS                 ; 9375
CONS                 ; 9376
CONS                 ; 9377
CONS                 ; 9378
CONS                 ; 9379
CONS                 ; 9380
CONS                 ; 9381
CONS                 ; 9382
CONS                 ; 9383
CONS                 ; 9384
CONS                 ; 9385
CONS                 ; 9386
CONS                 ; 9387
LDC 0                ; 9388
LDC 2                ; 9389
LDC 0                ; 9390
LDC 0                ; 9391
LDC 0                ; 9392
LDC 0                ; 9393
LDC 0                ; 9394
LDC 0                ; 9395
LDC 0                ; 9396
LDC 0                ; 9397
LDC 2                ; 9398
LDC 0                ; 9399
LDC 2                ; 9400
LDC 0                ; 9401
LDC 0                ; 9402
LDC 0                ; 9403
LDC 0                ; 9404
LDC 0                ; 9405
LDC 0                ; 9406
LDC 0                ; 9407
LDC 0                ; 9408
LDC 2                ; 9409
LDC 0                ; 9410
LDC 0                ; 9411
CONS                 ; 9412
CONS                 ; 9413
CONS                 ; 9414
CONS                 ; 9415
CONS                 ; 9416
CONS                 ; 9417
CONS                 ; 9418
CONS                 ; 9419
CONS                 ; 9420
CONS                 ; 9421
CONS                 ; 9422
CONS                 ; 9423
CONS                 ; 9424
CONS                 ; 9425
CONS                 ; 9426
CONS                 ; 9427
CONS                 ; 9428
CONS                 ; 9429
CONS                 ; 9430
CONS                 ; 9431
CONS                 ; 9432
CONS                 ; 9433
CONS                 ; 9434
LDC 0                ; 9435
LDC 2                ; 9436
LDC 2                ; 9437
LDC 2                ; 9438
LDC 2                ; 9439
LDC 2                ; 9440
LDC 2                ; 9441
LDC 2                ; 9442
LDC 2                ; 9443
LDC 2                ; 9444
LDC 2                ; 9445
LDC 2                ; 9446
LDC 2                ; 9447
LDC 2                ; 9448
LDC 2                ; 9449
LDC 2                ; 9450
LDC 2                ; 9451
LDC 2                ; 9452
LDC 2                ; 9453
LDC 2                ; 9454
LDC 2                ; 9455
LDC 2                ; 9456
LDC 0                ; 9457
LDC 0                ; 9458
CONS                 ; 9459
CONS                 ; 9460
CONS                 ; 9461
CONS                 ; 9462
CONS                 ; 9463
CONS                 ; 9464
CONS                 ; 9465
CONS                 ; 9466
CONS                 ; 9467
CONS                 ; 9468
CONS                 ; 9469
CONS                 ; 9470
CONS                 ; 9471
CONS                 ; 9472
CONS                 ; 9473
CONS                 ; 9474
CONS                 ; 9475
CONS                 ; 9476
CONS                 ; 9477
CONS                 ; 9478
CONS                 ; 9479
CONS                 ; 9480
CONS                 ; 9481
LDC 0                ; 9482
LDC 0                ; 9483
LDC 0                ; 9484
LDC 0                ; 9485
LDC 0                ; 9486
LDC 0                ; 9487
LDC 0                ; 9488
LDC 0                ; 9489
LDC 0                ; 9490
LDC 0                ; 9491
LDC 0                ; 9492
LDC 0                ; 9493
LDC 0                ; 9494
LDC 0                ; 9495
LDC 0                ; 9496
LDC 0                ; 9497
LDC 0                ; 9498
LDC 0                ; 9499
LDC 0                ; 9500
LDC 0                ; 9501
LDC 0                ; 9502
LDC 0                ; 9503
LDC 0                ; 9504
LDC 0                ; 9505
CONS                 ; 9506
CONS                 ; 9507
CONS                 ; 9508
CONS                 ; 9509
CONS                 ; 9510
CONS                 ; 9511
CONS                 ; 9512
CONS                 ; 9513
CONS                 ; 9514
CONS                 ; 9515
CONS                 ; 9516
CONS                 ; 9517
CONS                 ; 9518
CONS                 ; 9519
CONS                 ; 9520
CONS                 ; 9521
CONS                 ; 9522
CONS                 ; 9523
CONS                 ; 9524
CONS                 ; 9525
CONS                 ; 9526
CONS                 ; 9527
CONS                 ; 9528
LDC 0                ; 9529
CONS                 ; 9530
CONS                 ; 9531
CONS                 ; 9532
CONS                 ; 9533
CONS                 ; 9534
CONS                 ; 9535
CONS                 ; 9536
CONS                 ; 9537
CONS                 ; 9538
CONS                 ; 9539
CONS                 ; 9540
CONS                 ; 9541
CONS                 ; 9542
CONS                 ; 9543
CONS                 ; 9544
CONS                 ; 9545
CONS                 ; 9546
CONS                 ; 9547
CONS                 ; 9548
CONS                 ; 9549
CONS                 ; 9550
CONS                 ; 9551
LDC 0                ; 9552
LDC 11               ; 9553
LDC 16               ; 9554
CONS                 ; 9555
LDC 2                ; 9556
LDC 3                ; 9557
LDC 0                ; 9558
CONS                 ; 9559
CONS                 ; 9560
CONS                 ; 9561
CONS                 ; 9562
LDC 0                ; 9563
LDC 11               ; 9564
LDC 8                ; 9565
CONS                 ; 9566
LDC 2                ; 9567
CONS                 ; 9568
CONS                 ; 9569
LDC 0                ; 9570
LDC 10               ; 9571
LDC 10               ; 9572
CONS                 ; 9573
LDC 2                ; 9574
CONS                 ; 9575
CONS                 ; 9576
LDC 0                ; 9577
LDC 11               ; 9578
LDC 10               ; 9579
CONS                 ; 9580
LDC 2                ; 9581
CONS                 ; 9582
CONS                 ; 9583
LDC 0                ; 9584
LDC 12               ; 9585
LDC 10               ; 9586
CONS                 ; 9587
LDC 2                ; 9588
CONS                 ; 9589
CONS                 ; 9590
LDC 0                ; 9591
CONS                 ; 9592
CONS                 ; 9593
CONS                 ; 9594
CONS                 ; 9595
LDC 0                ; 9596
CONS                 ; 9597
CONS                 ; 9598
CONS                 ; 9599
RTN                  ; 9600
LD     0 0          ;  <== lambda_1000  [x] (as expr) ; 9601
LD     1 1          ; var g ; 9602
AP     1             ; 9603
LD     1 0          ; var f ; 9604
AP     1             ; 9605
RTN                  ; 9606
LD     0 1          ;  <== lambda_1001  [b, a] (as expr) ; 9607
LD     0 0          ; var b ; 9608
LD     1 0          ; var f ; 9609
AP     2             ; 9610
RTN                  ; 9611
LD     0 0          ;  <== lambda_1002  [d] (as expr) ; 9612
LDF    226          ;  @maybeToList ; 9613
AP     1             ; 9614
RTN                  ; 9615
LD     0 0          ;  <== lambda_1003  [SortedMap<T> acc, Tuple<Integer,T> elem] (as expr) ; 9616
LD     0 1          ; var elem ; 9617
CAR                 ; generateTupleAccess total=2 pos=0 ; 9618
LD     0 1          ; var elem ; 9619
CDR                 ; generateTupleAccess total=2 pos=1 ; 9620
LDF    1308         ;  @sorted_map_assoc ; 9621
AP     3             ; 9622
RTN                  ; 9623
LD     0 0          ;  <== lambda_1004  [Integer a] (as expr) ; 9624
LD     0 0          ; var a ; 9625
LDC    2            ; just constant from code ; 9626
DIV                  ; 9627
LDC    2            ; just constant from code ; 9628
MUL                  ; 9629
CEQ                  ; 9630
SEL    9637 9639    ; IF? 59 ; 9631
LD     0 0          ; var a ; 9632
LDC    2            ; just constant from code ; 9633
DIV                  ; 9634
CONS                 ; 9635
RTN                  ; 9636
LDC    0            ; THEN: 59 ; 9637
JOIN                 ; 9638
LDC    1            ; ELSE: 59 ; 9639
JOIN                 ; 9640
LD     0 1          ;  <== lambda_1005  [Integer elem, Integer acc] (as expr) ; 9641
LDC    2            ; just constant from code ; 9642
MUL                  ; 9643
LD     0 0          ; var elem ; 9644
ADD                  ; 9645
RTN                  ; 9646
LD     0 0          ;  <== lambda_1006  [Tuple<Integer,SortedMap<Cons>> init, Cons step] (as expr) ; 9647
CAR                 ; generateTupleAccess total=2 pos=0 ; 9648
LDC    1            ; just constant from code ; 9649
ADD                  ; 9650
LD     0 0          ; var init ; 9651
CDR                 ; generateTupleAccess total=2 pos=1 ; 9652
LD     0 0          ; var init ; 9653
CAR                 ; generateTupleAccess total=2 pos=0 ; 9654
LD     0 1          ; var step ; 9655
LDF    1308         ;  @sorted_map_assoc ; 9656
AP     3             ; 9657
CONS                 ; 9658
RTN                  ; 9659
LDF    3618         ;  <== lambda_1007  [x] (as expr), ALSO: @array_256 ; 9660
AP     0             ; 9661
RTN                  ; 9662
LD     0 0          ;  <== lambda_1008  [a, b] (as expr) ; 9663
LD     0 1          ; var b ; 9664
CONS                 ; 9665
RTN                  ; 9666
LD     0 0          ;  <== lambda_1009  [Tuple<ListCons<Integer>,Function2<Integer,Integer,Function1<Integer,Integer>>> t] (as expr) ; 9667
CAR                 ; generateTupleAccess total=2 pos=0 ; 9668
LDC    0            ; just constant from code ; 9669
LDF    10215        ;  @lambda_1052 ; 9670
LDF    86           ;  @mapi ; 9671
AP     3             ; 9672
RTN                  ; 9673
LD     0 0          ;  <== lambda_1010  [row, rowy] (as expr) ; 9674
LD     0 1          ; var rowy ; 9675
LDF    3517         ;  @collectWalkableXY ; 9676
AP     2             ; 9677
LDC 0               ; local var space ; 9678
LDF    3509         ;  @my_cat_maybes ; 9679
AP     2             ; 9680
RTN                  ; 9681
LD     1 0          ;  <== lambda_1011  [Point w] (as expr) ; 9682
LD     0 0          ; var w ; 9683
CAR                 ; generateTupleAccess total=2 pos=0 ; 9684
LD     0 0          ; var w ; 9685
CDR                 ; generateTupleAccess total=2 pos=1 ; 9686
LDC 0               ; local var space ; 9687
LDC 0               ; local var space ; 9688
LDC 0               ; local var space ; 9689
LDC 0               ; local var space ; 9690
LDF    3096         ;  @isJunction ; 9691
AP     7             ; 9692
RTN                  ; 9693
LD     0 0          ;  <== lambda_1012  [Point pt] (as expr) ; 9694
LDF    3224         ;  @getPointKey ; 9695
AP     1             ; 9696
LD     0 0          ; var pt ; 9697
CONS                 ; 9698
RTN                  ; 9699
LD     1 0          ;  <== lambda_1013  [j] (as expr) ; 9700
LD     0 0          ; var j ; 9701
LD     1 8          ; var junctions ; 9702
LD     1 6          ; var junctionsList ; 9703
LD     1 1          ; var accessors ; 9704
LDC 0               ; local var space ; 9705
LDF    3155         ;  @findNeighbourJunctions ; 9706
AP     6             ; 9707
RTN                  ; 9708
LD     0 0          ;  <== lambda_1014  [ParsedEdge pe, Integer ix] (as expr) ; 9709
CAR                 ; generateTupleAccess total=7 pos=0 ; 9710
LD     0 0          ; var pe ; 9711
CDR                 ; generateTupleAccess total=7 pos=1 ; 9712
CAR                  ; 9713
LD     0 0          ; var pe ; 9714
CDR                 ; generateTupleAccess total=7 pos=2 ; 9715
CDR                  ; 9716
CAR                  ; 9717
LD     0 0          ; var pe ; 9718
CDR                 ; generateTupleAccess total=7 pos=3 ; 9719
CDR                  ; 9720
CDR                  ; 9721
CAR                  ; 9722
LD     0 0          ; var pe ; 9723
CDR                 ; generateTupleAccess total=7 pos=4 ; 9724
CDR                  ; 9725
CDR                  ; 9726
CDR                  ; 9727
CAR                  ; 9728
LD     0 1          ; var ix ; 9729
LDC    -1           ; just negative constant from code ; 9730
CONS                 ; 9731
CONS                 ; 9732
CONS                 ; 9733
CONS                 ; 9734
CONS                 ; 9735
CONS                 ; 9736
RTN                  ; 9737
LD     0 0          ;  <== lambda_1015  [ParsedEdge pe, Integer ix] (as expr) ; 9738
CAR                 ; generateTupleAccess total=7 pos=0 ; 9739
LD     0 0          ; var pe ; 9740
CDR                 ; generateTupleAccess total=7 pos=1 ; 9741
CAR                  ; 9742
LD     0 0          ; var pe ; 9743
CDR                 ; generateTupleAccess total=7 pos=2 ; 9744
CDR                  ; 9745
CAR                  ; 9746
LD     0 0          ; var pe ; 9747
CDR                 ; generateTupleAccess total=7 pos=3 ; 9748
CDR                  ; 9749
CDR                  ; 9750
CAR                  ; 9751
LD     0 0          ; var pe ; 9752
CDR                 ; generateTupleAccess total=7 pos=4 ; 9753
CDR                  ; 9754
CDR                  ; 9755
CDR                  ; 9756
CAR                  ; 9757
LD     0 0          ; var pe ; 9758
CDR                 ; generateTupleAccess total=7 pos=5 ; 9759
CDR                  ; 9760
CDR                  ; 9761
CDR                  ; 9762
CDR                  ; 9763
CAR                  ; 9764
LD     0 0          ; var pe ; 9765
CDR                 ; generateTupleAccess total=7 pos=1 ; 9766
CAR                  ; 9767
LD     0 0          ; var pe ; 9768
CAR                 ; generateTupleAccess total=7 pos=0 ; 9769
LD     1 10         ; var allParsedEdges2 ; 9770
LDF    3495         ;  @findEdge ; 9771
AP     3             ; 9772
LDF    3501         ;  @edgeNumber ; 9773
AP     1             ; 9774
CONS                 ; 9775
CONS                 ; 9776
CONS                 ; 9777
CONS                 ; 9778
CONS                 ; 9779
CONS                 ; 9780
RTN                  ; 9781
LD     0 0          ;  <== lambda_1016  [GhostState g, ListCons s, Integer ind] (as expr) ; 9782
CDR                 ; generateTupleAccess total=3 pos=1 ; 9783
CAR                  ; 9784
LD     0 1          ; var s ; 9785
LD     0 2          ; var ind ; 9786
CONS                 ; 9787
CONS                 ; 9788
RTN                  ; 9789
LD     0 0          ;  <== lambda_1017  [nextaistate, worldState] (as expr) ; 9790
LD     0 1          ; var worldState ; 9791
LDC 0               ; local var space ; 9792
LDC 0               ; local var space ; 9793
LDC 0               ; local var space ; 9794
LDC 0               ; local var space ; 9795
LDC 0               ; local var space ; 9796
LDC 0               ; local var space ; 9797
LDC 0               ; local var space ; 9798
LDC 0               ; local var space ; 9799
LDC 0               ; local var space ; 9800
LDC 0               ; local var space ; 9801
LDC 0               ; local var space ; 9802
LDC 0               ; local var space ; 9803
LDF    2649         ;  @performMove ; 9804
AP     14            ; 9805
RTN                  ; 9806
LD     0 0          ;  <== lambda_1018  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9807
CDR                 ; generateTupleAccess total=2 pos=1 ; 9808
CAR                 ; generateTupleAccess total=2 pos=0 ; 9809
LD     1 1          ; var start ; 9810
CAR                 ; generateTupleAccess total=2 pos=0 ; 9811
CEQ                  ; 9812
LDC    1            ; for negation ; 9813
SUB                  ; 9814
LD     0 0          ; var t ; 9815
CDR                 ; generateTupleAccess total=2 pos=1 ; 9816
CDR                 ; generateTupleAccess total=2 pos=1 ; 9817
LD     1 1          ; var start ; 9818
CDR                 ; generateTupleAccess total=2 pos=1 ; 9819
CEQ                  ; 9820
LDC    1            ; for negation ; 9821
SUB                  ; 9822
ADD                  ; 9823
SEL    9826 9828    ; IF? 60 ; 9824
RTN                  ; 9825
LDC    1            ; THEN: 60 ; 9826
JOIN                 ; 9827
LDC    0            ; ELSE: 60 ; 9828
JOIN                 ; 9829
LDC    0            ;  <== lambda_1019  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9830
LD     0 0          ; var t ; 9831
CAR                 ; generateTupleAccess total=2 pos=0 ; 9832
AP     1             ; 9833
LDC    2            ; Named Const = CT.PILL ; 9834
CEQ                  ; 9835
SEL    9838 9840    ; IF? 61 ; 9836
RTN                  ; 9837
LDC    1            ; THEN: 61 ; 9838
JOIN                 ; 9839
LDC    0            ; ELSE: 61 ; 9840
JOIN                 ; 9841
LD     0 0          ;  <== lambda_1020  [Point p] (as expr) ; 9842
CAR                 ; generateTupleAccess total=2 pos=0 ; 9843
LD     1 1          ; var start ; 9844
CAR                 ; generateTupleAccess total=2 pos=0 ; 9845
CEQ                  ; 9846
LDC    1            ; for negation ; 9847
SUB                  ; 9848
LD     0 0          ; var p ; 9849
CDR                 ; generateTupleAccess total=2 pos=1 ; 9850
LD     1 1          ; var start ; 9851
CDR                 ; generateTupleAccess total=2 pos=1 ; 9852
CEQ                  ; 9853
LDC    1            ; for negation ; 9854
SUB                  ; 9855
ADD                  ; 9856
SEL    9859 9861    ; IF? 62 ; 9857
RTN                  ; 9858
LDC    1            ; THEN: 62 ; 9859
JOIN                 ; 9860
LDC    0            ; ELSE: 62 ; 9861
JOIN                 ; 9862
LD     1 2          ;  <== lambda_1021  [Point p] (as expr) ; 9863
LD     0 0          ; var p ; 9864
CDR                 ; generateTupleAccess total=2 pos=1 ; 9865
LD     0 0          ; var p ; 9866
CAR                 ; generateTupleAccess total=2 pos=0 ; 9867
LDF    3597         ;  @getMapItem ; 9868
AP     3             ; 9869
LDC    6            ; Named Const = CT.GHOST ; 9870
CEQ                  ; 9871
SEL    9874 9876    ; IF? 63 ; 9872
RTN                  ; 9873
LDC    1            ; THEN: 63 ; 9874
JOIN                 ; 9875
LDC    0            ; ELSE: 63 ; 9876
JOIN                 ; 9877
LDC    0            ;  <== lambda_1022  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9878
LD     0 0          ; var t ; 9879
CAR                 ; generateTupleAccess total=2 pos=0 ; 9880
AP     1             ; 9881
LDC    2            ; Named Const = CT.PILL ; 9882
CEQ                  ; 9883
SEL    9886 9888    ; IF? 64 ; 9884
RTN                  ; 9885
LDC    1            ; THEN: 64 ; 9886
JOIN                 ; 9887
LDC    0            ; ELSE: 64 ; 9888
JOIN                 ; 9889
LD     0 0          ;  <== lambda_1023  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9890
LDC    0            ; just constant from code ; 9891
LD     0 1          ; var t ; 9892
CAR                 ; generateTupleAccess total=2 pos=0 ; 9893
AP     1             ; 9894
LDC    2            ; Named Const = CT.PILL ; 9895
CEQ                  ; 9896
SEL    9900 9902    ; IF? 65 ; 9897
ADD                  ; 9898
RTN                  ; 9899
LDC    1            ; THEN: 65 ; 9900
JOIN                 ; 9901
LDC    0            ; ELSE: 65 ; 9902
JOIN                 ; 9903
LD     0 0          ;  <== lambda_1024  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9904
CDR                 ; generateTupleAccess total=2 pos=1 ; 9905
CAR                 ; generateTupleAccess total=2 pos=0 ; 9906
LD     1 1          ; var start ; 9907
CAR                 ; generateTupleAccess total=2 pos=0 ; 9908
CEQ                  ; 9909
LDC    1            ; for negation ; 9910
SUB                  ; 9911
LD     0 0          ; var t ; 9912
CDR                 ; generateTupleAccess total=2 pos=1 ; 9913
CDR                 ; generateTupleAccess total=2 pos=1 ; 9914
LD     1 1          ; var start ; 9915
CDR                 ; generateTupleAccess total=2 pos=1 ; 9916
CEQ                  ; 9917
LDC    1            ; for negation ; 9918
SUB                  ; 9919
ADD                  ; 9920
SEL    9923 9925    ; IF? 66 ; 9921
RTN                  ; 9922
LDC    1            ; THEN: 66 ; 9923
JOIN                 ; 9924
LDC    0            ; ELSE: 66 ; 9925
JOIN                 ; 9926
LDC    0            ;  <== lambda_1025  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9927
LD     0 1          ; var t ; 9928
CAR                 ; generateTupleAccess total=2 pos=0 ; 9929
AP     1             ; 9930
LDC    2            ; Named Const = CT.PILL ; 9931
CEQ                  ; 9932
SEL    9935 9937    ; IF? 67 ; 9933
RTN                  ; 9934
LDC    1            ; THEN: 67 ; 9935
JOIN                 ; 9936
LDC    0            ; ELSE: 67 ; 9937
JOIN                 ; 9938
LD     1 1          ;  <== lambda_1026  [e] (as expr) ; 9939
LD     0 0          ; var e ; 9940
LDF    3385         ;  @pointInEdge ; 9941
AP     2             ; 9942
RTN                  ; 9943
LD     0 0          ;  <== lambda_1027  [Queue<ListCons<ParsedEdge>> qq, ParsedEdge e] (as expr) ; 9944
LD     0 1          ; var e ; 9945
LDC    0            ; NULL literal ; 9946
CONS                 ; 9947
LDF    407          ;  @queue_enqueue ; 9948
AP     2             ; 9949
RTN                  ; 9950
LD     0 0          ;  <== lambda_1028  [ParsedEdge e] (as expr) ; 9951
CDR                 ; generateTupleAccess total=7 pos=5 ; 9952
CDR                  ; 9953
CDR                  ; 9954
CDR                  ; 9955
CDR                  ; 9956
CAR                  ; 9957
LDC    0            ; just constant from code ; 9958
CONS                 ; 9959
RTN                  ; 9960
LD     0 0          ;  <== lambda_1029  [r] (as expr) ; 9961
LDC    5            ; just constant from code ; 9962
LD     0 0          ; var r ; 9963
LDF    125          ;  @last ; 9964
AP     1             ; 9965
LD     1 2          ; var worldState ; 9966
CDR                 ; generateTupleAccess total=4 pos=1 ; 9967
CAR                  ; 9968
CDR                 ; generateTupleAccess total=5 pos=1 ; 9969
CAR                  ; 9970
LDC 0               ; local var space ; 9971
LDC 0               ; local var space ; 9972
LDF    2632         ;  @countMyEdgePills ; 9973
AP     4             ; 9974
MUL                  ; 9975
LD     0 0          ; var r ; 9976
LDF    299          ;  @reverse ; 9977
AP     1             ; 9978
CDR                  ; 9979
LDF    2974         ;  @countRoutePills ; 9980
AP     1             ; 9981
ADD                  ; 9982
CONS                 ; 9983
RTN                  ; 9984
LD     0 0          ;  <== lambda_1030  [Tuple<ListCons<ParsedEdge>,Integer> t] (as expr) ; 9985
CDR                 ; generateTupleAccess total=2 pos=1 ; 9986
RTN                  ; 9987
LD     0 0          ;  <== lambda_1031  [Point p] (as expr) ; 9988
CAR                 ; generateTupleAccess total=2 pos=0 ; 9989
LD     1 2          ; var location ; 9990
CAR                 ; generateTupleAccess total=2 pos=0 ; 9991
CEQ                  ; 9992
LDC    1            ; for negation ; 9993
SUB                  ; 9994
LD     0 0          ; var p ; 9995
CDR                 ; generateTupleAccess total=2 pos=1 ; 9996
LD     1 2          ; var location ; 9997
CDR                 ; generateTupleAccess total=2 pos=1 ; 9998
CEQ                  ; 9999
LDC    1            ; for negation ; 10000
SUB                  ; 10001
ADD                  ; 10002
SEL    10005 10007  ; IF? 68 ; 10003
RTN                  ; 10004
LDC    1            ; THEN: 68 ; 10005
JOIN                 ; 10006
LDC    0            ; ELSE: 68 ; 10007
JOIN                 ; 10008
LD     0 0          ;  <== lambda_1032  [ParsedEdge pe] (as expr) ; 10009
CAR                 ; generateTupleAccess total=7 pos=0 ; 10010
LD     1 1          ; var lookingEdge ; 10011
LDC 0               ; local var space ; 10012
LDF    2967         ;  @endingPointOfEdgeRoute ; 10013
AP     2             ; 10014
LDF    2950         ;  @pointEquals ; 10015
AP     2             ; 10016
RTN                  ; 10017
LDC    1            ;  <== lambda_1033  [ParsedEdge f] (as expr) ; 10018
LD     1 3          ; var visited ; 10019
LD     0 0          ; var f ; 10020
CDR                 ; generateTupleAccess total=7 pos=5 ; 10021
CDR                  ; 10022
CDR                  ; 10023
CDR                  ; 10024
CDR                  ; 10025
CAR                  ; 10026
LDF    1277         ;  @sorted_map_contains ; 10027
AP     2             ; 10028
SUB                  ; 10029
RTN                  ; 10030
LD     0 0          ;  <== lambda_1034  [pe] (as expr) ; 10031
LD     1 1          ; var worldState ; 10032
CAR                 ; generateTupleAccess total=4 pos=0 ; 10033
LDC 0               ; local var space ; 10034
LDC 0               ; local var space ; 10035
LDF    2605         ;  @collectAnyEdgePills ; 10036
AP     4             ; 10037
LDF    532          ;  @length ; 10038
AP     1             ; 10039
LDC    0            ; just constant from code ; 10040
CGT                  ; 10041
SEL    10044 10046  ; IF? 69 ; 10042
RTN                  ; 10043
LDC    1            ; THEN: 69 ; 10044
JOIN                 ; 10045
LDC    0            ; ELSE: 69 ; 10046
JOIN                 ; 10047
LD     0 0          ;  <== lambda_1035  [ParsedEdge f] (as expr) ; 10048
CDR                 ; generateTupleAccess total=7 pos=5 ; 10049
CDR                  ; 10050
CDR                  ; 10051
CDR                  ; 10052
CDR                  ; 10053
CAR                  ; 10054
LDC    0            ; just constant from code ; 10055
CONS                 ; 10056
RTN                  ; 10057
LD     0 0          ;  <== lambda_1036  [ParsedEdge f] (as expr) ; 10058
CDR                 ; generateTupleAccess total=7 pos=6 ; 10059
CDR                  ; 10060
CDR                  ; 10061
CDR                  ; 10062
CDR                  ; 10063
CDR                  ; 10064
LDC    0            ; just constant from code ; 10065
CONS                 ; 10066
RTN                  ; 10067
LD     0 0          ;  <== lambda_1037  [ParsedEdge next] (as expr) ; 10068
LD     1 8          ; var lookingEdge ; 10069
CONS                 ; 10070
RTN                  ; 10071
LD     0 0          ;  <== lambda_1038  [Queue<ListCons<ParsedEdge>> qq, ListCons<ParsedEdge> nr] (as expr) ; 10072
LD     0 1          ; var nr ; 10073
LDF    407          ;  @queue_enqueue ; 10074
AP     2             ; 10075
RTN                  ; 10076
LD     0 0          ;  <== lambda_1039  [acc, pe] (as expr) ; 10077
LD     0 1          ; var pe ; 10078
LDC 0               ; local var space ; 10079
LDC 0               ; local var space ; 10080
LDF    2618         ;  @countAnyEdgePills ; 10081
AP     3             ; 10082
ADD                  ; 10083
RTN                  ; 10084
LD     0 0          ;  <== lambda_1040  [p] (as expr) ; 10085
CAR                  ; 10086
LD     0 0          ; var p ; 10087
LDF    125          ;  @last ; 10088
AP     1             ; 10089
LD     0 0          ; var p ; 10090
LD     0 0          ; var p ; 10091
LD     1 4          ; var accessors ; 10092
LDF    3184         ;  @makeEdgeAccess ; 10093
AP     2             ; 10094
LD     0 0          ; var p ; 10095
LDF    532          ;  @length ; 10096
AP     1             ; 10097
LDC    1            ; just constant from code ; 10098
SUB                  ; 10099
LDC    -1           ; just negative constant from code ; 10100
LDC    -1           ; just negative constant from code ; 10101
CONS                 ; 10102
CONS                 ; 10103
CONS                 ; 10104
CONS                 ; 10105
CONS                 ; 10106
CONS                 ; 10107
RTN                  ; 10108
LDC    100          ;  <== lambda_1041  [Point pt] (as expr) ; 10109
LD     0 0          ; var pt ; 10110
CAR                 ; generateTupleAccess total=2 pos=0 ; 10111
LD     1 1          ; var accessors ; 10112
LD     0 0          ; var pt ; 10113
CDR                 ; generateTupleAccess total=2 pos=1 ; 10114
LDF    423          ;  @list_item ; 10115
AP     2             ; 10116
AP     2             ; 10117
RTN                  ; 10118
LD     1 0          ;  <== lambda_1042  [Tuple<Integer,Point> d] (as expr) ; 10119
LD     0 0          ; var d ; 10120
CDR                 ; generateTupleAccess total=2 pos=1 ; 10121
LDF    3076         ;  @isWalkable2 ; 10122
AP     2             ; 10123
LDC    1            ; just constant from code ; 10124
LD     1 4          ; var visited ; 10125
LD     0 0          ; var d ; 10126
CAR                 ; generateTupleAccess total=2 pos=0 ; 10127
LDF    1277         ;  @sorted_map_contains ; 10128
AP     2             ; 10129
SUB                  ; 10130
MUL                  ; 10131
RTN                  ; 10132
LD     1 2          ;  <== lambda_1043  [Tuple<Integer,Point> e] (as expr) ; 10133
LD     0 0          ; var e ; 10134
CAR                 ; generateTupleAccess total=2 pos=0 ; 10135
LDF    1277         ;  @sorted_map_contains ; 10136
AP     2             ; 10137
RTN                  ; 10138
LD     1 3          ;  <== lambda_1044  [Tuple<Integer,Point> e] (as expr) ; 10139
LDF    10223        ;  @lambda_1053 ; 10140
LDF    545          ;  @any ; 10141
AP     2             ; 10142
RTN                  ; 10143
LDC    1            ;  <== lambda_1045  [Tuple<Integer,Point> e] (as expr) ; 10144
LD     1 14         ; var arriveds ; 10145
LD     0 0          ; var e ; 10146
CAR                 ; generateTupleAccess total=2 pos=0 ; 10147
LDF    1277         ;  @sorted_map_contains ; 10148
AP     2             ; 10149
SUB                  ; 10150
RTN                  ; 10151
LD     0 0          ;  <== lambda_1046  [Tuple<Integer,Point> e] (as expr) ; 10152
CDR                 ; generateTupleAccess total=2 pos=1 ; 10153
LD     1 8          ; var thisRoute ; 10154
CONS                 ; 10155
RTN                  ; 10156
LD     0 0          ;  <== lambda_1047  [r, i] (as expr) ; 10157
LD     0 1          ; var i ; 10158
LDF    407          ;  @queue_enqueue ; 10159
AP     2             ; 10160
RTN                  ; 10161
LD     0 0          ;  <== lambda_1048  [Tuple<Integer,Point> e] (as expr) ; 10162
CDR                 ; generateTupleAccess total=2 pos=1 ; 10163
LD     1 8          ; var thisRoute ; 10164
CONS                 ; 10165
RTN                  ; 10166
LD     1 0          ;  <== lambda_1049  [Point ep] (as expr) ; 10167
CAR                 ; generateTupleAccess total=2 pos=0 ; 10168
LD     0 0          ; var ep ; 10169
CAR                 ; generateTupleAccess total=2 pos=0 ; 10170
CEQ                  ; 10171
LD     1 0          ; var pos ; 10172
CDR                 ; generateTupleAccess total=2 pos=1 ; 10173
LD     0 0          ; var ep ; 10174
CDR                 ; generateTupleAccess total=2 pos=1 ; 10175
CEQ                  ; 10176
MUL                  ; 10177
SEL    10180 10182  ; IF? 70 ; 10178
RTN                  ; 10179
LDC    1            ; THEN: 70 ; 10180
JOIN                 ; 10181
LDC    0            ; ELSE: 70 ; 10182
JOIN                 ; 10183
LD     0 0          ;  <== lambda_1050  [ParsedEdge e] (as expr) ; 10184
CAR                 ; generateTupleAccess total=7 pos=0 ; 10185
LD     1 0          ; var a ; 10186
LDF    2950         ;  @pointEquals ; 10187
AP     2             ; 10188
LD     0 0          ; var e ; 10189
CDR                 ; generateTupleAccess total=7 pos=1 ; 10190
CAR                  ; 10191
LD     1 1          ; var b ; 10192
LDF    2950         ;  @pointEquals ; 10193
AP     2             ; 10194
MUL                  ; 10195
RTN                  ; 10196
LD     0 0          ;  <== lambda_1051  [col, colx] (as expr) ; 10197
LDC 0               ; local var space ; 10198
LDF    3062         ;  @isWalkable ; 10199
AP     2             ; 10200
LDC    0            ; just constant from code ; 10201
CGT                  ; 10202
SEL    10205 10212  ; IF? 71 ; 10203
RTN                  ; 10204
LD     0 1          ; THEN: 71 ; 10205
LD     1 1          ; var rowy ; 10206
CONS                 ; 10207
LDC 0               ; local var space ; 10208
LDF    220          ;  @JUST ; 10209
AP     2             ; 10210
JOIN                 ; 10211
LDF    216          ; ELSE: 71, ALSO: @NOTHING ; 10212
AP     0             ; 10213
JOIN                 ; 10214
LD     0 0          ;  <== lambda_1052  [val, ix] (as expr) ; 10215
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 10216
LD     0 1          ; var ix ; 10217
LD     1 0          ; var t ; 10218
CDR                 ; generateTupleAccess total=2 pos=1 ; 10219
AP     2             ; 10220
AP     1             ; 10221
RTN                  ; 10222
LD     1 0          ;  <== lambda_1053  [d] (as expr) ; 10223
CDR                 ; generateTupleAccess total=2 pos=1 ; 10224
LD     0 0          ; var d ; 10225
LDF    2950         ;  @pointEquals ; 10226
AP     2             ; 10227
RTN                  ; 10228
LD     0 0          ;  <== lambda_1054  [x, y] (as expr) ; 10229
LD     0 1          ; var y ; 10230
MUL                  ; 10231
RTN                  ; 10232
LD     0 0          ;  <== lambda_1055  [x, y] (as expr) ; 10233
LD     0 1          ; var y ; 10234
ADD                  ; 10235
LDC    0            ; just constant from code ; 10236
CGT                  ; 10237
SEL    10240 10242  ; IF? 130 ; 10238
RTN                  ; 10239
LDC    1            ; THEN: 130 ; 10240
JOIN                 ; 10241
LDC    0            ; ELSE: 130 ; 10242
JOIN                 ; 10243
LD     0 0          ;  <== lambda_1056  [x, y] (as expr) ; 10244
LD     0 1          ; var y ; 10245
CEQ                  ; 10246
LDC    1            ; for negation ; 10247
SUB                  ; 10248
SEL    10251 10253  ; IF? 131 ; 10249
RTN                  ; 10250
LDC    1            ; THEN: 131 ; 10251
JOIN                 ; 10252
LDC    0            ; ELSE: 131 ; 10253
JOIN                 ; 10254
LD     1 2          ;  <== lambda_1057  [Tuple<Integer,Point> e] (as expr) ; 10255
LD     0 0          ; var e ; 10256
CAR                 ; generateTupleAccess total=2 pos=0 ; 10257
LDF    1277         ;  @sorted_map_contains ; 10258
AP     2             ; 10259
RTN                  ; 10260
