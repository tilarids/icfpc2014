LDC    1            ;  <== entryPoint  [WorldState ws, Object undocumented] (as blk) ; 0
LDC    0            ; just constant from code ; 1
CEQ                  ; 2
SEL    5 12         ; IF? 1 ; 3
RTN                  ; 4
LD     0 0          ; THEN: 1 ; 5
LDC 0               ; local var space ; 6
LDC 0               ; local var space ; 7
LDC 0               ; local var space ; 8
LDF    7218         ;  @entryFactual ; 9
AP     4             ; 10
JOIN                 ; 11
LDC 0               ; ELSE: 1 ; 12
LDC 0               ; local var space ; 13
LDC 0               ; local var space ; 14
LDC 0               ; local var space ; 15
LDC 0               ; local var space ; 16
LDF    7183         ;  @entryCPUEmulator ; 17
AP     5             ; 18
JOIN                 ; 19
LD     0 0          ;  <== mydebug  [T o] (as blk) ; 20
DBUG                 ; 21
LD     0 0          ; var o ; 22
RTN                  ; 23
LD     0 0          ;  <== mydebugv  [Object tag, T o] (as blk) ; 24
DBUG                 ; 25
LD     0 1          ; var o ; 26
DBUG                 ; 27
LD     0 1          ; var o ; 28
RTN                  ; 29
LD     0 2          ;  <== foldl  [Function2<A,B,A> f, A a, ListCons<B> l] (as blk) ; 30
ATOM                 ; 31
SEL    34 36        ; IF? 2 ; 32
RTN                  ; 33
LD     0 1          ; THEN: 2 ; 34
JOIN                 ; 35
LD     0 0          ; ELSE: 2 ; 36
LD     0 1          ; var a ; 37
LD     0 2          ; var l ; 38
CAR                  ; 39
LD     0 0          ; var f ; 40
AP     2             ; 41
LD     0 2          ; var l ; 42
CDR                  ; 43
LDF    30           ;  @foldl ; 44
AP     3             ; 45
JOIN                 ; 46
LD     0 2          ;  <== foldr  [Function2<A,B,B> f, B a, ListCons<A> l] (as blk) ; 47
ATOM                 ; 48
SEL    51 53        ; IF? 3 ; 49
RTN                  ; 50
LD     0 1          ; THEN: 3 ; 51
JOIN                 ; 52
LD     0 2          ; ELSE: 3 ; 53
CAR                  ; 54
LD     0 0          ; var f ; 55
LD     0 1          ; var a ; 56
LD     0 2          ; var l ; 57
CDR                  ; 58
LDF    47           ;  @foldr ; 59
AP     3             ; 60
LD     0 0          ; var f ; 61
AP     2             ; 62
JOIN                 ; 63
LDF    9371         ;  <== o  [final Function1<B,C> f, final Function1<A,B> g] (as blk), ALSO: @lambda_1000 ; 64
RTN                  ; 65
LDF    9377         ;  <== flip  [Function2<A,B,C> f] (as blk), ALSO: @lambda_1001 ; 66
RTN                  ; 67
LD     0 0          ;  <== map  [ListCons<T> c, Function1<T,T2> arg] (as blk) ; 68
ATOM                 ; 69
SEL    72 74        ; IF? 4 ; 70
RTN                  ; 71
LDC    0            ; THEN: 4 ; 72
JOIN                 ; 73
LD     0 0          ; ELSE: 4 ; 74
CAR                  ; 75
LD     0 1          ; var arg ; 76
AP     1             ; 77
LD     0 0          ; var c ; 78
CDR                  ; 79
LD     0 1          ; var arg ; 80
LDF    68           ;  @map ; 81
AP     2             ; 82
CONS                 ; 83
JOIN                 ; 84
LD     0 0          ;  <== mapi  [ListCons<D> c, int ix, Function2<D,Integer,D2> arg] (as blk) ; 85
ATOM                 ; 86
SEL    89 91        ; IF? 5 ; 87
RTN                  ; 88
LDC    0            ; THEN: 5 ; 89
JOIN                 ; 90
LD     0 0          ; ELSE: 5 ; 91
CAR                  ; 92
LD     0 1          ; var ix ; 93
LD     0 2          ; var arg ; 94
AP     2             ; 95
LD     0 0          ; var c ; 96
CDR                  ; 97
LD     0 1          ; var ix ; 98
LDC    1            ; just constant from code ; 99
ADD                  ; 100
LD     0 2          ; var arg ; 101
LDF    85           ;  @mapi ; 102
AP     3             ; 103
CONS                 ; 104
JOIN                 ; 105
LD     0 0          ;  <== cat_maybes  [ListCons<Maybe<D>> data] (as blk) ; 106
LDF    9382         ;  @lambda_1002 ; 107
LDF    68           ;  @map ; 108
AP     2             ; 109
ST     0 1           ; 110
LD     0 1          ; var mtl ; 111
LDF    117          ;  @concat ; 112
AP     1             ; 113
ST     0 2           ; 114
LD     0 2          ; var rv ; 115
RTN                  ; 116
LD     0 0          ;  <== concat  [ListCons<ListCons<D>> data] (as blk) ; 117
LDC    0            ; NULL literal ; 118
LDF    148          ;  @concat_acc ; 119
AP     2             ; 120
LDF    298          ;  @reverse ; 121
AP     1             ; 122
RTN                  ; 123
LD     0 0          ;  <== last  [ListCons<D> data] (as blk) ; 124
ATOM                 ; 125
SEL    132 134       ; 126
LD     0 0          ; var data ; 127
CDR                  ; 128
ATOM                 ; 129
SEL    135 138      ; IF? 8 ; 130
RTN                  ; 131
BRK                 ; branch@132 ; 132
JOIN                 ; 133
JOIN                ; branch@134 ; 134
LD     0 0          ; THEN: 8 ; 135
CAR                  ; 136
JOIN                 ; 137
LD     0 0          ; ELSE: 8 ; 138
CDR                  ; 139
LDF    124          ;  @last ; 140
AP     1             ; 141
JOIN                 ; 142
LD     0 0          ;  <== concat_set  [ListCons<ListCons<D>> data] (as blk) ; 143
LDC    0            ; NULL literal ; 144
LDF    148          ;  @concat_acc ; 145
AP     2             ; 146
RTN                  ; 147
LD     0 0          ;  <== concat_acc  [ListCons<ListCons<D>> data, ListCons<D> acc] (as blk) ; 148
ATOM                 ; 149
SEL    152 154      ; IF? 6 ; 150
RTN                  ; 151
LD     0 1          ; THEN: 6 ; 152
JOIN                 ; 153
LD     0 0          ; ELSE: 6 ; 154
CDR                  ; 155
LD     0 0          ; var data ; 156
CAR                  ; 157
LD     0 1          ; var acc ; 158
LDF    164          ;  @concat2 ; 159
AP     2             ; 160
LDF    148          ;  @concat_acc ; 161
AP     2             ; 162
JOIN                 ; 163
LD     0 0          ;  <== concat2  [ListCons<D> data, ListCons<D> data2] (as blk) ; 164
ATOM                 ; 165
SEL    168 170      ; IF? 9 ; 166
RTN                  ; 167
LD     0 1          ; THEN: 9 ; 168
JOIN                 ; 169
LD     0 1          ; ELSE: 9 ; 170
ATOM                 ; 171
SEL    174 176      ; IF? 67 ; 172
JOIN                 ; 173
LD     0 0          ; THEN: 67 ; 174
JOIN                 ; 175
LD     0 0          ; ELSE: 67 ; 176
LDF    298          ;  @reverse ; 177
AP     1             ; 178
LD     0 1          ; var data2 ; 179
LDF    200          ;  @concat2_acc ; 180
AP     2             ; 181
JOIN                 ; 182
LD     0 0          ;  <== concat2_set  [ListCons<D> data, ListCons<D> data2] (as blk) ; 183
ATOM                 ; 184
SEL    187 189      ; IF? 10 ; 185
RTN                  ; 186
LD     0 1          ; THEN: 10 ; 187
JOIN                 ; 188
LD     0 1          ; ELSE: 10 ; 189
ATOM                 ; 190
SEL    193 195      ; IF? 68 ; 191
JOIN                 ; 192
LD     0 0          ; THEN: 68 ; 193
JOIN                 ; 194
LD     0 0          ; ELSE: 68 ; 195
LD     0 1          ; var data2 ; 196
LDF    200          ;  @concat2_acc ; 197
AP     2             ; 198
JOIN                 ; 199
LD     0 0          ;  <== concat2_acc  [ListCons<D> data, ListCons<D> acc] (as blk) ; 200
ATOM                 ; 201
SEL    204 206      ; IF? 11 ; 202
RTN                  ; 203
LD     0 1          ; THEN: 11 ; 204
JOIN                 ; 205
LD     0 0          ; ELSE: 11 ; 206
CDR                  ; 207
LD     0 0          ; var data ; 208
CAR                  ; 209
LD     0 1          ; var acc ; 210
CONS                 ; 211
LDF    200          ;  @concat2_acc ; 212
AP     2             ; 213
JOIN                 ; 214
LDC    0            ;  <== NOTHING  [] (as blk) ; 215
LDC    0            ; NULL literal ; 216
CONS                 ; 217
RTN                  ; 218
LDC    1            ;  <== JUST  [T t] (as blk) ; 219
LD     0 0          ; var t ; 220
CONS                 ; 221
ST     0 1           ; 222
LD     0 1          ; var tMaybe ; 223
RTN                  ; 224
LD     0 0          ;  <== maybeToList  [Maybe<D> d] (as blk) ; 225
LDF    282          ;  @is_nothing ; 226
AP     1             ; 227
LDC    1            ; just constant from code ; 228
CEQ                  ; 229
SEL    232 234      ; IF? 12 ; 230
RTN                  ; 231
LDC    0            ; THEN: 12 ; 232
JOIN                 ; 233
LD     0 0          ; ELSE: 12 ; 234
LDF    287          ;  @from_maybe ; 235
AP     1             ; 236
LDC    0            ; NULL literal ; 237
CONS                 ; 238
JOIN                 ; 239
LDC    0            ;  <== catMaybes_acc  [ListCons<Maybe<D>> data, ListCons<D> acc] (as blk) ; 240
ST     0 2           ; 241
LD     0 0          ; var data ; 242
ATOM                 ; 243
SEL    247 250       ; 244
LD     0 2          ; var rv ; 245
RTN                  ; 246
LD     0 1          ; branch@247 ; 247
ST     0 2           ; 248
JOIN                 ; 249
LD     0 0          ; branch@250 ; 250
CAR                  ; 251
LDF    282          ;  @is_nothing ; 252
AP     1             ; 253
ST     0 3           ; 254
LD     0 0          ; var data ; 255
CAR                  ; 256
LDF    287          ;  @from_maybe ; 257
AP     1             ; 258
ST     0 4           ; 259
LD     0 4          ; var data1 ; 260
LD     0 1          ; var acc ; 261
CONS                 ; 262
ST     0 5           ; 263
LD     0 0          ; var data ; 264
CDR                  ; 265
LD     0 3          ; var nothing ; 266
LDC    1            ; just constant from code ; 267
CEQ                  ; 268
SEL    278 280      ; IF? 69 ; 269
LDC 0               ; local var space ; 270
LDC 0               ; local var space ; 271
LDC 0               ; local var space ; 272
LDC 0               ; local var space ; 273
LDF    240          ;  @catMaybes_acc ; 274
AP     6             ; 275
ST     0 2           ; 276
JOIN                 ; 277
LD     0 1          ; THEN: 69 ; 278
JOIN                 ; 279
LD     0 5          ; ELSE: 69 ; 280
JOIN                 ; 281
LDC    1            ;  <== is_nothing  [Maybe<D> head] (as blk) ; 282
LD     0 0          ; var head ; 283
CAR                 ; generateTupleAccess total=2 pos=0 ; 284
SUB                  ; 285
RTN                  ; 286
LD     0 0          ;  <== from_maybe  [Maybe<D> head] (as blk) ; 287
CAR                 ; generateTupleAccess total=2 pos=0 ; 288
LDC    0            ; just constant from code ; 289
CEQ                  ; 290
SEL    295 297       ; 291
LD     0 0          ; var head ; 292
CDR                 ; generateTupleAccess total=2 pos=1 ; 293
RTN                  ; 294
BRK                 ; branch@295 ; 295
JOIN                 ; 296
JOIN                ; branch@297 ; 297
LD     0 0          ;  <== reverse  [ListCons<D> c] (as blk) ; 298
LDC    0            ; NULL literal ; 299
LDF    370          ;  @reverse_acc ; 300
AP     2             ; 301
RTN                  ; 302
LD     0 0          ;  <== maximum_by_acc  [ListCons<D> d, Function1<D,Integer> projection, D acc] (as blk) ; 303
ATOM                 ; 304
SEL    307 309      ; IF? 13 ; 305
RTN                  ; 306
LD     0 2          ; THEN: 13 ; 307
JOIN                 ; 308
LD     0 2          ; ELSE: 13 ; 309
LD     0 1          ; var projection ; 310
AP     1             ; 311
LD     0 0          ; var d ; 312
CAR                  ; 313
LD     0 1          ; var projection ; 314
AP     1             ; 315
CGT                  ; 316
SEL    319 326      ; IF? 70 ; 317
JOIN                 ; 318
LD     0 0          ; THEN: 70 ; 319
CDR                  ; 320
LD     0 1          ; var projection ; 321
LD     0 2          ; var acc ; 322
LDF    303          ;  @maximum_by_acc ; 323
AP     3             ; 324
JOIN                 ; 325
LD     0 0          ; ELSE: 70 ; 326
CDR                  ; 327
LD     0 1          ; var projection ; 328
LD     0 0          ; var d ; 329
CAR                  ; 330
LDF    303          ;  @maximum_by_acc ; 331
AP     3             ; 332
JOIN                 ; 333
LD     0 0          ;  <== maximum_by  [ListCons<D> d, Function1<D,Integer> projection] (as blk) ; 334
ATOM                 ; 335
SEL    345 347       ; 336
LD     0 0          ; var d ; 337
CDR                  ; 338
LD     0 1          ; var projection ; 339
LD     0 0          ; var d ; 340
CAR                  ; 341
LDF    303          ;  @maximum_by_acc ; 342
AP     3             ; 343
RTN                  ; 344
BRK                 ; branch@345 ; 345
JOIN                 ; 346
JOIN                ; branch@347 ; 347
LD     0 0          ;  <== dropWhile  [ListCons<D> c, Function1<D,Integer> test] (as blk) ; 348
ATOM                 ; 349
SEL    352 354      ; IF? 14 ; 350
RTN                  ; 351
LDC    0            ; THEN: 14 ; 352
JOIN                 ; 353
LD     0 0          ; ELSE: 14 ; 354
CAR                  ; 355
LD     0 1          ; var test ; 356
AP     1             ; 357
LDC    1            ; just constant from code ; 358
CEQ                  ; 359
SEL    362 368      ; IF? 71 ; 360
JOIN                 ; 361
LD     0 0          ; THEN: 71 ; 362
CDR                  ; 363
LD     0 1          ; var test ; 364
LDF    348          ;  @dropWhile ; 365
AP     2             ; 366
JOIN                 ; 367
LD     0 0          ; ELSE: 71 ; 368
JOIN                 ; 369
LD     0 0          ;  <== reverse_acc  [ListCons<D> c, ListCons<D> acc] (as blk) ; 370
ATOM                 ; 371
SEL    374 376      ; IF? 7 ; 372
RTN                  ; 373
LD     0 1          ; THEN: 7 ; 374
JOIN                 ; 375
LD     0 0          ; ELSE: 7 ; 376
CDR                  ; 377
LD     0 0          ; var c ; 378
CAR                  ; 379
LD     0 1          ; var acc ; 380
CONS                 ; 381
LDF    370          ;  @reverse_acc ; 382
AP     2             ; 383
JOIN                 ; 384
LD     0 0          ;  <== fold0  [ListCons<I> c, R init, Function2<R,I,R> arg] (as blk) ; 385
ATOM                 ; 386
SEL    389 391      ; IF? 15 ; 387
RTN                  ; 388
LD     0 1          ; THEN: 15 ; 389
JOIN                 ; 390
LD     0 0          ; ELSE: 15 ; 391
CDR                  ; 392
LD     0 1          ; var init ; 393
LD     0 0          ; var c ; 394
CAR                  ; 395
LD     0 2          ; var arg ; 396
AP     2             ; 397
LD     0 2          ; var arg ; 398
LDF    385          ;  @fold0 ; 399
AP     3             ; 400
JOIN                 ; 401
LDC    0            ;  <== queue_new  [] (as blk) ; 402
LDC    0            ; NULL literal ; 403
CONS                 ; 404
RTN                  ; 405
LD     0 0          ;  <== queue_enqueue  [Queue<T> q, T v] (as blk) ; 406
CAR                 ; generateTupleAccess total=2 pos=0 ; 407
LD     0 1          ; var v ; 408
LD     0 0          ; var q ; 409
CDR                 ; generateTupleAccess total=2 pos=1 ; 410
CONS                 ; 411
CONS                 ; 412
RTN                  ; 413
LD     0 0          ;  <== queue_isempty  [Queue<T> q] (as blk) ; 414
CAR                 ; generateTupleAccess total=2 pos=0 ; 415
ATOM                 ; 416
LD     0 0          ; var q ; 417
CDR                 ; generateTupleAccess total=2 pos=1 ; 418
ATOM                 ; 419
MUL                  ; 420
RTN                  ; 421
LDC    0            ;  <== list_item  [Cons list, int n] (as blk) ; 422
LD     0 1          ; var n ; 423
CGT                  ; 424
SEL    431 433       ; 425
LD     0 1          ; var n ; 426
LDC    0            ; just constant from code ; 427
CEQ                  ; 428
SEL    434 437      ; IF? 16 ; 429
RTN                  ; 430
BRK                 ; branch@431 ; 431
JOIN                 ; 432
JOIN                ; branch@433 ; 433
LD     0 0          ; THEN: 16 ; 434
CAR                  ; 435
JOIN                 ; 436
LD     0 0          ; ELSE: 16 ; 437
CDR                  ; 438
LD     0 1          ; var n ; 439
LDC    1            ; just constant from code ; 440
SUB                  ; 441
LDF    422          ;  @list_item ; 442
AP     2             ; 443
JOIN                 ; 444
LDC    0            ;  <== list_item  [ListCons<T> list, int n] (as blk) ; 445
LD     0 1          ; var n ; 446
CGT                  ; 447
SEL    454 456       ; 448
LD     0 1          ; var n ; 449
LDC    0            ; just constant from code ; 450
CEQ                  ; 451
SEL    457 460      ; IF? 17 ; 452
RTN                  ; 453
BRK                 ; branch@454 ; 454
JOIN                 ; 455
JOIN                ; branch@456 ; 456
LD     0 0          ; THEN: 17 ; 457
CAR                  ; 458
JOIN                 ; 459
LD     0 0          ; ELSE: 17 ; 460
CDR                  ; 461
LD     0 1          ; var n ; 462
LDC    1            ; just constant from code ; 463
SUB                  ; 464
LDF    422          ;  @list_item ; 465
AP     2             ; 466
JOIN                 ; 467
LDC    0            ;  <== list_item_def  [Cons list, int index, Object deflt] (as blk) ; 468
LD     0 1          ; var index ; 469
CGT                  ; 470
SEL    473 475      ; IF? 18 ; 471
RTN                  ; 472
LD     0 2          ; THEN: 18 ; 473
JOIN                 ; 474
LD     0 1          ; ELSE: 18 ; 475
LDC    0            ; just constant from code ; 476
CEQ                  ; 477
SEL    480 483      ; IF? 72 ; 478
JOIN                 ; 479
LD     0 0          ; THEN: 72 ; 480
CAR                  ; 481
JOIN                 ; 482
LD     0 0          ; ELSE: 72 ; 483
CDR                  ; 484
LD     0 1          ; var index ; 485
LDC    1            ; just constant from code ; 486
SUB                  ; 487
LDF    422          ;  @list_item ; 488
AP     2             ; 489
JOIN                 ; 490
LDC    0            ;  <== queue_dequeue  [Queue<T> q] (as blk) ; 491
ST     0 1           ; 492
LD     0 0          ; var q ; 493
CAR                 ; generateTupleAccess total=2 pos=0 ; 494
ATOM                 ; 495
SEL    499 506       ; 496
LD     0 1          ; var retval ; 497
RTN                  ; 498
LD     0 0          ; branch@499 ; 499
CDR                 ; generateTupleAccess total=2 pos=1 ; 500
ATOM                 ; 501
LDC    1            ; for negation ; 502
SUB                  ; 503
SEL    518 529       ; 504
JOIN                 ; 505
LD     0 0          ; branch@506 ; 506
CAR                 ; generateTupleAccess total=2 pos=0 ; 507
CAR                  ; 508
LD     0 0          ; var q ; 509
CAR                 ; generateTupleAccess total=2 pos=0 ; 510
CDR                  ; 511
LD     0 0          ; var q ; 512
CDR                 ; generateTupleAccess total=2 pos=1 ; 513
CONS                 ; 514
CONS                 ; 515
ST     0 1           ; 516
JOIN                 ; 517
LD     0 0          ; branch@518 ; 518
CDR                 ; generateTupleAccess total=2 pos=1 ; 519
LDF    298          ;  @reverse ; 520
AP     1             ; 521
LDC    0            ; NULL literal ; 522
CONS                 ; 523
LDC 0               ; local var space ; 524
LDF    491          ;  @queue_dequeue ; 525
AP     2             ; 526
ST     0 1           ; 527
JOIN                 ; 528
BRK                 ; branch@529 ; 529
JOIN                 ; 530
LD     0 0          ;  <== length  [ListCons<T> list] (as blk) ; 531
LDC    0            ; just constant from code ; 532
LDF    645          ;  @elements_counter ; 533
AP     2             ; 534
RTN                  ; 535
LD     0 0          ;  <== filter  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 536
LD     0 1          ; var pred ; 537
LDC    0            ; NULL literal ; 538
LDF    608          ;  @filter_acc ; 539
AP     3             ; 540
LDF    298          ;  @reverse ; 541
AP     1             ; 542
RTN                  ; 543
LD     0 0          ;  <== any  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 544
ATOM                 ; 545
SEL    548 550      ; IF? 21 ; 546
RTN                  ; 547
LDC    0            ; THEN: 21 ; 548
JOIN                 ; 549
LD     0 0          ; ELSE: 21 ; 550
CAR                  ; 551
LD     0 1          ; var pred ; 552
AP     1             ; 553
LDC    1            ; just constant from code ; 554
CEQ                  ; 555
SEL    558 560      ; IF? 73 ; 556
JOIN                 ; 557
LDC    1            ; THEN: 73 ; 558
JOIN                 ; 559
LD     0 0          ; ELSE: 73 ; 560
CDR                  ; 561
LD     0 1          ; var pred ; 562
LDF    544          ;  @any ; 563
AP     2             ; 564
JOIN                 ; 565
LD     0 0          ;  <== noneof  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 566
ATOM                 ; 567
SEL    570 572      ; IF? 22 ; 568
RTN                  ; 569
LDC    1            ; THEN: 22 ; 570
JOIN                 ; 571
LD     0 0          ; ELSE: 22 ; 572
CAR                  ; 573
LD     0 1          ; var pred ; 574
AP     1             ; 575
LDC    1            ; just constant from code ; 576
CEQ                  ; 577
SEL    580 582      ; IF? 74 ; 578
JOIN                 ; 579
LDC    0            ; THEN: 74 ; 580
JOIN                 ; 581
LD     0 0          ; ELSE: 74 ; 582
CDR                  ; 583
LD     0 1          ; var pred ; 584
LDF    566          ;  @noneof ; 585
AP     2             ; 586
JOIN                 ; 587
LD     0 0          ;  <== empty  [Cons d] (as blk) ; 588
ATOM                 ; 589
LDC    1            ; for negation ; 590
SUB                  ; 591
SEL    594 596      ; IF? 23 ; 592
RTN                  ; 593
LDC    0            ; THEN: 23 ; 594
JOIN                 ; 595
LDC    1            ; ELSE: 23 ; 596
JOIN                 ; 597
LD     0 0          ;  <== notempty  [Cons d] (as blk) ; 598
ATOM                 ; 599
LDC    1            ; for negation ; 600
SUB                  ; 601
SEL    604 606      ; IF? 24 ; 602
RTN                  ; 603
LDC    1            ; THEN: 24 ; 604
JOIN                 ; 605
LDC    0            ; ELSE: 24 ; 606
JOIN                 ; 607
LD     0 0          ;  <== filter_acc  [ListCons<T> list, Function1<T,Integer> pred, ListCons<T> acc] (as blk) ; 608
ATOM                 ; 609
SEL    612 614      ; IF? 20 ; 610
RTN                  ; 611
LD     0 2          ; THEN: 20 ; 612
JOIN                 ; 613
LD     0 0          ; ELSE: 20 ; 614
CDR                  ; 615
LD     0 1          ; var pred ; 616
LD     0 0          ; var list ; 617
CAR                  ; 618
LD     0 1          ; var pred ; 619
AP     1             ; 620
LDC    1            ; just constant from code ; 621
CEQ                  ; 622
SEL    627 632      ; IF? 75 ; 623
LDF    608          ;  @filter_acc ; 624
AP     3             ; 625
JOIN                 ; 626
LD     0 0          ; THEN: 75 ; 627
CAR                  ; 628
LD     0 2          ; var acc ; 629
CONS                 ; 630
JOIN                 ; 631
LD     0 2          ; ELSE: 75 ; 632
JOIN                 ; 633
LD     0 0          ;  <== map_height  [Cons map] (as blk) ; 634
LDC    0            ; just constant from code ; 635
LDF    645          ;  @elements_counter ; 636
AP     2             ; 637
RTN                  ; 638
LD     0 0          ;  <== map_width  [Cons map] (as blk) ; 639
CAR                  ; 640
LDC    0            ; just constant from code ; 641
LDF    645          ;  @elements_counter ; 642
AP     2             ; 643
RTN                  ; 644
LD     0 0          ;  <== elements_counter  [Cons list, int counter] (as blk) ; 645
ATOM                 ; 646
SEL    649 651      ; IF? 19 ; 647
RTN                  ; 648
LD     0 1          ; THEN: 19 ; 649
JOIN                 ; 650
LD     0 0          ; ELSE: 19 ; 651
CDR                  ; 652
LD     0 1          ; var counter ; 653
LDC    1            ; just constant from code ; 654
ADD                  ; 655
LDF    645          ;  @elements_counter ; 656
AP     2             ; 657
JOIN                 ; 658
LDC    1            ;  <== sorted_node_new  [int key, T val, int lev, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 659
LD     0 3          ; var lo ; 660
ATOM                 ; 661
LDC    1            ; for negation ; 662
SUB                  ; 663
SEL    683 686      ; IF? 25 ; 664
ADD                  ; 665
LD     0 4          ; var hi ; 666
ATOM                 ; 667
LDC    1            ; for negation ; 668
SUB                  ; 669
SEL    688 691      ; IF? 26 ; 670
ADD                  ; 671
LD     0 0          ; var key ; 672
LD     0 1          ; var val ; 673
LD     0 2          ; var lev ; 674
LD     0 3          ; var lo ; 675
LD     0 4          ; var hi ; 676
CONS                 ; 677
CONS                 ; 678
CONS                 ; 679
CONS                 ; 680
CONS                 ; 681
RTN                  ; 682
LD     0 3          ; THEN: 25 ; 683
CAR                 ; generateTupleAccess total=6 pos=0 ; 684
JOIN                 ; 685
LDC    0            ; ELSE: 25 ; 686
JOIN                 ; 687
LD     0 4          ; THEN: 26 ; 688
CAR                 ; generateTupleAccess total=6 pos=0 ; 689
JOIN                 ; 690
LDC    0            ; ELSE: 26 ; 691
JOIN                 ; 692
LD     0 0          ;  <== sorted_node_with_lev  [SortedMapNode<T> node, int lev] (as blk) ; 693
CDR                 ; generateTupleAccess total=6 pos=1 ; 694
CAR                  ; 695
LD     0 0          ; var node ; 696
CDR                 ; generateTupleAccess total=6 pos=2 ; 697
CDR                  ; 698
CAR                  ; 699
LD     0 1          ; var lev ; 700
LD     0 0          ; var node ; 701
CDR                 ; generateTupleAccess total=6 pos=4 ; 702
CDR                  ; 703
CDR                  ; 704
CDR                  ; 705
CAR                  ; 706
LD     0 0          ; var node ; 707
CDR                 ; generateTupleAccess total=6 pos=5 ; 708
CDR                  ; 709
CDR                  ; 710
CDR                  ; 711
CDR                  ; 712
LDF    659          ;  @sorted_node_new ; 713
AP     5             ; 714
RTN                  ; 715
LD     0 0          ;  <== sorted_node_with_lo_hi  [SortedMapNode<T> node, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 716
CDR                 ; generateTupleAccess total=6 pos=1 ; 717
CAR                  ; 718
LD     0 0          ; var node ; 719
CDR                 ; generateTupleAccess total=6 pos=2 ; 720
CDR                  ; 721
CAR                  ; 722
LD     0 0          ; var node ; 723
CDR                 ; generateTupleAccess total=6 pos=3 ; 724
CDR                  ; 725
CDR                  ; 726
CAR                  ; 727
LD     0 1          ; var lo ; 728
LD     0 2          ; var hi ; 729
LDF    659          ;  @sorted_node_new ; 730
AP     5             ; 731
RTN                  ; 732
LD     0 0          ;  <== sorted_node_with_lo  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 733
LD     0 1          ; var lo ; 734
LD     0 0          ; var node ; 735
CDR                 ; generateTupleAccess total=6 pos=5 ; 736
CDR                  ; 737
CDR                  ; 738
CDR                  ; 739
CDR                  ; 740
LDF    716          ;  @sorted_node_with_lo_hi ; 741
AP     3             ; 742
RTN                  ; 743
LD     0 0          ;  <== sorted_node_with_hi  [SortedMapNode<T> node, SortedMapNode<T> hi] (as blk) ; 744
LD     0 0          ; var node ; 745
CDR                 ; generateTupleAccess total=6 pos=4 ; 746
CDR                  ; 747
CDR                  ; 748
CDR                  ; 749
CAR                  ; 750
LD     0 1          ; var hi ; 751
LDF    716          ;  @sorted_node_with_lo_hi ; 752
AP     3             ; 753
RTN                  ; 754
LD     0 0          ;  <== sorted_node_has  [SortedMapNode<T> node, int key] (as blk) ; 755
ATOM                 ; 756
SEL    759 761      ; IF? 27 ; 757
RTN                  ; 758
LDC    0            ; THEN: 27 ; 759
JOIN                 ; 760
LD     0 1          ; ELSE: 27 ; 761
LD     0 0          ; var node ; 762
CDR                 ; generateTupleAccess total=6 pos=1 ; 763
CAR                  ; 764
CEQ                  ; 765
SEL    768 770      ; IF? 76 ; 766
JOIN                 ; 767
LDC    1            ; THEN: 76 ; 768
JOIN                 ; 769
LD     0 0          ; ELSE: 76 ; 770
CDR                 ; generateTupleAccess total=6 pos=1 ; 771
CAR                  ; 772
LD     0 1          ; var key ; 773
CGT                  ; 774
SEL    780 787      ; IF? 77 ; 775
LD     0 1          ; var key ; 776
LDF    755          ;  @sorted_node_has ; 777
AP     2             ; 778
JOIN                 ; 779
LD     0 0          ; THEN: 77 ; 780
CDR                 ; generateTupleAccess total=6 pos=4 ; 781
CDR                  ; 782
CDR                  ; 783
CDR                  ; 784
CAR                  ; 785
JOIN                 ; 786
LD     0 0          ; ELSE: 77 ; 787
CDR                 ; generateTupleAccess total=6 pos=5 ; 788
CDR                  ; 789
CDR                  ; 790
CDR                  ; 791
CDR                  ; 792
JOIN                 ; 793
LD     0 0          ;  <== sorted_node_get  [SortedMapNode<T> node, int key, T def] (as blk) ; 794
ATOM                 ; 795
SEL    798 800      ; IF? 28 ; 796
RTN                  ; 797
LD     0 2          ; THEN: 28 ; 798
JOIN                 ; 799
LD     0 1          ; ELSE: 28 ; 800
LD     0 0          ; var node ; 801
CDR                 ; generateTupleAccess total=6 pos=1 ; 802
CAR                  ; 803
CEQ                  ; 804
SEL    807 812      ; IF? 78 ; 805
JOIN                 ; 806
LD     0 0          ; THEN: 78 ; 807
CDR                 ; generateTupleAccess total=6 pos=2 ; 808
CDR                  ; 809
CAR                  ; 810
JOIN                 ; 811
LD     0 0          ; ELSE: 78 ; 812
CDR                 ; generateTupleAccess total=6 pos=1 ; 813
CAR                  ; 814
LD     0 1          ; var key ; 815
CGT                  ; 816
SEL    823 830      ; IF? 79 ; 817
LD     0 1          ; var key ; 818
LD     0 2          ; var def ; 819
LDF    794          ;  @sorted_node_get ; 820
AP     3             ; 821
JOIN                 ; 822
LD     0 0          ; THEN: 79 ; 823
CDR                 ; generateTupleAccess total=6 pos=4 ; 824
CDR                  ; 825
CDR                  ; 826
CDR                  ; 827
CAR                  ; 828
JOIN                 ; 829
LD     0 0          ; ELSE: 79 ; 830
CDR                 ; generateTupleAccess total=6 pos=5 ; 831
CDR                  ; 832
CDR                  ; 833
CDR                  ; 834
CDR                  ; 835
JOIN                 ; 836
LD     0 0          ;  <== sorted_node_put  [SortedMapNode<T> node, int key, T val] (as blk) ; 837
ATOM                 ; 838
SEL    841 849      ; IF? 29 ; 839
RTN                  ; 840
LD     0 1          ; THEN: 29 ; 841
LD     0 2          ; var val ; 842
LDC    0            ; just constant from code ; 843
LDC    0            ; NULL literal ; 844
LDC    0            ; NULL literal ; 845
LDF    659          ;  @sorted_node_new ; 846
AP     5             ; 847
JOIN                 ; 848
LD     0 1          ; ELSE: 29 ; 849
LD     0 0          ; var node ; 850
CDR                 ; generateTupleAccess total=6 pos=1 ; 851
CAR                  ; 852
CEQ                  ; 853
SEL    856 864      ; IF? 80 ; 854
JOIN                 ; 855
LD     0 2          ; THEN: 80 ; 856
LD     0 0          ; var node ; 857
CDR                 ; generateTupleAccess total=6 pos=2 ; 858
CDR                  ; 859
CAR                  ; 860
CEQ                  ; 861
SEL    874 876      ; IF? 81 ; 862
JOIN                 ; 863
LD     0 0          ; ELSE: 80 ; 864
CDR                 ; generateTupleAccess total=6 pos=1 ; 865
CAR                  ; 866
LD     0 1          ; var key ; 867
CGT                  ; 868
SEL    898 913      ; IF? 82 ; 869
LDC 0               ; local var space ; 870
LDF    985          ;  @sorted_node_split ; 871
AP     2             ; 872
JOIN                 ; 873
LD     0 0          ; THEN: 81 ; 874
JOIN                 ; 875
LD     0 1          ; ELSE: 81 ; 876
LD     0 2          ; var val ; 877
LD     0 0          ; var node ; 878
CDR                 ; generateTupleAccess total=6 pos=3 ; 879
CDR                  ; 880
CDR                  ; 881
CAR                  ; 882
LD     0 0          ; var node ; 883
CDR                 ; generateTupleAccess total=6 pos=4 ; 884
CDR                  ; 885
CDR                  ; 886
CDR                  ; 887
CAR                  ; 888
LD     0 0          ; var node ; 889
CDR                 ; generateTupleAccess total=6 pos=5 ; 890
CDR                  ; 891
CDR                  ; 892
CDR                  ; 893
CDR                  ; 894
LDF    659          ;  @sorted_node_new ; 895
AP     5             ; 896
JOIN                 ; 897
LD     0 0          ; THEN: 82 ; 898
LD     0 0          ; var node ; 899
CDR                 ; generateTupleAccess total=6 pos=4 ; 900
CDR                  ; 901
CDR                  ; 902
CDR                  ; 903
CAR                  ; 904
LD     0 1          ; var key ; 905
LD     0 2          ; var val ; 906
LDF    837          ;  @sorted_node_put ; 907
AP     3             ; 908
LDC 0               ; local var space ; 909
LDF    931          ;  @sorted_node_skew ; 910
AP     3             ; 911
JOIN                 ; 912
LD     0 0          ; ELSE: 82 ; 913
LD     0 0          ; var node ; 914
CDR                 ; generateTupleAccess total=6 pos=5 ; 915
CDR                  ; 916
CDR                  ; 917
CDR                  ; 918
CDR                  ; 919
LD     0 1          ; var key ; 920
LD     0 2          ; var val ; 921
LDF    837          ;  @sorted_node_put ; 922
AP     3             ; 923
LDF    744          ;  @sorted_node_with_hi ; 924
AP     2             ; 925
LDC    0            ; NULL literal ; 926
LDC 0               ; local var space ; 927
LDF    931          ;  @sorted_node_skew ; 928
AP     3             ; 929
JOIN                 ; 930
LD     0 1          ;  <== sorted_node_skew  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 931
ATOM                 ; 932
LDC    1            ; for negation ; 933
SUB                  ; 934
SEL    946 948      ; IF? 30 ; 935
ST     0 1           ; 936
LD     0 0          ; var node ; 937
LD     0 1          ; var lo ; 938
LDF    733          ;  @sorted_node_with_lo ; 939
AP     2             ; 940
ST     0 2           ; 941
LD     0 1          ; var lo ; 942
ATOM                 ; 943
SEL    955 957      ; IF? 31 ; 944
RTN                  ; 945
LD     0 1          ; THEN: 30 ; 946
JOIN                 ; 947
LD     0 0          ; ELSE: 30 ; 948
CDR                 ; generateTupleAccess total=6 pos=4 ; 949
CDR                  ; 950
CDR                  ; 951
CDR                  ; 952
CAR                  ; 953
JOIN                 ; 954
LD     0 2          ; THEN: 31 ; 955
JOIN                 ; 956
LD     0 0          ; ELSE: 31 ; 957
CDR                 ; generateTupleAccess total=6 pos=3 ; 958
CDR                  ; 959
CDR                  ; 960
CAR                  ; 961
LD     0 1          ; var lo ; 962
CDR                 ; generateTupleAccess total=6 pos=3 ; 963
CDR                  ; 964
CDR                  ; 965
CAR                  ; 966
CGT                  ; 967
SEL    970 972      ; IF? 83 ; 968
JOIN                 ; 969
LD     0 2          ; THEN: 83 ; 970
JOIN                 ; 971
LD     0 1          ; ELSE: 83 ; 972
LD     0 0          ; var node ; 973
LD     0 1          ; var lo ; 974
CDR                 ; generateTupleAccess total=6 pos=5 ; 975
CDR                  ; 976
CDR                  ; 977
CDR                  ; 978
CDR                  ; 979
LDF    733          ;  @sorted_node_with_lo ; 980
AP     2             ; 981
LDF    744          ;  @sorted_node_with_hi ; 982
AP     2             ; 983
JOIN                 ; 984
LD     0 0          ;  <== sorted_node_split  [SortedMapNode<T> node] (as blk) ; 985
CDR                 ; generateTupleAccess total=6 pos=5 ; 986
CDR                  ; 987
CDR                  ; 988
CDR                  ; 989
CDR                  ; 990
ST     0 1           ; 991
LD     0 1          ; var hi ; 992
ATOM                 ; 993
SEL    996 998      ; IF? 32 ; 994
RTN                  ; 995
LD     0 0          ; THEN: 32 ; 996
JOIN                 ; 997
LD     0 1          ; ELSE: 32 ; 998
CDR                 ; generateTupleAccess total=6 pos=5 ; 999
CDR                  ; 1000
CDR                  ; 1001
CDR                  ; 1002
CDR                  ; 1003
ATOM                 ; 1004
SEL    1007 1009    ; IF? 84 ; 1005
JOIN                 ; 1006
LD     0 0          ; THEN: 84 ; 1007
JOIN                 ; 1008
LD     0 0          ; ELSE: 84 ; 1009
CDR                 ; generateTupleAccess total=6 pos=3 ; 1010
CDR                  ; 1011
CDR                  ; 1012
CAR                  ; 1013
LD     0 1          ; var hi ; 1014
CDR                 ; generateTupleAccess total=6 pos=5 ; 1015
CDR                  ; 1016
CDR                  ; 1017
CDR                  ; 1018
CDR                  ; 1019
CDR                 ; generateTupleAccess total=6 pos=3 ; 1020
CDR                  ; 1021
CDR                  ; 1022
CAR                  ; 1023
CGT                  ; 1024
SEL    1027 1029    ; IF? 85 ; 1025
JOIN                 ; 1026
LD     0 0          ; THEN: 85 ; 1027
JOIN                 ; 1028
LD     0 1          ; ELSE: 85 ; 1029
CDR                 ; generateTupleAccess total=6 pos=1 ; 1030
CAR                  ; 1031
LD     0 1          ; var hi ; 1032
CDR                 ; generateTupleAccess total=6 pos=2 ; 1033
CDR                  ; 1034
CAR                  ; 1035
LD     0 1          ; var hi ; 1036
CDR                 ; generateTupleAccess total=6 pos=3 ; 1037
CDR                  ; 1038
CDR                  ; 1039
CAR                  ; 1040
LDC    1            ; just constant from code ; 1041
ADD                  ; 1042
LD     0 0          ; var node ; 1043
LD     0 1          ; var hi ; 1044
CDR                 ; generateTupleAccess total=6 pos=4 ; 1045
CDR                  ; 1046
CDR                  ; 1047
CDR                  ; 1048
CAR                  ; 1049
LDF    744          ;  @sorted_node_with_hi ; 1050
AP     2             ; 1051
LD     0 1          ; var hi ; 1052
CDR                 ; generateTupleAccess total=6 pos=5 ; 1053
CDR                  ; 1054
CDR                  ; 1055
CDR                  ; 1056
CDR                  ; 1057
LDF    659          ;  @sorted_node_new ; 1058
AP     5             ; 1059
JOIN                 ; 1060
LD     0 0          ;  <== sorted_map_count  [SortedMap<T> m] (as blk) ; 1061
CAR                 ; generateTupleAccess total=2 pos=0 ; 1062
ATOM                 ; 1063
LDC    1            ; for negation ; 1064
SUB                  ; 1065
SEL    1068 1072    ; IF? 33 ; 1066
RTN                  ; 1067
LD     0 0          ; THEN: 33 ; 1068
CAR                 ; generateTupleAccess total=2 pos=0 ; 1069
CAR                 ; generateTupleAccess total=6 pos=0 ; 1070
JOIN                 ; 1071
LDC    0            ; ELSE: 33 ; 1072
JOIN                 ; 1073
LD     0 0          ;  <== sorted_map_contains  [SortedMap<T> m, int key] (as blk) ; 1074
CAR                 ; generateTupleAccess total=2 pos=0 ; 1075
ATOM                 ; 1076
LDC    1            ; for negation ; 1077
SUB                  ; 1078
SEL    1081 1087    ; IF? 34 ; 1079
RTN                  ; 1080
LD     0 0          ; THEN: 34 ; 1081
CAR                 ; generateTupleAccess total=2 pos=0 ; 1082
LD     0 1          ; var key ; 1083
LDF    755          ;  @sorted_node_has ; 1084
AP     2             ; 1085
JOIN                 ; 1086
LDC    0            ; ELSE: 34 ; 1087
JOIN                 ; 1088
LD     0 0          ;  <== sorted_map_get  [SortedMap<T> m, int key, T def] (as blk) ; 1089
CAR                 ; generateTupleAccess total=2 pos=0 ; 1090
ATOM                 ; 1091
LDC    1            ; for negation ; 1092
SUB                  ; 1093
SEL    1096 1103    ; IF? 35 ; 1094
RTN                  ; 1095
LD     0 0          ; THEN: 35 ; 1096
CAR                 ; generateTupleAccess total=2 pos=0 ; 1097
LD     0 1          ; var key ; 1098
LD     0 2          ; var def ; 1099
LDF    794          ;  @sorted_node_get ; 1100
AP     3             ; 1101
JOIN                 ; 1102
LD     0 2          ; ELSE: 35 ; 1103
JOIN                 ; 1104
LD     0 0          ;  <== sorted_map_assoc  [SortedMap<T> m, int key, T val] (as blk) ; 1105
CAR                 ; generateTupleAccess total=2 pos=0 ; 1106
LD     0 1          ; var key ; 1107
LD     0 2          ; var val ; 1108
LDF    837          ;  @sorted_node_put ; 1109
AP     3             ; 1110
LDC    0            ; just constant from code ; 1111
CONS                 ; 1112
RTN                  ; 1113
LD     0 1          ;  <== sorted_map_assoc_all  [SortedMap<T> m, ListCons<Tuple<Integer,T>> l] (as blk) ; 1114
LD     0 0          ; var m ; 1115
LDF    9386         ;  @lambda_1003 ; 1116
LDF    385          ;  @fold0 ; 1117
AP     3             ; 1118
RTN                  ; 1119
LD     0 1          ;  <== zip_with  [Function2<A,B,C> f, ListCons<A> x, ListCons<B> y] (as blk) ; 1120
ATOM                 ; 1121
SEL    1124 1126    ; IF? 36 ; 1122
RTN                  ; 1123
LDC    0            ; THEN: 36 ; 1124
JOIN                 ; 1125
LD     0 2          ; ELSE: 36 ; 1126
ATOM                 ; 1127
SEL    1130 1132    ; IF? 86 ; 1128
JOIN                 ; 1129
LDC    0            ; THEN: 86 ; 1130
JOIN                 ; 1131
LD     0 1          ; ELSE: 86 ; 1132
CAR                  ; 1133
LD     0 2          ; var y ; 1134
CAR                  ; 1135
LD     0 0          ; var f ; 1136
AP     2             ; 1137
LD     0 0          ; var f ; 1138
LD     0 1          ; var x ; 1139
CDR                  ; 1140
LD     0 2          ; var y ; 1141
CDR                  ; 1142
LDF    1120         ;  @zip_with ; 1143
AP     3             ; 1144
CONS                 ; 1145
JOIN                 ; 1146
LD     0 0          ;  <== zip  [final ListCons<A> x, final ListCons<B> y] (as blk) ; 1147
ATOM                 ; 1148
SEL    1151 1153    ; IF? 37 ; 1149
RTN                  ; 1150
LDC    0            ; THEN: 37 ; 1151
JOIN                 ; 1152
LD     0 1          ; ELSE: 37 ; 1153
ATOM                 ; 1154
SEL    1157 1159    ; IF? 87 ; 1155
JOIN                 ; 1156
LDC    0            ; THEN: 87 ; 1157
JOIN                 ; 1158
LD     0 0          ; ELSE: 87 ; 1159
CAR                  ; 1160
LD     0 1          ; var y ; 1161
CAR                  ; 1162
CONS                 ; 1163
LD     0 0          ; var x ; 1164
CDR                  ; 1165
LD     0 1          ; var y ; 1166
CDR                  ; 1167
LDF    1147         ;  @zip ; 1168
AP     2             ; 1169
CONS                 ; 1170
JOIN                 ; 1171
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 1172
LD     0 0          ; var f ; 1173
AP     1             ; 1174
CAR                  ; 1175
ST     0 3           ; 1176
LD     0 2          ; var n ; 1177
LDC    0            ; just constant from code ; 1178
CEQ                  ; 1179
SEL    1182 1186    ; IF? 38 ; 1180
RTN                  ; 1181
LD     0 3          ; THEN: 38 ; 1182
LDC    0            ; NULL literal ; 1183
CONS                 ; 1184
JOIN                 ; 1185
LD     0 3          ; ELSE: 38 ; 1186
LD     0 0          ; var f ; 1187
LD     0 1          ; var a ; 1188
LD     0 0          ; var f ; 1189
AP     1             ; 1190
CDR                  ; 1191
LD     0 2          ; var n ; 1192
LDC    1            ; just constant from code ; 1193
SUB                  ; 1194
LDC 0               ; local var space ; 1195
LDF    1172         ;  @produce_n ; 1196
AP     4             ; 1197
CONS                 ; 1198
JOIN                 ; 1199
LDC 0               ; generated from native: array_256 ; 1200
LDC 0                ; 1201
LDC 0                ; 1202
LDC 0                ; 1203
LDC 0                ; 1204
LDC 0                ; 1205
LDC 0                ; 1206
LDC 0                ; 1207
LDC 0                ; 1208
LDC 0                ; 1209
LDC 0                ; 1210
LDC 0                ; 1211
LDC 0                ; 1212
LDC 0                ; 1213
LDC 0                ; 1214
LDC 0                ; 1215
LDC 0                ; 1216
LDC 0                ; 1217
LDC 0                ; 1218
LDC 0                ; 1219
LDC 0                ; 1220
LDC 0                ; 1221
LDC 0                ; 1222
LDC 0                ; 1223
LDC 0                ; 1224
LDC 0                ; 1225
LDC 0                ; 1226
LDC 0                ; 1227
LDC 0                ; 1228
LDC 0                ; 1229
LDC 0                ; 1230
LDC 0                ; 1231
LDC 0                ; 1232
LDC 0                ; 1233
LDC 0                ; 1234
LDC 0                ; 1235
LDC 0                ; 1236
LDC 0                ; 1237
LDC 0                ; 1238
LDC 0                ; 1239
LDC 0                ; 1240
LDC 0                ; 1241
LDC 0                ; 1242
LDC 0                ; 1243
LDC 0                ; 1244
LDC 0                ; 1245
LDC 0                ; 1246
LDC 0                ; 1247
LDC 0                ; 1248
LDC 0                ; 1249
LDC 0                ; 1250
LDC 0                ; 1251
LDC 0                ; 1252
LDC 0                ; 1253
LDC 0                ; 1254
LDC 0                ; 1255
LDC 0                ; 1256
LDC 0                ; 1257
LDC 0                ; 1258
LDC 0                ; 1259
LDC 0                ; 1260
LDC 0                ; 1261
LDC 0                ; 1262
LDC 0                ; 1263
LDC 0                ; 1264
LDC 0                ; 1265
LDC 0                ; 1266
LDC 0                ; 1267
LDC 0                ; 1268
LDC 0                ; 1269
LDC 0                ; 1270
LDC 0                ; 1271
LDC 0                ; 1272
LDC 0                ; 1273
LDC 0                ; 1274
LDC 0                ; 1275
LDC 0                ; 1276
LDC 0                ; 1277
LDC 0                ; 1278
LDC 0                ; 1279
LDC 0                ; 1280
LDC 0                ; 1281
LDC 0                ; 1282
LDC 0                ; 1283
LDC 0                ; 1284
LDC 0                ; 1285
LDC 0                ; 1286
LDC 0                ; 1287
LDC 0                ; 1288
LDC 0                ; 1289
LDC 0                ; 1290
LDC 0                ; 1291
LDC 0                ; 1292
LDC 0                ; 1293
LDC 0                ; 1294
LDC 0                ; 1295
LDC 0                ; 1296
LDC 0                ; 1297
LDC 0                ; 1298
LDC 0                ; 1299
LDC 0                ; 1300
LDC 0                ; 1301
LDC 0                ; 1302
LDC 0                ; 1303
LDC 0                ; 1304
LDC 0                ; 1305
LDC 0                ; 1306
LDC 0                ; 1307
LDC 0                ; 1308
LDC 0                ; 1309
LDC 0                ; 1310
LDC 0                ; 1311
LDC 0                ; 1312
LDC 0                ; 1313
LDC 0                ; 1314
LDC 0                ; 1315
LDC 0                ; 1316
LDC 0                ; 1317
LDC 0                ; 1318
LDC 0                ; 1319
LDC 0                ; 1320
LDC 0                ; 1321
LDC 0                ; 1322
LDC 0                ; 1323
LDC 0                ; 1324
LDC 0                ; 1325
LDC 0                ; 1326
LDC 0                ; 1327
LDC 0                ; 1328
LDC 0                ; 1329
LDC 0                ; 1330
LDC 0                ; 1331
LDC 0                ; 1332
LDC 0                ; 1333
LDC 0                ; 1334
LDC 0                ; 1335
LDC 0                ; 1336
LDC 0                ; 1337
LDC 0                ; 1338
LDC 0                ; 1339
LDC 0                ; 1340
LDC 0                ; 1341
LDC 0                ; 1342
LDC 0                ; 1343
LDC 0                ; 1344
LDC 0                ; 1345
LDC 0                ; 1346
LDC 0                ; 1347
LDC 0                ; 1348
LDC 0                ; 1349
LDC 0                ; 1350
LDC 0                ; 1351
LDC 0                ; 1352
LDC 0                ; 1353
LDC 0                ; 1354
LDC 0                ; 1355
LDC 0                ; 1356
LDC 0                ; 1357
LDC 0                ; 1358
LDC 0                ; 1359
LDC 0                ; 1360
LDC 0                ; 1361
LDC 0                ; 1362
LDC 0                ; 1363
LDC 0                ; 1364
LDC 0                ; 1365
LDC 0                ; 1366
LDC 0                ; 1367
LDC 0                ; 1368
LDC 0                ; 1369
LDC 0                ; 1370
LDC 0                ; 1371
LDC 0                ; 1372
LDC 0                ; 1373
LDC 0                ; 1374
LDC 0                ; 1375
LDC 0                ; 1376
LDC 0                ; 1377
LDC 0                ; 1378
LDC 0                ; 1379
LDC 0                ; 1380
LDC 0                ; 1381
LDC 0                ; 1382
LDC 0                ; 1383
LDC 0                ; 1384
LDC 0                ; 1385
LDC 0                ; 1386
LDC 0                ; 1387
LDC 0                ; 1388
LDC 0                ; 1389
LDC 0                ; 1390
LDC 0                ; 1391
LDC 0                ; 1392
LDC 0                ; 1393
LDC 0                ; 1394
LDC 0                ; 1395
LDC 0                ; 1396
LDC 0                ; 1397
LDC 0                ; 1398
LDC 0                ; 1399
LDC 0                ; 1400
LDC 0                ; 1401
LDC 0                ; 1402
LDC 0                ; 1403
LDC 0                ; 1404
LDC 0                ; 1405
LDC 0                ; 1406
LDC 0                ; 1407
LDC 0                ; 1408
LDC 0                ; 1409
LDC 0                ; 1410
LDC 0                ; 1411
LDC 0                ; 1412
LDC 0                ; 1413
LDC 0                ; 1414
LDC 0                ; 1415
LDC 0                ; 1416
LDC 0                ; 1417
LDC 0                ; 1418
LDC 0                ; 1419
LDC 0                ; 1420
LDC 0                ; 1421
LDC 0                ; 1422
LDC 0                ; 1423
LDC 0                ; 1424
LDC 0                ; 1425
LDC 0                ; 1426
LDC 0                ; 1427
LDC 0                ; 1428
LDC 0                ; 1429
LDC 0                ; 1430
LDC 0                ; 1431
LDC 0                ; 1432
LDC 0                ; 1433
LDC 0                ; 1434
LDC 0                ; 1435
LDC 0                ; 1436
LDC 0                ; 1437
LDC 0                ; 1438
LDC 0                ; 1439
LDC 0                ; 1440
LDC 0                ; 1441
LDC 0                ; 1442
LDC 0                ; 1443
LDC 0                ; 1444
LDC 0                ; 1445
LDC 0                ; 1446
LDC 0                ; 1447
LDC 0                ; 1448
LDC 0                ; 1449
LDC 0                ; 1450
LDC 0                ; 1451
LDC 0                ; 1452
LDC 0                ; 1453
LDC 0                ; 1454
LDC 0                ; 1455
LDF 1459             ; 1456
AP 256               ; 1457
RTN                  ; 1458
LDF  1461            ; 1459
RTN                  ; 1460
LD  0   0            ; 1461
LDC 100              ; 1462
CEQ                  ; 1463
TSEL    1465 2491    ; 1464
LD  0   1            ; 1465
LDC 0                ; 1466
CEQ                  ; 1467
TSEL    3519 1469    ; 1468
LD  0   1            ; 1469
LDC 1                ; 1470
CEQ                  ; 1471
TSEL    3529 1473    ; 1472
LD  0   1            ; 1473
LDC 2                ; 1474
CEQ                  ; 1475
TSEL    3539 1477    ; 1476
LD  0   1            ; 1477
LDC 3                ; 1478
CEQ                  ; 1479
TSEL    3549 1481    ; 1480
LD  0   1            ; 1481
LDC 4                ; 1482
CEQ                  ; 1483
TSEL    3559 1485    ; 1484
LD  0   1            ; 1485
LDC 5                ; 1486
CEQ                  ; 1487
TSEL    3569 1489    ; 1488
LD  0   1            ; 1489
LDC 6                ; 1490
CEQ                  ; 1491
TSEL    3579 1493    ; 1492
LD  0   1            ; 1493
LDC 7                ; 1494
CEQ                  ; 1495
TSEL    3589 1497    ; 1496
LD  0   1            ; 1497
LDC 8                ; 1498
CEQ                  ; 1499
TSEL    3599 1501    ; 1500
LD  0   1            ; 1501
LDC 9                ; 1502
CEQ                  ; 1503
TSEL    3609 1505    ; 1504
LD  0   1            ; 1505
LDC 10               ; 1506
CEQ                  ; 1507
TSEL    3619 1509    ; 1508
LD  0   1            ; 1509
LDC 11               ; 1510
CEQ                  ; 1511
TSEL    3629 1513    ; 1512
LD  0   1            ; 1513
LDC 12               ; 1514
CEQ                  ; 1515
TSEL    3639 1517    ; 1516
LD  0   1            ; 1517
LDC 13               ; 1518
CEQ                  ; 1519
TSEL    3649 1521    ; 1520
LD  0   1            ; 1521
LDC 14               ; 1522
CEQ                  ; 1523
TSEL    3659 1525    ; 1524
LD  0   1            ; 1525
LDC 15               ; 1526
CEQ                  ; 1527
TSEL    3669 1529    ; 1528
LD  0   1            ; 1529
LDC 16               ; 1530
CEQ                  ; 1531
TSEL    3679 1533    ; 1532
LD  0   1            ; 1533
LDC 17               ; 1534
CEQ                  ; 1535
TSEL    3689 1537    ; 1536
LD  0   1            ; 1537
LDC 18               ; 1538
CEQ                  ; 1539
TSEL    3699 1541    ; 1540
LD  0   1            ; 1541
LDC 19               ; 1542
CEQ                  ; 1543
TSEL    3709 1545    ; 1544
LD  0   1            ; 1545
LDC 20               ; 1546
CEQ                  ; 1547
TSEL    3719 1549    ; 1548
LD  0   1            ; 1549
LDC 21               ; 1550
CEQ                  ; 1551
TSEL    3729 1553    ; 1552
LD  0   1            ; 1553
LDC 22               ; 1554
CEQ                  ; 1555
TSEL    3739 1557    ; 1556
LD  0   1            ; 1557
LDC 23               ; 1558
CEQ                  ; 1559
TSEL    3749 1561    ; 1560
LD  0   1            ; 1561
LDC 24               ; 1562
CEQ                  ; 1563
TSEL    3759 1565    ; 1564
LD  0   1            ; 1565
LDC 25               ; 1566
CEQ                  ; 1567
TSEL    3769 1569    ; 1568
LD  0   1            ; 1569
LDC 26               ; 1570
CEQ                  ; 1571
TSEL    3779 1573    ; 1572
LD  0   1            ; 1573
LDC 27               ; 1574
CEQ                  ; 1575
TSEL    3789 1577    ; 1576
LD  0   1            ; 1577
LDC 28               ; 1578
CEQ                  ; 1579
TSEL    3799 1581    ; 1580
LD  0   1            ; 1581
LDC 29               ; 1582
CEQ                  ; 1583
TSEL    3809 1585    ; 1584
LD  0   1            ; 1585
LDC 30               ; 1586
CEQ                  ; 1587
TSEL    3819 1589    ; 1588
LD  0   1            ; 1589
LDC 31               ; 1590
CEQ                  ; 1591
TSEL    3829 1593    ; 1592
LD  0   1            ; 1593
LDC 32               ; 1594
CEQ                  ; 1595
TSEL    3839 1597    ; 1596
LD  0   1            ; 1597
LDC 33               ; 1598
CEQ                  ; 1599
TSEL    3849 1601    ; 1600
LD  0   1            ; 1601
LDC 34               ; 1602
CEQ                  ; 1603
TSEL    3859 1605    ; 1604
LD  0   1            ; 1605
LDC 35               ; 1606
CEQ                  ; 1607
TSEL    3869 1609    ; 1608
LD  0   1            ; 1609
LDC 36               ; 1610
CEQ                  ; 1611
TSEL    3879 1613    ; 1612
LD  0   1            ; 1613
LDC 37               ; 1614
CEQ                  ; 1615
TSEL    3889 1617    ; 1616
LD  0   1            ; 1617
LDC 38               ; 1618
CEQ                  ; 1619
TSEL    3899 1621    ; 1620
LD  0   1            ; 1621
LDC 39               ; 1622
CEQ                  ; 1623
TSEL    3909 1625    ; 1624
LD  0   1            ; 1625
LDC 40               ; 1626
CEQ                  ; 1627
TSEL    3919 1629    ; 1628
LD  0   1            ; 1629
LDC 41               ; 1630
CEQ                  ; 1631
TSEL    3929 1633    ; 1632
LD  0   1            ; 1633
LDC 42               ; 1634
CEQ                  ; 1635
TSEL    3939 1637    ; 1636
LD  0   1            ; 1637
LDC 43               ; 1638
CEQ                  ; 1639
TSEL    3949 1641    ; 1640
LD  0   1            ; 1641
LDC 44               ; 1642
CEQ                  ; 1643
TSEL    3959 1645    ; 1644
LD  0   1            ; 1645
LDC 45               ; 1646
CEQ                  ; 1647
TSEL    3969 1649    ; 1648
LD  0   1            ; 1649
LDC 46               ; 1650
CEQ                  ; 1651
TSEL    3979 1653    ; 1652
LD  0   1            ; 1653
LDC 47               ; 1654
CEQ                  ; 1655
TSEL    3989 1657    ; 1656
LD  0   1            ; 1657
LDC 48               ; 1658
CEQ                  ; 1659
TSEL    3999 1661    ; 1660
LD  0   1            ; 1661
LDC 49               ; 1662
CEQ                  ; 1663
TSEL    4009 1665    ; 1664
LD  0   1            ; 1665
LDC 50               ; 1666
CEQ                  ; 1667
TSEL    4019 1669    ; 1668
LD  0   1            ; 1669
LDC 51               ; 1670
CEQ                  ; 1671
TSEL    4029 1673    ; 1672
LD  0   1            ; 1673
LDC 52               ; 1674
CEQ                  ; 1675
TSEL    4039 1677    ; 1676
LD  0   1            ; 1677
LDC 53               ; 1678
CEQ                  ; 1679
TSEL    4049 1681    ; 1680
LD  0   1            ; 1681
LDC 54               ; 1682
CEQ                  ; 1683
TSEL    4059 1685    ; 1684
LD  0   1            ; 1685
LDC 55               ; 1686
CEQ                  ; 1687
TSEL    4069 1689    ; 1688
LD  0   1            ; 1689
LDC 56               ; 1690
CEQ                  ; 1691
TSEL    4079 1693    ; 1692
LD  0   1            ; 1693
LDC 57               ; 1694
CEQ                  ; 1695
TSEL    4089 1697    ; 1696
LD  0   1            ; 1697
LDC 58               ; 1698
CEQ                  ; 1699
TSEL    4099 1701    ; 1700
LD  0   1            ; 1701
LDC 59               ; 1702
CEQ                  ; 1703
TSEL    4109 1705    ; 1704
LD  0   1            ; 1705
LDC 60               ; 1706
CEQ                  ; 1707
TSEL    4119 1709    ; 1708
LD  0   1            ; 1709
LDC 61               ; 1710
CEQ                  ; 1711
TSEL    4129 1713    ; 1712
LD  0   1            ; 1713
LDC 62               ; 1714
CEQ                  ; 1715
TSEL    4139 1717    ; 1716
LD  0   1            ; 1717
LDC 63               ; 1718
CEQ                  ; 1719
TSEL    4149 1721    ; 1720
LD  0   1            ; 1721
LDC 64               ; 1722
CEQ                  ; 1723
TSEL    4159 1725    ; 1724
LD  0   1            ; 1725
LDC 65               ; 1726
CEQ                  ; 1727
TSEL    4169 1729    ; 1728
LD  0   1            ; 1729
LDC 66               ; 1730
CEQ                  ; 1731
TSEL    4179 1733    ; 1732
LD  0   1            ; 1733
LDC 67               ; 1734
CEQ                  ; 1735
TSEL    4189 1737    ; 1736
LD  0   1            ; 1737
LDC 68               ; 1738
CEQ                  ; 1739
TSEL    4199 1741    ; 1740
LD  0   1            ; 1741
LDC 69               ; 1742
CEQ                  ; 1743
TSEL    4209 1745    ; 1744
LD  0   1            ; 1745
LDC 70               ; 1746
CEQ                  ; 1747
TSEL    4219 1749    ; 1748
LD  0   1            ; 1749
LDC 71               ; 1750
CEQ                  ; 1751
TSEL    4229 1753    ; 1752
LD  0   1            ; 1753
LDC 72               ; 1754
CEQ                  ; 1755
TSEL    4239 1757    ; 1756
LD  0   1            ; 1757
LDC 73               ; 1758
CEQ                  ; 1759
TSEL    4249 1761    ; 1760
LD  0   1            ; 1761
LDC 74               ; 1762
CEQ                  ; 1763
TSEL    4259 1765    ; 1764
LD  0   1            ; 1765
LDC 75               ; 1766
CEQ                  ; 1767
TSEL    4269 1769    ; 1768
LD  0   1            ; 1769
LDC 76               ; 1770
CEQ                  ; 1771
TSEL    4279 1773    ; 1772
LD  0   1            ; 1773
LDC 77               ; 1774
CEQ                  ; 1775
TSEL    4289 1777    ; 1776
LD  0   1            ; 1777
LDC 78               ; 1778
CEQ                  ; 1779
TSEL    4299 1781    ; 1780
LD  0   1            ; 1781
LDC 79               ; 1782
CEQ                  ; 1783
TSEL    4309 1785    ; 1784
LD  0   1            ; 1785
LDC 80               ; 1786
CEQ                  ; 1787
TSEL    4319 1789    ; 1788
LD  0   1            ; 1789
LDC 81               ; 1790
CEQ                  ; 1791
TSEL    4329 1793    ; 1792
LD  0   1            ; 1793
LDC 82               ; 1794
CEQ                  ; 1795
TSEL    4339 1797    ; 1796
LD  0   1            ; 1797
LDC 83               ; 1798
CEQ                  ; 1799
TSEL    4349 1801    ; 1800
LD  0   1            ; 1801
LDC 84               ; 1802
CEQ                  ; 1803
TSEL    4359 1805    ; 1804
LD  0   1            ; 1805
LDC 85               ; 1806
CEQ                  ; 1807
TSEL    4369 1809    ; 1808
LD  0   1            ; 1809
LDC 86               ; 1810
CEQ                  ; 1811
TSEL    4379 1813    ; 1812
LD  0   1            ; 1813
LDC 87               ; 1814
CEQ                  ; 1815
TSEL    4389 1817    ; 1816
LD  0   1            ; 1817
LDC 88               ; 1818
CEQ                  ; 1819
TSEL    4399 1821    ; 1820
LD  0   1            ; 1821
LDC 89               ; 1822
CEQ                  ; 1823
TSEL    4409 1825    ; 1824
LD  0   1            ; 1825
LDC 90               ; 1826
CEQ                  ; 1827
TSEL    4419 1829    ; 1828
LD  0   1            ; 1829
LDC 91               ; 1830
CEQ                  ; 1831
TSEL    4429 1833    ; 1832
LD  0   1            ; 1833
LDC 92               ; 1834
CEQ                  ; 1835
TSEL    4439 1837    ; 1836
LD  0   1            ; 1837
LDC 93               ; 1838
CEQ                  ; 1839
TSEL    4449 1841    ; 1840
LD  0   1            ; 1841
LDC 94               ; 1842
CEQ                  ; 1843
TSEL    4459 1845    ; 1844
LD  0   1            ; 1845
LDC 95               ; 1846
CEQ                  ; 1847
TSEL    4469 1849    ; 1848
LD  0   1            ; 1849
LDC 96               ; 1850
CEQ                  ; 1851
TSEL    4479 1853    ; 1852
LD  0   1            ; 1853
LDC 97               ; 1854
CEQ                  ; 1855
TSEL    4489 1857    ; 1856
LD  0   1            ; 1857
LDC 98               ; 1858
CEQ                  ; 1859
TSEL    4499 1861    ; 1860
LD  0   1            ; 1861
LDC 99               ; 1862
CEQ                  ; 1863
TSEL    4509 1865    ; 1864
LD  0   1            ; 1865
LDC 100              ; 1866
CEQ                  ; 1867
TSEL    4519 1869    ; 1868
LD  0   1            ; 1869
LDC 101              ; 1870
CEQ                  ; 1871
TSEL    4529 1873    ; 1872
LD  0   1            ; 1873
LDC 102              ; 1874
CEQ                  ; 1875
TSEL    4539 1877    ; 1876
LD  0   1            ; 1877
LDC 103              ; 1878
CEQ                  ; 1879
TSEL    4549 1881    ; 1880
LD  0   1            ; 1881
LDC 104              ; 1882
CEQ                  ; 1883
TSEL    4559 1885    ; 1884
LD  0   1            ; 1885
LDC 105              ; 1886
CEQ                  ; 1887
TSEL    4569 1889    ; 1888
LD  0   1            ; 1889
LDC 106              ; 1890
CEQ                  ; 1891
TSEL    4579 1893    ; 1892
LD  0   1            ; 1893
LDC 107              ; 1894
CEQ                  ; 1895
TSEL    4589 1897    ; 1896
LD  0   1            ; 1897
LDC 108              ; 1898
CEQ                  ; 1899
TSEL    4599 1901    ; 1900
LD  0   1            ; 1901
LDC 109              ; 1902
CEQ                  ; 1903
TSEL    4609 1905    ; 1904
LD  0   1            ; 1905
LDC 110              ; 1906
CEQ                  ; 1907
TSEL    4619 1909    ; 1908
LD  0   1            ; 1909
LDC 111              ; 1910
CEQ                  ; 1911
TSEL    4629 1913    ; 1912
LD  0   1            ; 1913
LDC 112              ; 1914
CEQ                  ; 1915
TSEL    4639 1917    ; 1916
LD  0   1            ; 1917
LDC 113              ; 1918
CEQ                  ; 1919
TSEL    4649 1921    ; 1920
LD  0   1            ; 1921
LDC 114              ; 1922
CEQ                  ; 1923
TSEL    4659 1925    ; 1924
LD  0   1            ; 1925
LDC 115              ; 1926
CEQ                  ; 1927
TSEL    4669 1929    ; 1928
LD  0   1            ; 1929
LDC 116              ; 1930
CEQ                  ; 1931
TSEL    4679 1933    ; 1932
LD  0   1            ; 1933
LDC 117              ; 1934
CEQ                  ; 1935
TSEL    4689 1937    ; 1936
LD  0   1            ; 1937
LDC 118              ; 1938
CEQ                  ; 1939
TSEL    4699 1941    ; 1940
LD  0   1            ; 1941
LDC 119              ; 1942
CEQ                  ; 1943
TSEL    4709 1945    ; 1944
LD  0   1            ; 1945
LDC 120              ; 1946
CEQ                  ; 1947
TSEL    4719 1949    ; 1948
LD  0   1            ; 1949
LDC 121              ; 1950
CEQ                  ; 1951
TSEL    4729 1953    ; 1952
LD  0   1            ; 1953
LDC 122              ; 1954
CEQ                  ; 1955
TSEL    4739 1957    ; 1956
LD  0   1            ; 1957
LDC 123              ; 1958
CEQ                  ; 1959
TSEL    4749 1961    ; 1960
LD  0   1            ; 1961
LDC 124              ; 1962
CEQ                  ; 1963
TSEL    4759 1965    ; 1964
LD  0   1            ; 1965
LDC 125              ; 1966
CEQ                  ; 1967
TSEL    4769 1969    ; 1968
LD  0   1            ; 1969
LDC 126              ; 1970
CEQ                  ; 1971
TSEL    4779 1973    ; 1972
LD  0   1            ; 1973
LDC 127              ; 1974
CEQ                  ; 1975
TSEL    4789 1977    ; 1976
LD  0   1            ; 1977
LDC 128              ; 1978
CEQ                  ; 1979
TSEL    4799 1981    ; 1980
LD  0   1            ; 1981
LDC 129              ; 1982
CEQ                  ; 1983
TSEL    4809 1985    ; 1984
LD  0   1            ; 1985
LDC 130              ; 1986
CEQ                  ; 1987
TSEL    4819 1989    ; 1988
LD  0   1            ; 1989
LDC 131              ; 1990
CEQ                  ; 1991
TSEL    4829 1993    ; 1992
LD  0   1            ; 1993
LDC 132              ; 1994
CEQ                  ; 1995
TSEL    4839 1997    ; 1996
LD  0   1            ; 1997
LDC 133              ; 1998
CEQ                  ; 1999
TSEL    4849 2001    ; 2000
LD  0   1            ; 2001
LDC 134              ; 2002
CEQ                  ; 2003
TSEL    4859 2005    ; 2004
LD  0   1            ; 2005
LDC 135              ; 2006
CEQ                  ; 2007
TSEL    4869 2009    ; 2008
LD  0   1            ; 2009
LDC 136              ; 2010
CEQ                  ; 2011
TSEL    4879 2013    ; 2012
LD  0   1            ; 2013
LDC 137              ; 2014
CEQ                  ; 2015
TSEL    4889 2017    ; 2016
LD  0   1            ; 2017
LDC 138              ; 2018
CEQ                  ; 2019
TSEL    4899 2021    ; 2020
LD  0   1            ; 2021
LDC 139              ; 2022
CEQ                  ; 2023
TSEL    4909 2025    ; 2024
LD  0   1            ; 2025
LDC 140              ; 2026
CEQ                  ; 2027
TSEL    4919 2029    ; 2028
LD  0   1            ; 2029
LDC 141              ; 2030
CEQ                  ; 2031
TSEL    4929 2033    ; 2032
LD  0   1            ; 2033
LDC 142              ; 2034
CEQ                  ; 2035
TSEL    4939 2037    ; 2036
LD  0   1            ; 2037
LDC 143              ; 2038
CEQ                  ; 2039
TSEL    4949 2041    ; 2040
LD  0   1            ; 2041
LDC 144              ; 2042
CEQ                  ; 2043
TSEL    4959 2045    ; 2044
LD  0   1            ; 2045
LDC 145              ; 2046
CEQ                  ; 2047
TSEL    4969 2049    ; 2048
LD  0   1            ; 2049
LDC 146              ; 2050
CEQ                  ; 2051
TSEL    4979 2053    ; 2052
LD  0   1            ; 2053
LDC 147              ; 2054
CEQ                  ; 2055
TSEL    4989 2057    ; 2056
LD  0   1            ; 2057
LDC 148              ; 2058
CEQ                  ; 2059
TSEL    4999 2061    ; 2060
LD  0   1            ; 2061
LDC 149              ; 2062
CEQ                  ; 2063
TSEL    5009 2065    ; 2064
LD  0   1            ; 2065
LDC 150              ; 2066
CEQ                  ; 2067
TSEL    5019 2069    ; 2068
LD  0   1            ; 2069
LDC 151              ; 2070
CEQ                  ; 2071
TSEL    5029 2073    ; 2072
LD  0   1            ; 2073
LDC 152              ; 2074
CEQ                  ; 2075
TSEL    5039 2077    ; 2076
LD  0   1            ; 2077
LDC 153              ; 2078
CEQ                  ; 2079
TSEL    5049 2081    ; 2080
LD  0   1            ; 2081
LDC 154              ; 2082
CEQ                  ; 2083
TSEL    5059 2085    ; 2084
LD  0   1            ; 2085
LDC 155              ; 2086
CEQ                  ; 2087
TSEL    5069 2089    ; 2088
LD  0   1            ; 2089
LDC 156              ; 2090
CEQ                  ; 2091
TSEL    5079 2093    ; 2092
LD  0   1            ; 2093
LDC 157              ; 2094
CEQ                  ; 2095
TSEL    5089 2097    ; 2096
LD  0   1            ; 2097
LDC 158              ; 2098
CEQ                  ; 2099
TSEL    5099 2101    ; 2100
LD  0   1            ; 2101
LDC 159              ; 2102
CEQ                  ; 2103
TSEL    5109 2105    ; 2104
LD  0   1            ; 2105
LDC 160              ; 2106
CEQ                  ; 2107
TSEL    5119 2109    ; 2108
LD  0   1            ; 2109
LDC 161              ; 2110
CEQ                  ; 2111
TSEL    5129 2113    ; 2112
LD  0   1            ; 2113
LDC 162              ; 2114
CEQ                  ; 2115
TSEL    5139 2117    ; 2116
LD  0   1            ; 2117
LDC 163              ; 2118
CEQ                  ; 2119
TSEL    5149 2121    ; 2120
LD  0   1            ; 2121
LDC 164              ; 2122
CEQ                  ; 2123
TSEL    5159 2125    ; 2124
LD  0   1            ; 2125
LDC 165              ; 2126
CEQ                  ; 2127
TSEL    5169 2129    ; 2128
LD  0   1            ; 2129
LDC 166              ; 2130
CEQ                  ; 2131
TSEL    5179 2133    ; 2132
LD  0   1            ; 2133
LDC 167              ; 2134
CEQ                  ; 2135
TSEL    5189 2137    ; 2136
LD  0   1            ; 2137
LDC 168              ; 2138
CEQ                  ; 2139
TSEL    5199 2141    ; 2140
LD  0   1            ; 2141
LDC 169              ; 2142
CEQ                  ; 2143
TSEL    5209 2145    ; 2144
LD  0   1            ; 2145
LDC 170              ; 2146
CEQ                  ; 2147
TSEL    5219 2149    ; 2148
LD  0   1            ; 2149
LDC 171              ; 2150
CEQ                  ; 2151
TSEL    5229 2153    ; 2152
LD  0   1            ; 2153
LDC 172              ; 2154
CEQ                  ; 2155
TSEL    5239 2157    ; 2156
LD  0   1            ; 2157
LDC 173              ; 2158
CEQ                  ; 2159
TSEL    5249 2161    ; 2160
LD  0   1            ; 2161
LDC 174              ; 2162
CEQ                  ; 2163
TSEL    5259 2165    ; 2164
LD  0   1            ; 2165
LDC 175              ; 2166
CEQ                  ; 2167
TSEL    5269 2169    ; 2168
LD  0   1            ; 2169
LDC 176              ; 2170
CEQ                  ; 2171
TSEL    5279 2173    ; 2172
LD  0   1            ; 2173
LDC 177              ; 2174
CEQ                  ; 2175
TSEL    5289 2177    ; 2176
LD  0   1            ; 2177
LDC 178              ; 2178
CEQ                  ; 2179
TSEL    5299 2181    ; 2180
LD  0   1            ; 2181
LDC 179              ; 2182
CEQ                  ; 2183
TSEL    5309 2185    ; 2184
LD  0   1            ; 2185
LDC 180              ; 2186
CEQ                  ; 2187
TSEL    5319 2189    ; 2188
LD  0   1            ; 2189
LDC 181              ; 2190
CEQ                  ; 2191
TSEL    5329 2193    ; 2192
LD  0   1            ; 2193
LDC 182              ; 2194
CEQ                  ; 2195
TSEL    5339 2197    ; 2196
LD  0   1            ; 2197
LDC 183              ; 2198
CEQ                  ; 2199
TSEL    5349 2201    ; 2200
LD  0   1            ; 2201
LDC 184              ; 2202
CEQ                  ; 2203
TSEL    5359 2205    ; 2204
LD  0   1            ; 2205
LDC 185              ; 2206
CEQ                  ; 2207
TSEL    5369 2209    ; 2208
LD  0   1            ; 2209
LDC 186              ; 2210
CEQ                  ; 2211
TSEL    5379 2213    ; 2212
LD  0   1            ; 2213
LDC 187              ; 2214
CEQ                  ; 2215
TSEL    5389 2217    ; 2216
LD  0   1            ; 2217
LDC 188              ; 2218
CEQ                  ; 2219
TSEL    5399 2221    ; 2220
LD  0   1            ; 2221
LDC 189              ; 2222
CEQ                  ; 2223
TSEL    5409 2225    ; 2224
LD  0   1            ; 2225
LDC 190              ; 2226
CEQ                  ; 2227
TSEL    5419 2229    ; 2228
LD  0   1            ; 2229
LDC 191              ; 2230
CEQ                  ; 2231
TSEL    5429 2233    ; 2232
LD  0   1            ; 2233
LDC 192              ; 2234
CEQ                  ; 2235
TSEL    5439 2237    ; 2236
LD  0   1            ; 2237
LDC 193              ; 2238
CEQ                  ; 2239
TSEL    5449 2241    ; 2240
LD  0   1            ; 2241
LDC 194              ; 2242
CEQ                  ; 2243
TSEL    5459 2245    ; 2244
LD  0   1            ; 2245
LDC 195              ; 2246
CEQ                  ; 2247
TSEL    5469 2249    ; 2248
LD  0   1            ; 2249
LDC 196              ; 2250
CEQ                  ; 2251
TSEL    5479 2253    ; 2252
LD  0   1            ; 2253
LDC 197              ; 2254
CEQ                  ; 2255
TSEL    5489 2257    ; 2256
LD  0   1            ; 2257
LDC 198              ; 2258
CEQ                  ; 2259
TSEL    5499 2261    ; 2260
LD  0   1            ; 2261
LDC 199              ; 2262
CEQ                  ; 2263
TSEL    5509 2265    ; 2264
LD  0   1            ; 2265
LDC 200              ; 2266
CEQ                  ; 2267
TSEL    5519 2269    ; 2268
LD  0   1            ; 2269
LDC 201              ; 2270
CEQ                  ; 2271
TSEL    5529 2273    ; 2272
LD  0   1            ; 2273
LDC 202              ; 2274
CEQ                  ; 2275
TSEL    5539 2277    ; 2276
LD  0   1            ; 2277
LDC 203              ; 2278
CEQ                  ; 2279
TSEL    5549 2281    ; 2280
LD  0   1            ; 2281
LDC 204              ; 2282
CEQ                  ; 2283
TSEL    5559 2285    ; 2284
LD  0   1            ; 2285
LDC 205              ; 2286
CEQ                  ; 2287
TSEL    5569 2289    ; 2288
LD  0   1            ; 2289
LDC 206              ; 2290
CEQ                  ; 2291
TSEL    5579 2293    ; 2292
LD  0   1            ; 2293
LDC 207              ; 2294
CEQ                  ; 2295
TSEL    5589 2297    ; 2296
LD  0   1            ; 2297
LDC 208              ; 2298
CEQ                  ; 2299
TSEL    5599 2301    ; 2300
LD  0   1            ; 2301
LDC 209              ; 2302
CEQ                  ; 2303
TSEL    5609 2305    ; 2304
LD  0   1            ; 2305
LDC 210              ; 2306
CEQ                  ; 2307
TSEL    5619 2309    ; 2308
LD  0   1            ; 2309
LDC 211              ; 2310
CEQ                  ; 2311
TSEL    5629 2313    ; 2312
LD  0   1            ; 2313
LDC 212              ; 2314
CEQ                  ; 2315
TSEL    5639 2317    ; 2316
LD  0   1            ; 2317
LDC 213              ; 2318
CEQ                  ; 2319
TSEL    5649 2321    ; 2320
LD  0   1            ; 2321
LDC 214              ; 2322
CEQ                  ; 2323
TSEL    5659 2325    ; 2324
LD  0   1            ; 2325
LDC 215              ; 2326
CEQ                  ; 2327
TSEL    5669 2329    ; 2328
LD  0   1            ; 2329
LDC 216              ; 2330
CEQ                  ; 2331
TSEL    5679 2333    ; 2332
LD  0   1            ; 2333
LDC 217              ; 2334
CEQ                  ; 2335
TSEL    5689 2337    ; 2336
LD  0   1            ; 2337
LDC 218              ; 2338
CEQ                  ; 2339
TSEL    5699 2341    ; 2340
LD  0   1            ; 2341
LDC 219              ; 2342
CEQ                  ; 2343
TSEL    5709 2345    ; 2344
LD  0   1            ; 2345
LDC 220              ; 2346
CEQ                  ; 2347
TSEL    5719 2349    ; 2348
LD  0   1            ; 2349
LDC 221              ; 2350
CEQ                  ; 2351
TSEL    5729 2353    ; 2352
LD  0   1            ; 2353
LDC 222              ; 2354
CEQ                  ; 2355
TSEL    5739 2357    ; 2356
LD  0   1            ; 2357
LDC 223              ; 2358
CEQ                  ; 2359
TSEL    5749 2361    ; 2360
LD  0   1            ; 2361
LDC 224              ; 2362
CEQ                  ; 2363
TSEL    5759 2365    ; 2364
LD  0   1            ; 2365
LDC 225              ; 2366
CEQ                  ; 2367
TSEL    5769 2369    ; 2368
LD  0   1            ; 2369
LDC 226              ; 2370
CEQ                  ; 2371
TSEL    5779 2373    ; 2372
LD  0   1            ; 2373
LDC 227              ; 2374
CEQ                  ; 2375
TSEL    5789 2377    ; 2376
LD  0   1            ; 2377
LDC 228              ; 2378
CEQ                  ; 2379
TSEL    5799 2381    ; 2380
LD  0   1            ; 2381
LDC 229              ; 2382
CEQ                  ; 2383
TSEL    5809 2385    ; 2384
LD  0   1            ; 2385
LDC 230              ; 2386
CEQ                  ; 2387
TSEL    5819 2389    ; 2388
LD  0   1            ; 2389
LDC 231              ; 2390
CEQ                  ; 2391
TSEL    5829 2393    ; 2392
LD  0   1            ; 2393
LDC 232              ; 2394
CEQ                  ; 2395
TSEL    5839 2397    ; 2396
LD  0   1            ; 2397
LDC 233              ; 2398
CEQ                  ; 2399
TSEL    5849 2401    ; 2400
LD  0   1            ; 2401
LDC 234              ; 2402
CEQ                  ; 2403
TSEL    5859 2405    ; 2404
LD  0   1            ; 2405
LDC 235              ; 2406
CEQ                  ; 2407
TSEL    5869 2409    ; 2408
LD  0   1            ; 2409
LDC 236              ; 2410
CEQ                  ; 2411
TSEL    5879 2413    ; 2412
LD  0   1            ; 2413
LDC 237              ; 2414
CEQ                  ; 2415
TSEL    5889 2417    ; 2416
LD  0   1            ; 2417
LDC 238              ; 2418
CEQ                  ; 2419
TSEL    5899 2421    ; 2420
LD  0   1            ; 2421
LDC 239              ; 2422
CEQ                  ; 2423
TSEL    5909 2425    ; 2424
LD  0   1            ; 2425
LDC 240              ; 2426
CEQ                  ; 2427
TSEL    5919 2429    ; 2428
LD  0   1            ; 2429
LDC 241              ; 2430
CEQ                  ; 2431
TSEL    5929 2433    ; 2432
LD  0   1            ; 2433
LDC 242              ; 2434
CEQ                  ; 2435
TSEL    5939 2437    ; 2436
LD  0   1            ; 2437
LDC 243              ; 2438
CEQ                  ; 2439
TSEL    5949 2441    ; 2440
LD  0   1            ; 2441
LDC 244              ; 2442
CEQ                  ; 2443
TSEL    5959 2445    ; 2444
LD  0   1            ; 2445
LDC 245              ; 2446
CEQ                  ; 2447
TSEL    5969 2449    ; 2448
LD  0   1            ; 2449
LDC 246              ; 2450
CEQ                  ; 2451
TSEL    5979 2453    ; 2452
LD  0   1            ; 2453
LDC 247              ; 2454
CEQ                  ; 2455
TSEL    5989 2457    ; 2456
LD  0   1            ; 2457
LDC 248              ; 2458
CEQ                  ; 2459
TSEL    5999 2461    ; 2460
LD  0   1            ; 2461
LDC 249              ; 2462
CEQ                  ; 2463
TSEL    6009 2465    ; 2464
LD  0   1            ; 2465
LDC 250              ; 2466
CEQ                  ; 2467
TSEL    6019 2469    ; 2468
LD  0   1            ; 2469
LDC 251              ; 2470
CEQ                  ; 2471
TSEL    6029 2473    ; 2472
LD  0   1            ; 2473
LDC 252              ; 2474
CEQ                  ; 2475
TSEL    6039 2477    ; 2476
LD  0   1            ; 2477
LDC 253              ; 2478
CEQ                  ; 2479
TSEL    6049 2481    ; 2480
LD  0   1            ; 2481
LDC 254              ; 2482
CEQ                  ; 2483
TSEL    6059 2485    ; 2484
LD  0   1            ; 2485
LDC 255              ; 2486
CEQ                  ; 2487
TSEL    6069 2489    ; 2488
LDC  0               ; 2489
RTN                  ; 2490
LD  0   1            ; 2491
LDC 0                ; 2492
CEQ                  ; 2493
TSEL    3525 2495    ; 2494
LD  0   1            ; 2495
LDC 1                ; 2496
CEQ                  ; 2497
TSEL    3535 2499    ; 2498
LD  0   1            ; 2499
LDC 2                ; 2500
CEQ                  ; 2501
TSEL    3545 2503    ; 2502
LD  0   1            ; 2503
LDC 3                ; 2504
CEQ                  ; 2505
TSEL    3555 2507    ; 2506
LD  0   1            ; 2507
LDC 4                ; 2508
CEQ                  ; 2509
TSEL    3565 2511    ; 2510
LD  0   1            ; 2511
LDC 5                ; 2512
CEQ                  ; 2513
TSEL    3575 2515    ; 2514
LD  0   1            ; 2515
LDC 6                ; 2516
CEQ                  ; 2517
TSEL    3585 2519    ; 2518
LD  0   1            ; 2519
LDC 7                ; 2520
CEQ                  ; 2521
TSEL    3595 2523    ; 2522
LD  0   1            ; 2523
LDC 8                ; 2524
CEQ                  ; 2525
TSEL    3605 2527    ; 2526
LD  0   1            ; 2527
LDC 9                ; 2528
CEQ                  ; 2529
TSEL    3615 2531    ; 2530
LD  0   1            ; 2531
LDC 10               ; 2532
CEQ                  ; 2533
TSEL    3625 2535    ; 2534
LD  0   1            ; 2535
LDC 11               ; 2536
CEQ                  ; 2537
TSEL    3635 2539    ; 2538
LD  0   1            ; 2539
LDC 12               ; 2540
CEQ                  ; 2541
TSEL    3645 2543    ; 2542
LD  0   1            ; 2543
LDC 13               ; 2544
CEQ                  ; 2545
TSEL    3655 2547    ; 2546
LD  0   1            ; 2547
LDC 14               ; 2548
CEQ                  ; 2549
TSEL    3665 2551    ; 2550
LD  0   1            ; 2551
LDC 15               ; 2552
CEQ                  ; 2553
TSEL    3675 2555    ; 2554
LD  0   1            ; 2555
LDC 16               ; 2556
CEQ                  ; 2557
TSEL    3685 2559    ; 2558
LD  0   1            ; 2559
LDC 17               ; 2560
CEQ                  ; 2561
TSEL    3695 2563    ; 2562
LD  0   1            ; 2563
LDC 18               ; 2564
CEQ                  ; 2565
TSEL    3705 2567    ; 2566
LD  0   1            ; 2567
LDC 19               ; 2568
CEQ                  ; 2569
TSEL    3715 2571    ; 2570
LD  0   1            ; 2571
LDC 20               ; 2572
CEQ                  ; 2573
TSEL    3725 2575    ; 2574
LD  0   1            ; 2575
LDC 21               ; 2576
CEQ                  ; 2577
TSEL    3735 2579    ; 2578
LD  0   1            ; 2579
LDC 22               ; 2580
CEQ                  ; 2581
TSEL    3745 2583    ; 2582
LD  0   1            ; 2583
LDC 23               ; 2584
CEQ                  ; 2585
TSEL    3755 2587    ; 2586
LD  0   1            ; 2587
LDC 24               ; 2588
CEQ                  ; 2589
TSEL    3765 2591    ; 2590
LD  0   1            ; 2591
LDC 25               ; 2592
CEQ                  ; 2593
TSEL    3775 2595    ; 2594
LD  0   1            ; 2595
LDC 26               ; 2596
CEQ                  ; 2597
TSEL    3785 2599    ; 2598
LD  0   1            ; 2599
LDC 27               ; 2600
CEQ                  ; 2601
TSEL    3795 2603    ; 2602
LD  0   1            ; 2603
LDC 28               ; 2604
CEQ                  ; 2605
TSEL    3805 2607    ; 2606
LD  0   1            ; 2607
LDC 29               ; 2608
CEQ                  ; 2609
TSEL    3815 2611    ; 2610
LD  0   1            ; 2611
LDC 30               ; 2612
CEQ                  ; 2613
TSEL    3825 2615    ; 2614
LD  0   1            ; 2615
LDC 31               ; 2616
CEQ                  ; 2617
TSEL    3835 2619    ; 2618
LD  0   1            ; 2619
LDC 32               ; 2620
CEQ                  ; 2621
TSEL    3845 2623    ; 2622
LD  0   1            ; 2623
LDC 33               ; 2624
CEQ                  ; 2625
TSEL    3855 2627    ; 2626
LD  0   1            ; 2627
LDC 34               ; 2628
CEQ                  ; 2629
TSEL    3865 2631    ; 2630
LD  0   1            ; 2631
LDC 35               ; 2632
CEQ                  ; 2633
TSEL    3875 2635    ; 2634
LD  0   1            ; 2635
LDC 36               ; 2636
CEQ                  ; 2637
TSEL    3885 2639    ; 2638
LD  0   1            ; 2639
LDC 37               ; 2640
CEQ                  ; 2641
TSEL    3895 2643    ; 2642
LD  0   1            ; 2643
LDC 38               ; 2644
CEQ                  ; 2645
TSEL    3905 2647    ; 2646
LD  0   1            ; 2647
LDC 39               ; 2648
CEQ                  ; 2649
TSEL    3915 2651    ; 2650
LD  0   1            ; 2651
LDC 40               ; 2652
CEQ                  ; 2653
TSEL    3925 2655    ; 2654
LD  0   1            ; 2655
LDC 41               ; 2656
CEQ                  ; 2657
TSEL    3935 2659    ; 2658
LD  0   1            ; 2659
LDC 42               ; 2660
CEQ                  ; 2661
TSEL    3945 2663    ; 2662
LD  0   1            ; 2663
LDC 43               ; 2664
CEQ                  ; 2665
TSEL    3955 2667    ; 2666
LD  0   1            ; 2667
LDC 44               ; 2668
CEQ                  ; 2669
TSEL    3965 2671    ; 2670
LD  0   1            ; 2671
LDC 45               ; 2672
CEQ                  ; 2673
TSEL    3975 2675    ; 2674
LD  0   1            ; 2675
LDC 46               ; 2676
CEQ                  ; 2677
TSEL    3985 2679    ; 2678
LD  0   1            ; 2679
LDC 47               ; 2680
CEQ                  ; 2681
TSEL    3995 2683    ; 2682
LD  0   1            ; 2683
LDC 48               ; 2684
CEQ                  ; 2685
TSEL    4005 2687    ; 2686
LD  0   1            ; 2687
LDC 49               ; 2688
CEQ                  ; 2689
TSEL    4015 2691    ; 2690
LD  0   1            ; 2691
LDC 50               ; 2692
CEQ                  ; 2693
TSEL    4025 2695    ; 2694
LD  0   1            ; 2695
LDC 51               ; 2696
CEQ                  ; 2697
TSEL    4035 2699    ; 2698
LD  0   1            ; 2699
LDC 52               ; 2700
CEQ                  ; 2701
TSEL    4045 2703    ; 2702
LD  0   1            ; 2703
LDC 53               ; 2704
CEQ                  ; 2705
TSEL    4055 2707    ; 2706
LD  0   1            ; 2707
LDC 54               ; 2708
CEQ                  ; 2709
TSEL    4065 2711    ; 2710
LD  0   1            ; 2711
LDC 55               ; 2712
CEQ                  ; 2713
TSEL    4075 2715    ; 2714
LD  0   1            ; 2715
LDC 56               ; 2716
CEQ                  ; 2717
TSEL    4085 2719    ; 2718
LD  0   1            ; 2719
LDC 57               ; 2720
CEQ                  ; 2721
TSEL    4095 2723    ; 2722
LD  0   1            ; 2723
LDC 58               ; 2724
CEQ                  ; 2725
TSEL    4105 2727    ; 2726
LD  0   1            ; 2727
LDC 59               ; 2728
CEQ                  ; 2729
TSEL    4115 2731    ; 2730
LD  0   1            ; 2731
LDC 60               ; 2732
CEQ                  ; 2733
TSEL    4125 2735    ; 2734
LD  0   1            ; 2735
LDC 61               ; 2736
CEQ                  ; 2737
TSEL    4135 2739    ; 2738
LD  0   1            ; 2739
LDC 62               ; 2740
CEQ                  ; 2741
TSEL    4145 2743    ; 2742
LD  0   1            ; 2743
LDC 63               ; 2744
CEQ                  ; 2745
TSEL    4155 2747    ; 2746
LD  0   1            ; 2747
LDC 64               ; 2748
CEQ                  ; 2749
TSEL    4165 2751    ; 2750
LD  0   1            ; 2751
LDC 65               ; 2752
CEQ                  ; 2753
TSEL    4175 2755    ; 2754
LD  0   1            ; 2755
LDC 66               ; 2756
CEQ                  ; 2757
TSEL    4185 2759    ; 2758
LD  0   1            ; 2759
LDC 67               ; 2760
CEQ                  ; 2761
TSEL    4195 2763    ; 2762
LD  0   1            ; 2763
LDC 68               ; 2764
CEQ                  ; 2765
TSEL    4205 2767    ; 2766
LD  0   1            ; 2767
LDC 69               ; 2768
CEQ                  ; 2769
TSEL    4215 2771    ; 2770
LD  0   1            ; 2771
LDC 70               ; 2772
CEQ                  ; 2773
TSEL    4225 2775    ; 2774
LD  0   1            ; 2775
LDC 71               ; 2776
CEQ                  ; 2777
TSEL    4235 2779    ; 2778
LD  0   1            ; 2779
LDC 72               ; 2780
CEQ                  ; 2781
TSEL    4245 2783    ; 2782
LD  0   1            ; 2783
LDC 73               ; 2784
CEQ                  ; 2785
TSEL    4255 2787    ; 2786
LD  0   1            ; 2787
LDC 74               ; 2788
CEQ                  ; 2789
TSEL    4265 2791    ; 2790
LD  0   1            ; 2791
LDC 75               ; 2792
CEQ                  ; 2793
TSEL    4275 2795    ; 2794
LD  0   1            ; 2795
LDC 76               ; 2796
CEQ                  ; 2797
TSEL    4285 2799    ; 2798
LD  0   1            ; 2799
LDC 77               ; 2800
CEQ                  ; 2801
TSEL    4295 2803    ; 2802
LD  0   1            ; 2803
LDC 78               ; 2804
CEQ                  ; 2805
TSEL    4305 2807    ; 2806
LD  0   1            ; 2807
LDC 79               ; 2808
CEQ                  ; 2809
TSEL    4315 2811    ; 2810
LD  0   1            ; 2811
LDC 80               ; 2812
CEQ                  ; 2813
TSEL    4325 2815    ; 2814
LD  0   1            ; 2815
LDC 81               ; 2816
CEQ                  ; 2817
TSEL    4335 2819    ; 2818
LD  0   1            ; 2819
LDC 82               ; 2820
CEQ                  ; 2821
TSEL    4345 2823    ; 2822
LD  0   1            ; 2823
LDC 83               ; 2824
CEQ                  ; 2825
TSEL    4355 2827    ; 2826
LD  0   1            ; 2827
LDC 84               ; 2828
CEQ                  ; 2829
TSEL    4365 2831    ; 2830
LD  0   1            ; 2831
LDC 85               ; 2832
CEQ                  ; 2833
TSEL    4375 2835    ; 2834
LD  0   1            ; 2835
LDC 86               ; 2836
CEQ                  ; 2837
TSEL    4385 2839    ; 2838
LD  0   1            ; 2839
LDC 87               ; 2840
CEQ                  ; 2841
TSEL    4395 2843    ; 2842
LD  0   1            ; 2843
LDC 88               ; 2844
CEQ                  ; 2845
TSEL    4405 2847    ; 2846
LD  0   1            ; 2847
LDC 89               ; 2848
CEQ                  ; 2849
TSEL    4415 2851    ; 2850
LD  0   1            ; 2851
LDC 90               ; 2852
CEQ                  ; 2853
TSEL    4425 2855    ; 2854
LD  0   1            ; 2855
LDC 91               ; 2856
CEQ                  ; 2857
TSEL    4435 2859    ; 2858
LD  0   1            ; 2859
LDC 92               ; 2860
CEQ                  ; 2861
TSEL    4445 2863    ; 2862
LD  0   1            ; 2863
LDC 93               ; 2864
CEQ                  ; 2865
TSEL    4455 2867    ; 2866
LD  0   1            ; 2867
LDC 94               ; 2868
CEQ                  ; 2869
TSEL    4465 2871    ; 2870
LD  0   1            ; 2871
LDC 95               ; 2872
CEQ                  ; 2873
TSEL    4475 2875    ; 2874
LD  0   1            ; 2875
LDC 96               ; 2876
CEQ                  ; 2877
TSEL    4485 2879    ; 2878
LD  0   1            ; 2879
LDC 97               ; 2880
CEQ                  ; 2881
TSEL    4495 2883    ; 2882
LD  0   1            ; 2883
LDC 98               ; 2884
CEQ                  ; 2885
TSEL    4505 2887    ; 2886
LD  0   1            ; 2887
LDC 99               ; 2888
CEQ                  ; 2889
TSEL    4515 2891    ; 2890
LD  0   1            ; 2891
LDC 100              ; 2892
CEQ                  ; 2893
TSEL    4525 2895    ; 2894
LD  0   1            ; 2895
LDC 101              ; 2896
CEQ                  ; 2897
TSEL    4535 2899    ; 2898
LD  0   1            ; 2899
LDC 102              ; 2900
CEQ                  ; 2901
TSEL    4545 2903    ; 2902
LD  0   1            ; 2903
LDC 103              ; 2904
CEQ                  ; 2905
TSEL    4555 2907    ; 2906
LD  0   1            ; 2907
LDC 104              ; 2908
CEQ                  ; 2909
TSEL    4565 2911    ; 2910
LD  0   1            ; 2911
LDC 105              ; 2912
CEQ                  ; 2913
TSEL    4575 2915    ; 2914
LD  0   1            ; 2915
LDC 106              ; 2916
CEQ                  ; 2917
TSEL    4585 2919    ; 2918
LD  0   1            ; 2919
LDC 107              ; 2920
CEQ                  ; 2921
TSEL    4595 2923    ; 2922
LD  0   1            ; 2923
LDC 108              ; 2924
CEQ                  ; 2925
TSEL    4605 2927    ; 2926
LD  0   1            ; 2927
LDC 109              ; 2928
CEQ                  ; 2929
TSEL    4615 2931    ; 2930
LD  0   1            ; 2931
LDC 110              ; 2932
CEQ                  ; 2933
TSEL    4625 2935    ; 2934
LD  0   1            ; 2935
LDC 111              ; 2936
CEQ                  ; 2937
TSEL    4635 2939    ; 2938
LD  0   1            ; 2939
LDC 112              ; 2940
CEQ                  ; 2941
TSEL    4645 2943    ; 2942
LD  0   1            ; 2943
LDC 113              ; 2944
CEQ                  ; 2945
TSEL    4655 2947    ; 2946
LD  0   1            ; 2947
LDC 114              ; 2948
CEQ                  ; 2949
TSEL    4665 2951    ; 2950
LD  0   1            ; 2951
LDC 115              ; 2952
CEQ                  ; 2953
TSEL    4675 2955    ; 2954
LD  0   1            ; 2955
LDC 116              ; 2956
CEQ                  ; 2957
TSEL    4685 2959    ; 2958
LD  0   1            ; 2959
LDC 117              ; 2960
CEQ                  ; 2961
TSEL    4695 2963    ; 2962
LD  0   1            ; 2963
LDC 118              ; 2964
CEQ                  ; 2965
TSEL    4705 2967    ; 2966
LD  0   1            ; 2967
LDC 119              ; 2968
CEQ                  ; 2969
TSEL    4715 2971    ; 2970
LD  0   1            ; 2971
LDC 120              ; 2972
CEQ                  ; 2973
TSEL    4725 2975    ; 2974
LD  0   1            ; 2975
LDC 121              ; 2976
CEQ                  ; 2977
TSEL    4735 2979    ; 2978
LD  0   1            ; 2979
LDC 122              ; 2980
CEQ                  ; 2981
TSEL    4745 2983    ; 2982
LD  0   1            ; 2983
LDC 123              ; 2984
CEQ                  ; 2985
TSEL    4755 2987    ; 2986
LD  0   1            ; 2987
LDC 124              ; 2988
CEQ                  ; 2989
TSEL    4765 2991    ; 2990
LD  0   1            ; 2991
LDC 125              ; 2992
CEQ                  ; 2993
TSEL    4775 2995    ; 2994
LD  0   1            ; 2995
LDC 126              ; 2996
CEQ                  ; 2997
TSEL    4785 2999    ; 2998
LD  0   1            ; 2999
LDC 127              ; 3000
CEQ                  ; 3001
TSEL    4795 3003    ; 3002
LD  0   1            ; 3003
LDC 128              ; 3004
CEQ                  ; 3005
TSEL    4805 3007    ; 3006
LD  0   1            ; 3007
LDC 129              ; 3008
CEQ                  ; 3009
TSEL    4815 3011    ; 3010
LD  0   1            ; 3011
LDC 130              ; 3012
CEQ                  ; 3013
TSEL    4825 3015    ; 3014
LD  0   1            ; 3015
LDC 131              ; 3016
CEQ                  ; 3017
TSEL    4835 3019    ; 3018
LD  0   1            ; 3019
LDC 132              ; 3020
CEQ                  ; 3021
TSEL    4845 3023    ; 3022
LD  0   1            ; 3023
LDC 133              ; 3024
CEQ                  ; 3025
TSEL    4855 3027    ; 3026
LD  0   1            ; 3027
LDC 134              ; 3028
CEQ                  ; 3029
TSEL    4865 3031    ; 3030
LD  0   1            ; 3031
LDC 135              ; 3032
CEQ                  ; 3033
TSEL    4875 3035    ; 3034
LD  0   1            ; 3035
LDC 136              ; 3036
CEQ                  ; 3037
TSEL    4885 3039    ; 3038
LD  0   1            ; 3039
LDC 137              ; 3040
CEQ                  ; 3041
TSEL    4895 3043    ; 3042
LD  0   1            ; 3043
LDC 138              ; 3044
CEQ                  ; 3045
TSEL    4905 3047    ; 3046
LD  0   1            ; 3047
LDC 139              ; 3048
CEQ                  ; 3049
TSEL    4915 3051    ; 3050
LD  0   1            ; 3051
LDC 140              ; 3052
CEQ                  ; 3053
TSEL    4925 3055    ; 3054
LD  0   1            ; 3055
LDC 141              ; 3056
CEQ                  ; 3057
TSEL    4935 3059    ; 3058
LD  0   1            ; 3059
LDC 142              ; 3060
CEQ                  ; 3061
TSEL    4945 3063    ; 3062
LD  0   1            ; 3063
LDC 143              ; 3064
CEQ                  ; 3065
TSEL    4955 3067    ; 3066
LD  0   1            ; 3067
LDC 144              ; 3068
CEQ                  ; 3069
TSEL    4965 3071    ; 3070
LD  0   1            ; 3071
LDC 145              ; 3072
CEQ                  ; 3073
TSEL    4975 3075    ; 3074
LD  0   1            ; 3075
LDC 146              ; 3076
CEQ                  ; 3077
TSEL    4985 3079    ; 3078
LD  0   1            ; 3079
LDC 147              ; 3080
CEQ                  ; 3081
TSEL    4995 3083    ; 3082
LD  0   1            ; 3083
LDC 148              ; 3084
CEQ                  ; 3085
TSEL    5005 3087    ; 3086
LD  0   1            ; 3087
LDC 149              ; 3088
CEQ                  ; 3089
TSEL    5015 3091    ; 3090
LD  0   1            ; 3091
LDC 150              ; 3092
CEQ                  ; 3093
TSEL    5025 3095    ; 3094
LD  0   1            ; 3095
LDC 151              ; 3096
CEQ                  ; 3097
TSEL    5035 3099    ; 3098
LD  0   1            ; 3099
LDC 152              ; 3100
CEQ                  ; 3101
TSEL    5045 3103    ; 3102
LD  0   1            ; 3103
LDC 153              ; 3104
CEQ                  ; 3105
TSEL    5055 3107    ; 3106
LD  0   1            ; 3107
LDC 154              ; 3108
CEQ                  ; 3109
TSEL    5065 3111    ; 3110
LD  0   1            ; 3111
LDC 155              ; 3112
CEQ                  ; 3113
TSEL    5075 3115    ; 3114
LD  0   1            ; 3115
LDC 156              ; 3116
CEQ                  ; 3117
TSEL    5085 3119    ; 3118
LD  0   1            ; 3119
LDC 157              ; 3120
CEQ                  ; 3121
TSEL    5095 3123    ; 3122
LD  0   1            ; 3123
LDC 158              ; 3124
CEQ                  ; 3125
TSEL    5105 3127    ; 3126
LD  0   1            ; 3127
LDC 159              ; 3128
CEQ                  ; 3129
TSEL    5115 3131    ; 3130
LD  0   1            ; 3131
LDC 160              ; 3132
CEQ                  ; 3133
TSEL    5125 3135    ; 3134
LD  0   1            ; 3135
LDC 161              ; 3136
CEQ                  ; 3137
TSEL    5135 3139    ; 3138
LD  0   1            ; 3139
LDC 162              ; 3140
CEQ                  ; 3141
TSEL    5145 3143    ; 3142
LD  0   1            ; 3143
LDC 163              ; 3144
CEQ                  ; 3145
TSEL    5155 3147    ; 3146
LD  0   1            ; 3147
LDC 164              ; 3148
CEQ                  ; 3149
TSEL    5165 3151    ; 3150
LD  0   1            ; 3151
LDC 165              ; 3152
CEQ                  ; 3153
TSEL    5175 3155    ; 3154
LD  0   1            ; 3155
LDC 166              ; 3156
CEQ                  ; 3157
TSEL    5185 3159    ; 3158
LD  0   1            ; 3159
LDC 167              ; 3160
CEQ                  ; 3161
TSEL    5195 3163    ; 3162
LD  0   1            ; 3163
LDC 168              ; 3164
CEQ                  ; 3165
TSEL    5205 3167    ; 3166
LD  0   1            ; 3167
LDC 169              ; 3168
CEQ                  ; 3169
TSEL    5215 3171    ; 3170
LD  0   1            ; 3171
LDC 170              ; 3172
CEQ                  ; 3173
TSEL    5225 3175    ; 3174
LD  0   1            ; 3175
LDC 171              ; 3176
CEQ                  ; 3177
TSEL    5235 3179    ; 3178
LD  0   1            ; 3179
LDC 172              ; 3180
CEQ                  ; 3181
TSEL    5245 3183    ; 3182
LD  0   1            ; 3183
LDC 173              ; 3184
CEQ                  ; 3185
TSEL    5255 3187    ; 3186
LD  0   1            ; 3187
LDC 174              ; 3188
CEQ                  ; 3189
TSEL    5265 3191    ; 3190
LD  0   1            ; 3191
LDC 175              ; 3192
CEQ                  ; 3193
TSEL    5275 3195    ; 3194
LD  0   1            ; 3195
LDC 176              ; 3196
CEQ                  ; 3197
TSEL    5285 3199    ; 3198
LD  0   1            ; 3199
LDC 177              ; 3200
CEQ                  ; 3201
TSEL    5295 3203    ; 3202
LD  0   1            ; 3203
LDC 178              ; 3204
CEQ                  ; 3205
TSEL    5305 3207    ; 3206
LD  0   1            ; 3207
LDC 179              ; 3208
CEQ                  ; 3209
TSEL    5315 3211    ; 3210
LD  0   1            ; 3211
LDC 180              ; 3212
CEQ                  ; 3213
TSEL    5325 3215    ; 3214
LD  0   1            ; 3215
LDC 181              ; 3216
CEQ                  ; 3217
TSEL    5335 3219    ; 3218
LD  0   1            ; 3219
LDC 182              ; 3220
CEQ                  ; 3221
TSEL    5345 3223    ; 3222
LD  0   1            ; 3223
LDC 183              ; 3224
CEQ                  ; 3225
TSEL    5355 3227    ; 3226
LD  0   1            ; 3227
LDC 184              ; 3228
CEQ                  ; 3229
TSEL    5365 3231    ; 3230
LD  0   1            ; 3231
LDC 185              ; 3232
CEQ                  ; 3233
TSEL    5375 3235    ; 3234
LD  0   1            ; 3235
LDC 186              ; 3236
CEQ                  ; 3237
TSEL    5385 3239    ; 3238
LD  0   1            ; 3239
LDC 187              ; 3240
CEQ                  ; 3241
TSEL    5395 3243    ; 3242
LD  0   1            ; 3243
LDC 188              ; 3244
CEQ                  ; 3245
TSEL    5405 3247    ; 3246
LD  0   1            ; 3247
LDC 189              ; 3248
CEQ                  ; 3249
TSEL    5415 3251    ; 3250
LD  0   1            ; 3251
LDC 190              ; 3252
CEQ                  ; 3253
TSEL    5425 3255    ; 3254
LD  0   1            ; 3255
LDC 191              ; 3256
CEQ                  ; 3257
TSEL    5435 3259    ; 3258
LD  0   1            ; 3259
LDC 192              ; 3260
CEQ                  ; 3261
TSEL    5445 3263    ; 3262
LD  0   1            ; 3263
LDC 193              ; 3264
CEQ                  ; 3265
TSEL    5455 3267    ; 3266
LD  0   1            ; 3267
LDC 194              ; 3268
CEQ                  ; 3269
TSEL    5465 3271    ; 3270
LD  0   1            ; 3271
LDC 195              ; 3272
CEQ                  ; 3273
TSEL    5475 3275    ; 3274
LD  0   1            ; 3275
LDC 196              ; 3276
CEQ                  ; 3277
TSEL    5485 3279    ; 3278
LD  0   1            ; 3279
LDC 197              ; 3280
CEQ                  ; 3281
TSEL    5495 3283    ; 3282
LD  0   1            ; 3283
LDC 198              ; 3284
CEQ                  ; 3285
TSEL    5505 3287    ; 3286
LD  0   1            ; 3287
LDC 199              ; 3288
CEQ                  ; 3289
TSEL    5515 3291    ; 3290
LD  0   1            ; 3291
LDC 200              ; 3292
CEQ                  ; 3293
TSEL    5525 3295    ; 3294
LD  0   1            ; 3295
LDC 201              ; 3296
CEQ                  ; 3297
TSEL    5535 3299    ; 3298
LD  0   1            ; 3299
LDC 202              ; 3300
CEQ                  ; 3301
TSEL    5545 3303    ; 3302
LD  0   1            ; 3303
LDC 203              ; 3304
CEQ                  ; 3305
TSEL    5555 3307    ; 3306
LD  0   1            ; 3307
LDC 204              ; 3308
CEQ                  ; 3309
TSEL    5565 3311    ; 3310
LD  0   1            ; 3311
LDC 205              ; 3312
CEQ                  ; 3313
TSEL    5575 3315    ; 3314
LD  0   1            ; 3315
LDC 206              ; 3316
CEQ                  ; 3317
TSEL    5585 3319    ; 3318
LD  0   1            ; 3319
LDC 207              ; 3320
CEQ                  ; 3321
TSEL    5595 3323    ; 3322
LD  0   1            ; 3323
LDC 208              ; 3324
CEQ                  ; 3325
TSEL    5605 3327    ; 3326
LD  0   1            ; 3327
LDC 209              ; 3328
CEQ                  ; 3329
TSEL    5615 3331    ; 3330
LD  0   1            ; 3331
LDC 210              ; 3332
CEQ                  ; 3333
TSEL    5625 3335    ; 3334
LD  0   1            ; 3335
LDC 211              ; 3336
CEQ                  ; 3337
TSEL    5635 3339    ; 3338
LD  0   1            ; 3339
LDC 212              ; 3340
CEQ                  ; 3341
TSEL    5645 3343    ; 3342
LD  0   1            ; 3343
LDC 213              ; 3344
CEQ                  ; 3345
TSEL    5655 3347    ; 3346
LD  0   1            ; 3347
LDC 214              ; 3348
CEQ                  ; 3349
TSEL    5665 3351    ; 3350
LD  0   1            ; 3351
LDC 215              ; 3352
CEQ                  ; 3353
TSEL    5675 3355    ; 3354
LD  0   1            ; 3355
LDC 216              ; 3356
CEQ                  ; 3357
TSEL    5685 3359    ; 3358
LD  0   1            ; 3359
LDC 217              ; 3360
CEQ                  ; 3361
TSEL    5695 3363    ; 3362
LD  0   1            ; 3363
LDC 218              ; 3364
CEQ                  ; 3365
TSEL    5705 3367    ; 3366
LD  0   1            ; 3367
LDC 219              ; 3368
CEQ                  ; 3369
TSEL    5715 3371    ; 3370
LD  0   1            ; 3371
LDC 220              ; 3372
CEQ                  ; 3373
TSEL    5725 3375    ; 3374
LD  0   1            ; 3375
LDC 221              ; 3376
CEQ                  ; 3377
TSEL    5735 3379    ; 3378
LD  0   1            ; 3379
LDC 222              ; 3380
CEQ                  ; 3381
TSEL    5745 3383    ; 3382
LD  0   1            ; 3383
LDC 223              ; 3384
CEQ                  ; 3385
TSEL    5755 3387    ; 3386
LD  0   1            ; 3387
LDC 224              ; 3388
CEQ                  ; 3389
TSEL    5765 3391    ; 3390
LD  0   1            ; 3391
LDC 225              ; 3392
CEQ                  ; 3393
TSEL    5775 3395    ; 3394
LD  0   1            ; 3395
LDC 226              ; 3396
CEQ                  ; 3397
TSEL    5785 3399    ; 3398
LD  0   1            ; 3399
LDC 227              ; 3400
CEQ                  ; 3401
TSEL    5795 3403    ; 3402
LD  0   1            ; 3403
LDC 228              ; 3404
CEQ                  ; 3405
TSEL    5805 3407    ; 3406
LD  0   1            ; 3407
LDC 229              ; 3408
CEQ                  ; 3409
TSEL    5815 3411    ; 3410
LD  0   1            ; 3411
LDC 230              ; 3412
CEQ                  ; 3413
TSEL    5825 3415    ; 3414
LD  0   1            ; 3415
LDC 231              ; 3416
CEQ                  ; 3417
TSEL    5835 3419    ; 3418
LD  0   1            ; 3419
LDC 232              ; 3420
CEQ                  ; 3421
TSEL    5845 3423    ; 3422
LD  0   1            ; 3423
LDC 233              ; 3424
CEQ                  ; 3425
TSEL    5855 3427    ; 3426
LD  0   1            ; 3427
LDC 234              ; 3428
CEQ                  ; 3429
TSEL    5865 3431    ; 3430
LD  0   1            ; 3431
LDC 235              ; 3432
CEQ                  ; 3433
TSEL    5875 3435    ; 3434
LD  0   1            ; 3435
LDC 236              ; 3436
CEQ                  ; 3437
TSEL    5885 3439    ; 3438
LD  0   1            ; 3439
LDC 237              ; 3440
CEQ                  ; 3441
TSEL    5895 3443    ; 3442
LD  0   1            ; 3443
LDC 238              ; 3444
CEQ                  ; 3445
TSEL    5905 3447    ; 3446
LD  0   1            ; 3447
LDC 239              ; 3448
CEQ                  ; 3449
TSEL    5915 3451    ; 3450
LD  0   1            ; 3451
LDC 240              ; 3452
CEQ                  ; 3453
TSEL    5925 3455    ; 3454
LD  0   1            ; 3455
LDC 241              ; 3456
CEQ                  ; 3457
TSEL    5935 3459    ; 3458
LD  0   1            ; 3459
LDC 242              ; 3460
CEQ                  ; 3461
TSEL    5945 3463    ; 3462
LD  0   1            ; 3463
LDC 243              ; 3464
CEQ                  ; 3465
TSEL    5955 3467    ; 3466
LD  0   1            ; 3467
LDC 244              ; 3468
CEQ                  ; 3469
TSEL    5965 3471    ; 3470
LD  0   1            ; 3471
LDC 245              ; 3472
CEQ                  ; 3473
TSEL    5975 3475    ; 3474
LD  0   1            ; 3475
LDC 246              ; 3476
CEQ                  ; 3477
TSEL    5985 3479    ; 3478
LD  0   1            ; 3479
LDC 247              ; 3480
CEQ                  ; 3481
TSEL    5995 3483    ; 3482
LD  0   1            ; 3483
LDC 248              ; 3484
CEQ                  ; 3485
TSEL    6005 3487    ; 3486
LD  0   1            ; 3487
LDC 249              ; 3488
CEQ                  ; 3489
TSEL    6015 3491    ; 3490
LD  0   1            ; 3491
LDC 250              ; 3492
CEQ                  ; 3493
TSEL    6025 3495    ; 3494
LD  0   1            ; 3495
LDC 251              ; 3496
CEQ                  ; 3497
TSEL    6035 3499    ; 3498
LD  0   1            ; 3499
LDC 252              ; 3500
CEQ                  ; 3501
TSEL    6045 3503    ; 3502
LD  0   1            ; 3503
LDC 253              ; 3504
CEQ                  ; 3505
TSEL    6055 3507    ; 3506
LD  0   1            ; 3507
LDC 254              ; 3508
CEQ                  ; 3509
TSEL    6065 3511    ; 3510
LD  0   1            ; 3511
LDC 255              ; 3512
CEQ                  ; 3513
TSEL    6075 3515    ; 3514
LDC  0               ; 3515
RTN                  ; 3516
LD  2   0            ; 3517
RTN                  ; 3518
LDF 3517             ; 3519
RTN                  ; 3520
LD  2   0            ; 3521
LD  0   0            ; 3522
ST  2   0            ; 3523
RTN                  ; 3524
LDF 3521             ; 3525
RTN                  ; 3526
LD  2   1            ; 3527
RTN                  ; 3528
LDF 3527             ; 3529
RTN                  ; 3530
LD  2   1            ; 3531
LD  0   0            ; 3532
ST  2   1            ; 3533
RTN                  ; 3534
LDF 3531             ; 3535
RTN                  ; 3536
LD  2   2            ; 3537
RTN                  ; 3538
LDF 3537             ; 3539
RTN                  ; 3540
LD  2   2            ; 3541
LD  0   0            ; 3542
ST  2   2            ; 3543
RTN                  ; 3544
LDF 3541             ; 3545
RTN                  ; 3546
LD  2   3            ; 3547
RTN                  ; 3548
LDF 3547             ; 3549
RTN                  ; 3550
LD  2   3            ; 3551
LD  0   0            ; 3552
ST  2   3            ; 3553
RTN                  ; 3554
LDF 3551             ; 3555
RTN                  ; 3556
LD  2   4            ; 3557
RTN                  ; 3558
LDF 3557             ; 3559
RTN                  ; 3560
LD  2   4            ; 3561
LD  0   0            ; 3562
ST  2   4            ; 3563
RTN                  ; 3564
LDF 3561             ; 3565
RTN                  ; 3566
LD  2   5            ; 3567
RTN                  ; 3568
LDF 3567             ; 3569
RTN                  ; 3570
LD  2   5            ; 3571
LD  0   0            ; 3572
ST  2   5            ; 3573
RTN                  ; 3574
LDF 3571             ; 3575
RTN                  ; 3576
LD  2   6            ; 3577
RTN                  ; 3578
LDF 3577             ; 3579
RTN                  ; 3580
LD  2   6            ; 3581
LD  0   0            ; 3582
ST  2   6            ; 3583
RTN                  ; 3584
LDF 3581             ; 3585
RTN                  ; 3586
LD  2   7            ; 3587
RTN                  ; 3588
LDF 3587             ; 3589
RTN                  ; 3590
LD  2   7            ; 3591
LD  0   0            ; 3592
ST  2   7            ; 3593
RTN                  ; 3594
LDF 3591             ; 3595
RTN                  ; 3596
LD  2   8            ; 3597
RTN                  ; 3598
LDF 3597             ; 3599
RTN                  ; 3600
LD  2   8            ; 3601
LD  0   0            ; 3602
ST  2   8            ; 3603
RTN                  ; 3604
LDF 3601             ; 3605
RTN                  ; 3606
LD  2   9            ; 3607
RTN                  ; 3608
LDF 3607             ; 3609
RTN                  ; 3610
LD  2   9            ; 3611
LD  0   0            ; 3612
ST  2   9            ; 3613
RTN                  ; 3614
LDF 3611             ; 3615
RTN                  ; 3616
LD  2   10           ; 3617
RTN                  ; 3618
LDF 3617             ; 3619
RTN                  ; 3620
LD  2   10           ; 3621
LD  0   0            ; 3622
ST  2   10           ; 3623
RTN                  ; 3624
LDF 3621             ; 3625
RTN                  ; 3626
LD  2   11           ; 3627
RTN                  ; 3628
LDF 3627             ; 3629
RTN                  ; 3630
LD  2   11           ; 3631
LD  0   0            ; 3632
ST  2   11           ; 3633
RTN                  ; 3634
LDF 3631             ; 3635
RTN                  ; 3636
LD  2   12           ; 3637
RTN                  ; 3638
LDF 3637             ; 3639
RTN                  ; 3640
LD  2   12           ; 3641
LD  0   0            ; 3642
ST  2   12           ; 3643
RTN                  ; 3644
LDF 3641             ; 3645
RTN                  ; 3646
LD  2   13           ; 3647
RTN                  ; 3648
LDF 3647             ; 3649
RTN                  ; 3650
LD  2   13           ; 3651
LD  0   0            ; 3652
ST  2   13           ; 3653
RTN                  ; 3654
LDF 3651             ; 3655
RTN                  ; 3656
LD  2   14           ; 3657
RTN                  ; 3658
LDF 3657             ; 3659
RTN                  ; 3660
LD  2   14           ; 3661
LD  0   0            ; 3662
ST  2   14           ; 3663
RTN                  ; 3664
LDF 3661             ; 3665
RTN                  ; 3666
LD  2   15           ; 3667
RTN                  ; 3668
LDF 3667             ; 3669
RTN                  ; 3670
LD  2   15           ; 3671
LD  0   0            ; 3672
ST  2   15           ; 3673
RTN                  ; 3674
LDF 3671             ; 3675
RTN                  ; 3676
LD  2   16           ; 3677
RTN                  ; 3678
LDF 3677             ; 3679
RTN                  ; 3680
LD  2   16           ; 3681
LD  0   0            ; 3682
ST  2   16           ; 3683
RTN                  ; 3684
LDF 3681             ; 3685
RTN                  ; 3686
LD  2   17           ; 3687
RTN                  ; 3688
LDF 3687             ; 3689
RTN                  ; 3690
LD  2   17           ; 3691
LD  0   0            ; 3692
ST  2   17           ; 3693
RTN                  ; 3694
LDF 3691             ; 3695
RTN                  ; 3696
LD  2   18           ; 3697
RTN                  ; 3698
LDF 3697             ; 3699
RTN                  ; 3700
LD  2   18           ; 3701
LD  0   0            ; 3702
ST  2   18           ; 3703
RTN                  ; 3704
LDF 3701             ; 3705
RTN                  ; 3706
LD  2   19           ; 3707
RTN                  ; 3708
LDF 3707             ; 3709
RTN                  ; 3710
LD  2   19           ; 3711
LD  0   0            ; 3712
ST  2   19           ; 3713
RTN                  ; 3714
LDF 3711             ; 3715
RTN                  ; 3716
LD  2   20           ; 3717
RTN                  ; 3718
LDF 3717             ; 3719
RTN                  ; 3720
LD  2   20           ; 3721
LD  0   0            ; 3722
ST  2   20           ; 3723
RTN                  ; 3724
LDF 3721             ; 3725
RTN                  ; 3726
LD  2   21           ; 3727
RTN                  ; 3728
LDF 3727             ; 3729
RTN                  ; 3730
LD  2   21           ; 3731
LD  0   0            ; 3732
ST  2   21           ; 3733
RTN                  ; 3734
LDF 3731             ; 3735
RTN                  ; 3736
LD  2   22           ; 3737
RTN                  ; 3738
LDF 3737             ; 3739
RTN                  ; 3740
LD  2   22           ; 3741
LD  0   0            ; 3742
ST  2   22           ; 3743
RTN                  ; 3744
LDF 3741             ; 3745
RTN                  ; 3746
LD  2   23           ; 3747
RTN                  ; 3748
LDF 3747             ; 3749
RTN                  ; 3750
LD  2   23           ; 3751
LD  0   0            ; 3752
ST  2   23           ; 3753
RTN                  ; 3754
LDF 3751             ; 3755
RTN                  ; 3756
LD  2   24           ; 3757
RTN                  ; 3758
LDF 3757             ; 3759
RTN                  ; 3760
LD  2   24           ; 3761
LD  0   0            ; 3762
ST  2   24           ; 3763
RTN                  ; 3764
LDF 3761             ; 3765
RTN                  ; 3766
LD  2   25           ; 3767
RTN                  ; 3768
LDF 3767             ; 3769
RTN                  ; 3770
LD  2   25           ; 3771
LD  0   0            ; 3772
ST  2   25           ; 3773
RTN                  ; 3774
LDF 3771             ; 3775
RTN                  ; 3776
LD  2   26           ; 3777
RTN                  ; 3778
LDF 3777             ; 3779
RTN                  ; 3780
LD  2   26           ; 3781
LD  0   0            ; 3782
ST  2   26           ; 3783
RTN                  ; 3784
LDF 3781             ; 3785
RTN                  ; 3786
LD  2   27           ; 3787
RTN                  ; 3788
LDF 3787             ; 3789
RTN                  ; 3790
LD  2   27           ; 3791
LD  0   0            ; 3792
ST  2   27           ; 3793
RTN                  ; 3794
LDF 3791             ; 3795
RTN                  ; 3796
LD  2   28           ; 3797
RTN                  ; 3798
LDF 3797             ; 3799
RTN                  ; 3800
LD  2   28           ; 3801
LD  0   0            ; 3802
ST  2   28           ; 3803
RTN                  ; 3804
LDF 3801             ; 3805
RTN                  ; 3806
LD  2   29           ; 3807
RTN                  ; 3808
LDF 3807             ; 3809
RTN                  ; 3810
LD  2   29           ; 3811
LD  0   0            ; 3812
ST  2   29           ; 3813
RTN                  ; 3814
LDF 3811             ; 3815
RTN                  ; 3816
LD  2   30           ; 3817
RTN                  ; 3818
LDF 3817             ; 3819
RTN                  ; 3820
LD  2   30           ; 3821
LD  0   0            ; 3822
ST  2   30           ; 3823
RTN                  ; 3824
LDF 3821             ; 3825
RTN                  ; 3826
LD  2   31           ; 3827
RTN                  ; 3828
LDF 3827             ; 3829
RTN                  ; 3830
LD  2   31           ; 3831
LD  0   0            ; 3832
ST  2   31           ; 3833
RTN                  ; 3834
LDF 3831             ; 3835
RTN                  ; 3836
LD  2   32           ; 3837
RTN                  ; 3838
LDF 3837             ; 3839
RTN                  ; 3840
LD  2   32           ; 3841
LD  0   0            ; 3842
ST  2   32           ; 3843
RTN                  ; 3844
LDF 3841             ; 3845
RTN                  ; 3846
LD  2   33           ; 3847
RTN                  ; 3848
LDF 3847             ; 3849
RTN                  ; 3850
LD  2   33           ; 3851
LD  0   0            ; 3852
ST  2   33           ; 3853
RTN                  ; 3854
LDF 3851             ; 3855
RTN                  ; 3856
LD  2   34           ; 3857
RTN                  ; 3858
LDF 3857             ; 3859
RTN                  ; 3860
LD  2   34           ; 3861
LD  0   0            ; 3862
ST  2   34           ; 3863
RTN                  ; 3864
LDF 3861             ; 3865
RTN                  ; 3866
LD  2   35           ; 3867
RTN                  ; 3868
LDF 3867             ; 3869
RTN                  ; 3870
LD  2   35           ; 3871
LD  0   0            ; 3872
ST  2   35           ; 3873
RTN                  ; 3874
LDF 3871             ; 3875
RTN                  ; 3876
LD  2   36           ; 3877
RTN                  ; 3878
LDF 3877             ; 3879
RTN                  ; 3880
LD  2   36           ; 3881
LD  0   0            ; 3882
ST  2   36           ; 3883
RTN                  ; 3884
LDF 3881             ; 3885
RTN                  ; 3886
LD  2   37           ; 3887
RTN                  ; 3888
LDF 3887             ; 3889
RTN                  ; 3890
LD  2   37           ; 3891
LD  0   0            ; 3892
ST  2   37           ; 3893
RTN                  ; 3894
LDF 3891             ; 3895
RTN                  ; 3896
LD  2   38           ; 3897
RTN                  ; 3898
LDF 3897             ; 3899
RTN                  ; 3900
LD  2   38           ; 3901
LD  0   0            ; 3902
ST  2   38           ; 3903
RTN                  ; 3904
LDF 3901             ; 3905
RTN                  ; 3906
LD  2   39           ; 3907
RTN                  ; 3908
LDF 3907             ; 3909
RTN                  ; 3910
LD  2   39           ; 3911
LD  0   0            ; 3912
ST  2   39           ; 3913
RTN                  ; 3914
LDF 3911             ; 3915
RTN                  ; 3916
LD  2   40           ; 3917
RTN                  ; 3918
LDF 3917             ; 3919
RTN                  ; 3920
LD  2   40           ; 3921
LD  0   0            ; 3922
ST  2   40           ; 3923
RTN                  ; 3924
LDF 3921             ; 3925
RTN                  ; 3926
LD  2   41           ; 3927
RTN                  ; 3928
LDF 3927             ; 3929
RTN                  ; 3930
LD  2   41           ; 3931
LD  0   0            ; 3932
ST  2   41           ; 3933
RTN                  ; 3934
LDF 3931             ; 3935
RTN                  ; 3936
LD  2   42           ; 3937
RTN                  ; 3938
LDF 3937             ; 3939
RTN                  ; 3940
LD  2   42           ; 3941
LD  0   0            ; 3942
ST  2   42           ; 3943
RTN                  ; 3944
LDF 3941             ; 3945
RTN                  ; 3946
LD  2   43           ; 3947
RTN                  ; 3948
LDF 3947             ; 3949
RTN                  ; 3950
LD  2   43           ; 3951
LD  0   0            ; 3952
ST  2   43           ; 3953
RTN                  ; 3954
LDF 3951             ; 3955
RTN                  ; 3956
LD  2   44           ; 3957
RTN                  ; 3958
LDF 3957             ; 3959
RTN                  ; 3960
LD  2   44           ; 3961
LD  0   0            ; 3962
ST  2   44           ; 3963
RTN                  ; 3964
LDF 3961             ; 3965
RTN                  ; 3966
LD  2   45           ; 3967
RTN                  ; 3968
LDF 3967             ; 3969
RTN                  ; 3970
LD  2   45           ; 3971
LD  0   0            ; 3972
ST  2   45           ; 3973
RTN                  ; 3974
LDF 3971             ; 3975
RTN                  ; 3976
LD  2   46           ; 3977
RTN                  ; 3978
LDF 3977             ; 3979
RTN                  ; 3980
LD  2   46           ; 3981
LD  0   0            ; 3982
ST  2   46           ; 3983
RTN                  ; 3984
LDF 3981             ; 3985
RTN                  ; 3986
LD  2   47           ; 3987
RTN                  ; 3988
LDF 3987             ; 3989
RTN                  ; 3990
LD  2   47           ; 3991
LD  0   0            ; 3992
ST  2   47           ; 3993
RTN                  ; 3994
LDF 3991             ; 3995
RTN                  ; 3996
LD  2   48           ; 3997
RTN                  ; 3998
LDF 3997             ; 3999
RTN                  ; 4000
LD  2   48           ; 4001
LD  0   0            ; 4002
ST  2   48           ; 4003
RTN                  ; 4004
LDF 4001             ; 4005
RTN                  ; 4006
LD  2   49           ; 4007
RTN                  ; 4008
LDF 4007             ; 4009
RTN                  ; 4010
LD  2   49           ; 4011
LD  0   0            ; 4012
ST  2   49           ; 4013
RTN                  ; 4014
LDF 4011             ; 4015
RTN                  ; 4016
LD  2   50           ; 4017
RTN                  ; 4018
LDF 4017             ; 4019
RTN                  ; 4020
LD  2   50           ; 4021
LD  0   0            ; 4022
ST  2   50           ; 4023
RTN                  ; 4024
LDF 4021             ; 4025
RTN                  ; 4026
LD  2   51           ; 4027
RTN                  ; 4028
LDF 4027             ; 4029
RTN                  ; 4030
LD  2   51           ; 4031
LD  0   0            ; 4032
ST  2   51           ; 4033
RTN                  ; 4034
LDF 4031             ; 4035
RTN                  ; 4036
LD  2   52           ; 4037
RTN                  ; 4038
LDF 4037             ; 4039
RTN                  ; 4040
LD  2   52           ; 4041
LD  0   0            ; 4042
ST  2   52           ; 4043
RTN                  ; 4044
LDF 4041             ; 4045
RTN                  ; 4046
LD  2   53           ; 4047
RTN                  ; 4048
LDF 4047             ; 4049
RTN                  ; 4050
LD  2   53           ; 4051
LD  0   0            ; 4052
ST  2   53           ; 4053
RTN                  ; 4054
LDF 4051             ; 4055
RTN                  ; 4056
LD  2   54           ; 4057
RTN                  ; 4058
LDF 4057             ; 4059
RTN                  ; 4060
LD  2   54           ; 4061
LD  0   0            ; 4062
ST  2   54           ; 4063
RTN                  ; 4064
LDF 4061             ; 4065
RTN                  ; 4066
LD  2   55           ; 4067
RTN                  ; 4068
LDF 4067             ; 4069
RTN                  ; 4070
LD  2   55           ; 4071
LD  0   0            ; 4072
ST  2   55           ; 4073
RTN                  ; 4074
LDF 4071             ; 4075
RTN                  ; 4076
LD  2   56           ; 4077
RTN                  ; 4078
LDF 4077             ; 4079
RTN                  ; 4080
LD  2   56           ; 4081
LD  0   0            ; 4082
ST  2   56           ; 4083
RTN                  ; 4084
LDF 4081             ; 4085
RTN                  ; 4086
LD  2   57           ; 4087
RTN                  ; 4088
LDF 4087             ; 4089
RTN                  ; 4090
LD  2   57           ; 4091
LD  0   0            ; 4092
ST  2   57           ; 4093
RTN                  ; 4094
LDF 4091             ; 4095
RTN                  ; 4096
LD  2   58           ; 4097
RTN                  ; 4098
LDF 4097             ; 4099
RTN                  ; 4100
LD  2   58           ; 4101
LD  0   0            ; 4102
ST  2   58           ; 4103
RTN                  ; 4104
LDF 4101             ; 4105
RTN                  ; 4106
LD  2   59           ; 4107
RTN                  ; 4108
LDF 4107             ; 4109
RTN                  ; 4110
LD  2   59           ; 4111
LD  0   0            ; 4112
ST  2   59           ; 4113
RTN                  ; 4114
LDF 4111             ; 4115
RTN                  ; 4116
LD  2   60           ; 4117
RTN                  ; 4118
LDF 4117             ; 4119
RTN                  ; 4120
LD  2   60           ; 4121
LD  0   0            ; 4122
ST  2   60           ; 4123
RTN                  ; 4124
LDF 4121             ; 4125
RTN                  ; 4126
LD  2   61           ; 4127
RTN                  ; 4128
LDF 4127             ; 4129
RTN                  ; 4130
LD  2   61           ; 4131
LD  0   0            ; 4132
ST  2   61           ; 4133
RTN                  ; 4134
LDF 4131             ; 4135
RTN                  ; 4136
LD  2   62           ; 4137
RTN                  ; 4138
LDF 4137             ; 4139
RTN                  ; 4140
LD  2   62           ; 4141
LD  0   0            ; 4142
ST  2   62           ; 4143
RTN                  ; 4144
LDF 4141             ; 4145
RTN                  ; 4146
LD  2   63           ; 4147
RTN                  ; 4148
LDF 4147             ; 4149
RTN                  ; 4150
LD  2   63           ; 4151
LD  0   0            ; 4152
ST  2   63           ; 4153
RTN                  ; 4154
LDF 4151             ; 4155
RTN                  ; 4156
LD  2   64           ; 4157
RTN                  ; 4158
LDF 4157             ; 4159
RTN                  ; 4160
LD  2   64           ; 4161
LD  0   0            ; 4162
ST  2   64           ; 4163
RTN                  ; 4164
LDF 4161             ; 4165
RTN                  ; 4166
LD  2   65           ; 4167
RTN                  ; 4168
LDF 4167             ; 4169
RTN                  ; 4170
LD  2   65           ; 4171
LD  0   0            ; 4172
ST  2   65           ; 4173
RTN                  ; 4174
LDF 4171             ; 4175
RTN                  ; 4176
LD  2   66           ; 4177
RTN                  ; 4178
LDF 4177             ; 4179
RTN                  ; 4180
LD  2   66           ; 4181
LD  0   0            ; 4182
ST  2   66           ; 4183
RTN                  ; 4184
LDF 4181             ; 4185
RTN                  ; 4186
LD  2   67           ; 4187
RTN                  ; 4188
LDF 4187             ; 4189
RTN                  ; 4190
LD  2   67           ; 4191
LD  0   0            ; 4192
ST  2   67           ; 4193
RTN                  ; 4194
LDF 4191             ; 4195
RTN                  ; 4196
LD  2   68           ; 4197
RTN                  ; 4198
LDF 4197             ; 4199
RTN                  ; 4200
LD  2   68           ; 4201
LD  0   0            ; 4202
ST  2   68           ; 4203
RTN                  ; 4204
LDF 4201             ; 4205
RTN                  ; 4206
LD  2   69           ; 4207
RTN                  ; 4208
LDF 4207             ; 4209
RTN                  ; 4210
LD  2   69           ; 4211
LD  0   0            ; 4212
ST  2   69           ; 4213
RTN                  ; 4214
LDF 4211             ; 4215
RTN                  ; 4216
LD  2   70           ; 4217
RTN                  ; 4218
LDF 4217             ; 4219
RTN                  ; 4220
LD  2   70           ; 4221
LD  0   0            ; 4222
ST  2   70           ; 4223
RTN                  ; 4224
LDF 4221             ; 4225
RTN                  ; 4226
LD  2   71           ; 4227
RTN                  ; 4228
LDF 4227             ; 4229
RTN                  ; 4230
LD  2   71           ; 4231
LD  0   0            ; 4232
ST  2   71           ; 4233
RTN                  ; 4234
LDF 4231             ; 4235
RTN                  ; 4236
LD  2   72           ; 4237
RTN                  ; 4238
LDF 4237             ; 4239
RTN                  ; 4240
LD  2   72           ; 4241
LD  0   0            ; 4242
ST  2   72           ; 4243
RTN                  ; 4244
LDF 4241             ; 4245
RTN                  ; 4246
LD  2   73           ; 4247
RTN                  ; 4248
LDF 4247             ; 4249
RTN                  ; 4250
LD  2   73           ; 4251
LD  0   0            ; 4252
ST  2   73           ; 4253
RTN                  ; 4254
LDF 4251             ; 4255
RTN                  ; 4256
LD  2   74           ; 4257
RTN                  ; 4258
LDF 4257             ; 4259
RTN                  ; 4260
LD  2   74           ; 4261
LD  0   0            ; 4262
ST  2   74           ; 4263
RTN                  ; 4264
LDF 4261             ; 4265
RTN                  ; 4266
LD  2   75           ; 4267
RTN                  ; 4268
LDF 4267             ; 4269
RTN                  ; 4270
LD  2   75           ; 4271
LD  0   0            ; 4272
ST  2   75           ; 4273
RTN                  ; 4274
LDF 4271             ; 4275
RTN                  ; 4276
LD  2   76           ; 4277
RTN                  ; 4278
LDF 4277             ; 4279
RTN                  ; 4280
LD  2   76           ; 4281
LD  0   0            ; 4282
ST  2   76           ; 4283
RTN                  ; 4284
LDF 4281             ; 4285
RTN                  ; 4286
LD  2   77           ; 4287
RTN                  ; 4288
LDF 4287             ; 4289
RTN                  ; 4290
LD  2   77           ; 4291
LD  0   0            ; 4292
ST  2   77           ; 4293
RTN                  ; 4294
LDF 4291             ; 4295
RTN                  ; 4296
LD  2   78           ; 4297
RTN                  ; 4298
LDF 4297             ; 4299
RTN                  ; 4300
LD  2   78           ; 4301
LD  0   0            ; 4302
ST  2   78           ; 4303
RTN                  ; 4304
LDF 4301             ; 4305
RTN                  ; 4306
LD  2   79           ; 4307
RTN                  ; 4308
LDF 4307             ; 4309
RTN                  ; 4310
LD  2   79           ; 4311
LD  0   0            ; 4312
ST  2   79           ; 4313
RTN                  ; 4314
LDF 4311             ; 4315
RTN                  ; 4316
LD  2   80           ; 4317
RTN                  ; 4318
LDF 4317             ; 4319
RTN                  ; 4320
LD  2   80           ; 4321
LD  0   0            ; 4322
ST  2   80           ; 4323
RTN                  ; 4324
LDF 4321             ; 4325
RTN                  ; 4326
LD  2   81           ; 4327
RTN                  ; 4328
LDF 4327             ; 4329
RTN                  ; 4330
LD  2   81           ; 4331
LD  0   0            ; 4332
ST  2   81           ; 4333
RTN                  ; 4334
LDF 4331             ; 4335
RTN                  ; 4336
LD  2   82           ; 4337
RTN                  ; 4338
LDF 4337             ; 4339
RTN                  ; 4340
LD  2   82           ; 4341
LD  0   0            ; 4342
ST  2   82           ; 4343
RTN                  ; 4344
LDF 4341             ; 4345
RTN                  ; 4346
LD  2   83           ; 4347
RTN                  ; 4348
LDF 4347             ; 4349
RTN                  ; 4350
LD  2   83           ; 4351
LD  0   0            ; 4352
ST  2   83           ; 4353
RTN                  ; 4354
LDF 4351             ; 4355
RTN                  ; 4356
LD  2   84           ; 4357
RTN                  ; 4358
LDF 4357             ; 4359
RTN                  ; 4360
LD  2   84           ; 4361
LD  0   0            ; 4362
ST  2   84           ; 4363
RTN                  ; 4364
LDF 4361             ; 4365
RTN                  ; 4366
LD  2   85           ; 4367
RTN                  ; 4368
LDF 4367             ; 4369
RTN                  ; 4370
LD  2   85           ; 4371
LD  0   0            ; 4372
ST  2   85           ; 4373
RTN                  ; 4374
LDF 4371             ; 4375
RTN                  ; 4376
LD  2   86           ; 4377
RTN                  ; 4378
LDF 4377             ; 4379
RTN                  ; 4380
LD  2   86           ; 4381
LD  0   0            ; 4382
ST  2   86           ; 4383
RTN                  ; 4384
LDF 4381             ; 4385
RTN                  ; 4386
LD  2   87           ; 4387
RTN                  ; 4388
LDF 4387             ; 4389
RTN                  ; 4390
LD  2   87           ; 4391
LD  0   0            ; 4392
ST  2   87           ; 4393
RTN                  ; 4394
LDF 4391             ; 4395
RTN                  ; 4396
LD  2   88           ; 4397
RTN                  ; 4398
LDF 4397             ; 4399
RTN                  ; 4400
LD  2   88           ; 4401
LD  0   0            ; 4402
ST  2   88           ; 4403
RTN                  ; 4404
LDF 4401             ; 4405
RTN                  ; 4406
LD  2   89           ; 4407
RTN                  ; 4408
LDF 4407             ; 4409
RTN                  ; 4410
LD  2   89           ; 4411
LD  0   0            ; 4412
ST  2   89           ; 4413
RTN                  ; 4414
LDF 4411             ; 4415
RTN                  ; 4416
LD  2   90           ; 4417
RTN                  ; 4418
LDF 4417             ; 4419
RTN                  ; 4420
LD  2   90           ; 4421
LD  0   0            ; 4422
ST  2   90           ; 4423
RTN                  ; 4424
LDF 4421             ; 4425
RTN                  ; 4426
LD  2   91           ; 4427
RTN                  ; 4428
LDF 4427             ; 4429
RTN                  ; 4430
LD  2   91           ; 4431
LD  0   0            ; 4432
ST  2   91           ; 4433
RTN                  ; 4434
LDF 4431             ; 4435
RTN                  ; 4436
LD  2   92           ; 4437
RTN                  ; 4438
LDF 4437             ; 4439
RTN                  ; 4440
LD  2   92           ; 4441
LD  0   0            ; 4442
ST  2   92           ; 4443
RTN                  ; 4444
LDF 4441             ; 4445
RTN                  ; 4446
LD  2   93           ; 4447
RTN                  ; 4448
LDF 4447             ; 4449
RTN                  ; 4450
LD  2   93           ; 4451
LD  0   0            ; 4452
ST  2   93           ; 4453
RTN                  ; 4454
LDF 4451             ; 4455
RTN                  ; 4456
LD  2   94           ; 4457
RTN                  ; 4458
LDF 4457             ; 4459
RTN                  ; 4460
LD  2   94           ; 4461
LD  0   0            ; 4462
ST  2   94           ; 4463
RTN                  ; 4464
LDF 4461             ; 4465
RTN                  ; 4466
LD  2   95           ; 4467
RTN                  ; 4468
LDF 4467             ; 4469
RTN                  ; 4470
LD  2   95           ; 4471
LD  0   0            ; 4472
ST  2   95           ; 4473
RTN                  ; 4474
LDF 4471             ; 4475
RTN                  ; 4476
LD  2   96           ; 4477
RTN                  ; 4478
LDF 4477             ; 4479
RTN                  ; 4480
LD  2   96           ; 4481
LD  0   0            ; 4482
ST  2   96           ; 4483
RTN                  ; 4484
LDF 4481             ; 4485
RTN                  ; 4486
LD  2   97           ; 4487
RTN                  ; 4488
LDF 4487             ; 4489
RTN                  ; 4490
LD  2   97           ; 4491
LD  0   0            ; 4492
ST  2   97           ; 4493
RTN                  ; 4494
LDF 4491             ; 4495
RTN                  ; 4496
LD  2   98           ; 4497
RTN                  ; 4498
LDF 4497             ; 4499
RTN                  ; 4500
LD  2   98           ; 4501
LD  0   0            ; 4502
ST  2   98           ; 4503
RTN                  ; 4504
LDF 4501             ; 4505
RTN                  ; 4506
LD  2   99           ; 4507
RTN                  ; 4508
LDF 4507             ; 4509
RTN                  ; 4510
LD  2   99           ; 4511
LD  0   0            ; 4512
ST  2   99           ; 4513
RTN                  ; 4514
LDF 4511             ; 4515
RTN                  ; 4516
LD  2   100          ; 4517
RTN                  ; 4518
LDF 4517             ; 4519
RTN                  ; 4520
LD  2   100          ; 4521
LD  0   0            ; 4522
ST  2   100          ; 4523
RTN                  ; 4524
LDF 4521             ; 4525
RTN                  ; 4526
LD  2   101          ; 4527
RTN                  ; 4528
LDF 4527             ; 4529
RTN                  ; 4530
LD  2   101          ; 4531
LD  0   0            ; 4532
ST  2   101          ; 4533
RTN                  ; 4534
LDF 4531             ; 4535
RTN                  ; 4536
LD  2   102          ; 4537
RTN                  ; 4538
LDF 4537             ; 4539
RTN                  ; 4540
LD  2   102          ; 4541
LD  0   0            ; 4542
ST  2   102          ; 4543
RTN                  ; 4544
LDF 4541             ; 4545
RTN                  ; 4546
LD  2   103          ; 4547
RTN                  ; 4548
LDF 4547             ; 4549
RTN                  ; 4550
LD  2   103          ; 4551
LD  0   0            ; 4552
ST  2   103          ; 4553
RTN                  ; 4554
LDF 4551             ; 4555
RTN                  ; 4556
LD  2   104          ; 4557
RTN                  ; 4558
LDF 4557             ; 4559
RTN                  ; 4560
LD  2   104          ; 4561
LD  0   0            ; 4562
ST  2   104          ; 4563
RTN                  ; 4564
LDF 4561             ; 4565
RTN                  ; 4566
LD  2   105          ; 4567
RTN                  ; 4568
LDF 4567             ; 4569
RTN                  ; 4570
LD  2   105          ; 4571
LD  0   0            ; 4572
ST  2   105          ; 4573
RTN                  ; 4574
LDF 4571             ; 4575
RTN                  ; 4576
LD  2   106          ; 4577
RTN                  ; 4578
LDF 4577             ; 4579
RTN                  ; 4580
LD  2   106          ; 4581
LD  0   0            ; 4582
ST  2   106          ; 4583
RTN                  ; 4584
LDF 4581             ; 4585
RTN                  ; 4586
LD  2   107          ; 4587
RTN                  ; 4588
LDF 4587             ; 4589
RTN                  ; 4590
LD  2   107          ; 4591
LD  0   0            ; 4592
ST  2   107          ; 4593
RTN                  ; 4594
LDF 4591             ; 4595
RTN                  ; 4596
LD  2   108          ; 4597
RTN                  ; 4598
LDF 4597             ; 4599
RTN                  ; 4600
LD  2   108          ; 4601
LD  0   0            ; 4602
ST  2   108          ; 4603
RTN                  ; 4604
LDF 4601             ; 4605
RTN                  ; 4606
LD  2   109          ; 4607
RTN                  ; 4608
LDF 4607             ; 4609
RTN                  ; 4610
LD  2   109          ; 4611
LD  0   0            ; 4612
ST  2   109          ; 4613
RTN                  ; 4614
LDF 4611             ; 4615
RTN                  ; 4616
LD  2   110          ; 4617
RTN                  ; 4618
LDF 4617             ; 4619
RTN                  ; 4620
LD  2   110          ; 4621
LD  0   0            ; 4622
ST  2   110          ; 4623
RTN                  ; 4624
LDF 4621             ; 4625
RTN                  ; 4626
LD  2   111          ; 4627
RTN                  ; 4628
LDF 4627             ; 4629
RTN                  ; 4630
LD  2   111          ; 4631
LD  0   0            ; 4632
ST  2   111          ; 4633
RTN                  ; 4634
LDF 4631             ; 4635
RTN                  ; 4636
LD  2   112          ; 4637
RTN                  ; 4638
LDF 4637             ; 4639
RTN                  ; 4640
LD  2   112          ; 4641
LD  0   0            ; 4642
ST  2   112          ; 4643
RTN                  ; 4644
LDF 4641             ; 4645
RTN                  ; 4646
LD  2   113          ; 4647
RTN                  ; 4648
LDF 4647             ; 4649
RTN                  ; 4650
LD  2   113          ; 4651
LD  0   0            ; 4652
ST  2   113          ; 4653
RTN                  ; 4654
LDF 4651             ; 4655
RTN                  ; 4656
LD  2   114          ; 4657
RTN                  ; 4658
LDF 4657             ; 4659
RTN                  ; 4660
LD  2   114          ; 4661
LD  0   0            ; 4662
ST  2   114          ; 4663
RTN                  ; 4664
LDF 4661             ; 4665
RTN                  ; 4666
LD  2   115          ; 4667
RTN                  ; 4668
LDF 4667             ; 4669
RTN                  ; 4670
LD  2   115          ; 4671
LD  0   0            ; 4672
ST  2   115          ; 4673
RTN                  ; 4674
LDF 4671             ; 4675
RTN                  ; 4676
LD  2   116          ; 4677
RTN                  ; 4678
LDF 4677             ; 4679
RTN                  ; 4680
LD  2   116          ; 4681
LD  0   0            ; 4682
ST  2   116          ; 4683
RTN                  ; 4684
LDF 4681             ; 4685
RTN                  ; 4686
LD  2   117          ; 4687
RTN                  ; 4688
LDF 4687             ; 4689
RTN                  ; 4690
LD  2   117          ; 4691
LD  0   0            ; 4692
ST  2   117          ; 4693
RTN                  ; 4694
LDF 4691             ; 4695
RTN                  ; 4696
LD  2   118          ; 4697
RTN                  ; 4698
LDF 4697             ; 4699
RTN                  ; 4700
LD  2   118          ; 4701
LD  0   0            ; 4702
ST  2   118          ; 4703
RTN                  ; 4704
LDF 4701             ; 4705
RTN                  ; 4706
LD  2   119          ; 4707
RTN                  ; 4708
LDF 4707             ; 4709
RTN                  ; 4710
LD  2   119          ; 4711
LD  0   0            ; 4712
ST  2   119          ; 4713
RTN                  ; 4714
LDF 4711             ; 4715
RTN                  ; 4716
LD  2   120          ; 4717
RTN                  ; 4718
LDF 4717             ; 4719
RTN                  ; 4720
LD  2   120          ; 4721
LD  0   0            ; 4722
ST  2   120          ; 4723
RTN                  ; 4724
LDF 4721             ; 4725
RTN                  ; 4726
LD  2   121          ; 4727
RTN                  ; 4728
LDF 4727             ; 4729
RTN                  ; 4730
LD  2   121          ; 4731
LD  0   0            ; 4732
ST  2   121          ; 4733
RTN                  ; 4734
LDF 4731             ; 4735
RTN                  ; 4736
LD  2   122          ; 4737
RTN                  ; 4738
LDF 4737             ; 4739
RTN                  ; 4740
LD  2   122          ; 4741
LD  0   0            ; 4742
ST  2   122          ; 4743
RTN                  ; 4744
LDF 4741             ; 4745
RTN                  ; 4746
LD  2   123          ; 4747
RTN                  ; 4748
LDF 4747             ; 4749
RTN                  ; 4750
LD  2   123          ; 4751
LD  0   0            ; 4752
ST  2   123          ; 4753
RTN                  ; 4754
LDF 4751             ; 4755
RTN                  ; 4756
LD  2   124          ; 4757
RTN                  ; 4758
LDF 4757             ; 4759
RTN                  ; 4760
LD  2   124          ; 4761
LD  0   0            ; 4762
ST  2   124          ; 4763
RTN                  ; 4764
LDF 4761             ; 4765
RTN                  ; 4766
LD  2   125          ; 4767
RTN                  ; 4768
LDF 4767             ; 4769
RTN                  ; 4770
LD  2   125          ; 4771
LD  0   0            ; 4772
ST  2   125          ; 4773
RTN                  ; 4774
LDF 4771             ; 4775
RTN                  ; 4776
LD  2   126          ; 4777
RTN                  ; 4778
LDF 4777             ; 4779
RTN                  ; 4780
LD  2   126          ; 4781
LD  0   0            ; 4782
ST  2   126          ; 4783
RTN                  ; 4784
LDF 4781             ; 4785
RTN                  ; 4786
LD  2   127          ; 4787
RTN                  ; 4788
LDF 4787             ; 4789
RTN                  ; 4790
LD  2   127          ; 4791
LD  0   0            ; 4792
ST  2   127          ; 4793
RTN                  ; 4794
LDF 4791             ; 4795
RTN                  ; 4796
LD  2   128          ; 4797
RTN                  ; 4798
LDF 4797             ; 4799
RTN                  ; 4800
LD  2   128          ; 4801
LD  0   0            ; 4802
ST  2   128          ; 4803
RTN                  ; 4804
LDF 4801             ; 4805
RTN                  ; 4806
LD  2   129          ; 4807
RTN                  ; 4808
LDF 4807             ; 4809
RTN                  ; 4810
LD  2   129          ; 4811
LD  0   0            ; 4812
ST  2   129          ; 4813
RTN                  ; 4814
LDF 4811             ; 4815
RTN                  ; 4816
LD  2   130          ; 4817
RTN                  ; 4818
LDF 4817             ; 4819
RTN                  ; 4820
LD  2   130          ; 4821
LD  0   0            ; 4822
ST  2   130          ; 4823
RTN                  ; 4824
LDF 4821             ; 4825
RTN                  ; 4826
LD  2   131          ; 4827
RTN                  ; 4828
LDF 4827             ; 4829
RTN                  ; 4830
LD  2   131          ; 4831
LD  0   0            ; 4832
ST  2   131          ; 4833
RTN                  ; 4834
LDF 4831             ; 4835
RTN                  ; 4836
LD  2   132          ; 4837
RTN                  ; 4838
LDF 4837             ; 4839
RTN                  ; 4840
LD  2   132          ; 4841
LD  0   0            ; 4842
ST  2   132          ; 4843
RTN                  ; 4844
LDF 4841             ; 4845
RTN                  ; 4846
LD  2   133          ; 4847
RTN                  ; 4848
LDF 4847             ; 4849
RTN                  ; 4850
LD  2   133          ; 4851
LD  0   0            ; 4852
ST  2   133          ; 4853
RTN                  ; 4854
LDF 4851             ; 4855
RTN                  ; 4856
LD  2   134          ; 4857
RTN                  ; 4858
LDF 4857             ; 4859
RTN                  ; 4860
LD  2   134          ; 4861
LD  0   0            ; 4862
ST  2   134          ; 4863
RTN                  ; 4864
LDF 4861             ; 4865
RTN                  ; 4866
LD  2   135          ; 4867
RTN                  ; 4868
LDF 4867             ; 4869
RTN                  ; 4870
LD  2   135          ; 4871
LD  0   0            ; 4872
ST  2   135          ; 4873
RTN                  ; 4874
LDF 4871             ; 4875
RTN                  ; 4876
LD  2   136          ; 4877
RTN                  ; 4878
LDF 4877             ; 4879
RTN                  ; 4880
LD  2   136          ; 4881
LD  0   0            ; 4882
ST  2   136          ; 4883
RTN                  ; 4884
LDF 4881             ; 4885
RTN                  ; 4886
LD  2   137          ; 4887
RTN                  ; 4888
LDF 4887             ; 4889
RTN                  ; 4890
LD  2   137          ; 4891
LD  0   0            ; 4892
ST  2   137          ; 4893
RTN                  ; 4894
LDF 4891             ; 4895
RTN                  ; 4896
LD  2   138          ; 4897
RTN                  ; 4898
LDF 4897             ; 4899
RTN                  ; 4900
LD  2   138          ; 4901
LD  0   0            ; 4902
ST  2   138          ; 4903
RTN                  ; 4904
LDF 4901             ; 4905
RTN                  ; 4906
LD  2   139          ; 4907
RTN                  ; 4908
LDF 4907             ; 4909
RTN                  ; 4910
LD  2   139          ; 4911
LD  0   0            ; 4912
ST  2   139          ; 4913
RTN                  ; 4914
LDF 4911             ; 4915
RTN                  ; 4916
LD  2   140          ; 4917
RTN                  ; 4918
LDF 4917             ; 4919
RTN                  ; 4920
LD  2   140          ; 4921
LD  0   0            ; 4922
ST  2   140          ; 4923
RTN                  ; 4924
LDF 4921             ; 4925
RTN                  ; 4926
LD  2   141          ; 4927
RTN                  ; 4928
LDF 4927             ; 4929
RTN                  ; 4930
LD  2   141          ; 4931
LD  0   0            ; 4932
ST  2   141          ; 4933
RTN                  ; 4934
LDF 4931             ; 4935
RTN                  ; 4936
LD  2   142          ; 4937
RTN                  ; 4938
LDF 4937             ; 4939
RTN                  ; 4940
LD  2   142          ; 4941
LD  0   0            ; 4942
ST  2   142          ; 4943
RTN                  ; 4944
LDF 4941             ; 4945
RTN                  ; 4946
LD  2   143          ; 4947
RTN                  ; 4948
LDF 4947             ; 4949
RTN                  ; 4950
LD  2   143          ; 4951
LD  0   0            ; 4952
ST  2   143          ; 4953
RTN                  ; 4954
LDF 4951             ; 4955
RTN                  ; 4956
LD  2   144          ; 4957
RTN                  ; 4958
LDF 4957             ; 4959
RTN                  ; 4960
LD  2   144          ; 4961
LD  0   0            ; 4962
ST  2   144          ; 4963
RTN                  ; 4964
LDF 4961             ; 4965
RTN                  ; 4966
LD  2   145          ; 4967
RTN                  ; 4968
LDF 4967             ; 4969
RTN                  ; 4970
LD  2   145          ; 4971
LD  0   0            ; 4972
ST  2   145          ; 4973
RTN                  ; 4974
LDF 4971             ; 4975
RTN                  ; 4976
LD  2   146          ; 4977
RTN                  ; 4978
LDF 4977             ; 4979
RTN                  ; 4980
LD  2   146          ; 4981
LD  0   0            ; 4982
ST  2   146          ; 4983
RTN                  ; 4984
LDF 4981             ; 4985
RTN                  ; 4986
LD  2   147          ; 4987
RTN                  ; 4988
LDF 4987             ; 4989
RTN                  ; 4990
LD  2   147          ; 4991
LD  0   0            ; 4992
ST  2   147          ; 4993
RTN                  ; 4994
LDF 4991             ; 4995
RTN                  ; 4996
LD  2   148          ; 4997
RTN                  ; 4998
LDF 4997             ; 4999
RTN                  ; 5000
LD  2   148          ; 5001
LD  0   0            ; 5002
ST  2   148          ; 5003
RTN                  ; 5004
LDF 5001             ; 5005
RTN                  ; 5006
LD  2   149          ; 5007
RTN                  ; 5008
LDF 5007             ; 5009
RTN                  ; 5010
LD  2   149          ; 5011
LD  0   0            ; 5012
ST  2   149          ; 5013
RTN                  ; 5014
LDF 5011             ; 5015
RTN                  ; 5016
LD  2   150          ; 5017
RTN                  ; 5018
LDF 5017             ; 5019
RTN                  ; 5020
LD  2   150          ; 5021
LD  0   0            ; 5022
ST  2   150          ; 5023
RTN                  ; 5024
LDF 5021             ; 5025
RTN                  ; 5026
LD  2   151          ; 5027
RTN                  ; 5028
LDF 5027             ; 5029
RTN                  ; 5030
LD  2   151          ; 5031
LD  0   0            ; 5032
ST  2   151          ; 5033
RTN                  ; 5034
LDF 5031             ; 5035
RTN                  ; 5036
LD  2   152          ; 5037
RTN                  ; 5038
LDF 5037             ; 5039
RTN                  ; 5040
LD  2   152          ; 5041
LD  0   0            ; 5042
ST  2   152          ; 5043
RTN                  ; 5044
LDF 5041             ; 5045
RTN                  ; 5046
LD  2   153          ; 5047
RTN                  ; 5048
LDF 5047             ; 5049
RTN                  ; 5050
LD  2   153          ; 5051
LD  0   0            ; 5052
ST  2   153          ; 5053
RTN                  ; 5054
LDF 5051             ; 5055
RTN                  ; 5056
LD  2   154          ; 5057
RTN                  ; 5058
LDF 5057             ; 5059
RTN                  ; 5060
LD  2   154          ; 5061
LD  0   0            ; 5062
ST  2   154          ; 5063
RTN                  ; 5064
LDF 5061             ; 5065
RTN                  ; 5066
LD  2   155          ; 5067
RTN                  ; 5068
LDF 5067             ; 5069
RTN                  ; 5070
LD  2   155          ; 5071
LD  0   0            ; 5072
ST  2   155          ; 5073
RTN                  ; 5074
LDF 5071             ; 5075
RTN                  ; 5076
LD  2   156          ; 5077
RTN                  ; 5078
LDF 5077             ; 5079
RTN                  ; 5080
LD  2   156          ; 5081
LD  0   0            ; 5082
ST  2   156          ; 5083
RTN                  ; 5084
LDF 5081             ; 5085
RTN                  ; 5086
LD  2   157          ; 5087
RTN                  ; 5088
LDF 5087             ; 5089
RTN                  ; 5090
LD  2   157          ; 5091
LD  0   0            ; 5092
ST  2   157          ; 5093
RTN                  ; 5094
LDF 5091             ; 5095
RTN                  ; 5096
LD  2   158          ; 5097
RTN                  ; 5098
LDF 5097             ; 5099
RTN                  ; 5100
LD  2   158          ; 5101
LD  0   0            ; 5102
ST  2   158          ; 5103
RTN                  ; 5104
LDF 5101             ; 5105
RTN                  ; 5106
LD  2   159          ; 5107
RTN                  ; 5108
LDF 5107             ; 5109
RTN                  ; 5110
LD  2   159          ; 5111
LD  0   0            ; 5112
ST  2   159          ; 5113
RTN                  ; 5114
LDF 5111             ; 5115
RTN                  ; 5116
LD  2   160          ; 5117
RTN                  ; 5118
LDF 5117             ; 5119
RTN                  ; 5120
LD  2   160          ; 5121
LD  0   0            ; 5122
ST  2   160          ; 5123
RTN                  ; 5124
LDF 5121             ; 5125
RTN                  ; 5126
LD  2   161          ; 5127
RTN                  ; 5128
LDF 5127             ; 5129
RTN                  ; 5130
LD  2   161          ; 5131
LD  0   0            ; 5132
ST  2   161          ; 5133
RTN                  ; 5134
LDF 5131             ; 5135
RTN                  ; 5136
LD  2   162          ; 5137
RTN                  ; 5138
LDF 5137             ; 5139
RTN                  ; 5140
LD  2   162          ; 5141
LD  0   0            ; 5142
ST  2   162          ; 5143
RTN                  ; 5144
LDF 5141             ; 5145
RTN                  ; 5146
LD  2   163          ; 5147
RTN                  ; 5148
LDF 5147             ; 5149
RTN                  ; 5150
LD  2   163          ; 5151
LD  0   0            ; 5152
ST  2   163          ; 5153
RTN                  ; 5154
LDF 5151             ; 5155
RTN                  ; 5156
LD  2   164          ; 5157
RTN                  ; 5158
LDF 5157             ; 5159
RTN                  ; 5160
LD  2   164          ; 5161
LD  0   0            ; 5162
ST  2   164          ; 5163
RTN                  ; 5164
LDF 5161             ; 5165
RTN                  ; 5166
LD  2   165          ; 5167
RTN                  ; 5168
LDF 5167             ; 5169
RTN                  ; 5170
LD  2   165          ; 5171
LD  0   0            ; 5172
ST  2   165          ; 5173
RTN                  ; 5174
LDF 5171             ; 5175
RTN                  ; 5176
LD  2   166          ; 5177
RTN                  ; 5178
LDF 5177             ; 5179
RTN                  ; 5180
LD  2   166          ; 5181
LD  0   0            ; 5182
ST  2   166          ; 5183
RTN                  ; 5184
LDF 5181             ; 5185
RTN                  ; 5186
LD  2   167          ; 5187
RTN                  ; 5188
LDF 5187             ; 5189
RTN                  ; 5190
LD  2   167          ; 5191
LD  0   0            ; 5192
ST  2   167          ; 5193
RTN                  ; 5194
LDF 5191             ; 5195
RTN                  ; 5196
LD  2   168          ; 5197
RTN                  ; 5198
LDF 5197             ; 5199
RTN                  ; 5200
LD  2   168          ; 5201
LD  0   0            ; 5202
ST  2   168          ; 5203
RTN                  ; 5204
LDF 5201             ; 5205
RTN                  ; 5206
LD  2   169          ; 5207
RTN                  ; 5208
LDF 5207             ; 5209
RTN                  ; 5210
LD  2   169          ; 5211
LD  0   0            ; 5212
ST  2   169          ; 5213
RTN                  ; 5214
LDF 5211             ; 5215
RTN                  ; 5216
LD  2   170          ; 5217
RTN                  ; 5218
LDF 5217             ; 5219
RTN                  ; 5220
LD  2   170          ; 5221
LD  0   0            ; 5222
ST  2   170          ; 5223
RTN                  ; 5224
LDF 5221             ; 5225
RTN                  ; 5226
LD  2   171          ; 5227
RTN                  ; 5228
LDF 5227             ; 5229
RTN                  ; 5230
LD  2   171          ; 5231
LD  0   0            ; 5232
ST  2   171          ; 5233
RTN                  ; 5234
LDF 5231             ; 5235
RTN                  ; 5236
LD  2   172          ; 5237
RTN                  ; 5238
LDF 5237             ; 5239
RTN                  ; 5240
LD  2   172          ; 5241
LD  0   0            ; 5242
ST  2   172          ; 5243
RTN                  ; 5244
LDF 5241             ; 5245
RTN                  ; 5246
LD  2   173          ; 5247
RTN                  ; 5248
LDF 5247             ; 5249
RTN                  ; 5250
LD  2   173          ; 5251
LD  0   0            ; 5252
ST  2   173          ; 5253
RTN                  ; 5254
LDF 5251             ; 5255
RTN                  ; 5256
LD  2   174          ; 5257
RTN                  ; 5258
LDF 5257             ; 5259
RTN                  ; 5260
LD  2   174          ; 5261
LD  0   0            ; 5262
ST  2   174          ; 5263
RTN                  ; 5264
LDF 5261             ; 5265
RTN                  ; 5266
LD  2   175          ; 5267
RTN                  ; 5268
LDF 5267             ; 5269
RTN                  ; 5270
LD  2   175          ; 5271
LD  0   0            ; 5272
ST  2   175          ; 5273
RTN                  ; 5274
LDF 5271             ; 5275
RTN                  ; 5276
LD  2   176          ; 5277
RTN                  ; 5278
LDF 5277             ; 5279
RTN                  ; 5280
LD  2   176          ; 5281
LD  0   0            ; 5282
ST  2   176          ; 5283
RTN                  ; 5284
LDF 5281             ; 5285
RTN                  ; 5286
LD  2   177          ; 5287
RTN                  ; 5288
LDF 5287             ; 5289
RTN                  ; 5290
LD  2   177          ; 5291
LD  0   0            ; 5292
ST  2   177          ; 5293
RTN                  ; 5294
LDF 5291             ; 5295
RTN                  ; 5296
LD  2   178          ; 5297
RTN                  ; 5298
LDF 5297             ; 5299
RTN                  ; 5300
LD  2   178          ; 5301
LD  0   0            ; 5302
ST  2   178          ; 5303
RTN                  ; 5304
LDF 5301             ; 5305
RTN                  ; 5306
LD  2   179          ; 5307
RTN                  ; 5308
LDF 5307             ; 5309
RTN                  ; 5310
LD  2   179          ; 5311
LD  0   0            ; 5312
ST  2   179          ; 5313
RTN                  ; 5314
LDF 5311             ; 5315
RTN                  ; 5316
LD  2   180          ; 5317
RTN                  ; 5318
LDF 5317             ; 5319
RTN                  ; 5320
LD  2   180          ; 5321
LD  0   0            ; 5322
ST  2   180          ; 5323
RTN                  ; 5324
LDF 5321             ; 5325
RTN                  ; 5326
LD  2   181          ; 5327
RTN                  ; 5328
LDF 5327             ; 5329
RTN                  ; 5330
LD  2   181          ; 5331
LD  0   0            ; 5332
ST  2   181          ; 5333
RTN                  ; 5334
LDF 5331             ; 5335
RTN                  ; 5336
LD  2   182          ; 5337
RTN                  ; 5338
LDF 5337             ; 5339
RTN                  ; 5340
LD  2   182          ; 5341
LD  0   0            ; 5342
ST  2   182          ; 5343
RTN                  ; 5344
LDF 5341             ; 5345
RTN                  ; 5346
LD  2   183          ; 5347
RTN                  ; 5348
LDF 5347             ; 5349
RTN                  ; 5350
LD  2   183          ; 5351
LD  0   0            ; 5352
ST  2   183          ; 5353
RTN                  ; 5354
LDF 5351             ; 5355
RTN                  ; 5356
LD  2   184          ; 5357
RTN                  ; 5358
LDF 5357             ; 5359
RTN                  ; 5360
LD  2   184          ; 5361
LD  0   0            ; 5362
ST  2   184          ; 5363
RTN                  ; 5364
LDF 5361             ; 5365
RTN                  ; 5366
LD  2   185          ; 5367
RTN                  ; 5368
LDF 5367             ; 5369
RTN                  ; 5370
LD  2   185          ; 5371
LD  0   0            ; 5372
ST  2   185          ; 5373
RTN                  ; 5374
LDF 5371             ; 5375
RTN                  ; 5376
LD  2   186          ; 5377
RTN                  ; 5378
LDF 5377             ; 5379
RTN                  ; 5380
LD  2   186          ; 5381
LD  0   0            ; 5382
ST  2   186          ; 5383
RTN                  ; 5384
LDF 5381             ; 5385
RTN                  ; 5386
LD  2   187          ; 5387
RTN                  ; 5388
LDF 5387             ; 5389
RTN                  ; 5390
LD  2   187          ; 5391
LD  0   0            ; 5392
ST  2   187          ; 5393
RTN                  ; 5394
LDF 5391             ; 5395
RTN                  ; 5396
LD  2   188          ; 5397
RTN                  ; 5398
LDF 5397             ; 5399
RTN                  ; 5400
LD  2   188          ; 5401
LD  0   0            ; 5402
ST  2   188          ; 5403
RTN                  ; 5404
LDF 5401             ; 5405
RTN                  ; 5406
LD  2   189          ; 5407
RTN                  ; 5408
LDF 5407             ; 5409
RTN                  ; 5410
LD  2   189          ; 5411
LD  0   0            ; 5412
ST  2   189          ; 5413
RTN                  ; 5414
LDF 5411             ; 5415
RTN                  ; 5416
LD  2   190          ; 5417
RTN                  ; 5418
LDF 5417             ; 5419
RTN                  ; 5420
LD  2   190          ; 5421
LD  0   0            ; 5422
ST  2   190          ; 5423
RTN                  ; 5424
LDF 5421             ; 5425
RTN                  ; 5426
LD  2   191          ; 5427
RTN                  ; 5428
LDF 5427             ; 5429
RTN                  ; 5430
LD  2   191          ; 5431
LD  0   0            ; 5432
ST  2   191          ; 5433
RTN                  ; 5434
LDF 5431             ; 5435
RTN                  ; 5436
LD  2   192          ; 5437
RTN                  ; 5438
LDF 5437             ; 5439
RTN                  ; 5440
LD  2   192          ; 5441
LD  0   0            ; 5442
ST  2   192          ; 5443
RTN                  ; 5444
LDF 5441             ; 5445
RTN                  ; 5446
LD  2   193          ; 5447
RTN                  ; 5448
LDF 5447             ; 5449
RTN                  ; 5450
LD  2   193          ; 5451
LD  0   0            ; 5452
ST  2   193          ; 5453
RTN                  ; 5454
LDF 5451             ; 5455
RTN                  ; 5456
LD  2   194          ; 5457
RTN                  ; 5458
LDF 5457             ; 5459
RTN                  ; 5460
LD  2   194          ; 5461
LD  0   0            ; 5462
ST  2   194          ; 5463
RTN                  ; 5464
LDF 5461             ; 5465
RTN                  ; 5466
LD  2   195          ; 5467
RTN                  ; 5468
LDF 5467             ; 5469
RTN                  ; 5470
LD  2   195          ; 5471
LD  0   0            ; 5472
ST  2   195          ; 5473
RTN                  ; 5474
LDF 5471             ; 5475
RTN                  ; 5476
LD  2   196          ; 5477
RTN                  ; 5478
LDF 5477             ; 5479
RTN                  ; 5480
LD  2   196          ; 5481
LD  0   0            ; 5482
ST  2   196          ; 5483
RTN                  ; 5484
LDF 5481             ; 5485
RTN                  ; 5486
LD  2   197          ; 5487
RTN                  ; 5488
LDF 5487             ; 5489
RTN                  ; 5490
LD  2   197          ; 5491
LD  0   0            ; 5492
ST  2   197          ; 5493
RTN                  ; 5494
LDF 5491             ; 5495
RTN                  ; 5496
LD  2   198          ; 5497
RTN                  ; 5498
LDF 5497             ; 5499
RTN                  ; 5500
LD  2   198          ; 5501
LD  0   0            ; 5502
ST  2   198          ; 5503
RTN                  ; 5504
LDF 5501             ; 5505
RTN                  ; 5506
LD  2   199          ; 5507
RTN                  ; 5508
LDF 5507             ; 5509
RTN                  ; 5510
LD  2   199          ; 5511
LD  0   0            ; 5512
ST  2   199          ; 5513
RTN                  ; 5514
LDF 5511             ; 5515
RTN                  ; 5516
LD  2   200          ; 5517
RTN                  ; 5518
LDF 5517             ; 5519
RTN                  ; 5520
LD  2   200          ; 5521
LD  0   0            ; 5522
ST  2   200          ; 5523
RTN                  ; 5524
LDF 5521             ; 5525
RTN                  ; 5526
LD  2   201          ; 5527
RTN                  ; 5528
LDF 5527             ; 5529
RTN                  ; 5530
LD  2   201          ; 5531
LD  0   0            ; 5532
ST  2   201          ; 5533
RTN                  ; 5534
LDF 5531             ; 5535
RTN                  ; 5536
LD  2   202          ; 5537
RTN                  ; 5538
LDF 5537             ; 5539
RTN                  ; 5540
LD  2   202          ; 5541
LD  0   0            ; 5542
ST  2   202          ; 5543
RTN                  ; 5544
LDF 5541             ; 5545
RTN                  ; 5546
LD  2   203          ; 5547
RTN                  ; 5548
LDF 5547             ; 5549
RTN                  ; 5550
LD  2   203          ; 5551
LD  0   0            ; 5552
ST  2   203          ; 5553
RTN                  ; 5554
LDF 5551             ; 5555
RTN                  ; 5556
LD  2   204          ; 5557
RTN                  ; 5558
LDF 5557             ; 5559
RTN                  ; 5560
LD  2   204          ; 5561
LD  0   0            ; 5562
ST  2   204          ; 5563
RTN                  ; 5564
LDF 5561             ; 5565
RTN                  ; 5566
LD  2   205          ; 5567
RTN                  ; 5568
LDF 5567             ; 5569
RTN                  ; 5570
LD  2   205          ; 5571
LD  0   0            ; 5572
ST  2   205          ; 5573
RTN                  ; 5574
LDF 5571             ; 5575
RTN                  ; 5576
LD  2   206          ; 5577
RTN                  ; 5578
LDF 5577             ; 5579
RTN                  ; 5580
LD  2   206          ; 5581
LD  0   0            ; 5582
ST  2   206          ; 5583
RTN                  ; 5584
LDF 5581             ; 5585
RTN                  ; 5586
LD  2   207          ; 5587
RTN                  ; 5588
LDF 5587             ; 5589
RTN                  ; 5590
LD  2   207          ; 5591
LD  0   0            ; 5592
ST  2   207          ; 5593
RTN                  ; 5594
LDF 5591             ; 5595
RTN                  ; 5596
LD  2   208          ; 5597
RTN                  ; 5598
LDF 5597             ; 5599
RTN                  ; 5600
LD  2   208          ; 5601
LD  0   0            ; 5602
ST  2   208          ; 5603
RTN                  ; 5604
LDF 5601             ; 5605
RTN                  ; 5606
LD  2   209          ; 5607
RTN                  ; 5608
LDF 5607             ; 5609
RTN                  ; 5610
LD  2   209          ; 5611
LD  0   0            ; 5612
ST  2   209          ; 5613
RTN                  ; 5614
LDF 5611             ; 5615
RTN                  ; 5616
LD  2   210          ; 5617
RTN                  ; 5618
LDF 5617             ; 5619
RTN                  ; 5620
LD  2   210          ; 5621
LD  0   0            ; 5622
ST  2   210          ; 5623
RTN                  ; 5624
LDF 5621             ; 5625
RTN                  ; 5626
LD  2   211          ; 5627
RTN                  ; 5628
LDF 5627             ; 5629
RTN                  ; 5630
LD  2   211          ; 5631
LD  0   0            ; 5632
ST  2   211          ; 5633
RTN                  ; 5634
LDF 5631             ; 5635
RTN                  ; 5636
LD  2   212          ; 5637
RTN                  ; 5638
LDF 5637             ; 5639
RTN                  ; 5640
LD  2   212          ; 5641
LD  0   0            ; 5642
ST  2   212          ; 5643
RTN                  ; 5644
LDF 5641             ; 5645
RTN                  ; 5646
LD  2   213          ; 5647
RTN                  ; 5648
LDF 5647             ; 5649
RTN                  ; 5650
LD  2   213          ; 5651
LD  0   0            ; 5652
ST  2   213          ; 5653
RTN                  ; 5654
LDF 5651             ; 5655
RTN                  ; 5656
LD  2   214          ; 5657
RTN                  ; 5658
LDF 5657             ; 5659
RTN                  ; 5660
LD  2   214          ; 5661
LD  0   0            ; 5662
ST  2   214          ; 5663
RTN                  ; 5664
LDF 5661             ; 5665
RTN                  ; 5666
LD  2   215          ; 5667
RTN                  ; 5668
LDF 5667             ; 5669
RTN                  ; 5670
LD  2   215          ; 5671
LD  0   0            ; 5672
ST  2   215          ; 5673
RTN                  ; 5674
LDF 5671             ; 5675
RTN                  ; 5676
LD  2   216          ; 5677
RTN                  ; 5678
LDF 5677             ; 5679
RTN                  ; 5680
LD  2   216          ; 5681
LD  0   0            ; 5682
ST  2   216          ; 5683
RTN                  ; 5684
LDF 5681             ; 5685
RTN                  ; 5686
LD  2   217          ; 5687
RTN                  ; 5688
LDF 5687             ; 5689
RTN                  ; 5690
LD  2   217          ; 5691
LD  0   0            ; 5692
ST  2   217          ; 5693
RTN                  ; 5694
LDF 5691             ; 5695
RTN                  ; 5696
LD  2   218          ; 5697
RTN                  ; 5698
LDF 5697             ; 5699
RTN                  ; 5700
LD  2   218          ; 5701
LD  0   0            ; 5702
ST  2   218          ; 5703
RTN                  ; 5704
LDF 5701             ; 5705
RTN                  ; 5706
LD  2   219          ; 5707
RTN                  ; 5708
LDF 5707             ; 5709
RTN                  ; 5710
LD  2   219          ; 5711
LD  0   0            ; 5712
ST  2   219          ; 5713
RTN                  ; 5714
LDF 5711             ; 5715
RTN                  ; 5716
LD  2   220          ; 5717
RTN                  ; 5718
LDF 5717             ; 5719
RTN                  ; 5720
LD  2   220          ; 5721
LD  0   0            ; 5722
ST  2   220          ; 5723
RTN                  ; 5724
LDF 5721             ; 5725
RTN                  ; 5726
LD  2   221          ; 5727
RTN                  ; 5728
LDF 5727             ; 5729
RTN                  ; 5730
LD  2   221          ; 5731
LD  0   0            ; 5732
ST  2   221          ; 5733
RTN                  ; 5734
LDF 5731             ; 5735
RTN                  ; 5736
LD  2   222          ; 5737
RTN                  ; 5738
LDF 5737             ; 5739
RTN                  ; 5740
LD  2   222          ; 5741
LD  0   0            ; 5742
ST  2   222          ; 5743
RTN                  ; 5744
LDF 5741             ; 5745
RTN                  ; 5746
LD  2   223          ; 5747
RTN                  ; 5748
LDF 5747             ; 5749
RTN                  ; 5750
LD  2   223          ; 5751
LD  0   0            ; 5752
ST  2   223          ; 5753
RTN                  ; 5754
LDF 5751             ; 5755
RTN                  ; 5756
LD  2   224          ; 5757
RTN                  ; 5758
LDF 5757             ; 5759
RTN                  ; 5760
LD  2   224          ; 5761
LD  0   0            ; 5762
ST  2   224          ; 5763
RTN                  ; 5764
LDF 5761             ; 5765
RTN                  ; 5766
LD  2   225          ; 5767
RTN                  ; 5768
LDF 5767             ; 5769
RTN                  ; 5770
LD  2   225          ; 5771
LD  0   0            ; 5772
ST  2   225          ; 5773
RTN                  ; 5774
LDF 5771             ; 5775
RTN                  ; 5776
LD  2   226          ; 5777
RTN                  ; 5778
LDF 5777             ; 5779
RTN                  ; 5780
LD  2   226          ; 5781
LD  0   0            ; 5782
ST  2   226          ; 5783
RTN                  ; 5784
LDF 5781             ; 5785
RTN                  ; 5786
LD  2   227          ; 5787
RTN                  ; 5788
LDF 5787             ; 5789
RTN                  ; 5790
LD  2   227          ; 5791
LD  0   0            ; 5792
ST  2   227          ; 5793
RTN                  ; 5794
LDF 5791             ; 5795
RTN                  ; 5796
LD  2   228          ; 5797
RTN                  ; 5798
LDF 5797             ; 5799
RTN                  ; 5800
LD  2   228          ; 5801
LD  0   0            ; 5802
ST  2   228          ; 5803
RTN                  ; 5804
LDF 5801             ; 5805
RTN                  ; 5806
LD  2   229          ; 5807
RTN                  ; 5808
LDF 5807             ; 5809
RTN                  ; 5810
LD  2   229          ; 5811
LD  0   0            ; 5812
ST  2   229          ; 5813
RTN                  ; 5814
LDF 5811             ; 5815
RTN                  ; 5816
LD  2   230          ; 5817
RTN                  ; 5818
LDF 5817             ; 5819
RTN                  ; 5820
LD  2   230          ; 5821
LD  0   0            ; 5822
ST  2   230          ; 5823
RTN                  ; 5824
LDF 5821             ; 5825
RTN                  ; 5826
LD  2   231          ; 5827
RTN                  ; 5828
LDF 5827             ; 5829
RTN                  ; 5830
LD  2   231          ; 5831
LD  0   0            ; 5832
ST  2   231          ; 5833
RTN                  ; 5834
LDF 5831             ; 5835
RTN                  ; 5836
LD  2   232          ; 5837
RTN                  ; 5838
LDF 5837             ; 5839
RTN                  ; 5840
LD  2   232          ; 5841
LD  0   0            ; 5842
ST  2   232          ; 5843
RTN                  ; 5844
LDF 5841             ; 5845
RTN                  ; 5846
LD  2   233          ; 5847
RTN                  ; 5848
LDF 5847             ; 5849
RTN                  ; 5850
LD  2   233          ; 5851
LD  0   0            ; 5852
ST  2   233          ; 5853
RTN                  ; 5854
LDF 5851             ; 5855
RTN                  ; 5856
LD  2   234          ; 5857
RTN                  ; 5858
LDF 5857             ; 5859
RTN                  ; 5860
LD  2   234          ; 5861
LD  0   0            ; 5862
ST  2   234          ; 5863
RTN                  ; 5864
LDF 5861             ; 5865
RTN                  ; 5866
LD  2   235          ; 5867
RTN                  ; 5868
LDF 5867             ; 5869
RTN                  ; 5870
LD  2   235          ; 5871
LD  0   0            ; 5872
ST  2   235          ; 5873
RTN                  ; 5874
LDF 5871             ; 5875
RTN                  ; 5876
LD  2   236          ; 5877
RTN                  ; 5878
LDF 5877             ; 5879
RTN                  ; 5880
LD  2   236          ; 5881
LD  0   0            ; 5882
ST  2   236          ; 5883
RTN                  ; 5884
LDF 5881             ; 5885
RTN                  ; 5886
LD  2   237          ; 5887
RTN                  ; 5888
LDF 5887             ; 5889
RTN                  ; 5890
LD  2   237          ; 5891
LD  0   0            ; 5892
ST  2   237          ; 5893
RTN                  ; 5894
LDF 5891             ; 5895
RTN                  ; 5896
LD  2   238          ; 5897
RTN                  ; 5898
LDF 5897             ; 5899
RTN                  ; 5900
LD  2   238          ; 5901
LD  0   0            ; 5902
ST  2   238          ; 5903
RTN                  ; 5904
LDF 5901             ; 5905
RTN                  ; 5906
LD  2   239          ; 5907
RTN                  ; 5908
LDF 5907             ; 5909
RTN                  ; 5910
LD  2   239          ; 5911
LD  0   0            ; 5912
ST  2   239          ; 5913
RTN                  ; 5914
LDF 5911             ; 5915
RTN                  ; 5916
LD  2   240          ; 5917
RTN                  ; 5918
LDF 5917             ; 5919
RTN                  ; 5920
LD  2   240          ; 5921
LD  0   0            ; 5922
ST  2   240          ; 5923
RTN                  ; 5924
LDF 5921             ; 5925
RTN                  ; 5926
LD  2   241          ; 5927
RTN                  ; 5928
LDF 5927             ; 5929
RTN                  ; 5930
LD  2   241          ; 5931
LD  0   0            ; 5932
ST  2   241          ; 5933
RTN                  ; 5934
LDF 5931             ; 5935
RTN                  ; 5936
LD  2   242          ; 5937
RTN                  ; 5938
LDF 5937             ; 5939
RTN                  ; 5940
LD  2   242          ; 5941
LD  0   0            ; 5942
ST  2   242          ; 5943
RTN                  ; 5944
LDF 5941             ; 5945
RTN                  ; 5946
LD  2   243          ; 5947
RTN                  ; 5948
LDF 5947             ; 5949
RTN                  ; 5950
LD  2   243          ; 5951
LD  0   0            ; 5952
ST  2   243          ; 5953
RTN                  ; 5954
LDF 5951             ; 5955
RTN                  ; 5956
LD  2   244          ; 5957
RTN                  ; 5958
LDF 5957             ; 5959
RTN                  ; 5960
LD  2   244          ; 5961
LD  0   0            ; 5962
ST  2   244          ; 5963
RTN                  ; 5964
LDF 5961             ; 5965
RTN                  ; 5966
LD  2   245          ; 5967
RTN                  ; 5968
LDF 5967             ; 5969
RTN                  ; 5970
LD  2   245          ; 5971
LD  0   0            ; 5972
ST  2   245          ; 5973
RTN                  ; 5974
LDF 5971             ; 5975
RTN                  ; 5976
LD  2   246          ; 5977
RTN                  ; 5978
LDF 5977             ; 5979
RTN                  ; 5980
LD  2   246          ; 5981
LD  0   0            ; 5982
ST  2   246          ; 5983
RTN                  ; 5984
LDF 5981             ; 5985
RTN                  ; 5986
LD  2   247          ; 5987
RTN                  ; 5988
LDF 5987             ; 5989
RTN                  ; 5990
LD  2   247          ; 5991
LD  0   0            ; 5992
ST  2   247          ; 5993
RTN                  ; 5994
LDF 5991             ; 5995
RTN                  ; 5996
LD  2   248          ; 5997
RTN                  ; 5998
LDF 5997             ; 5999
RTN                  ; 6000
LD  2   248          ; 6001
LD  0   0            ; 6002
ST  2   248          ; 6003
RTN                  ; 6004
LDF 6001             ; 6005
RTN                  ; 6006
LD  2   249          ; 6007
RTN                  ; 6008
LDF 6007             ; 6009
RTN                  ; 6010
LD  2   249          ; 6011
LD  0   0            ; 6012
ST  2   249          ; 6013
RTN                  ; 6014
LDF 6011             ; 6015
RTN                  ; 6016
LD  2   250          ; 6017
RTN                  ; 6018
LDF 6017             ; 6019
RTN                  ; 6020
LD  2   250          ; 6021
LD  0   0            ; 6022
ST  2   250          ; 6023
RTN                  ; 6024
LDF 6021             ; 6025
RTN                  ; 6026
LD  2   251          ; 6027
RTN                  ; 6028
LDF 6027             ; 6029
RTN                  ; 6030
LD  2   251          ; 6031
LD  0   0            ; 6032
ST  2   251          ; 6033
RTN                  ; 6034
LDF 6031             ; 6035
RTN                  ; 6036
LD  2   252          ; 6037
RTN                  ; 6038
LDF 6037             ; 6039
RTN                  ; 6040
LD  2   252          ; 6041
LD  0   0            ; 6042
ST  2   252          ; 6043
RTN                  ; 6044
LDF 6041             ; 6045
RTN                  ; 6046
LD  2   253          ; 6047
RTN                  ; 6048
LDF 6047             ; 6049
RTN                  ; 6050
LD  2   253          ; 6051
LD  0   0            ; 6052
ST  2   253          ; 6053
RTN                  ; 6054
LDF 6051             ; 6055
RTN                  ; 6056
LD  2   254          ; 6057
RTN                  ; 6058
LDF 6057             ; 6059
RTN                  ; 6060
LD  2   254          ; 6061
LD  0   0            ; 6062
ST  2   254          ; 6063
RTN                  ; 6064
LDF 6061             ; 6065
RTN                  ; 6066
LD  2   255          ; 6067
RTN                  ; 6068
LDF 6067             ; 6069
RTN                  ; 6070
LD  2   255          ; 6071
LD  0   0            ; 6072
ST  2   255          ; 6073
RTN                  ; 6074
LDF 6071             ; 6075
RTN                  ; 6076
LDC 0               ; generated from native: sample_map ; 6077
LDC 0                ; 6078
LDC 0                ; 6079
LDC 0                ; 6080
LDC 0                ; 6081
LDC 0                ; 6082
LDC 0                ; 6083
LDC 0                ; 6084
LDC 0                ; 6085
LDC 0                ; 6086
LDC 0                ; 6087
LDC 0                ; 6088
LDC 0                ; 6089
LDC 0                ; 6090
LDC 0                ; 6091
LDC 0                ; 6092
LDC 0                ; 6093
LDC 0                ; 6094
LDC 0                ; 6095
LDC 0                ; 6096
LDC 0                ; 6097
LDC 0                ; 6098
LDC 0                ; 6099
LDC 0                ; 6100
CONS                 ; 6101
CONS                 ; 6102
CONS                 ; 6103
CONS                 ; 6104
CONS                 ; 6105
CONS                 ; 6106
CONS                 ; 6107
CONS                 ; 6108
CONS                 ; 6109
CONS                 ; 6110
CONS                 ; 6111
CONS                 ; 6112
CONS                 ; 6113
CONS                 ; 6114
CONS                 ; 6115
CONS                 ; 6116
CONS                 ; 6117
CONS                 ; 6118
CONS                 ; 6119
CONS                 ; 6120
CONS                 ; 6121
CONS                 ; 6122
CONS                 ; 6123
LDC 0                ; 6124
LDC 2                ; 6125
LDC 2                ; 6126
LDC 2                ; 6127
LDC 2                ; 6128
LDC 2                ; 6129
LDC 2                ; 6130
LDC 2                ; 6131
LDC 2                ; 6132
LDC 2                ; 6133
LDC 2                ; 6134
LDC 0                ; 6135
LDC 2                ; 6136
LDC 2                ; 6137
LDC 2                ; 6138
LDC 2                ; 6139
LDC 2                ; 6140
LDC 2                ; 6141
LDC 2                ; 6142
LDC 2                ; 6143
LDC 2                ; 6144
LDC 2                ; 6145
LDC 0                ; 6146
LDC 0                ; 6147
CONS                 ; 6148
CONS                 ; 6149
CONS                 ; 6150
CONS                 ; 6151
CONS                 ; 6152
CONS                 ; 6153
CONS                 ; 6154
CONS                 ; 6155
CONS                 ; 6156
CONS                 ; 6157
CONS                 ; 6158
CONS                 ; 6159
CONS                 ; 6160
CONS                 ; 6161
CONS                 ; 6162
CONS                 ; 6163
CONS                 ; 6164
CONS                 ; 6165
CONS                 ; 6166
CONS                 ; 6167
CONS                 ; 6168
CONS                 ; 6169
CONS                 ; 6170
LDC 0                ; 6171
LDC 2                ; 6172
LDC 0                ; 6173
LDC 0                ; 6174
LDC 0                ; 6175
LDC 2                ; 6176
LDC 0                ; 6177
LDC 0                ; 6178
LDC 0                ; 6179
LDC 0                ; 6180
LDC 2                ; 6181
LDC 0                ; 6182
LDC 2                ; 6183
LDC 0                ; 6184
LDC 0                ; 6185
LDC 0                ; 6186
LDC 0                ; 6187
LDC 2                ; 6188
LDC 0                ; 6189
LDC 0                ; 6190
LDC 0                ; 6191
LDC 2                ; 6192
LDC 0                ; 6193
LDC 0                ; 6194
CONS                 ; 6195
CONS                 ; 6196
CONS                 ; 6197
CONS                 ; 6198
CONS                 ; 6199
CONS                 ; 6200
CONS                 ; 6201
CONS                 ; 6202
CONS                 ; 6203
CONS                 ; 6204
CONS                 ; 6205
CONS                 ; 6206
CONS                 ; 6207
CONS                 ; 6208
CONS                 ; 6209
CONS                 ; 6210
CONS                 ; 6211
CONS                 ; 6212
CONS                 ; 6213
CONS                 ; 6214
CONS                 ; 6215
CONS                 ; 6216
CONS                 ; 6217
LDC 0                ; 6218
LDC 3                ; 6219
LDC 0                ; 6220
LDC 0                ; 6221
LDC 0                ; 6222
LDC 2                ; 6223
LDC 0                ; 6224
LDC 0                ; 6225
LDC 0                ; 6226
LDC 0                ; 6227
LDC 2                ; 6228
LDC 0                ; 6229
LDC 2                ; 6230
LDC 0                ; 6231
LDC 0                ; 6232
LDC 0                ; 6233
LDC 0                ; 6234
LDC 2                ; 6235
LDC 0                ; 6236
LDC 0                ; 6237
LDC 0                ; 6238
LDC 3                ; 6239
LDC 0                ; 6240
LDC 0                ; 6241
CONS                 ; 6242
CONS                 ; 6243
CONS                 ; 6244
CONS                 ; 6245
CONS                 ; 6246
CONS                 ; 6247
CONS                 ; 6248
CONS                 ; 6249
CONS                 ; 6250
CONS                 ; 6251
CONS                 ; 6252
CONS                 ; 6253
CONS                 ; 6254
CONS                 ; 6255
CONS                 ; 6256
CONS                 ; 6257
CONS                 ; 6258
CONS                 ; 6259
CONS                 ; 6260
CONS                 ; 6261
CONS                 ; 6262
CONS                 ; 6263
CONS                 ; 6264
LDC 0                ; 6265
LDC 2                ; 6266
LDC 2                ; 6267
LDC 2                ; 6268
LDC 2                ; 6269
LDC 2                ; 6270
LDC 2                ; 6271
LDC 2                ; 6272
LDC 2                ; 6273
LDC 2                ; 6274
LDC 2                ; 6275
LDC 2                ; 6276
LDC 2                ; 6277
LDC 2                ; 6278
LDC 2                ; 6279
LDC 2                ; 6280
LDC 2                ; 6281
LDC 2                ; 6282
LDC 2                ; 6283
LDC 2                ; 6284
LDC 2                ; 6285
LDC 2                ; 6286
LDC 0                ; 6287
LDC 0                ; 6288
CONS                 ; 6289
CONS                 ; 6290
CONS                 ; 6291
CONS                 ; 6292
CONS                 ; 6293
CONS                 ; 6294
CONS                 ; 6295
CONS                 ; 6296
CONS                 ; 6297
CONS                 ; 6298
CONS                 ; 6299
CONS                 ; 6300
CONS                 ; 6301
CONS                 ; 6302
CONS                 ; 6303
CONS                 ; 6304
CONS                 ; 6305
CONS                 ; 6306
CONS                 ; 6307
CONS                 ; 6308
CONS                 ; 6309
CONS                 ; 6310
CONS                 ; 6311
LDC 0                ; 6312
LDC 2                ; 6313
LDC 0                ; 6314
LDC 0                ; 6315
LDC 0                ; 6316
LDC 2                ; 6317
LDC 0                ; 6318
LDC 2                ; 6319
LDC 0                ; 6320
LDC 0                ; 6321
LDC 0                ; 6322
LDC 0                ; 6323
LDC 0                ; 6324
LDC 0                ; 6325
LDC 0                ; 6326
LDC 2                ; 6327
LDC 0                ; 6328
LDC 2                ; 6329
LDC 0                ; 6330
LDC 0                ; 6331
LDC 0                ; 6332
LDC 2                ; 6333
LDC 0                ; 6334
LDC 0                ; 6335
CONS                 ; 6336
CONS                 ; 6337
CONS                 ; 6338
CONS                 ; 6339
CONS                 ; 6340
CONS                 ; 6341
CONS                 ; 6342
CONS                 ; 6343
CONS                 ; 6344
CONS                 ; 6345
CONS                 ; 6346
CONS                 ; 6347
CONS                 ; 6348
CONS                 ; 6349
CONS                 ; 6350
CONS                 ; 6351
CONS                 ; 6352
CONS                 ; 6353
CONS                 ; 6354
CONS                 ; 6355
CONS                 ; 6356
CONS                 ; 6357
CONS                 ; 6358
LDC 0                ; 6359
LDC 2                ; 6360
LDC 2                ; 6361
LDC 2                ; 6362
LDC 2                ; 6363
LDC 2                ; 6364
LDC 0                ; 6365
LDC 2                ; 6366
LDC 2                ; 6367
LDC 2                ; 6368
LDC 2                ; 6369
LDC 0                ; 6370
LDC 2                ; 6371
LDC 2                ; 6372
LDC 2                ; 6373
LDC 2                ; 6374
LDC 0                ; 6375
LDC 2                ; 6376
LDC 2                ; 6377
LDC 2                ; 6378
LDC 2                ; 6379
LDC 2                ; 6380
LDC 0                ; 6381
LDC 0                ; 6382
CONS                 ; 6383
CONS                 ; 6384
CONS                 ; 6385
CONS                 ; 6386
CONS                 ; 6387
CONS                 ; 6388
CONS                 ; 6389
CONS                 ; 6390
CONS                 ; 6391
CONS                 ; 6392
CONS                 ; 6393
CONS                 ; 6394
CONS                 ; 6395
CONS                 ; 6396
CONS                 ; 6397
CONS                 ; 6398
CONS                 ; 6399
CONS                 ; 6400
CONS                 ; 6401
CONS                 ; 6402
CONS                 ; 6403
CONS                 ; 6404
CONS                 ; 6405
LDC 0                ; 6406
LDC 0                ; 6407
LDC 0                ; 6408
LDC 0                ; 6409
LDC 0                ; 6410
LDC 2                ; 6411
LDC 0                ; 6412
LDC 0                ; 6413
LDC 0                ; 6414
LDC 0                ; 6415
LDC 1                ; 6416
LDC 0                ; 6417
LDC 1                ; 6418
LDC 0                ; 6419
LDC 0                ; 6420
LDC 0                ; 6421
LDC 0                ; 6422
LDC 2                ; 6423
LDC 0                ; 6424
LDC 0                ; 6425
LDC 0                ; 6426
LDC 0                ; 6427
LDC 0                ; 6428
LDC 0                ; 6429
CONS                 ; 6430
CONS                 ; 6431
CONS                 ; 6432
CONS                 ; 6433
CONS                 ; 6434
CONS                 ; 6435
CONS                 ; 6436
CONS                 ; 6437
CONS                 ; 6438
CONS                 ; 6439
CONS                 ; 6440
CONS                 ; 6441
CONS                 ; 6442
CONS                 ; 6443
CONS                 ; 6444
CONS                 ; 6445
CONS                 ; 6446
CONS                 ; 6447
CONS                 ; 6448
CONS                 ; 6449
CONS                 ; 6450
CONS                 ; 6451
CONS                 ; 6452
LDC 0                ; 6453
LDC 1                ; 6454
LDC 1                ; 6455
LDC 1                ; 6456
LDC 0                ; 6457
LDC 2                ; 6458
LDC 0                ; 6459
LDC 1                ; 6460
LDC 1                ; 6461
LDC 1                ; 6462
LDC 1                ; 6463
LDC 6                ; 6464
LDC 1                ; 6465
LDC 1                ; 6466
LDC 1                ; 6467
LDC 1                ; 6468
LDC 0                ; 6469
LDC 2                ; 6470
LDC 0                ; 6471
LDC 1                ; 6472
LDC 1                ; 6473
LDC 1                ; 6474
LDC 0                ; 6475
LDC 0                ; 6476
CONS                 ; 6477
CONS                 ; 6478
CONS                 ; 6479
CONS                 ; 6480
CONS                 ; 6481
CONS                 ; 6482
CONS                 ; 6483
CONS                 ; 6484
CONS                 ; 6485
CONS                 ; 6486
CONS                 ; 6487
CONS                 ; 6488
CONS                 ; 6489
CONS                 ; 6490
CONS                 ; 6491
CONS                 ; 6492
CONS                 ; 6493
CONS                 ; 6494
CONS                 ; 6495
CONS                 ; 6496
CONS                 ; 6497
CONS                 ; 6498
CONS                 ; 6499
LDC 0                ; 6500
LDC 0                ; 6501
LDC 0                ; 6502
LDC 0                ; 6503
LDC 0                ; 6504
LDC 2                ; 6505
LDC 0                ; 6506
LDC 1                ; 6507
LDC 0                ; 6508
LDC 0                ; 6509
LDC 0                ; 6510
LDC 1                ; 6511
LDC 0                ; 6512
LDC 0                ; 6513
LDC 0                ; 6514
LDC 1                ; 6515
LDC 0                ; 6516
LDC 2                ; 6517
LDC 0                ; 6518
LDC 0                ; 6519
LDC 0                ; 6520
LDC 0                ; 6521
LDC 0                ; 6522
LDC 0                ; 6523
CONS                 ; 6524
CONS                 ; 6525
CONS                 ; 6526
CONS                 ; 6527
CONS                 ; 6528
CONS                 ; 6529
CONS                 ; 6530
CONS                 ; 6531
CONS                 ; 6532
CONS                 ; 6533
CONS                 ; 6534
CONS                 ; 6535
CONS                 ; 6536
CONS                 ; 6537
CONS                 ; 6538
CONS                 ; 6539
CONS                 ; 6540
CONS                 ; 6541
CONS                 ; 6542
CONS                 ; 6543
CONS                 ; 6544
CONS                 ; 6545
CONS                 ; 6546
LDC 0                ; 6547
LDC 1                ; 6548
LDC 1                ; 6549
LDC 1                ; 6550
LDC 1                ; 6551
LDC 2                ; 6552
LDC 1                ; 6553
LDC 1                ; 6554
LDC 0                ; 6555
LDC 1                ; 6556
LDC 6                ; 6557
LDC 6                ; 6558
LDC 6                ; 6559
LDC 1                ; 6560
LDC 0                ; 6561
LDC 1                ; 6562
LDC 1                ; 6563
LDC 2                ; 6564
LDC 1                ; 6565
LDC 1                ; 6566
LDC 1                ; 6567
LDC 1                ; 6568
LDC 0                ; 6569
LDC 0                ; 6570
CONS                 ; 6571
CONS                 ; 6572
CONS                 ; 6573
CONS                 ; 6574
CONS                 ; 6575
CONS                 ; 6576
CONS                 ; 6577
CONS                 ; 6578
CONS                 ; 6579
CONS                 ; 6580
CONS                 ; 6581
CONS                 ; 6582
CONS                 ; 6583
CONS                 ; 6584
CONS                 ; 6585
CONS                 ; 6586
CONS                 ; 6587
CONS                 ; 6588
CONS                 ; 6589
CONS                 ; 6590
CONS                 ; 6591
CONS                 ; 6592
CONS                 ; 6593
LDC 0                ; 6594
LDC 0                ; 6595
LDC 0                ; 6596
LDC 0                ; 6597
LDC 0                ; 6598
LDC 2                ; 6599
LDC 0                ; 6600
LDC 1                ; 6601
LDC 0                ; 6602
LDC 0                ; 6603
LDC 0                ; 6604
LDC 0                ; 6605
LDC 0                ; 6606
LDC 0                ; 6607
LDC 0                ; 6608
LDC 1                ; 6609
LDC 0                ; 6610
LDC 2                ; 6611
LDC 0                ; 6612
LDC 0                ; 6613
LDC 0                ; 6614
LDC 0                ; 6615
LDC 0                ; 6616
LDC 0                ; 6617
CONS                 ; 6618
CONS                 ; 6619
CONS                 ; 6620
CONS                 ; 6621
CONS                 ; 6622
CONS                 ; 6623
CONS                 ; 6624
CONS                 ; 6625
CONS                 ; 6626
CONS                 ; 6627
CONS                 ; 6628
CONS                 ; 6629
CONS                 ; 6630
CONS                 ; 6631
CONS                 ; 6632
CONS                 ; 6633
CONS                 ; 6634
CONS                 ; 6635
CONS                 ; 6636
CONS                 ; 6637
CONS                 ; 6638
CONS                 ; 6639
CONS                 ; 6640
LDC 0                ; 6641
LDC 1                ; 6642
LDC 1                ; 6643
LDC 1                ; 6644
LDC 0                ; 6645
LDC 2                ; 6646
LDC 0                ; 6647
LDC 1                ; 6648
LDC 1                ; 6649
LDC 1                ; 6650
LDC 1                ; 6651
LDC 4                ; 6652
LDC 1                ; 6653
LDC 1                ; 6654
LDC 1                ; 6655
LDC 1                ; 6656
LDC 0                ; 6657
LDC 2                ; 6658
LDC 0                ; 6659
LDC 1                ; 6660
LDC 1                ; 6661
LDC 1                ; 6662
LDC 0                ; 6663
LDC 0                ; 6664
CONS                 ; 6665
CONS                 ; 6666
CONS                 ; 6667
CONS                 ; 6668
CONS                 ; 6669
CONS                 ; 6670
CONS                 ; 6671
CONS                 ; 6672
CONS                 ; 6673
CONS                 ; 6674
CONS                 ; 6675
CONS                 ; 6676
CONS                 ; 6677
CONS                 ; 6678
CONS                 ; 6679
CONS                 ; 6680
CONS                 ; 6681
CONS                 ; 6682
CONS                 ; 6683
CONS                 ; 6684
CONS                 ; 6685
CONS                 ; 6686
CONS                 ; 6687
LDC 0                ; 6688
LDC 0                ; 6689
LDC 0                ; 6690
LDC 0                ; 6691
LDC 0                ; 6692
LDC 2                ; 6693
LDC 0                ; 6694
LDC 1                ; 6695
LDC 0                ; 6696
LDC 0                ; 6697
LDC 0                ; 6698
LDC 0                ; 6699
LDC 0                ; 6700
LDC 0                ; 6701
LDC 0                ; 6702
LDC 1                ; 6703
LDC 0                ; 6704
LDC 2                ; 6705
LDC 0                ; 6706
LDC 0                ; 6707
LDC 0                ; 6708
LDC 0                ; 6709
LDC 0                ; 6710
LDC 0                ; 6711
CONS                 ; 6712
CONS                 ; 6713
CONS                 ; 6714
CONS                 ; 6715
CONS                 ; 6716
CONS                 ; 6717
CONS                 ; 6718
CONS                 ; 6719
CONS                 ; 6720
CONS                 ; 6721
CONS                 ; 6722
CONS                 ; 6723
CONS                 ; 6724
CONS                 ; 6725
CONS                 ; 6726
CONS                 ; 6727
CONS                 ; 6728
CONS                 ; 6729
CONS                 ; 6730
CONS                 ; 6731
CONS                 ; 6732
CONS                 ; 6733
CONS                 ; 6734
LDC 0                ; 6735
LDC 2                ; 6736
LDC 2                ; 6737
LDC 2                ; 6738
LDC 2                ; 6739
LDC 2                ; 6740
LDC 2                ; 6741
LDC 2                ; 6742
LDC 2                ; 6743
LDC 2                ; 6744
LDC 2                ; 6745
LDC 0                ; 6746
LDC 2                ; 6747
LDC 2                ; 6748
LDC 2                ; 6749
LDC 2                ; 6750
LDC 2                ; 6751
LDC 2                ; 6752
LDC 2                ; 6753
LDC 2                ; 6754
LDC 2                ; 6755
LDC 2                ; 6756
LDC 0                ; 6757
LDC 0                ; 6758
CONS                 ; 6759
CONS                 ; 6760
CONS                 ; 6761
CONS                 ; 6762
CONS                 ; 6763
CONS                 ; 6764
CONS                 ; 6765
CONS                 ; 6766
CONS                 ; 6767
CONS                 ; 6768
CONS                 ; 6769
CONS                 ; 6770
CONS                 ; 6771
CONS                 ; 6772
CONS                 ; 6773
CONS                 ; 6774
CONS                 ; 6775
CONS                 ; 6776
CONS                 ; 6777
CONS                 ; 6778
CONS                 ; 6779
CONS                 ; 6780
CONS                 ; 6781
LDC 0                ; 6782
LDC 2                ; 6783
LDC 0                ; 6784
LDC 0                ; 6785
LDC 0                ; 6786
LDC 2                ; 6787
LDC 0                ; 6788
LDC 0                ; 6789
LDC 0                ; 6790
LDC 0                ; 6791
LDC 2                ; 6792
LDC 0                ; 6793
LDC 2                ; 6794
LDC 0                ; 6795
LDC 0                ; 6796
LDC 0                ; 6797
LDC 0                ; 6798
LDC 2                ; 6799
LDC 0                ; 6800
LDC 0                ; 6801
LDC 0                ; 6802
LDC 2                ; 6803
LDC 0                ; 6804
LDC 0                ; 6805
CONS                 ; 6806
CONS                 ; 6807
CONS                 ; 6808
CONS                 ; 6809
CONS                 ; 6810
CONS                 ; 6811
CONS                 ; 6812
CONS                 ; 6813
CONS                 ; 6814
CONS                 ; 6815
CONS                 ; 6816
CONS                 ; 6817
CONS                 ; 6818
CONS                 ; 6819
CONS                 ; 6820
CONS                 ; 6821
CONS                 ; 6822
CONS                 ; 6823
CONS                 ; 6824
CONS                 ; 6825
CONS                 ; 6826
CONS                 ; 6827
CONS                 ; 6828
LDC 0                ; 6829
LDC 3                ; 6830
LDC 2                ; 6831
LDC 2                ; 6832
LDC 0                ; 6833
LDC 2                ; 6834
LDC 2                ; 6835
LDC 2                ; 6836
LDC 2                ; 6837
LDC 2                ; 6838
LDC 2                ; 6839
LDC 5                ; 6840
LDC 2                ; 6841
LDC 2                ; 6842
LDC 2                ; 6843
LDC 2                ; 6844
LDC 2                ; 6845
LDC 2                ; 6846
LDC 0                ; 6847
LDC 2                ; 6848
LDC 2                ; 6849
LDC 3                ; 6850
LDC 0                ; 6851
LDC 0                ; 6852
CONS                 ; 6853
CONS                 ; 6854
CONS                 ; 6855
CONS                 ; 6856
CONS                 ; 6857
CONS                 ; 6858
CONS                 ; 6859
CONS                 ; 6860
CONS                 ; 6861
CONS                 ; 6862
CONS                 ; 6863
CONS                 ; 6864
CONS                 ; 6865
CONS                 ; 6866
CONS                 ; 6867
CONS                 ; 6868
CONS                 ; 6869
CONS                 ; 6870
CONS                 ; 6871
CONS                 ; 6872
CONS                 ; 6873
CONS                 ; 6874
CONS                 ; 6875
LDC 0                ; 6876
LDC 0                ; 6877
LDC 0                ; 6878
LDC 2                ; 6879
LDC 0                ; 6880
LDC 2                ; 6881
LDC 0                ; 6882
LDC 2                ; 6883
LDC 0                ; 6884
LDC 0                ; 6885
LDC 0                ; 6886
LDC 0                ; 6887
LDC 0                ; 6888
LDC 0                ; 6889
LDC 0                ; 6890
LDC 2                ; 6891
LDC 0                ; 6892
LDC 2                ; 6893
LDC 0                ; 6894
LDC 2                ; 6895
LDC 0                ; 6896
LDC 0                ; 6897
LDC 0                ; 6898
LDC 0                ; 6899
CONS                 ; 6900
CONS                 ; 6901
CONS                 ; 6902
CONS                 ; 6903
CONS                 ; 6904
CONS                 ; 6905
CONS                 ; 6906
CONS                 ; 6907
CONS                 ; 6908
CONS                 ; 6909
CONS                 ; 6910
CONS                 ; 6911
CONS                 ; 6912
CONS                 ; 6913
CONS                 ; 6914
CONS                 ; 6915
CONS                 ; 6916
CONS                 ; 6917
CONS                 ; 6918
CONS                 ; 6919
CONS                 ; 6920
CONS                 ; 6921
CONS                 ; 6922
LDC 0                ; 6923
LDC 2                ; 6924
LDC 2                ; 6925
LDC 2                ; 6926
LDC 2                ; 6927
LDC 2                ; 6928
LDC 0                ; 6929
LDC 2                ; 6930
LDC 2                ; 6931
LDC 2                ; 6932
LDC 2                ; 6933
LDC 0                ; 6934
LDC 2                ; 6935
LDC 2                ; 6936
LDC 2                ; 6937
LDC 2                ; 6938
LDC 0                ; 6939
LDC 2                ; 6940
LDC 2                ; 6941
LDC 2                ; 6942
LDC 2                ; 6943
LDC 2                ; 6944
LDC 0                ; 6945
LDC 0                ; 6946
CONS                 ; 6947
CONS                 ; 6948
CONS                 ; 6949
CONS                 ; 6950
CONS                 ; 6951
CONS                 ; 6952
CONS                 ; 6953
CONS                 ; 6954
CONS                 ; 6955
CONS                 ; 6956
CONS                 ; 6957
CONS                 ; 6958
CONS                 ; 6959
CONS                 ; 6960
CONS                 ; 6961
CONS                 ; 6962
CONS                 ; 6963
CONS                 ; 6964
CONS                 ; 6965
CONS                 ; 6966
CONS                 ; 6967
CONS                 ; 6968
CONS                 ; 6969
LDC 0                ; 6970
LDC 2                ; 6971
LDC 0                ; 6972
LDC 0                ; 6973
LDC 0                ; 6974
LDC 0                ; 6975
LDC 0                ; 6976
LDC 0                ; 6977
LDC 0                ; 6978
LDC 0                ; 6979
LDC 2                ; 6980
LDC 0                ; 6981
LDC 2                ; 6982
LDC 0                ; 6983
LDC 0                ; 6984
LDC 0                ; 6985
LDC 0                ; 6986
LDC 0                ; 6987
LDC 0                ; 6988
LDC 0                ; 6989
LDC 0                ; 6990
LDC 2                ; 6991
LDC 0                ; 6992
LDC 0                ; 6993
CONS                 ; 6994
CONS                 ; 6995
CONS                 ; 6996
CONS                 ; 6997
CONS                 ; 6998
CONS                 ; 6999
CONS                 ; 7000
CONS                 ; 7001
CONS                 ; 7002
CONS                 ; 7003
CONS                 ; 7004
CONS                 ; 7005
CONS                 ; 7006
CONS                 ; 7007
CONS                 ; 7008
CONS                 ; 7009
CONS                 ; 7010
CONS                 ; 7011
CONS                 ; 7012
CONS                 ; 7013
CONS                 ; 7014
CONS                 ; 7015
CONS                 ; 7016
LDC 0                ; 7017
LDC 2                ; 7018
LDC 2                ; 7019
LDC 2                ; 7020
LDC 2                ; 7021
LDC 2                ; 7022
LDC 2                ; 7023
LDC 2                ; 7024
LDC 2                ; 7025
LDC 2                ; 7026
LDC 2                ; 7027
LDC 2                ; 7028
LDC 2                ; 7029
LDC 2                ; 7030
LDC 2                ; 7031
LDC 2                ; 7032
LDC 2                ; 7033
LDC 2                ; 7034
LDC 2                ; 7035
LDC 2                ; 7036
LDC 2                ; 7037
LDC 2                ; 7038
LDC 0                ; 7039
LDC 0                ; 7040
CONS                 ; 7041
CONS                 ; 7042
CONS                 ; 7043
CONS                 ; 7044
CONS                 ; 7045
CONS                 ; 7046
CONS                 ; 7047
CONS                 ; 7048
CONS                 ; 7049
CONS                 ; 7050
CONS                 ; 7051
CONS                 ; 7052
CONS                 ; 7053
CONS                 ; 7054
CONS                 ; 7055
CONS                 ; 7056
CONS                 ; 7057
CONS                 ; 7058
CONS                 ; 7059
CONS                 ; 7060
CONS                 ; 7061
CONS                 ; 7062
CONS                 ; 7063
LDC 0                ; 7064
LDC 0                ; 7065
LDC 0                ; 7066
LDC 0                ; 7067
LDC 0                ; 7068
LDC 0                ; 7069
LDC 0                ; 7070
LDC 0                ; 7071
LDC 0                ; 7072
LDC 0                ; 7073
LDC 0                ; 7074
LDC 0                ; 7075
LDC 0                ; 7076
LDC 0                ; 7077
LDC 0                ; 7078
LDC 0                ; 7079
LDC 0                ; 7080
LDC 0                ; 7081
LDC 0                ; 7082
LDC 0                ; 7083
LDC 0                ; 7084
LDC 0                ; 7085
LDC 0                ; 7086
LDC 0                ; 7087
CONS                 ; 7088
CONS                 ; 7089
CONS                 ; 7090
CONS                 ; 7091
CONS                 ; 7092
CONS                 ; 7093
CONS                 ; 7094
CONS                 ; 7095
CONS                 ; 7096
CONS                 ; 7097
CONS                 ; 7098
CONS                 ; 7099
CONS                 ; 7100
CONS                 ; 7101
CONS                 ; 7102
CONS                 ; 7103
CONS                 ; 7104
CONS                 ; 7105
CONS                 ; 7106
CONS                 ; 7107
CONS                 ; 7108
CONS                 ; 7109
CONS                 ; 7110
LDC 0                ; 7111
CONS                 ; 7112
CONS                 ; 7113
CONS                 ; 7114
CONS                 ; 7115
CONS                 ; 7116
CONS                 ; 7117
CONS                 ; 7118
CONS                 ; 7119
CONS                 ; 7120
CONS                 ; 7121
CONS                 ; 7122
CONS                 ; 7123
CONS                 ; 7124
CONS                 ; 7125
CONS                 ; 7126
CONS                 ; 7127
CONS                 ; 7128
CONS                 ; 7129
CONS                 ; 7130
CONS                 ; 7131
CONS                 ; 7132
CONS                 ; 7133
LDC 0                ; 7134
LDC 11               ; 7135
LDC 16               ; 7136
CONS                 ; 7137
LDC 2                ; 7138
LDC 3                ; 7139
LDC 0                ; 7140
CONS                 ; 7141
CONS                 ; 7142
CONS                 ; 7143
CONS                 ; 7144
LDC 0                ; 7145
LDC 11               ; 7146
LDC 8                ; 7147
CONS                 ; 7148
LDC 2                ; 7149
CONS                 ; 7150
CONS                 ; 7151
LDC 0                ; 7152
LDC 10               ; 7153
LDC 10               ; 7154
CONS                 ; 7155
LDC 2                ; 7156
CONS                 ; 7157
CONS                 ; 7158
LDC 0                ; 7159
LDC 11               ; 7160
LDC 10               ; 7161
CONS                 ; 7162
LDC 2                ; 7163
CONS                 ; 7164
CONS                 ; 7165
LDC 0                ; 7166
LDC 12               ; 7167
LDC 10               ; 7168
CONS                 ; 7169
LDC 2                ; 7170
CONS                 ; 7171
CONS                 ; 7172
LDC 0                ; 7173
CONS                 ; 7174
CONS                 ; 7175
CONS                 ; 7176
CONS                 ; 7177
LDC 0                ; 7178
CONS                 ; 7179
CONS                 ; 7180
CONS                 ; 7181
RTN                  ; 7182
LDC    1000001      ;  <== entryCPUEmulator  [] (as blk) ; 7183
DBUG                 ; 7184
LDF    6077         ;  @sample_map ; 7185
AP     0             ; 7186
ST     0 0           ; 7187
LDC    1000002      ; just constant from code ; 7188
DBUG                 ; 7189
LD     0 0          ; var ws ; 7190
DBUG                 ; 7191
BRK                  ; 7192
LD     0 0          ; var ws ; 7193
LDC 0               ; local var space ; 7194
LDC 0               ; local var space ; 7195
LDC 0               ; local var space ; 7196
LDF    7218         ;  @entryFactual ; 7197
AP     4             ; 7198
ST     0 1           ; 7199
LDC    1000003      ; just constant from code ; 7200
DBUG                 ; 7201
LD     0 0          ; var ws ; 7202
DBUG                 ; 7203
BRK                  ; 7204
LD     0 1          ; var initialDone ; 7205
CDR                 ; generateTupleAccess total=2 pos=1 ; 7206
ST     0 2           ; 7207
LD     0 1          ; var initialDone ; 7208
CAR                 ; generateTupleAccess total=2 pos=0 ; 7209
ST     0 3           ; 7210
LD     0 3          ; var a ; 7211
LD     0 0          ; var ws ; 7212
LD     0 2          ; var b ; 7213
AP     2             ; 7214
ST     0 4           ; 7215
LDC    0            ; NULL literal ; 7216
RTN                  ; 7217
LD     0 0          ;  <== entryFactual  [WorldState ws] (as blk) ; 7218
DBUG                 ; 7219
LD     0 0          ; var ws ; 7220
CAR                 ; generateTupleAccess total=4 pos=0 ; 7221
LDF    7774         ;  @createInitialState ; 7222
AP     1             ; 7223
ST     0 1           ; 7224
LD     0 1          ; var initialState ; 7225
CAR                 ; generateTupleAccess total=4 pos=0 ; 7226
CDR                 ; generateTupleAccess total=6 pos=5 ; 7227
CDR                  ; 7228
CDR                  ; 7229
CDR                  ; 7230
CDR                  ; 7231
LDC    1            ; just constant from code ; 7232
LDF    422          ;  @list_item ; 7233
AP     2             ; 7234
ST     0 2           ; 7235
LDC    0            ; just constant from code ; 7236
LDC    100          ; VMExtras.GET_READER ; 7237
LDC    1            ; just constant from code ; 7238
LD     0 2          ; var newRowAccessor ; 7239
AP     2             ; 7240
AP     1             ; 7241
ST     0 3           ; 7242
LD     0 1          ; var initialState ; 7243
LDF    9469         ;  @lambda_1012 ; 7244
CONS                 ; 7245
RTN                  ; 7246
LDF    1200         ;  <== test01  [] (as blk), ALSO: @array_256 ; 7247
AP     0             ; 7248
ST     0 0           ; 7249
LDC    100          ; VMExtras.GET_READER ; 7250
LDC    22           ; just constant from code ; 7251
LD     0 0          ; var accessor ; 7252
AP     2             ; 7253
ST     0 1           ; 7254
LDC    101          ; VMExtras.GET_WRITER ; 7255
LDC    22           ; just constant from code ; 7256
LD     0 0          ; var accessor ; 7257
AP     2             ; 7258
ST     0 2           ; 7259
LDC    77           ; just constant from code ; 7260
LD     0 2          ; var writer101 ; 7261
AP     1             ; 7262
ST     0 3           ; 7263
LDC    0            ; just constant from code ; 7264
LD     0 1          ; var reader101 ; 7265
AP     1             ; 7266
ST     0 4           ; 7267
LDC    0            ; just constant from code ; 7268
RTN                  ; 7269
LD     0 0          ;  <== collectEdgePills  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 7270
CDR                 ; generateTupleAccess total=6 pos=3 ; 7271
CDR                  ; 7272
CDR                  ; 7273
CAR                  ; 7274
LDF    9488         ;  @lambda_1013 ; 7275
LDF    348          ;  @dropWhile ; 7276
AP     2             ; 7277
ST     0 3           ; 7278
LD     0 3          ; var pathRemaining ; 7279
LDF    9511         ;  @lambda_1014 ; 7280
LDF    536          ;  @filter ; 7281
AP     2             ; 7282
ST     0 4           ; 7283
LD     0 4          ; var rv ; 7284
RTN                  ; 7285
LD     0 0          ;  <== collectEdgeGhosts  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 7286
CDR                 ; generateTupleAccess total=6 pos=2 ; 7287
CDR                  ; 7288
CAR                  ; 7289
LDF    9523         ;  @lambda_1015 ; 7290
LDF    348          ;  @dropWhile ; 7291
AP     2             ; 7292
ST     0 3           ; 7293
LD     0 3          ; var pathOnEdge ; 7294
LDF    9544         ;  @lambda_1016 ; 7295
LDF    536          ;  @filter ; 7296
AP     2             ; 7297
RTN                  ; 7298
LD     0 0          ;  <== collectAnyEdgePills  [ParsedEdge edge, ListCons<ListCons<Integer>> map] (as blk) ; 7299
CDR                 ; generateTupleAccess total=6 pos=3 ; 7300
CDR                  ; 7301
CDR                  ; 7302
CAR                  ; 7303
ST     0 2           ; 7304
LD     0 2          ; var edgeAccess ; 7305
LDF    9559         ;  @lambda_1017 ; 7306
LDF    536          ;  @filter ; 7307
AP     2             ; 7308
ST     0 3           ; 7309
LD     0 3          ; var rv ; 7310
RTN                  ; 7311
LD     0 0          ;  <== countAnyEdgePills  [ParsedEdge edge] (as blk) ; 7312
CDR                 ; generateTupleAccess total=6 pos=3 ; 7313
CDR                  ; 7314
CDR                  ; 7315
CAR                  ; 7316
ST     0 1           ; 7317
LD     0 1          ; var edgeAccess ; 7318
LDC    0            ; just constant from code ; 7319
LDF    9571         ;  @lambda_1018 ; 7320
LDF    385          ;  @fold0 ; 7321
AP     3             ; 7322
ST     0 2           ; 7323
LD     0 2          ; var rv ; 7324
RTN                  ; 7325
LD     0 0          ;  <== countMyEdgePills  [ParsedEdge edge, Point start] (as blk) ; 7326
CDR                 ; generateTupleAccess total=6 pos=3 ; 7327
CDR                  ; 7328
CDR                  ; 7329
CAR                  ; 7330
LDF    9585         ;  @lambda_1019 ; 7331
LDF    348          ;  @dropWhile ; 7332
AP     2             ; 7333
ST     0 2           ; 7334
LD     0 2          ; var pathRemaining ; 7335
LDC    0            ; just constant from code ; 7336
LDF    9608         ;  @lambda_1020 ; 7337
LDF    385          ;  @fold0 ; 7338
AP     3             ; 7339
ST     0 3           ; 7340
LD     0 3          ; var rv ; 7341
RTN                  ; 7342
LDC    1200001      ;  <== performMove  [AIState aistate, WorldState worldState] (as blk) ; 7343
DBUG                 ; 7344
LD     0 1          ; var worldState ; 7345
CDR                 ; generateTupleAccess total=4 pos=1 ; 7346
CAR                  ; 7347
CDR                 ; generateTupleAccess total=5 pos=1 ; 7348
CAR                  ; 7349
ST     0 2           ; 7350
LD     0 0          ; var aistate ; 7351
LD     0 2          ; var location ; 7352
LDF    8066         ;  @findEdgesForPoint ; 7353
AP     2             ; 7354
ST     0 3           ; 7355
LD     0 3          ; var edgesForPoint ; 7356
LDF    9625         ;  @lambda_1022 ; 7357
LDF    68           ;  @map ; 7358
AP     2             ; 7359
ST     0 4           ; 7360
LD     0 4          ; var collectedPoints ; 7361
LDF    9648         ;  @lambda_1023 ; 7362
LDF    334          ;  @maximum_by ; 7363
AP     2             ; 7364
ST     0 5           ; 7365
LD     0 5          ; var ec ; 7366
CAR                 ; generateTupleAccess total=3 pos=0 ; 7367
CDR                 ; generateTupleAccess total=6 pos=2 ; 7368
CDR                  ; 7369
CAR                  ; 7370
LDF    9658         ;  @lambda_1024 ; 7371
LDF    348          ;  @dropWhile ; 7372
AP     2             ; 7373
ST     0 6           ; 7374
LDC    1200008      ; just constant from code ; 7375
DBUG                 ; 7376
LDC    2            ; just constant from code ; 7377
LD     0 6          ; var pathToWalk ; 7378
LDF    531          ;  @length ; 7379
AP     1             ; 7380
CGT                  ; 7381
LD     0 5          ; var ec ; 7382
CDR                 ; generateTupleAccess total=3 pos=1 ; 7383
CAR                  ; 7384
LDC    0            ; just constant from code ; 7385
CEQ                  ; 7386
ADD                  ; 7387
LDC    1            ; just constant from code ; 7388
LDC    1            ; just constant from code ; 7389
CEQ                  ; 7390
ADD                  ; 7391
SEL    7449 7482     ; 7392
LD     0 6          ; var pathToWalk ; 7393
LDF    531          ;  @length ; 7394
AP     1             ; 7395
LDC    2            ; just constant from code ; 7396
CGTE                 ; 7397
SEL    7483 7499     ; 7398
LDC    1200009      ; just constant from code ; 7399
DBUG                 ; 7400
LD     0 7          ; var retval ; 7401
CDR                 ; generateTupleAccess total=2 pos=1 ; 7402
LDC    3            ; Direction.LEFT ; 7403
CEQ                  ; 7404
SEL    7504 7509    ; IF? 39 ; 7405
ST     0 11          ; 7406
LD     0 7          ; var retval ; 7407
CDR                 ; generateTupleAccess total=2 pos=1 ; 7408
LDC    0            ; Direction.UP ; 7409
CEQ                  ; 7410
SEL    7515 7520    ; IF? 40 ; 7411
ST     0 12          ; 7412
LDC    1200010      ; just constant from code ; 7413
DBUG                 ; 7414
LD     0 7          ; var retval ; 7415
CAR                 ; generateTupleAccess total=2 pos=0 ; 7416
ST     0 13          ; 7417
LD     0 13         ; var a ; 7418
CAR                 ; generateTupleAccess total=4 pos=0 ; 7419
CDR                 ; generateTupleAccess total=6 pos=5 ; 7420
CDR                  ; 7421
CDR                  ; 7422
CDR                  ; 7423
CDR                  ; 7424
LD     0 12         ; var ny ; 7425
LDF    422          ;  @list_item ; 7426
AP     2             ; 7427
ST     0 14          ; 7428
LDC    1200011      ; just constant from code ; 7429
DBUG                 ; 7430
LDC    0            ; just constant from code ; 7431
LDC    100          ; VMExtras.GET_READER ; 7432
LD     0 11         ; var nx ; 7433
LD     0 14         ; var newRowAccessor ; 7434
AP     2             ; 7435
AP     1             ; 7436
ST     0 15          ; 7437
LDC    1200012      ; just constant from code ; 7438
DBUG                 ; 7439
LD     0 15         ; var oldValue ; 7440
LDC    2            ; CT.PILL ; 7441
CEQ                  ; 7442
SEL    7526 7533    ; IF? 41 ; 7443
ST     0 15          ; 7444
LDC    1200013      ; just constant from code ; 7445
DBUG                 ; 7446
LD     0 7          ; var retval ; 7447
RTN                  ; 7448
LD     0 3          ; branch@7449 ; 7449
LD     0 0          ; var aistate ; 7450
LD     0 1          ; var worldState ; 7451
LDC 0               ; local var space ; 7452
LDC 0               ; local var space ; 7453
LDC 0               ; local var space ; 7454
LDC 0               ; local var space ; 7455
LDC 0               ; local var space ; 7456
LDF    7717         ;  @findBestDistantEdge ; 7457
AP     8             ; 7458
ST     0 10          ; 7459
LDC    12000080     ; just constant from code ; 7460
DBUG                 ; 7461
LD     0 10         ; var startEdge ; 7462
CDR                 ; generateTupleAccess total=6 pos=2 ; 7463
CDR                  ; 7464
CAR                  ; 7465
DBUG                 ; 7466
LD     0 2          ; var location ; 7467
DBUG                 ; 7468
BRK                  ; 7469
LD     0 10         ; var startEdge ; 7470
CDR                 ; generateTupleAccess total=6 pos=2 ; 7471
CDR                  ; 7472
CAR                  ; 7473
LDF    9940         ;  @lambda_1050 ; 7474
LDF    348          ;  @dropWhile ; 7475
AP     2             ; 7476
ST     0 6           ; 7477
BRK                  ; 7478
LDC    12000081     ; just constant from code ; 7479
DBUG                 ; 7480
JOIN                 ; 7481
JOIN                ; branch@7482 ; 7482
LD     0 6          ; branch@7483 ; 7483
CDR                  ; 7484
CAR                  ; 7485
ST     0 8           ; 7486
LD     0 8          ; var newLocation ; 7487
CAR                 ; generateTupleAccess total=2 pos=0 ; 7488
LD     0 2          ; var location ; 7489
CAR                 ; generateTupleAccess total=2 pos=0 ; 7490
CGT                  ; 7491
SEL    7535 7537    ; IF? 88 ; 7492
ST     0 9           ; 7493
LD     0 0          ; var aistate ; 7494
LD     0 9          ; var direction ; 7495
CONS                 ; 7496
ST     0 7           ; 7497
JOIN                 ; 7498
LD     0 0          ; branch@7499 ; 7499
LDC    0            ; Direction.UP ; 7500
CONS                 ; 7501
ST     0 7           ; 7502
JOIN                 ; 7503
LD     0 2          ; THEN: 39 ; 7504
CAR                 ; generateTupleAccess total=2 pos=0 ; 7505
LDC    1            ; just constant from code ; 7506
SUB                  ; 7507
JOIN                 ; 7508
LD     0 7          ; ELSE: 39 ; 7509
CDR                 ; generateTupleAccess total=2 pos=1 ; 7510
LDC    1            ; Direction.RIGHT ; 7511
CEQ                  ; 7512
SEL    7544 7549    ; IF? 89 ; 7513
JOIN                 ; 7514
LD     0 2          ; THEN: 40 ; 7515
CDR                 ; generateTupleAccess total=2 pos=1 ; 7516
LDC    1            ; just constant from code ; 7517
SUB                  ; 7518
JOIN                 ; 7519
LD     0 7          ; ELSE: 40 ; 7520
CDR                 ; generateTupleAccess total=2 pos=1 ; 7521
LDC    2            ; Direction.DOWN ; 7522
CEQ                  ; 7523
SEL    7552 7557    ; IF? 90 ; 7524
JOIN                 ; 7525
LDC    1            ; THEN: 41 ; 7526
LDC    101          ; VMExtras.GET_WRITER ; 7527
LD     0 11         ; var nx ; 7528
LD     0 14         ; var newRowAccessor ; 7529
AP     2             ; 7530
AP     1             ; 7531
JOIN                 ; 7532
LD     0 15         ; ELSE: 41 ; 7533
JOIN                 ; 7534
LDC    1            ; THEN: 88 ; 7535
JOIN                 ; 7536
LD     0 2          ; ELSE: 88 ; 7537
CAR                 ; generateTupleAccess total=2 pos=0 ; 7538
LD     0 8          ; var newLocation ; 7539
CAR                 ; generateTupleAccess total=2 pos=0 ; 7540
CGT                  ; 7541
SEL    7560 7562    ; IF? 91 ; 7542
JOIN                 ; 7543
LD     0 2          ; THEN: 89 ; 7544
CAR                 ; generateTupleAccess total=2 pos=0 ; 7545
LDC    1            ; just constant from code ; 7546
ADD                  ; 7547
JOIN                 ; 7548
LD     0 2          ; ELSE: 89 ; 7549
CAR                 ; generateTupleAccess total=2 pos=0 ; 7550
JOIN                 ; 7551
LD     0 2          ; THEN: 90 ; 7552
CDR                 ; generateTupleAccess total=2 pos=1 ; 7553
LDC    1            ; just constant from code ; 7554
ADD                  ; 7555
JOIN                 ; 7556
LD     0 2          ; ELSE: 90 ; 7557
CDR                 ; generateTupleAccess total=2 pos=1 ; 7558
JOIN                 ; 7559
LDC    3            ; THEN: 91 ; 7560
JOIN                 ; 7561
LD     0 2          ; ELSE: 91 ; 7562
CDR                 ; generateTupleAccess total=2 pos=1 ; 7563
LD     0 8          ; var newLocation ; 7564
CDR                 ; generateTupleAccess total=2 pos=1 ; 7565
CGT                  ; 7566
SEL    7569 7571    ; IF? 92 ; 7567
JOIN                 ; 7568
LDC    0            ; THEN: 92 ; 7569
JOIN                 ; 7570
LDC    2            ; ELSE: 92 ; 7571
JOIN                 ; 7572
LD     0 2          ;  <== waveFromEdgeToNearestEdges  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 7573
LDF    414          ;  @queue_isempty ; 7574
AP     1             ; 7575
SEL    7579 7582     ; 7576
LD     0 6          ; var retval ; 7577
RTN                  ; 7578
LD     0 4          ; branch@7579 ; 7579
ST     0 6           ; 7580
JOIN                 ; 7581
LD     0 0          ; branch@7582 ; 7582
LD     0 1          ; var worldState ; 7583
LD     0 2          ; var edgeQueue ; 7584
LD     0 3          ; var visited ; 7585
LD     0 4          ; var acc ; 7586
LD     0 5          ; var edgesWithDotsSoFar ; 7587
LDC 0               ; local var space ; 7588
LDC 0               ; local var space ; 7589
LDC 0               ; local var space ; 7590
LDC 0               ; local var space ; 7591
LDC 0               ; local var space ; 7592
LDC 0               ; local var space ; 7593
LDC 0               ; local var space ; 7594
LDC 0               ; local var space ; 7595
LDC 0               ; local var space ; 7596
LDF    7601         ;  @waveFromEdgeToNearestEdges0 ; 7597
AP     15            ; 7598
ST     0 6           ; 7599
JOIN                 ; 7600
LD     0 2          ;  <== waveFromEdgeToNearestEdges0  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 7601
LDC 0               ; local var space ; 7602
LDF    491          ;  @queue_dequeue ; 7603
AP     2             ; 7604
ST     0 7           ; 7605
LD     0 7          ; var reduced ; 7606
CAR                 ; generateTupleAccess total=2 pos=0 ; 7607
ST     0 8           ; 7608
LD     0 0          ; var aistate ; 7609
CAR                 ; generateTupleAccess total=4 pos=0 ; 7610
CDR                 ; generateTupleAccess total=6 pos=2 ; 7611
CDR                  ; 7612
CAR                  ; 7613
LD     0 8          ; var lookingEdge ; 7614
LDF    7682         ;  @findFollowingEdges ; 7615
AP     2             ; 7616
ST     0 9           ; 7617
LD     0 9          ; var following ; 7618
LDF    9688         ;  @lambda_1026 ; 7619
LDF    536          ;  @filter ; 7620
AP     2             ; 7621
ST     0 9           ; 7622
LD     0 9          ; var following ; 7623
LDF    9700         ;  @lambda_1027 ; 7624
LDF    536          ;  @filter ; 7625
AP     2             ; 7626
ST     0 10          ; 7627
LD     0 3          ; var visited ; 7628
LD     0 9          ; var following ; 7629
LDF    9717         ;  @lambda_1028 ; 7630
LDF    68           ;  @map ; 7631
AP     2             ; 7632
LDF    1114         ;  @sorted_map_assoc_all ; 7633
AP     2             ; 7634
ST     0 11          ; 7635
LD     0 9          ; var following ; 7636
LDF    9726         ;  @lambda_1029 ; 7637
LDF    68           ;  @map ; 7638
AP     2             ; 7639
ST     0 12          ; 7640
LD     0 12         ; var newRoutes ; 7641
LD     0 7          ; var reduced ; 7642
CDR                 ; generateTupleAccess total=2 pos=1 ; 7643
LDF    9730         ;  @lambda_1030 ; 7644
LDF    385          ;  @fold0 ; 7645
AP     3             ; 7646
ST     0 13          ; 7647
LD     0 12         ; var newRoutes ; 7648
LD     0 4          ; var acc ; 7649
LDF    183          ;  @concat2_set ; 7650
AP     2             ; 7651
ST     0 14          ; 7652
LD     0 5          ; var edgesWithDotsSoFar ; 7653
LDC    3            ; just constant from code ; 7654
CGT                  ; 7655
LD     0 14         ; var newAcc ; 7656
LDF    531          ;  @length ; 7657
AP     1             ; 7658
LDC    50           ; just constant from code ; 7659
CGT                  ; 7660
MUL                  ; 7661
SEL    7666 7668    ; IF? 42 ; 7662
ST     0 6           ; 7663
LD     0 6          ; var retval ; 7664
RTN                  ; 7665
LD     0 14         ; THEN: 42 ; 7666
JOIN                 ; 7667
LD     0 0          ; ELSE: 42 ; 7668
LD     0 1          ; var worldState ; 7669
LD     0 13         ; var newqq ; 7670
LD     0 11         ; var nvisited ; 7671
LD     0 14         ; var newAcc ; 7672
LD     0 5          ; var edgesWithDotsSoFar ; 7673
LD     0 10         ; var withDots ; 7674
LDF    531          ;  @length ; 7675
AP     1             ; 7676
ADD                  ; 7677
LDC 0               ; local var space ; 7678
LDF    7573         ;  @waveFromEdgeToNearestEdges ; 7679
AP     7             ; 7680
JOIN                 ; 7681
LD     0 0          ;  <== findFollowingEdges  [ListCons<ParsedEdge> parsedEdges, ListCons<ParsedEdge> lookingEdge] (as blk) ; 7682
LDF    9679         ;  @lambda_1025 ; 7683
LDF    536          ;  @filter ; 7684
AP     2             ; 7685
RTN                  ; 7686
LD     0 0          ;  <== pointEquals  [Point a, Point b] (as blk) ; 7687
CAR                 ; generateTupleAccess total=2 pos=0 ; 7688
LD     0 1          ; var b ; 7689
CAR                 ; generateTupleAccess total=2 pos=0 ; 7690
CEQ                  ; 7691
LD     0 0          ; var a ; 7692
CDR                 ; generateTupleAccess total=2 pos=1 ; 7693
LD     0 1          ; var b ; 7694
CDR                 ; generateTupleAccess total=2 pos=1 ; 7695
CEQ                  ; 7696
MUL                  ; 7697
SEL    7700 7702    ; IF? 43 ; 7698
RTN                  ; 7699
LDC    1            ; THEN: 43 ; 7700
JOIN                 ; 7701
LDC    0            ; ELSE: 43 ; 7702
JOIN                 ; 7703
LD     0 0          ;  <== endingPointOfEdgeRoute  [ListCons<ParsedEdge> lookingEdge] (as blk) ; 7704
CAR                  ; 7705
ST     0 1           ; 7706
LD     0 1          ; var lastEdge ; 7707
CDR                 ; generateTupleAccess total=6 pos=1 ; 7708
CAR                  ; 7709
RTN                  ; 7710
LD     0 0          ;  <== countRoutePills  [ListCons<ParsedEdge> route] (as blk) ; 7711
LDC    0            ; just constant from code ; 7712
LDF    9735         ;  @lambda_1031 ; 7713
LDF    385          ;  @fold0 ; 7714
AP     3             ; 7715
RTN                  ; 7716
LDC    1200010      ;  <== findBestDistantEdge  [ListCons<ParsedEdge> currentEdges, AIState aistate, WorldState worldState] (as blk) ; 7717
DBUG                 ; 7718
LDF    402          ;  @queue_new ; 7719
AP     0             ; 7720
ST     0 3           ; 7721
LD     0 0          ; var currentEdges ; 7722
LD     0 3          ; var q ; 7723
LDF    9743         ;  @lambda_1032 ; 7724
LDF    385          ;  @fold0 ; 7725
AP     3             ; 7726
ST     0 3           ; 7727
LDC    1200011      ; just constant from code ; 7728
DBUG                 ; 7729
LD     0 1          ; var aistate ; 7730
LD     0 2          ; var worldState ; 7731
LD     0 3          ; var q ; 7732
LDC    0            ; NULL literal ; 7733
LDC    0            ; just constant from code ; 7734
CONS                 ; 7735
LD     0 0          ; var currentEdges ; 7736
LDF    9750         ;  @lambda_1033 ; 7737
LDF    68           ;  @map ; 7738
AP     2             ; 7739
LDF    1114         ;  @sorted_map_assoc_all ; 7740
AP     2             ; 7741
LDC    0            ; NULL literal ; 7742
LDC    0            ; just constant from code ; 7743
LDC 0               ; local var space ; 7744
LDF    7573         ;  @waveFromEdgeToNearestEdges ; 7745
AP     7             ; 7746
ST     0 4           ; 7747
LDC    1200012      ; just constant from code ; 7748
DBUG                 ; 7749
LD     0 4          ; var dests ; 7750
LDF    9759         ;  @lambda_1034 ; 7751
LDF    68           ;  @map ; 7752
AP     2             ; 7753
ST     0 5           ; 7754
LDC    1200013      ; just constant from code ; 7755
DBUG                 ; 7756
LD     0 5          ; var scores ; 7757
LDF    9783         ;  @lambda_1035 ; 7758
LDF    334          ;  @maximum_by ; 7759
AP     2             ; 7760
ST     0 6           ; 7761
LDC    1200014      ; just constant from code ; 7762
DBUG                 ; 7763
LD     0 6          ; var winningRoute ; 7764
CAR                 ; generateTupleAccess total=2 pos=0 ; 7765
LDF    298          ;  @reverse ; 7766
AP     1             ; 7767
CAR                  ; 7768
ST     0 7           ; 7769
LDC    1200015      ; just constant from code ; 7770
DBUG                 ; 7771
LD     0 7          ; var myStart ; 7772
RTN                  ; 7773
LD     0 0          ;  <== createInitialState  [ListCons<ListCons<Integer>> map] (as blk) ; 7774
LDC 0               ; local var space ; 7775
LDF    8171         ;  @parseStaticMap ; 7776
AP     2             ; 7777
LDC    0            ; just constant from code ; 7778
LDC    0            ; just constant from code ; 7779
LDC    0            ; NULL literal ; 7780
CONS                 ; 7781
CONS                 ; 7782
CONS                 ; 7783
RTN                  ; 7784
LD     0 0          ;  <== isWall  [int test] (as blk) ; 7785
LDC    0            ; just constant from code ; 7786
CEQ                  ; 7787
SEL    7790 7792    ; IF? 44 ; 7788
RTN                  ; 7789
LDC    1            ; THEN: 44 ; 7790
JOIN                 ; 7791
LDC    0            ; ELSE: 44 ; 7792
JOIN                 ; 7793
LDC    77           ;  <== isWalkable  [int test] (as blk) ; 7794
ST     0 1           ; 7795
LD     0 0          ; var test ; 7796
LDC    0            ; just constant from code ; 7797
CEQ                  ; 7798
SEL    7802 7805     ; 7799
LD     0 1          ; var retvla ; 7800
RTN                  ; 7801
LDC    0            ; branch@7802 ; 7802
ST     0 1           ; 7803
JOIN                 ; 7804
LDC    1            ; branch@7805 ; 7805
ST     0 1           ; 7806
JOIN                 ; 7807
LD     0 0          ;  <== isWalkable2  [ListCons<ListCons<Integer>> map, Point p] (as blk) ; 7808
LD     0 1          ; var p ; 7809
CDR                 ; generateTupleAccess total=2 pos=1 ; 7810
LD     0 1          ; var p ; 7811
CAR                 ; generateTupleAccess total=2 pos=0 ; 7812
LDF    8245         ;  @getMapItem ; 7813
AP     3             ; 7814
LDC 0               ; local var space ; 7815
LDF    7794         ;  @isWalkable ; 7816
AP     2             ; 7817
RTN                  ; 7818
LD     0 0          ;  <== isWalkable3  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 7819
LD     0 2          ; var y ; 7820
LD     0 1          ; var x ; 7821
LDF    8245         ;  @getMapItem ; 7822
AP     3             ; 7823
LDC 0               ; local var space ; 7824
LDF    7794         ;  @isWalkable ; 7825
AP     2             ; 7826
RTN                  ; 7827
LD     0 0          ;  <== isJunction  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 7828
LD     0 2          ; var y ; 7829
LDC    1            ; just constant from code ; 7830
SUB                  ; 7831
LD     0 1          ; var x ; 7832
LDF    8245         ;  @getMapItem ; 7833
AP     3             ; 7834
LDC 0               ; local var space ; 7835
LDF    7794         ;  @isWalkable ; 7836
AP     2             ; 7837
ST     0 3           ; 7838
LD     0 0          ; var map ; 7839
LD     0 2          ; var y ; 7840
LDC    1            ; just constant from code ; 7841
ADD                  ; 7842
LD     0 1          ; var x ; 7843
LDF    8245         ;  @getMapItem ; 7844
AP     3             ; 7845
LDC 0               ; local var space ; 7846
LDF    7794         ;  @isWalkable ; 7847
AP     2             ; 7848
ST     0 4           ; 7849
LD     0 0          ; var map ; 7850
LD     0 2          ; var y ; 7851
LD     0 1          ; var x ; 7852
LDC    1            ; just constant from code ; 7853
SUB                  ; 7854
LDF    8245         ;  @getMapItem ; 7855
AP     3             ; 7856
LDC 0               ; local var space ; 7857
LDF    7794         ;  @isWalkable ; 7858
AP     2             ; 7859
ST     0 5           ; 7860
LD     0 0          ; var map ; 7861
LD     0 2          ; var y ; 7862
LD     0 1          ; var x ; 7863
LDC    1            ; just constant from code ; 7864
ADD                  ; 7865
LDF    8245         ;  @getMapItem ; 7866
AP     3             ; 7867
LDC 0               ; local var space ; 7868
LDF    7794         ;  @isWalkable ; 7869
AP     2             ; 7870
ST     0 6           ; 7871
LD     0 3          ; var a1 ; 7872
LD     0 4          ; var a2 ; 7873
ADD                  ; 7874
LD     0 5          ; var a3 ; 7875
ADD                  ; 7876
LD     0 6          ; var a4 ; 7877
ADD                  ; 7878
LDC    2            ; just constant from code ; 7879
CGT                  ; 7880
SEL    7883 7885    ; IF? 46 ; 7881
RTN                  ; 7882
LDC    1            ; THEN: 46 ; 7883
JOIN                 ; 7884
LDC    0            ; ELSE: 46 ; 7885
JOIN                 ; 7886
LD     0 0          ;  <== findNeighbourJunctions  [ListCons<ListCons<Integer>> map, Point somePoint, SortedMap<Point> allJunctions, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 7887
LDF    402          ;  @queue_new ; 7888
AP     0             ; 7889
LD     0 1          ; var somePoint ; 7890
LDC    0            ; NULL literal ; 7891
CONS                 ; 7892
LDF    406          ;  @queue_enqueue ; 7893
AP     2             ; 7894
LD     0 2          ; var allJunctions ; 7895
LDC    0            ; NULL literal ; 7896
LDC    0            ; just constant from code ; 7897
CONS                 ; 7898
LD     0 1          ; var somePoint ; 7899
LDF    7952         ;  @getPointKey ; 7900
AP     1             ; 7901
LD     0 1          ; var somePoint ; 7902
LDF    1105         ;  @sorted_map_assoc ; 7903
AP     3             ; 7904
LDC    0            ; NULL literal ; 7905
LDC 0               ; local var space ; 7906
LDF    7923         ;  @waveFromPointToNearestJunction ; 7907
AP     6             ; 7908
ST     0 4           ; 7909
LD     0 4          ; var allNeighbourJunctionsPaths ; 7910
LDF    9786         ;  @lambda_1036 ; 7911
LDF    68           ;  @map ; 7912
AP     2             ; 7913
RTN                  ; 7914
LD     0 0          ;  <== makeEdgeAccess  [ListCons<Point> p, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 7915
LDF    9808         ;  @lambda_1037 ; 7916
LDF    68           ;  @map ; 7917
AP     2             ; 7918
LD     0 0          ; var p ; 7919
LDF    1147         ;  @zip ; 7920
AP     2             ; 7921
RTN                  ; 7922
LD     0 1          ;  <== waveFromPointToNearestJunction  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 7923
LDF    414          ;  @queue_isempty ; 7924
AP     1             ; 7925
SEL    7929 7932     ; 7926
LD     0 5          ; var retval ; 7927
RTN                  ; 7928
LD     0 4          ; branch@7929 ; 7929
ST     0 5           ; 7930
JOIN                 ; 7931
LD     0 0          ; branch@7932 ; 7932
LD     0 1          ; var pointQueue ; 7933
LD     0 2          ; var destinations ; 7934
LD     0 3          ; var visited ; 7935
LD     0 4          ; var acc ; 7936
LDC 0               ; local var space ; 7937
LDC 0               ; local var space ; 7938
LDC 0               ; local var space ; 7939
LDC 0               ; local var space ; 7940
LDC 0               ; local var space ; 7941
LDC 0               ; local var space ; 7942
LDC 0               ; local var space ; 7943
LDC 0               ; local var space ; 7944
LDC 0               ; local var space ; 7945
LDC 0               ; local var space ; 7946
LDC 0               ; local var space ; 7947
LDF    7965         ;  @waveFromPointToNearestJunction0 ; 7948
AP     16            ; 7949
ST     0 5           ; 7950
JOIN                 ; 7951
LD     0 0          ;  <== getPointKey  [Point pt] (as blk) ; 7952
CAR                 ; generateTupleAccess total=2 pos=0 ; 7953
LDC    300          ; just constant from code ; 7954
MUL                  ; 7955
LD     0 0          ; var pt ; 7956
CDR                 ; generateTupleAccess total=2 pos=1 ; 7957
ADD                  ; 7958
RTN                  ; 7959
LD     0 0          ;  <== addPointKeyAll  [ListCons<Point> in] (as blk) ; 7960
LDF    9428         ;  @lambda_1009 ; 7961
LDF    68           ;  @map ; 7962
AP     2             ; 7963
RTN                  ; 7964
LD     0 1          ;  <== waveFromPointToNearestJunction0  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 7965
LDC 0               ; local var space ; 7966
LDF    491          ;  @queue_dequeue ; 7967
AP     2             ; 7968
ST     0 6           ; 7969
LD     0 6          ; var emptier ; 7970
CAR                 ; generateTupleAccess total=2 pos=0 ; 7971
ST     0 7           ; 7972
LD     0 7          ; var thisRoute ; 7973
CAR                  ; 7974
ST     0 8           ; 7975
LD     0 8          ; var weAreHere ; 7976
CAR                 ; generateTupleAccess total=2 pos=0 ; 7977
LDC    1            ; just constant from code ; 7978
ADD                  ; 7979
LD     0 8          ; var weAreHere ; 7980
CDR                 ; generateTupleAccess total=2 pos=1 ; 7981
CONS                 ; 7982
LD     0 8          ; var weAreHere ; 7983
CAR                 ; generateTupleAccess total=2 pos=0 ; 7984
LDC    1            ; just constant from code ; 7985
SUB                  ; 7986
LD     0 8          ; var weAreHere ; 7987
CDR                 ; generateTupleAccess total=2 pos=1 ; 7988
CONS                 ; 7989
LD     0 8          ; var weAreHere ; 7990
CAR                 ; generateTupleAccess total=2 pos=0 ; 7991
LD     0 8          ; var weAreHere ; 7992
CDR                 ; generateTupleAccess total=2 pos=1 ; 7993
LDC    1            ; just constant from code ; 7994
ADD                  ; 7995
CONS                 ; 7996
LD     0 8          ; var weAreHere ; 7997
CAR                 ; generateTupleAccess total=2 pos=0 ; 7998
LD     0 8          ; var weAreHere ; 7999
CDR                 ; generateTupleAccess total=2 pos=1 ; 8000
LDC    1            ; just constant from code ; 8001
SUB                  ; 8002
CONS                 ; 8003
LDC    0            ; NULL literal ; 8004
CONS                 ; 8005
CONS                 ; 8006
CONS                 ; 8007
CONS                 ; 8008
LDF    7960         ;  @addPointKeyAll ; 8009
AP     1             ; 8010
ST     0 9           ; 8011
LD     0 9          ; var possibleDestinations ; 8012
LDF    9818         ;  @lambda_1038 ; 8013
LDF    536          ;  @filter ; 8014
AP     2             ; 8015
ST     0 10          ; 8016
LD     0 10         ; var exits ; 8017
LDF    9832         ;  @lambda_1039 ; 8018
LDF    536          ;  @filter ; 8019
AP     2             ; 8020
ST     0 11          ; 8021
LDC    0            ; NULL literal ; 8022
LDC    1            ; just constant from code ; 8023
CONS                 ; 8024
LD     0 11         ; var arrivedsList ; 8025
LDF    1114         ;  @sorted_map_assoc_all ; 8026
AP     2             ; 8027
ST     0 12          ; 8028
LD     0 10         ; var exits ; 8029
LDF    9838         ;  @lambda_1040 ; 8030
LDF    536          ;  @filter ; 8031
AP     2             ; 8032
ST     0 13          ; 8033
LD     0 13         ; var continueds ; 8034
LDF    9846         ;  @lambda_1041 ; 8035
LDF    68           ;  @map ; 8036
AP     2             ; 8037
ST     0 14          ; 8038
LD     0 14         ; var exitRoutes ; 8039
LD     0 6          ; var emptier ; 8040
CDR                 ; generateTupleAccess total=2 pos=1 ; 8041
LDF    9851         ;  @lambda_1042 ; 8042
LDF    385          ;  @fold0 ; 8043
AP     3             ; 8044
ST     0 15          ; 8045
LD     0 0          ; var map ; 8046
LD     0 15         ; var filledQueue ; 8047
LD     0 2          ; var destinations ; 8048
LD     0 3          ; var visited ; 8049
LD     0 10         ; var exits ; 8050
LDF    1114         ;  @sorted_map_assoc_all ; 8051
AP     2             ; 8052
LD     0 4          ; var acc ; 8053
LD     0 11         ; var arrivedsList ; 8054
LDF    9856         ;  @lambda_1043 ; 8055
LDF    68           ;  @map ; 8056
AP     2             ; 8057
LDF    183          ;  @concat2_set ; 8058
AP     2             ; 8059
LDC 0               ; local var space ; 8060
LDF    7923         ;  @waveFromPointToNearestJunction ; 8061
AP     6             ; 8062
ST     0 5           ; 8063
LD     0 5          ; var retval ; 8064
RTN                  ; 8065
LD     0 0          ;  <== findEdgesForPoint  [AIState state, Point pos] (as blk) ; 8066
CAR                 ; generateTupleAccess total=4 pos=0 ; 8067
CDR                 ; generateTupleAccess total=6 pos=2 ; 8068
CDR                  ; 8069
CAR                  ; 8070
LDF    9620         ;  @lambda_1021 ; 8071
LDF    536          ;  @filter ; 8072
AP     2             ; 8073
RTN                  ; 8074
LD     0 1          ;  <== pointInEdge  [Point pos, ParsedEdge e] (as blk) ; 8075
CDR                 ; generateTupleAccess total=6 pos=2 ; 8076
CDR                  ; 8077
CAR                  ; 8078
LDF    9861         ;  @lambda_1044 ; 8079
LDF    544          ;  @any ; 8080
AP     2             ; 8081
RTN                  ; 8082
LD     0 0          ;  <== parseMap  [ListCons<ListCons<Integer>> m] (as blk) ; 8083
LDF    9394         ;  @lambda_1004 ; 8084
LDF    68           ;  @map ; 8085
AP     2             ; 8086
ST     0 1           ; 8087
LDF    9397         ;  @lambda_1005 ; 8088
LD     0 0          ; var m ; 8089
LD     0 1          ; var accessors ; 8090
LDF    1120         ;  @zip_with ; 8091
AP     3             ; 8092
ST     0 2           ; 8093
LD     0 2          ; var mapAccessors ; 8094
LDF    9401         ;  @lambda_1006 ; 8095
LDF    68           ;  @map ; 8096
AP     2             ; 8097
ST     0 3           ; 8098
LD     0 0          ; var m ; 8099
LDC    0            ; just constant from code ; 8100
LDF    9408         ;  @lambda_1007 ; 8101
LDF    85           ;  @mapi ; 8102
AP     3             ; 8103
ST     0 4           ; 8104
LD     0 4          ; var toConcat ; 8105
LDF    117          ;  @concat ; 8106
AP     1             ; 8107
ST     0 5           ; 8108
LD     0 5          ; var walkableList ; 8109
LDF    9416         ;  @lambda_1008 ; 8110
LDF    536          ;  @filter ; 8111
AP     2             ; 8112
ST     0 6           ; 8113
LDC    0            ; NULL literal ; 8114
LDC    0            ; just constant from code ; 8115
CONS                 ; 8116
LD     0 5          ; var walkableList ; 8117
LDF    7960         ;  @addPointKeyAll ; 8118
AP     1             ; 8119
LDF    1114         ;  @sorted_map_assoc_all ; 8120
AP     2             ; 8121
ST     0 7           ; 8122
LDC    0            ; NULL literal ; 8123
LDC    0            ; just constant from code ; 8124
CONS                 ; 8125
LD     0 6          ; var junctionsList ; 8126
LDF    7960         ;  @addPointKeyAll ; 8127
AP     1             ; 8128
LDF    1114         ;  @sorted_map_assoc_all ; 8129
AP     2             ; 8130
ST     0 8           ; 8131
LD     0 6          ; var junctionsList ; 8132
LDF    9434         ;  @lambda_1010 ; 8133
LDF    68           ;  @map ; 8134
AP     2             ; 8135
LDF    117          ;  @concat ; 8136
AP     1             ; 8137
ST     0 9           ; 8138
LD     0 9          ; var allParsedEdges ; 8139
LDC    0            ; just constant from code ; 8140
LDF    9442         ;  @lambda_1011 ; 8141
LDF    85           ;  @mapi ; 8142
AP     3             ; 8143
ST     0 9           ; 8144
LD     0 7          ; var walkable ; 8145
LD     0 8          ; var junctions ; 8146
LD     0 9          ; var allParsedEdges ; 8147
LDC    0            ; NULL literal ; 8148
LDC    0            ; NULL literal ; 8149
LD     0 1          ; var accessors ; 8150
CONS                 ; 8151
CONS                 ; 8152
CONS                 ; 8153
CONS                 ; 8154
CONS                 ; 8155
RTN                  ; 8156
LD     0 0          ;  <== my_cat_maybes  [ListCons<Maybe<Point>> maybeListCons] (as blk) ; 8157
LDC 0               ; local var space ; 8158
LDC 0               ; local var space ; 8159
LDF    106          ;  @cat_maybes ; 8160
AP     3             ; 8161
ST     0 1           ; 8162
LD     0 1          ; var rv ; 8163
RTN                  ; 8164
LD     0 0          ;  <== collectWalkableXY  [ListCons<Integer> row, Integer rowy] (as blk) ; 8165
LDC    0            ; just constant from code ; 8166
LDF    9878         ;  @lambda_1045 ; 8167
LDF    85           ;  @mapi ; 8168
AP     3             ; 8169
RTN                  ; 8170
LD     0 0          ;  <== parseStaticMap  [ListCons<ListCons<Integer>> map] (as blk) ; 8171
LDC 0               ; local var space ; 8172
LDC 0               ; local var space ; 8173
LDC 0               ; local var space ; 8174
LDC 0               ; local var space ; 8175
LDC 0               ; local var space ; 8176
LDC 0               ; local var space ; 8177
LDC 0               ; local var space ; 8178
LDC 0               ; local var space ; 8179
LDC 0               ; local var space ; 8180
LDF    8083         ;  @parseMap ; 8181
AP     10            ; 8182
ST     0 1           ; 8183
LD     0 1          ; var parsedMap ; 8184
RTN                  ; 8185
LDF    402          ;  <== test2  [] (as blk), ALSO: @queue_new ; 8186
AP     0             ; 8187
LDC    1            ; just constant from code ; 8188
LDF    406          ;  @queue_enqueue ; 8189
AP     2             ; 8190
LDC    2            ; just constant from code ; 8191
LDF    406          ;  @queue_enqueue ; 8192
AP     2             ; 8193
LDC    3            ; just constant from code ; 8194
LDF    406          ;  @queue_enqueue ; 8195
AP     2             ; 8196
ST     0 0           ; 8197
LD     0 0          ; var queue ; 8198
LDC 0               ; local var space ; 8199
LDF    491          ;  @queue_dequeue ; 8200
AP     2             ; 8201
ST     0 1           ; 8202
LD     0 1          ; var q1 ; 8203
CDR                 ; generateTupleAccess total=2 pos=1 ; 8204
LDC 0               ; local var space ; 8205
LDF    491          ;  @queue_dequeue ; 8206
AP     2             ; 8207
ST     0 1           ; 8208
LD     0 1          ; var q1 ; 8209
CDR                 ; generateTupleAccess total=2 pos=1 ; 8210
LDC 0               ; local var space ; 8211
LDF    491          ;  @queue_dequeue ; 8212
AP     2             ; 8213
ST     0 1           ; 8214
LDC    1            ; just constant from code ; 8215
RTN                  ; 8216
LDC    0            ;  <== test3  [] (as blk) ; 8217
LDC    0            ; just constant from code ; 8218
CONS                 ; 8219
ST     0 0           ; 8220
LD     0 0          ; var map ; 8221
LDC    30           ; just constant from code ; 8222
LDC    31           ; just constant from code ; 8223
LDF    1105         ;  @sorted_map_assoc ; 8224
AP     3             ; 8225
LDC    20           ; just constant from code ; 8226
LDC    21           ; just constant from code ; 8227
LDF    1105         ;  @sorted_map_assoc ; 8228
AP     3             ; 8229
LDC    10           ; just constant from code ; 8230
LDC    11           ; just constant from code ; 8231
LDF    1105         ;  @sorted_map_assoc ; 8232
AP     3             ; 8233
ST     0 1           ; 8234
LD     0 1          ; var new_map2 ; 8235
LDC    20           ; just constant from code ; 8236
LDC    33           ; just constant from code ; 8237
LDF    1105         ;  @sorted_map_assoc ; 8238
AP     3             ; 8239
LDC    20           ; just constant from code ; 8240
LDC    88           ; just constant from code ; 8241
LDF    1089         ;  @sorted_map_get ; 8242
AP     3             ; 8243
RTN                  ; 8244
LDC    0            ;  <== getMapItem  [ListCons<ListCons<Integer>> map, int y, int x] (as blk) ; 8245
LD     0 1          ; var y ; 8246
CGT                  ; 8247
LDC    0            ; just constant from code ; 8248
LD     0 2          ; var x ; 8249
CGT                  ; 8250
ADD                  ; 8251
SEL    8254 8256    ; IF? 45 ; 8252
RTN                  ; 8253
LDC    0            ; THEN: 45 ; 8254
JOIN                 ; 8255
LD     0 0          ; ELSE: 45 ; 8256
LD     0 1          ; var y ; 8257
LDC    0            ; just constant from code ; 8258
LDF    468          ;  @list_item_def ; 8259
AP     3             ; 8260
LD     0 2          ; var x ; 8261
LDC    0            ; just constant from code ; 8262
LDF    468          ;  @list_item_def ; 8263
AP     3             ; 8264
JOIN                 ; 8265
LD     0 1          ;  <== ghcstate_read_val  [GHCState state, Cons val_cons] (as blk) ; 8266
CAR                  ; 8267
ST     0 2           ; 8268
LD     0 1          ; var val_cons ; 8269
CDR                  ; 8270
ST     0 3           ; 8271
LD     0 2          ; var val_tag ; 8272
LDC    3            ; just constant from code ; 8273
CGT                  ; 8274
SEL    8281 8283     ; 8275
LD     0 2          ; var val_tag ; 8276
LDC    0            ; just constant from code ; 8277
CEQ                  ; 8278
SEL    8284 8292    ; IF? 47 ; 8279
RTN                  ; 8280
BRK                 ; branch@8281 ; 8281
JOIN                 ; 8282
JOIN                ; branch@8283 ; 8283
LD     0 0          ; THEN: 47 ; 8284
CDR                 ; generateTupleAccess total=3 pos=1 ; 8285
CAR                  ; 8286
LD     0 3          ; var val ; 8287
LDC    0            ; just constant from code ; 8288
LDF    1089         ;  @sorted_map_get ; 8289
AP     3             ; 8290
JOIN                 ; 8291
LD     0 2          ; ELSE: 47 ; 8292
LDC    1            ; just constant from code ; 8293
CEQ                  ; 8294
SEL    8297 8311    ; IF? 93 ; 8295
JOIN                 ; 8296
LD     0 0          ; THEN: 93 ; 8297
CDR                 ; generateTupleAccess total=3 pos=2 ; 8298
CDR                  ; 8299
LD     0 0          ; var state ; 8300
CDR                 ; generateTupleAccess total=3 pos=1 ; 8301
CAR                  ; 8302
LD     0 3          ; var val ; 8303
LDC    0            ; just constant from code ; 8304
LDF    1089         ;  @sorted_map_get ; 8305
AP     3             ; 8306
LDC    0            ; just constant from code ; 8307
LDF    1089         ;  @sorted_map_get ; 8308
AP     3             ; 8309
JOIN                 ; 8310
LD     0 2          ; ELSE: 93 ; 8311
LDC    2            ; just constant from code ; 8312
CEQ                  ; 8313
SEL    8316 8318    ; IF? 94 ; 8314
JOIN                 ; 8315
LD     0 3          ; THEN: 94 ; 8316
JOIN                 ; 8317
LD     0 0          ; ELSE: 94 ; 8318
CDR                 ; generateTupleAccess total=3 pos=2 ; 8319
CDR                  ; 8320
LD     0 3          ; var val ; 8321
LDC    0            ; just constant from code ; 8322
LDF    1089         ;  @sorted_map_get ; 8323
AP     3             ; 8324
JOIN                 ; 8325
LD     0 1          ;  <== ghcstate_write_val  [GHCState state, Cons arg_cons, Integer val] (as blk) ; 8326
CAR                  ; 8327
ST     0 3           ; 8328
LD     0 3          ; var arg_tag ; 8329
LDC    3            ; just constant from code ; 8330
CGT                  ; 8331
SEL    8342 8344     ; 8332
LD     0 3          ; var arg_tag ; 8333
LDC    2            ; just constant from code ; 8334
CEQ                  ; 8335
SEL    8345 8347     ; 8336
LD     0 3          ; var arg_tag ; 8337
LDC    0            ; just constant from code ; 8338
CEQ                  ; 8339
SEL    8348 8364    ; IF? 48 ; 8340
RTN                  ; 8341
BRK                 ; branch@8342 ; 8342
JOIN                 ; 8343
JOIN                ; branch@8344 ; 8344
BRK                 ; branch@8345 ; 8345
JOIN                 ; 8346
JOIN                ; branch@8347 ; 8347
LD     0 0          ; THEN: 48 ; 8348
CAR                 ; generateTupleAccess total=3 pos=0 ; 8349
LD     0 0          ; var state ; 8350
CDR                 ; generateTupleAccess total=3 pos=1 ; 8351
CAR                  ; 8352
LD     0 1          ; var arg_cons ; 8353
CDR                  ; 8354
LD     0 2          ; var val ; 8355
LDF    1105         ;  @sorted_map_assoc ; 8356
AP     3             ; 8357
LD     0 0          ; var state ; 8358
CDR                 ; generateTupleAccess total=3 pos=2 ; 8359
CDR                  ; 8360
CONS                 ; 8361
CONS                 ; 8362
JOIN                 ; 8363
LD     0 3          ; ELSE: 48 ; 8364
LDC    1            ; just constant from code ; 8365
CEQ                  ; 8366
SEL    8369 8391    ; IF? 95 ; 8367
JOIN                 ; 8368
LD     0 0          ; THEN: 95 ; 8369
CAR                 ; generateTupleAccess total=3 pos=0 ; 8370
LD     0 0          ; var state ; 8371
CDR                 ; generateTupleAccess total=3 pos=1 ; 8372
CAR                  ; 8373
LD     0 0          ; var state ; 8374
CDR                 ; generateTupleAccess total=3 pos=1 ; 8375
CAR                  ; 8376
LD     0 1          ; var arg_cons ; 8377
CDR                  ; 8378
LDC    0            ; just constant from code ; 8379
LDF    1089         ;  @sorted_map_get ; 8380
AP     3             ; 8381
LD     0 2          ; var val ; 8382
LDF    1105         ;  @sorted_map_assoc ; 8383
AP     3             ; 8384
LD     0 0          ; var state ; 8385
CDR                 ; generateTupleAccess total=3 pos=2 ; 8386
CDR                  ; 8387
CONS                 ; 8388
CONS                 ; 8389
JOIN                 ; 8390
LD     0 0          ; ELSE: 95 ; 8391
CAR                 ; generateTupleAccess total=3 pos=0 ; 8392
LD     0 0          ; var state ; 8393
CDR                 ; generateTupleAccess total=3 pos=1 ; 8394
CAR                  ; 8395
LD     0 0          ; var state ; 8396
CDR                 ; generateTupleAccess total=3 pos=2 ; 8397
CDR                  ; 8398
LD     0 1          ; var arg_cons ; 8399
CDR                  ; 8400
LD     0 2          ; var val ; 8401
LDF    1105         ;  @sorted_map_assoc ; 8402
AP     3             ; 8403
CONS                 ; 8404
CONS                 ; 8405
JOIN                 ; 8406
LD     0 0          ;  <== ghcstate_assoc  [GHCState state, Cons arg_cons, Cons val_cons] (as blk) ; 8407
LD     0 2          ; var val_cons ; 8408
LDC 0               ; local var space ; 8409
LDC 0               ; local var space ; 8410
LDF    8266         ;  @ghcstate_read_val ; 8411
AP     4             ; 8412
ST     0 3           ; 8413
LD     0 0          ; var state ; 8414
LD     0 1          ; var arg_cons ; 8415
LD     0 3          ; var val ; 8416
LDC 0               ; local var space ; 8417
LDF    8326         ;  @ghcstate_write_val ; 8418
AP     4             ; 8419
RTN                  ; 8420
LD     0 0          ;  <== processGhostInfoRequest  [WorldState world, GHCState state, Integer index, int requestType] (as blk) ; 8421
CDR                 ; generateTupleAccess total=4 pos=2 ; 8422
CDR                  ; 8423
CAR                  ; 8424
LD     0 2          ; var index ; 8425
LD     0 1          ; var state ; 8426
CAR                 ; generateTupleAccess total=3 pos=0 ; 8427
LDF    468          ;  @list_item_def ; 8428
AP     3             ; 8429
ST     0 4           ; 8430
LDC    0            ; just constant from code ; 8431
LDC    0            ; just constant from code ; 8432
CONS                 ; 8433
ST     0 5           ; 8434
LDC    4            ; just constant from code ; 8435
LD     0 3          ; var requestType ; 8436
CEQ                  ; 8437
SEL    8440 8460    ; IF? 49 ; 8438
RTN                  ; 8439
LD     0 4          ; THEN: 49 ; 8440
LD     0 1          ; var state ; 8441
CDR                 ; generateTupleAccess total=3 pos=1 ; 8442
CAR                  ; 8443
LDC    0            ; just constant from code ; 8444
LD     0 5          ; var startPos ; 8445
CAR                 ; generateTupleAccess total=2 pos=0 ; 8446
LDF    1105         ;  @sorted_map_assoc ; 8447
AP     3             ; 8448
LDC    1            ; just constant from code ; 8449
LD     0 5          ; var startPos ; 8450
CDR                 ; generateTupleAccess total=2 pos=1 ; 8451
LDF    1105         ;  @sorted_map_assoc ; 8452
AP     3             ; 8453
LD     0 1          ; var state ; 8454
CDR                 ; generateTupleAccess total=3 pos=2 ; 8455
CDR                  ; 8456
CONS                 ; 8457
CONS                 ; 8458
JOIN                 ; 8459
LDC    5            ; ELSE: 49 ; 8460
LD     0 3          ; var requestType ; 8461
CEQ                  ; 8462
SEL    8465 8489    ; IF? 96 ; 8463
JOIN                 ; 8464
LD     0 4          ; THEN: 96 ; 8465
LD     0 1          ; var state ; 8466
CDR                 ; generateTupleAccess total=3 pos=1 ; 8467
CAR                  ; 8468
LDC    0            ; just constant from code ; 8469
LD     0 4          ; var gs ; 8470
CDR                 ; generateTupleAccess total=3 pos=1 ; 8471
CAR                  ; 8472
CAR                 ; generateTupleAccess total=2 pos=0 ; 8473
LDF    1105         ;  @sorted_map_assoc ; 8474
AP     3             ; 8475
LDC    1            ; just constant from code ; 8476
LD     0 4          ; var gs ; 8477
CDR                 ; generateTupleAccess total=3 pos=1 ; 8478
CAR                  ; 8479
CDR                 ; generateTupleAccess total=2 pos=1 ; 8480
LDF    1105         ;  @sorted_map_assoc ; 8481
AP     3             ; 8482
LD     0 1          ; var state ; 8483
CDR                 ; generateTupleAccess total=3 pos=2 ; 8484
CDR                  ; 8485
CONS                 ; 8486
CONS                 ; 8487
JOIN                 ; 8488
LD     0 4          ; ELSE: 96 ; 8489
LD     0 1          ; var state ; 8490
CDR                 ; generateTupleAccess total=3 pos=1 ; 8491
CAR                  ; 8492
LDC    0            ; just constant from code ; 8493
LD     0 4          ; var gs ; 8494
CAR                 ; generateTupleAccess total=3 pos=0 ; 8495
LDF    1105         ;  @sorted_map_assoc ; 8496
AP     3             ; 8497
LDC    1            ; just constant from code ; 8498
LD     0 4          ; var gs ; 8499
CDR                 ; generateTupleAccess total=3 pos=2 ; 8500
CDR                  ; 8501
LDF    1105         ;  @sorted_map_assoc ; 8502
AP     3             ; 8503
LD     0 1          ; var state ; 8504
CDR                 ; generateTupleAccess total=3 pos=2 ; 8505
CDR                  ; 8506
CONS                 ; 8507
CONS                 ; 8508
JOIN                 ; 8509
LD     0 1          ;  <== processGhostInt  [WorldState world, GHCState state, Integer num, Cons arg] (as blk) ; 8510
CAR                 ; generateTupleAccess total=3 pos=0 ; 8511
ST     0 4           ; 8512
LDC    0            ; just constant from code ; 8513
ST     0 5           ; 8514
LDC    0            ; just constant from code ; 8515
LD     0 2          ; var num ; 8516
CEQ                  ; 8517
SEL    8520 8543    ; IF? 50 ; 8518
RTN                  ; 8519
LD     0 4          ; THEN: 50 ; 8520
CAR                 ; generateTupleAccess total=3 pos=0 ; 8521
LD     0 4          ; var gs ; 8522
CDR                 ; generateTupleAccess total=3 pos=1 ; 8523
CAR                  ; 8524
LD     0 1          ; var state ; 8525
CDR                 ; generateTupleAccess total=3 pos=1 ; 8526
CAR                  ; 8527
LDC    0            ; just constant from code ; 8528
LDC    0            ; just constant from code ; 8529
LDF    1089         ;  @sorted_map_get ; 8530
AP     3             ; 8531
CONS                 ; 8532
CONS                 ; 8533
LD     0 1          ; var state ; 8534
CDR                 ; generateTupleAccess total=3 pos=1 ; 8535
CAR                  ; 8536
LD     0 1          ; var state ; 8537
CDR                 ; generateTupleAccess total=3 pos=2 ; 8538
CDR                  ; 8539
CONS                 ; 8540
CONS                 ; 8541
JOIN                 ; 8542
LDC    1            ; ELSE: 50 ; 8543
LD     0 2          ; var num ; 8544
CEQ                  ; 8545
SEL    8548 8576    ; IF? 97 ; 8546
JOIN                 ; 8547
LD     0 4          ; THEN: 97 ; 8548
LD     0 1          ; var state ; 8549
CDR                 ; generateTupleAccess total=3 pos=1 ; 8550
CAR                  ; 8551
LDC    0            ; just constant from code ; 8552
LD     0 0          ; var world ; 8553
CDR                 ; generateTupleAccess total=4 pos=1 ; 8554
CAR                  ; 8555
CDR                 ; generateTupleAccess total=5 pos=1 ; 8556
CAR                  ; 8557
CAR                 ; generateTupleAccess total=2 pos=0 ; 8558
LDF    1105         ;  @sorted_map_assoc ; 8559
AP     3             ; 8560
LDC    1            ; just constant from code ; 8561
LD     0 0          ; var world ; 8562
CDR                 ; generateTupleAccess total=4 pos=1 ; 8563
CAR                  ; 8564
CDR                 ; generateTupleAccess total=5 pos=1 ; 8565
CAR                  ; 8566
CDR                 ; generateTupleAccess total=2 pos=1 ; 8567
LDF    1105         ;  @sorted_map_assoc ; 8568
AP     3             ; 8569
LD     0 1          ; var state ; 8570
CDR                 ; generateTupleAccess total=3 pos=2 ; 8571
CDR                  ; 8572
CONS                 ; 8573
CONS                 ; 8574
JOIN                 ; 8575
LDC    2            ; ELSE: 97 ; 8576
LD     0 2          ; var num ; 8577
CEQ                  ; 8578
SEL    8581 8609    ; IF? 98 ; 8579
JOIN                 ; 8580
LD     0 4          ; THEN: 98 ; 8581
LD     0 1          ; var state ; 8582
CDR                 ; generateTupleAccess total=3 pos=1 ; 8583
CAR                  ; 8584
LDC    0            ; just constant from code ; 8585
LD     0 0          ; var world ; 8586
CDR                 ; generateTupleAccess total=4 pos=1 ; 8587
CAR                  ; 8588
CDR                 ; generateTupleAccess total=5 pos=1 ; 8589
CAR                  ; 8590
CAR                 ; generateTupleAccess total=2 pos=0 ; 8591
LDF    1105         ;  @sorted_map_assoc ; 8592
AP     3             ; 8593
LDC    1            ; just constant from code ; 8594
LD     0 0          ; var world ; 8595
CDR                 ; generateTupleAccess total=4 pos=1 ; 8596
CAR                  ; 8597
CDR                 ; generateTupleAccess total=5 pos=1 ; 8598
CAR                  ; 8599
CDR                 ; generateTupleAccess total=2 pos=1 ; 8600
LDF    1105         ;  @sorted_map_assoc ; 8601
AP     3             ; 8602
LD     0 1          ; var state ; 8603
CDR                 ; generateTupleAccess total=3 pos=2 ; 8604
CDR                  ; 8605
CONS                 ; 8606
CONS                 ; 8607
JOIN                 ; 8608
LDC    3            ; ELSE: 98 ; 8609
LD     0 2          ; var num ; 8610
CEQ                  ; 8611
SEL    8614 8628    ; IF? 99 ; 8612
JOIN                 ; 8613
LD     0 4          ; THEN: 99 ; 8614
LD     0 1          ; var state ; 8615
CDR                 ; generateTupleAccess total=3 pos=1 ; 8616
CAR                  ; 8617
LDC    0            ; just constant from code ; 8618
LD     0 5          ; var currentGhostIndex ; 8619
LDF    1105         ;  @sorted_map_assoc ; 8620
AP     3             ; 8621
LD     0 1          ; var state ; 8622
CDR                 ; generateTupleAccess total=3 pos=2 ; 8623
CDR                  ; 8624
CONS                 ; 8625
CONS                 ; 8626
JOIN                 ; 8627
LDC    4            ; ELSE: 99 ; 8628
LD     0 2          ; var num ; 8629
CEQ                  ; 8630
SEL    8633 8648    ; IF? 100 ; 8631
JOIN                 ; 8632
LD     0 0          ; THEN: 100 ; 8633
LD     0 1          ; var state ; 8634
LD     0 1          ; var state ; 8635
CDR                 ; generateTupleAccess total=3 pos=1 ; 8636
CAR                  ; 8637
LDC    0            ; just constant from code ; 8638
LDC    0            ; just constant from code ; 8639
LDF    1089         ;  @sorted_map_get ; 8640
AP     3             ; 8641
LDC    4            ; just constant from code ; 8642
LDC 0               ; local var space ; 8643
LDC 0               ; local var space ; 8644
LDF    8421         ;  @processGhostInfoRequest ; 8645
AP     6             ; 8646
JOIN                 ; 8647
LDC    5            ; ELSE: 100 ; 8648
LD     0 2          ; var num ; 8649
CEQ                  ; 8650
SEL    8653 8668    ; IF? 101 ; 8651
JOIN                 ; 8652
LD     0 0          ; THEN: 101 ; 8653
LD     0 1          ; var state ; 8654
LD     0 1          ; var state ; 8655
CDR                 ; generateTupleAccess total=3 pos=1 ; 8656
CAR                  ; 8657
LDC    0            ; just constant from code ; 8658
LDC    0            ; just constant from code ; 8659
LDF    1089         ;  @sorted_map_get ; 8660
AP     3             ; 8661
LDC    5            ; just constant from code ; 8662
LDC 0               ; local var space ; 8663
LDC 0               ; local var space ; 8664
LDF    8421         ;  @processGhostInfoRequest ; 8665
AP     6             ; 8666
JOIN                 ; 8667
LDC    6            ; ELSE: 101 ; 8668
LD     0 2          ; var num ; 8669
CEQ                  ; 8670
SEL    8673 8688    ; IF? 102 ; 8671
JOIN                 ; 8672
LD     0 0          ; THEN: 102 ; 8673
LD     0 1          ; var state ; 8674
LD     0 1          ; var state ; 8675
CDR                 ; generateTupleAccess total=3 pos=1 ; 8676
CAR                  ; 8677
LDC    0            ; just constant from code ; 8678
LDC    0            ; just constant from code ; 8679
LDF    1089         ;  @sorted_map_get ; 8680
AP     3             ; 8681
LDC    6            ; just constant from code ; 8682
LDC 0               ; local var space ; 8683
LDC 0               ; local var space ; 8684
LDF    8421         ;  @processGhostInfoRequest ; 8685
AP     6             ; 8686
JOIN                 ; 8687
LDC    7            ; ELSE: 102 ; 8688
LD     0 2          ; var num ; 8689
CEQ                  ; 8690
SEL    8693 8724    ; IF? 103 ; 8691
JOIN                 ; 8692
LD     0 4          ; THEN: 103 ; 8693
LD     0 1          ; var state ; 8694
CDR                 ; generateTupleAccess total=3 pos=1 ; 8695
CAR                  ; 8696
LDC    0            ; just constant from code ; 8697
LD     0 0          ; var world ; 8698
CAR                 ; generateTupleAccess total=4 pos=0 ; 8699
LD     0 1          ; var state ; 8700
CDR                 ; generateTupleAccess total=3 pos=1 ; 8701
CAR                  ; 8702
LDC    0            ; just constant from code ; 8703
LDC    0            ; just constant from code ; 8704
LDF    1089         ;  @sorted_map_get ; 8705
AP     3             ; 8706
LD     0 1          ; var state ; 8707
CDR                 ; generateTupleAccess total=3 pos=1 ; 8708
CAR                  ; 8709
LDC    1            ; just constant from code ; 8710
LDC    0            ; just constant from code ; 8711
LDF    1089         ;  @sorted_map_get ; 8712
AP     3             ; 8713
LDF    8245         ;  @getMapItem ; 8714
AP     3             ; 8715
LDF    1105         ;  @sorted_map_assoc ; 8716
AP     3             ; 8717
LD     0 1          ; var state ; 8718
CDR                 ; generateTupleAccess total=3 pos=2 ; 8719
CDR                  ; 8720
CONS                 ; 8721
CONS                 ; 8722
JOIN                 ; 8723
LD     0 1          ; ELSE: 103 ; 8724
JOIN                 ; 8725
LDF    9896         ;  <== bit_split  [Integer x] (as blk), ALSO: @lambda_1046 ; 8726
LD     0 0          ; var x ; 8727
LDC    7            ; just constant from code ; 8728
LDC 0               ; local var space ; 8729
LDF    1172         ;  @produce_n ; 8730
AP     4             ; 8731
RTN                  ; 8732
LD     0 0          ;  <== emulate_bitop  [Integer x, Integer y, Function2<Integer,Integer,Integer> f] (as blk) ; 8733
LDF    8726         ;  @bit_split ; 8734
AP     1             ; 8735
ST     0 3           ; 8736
LD     0 1          ; var y ; 8737
LDF    8726         ;  @bit_split ; 8738
AP     1             ; 8739
ST     0 4           ; 8740
LDF    9913         ;  @lambda_1047 ; 8741
LDC    0            ; just constant from code ; 8742
LD     0 2          ; var f ; 8743
LD     0 3          ; var bits_x ; 8744
LD     0 4          ; var bits_y ; 8745
LDF    1120         ;  @zip_with ; 8746
AP     3             ; 8747
LDF    47           ;  @foldr ; 8748
AP     3             ; 8749
RTN                  ; 8750
LD     0 0          ;  <== ghcstate_bitop  [GHCState state, Cons arg_cons, Cons val_cons, int type] (as blk) ; 8751
LD     0 1          ; var arg_cons ; 8752
LDC 0               ; local var space ; 8753
LDC 0               ; local var space ; 8754
LDF    8266         ;  @ghcstate_read_val ; 8755
AP     4             ; 8756
ST     0 4           ; 8757
LD     0 0          ; var state ; 8758
LD     0 2          ; var val_cons ; 8759
LDC 0               ; local var space ; 8760
LDC 0               ; local var space ; 8761
LDF    8266         ;  @ghcstate_read_val ; 8762
AP     4             ; 8763
ST     0 5           ; 8764
LD     0 4          ; var arg ; 8765
LD     0 5          ; var val ; 8766
LD     0 3          ; var type ; 8767
LDC    7            ; GHCOps.AND ; 8768
CEQ                  ; 8769
SEL    8783 8785    ; IF? 51 ; 8770
LDC 0               ; local var space ; 8771
LDC 0               ; local var space ; 8772
LDF    8733         ;  @emulate_bitop ; 8773
AP     5             ; 8774
ST     0 6           ; 8775
LD     0 0          ; var state ; 8776
LD     0 1          ; var arg_cons ; 8777
LD     0 6          ; var result ; 8778
LDC 0               ; local var space ; 8779
LDF    8326         ;  @ghcstate_write_val ; 8780
AP     4             ; 8781
RTN                  ; 8782
LDF    9961         ; THEN: 51, ALSO: @lambda_1051 ; 8783
JOIN                 ; 8784
LD     0 3          ; ELSE: 51 ; 8785
LDC    8            ; GHCOps.OR ; 8786
CEQ                  ; 8787
SEL    8790 8792    ; IF? 104 ; 8788
JOIN                 ; 8789
LDF    9965         ; THEN: 104, ALSO: @lambda_1052 ; 8790
JOIN                 ; 8791
LDF    9976         ; ELSE: 104, ALSO: @lambda_1053 ; 8792
JOIN                 ; 8793
LD     0 4          ;  <== runGhostStep  [SortedMap<Cons> prog, WorldState world, int lev, GHCState state, Cons step] (as blk) ; 8794
CAR                  ; 8795
ST     0 5           ; 8796
LD     0 4          ; var step ; 8797
CDR                  ; 8798
ST     0 6           ; 8799
LD     0 3          ; var state ; 8800
CAR                 ; generateTupleAccess total=3 pos=0 ; 8801
LD     0 3          ; var state ; 8802
CDR                 ; generateTupleAccess total=3 pos=1 ; 8803
CAR                  ; 8804
LDC    8            ; just constant from code ; 8805
LD     0 3          ; var state ; 8806
CDR                 ; generateTupleAccess total=3 pos=1 ; 8807
CAR                  ; 8808
LDC    8            ; just constant from code ; 8809
LDC    0            ; just constant from code ; 8810
LDF    1089         ;  @sorted_map_get ; 8811
AP     3             ; 8812
LDC    1            ; just constant from code ; 8813
ADD                  ; 8814
LDF    1105         ;  @sorted_map_assoc ; 8815
AP     3             ; 8816
LD     0 3          ; var state ; 8817
CDR                 ; generateTupleAccess total=3 pos=2 ; 8818
CDR                  ; 8819
CONS                 ; 8820
CONS                 ; 8821
ST     0 7           ; 8822
LDC    0            ; GHCOps.MOV ; 8823
LD     0 5          ; var opcode ; 8824
CEQ                  ; 8825
SEL    8828 8845    ; IF? 52 ; 8826
RTN                  ; 8827
LD     0 0          ; THEN: 52 ; 8828
LD     0 1          ; var world ; 8829
LD     0 2          ; var lev ; 8830
LD     0 7          ; var inc_pc ; 8831
LD     0 6          ; var args ; 8832
CAR                  ; 8833
LD     0 6          ; var args ; 8834
CDR                  ; 8835
CAR                  ; 8836
LDC 0               ; local var space ; 8837
LDF    8407         ;  @ghcstate_assoc ; 8838
AP     4             ; 8839
LDC 0               ; local var space ; 8840
LDC 0               ; local var space ; 8841
LDF    9291         ;  @runGhost ; 8842
AP     6             ; 8843
JOIN                 ; 8844
LDC    1            ; ELSE: 52 ; 8845
LD     0 5          ; var opcode ; 8846
CEQ                  ; 8847
SEL    8850 8873    ; IF? 105 ; 8848
JOIN                 ; 8849
LD     0 0          ; THEN: 105 ; 8850
LD     0 1          ; var world ; 8851
LD     0 2          ; var lev ; 8852
LD     0 7          ; var inc_pc ; 8853
LD     0 6          ; var args ; 8854
CAR                  ; 8855
LD     0 7          ; var inc_pc ; 8856
LD     0 6          ; var args ; 8857
CAR                  ; 8858
LDC 0               ; local var space ; 8859
LDC 0               ; local var space ; 8860
LDF    8266         ;  @ghcstate_read_val ; 8861
AP     4             ; 8862
LDC    1            ; just constant from code ; 8863
ADD                  ; 8864
LDC 0               ; local var space ; 8865
LDF    8326         ;  @ghcstate_write_val ; 8866
AP     4             ; 8867
LDC 0               ; local var space ; 8868
LDC 0               ; local var space ; 8869
LDF    9291         ;  @runGhost ; 8870
AP     6             ; 8871
JOIN                 ; 8872
LDC    2            ; ELSE: 105 ; 8873
LD     0 5          ; var opcode ; 8874
CEQ                  ; 8875
SEL    8878 8901    ; IF? 106 ; 8876
JOIN                 ; 8877
LD     0 0          ; THEN: 106 ; 8878
LD     0 1          ; var world ; 8879
LD     0 2          ; var lev ; 8880
LD     0 7          ; var inc_pc ; 8881
LD     0 6          ; var args ; 8882
CAR                  ; 8883
LD     0 7          ; var inc_pc ; 8884
LD     0 6          ; var args ; 8885
CAR                  ; 8886
LDC 0               ; local var space ; 8887
LDC 0               ; local var space ; 8888
LDF    8266         ;  @ghcstate_read_val ; 8889
AP     4             ; 8890
LDC    1            ; just constant from code ; 8891
SUB                  ; 8892
LDC 0               ; local var space ; 8893
LDF    8326         ;  @ghcstate_write_val ; 8894
AP     4             ; 8895
LDC 0               ; local var space ; 8896
LDC 0               ; local var space ; 8897
LDF    9291         ;  @runGhost ; 8898
AP     6             ; 8899
JOIN                 ; 8900
LDC    3            ; ELSE: 106 ; 8901
LD     0 5          ; var opcode ; 8902
CEQ                  ; 8903
SEL    8906 8936    ; IF? 107 ; 8904
JOIN                 ; 8905
LD     0 0          ; THEN: 107 ; 8906
LD     0 1          ; var world ; 8907
LD     0 2          ; var lev ; 8908
LD     0 7          ; var inc_pc ; 8909
LD     0 6          ; var args ; 8910
CAR                  ; 8911
LD     0 7          ; var inc_pc ; 8912
LD     0 6          ; var args ; 8913
CAR                  ; 8914
LDC 0               ; local var space ; 8915
LDC 0               ; local var space ; 8916
LDF    8266         ;  @ghcstate_read_val ; 8917
AP     4             ; 8918
LD     0 7          ; var inc_pc ; 8919
LD     0 6          ; var args ; 8920
CDR                  ; 8921
CAR                  ; 8922
LDC 0               ; local var space ; 8923
LDC 0               ; local var space ; 8924
LDF    8266         ;  @ghcstate_read_val ; 8925
AP     4             ; 8926
ADD                  ; 8927
LDC 0               ; local var space ; 8928
LDF    8326         ;  @ghcstate_write_val ; 8929
AP     4             ; 8930
LDC 0               ; local var space ; 8931
LDC 0               ; local var space ; 8932
LDF    9291         ;  @runGhost ; 8933
AP     6             ; 8934
JOIN                 ; 8935
LDC    4            ; ELSE: 107 ; 8936
LD     0 5          ; var opcode ; 8937
CEQ                  ; 8938
SEL    8941 8971    ; IF? 108 ; 8939
JOIN                 ; 8940
LD     0 0          ; THEN: 108 ; 8941
LD     0 1          ; var world ; 8942
LD     0 2          ; var lev ; 8943
LD     0 7          ; var inc_pc ; 8944
LD     0 6          ; var args ; 8945
CAR                  ; 8946
LD     0 7          ; var inc_pc ; 8947
LD     0 6          ; var args ; 8948
CAR                  ; 8949
LDC 0               ; local var space ; 8950
LDC 0               ; local var space ; 8951
LDF    8266         ;  @ghcstate_read_val ; 8952
AP     4             ; 8953
LD     0 7          ; var inc_pc ; 8954
LD     0 6          ; var args ; 8955
CDR                  ; 8956
CAR                  ; 8957
LDC 0               ; local var space ; 8958
LDC 0               ; local var space ; 8959
LDF    8266         ;  @ghcstate_read_val ; 8960
AP     4             ; 8961
SUB                  ; 8962
LDC 0               ; local var space ; 8963
LDF    8326         ;  @ghcstate_write_val ; 8964
AP     4             ; 8965
LDC 0               ; local var space ; 8966
LDC 0               ; local var space ; 8967
LDF    9291         ;  @runGhost ; 8968
AP     6             ; 8969
JOIN                 ; 8970
LDC    5            ; ELSE: 108 ; 8971
LD     0 5          ; var opcode ; 8972
CEQ                  ; 8973
SEL    8976 9006    ; IF? 109 ; 8974
JOIN                 ; 8975
LD     0 0          ; THEN: 109 ; 8976
LD     0 1          ; var world ; 8977
LD     0 2          ; var lev ; 8978
LD     0 7          ; var inc_pc ; 8979
LD     0 6          ; var args ; 8980
CAR                  ; 8981
LD     0 7          ; var inc_pc ; 8982
LD     0 6          ; var args ; 8983
CAR                  ; 8984
LDC 0               ; local var space ; 8985
LDC 0               ; local var space ; 8986
LDF    8266         ;  @ghcstate_read_val ; 8987
AP     4             ; 8988
LD     0 7          ; var inc_pc ; 8989
LD     0 6          ; var args ; 8990
CDR                  ; 8991
CAR                  ; 8992
LDC 0               ; local var space ; 8993
LDC 0               ; local var space ; 8994
LDF    8266         ;  @ghcstate_read_val ; 8995
AP     4             ; 8996
MUL                  ; 8997
LDC 0               ; local var space ; 8998
LDF    8326         ;  @ghcstate_write_val ; 8999
AP     4             ; 9000
LDC 0               ; local var space ; 9001
LDC 0               ; local var space ; 9002
LDF    9291         ;  @runGhost ; 9003
AP     6             ; 9004
JOIN                 ; 9005
LDC    6            ; ELSE: 109 ; 9006
LD     0 5          ; var opcode ; 9007
CEQ                  ; 9008
SEL    9011 9041    ; IF? 110 ; 9009
JOIN                 ; 9010
LD     0 0          ; THEN: 110 ; 9011
LD     0 1          ; var world ; 9012
LD     0 2          ; var lev ; 9013
LD     0 7          ; var inc_pc ; 9014
LD     0 6          ; var args ; 9015
CAR                  ; 9016
LD     0 7          ; var inc_pc ; 9017
LD     0 6          ; var args ; 9018
CAR                  ; 9019
LDC 0               ; local var space ; 9020
LDC 0               ; local var space ; 9021
LDF    8266         ;  @ghcstate_read_val ; 9022
AP     4             ; 9023
LD     0 7          ; var inc_pc ; 9024
LD     0 6          ; var args ; 9025
CDR                  ; 9026
CAR                  ; 9027
LDC 0               ; local var space ; 9028
LDC 0               ; local var space ; 9029
LDF    8266         ;  @ghcstate_read_val ; 9030
AP     4             ; 9031
DIV                  ; 9032
LDC 0               ; local var space ; 9033
LDF    8326         ;  @ghcstate_write_val ; 9034
AP     4             ; 9035
LDC 0               ; local var space ; 9036
LDC 0               ; local var space ; 9037
LDF    9291         ;  @runGhost ; 9038
AP     6             ; 9039
JOIN                 ; 9040
LDC    7            ; ELSE: 110 ; 9041
LD     0 5          ; var opcode ; 9042
CEQ                  ; 9043
SEL    9046 9066    ; IF? 111 ; 9044
JOIN                 ; 9045
LD     0 0          ; THEN: 111 ; 9046
LD     0 1          ; var world ; 9047
LD     0 2          ; var lev ; 9048
LD     0 7          ; var inc_pc ; 9049
LD     0 6          ; var args ; 9050
CAR                  ; 9051
LD     0 6          ; var args ; 9052
CDR                  ; 9053
CAR                  ; 9054
LDC    7            ; GHCOps.AND ; 9055
LDC 0               ; local var space ; 9056
LDC 0               ; local var space ; 9057
LDC 0               ; local var space ; 9058
LDF    8751         ;  @ghcstate_bitop ; 9059
AP     7             ; 9060
LDC 0               ; local var space ; 9061
LDC 0               ; local var space ; 9062
LDF    9291         ;  @runGhost ; 9063
AP     6             ; 9064
JOIN                 ; 9065
LDC    8            ; ELSE: 111 ; 9066
LD     0 5          ; var opcode ; 9067
CEQ                  ; 9068
SEL    9071 9091    ; IF? 112 ; 9069
JOIN                 ; 9070
LD     0 0          ; THEN: 112 ; 9071
LD     0 1          ; var world ; 9072
LD     0 2          ; var lev ; 9073
LD     0 7          ; var inc_pc ; 9074
LD     0 6          ; var args ; 9075
CAR                  ; 9076
LD     0 6          ; var args ; 9077
CDR                  ; 9078
CAR                  ; 9079
LDC    8            ; GHCOps.OR ; 9080
LDC 0               ; local var space ; 9081
LDC 0               ; local var space ; 9082
LDC 0               ; local var space ; 9083
LDF    8751         ;  @ghcstate_bitop ; 9084
AP     7             ; 9085
LDC 0               ; local var space ; 9086
LDC 0               ; local var space ; 9087
LDF    9291         ;  @runGhost ; 9088
AP     6             ; 9089
JOIN                 ; 9090
LDC    9            ; ELSE: 112 ; 9091
LD     0 5          ; var opcode ; 9092
CEQ                  ; 9093
SEL    9096 9116    ; IF? 113 ; 9094
JOIN                 ; 9095
LD     0 0          ; THEN: 113 ; 9096
LD     0 1          ; var world ; 9097
LD     0 2          ; var lev ; 9098
LD     0 7          ; var inc_pc ; 9099
LD     0 6          ; var args ; 9100
CAR                  ; 9101
LD     0 6          ; var args ; 9102
CDR                  ; 9103
CAR                  ; 9104
LDC    9            ; GHCOps.XOR ; 9105
LDC 0               ; local var space ; 9106
LDC 0               ; local var space ; 9107
LDC 0               ; local var space ; 9108
LDF    8751         ;  @ghcstate_bitop ; 9109
AP     7             ; 9110
LDC 0               ; local var space ; 9111
LDC 0               ; local var space ; 9112
LDF    9291         ;  @runGhost ; 9113
AP     6             ; 9114
JOIN                 ; 9115
LDC    10           ; ELSE: 113 ; 9116
LD     0 5          ; var opcode ; 9117
CEQ                  ; 9118
SEL    9121 9147    ; IF? 114 ; 9119
JOIN                 ; 9120
LD     0 0          ; THEN: 114 ; 9121
LD     0 1          ; var world ; 9122
LD     0 2          ; var lev ; 9123
LD     0 3          ; var state ; 9124
LD     0 6          ; var args ; 9125
CDR                  ; 9126
CDR                  ; 9127
LDC 0               ; local var space ; 9128
LDC 0               ; local var space ; 9129
LDF    8266         ;  @ghcstate_read_val ; 9130
AP     4             ; 9131
LD     0 3          ; var state ; 9132
LD     0 6          ; var args ; 9133
CDR                  ; 9134
CAR                  ; 9135
LDC 0               ; local var space ; 9136
LDC 0               ; local var space ; 9137
LDF    8266         ;  @ghcstate_read_val ; 9138
AP     4             ; 9139
CGT                  ; 9140
SEL    9152 9168    ; IF? 115 ; 9141
LDC 0               ; local var space ; 9142
LDC 0               ; local var space ; 9143
LDF    9291         ;  @runGhost ; 9144
AP     6             ; 9145
JOIN                 ; 9146
LDC    11           ; ELSE: 114 ; 9147
LD     0 5          ; var opcode ; 9148
CEQ                  ; 9149
SEL    9170 9196    ; IF? 116 ; 9150
JOIN                 ; 9151
LD     0 3          ; THEN: 115 ; 9152
CAR                 ; generateTupleAccess total=3 pos=0 ; 9153
LD     0 3          ; var state ; 9154
CDR                 ; generateTupleAccess total=3 pos=1 ; 9155
CAR                  ; 9156
LDC    8            ; just constant from code ; 9157
LD     0 6          ; var args ; 9158
CAR                  ; 9159
LDF    1105         ;  @sorted_map_assoc ; 9160
AP     3             ; 9161
LD     0 3          ; var state ; 9162
CDR                 ; generateTupleAccess total=3 pos=2 ; 9163
CDR                  ; 9164
CONS                 ; 9165
CONS                 ; 9166
JOIN                 ; 9167
LD     0 3          ; ELSE: 115 ; 9168
JOIN                 ; 9169
LD     0 0          ; THEN: 116 ; 9170
LD     0 1          ; var world ; 9171
LD     0 2          ; var lev ; 9172
LD     0 3          ; var state ; 9173
LD     0 6          ; var args ; 9174
CDR                  ; 9175
CAR                  ; 9176
LDC 0               ; local var space ; 9177
LDC 0               ; local var space ; 9178
LDF    8266         ;  @ghcstate_read_val ; 9179
AP     4             ; 9180
LD     0 3          ; var state ; 9181
LD     0 6          ; var args ; 9182
CDR                  ; 9183
CDR                  ; 9184
LDC 0               ; local var space ; 9185
LDC 0               ; local var space ; 9186
LDF    8266         ;  @ghcstate_read_val ; 9187
AP     4             ; 9188
CEQ                  ; 9189
SEL    9201 9217    ; IF? 117 ; 9190
LDC 0               ; local var space ; 9191
LDC 0               ; local var space ; 9192
LDF    9291         ;  @runGhost ; 9193
AP     6             ; 9194
JOIN                 ; 9195
LDC    12           ; ELSE: 116 ; 9196
LD     0 5          ; var opcode ; 9197
CEQ                  ; 9198
SEL    9219 9245    ; IF? 118 ; 9199
JOIN                 ; 9200
LD     0 3          ; THEN: 117 ; 9201
CAR                 ; generateTupleAccess total=3 pos=0 ; 9202
LD     0 3          ; var state ; 9203
CDR                 ; generateTupleAccess total=3 pos=1 ; 9204
CAR                  ; 9205
LDC    8            ; just constant from code ; 9206
LD     0 6          ; var args ; 9207
CAR                  ; 9208
LDF    1105         ;  @sorted_map_assoc ; 9209
AP     3             ; 9210
LD     0 3          ; var state ; 9211
CDR                 ; generateTupleAccess total=3 pos=2 ; 9212
CDR                  ; 9213
CONS                 ; 9214
CONS                 ; 9215
JOIN                 ; 9216
LD     0 3          ; ELSE: 117 ; 9217
JOIN                 ; 9218
LD     0 0          ; THEN: 118 ; 9219
LD     0 1          ; var world ; 9220
LD     0 2          ; var lev ; 9221
LD     0 3          ; var state ; 9222
LD     0 6          ; var args ; 9223
CDR                  ; 9224
CAR                  ; 9225
LDC 0               ; local var space ; 9226
LDC 0               ; local var space ; 9227
LDF    8266         ;  @ghcstate_read_val ; 9228
AP     4             ; 9229
LD     0 3          ; var state ; 9230
LD     0 6          ; var args ; 9231
CDR                  ; 9232
CDR                  ; 9233
LDC 0               ; local var space ; 9234
LDC 0               ; local var space ; 9235
LDF    8266         ;  @ghcstate_read_val ; 9236
AP     4             ; 9237
CGT                  ; 9238
SEL    9250 9266    ; IF? 119 ; 9239
LDC 0               ; local var space ; 9240
LDC 0               ; local var space ; 9241
LDF    9291         ;  @runGhost ; 9242
AP     6             ; 9243
JOIN                 ; 9244
LDC    13           ; ELSE: 118 ; 9245
LD     0 5          ; var opcode ; 9246
CEQ                  ; 9247
SEL    9268 9286    ; IF? 120 ; 9248
JOIN                 ; 9249
LD     0 3          ; THEN: 119 ; 9250
CAR                 ; generateTupleAccess total=3 pos=0 ; 9251
LD     0 3          ; var state ; 9252
CDR                 ; generateTupleAccess total=3 pos=1 ; 9253
CAR                  ; 9254
LDC    8            ; just constant from code ; 9255
LD     0 6          ; var args ; 9256
CAR                  ; 9257
LDF    1105         ;  @sorted_map_assoc ; 9258
AP     3             ; 9259
LD     0 3          ; var state ; 9260
CDR                 ; generateTupleAccess total=3 pos=2 ; 9261
CDR                  ; 9262
CONS                 ; 9263
CONS                 ; 9264
JOIN                 ; 9265
LD     0 3          ; ELSE: 119 ; 9266
JOIN                 ; 9267
LD     0 0          ; THEN: 120 ; 9268
LD     0 1          ; var world ; 9269
LD     0 2          ; var lev ; 9270
LD     0 1          ; var world ; 9271
LD     0 7          ; var inc_pc ; 9272
LD     0 6          ; var args ; 9273
CAR                  ; 9274
LD     0 6          ; var args ; 9275
CDR                  ; 9276
LDC 0               ; local var space ; 9277
LDC 0               ; local var space ; 9278
LDF    8510         ;  @processGhostInt ; 9279
AP     6             ; 9280
LDC 0               ; local var space ; 9281
LDC 0               ; local var space ; 9282
LDF    9291         ;  @runGhost ; 9283
AP     6             ; 9284
JOIN                 ; 9285
LD     0 3          ; ELSE: 120 ; 9286
CAR                 ; generateTupleAccess total=3 pos=0 ; 9287
CDR                 ; generateTupleAccess total=3 pos=2 ; 9288
CDR                  ; 9289
JOIN                 ; 9290
LD     0 3          ;  <== runGhost  [SortedMap<Cons> prog, WorldState world, int lev, GHCState state] (as blk) ; 9291
CDR                 ; generateTupleAccess total=3 pos=1 ; 9292
CAR                  ; 9293
LDC    8            ; just constant from code ; 9294
LDC    0            ; just constant from code ; 9295
LDF    1089         ;  @sorted_map_get ; 9296
AP     3             ; 9297
ST     0 4           ; 9298
LD     0 0          ; var prog ; 9299
LD     0 4          ; var pc ; 9300
LDC    0            ; NULL literal ; 9301
LDF    1089         ;  @sorted_map_get ; 9302
AP     3             ; 9303
ST     0 5           ; 9304
LD     0 5          ; var step ; 9305
ATOM                 ; 9306
SEL    9309 9314    ; IF? 53 ; 9307
RTN                  ; 9308
LD     0 3          ; THEN: 53 ; 9309
CAR                 ; generateTupleAccess total=3 pos=0 ; 9310
CDR                 ; generateTupleAccess total=3 pos=2 ; 9311
CDR                  ; 9312
JOIN                 ; 9313
LD     0 2          ; ELSE: 53 ; 9314
LDC    1023         ; just constant from code ; 9315
CGT                  ; 9316
SEL    9319 9324    ; IF? 121 ; 9317
JOIN                 ; 9318
LD     0 3          ; THEN: 121 ; 9319
CAR                 ; generateTupleAccess total=3 pos=0 ; 9320
CDR                 ; generateTupleAccess total=3 pos=2 ; 9321
CDR                  ; 9322
JOIN                 ; 9323
LD     0 0          ; ELSE: 121 ; 9324
LD     0 1          ; var world ; 9325
LD     0 2          ; var lev ; 9326
LDC    1            ; just constant from code ; 9327
ADD                  ; 9328
LD     0 3          ; var state ; 9329
LD     0 5          ; var step ; 9330
LDC 0               ; local var space ; 9331
LDC 0               ; local var space ; 9332
LDC 0               ; local var space ; 9333
LDF    8794         ;  @runGhostStep ; 9334
AP     8             ; 9335
JOIN                 ; 9336
LD     0 1          ;  <== getGhostDirection  [WorldState world, ListCons<Cons> spec] (as blk) ; 9337
LDC    0            ; just constant from code ; 9338
LDC    0            ; NULL literal ; 9339
LDC    0            ; just constant from code ; 9340
CONS                 ; 9341
CONS                 ; 9342
LDF    9919         ;  @lambda_1048 ; 9343
LDF    385          ;  @fold0 ; 9344
AP     3             ; 9345
ST     0 2           ; 9346
LD     0 0          ; var world ; 9347
CDR                 ; generateTupleAccess total=4 pos=2 ; 9348
CDR                  ; 9349
CAR                  ; 9350
CAR                  ; 9351
ST     0 3           ; 9352
LD     0 2          ; var prog ; 9353
CDR                 ; generateTupleAccess total=2 pos=1 ; 9354
LD     0 0          ; var world ; 9355
LDC    0            ; just constant from code ; 9356
LD     0 3          ; var ghostState ; 9357
LDC    0            ; NULL literal ; 9358
LDC    0            ; just constant from code ; 9359
CONS                 ; 9360
LDC    0            ; NULL literal ; 9361
LDC    0            ; just constant from code ; 9362
CONS                 ; 9363
CONS                 ; 9364
CONS                 ; 9365
LDC 0               ; local var space ; 9366
LDC 0               ; local var space ; 9367
LDF    9291         ;  @runGhost ; 9368
AP     6             ; 9369
RTN                  ; 9370
LD     0 0          ;  <== lambda_1000  [x] (as expr) ; 9371
LD     1 1          ; var g ; 9372
AP     1             ; 9373
LD     1 0          ; var f ; 9374
AP     1             ; 9375
RTN                  ; 9376
LD     0 1          ;  <== lambda_1001  [b, a] (as expr) ; 9377
LD     0 0          ; var b ; 9378
LD     1 0          ; var f ; 9379
AP     2             ; 9380
RTN                  ; 9381
LD     0 0          ;  <== lambda_1002  [d] (as expr) ; 9382
LDF    225          ;  @maybeToList ; 9383
AP     1             ; 9384
RTN                  ; 9385
LD     0 0          ;  <== lambda_1003  [SortedMap<T> acc, Tuple<Integer,T> elem] (as expr) ; 9386
LD     0 1          ; var elem ; 9387
CAR                 ; generateTupleAccess total=2 pos=0 ; 9388
LD     0 1          ; var elem ; 9389
CDR                 ; generateTupleAccess total=2 pos=1 ; 9390
LDF    1105         ;  @sorted_map_assoc ; 9391
AP     3             ; 9392
RTN                  ; 9393
LDF    1200         ;  <== lambda_1004  [x] (as expr), ALSO: @array_256 ; 9394
AP     0             ; 9395
RTN                  ; 9396
LD     0 0          ;  <== lambda_1005  [a, b] (as expr) ; 9397
LD     0 1          ; var b ; 9398
CONS                 ; 9399
RTN                  ; 9400
LD     0 0          ;  <== lambda_1006  [Tuple<ListCons<Integer>,Function2<Integer,Integer,Function1<Integer,Integer>>> t] (as expr) ; 9401
CAR                 ; generateTupleAccess total=2 pos=0 ; 9402
LDC    0            ; just constant from code ; 9403
LDF    9932         ;  @lambda_1049 ; 9404
LDF    85           ;  @mapi ; 9405
AP     3             ; 9406
RTN                  ; 9407
LD     0 0          ;  <== lambda_1007  [row, rowy] (as expr) ; 9408
LD     0 1          ; var rowy ; 9409
LDF    8165         ;  @collectWalkableXY ; 9410
AP     2             ; 9411
LDC 0               ; local var space ; 9412
LDF    8157         ;  @my_cat_maybes ; 9413
AP     2             ; 9414
RTN                  ; 9415
LD     1 0          ;  <== lambda_1008  [Point w] (as expr) ; 9416
LD     0 0          ; var w ; 9417
CAR                 ; generateTupleAccess total=2 pos=0 ; 9418
LD     0 0          ; var w ; 9419
CDR                 ; generateTupleAccess total=2 pos=1 ; 9420
LDC 0               ; local var space ; 9421
LDC 0               ; local var space ; 9422
LDC 0               ; local var space ; 9423
LDC 0               ; local var space ; 9424
LDF    7828         ;  @isJunction ; 9425
AP     7             ; 9426
RTN                  ; 9427
LD     0 0          ;  <== lambda_1009  [Point pt] (as expr) ; 9428
LDF    7952         ;  @getPointKey ; 9429
AP     1             ; 9430
LD     0 0          ; var pt ; 9431
CONS                 ; 9432
RTN                  ; 9433
LD     1 0          ;  <== lambda_1010  [j] (as expr) ; 9434
LD     0 0          ; var j ; 9435
LD     1 8          ; var junctions ; 9436
LD     1 1          ; var accessors ; 9437
LDC 0               ; local var space ; 9438
LDF    7887         ;  @findNeighbourJunctions ; 9439
AP     5             ; 9440
RTN                  ; 9441
LD     0 0          ;  <== lambda_1011  [ParsedEdge pe, Integer ix] (as expr) ; 9442
CAR                 ; generateTupleAccess total=6 pos=0 ; 9443
LD     0 0          ; var pe ; 9444
CDR                 ; generateTupleAccess total=6 pos=1 ; 9445
CAR                  ; 9446
LD     0 0          ; var pe ; 9447
CDR                 ; generateTupleAccess total=6 pos=2 ; 9448
CDR                  ; 9449
CAR                  ; 9450
LD     0 0          ; var pe ; 9451
CDR                 ; generateTupleAccess total=6 pos=3 ; 9452
CDR                  ; 9453
CDR                  ; 9454
CAR                  ; 9455
LD     0 0          ; var pe ; 9456
CDR                 ; generateTupleAccess total=6 pos=4 ; 9457
CDR                  ; 9458
CDR                  ; 9459
CDR                  ; 9460
CAR                  ; 9461
LD     0 1          ; var ix ; 9462
CONS                 ; 9463
CONS                 ; 9464
CONS                 ; 9465
CONS                 ; 9466
CONS                 ; 9467
RTN                  ; 9468
LD     0 0          ;  <== lambda_1012  [nextaistate, worldState] (as expr) ; 9469
LD     0 1          ; var worldState ; 9470
LDC 0               ; local var space ; 9471
LDC 0               ; local var space ; 9472
LDC 0               ; local var space ; 9473
LDC 0               ; local var space ; 9474
LDC 0               ; local var space ; 9475
LDC 0               ; local var space ; 9476
LDC 0               ; local var space ; 9477
LDC 0               ; local var space ; 9478
LDC 0               ; local var space ; 9479
LDC 0               ; local var space ; 9480
LDC 0               ; local var space ; 9481
LDC 0               ; local var space ; 9482
LDC 0               ; local var space ; 9483
LDC 0               ; local var space ; 9484
LDF    7343         ;  @performMove ; 9485
AP     16            ; 9486
RTN                  ; 9487
LD     0 0          ;  <== lambda_1013  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9488
CDR                 ; generateTupleAccess total=2 pos=1 ; 9489
CAR                 ; generateTupleAccess total=2 pos=0 ; 9490
LD     1 1          ; var start ; 9491
CAR                 ; generateTupleAccess total=2 pos=0 ; 9492
CEQ                  ; 9493
LDC    1            ; for negation ; 9494
SUB                  ; 9495
LD     0 0          ; var t ; 9496
CDR                 ; generateTupleAccess total=2 pos=1 ; 9497
CDR                 ; generateTupleAccess total=2 pos=1 ; 9498
LD     1 1          ; var start ; 9499
CDR                 ; generateTupleAccess total=2 pos=1 ; 9500
CEQ                  ; 9501
LDC    1            ; for negation ; 9502
SUB                  ; 9503
ADD                  ; 9504
SEL    9507 9509    ; IF? 54 ; 9505
RTN                  ; 9506
LDC    1            ; THEN: 54 ; 9507
JOIN                 ; 9508
LDC    0            ; ELSE: 54 ; 9509
JOIN                 ; 9510
LDC    0            ;  <== lambda_1014  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9511
LD     0 0          ; var t ; 9512
CAR                 ; generateTupleAccess total=2 pos=0 ; 9513
AP     1             ; 9514
LDC    2            ; CT.PILL ; 9515
CEQ                  ; 9516
SEL    9519 9521    ; IF? 55 ; 9517
RTN                  ; 9518
LDC    1            ; THEN: 55 ; 9519
JOIN                 ; 9520
LDC    0            ; ELSE: 55 ; 9521
JOIN                 ; 9522
LD     0 0          ;  <== lambda_1015  [Point p] (as expr) ; 9523
CAR                 ; generateTupleAccess total=2 pos=0 ; 9524
LD     1 1          ; var start ; 9525
CAR                 ; generateTupleAccess total=2 pos=0 ; 9526
CEQ                  ; 9527
LDC    1            ; for negation ; 9528
SUB                  ; 9529
LD     0 0          ; var p ; 9530
CDR                 ; generateTupleAccess total=2 pos=1 ; 9531
LD     1 1          ; var start ; 9532
CDR                 ; generateTupleAccess total=2 pos=1 ; 9533
CEQ                  ; 9534
LDC    1            ; for negation ; 9535
SUB                  ; 9536
ADD                  ; 9537
SEL    9540 9542    ; IF? 56 ; 9538
RTN                  ; 9539
LDC    1            ; THEN: 56 ; 9540
JOIN                 ; 9541
LDC    0            ; ELSE: 56 ; 9542
JOIN                 ; 9543
LD     1 2          ;  <== lambda_1016  [Point p] (as expr) ; 9544
LD     0 0          ; var p ; 9545
CDR                 ; generateTupleAccess total=2 pos=1 ; 9546
LD     0 0          ; var p ; 9547
CAR                 ; generateTupleAccess total=2 pos=0 ; 9548
LDF    8245         ;  @getMapItem ; 9549
AP     3             ; 9550
LDC    6            ; CT.GHOST ; 9551
CEQ                  ; 9552
SEL    9555 9557    ; IF? 57 ; 9553
RTN                  ; 9554
LDC    1            ; THEN: 57 ; 9555
JOIN                 ; 9556
LDC    0            ; ELSE: 57 ; 9557
JOIN                 ; 9558
LDC    0            ;  <== lambda_1017  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9559
LD     0 0          ; var t ; 9560
CAR                 ; generateTupleAccess total=2 pos=0 ; 9561
AP     1             ; 9562
LDC    2            ; CT.PILL ; 9563
CEQ                  ; 9564
SEL    9567 9569    ; IF? 58 ; 9565
RTN                  ; 9566
LDC    1            ; THEN: 58 ; 9567
JOIN                 ; 9568
LDC    0            ; ELSE: 58 ; 9569
JOIN                 ; 9570
LD     0 0          ;  <== lambda_1018  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9571
LDC    0            ; just constant from code ; 9572
LD     0 1          ; var t ; 9573
CAR                 ; generateTupleAccess total=2 pos=0 ; 9574
AP     1             ; 9575
LDC    2            ; CT.PILL ; 9576
CEQ                  ; 9577
SEL    9581 9583    ; IF? 59 ; 9578
ADD                  ; 9579
RTN                  ; 9580
LDC    1            ; THEN: 59 ; 9581
JOIN                 ; 9582
LDC    0            ; ELSE: 59 ; 9583
JOIN                 ; 9584
LD     0 0          ;  <== lambda_1019  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9585
CDR                 ; generateTupleAccess total=2 pos=1 ; 9586
CAR                 ; generateTupleAccess total=2 pos=0 ; 9587
LD     1 1          ; var start ; 9588
CAR                 ; generateTupleAccess total=2 pos=0 ; 9589
CEQ                  ; 9590
LDC    1            ; for negation ; 9591
SUB                  ; 9592
LD     0 0          ; var t ; 9593
CDR                 ; generateTupleAccess total=2 pos=1 ; 9594
CDR                 ; generateTupleAccess total=2 pos=1 ; 9595
LD     1 1          ; var start ; 9596
CDR                 ; generateTupleAccess total=2 pos=1 ; 9597
CEQ                  ; 9598
LDC    1            ; for negation ; 9599
SUB                  ; 9600
ADD                  ; 9601
SEL    9604 9606    ; IF? 60 ; 9602
RTN                  ; 9603
LDC    1            ; THEN: 60 ; 9604
JOIN                 ; 9605
LDC    0            ; ELSE: 60 ; 9606
JOIN                 ; 9607
LDC    0            ;  <== lambda_1020  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9608
LD     0 1          ; var t ; 9609
CAR                 ; generateTupleAccess total=2 pos=0 ; 9610
AP     1             ; 9611
LDC    2            ; CT.PILL ; 9612
CEQ                  ; 9613
SEL    9616 9618    ; IF? 61 ; 9614
RTN                  ; 9615
LDC    1            ; THEN: 61 ; 9616
JOIN                 ; 9617
LDC    0            ; ELSE: 61 ; 9618
JOIN                 ; 9619
LD     1 1          ;  <== lambda_1021  [e] (as expr) ; 9620
LD     0 0          ; var e ; 9621
LDF    8075         ;  @pointInEdge ; 9622
AP     2             ; 9623
RTN                  ; 9624
LD     0 0          ;  <== lambda_1022  [e] (as expr) ; 9625
LD     0 0          ; var e ; 9626
LD     1 2          ; var location ; 9627
LD     1 1          ; var worldState ; 9628
CAR                 ; generateTupleAccess total=4 pos=0 ; 9629
LDC 0               ; local var space ; 9630
LDC 0               ; local var space ; 9631
LDF    7270         ;  @collectEdgePills ; 9632
AP     5             ; 9633
LDF    531          ;  @length ; 9634
AP     1             ; 9635
LD     0 0          ; var e ; 9636
LD     1 2          ; var location ; 9637
LD     1 1          ; var worldState ; 9638
CAR                 ; generateTupleAccess total=4 pos=0 ; 9639
LDC 0               ; local var space ; 9640
LDF    7286         ;  @collectEdgeGhosts ; 9641
AP     4             ; 9642
LDF    531          ;  @length ; 9643
AP     1             ; 9644
CONS                 ; 9645
CONS                 ; 9646
RTN                  ; 9647
LD     0 0          ;  <== lambda_1023  [EdgeAndCount cp] (as expr) ; 9648
CDR                 ; generateTupleAccess total=3 pos=1 ; 9649
CAR                  ; 9650
LDC    0            ; just constant from code ; 9651
LD     0 0          ; var cp ; 9652
CDR                 ; generateTupleAccess total=3 pos=2 ; 9653
CDR                  ; 9654
MUL                  ; 9655
SUB                  ; 9656
RTN                  ; 9657
LD     0 0          ;  <== lambda_1024  [Point p] (as expr) ; 9658
CAR                 ; generateTupleAccess total=2 pos=0 ; 9659
LD     1 2          ; var location ; 9660
CAR                 ; generateTupleAccess total=2 pos=0 ; 9661
CEQ                  ; 9662
LDC    1            ; for negation ; 9663
SUB                  ; 9664
LD     0 0          ; var p ; 9665
CDR                 ; generateTupleAccess total=2 pos=1 ; 9666
LD     1 2          ; var location ; 9667
CDR                 ; generateTupleAccess total=2 pos=1 ; 9668
CEQ                  ; 9669
LDC    1            ; for negation ; 9670
SUB                  ; 9671
ADD                  ; 9672
SEL    9675 9677    ; IF? 62 ; 9673
RTN                  ; 9674
LDC    1            ; THEN: 62 ; 9675
JOIN                 ; 9676
LDC    0            ; ELSE: 62 ; 9677
JOIN                 ; 9678
LD     0 0          ;  <== lambda_1025  [ParsedEdge pe] (as expr) ; 9679
CAR                 ; generateTupleAccess total=6 pos=0 ; 9680
LD     1 1          ; var lookingEdge ; 9681
LDC 0               ; local var space ; 9682
LDF    7704         ;  @endingPointOfEdgeRoute ; 9683
AP     2             ; 9684
LDF    7687         ;  @pointEquals ; 9685
AP     2             ; 9686
RTN                  ; 9687
LDC    1            ;  <== lambda_1026  [ParsedEdge f] (as expr) ; 9688
LD     1 3          ; var visited ; 9689
LD     0 0          ; var f ; 9690
CDR                 ; generateTupleAccess total=6 pos=5 ; 9691
CDR                  ; 9692
CDR                  ; 9693
CDR                  ; 9694
CDR                  ; 9695
LDF    1074         ;  @sorted_map_contains ; 9696
AP     2             ; 9697
SUB                  ; 9698
RTN                  ; 9699
LD     0 0          ;  <== lambda_1027  [pe] (as expr) ; 9700
LD     1 1          ; var worldState ; 9701
CAR                 ; generateTupleAccess total=4 pos=0 ; 9702
LDC 0               ; local var space ; 9703
LDC 0               ; local var space ; 9704
LDF    7299         ;  @collectAnyEdgePills ; 9705
AP     4             ; 9706
LDF    531          ;  @length ; 9707
AP     1             ; 9708
LDC    0            ; just constant from code ; 9709
CGT                  ; 9710
SEL    9713 9715    ; IF? 63 ; 9711
RTN                  ; 9712
LDC    1            ; THEN: 63 ; 9713
JOIN                 ; 9714
LDC    0            ; ELSE: 63 ; 9715
JOIN                 ; 9716
LD     0 0          ;  <== lambda_1028  [ParsedEdge f] (as expr) ; 9717
CDR                 ; generateTupleAccess total=6 pos=5 ; 9718
CDR                  ; 9719
CDR                  ; 9720
CDR                  ; 9721
CDR                  ; 9722
LDC    0            ; just constant from code ; 9723
CONS                 ; 9724
RTN                  ; 9725
LD     0 0          ;  <== lambda_1029  [ParsedEdge next] (as expr) ; 9726
LD     1 8          ; var lookingEdge ; 9727
CONS                 ; 9728
RTN                  ; 9729
LD     0 0          ;  <== lambda_1030  [Queue<ListCons<ParsedEdge>> qq, ListCons<ParsedEdge> nr] (as expr) ; 9730
LD     0 1          ; var nr ; 9731
LDF    406          ;  @queue_enqueue ; 9732
AP     2             ; 9733
RTN                  ; 9734
LD     0 0          ;  <== lambda_1031  [acc, pe] (as expr) ; 9735
LD     0 1          ; var pe ; 9736
LDC 0               ; local var space ; 9737
LDC 0               ; local var space ; 9738
LDF    7312         ;  @countAnyEdgePills ; 9739
AP     3             ; 9740
ADD                  ; 9741
RTN                  ; 9742
LD     0 0          ;  <== lambda_1032  [Queue<ListCons<ParsedEdge>> qq, ParsedEdge e] (as expr) ; 9743
LD     0 1          ; var e ; 9744
LDC    0            ; NULL literal ; 9745
CONS                 ; 9746
LDF    406          ;  @queue_enqueue ; 9747
AP     2             ; 9748
RTN                  ; 9749
LD     0 0          ;  <== lambda_1033  [ParsedEdge e] (as expr) ; 9750
CDR                 ; generateTupleAccess total=6 pos=5 ; 9751
CDR                  ; 9752
CDR                  ; 9753
CDR                  ; 9754
CDR                  ; 9755
LDC    0            ; just constant from code ; 9756
CONS                 ; 9757
RTN                  ; 9758
LD     0 0          ;  <== lambda_1034  [r] (as expr) ; 9759
LDC    5            ; just constant from code ; 9760
LD     0 0          ; var r ; 9761
LDF    124          ;  @last ; 9762
AP     1             ; 9763
LD     1 2          ; var worldState ; 9764
CDR                 ; generateTupleAccess total=4 pos=1 ; 9765
CAR                  ; 9766
CDR                 ; generateTupleAccess total=5 pos=1 ; 9767
CAR                  ; 9768
LDC 0               ; local var space ; 9769
LDC 0               ; local var space ; 9770
LDF    7326         ;  @countMyEdgePills ; 9771
AP     4             ; 9772
MUL                  ; 9773
LD     0 0          ; var r ; 9774
LDF    298          ;  @reverse ; 9775
AP     1             ; 9776
CDR                  ; 9777
LDF    7711         ;  @countRoutePills ; 9778
AP     1             ; 9779
ADD                  ; 9780
CONS                 ; 9781
RTN                  ; 9782
LD     0 0          ;  <== lambda_1035  [Tuple<ListCons<ParsedEdge>,Integer> t] (as expr) ; 9783
CDR                 ; generateTupleAccess total=2 pos=1 ; 9784
RTN                  ; 9785
LD     0 0          ;  <== lambda_1036  [p] (as expr) ; 9786
CAR                  ; 9787
LD     0 0          ; var p ; 9788
LDF    124          ;  @last ; 9789
AP     1             ; 9790
LD     0 0          ; var p ; 9791
LD     0 0          ; var p ; 9792
LD     1 3          ; var accessors ; 9793
LDF    7915         ;  @makeEdgeAccess ; 9794
AP     2             ; 9795
LD     0 0          ; var p ; 9796
LDF    531          ;  @length ; 9797
AP     1             ; 9798
LDC    1            ; just constant from code ; 9799
SUB                  ; 9800
LDC    -1           ; just negative constant from code ; 9801
CONS                 ; 9802
CONS                 ; 9803
CONS                 ; 9804
CONS                 ; 9805
CONS                 ; 9806
RTN                  ; 9807
LDC    100          ;  <== lambda_1037  [Point pt] (as expr) ; 9808
LD     0 0          ; var pt ; 9809
CAR                 ; generateTupleAccess total=2 pos=0 ; 9810
LD     1 1          ; var accessors ; 9811
LD     0 0          ; var pt ; 9812
CDR                 ; generateTupleAccess total=2 pos=1 ; 9813
LDF    422          ;  @list_item ; 9814
AP     2             ; 9815
AP     2             ; 9816
RTN                  ; 9817
LD     1 0          ;  <== lambda_1038  [Tuple<Integer,Point> d] (as expr) ; 9818
LD     0 0          ; var d ; 9819
CDR                 ; generateTupleAccess total=2 pos=1 ; 9820
LDF    7808         ;  @isWalkable2 ; 9821
AP     2             ; 9822
LDC    1            ; just constant from code ; 9823
LD     1 3          ; var visited ; 9824
LD     0 0          ; var d ; 9825
CAR                 ; generateTupleAccess total=2 pos=0 ; 9826
LDF    1074         ;  @sorted_map_contains ; 9827
AP     2             ; 9828
SUB                  ; 9829
MUL                  ; 9830
RTN                  ; 9831
LD     1 2          ;  <== lambda_1039  [Tuple<Integer,Point> e] (as expr) ; 9832
LD     0 0          ; var e ; 9833
CAR                 ; generateTupleAccess total=2 pos=0 ; 9834
LDF    1074         ;  @sorted_map_contains ; 9835
AP     2             ; 9836
RTN                  ; 9837
LDC    1            ;  <== lambda_1040  [Tuple<Integer,Point> e] (as expr) ; 9838
LD     1 12         ; var arriveds ; 9839
LD     0 0          ; var e ; 9840
CAR                 ; generateTupleAccess total=2 pos=0 ; 9841
LDF    1074         ;  @sorted_map_contains ; 9842
AP     2             ; 9843
SUB                  ; 9844
RTN                  ; 9845
LD     0 0          ;  <== lambda_1041  [Tuple<Integer,Point> e] (as expr) ; 9846
CDR                 ; generateTupleAccess total=2 pos=1 ; 9847
LD     1 7          ; var thisRoute ; 9848
CONS                 ; 9849
RTN                  ; 9850
LD     0 0          ;  <== lambda_1042  [r, i] (as expr) ; 9851
LD     0 1          ; var i ; 9852
LDF    406          ;  @queue_enqueue ; 9853
AP     2             ; 9854
RTN                  ; 9855
LD     0 0          ;  <== lambda_1043  [Tuple<Integer,Point> e] (as expr) ; 9856
CDR                 ; generateTupleAccess total=2 pos=1 ; 9857
LD     1 7          ; var thisRoute ; 9858
CONS                 ; 9859
RTN                  ; 9860
LD     1 0          ;  <== lambda_1044  [Point ep] (as expr) ; 9861
CAR                 ; generateTupleAccess total=2 pos=0 ; 9862
LD     0 0          ; var ep ; 9863
CAR                 ; generateTupleAccess total=2 pos=0 ; 9864
CEQ                  ; 9865
LD     1 0          ; var pos ; 9866
CDR                 ; generateTupleAccess total=2 pos=1 ; 9867
LD     0 0          ; var ep ; 9868
CDR                 ; generateTupleAccess total=2 pos=1 ; 9869
CEQ                  ; 9870
MUL                  ; 9871
SEL    9874 9876    ; IF? 64 ; 9872
RTN                  ; 9873
LDC    1            ; THEN: 64 ; 9874
JOIN                 ; 9875
LDC    0            ; ELSE: 64 ; 9876
JOIN                 ; 9877
LD     0 0          ;  <== lambda_1045  [col, colx] (as expr) ; 9878
LDC 0               ; local var space ; 9879
LDF    7794         ;  @isWalkable ; 9880
AP     2             ; 9881
LDC    0            ; just constant from code ; 9882
CGT                  ; 9883
SEL    9886 9893    ; IF? 65 ; 9884
RTN                  ; 9885
LD     0 1          ; THEN: 65 ; 9886
LD     1 1          ; var rowy ; 9887
CONS                 ; 9888
LDC 0               ; local var space ; 9889
LDF    219          ;  @JUST ; 9890
AP     2             ; 9891
JOIN                 ; 9892
LDF    215          ; ELSE: 65, ALSO: @NOTHING ; 9893
AP     0             ; 9894
JOIN                 ; 9895
LD     0 0          ;  <== lambda_1046  [Integer a] (as expr) ; 9896
LD     0 0          ; var a ; 9897
LDC    2            ; just constant from code ; 9898
DIV                  ; 9899
LDC    2            ; just constant from code ; 9900
MUL                  ; 9901
CEQ                  ; 9902
SEL    9909 9911    ; IF? 66 ; 9903
LD     0 0          ; var a ; 9904
LDC    2            ; just constant from code ; 9905
DIV                  ; 9906
CONS                 ; 9907
RTN                  ; 9908
LDC    0            ; THEN: 66 ; 9909
JOIN                 ; 9910
LDC    1            ; ELSE: 66 ; 9911
JOIN                 ; 9912
LD     0 1          ;  <== lambda_1047  [Integer elem, Integer acc] (as expr) ; 9913
LDC    2            ; just constant from code ; 9914
MUL                  ; 9915
LD     0 0          ; var elem ; 9916
ADD                  ; 9917
RTN                  ; 9918
LD     0 0          ;  <== lambda_1048  [Tuple<Integer,SortedMap<Cons>> init, Cons step] (as expr) ; 9919
CAR                 ; generateTupleAccess total=2 pos=0 ; 9920
LDC    1            ; just constant from code ; 9921
ADD                  ; 9922
LD     0 0          ; var init ; 9923
CDR                 ; generateTupleAccess total=2 pos=1 ; 9924
LD     0 0          ; var init ; 9925
CAR                 ; generateTupleAccess total=2 pos=0 ; 9926
LD     0 1          ; var step ; 9927
LDF    1105         ;  @sorted_map_assoc ; 9928
AP     3             ; 9929
CONS                 ; 9930
RTN                  ; 9931
LD     0 0          ;  <== lambda_1049  [val, ix] (as expr) ; 9932
LDC    101          ; VMExtras.GET_WRITER ; 9933
LD     0 1          ; var ix ; 9934
LD     1 0          ; var t ; 9935
CDR                 ; generateTupleAccess total=2 pos=1 ; 9936
AP     2             ; 9937
AP     1             ; 9938
RTN                  ; 9939
LD     0 0          ;  <== lambda_1050  [Point p] (as expr) ; 9940
CAR                 ; generateTupleAccess total=2 pos=0 ; 9941
LD     1 2          ; var location ; 9942
CAR                 ; generateTupleAccess total=2 pos=0 ; 9943
CEQ                  ; 9944
LDC    1            ; for negation ; 9945
SUB                  ; 9946
LD     0 0          ; var p ; 9947
CDR                 ; generateTupleAccess total=2 pos=1 ; 9948
LD     1 2          ; var location ; 9949
CDR                 ; generateTupleAccess total=2 pos=1 ; 9950
CEQ                  ; 9951
LDC    1            ; for negation ; 9952
SUB                  ; 9953
ADD                  ; 9954
SEL    9957 9959    ; IF? 122 ; 9955
RTN                  ; 9956
LDC    1            ; THEN: 122 ; 9957
JOIN                 ; 9958
LDC    0            ; ELSE: 122 ; 9959
JOIN                 ; 9960
LD     0 0          ;  <== lambda_1051  [x, y] (as expr) ; 9961
LD     0 1          ; var y ; 9962
MUL                  ; 9963
RTN                  ; 9964
LD     0 0          ;  <== lambda_1052  [x, y] (as expr) ; 9965
LD     0 1          ; var y ; 9966
ADD                  ; 9967
LDC    0            ; just constant from code ; 9968
CGT                  ; 9969
SEL    9972 9974    ; IF? 123 ; 9970
RTN                  ; 9971
LDC    1            ; THEN: 123 ; 9972
JOIN                 ; 9973
LDC    0            ; ELSE: 123 ; 9974
JOIN                 ; 9975
LD     0 0          ;  <== lambda_1053  [x, y] (as expr) ; 9976
LD     0 1          ; var y ; 9977
CEQ                  ; 9978
LDC    1            ; for negation ; 9979
SUB                  ; 9980
SEL    9983 9985    ; IF? 124 ; 9981
RTN                  ; 9982
LDC    1            ; THEN: 124 ; 9983
JOIN                 ; 9984
LDC    0            ; ELSE: 124 ; 9985
JOIN                 ; 9986

