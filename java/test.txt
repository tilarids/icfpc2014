LDC    1            ;  <== entryPoint  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 0
LDC    1            ; just constant from code ; 1
CEQ                  ; 2
SEL    5 13         ; IF? 1 ; 3
RTN                  ; 4
LD     0 0          ; THEN: 1 ; 5
LD     0 1          ; var ghostSpecs ; 6
LDC 0               ; local var space ; 7
LDC 0               ; local var space ; 8
LDC 0               ; local var space ; 9
LDF    2525         ;  @entryFactual ; 10
AP     5             ; 11
JOIN                 ; 12
LDC 0               ; ELSE: 1 ; 13
LDC 0               ; local var space ; 14
LDC 0               ; local var space ; 15
LDC 0               ; local var space ; 16
LDC 0               ; local var space ; 17
LDF    2489         ;  @entryCPUEmulator ; 18
AP     5             ; 19
JOIN                 ; 20
LD     0 0          ;  <== mydebug  [T o] (as blk) ; 21
DBUG                 ; 22
LD     0 0          ; var o ; 23
RTN                  ; 24
LD     0 0          ;  <== mydebugv  [Object tag, T o] (as blk) ; 25
DBUG                 ; 26
LD     0 1          ; var o ; 27
DBUG                 ; 28
LD     0 1          ; var o ; 29
RTN                  ; 30
LD     0 2          ;  <== foldl  [Function2<A,B,A> f, A a, ListCons<B> l] (as blk) ; 31
ATOM                 ; 32
SEL    35 37        ; IF? 2 ; 33
RTN                  ; 34
LD     0 1          ; THEN: 2 ; 35
JOIN                 ; 36
LD     0 0          ; ELSE: 2 ; 37
LD     0 1          ; var a ; 38
LD     0 2          ; var l ; 39
CAR                  ; 40
LD     0 0          ; var f ; 41
AP     2             ; 42
LD     0 2          ; var l ; 43
CDR                  ; 44
LDF    31           ;  @foldl ; 45
AP     3             ; 46
JOIN                 ; 47
LD     0 2          ;  <== foldr  [Function2<A,B,B> f, B a, ListCons<A> l] (as blk) ; 48
ATOM                 ; 49
SEL    52 54        ; IF? 3 ; 50
RTN                  ; 51
LD     0 1          ; THEN: 3 ; 52
JOIN                 ; 53
LD     0 2          ; ELSE: 3 ; 54
CAR                  ; 55
LD     0 0          ; var f ; 56
LD     0 1          ; var a ; 57
LD     0 2          ; var l ; 58
CDR                  ; 59
LDF    48           ;  @foldr ; 60
AP     3             ; 61
LD     0 0          ; var f ; 62
AP     2             ; 63
JOIN                 ; 64
LDF    9609         ;  <== o  [final Function1<B,C> f, final Function1<A,B> g] (as blk), ALSO: @lambda_1000 ; 65
RTN                  ; 66
LDF    9615         ;  <== flip  [Function2<A,B,C> f] (as blk), ALSO: @lambda_1001 ; 67
RTN                  ; 68
LD     0 0          ;  <== map  [ListCons<T> c, Function1<T,T2> arg] (as blk) ; 69
ATOM                 ; 70
SEL    73 75        ; IF? 4 ; 71
RTN                  ; 72
LDC    0            ; THEN: 4 ; 73
JOIN                 ; 74
LD     0 0          ; ELSE: 4 ; 75
CAR                  ; 76
LD     0 1          ; var arg ; 77
AP     1             ; 78
LD     0 0          ; var c ; 79
CDR                  ; 80
LD     0 1          ; var arg ; 81
LDF    69           ;  @map ; 82
AP     2             ; 83
CONS                 ; 84
JOIN                 ; 85
LD     0 0          ;  <== mapi  [ListCons<D> c, int ix, Function2<D,Integer,D2> arg] (as blk) ; 86
ATOM                 ; 87
SEL    90 92        ; IF? 5 ; 88
RTN                  ; 89
LDC    0            ; THEN: 5 ; 90
JOIN                 ; 91
LD     0 0          ; ELSE: 5 ; 92
CAR                  ; 93
LD     0 1          ; var ix ; 94
LD     0 2          ; var arg ; 95
AP     2             ; 96
LD     0 0          ; var c ; 97
CDR                  ; 98
LD     0 1          ; var ix ; 99
LDC    1            ; just constant from code ; 100
ADD                  ; 101
LD     0 2          ; var arg ; 102
LDF    86           ;  @mapi ; 103
AP     3             ; 104
CONS                 ; 105
JOIN                 ; 106
LD     0 0          ;  <== cat_maybes  [ListCons<Maybe<D>> data] (as blk) ; 107
LDF    9620         ;  @lambda_1002 ; 108
LDF    69           ;  @map ; 109
AP     2             ; 110
ST     0 1           ; 111
LD     0 1          ; var mtl ; 112
LDF    118          ;  @concat ; 113
AP     1             ; 114
ST     0 2           ; 115
LD     0 2          ; var rv ; 116
RTN                  ; 117
LD     0 0          ;  <== concat  [ListCons<ListCons<D>> data] (as blk) ; 118
LDC    0            ; NULL literal ; 119
LDF    149          ;  @concat_acc ; 120
AP     2             ; 121
LDF    299          ;  @reverse ; 122
AP     1             ; 123
RTN                  ; 124
LD     0 0          ;  <== last  [ListCons<D> data] (as blk) ; 125
ATOM                 ; 126
SEL    133 135       ; 127
LD     0 0          ; var data ; 128
CDR                  ; 129
ATOM                 ; 130
SEL    136 139      ; IF? 8 ; 131
RTN                  ; 132
BRK                 ; branch@133 ; 133
JOIN                 ; 134
JOIN                ; branch@135 ; 135
LD     0 0          ; THEN: 8 ; 136
CAR                  ; 137
JOIN                 ; 138
LD     0 0          ; ELSE: 8 ; 139
CDR                  ; 140
LDF    125          ;  @last ; 141
AP     1             ; 142
JOIN                 ; 143
LD     0 0          ;  <== concat_set  [ListCons<ListCons<D>> data] (as blk) ; 144
LDC    0            ; NULL literal ; 145
LDF    149          ;  @concat_acc ; 146
AP     2             ; 147
RTN                  ; 148
LD     0 0          ;  <== concat_acc  [ListCons<ListCons<D>> data, ListCons<D> acc] (as blk) ; 149
ATOM                 ; 150
SEL    153 155      ; IF? 6 ; 151
RTN                  ; 152
LD     0 1          ; THEN: 6 ; 153
JOIN                 ; 154
LD     0 0          ; ELSE: 6 ; 155
CDR                  ; 156
LD     0 0          ; var data ; 157
CAR                  ; 158
LD     0 1          ; var acc ; 159
LDF    165          ;  @concat2 ; 160
AP     2             ; 161
LDF    149          ;  @concat_acc ; 162
AP     2             ; 163
JOIN                 ; 164
LD     0 0          ;  <== concat2  [ListCons<D> data, ListCons<D> data2] (as blk) ; 165
ATOM                 ; 166
SEL    169 171      ; IF? 9 ; 167
RTN                  ; 168
LD     0 1          ; THEN: 9 ; 169
JOIN                 ; 170
LD     0 1          ; ELSE: 9 ; 171
ATOM                 ; 172
SEL    175 177      ; IF? 73 ; 173
JOIN                 ; 174
LD     0 0          ; THEN: 73 ; 175
JOIN                 ; 176
LD     0 0          ; ELSE: 73 ; 177
LDF    299          ;  @reverse ; 178
AP     1             ; 179
LD     0 1          ; var data2 ; 180
LDF    201          ;  @concat2_acc ; 181
AP     2             ; 182
JOIN                 ; 183
LD     0 0          ;  <== concat2_set  [ListCons<D> data, ListCons<D> data2] (as blk) ; 184
ATOM                 ; 185
SEL    188 190      ; IF? 10 ; 186
RTN                  ; 187
LD     0 1          ; THEN: 10 ; 188
JOIN                 ; 189
LD     0 1          ; ELSE: 10 ; 190
ATOM                 ; 191
SEL    194 196      ; IF? 74 ; 192
JOIN                 ; 193
LD     0 0          ; THEN: 74 ; 194
JOIN                 ; 195
LD     0 0          ; ELSE: 74 ; 196
LD     0 1          ; var data2 ; 197
LDF    201          ;  @concat2_acc ; 198
AP     2             ; 199
JOIN                 ; 200
LD     0 0          ;  <== concat2_acc  [ListCons<D> data, ListCons<D> acc] (as blk) ; 201
ATOM                 ; 202
SEL    205 207      ; IF? 11 ; 203
RTN                  ; 204
LD     0 1          ; THEN: 11 ; 205
JOIN                 ; 206
LD     0 0          ; ELSE: 11 ; 207
CDR                  ; 208
LD     0 0          ; var data ; 209
CAR                  ; 210
LD     0 1          ; var acc ; 211
CONS                 ; 212
LDF    201          ;  @concat2_acc ; 213
AP     2             ; 214
JOIN                 ; 215
LDC    0            ;  <== NOTHING  [] (as blk) ; 216
LDC    0            ; NULL literal ; 217
CONS                 ; 218
RTN                  ; 219
LDC    1            ;  <== JUST  [T t] (as blk) ; 220
LD     0 0          ; var t ; 221
CONS                 ; 222
ST     0 1           ; 223
LD     0 1          ; var tMaybe ; 224
RTN                  ; 225
LD     0 0          ;  <== maybeToList  [Maybe<D> d] (as blk) ; 226
LDF    283          ;  @is_nothing ; 227
AP     1             ; 228
LDC    1            ; just constant from code ; 229
CEQ                  ; 230
SEL    233 235      ; IF? 12 ; 231
RTN                  ; 232
LDC    0            ; THEN: 12 ; 233
JOIN                 ; 234
LD     0 0          ; ELSE: 12 ; 235
LDF    288          ;  @from_maybe ; 236
AP     1             ; 237
LDC    0            ; NULL literal ; 238
CONS                 ; 239
JOIN                 ; 240
LDC    0            ;  <== catMaybes_acc  [ListCons<Maybe<D>> data, ListCons<D> acc] (as blk) ; 241
ST     0 2           ; 242
LD     0 0          ; var data ; 243
ATOM                 ; 244
SEL    248 251       ; 245
LD     0 2          ; var rv ; 246
RTN                  ; 247
LD     0 1          ; branch@248 ; 248
ST     0 2           ; 249
JOIN                 ; 250
LD     0 0          ; branch@251 ; 251
CAR                  ; 252
LDF    283          ;  @is_nothing ; 253
AP     1             ; 254
ST     0 3           ; 255
LD     0 0          ; var data ; 256
CAR                  ; 257
LDF    288          ;  @from_maybe ; 258
AP     1             ; 259
ST     0 4           ; 260
LD     0 4          ; var data1 ; 261
LD     0 1          ; var acc ; 262
CONS                 ; 263
ST     0 5           ; 264
LD     0 0          ; var data ; 265
CDR                  ; 266
LD     0 3          ; var nothing ; 267
LDC    1            ; just constant from code ; 268
CEQ                  ; 269
SEL    279 281      ; IF? 75 ; 270
LDC 0               ; local var space ; 271
LDC 0               ; local var space ; 272
LDC 0               ; local var space ; 273
LDC 0               ; local var space ; 274
LDF    241          ;  @catMaybes_acc ; 275
AP     6             ; 276
ST     0 2           ; 277
JOIN                 ; 278
LD     0 1          ; THEN: 75 ; 279
JOIN                 ; 280
LD     0 5          ; ELSE: 75 ; 281
JOIN                 ; 282
LDC    1            ;  <== is_nothing  [Maybe<D> head] (as blk) ; 283
LD     0 0          ; var head ; 284
CAR                 ; generateTupleAccess total=2 pos=0 ; 285
SUB                  ; 286
RTN                  ; 287
LD     0 0          ;  <== from_maybe  [Maybe<D> head] (as blk) ; 288
CAR                 ; generateTupleAccess total=2 pos=0 ; 289
LDC    0            ; just constant from code ; 290
CEQ                  ; 291
SEL    296 298       ; 292
LD     0 0          ; var head ; 293
CDR                 ; generateTupleAccess total=2 pos=1 ; 294
RTN                  ; 295
BRK                 ; branch@296 ; 296
JOIN                 ; 297
JOIN                ; branch@298 ; 298
LD     0 0          ;  <== reverse  [ListCons<D> c] (as blk) ; 299
LDC    0            ; NULL literal ; 300
LDF    371          ;  @reverse_acc ; 301
AP     2             ; 302
RTN                  ; 303
LD     0 0          ;  <== maximum_by_acc  [ListCons<D> d, Function1<D,Integer> projection, D acc] (as blk) ; 304
ATOM                 ; 305
SEL    308 310      ; IF? 13 ; 306
RTN                  ; 307
LD     0 2          ; THEN: 13 ; 308
JOIN                 ; 309
LD     0 2          ; ELSE: 13 ; 310
LD     0 1          ; var projection ; 311
AP     1             ; 312
LD     0 0          ; var d ; 313
CAR                  ; 314
LD     0 1          ; var projection ; 315
AP     1             ; 316
CGT                  ; 317
SEL    320 327      ; IF? 76 ; 318
JOIN                 ; 319
LD     0 0          ; THEN: 76 ; 320
CDR                  ; 321
LD     0 1          ; var projection ; 322
LD     0 2          ; var acc ; 323
LDF    304          ;  @maximum_by_acc ; 324
AP     3             ; 325
JOIN                 ; 326
LD     0 0          ; ELSE: 76 ; 327
CDR                  ; 328
LD     0 1          ; var projection ; 329
LD     0 0          ; var d ; 330
CAR                  ; 331
LDF    304          ;  @maximum_by_acc ; 332
AP     3             ; 333
JOIN                 ; 334
LD     0 0          ;  <== maximum_by  [ListCons<D> d, Function1<D,Integer> projection] (as blk) ; 335
ATOM                 ; 336
SEL    346 348       ; 337
LD     0 0          ; var d ; 338
CDR                  ; 339
LD     0 1          ; var projection ; 340
LD     0 0          ; var d ; 341
CAR                  ; 342
LDF    304          ;  @maximum_by_acc ; 343
AP     3             ; 344
RTN                  ; 345
BRK                 ; branch@346 ; 346
JOIN                 ; 347
JOIN                ; branch@348 ; 348
LD     0 0          ;  <== dropWhile  [ListCons<D> c, Function1<D,Integer> test] (as blk) ; 349
ATOM                 ; 350
SEL    353 355      ; IF? 14 ; 351
RTN                  ; 352
LDC    0            ; THEN: 14 ; 353
JOIN                 ; 354
LD     0 0          ; ELSE: 14 ; 355
CAR                  ; 356
LD     0 1          ; var test ; 357
AP     1             ; 358
LDC    1            ; just constant from code ; 359
CEQ                  ; 360
SEL    363 369      ; IF? 77 ; 361
JOIN                 ; 362
LD     0 0          ; THEN: 77 ; 363
CDR                  ; 364
LD     0 1          ; var test ; 365
LDF    349          ;  @dropWhile ; 366
AP     2             ; 367
JOIN                 ; 368
LD     0 0          ; ELSE: 77 ; 369
JOIN                 ; 370
LD     0 0          ;  <== reverse_acc  [ListCons<D> c, ListCons<D> acc] (as blk) ; 371
ATOM                 ; 372
SEL    375 377      ; IF? 7 ; 373
RTN                  ; 374
LD     0 1          ; THEN: 7 ; 375
JOIN                 ; 376
LD     0 0          ; ELSE: 7 ; 377
CDR                  ; 378
LD     0 0          ; var c ; 379
CAR                  ; 380
LD     0 1          ; var acc ; 381
CONS                 ; 382
LDF    371          ;  @reverse_acc ; 383
AP     2             ; 384
JOIN                 ; 385
LD     0 0          ;  <== fold0  [ListCons<I> c, R init, Function2<R,I,R> arg] (as blk) ; 386
ATOM                 ; 387
SEL    390 392      ; IF? 15 ; 388
RTN                  ; 389
LD     0 1          ; THEN: 15 ; 390
JOIN                 ; 391
LD     0 0          ; ELSE: 15 ; 392
CDR                  ; 393
LD     0 1          ; var init ; 394
LD     0 0          ; var c ; 395
CAR                  ; 396
LD     0 2          ; var arg ; 397
AP     2             ; 398
LD     0 2          ; var arg ; 399
LDF    386          ;  @fold0 ; 400
AP     3             ; 401
JOIN                 ; 402
LDC    0            ;  <== queue_new  [] (as blk) ; 403
LDC    0            ; NULL literal ; 404
CONS                 ; 405
RTN                  ; 406
LD     0 0          ;  <== queue_enqueue  [Queue<T> q, T v] (as blk) ; 407
CAR                 ; generateTupleAccess total=2 pos=0 ; 408
LD     0 1          ; var v ; 409
LD     0 0          ; var q ; 410
CDR                 ; generateTupleAccess total=2 pos=1 ; 411
CONS                 ; 412
CONS                 ; 413
RTN                  ; 414
LD     0 0          ;  <== queue_isempty  [Queue<T> q] (as blk) ; 415
CAR                 ; generateTupleAccess total=2 pos=0 ; 416
ATOM                 ; 417
LD     0 0          ; var q ; 418
CDR                 ; generateTupleAccess total=2 pos=1 ; 419
ATOM                 ; 420
MUL                  ; 421
RTN                  ; 422
LDC    0            ;  <== list_item  [Cons list, int n] (as blk) ; 423
LD     0 1          ; var n ; 424
CGT                  ; 425
SEL    432 434       ; 426
LD     0 1          ; var n ; 427
LDC    0            ; just constant from code ; 428
CEQ                  ; 429
SEL    435 438      ; IF? 16 ; 430
RTN                  ; 431
BRK                 ; branch@432 ; 432
JOIN                 ; 433
JOIN                ; branch@434 ; 434
LD     0 0          ; THEN: 16 ; 435
CAR                  ; 436
JOIN                 ; 437
LD     0 0          ; ELSE: 16 ; 438
CDR                  ; 439
LD     0 1          ; var n ; 440
LDC    1            ; just constant from code ; 441
SUB                  ; 442
LDF    423          ;  @list_item ; 443
AP     2             ; 444
JOIN                 ; 445
LDC    0            ;  <== list_item  [ListCons<T> list, int n] (as blk) ; 446
LD     0 1          ; var n ; 447
CGT                  ; 448
SEL    455 457       ; 449
LD     0 1          ; var n ; 450
LDC    0            ; just constant from code ; 451
CEQ                  ; 452
SEL    458 461      ; IF? 17 ; 453
RTN                  ; 454
BRK                 ; branch@455 ; 455
JOIN                 ; 456
JOIN                ; branch@457 ; 457
LD     0 0          ; THEN: 17 ; 458
CAR                  ; 459
JOIN                 ; 460
LD     0 0          ; ELSE: 17 ; 461
CDR                  ; 462
LD     0 1          ; var n ; 463
LDC    1            ; just constant from code ; 464
SUB                  ; 465
LDF    423          ;  @list_item ; 466
AP     2             ; 467
JOIN                 ; 468
LDC    0            ;  <== list_item_def  [Cons list, int index, Object deflt] (as blk) ; 469
LD     0 1          ; var index ; 470
CGT                  ; 471
SEL    474 476      ; IF? 18 ; 472
RTN                  ; 473
LD     0 2          ; THEN: 18 ; 474
JOIN                 ; 475
LD     0 1          ; ELSE: 18 ; 476
LDC    0            ; just constant from code ; 477
CEQ                  ; 478
SEL    481 484      ; IF? 78 ; 479
JOIN                 ; 480
LD     0 0          ; THEN: 78 ; 481
CAR                  ; 482
JOIN                 ; 483
LD     0 0          ; ELSE: 78 ; 484
CDR                  ; 485
LD     0 1          ; var index ; 486
LDC    1            ; just constant from code ; 487
SUB                  ; 488
LDF    423          ;  @list_item ; 489
AP     2             ; 490
JOIN                 ; 491
LDC    0            ;  <== queue_dequeue  [Queue<T> q] (as blk) ; 492
ST     0 1           ; 493
LD     0 0          ; var q ; 494
CAR                 ; generateTupleAccess total=2 pos=0 ; 495
ATOM                 ; 496
SEL    500 507       ; 497
LD     0 1          ; var retval ; 498
RTN                  ; 499
LD     0 0          ; branch@500 ; 500
CDR                 ; generateTupleAccess total=2 pos=1 ; 501
ATOM                 ; 502
LDC    1            ; for negation ; 503
SUB                  ; 504
SEL    519 530       ; 505
JOIN                 ; 506
LD     0 0          ; branch@507 ; 507
CAR                 ; generateTupleAccess total=2 pos=0 ; 508
CAR                  ; 509
LD     0 0          ; var q ; 510
CAR                 ; generateTupleAccess total=2 pos=0 ; 511
CDR                  ; 512
LD     0 0          ; var q ; 513
CDR                 ; generateTupleAccess total=2 pos=1 ; 514
CONS                 ; 515
CONS                 ; 516
ST     0 1           ; 517
JOIN                 ; 518
LD     0 0          ; branch@519 ; 519
CDR                 ; generateTupleAccess total=2 pos=1 ; 520
LDF    299          ;  @reverse ; 521
AP     1             ; 522
LDC    0            ; NULL literal ; 523
CONS                 ; 524
LDC 0               ; local var space ; 525
LDF    492          ;  @queue_dequeue ; 526
AP     2             ; 527
ST     0 1           ; 528
JOIN                 ; 529
BRK                 ; branch@530 ; 530
JOIN                 ; 531
LD     0 0          ;  <== length  [ListCons<T> list] (as blk) ; 532
LDC    0            ; just constant from code ; 533
LDF    646          ;  @elements_counter ; 534
AP     2             ; 535
RTN                  ; 536
LD     0 0          ;  <== filter  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 537
LD     0 1          ; var pred ; 538
LDC    0            ; NULL literal ; 539
LDF    609          ;  @filter_acc ; 540
AP     3             ; 541
LDF    299          ;  @reverse ; 542
AP     1             ; 543
RTN                  ; 544
LD     0 0          ;  <== any  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 545
ATOM                 ; 546
SEL    549 551      ; IF? 21 ; 547
RTN                  ; 548
LDC    0            ; THEN: 21 ; 549
JOIN                 ; 550
LD     0 0          ; ELSE: 21 ; 551
CAR                  ; 552
LD     0 1          ; var pred ; 553
AP     1             ; 554
LDC    1            ; just constant from code ; 555
CEQ                  ; 556
SEL    559 561      ; IF? 79 ; 557
JOIN                 ; 558
LDC    1            ; THEN: 79 ; 559
JOIN                 ; 560
LD     0 0          ; ELSE: 79 ; 561
CDR                  ; 562
LD     0 1          ; var pred ; 563
LDF    545          ;  @any ; 564
AP     2             ; 565
JOIN                 ; 566
LD     0 0          ;  <== noneof  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 567
ATOM                 ; 568
SEL    571 573      ; IF? 22 ; 569
RTN                  ; 570
LDC    1            ; THEN: 22 ; 571
JOIN                 ; 572
LD     0 0          ; ELSE: 22 ; 573
CAR                  ; 574
LD     0 1          ; var pred ; 575
AP     1             ; 576
LDC    1            ; just constant from code ; 577
CEQ                  ; 578
SEL    581 583      ; IF? 80 ; 579
JOIN                 ; 580
LDC    0            ; THEN: 80 ; 581
JOIN                 ; 582
LD     0 0          ; ELSE: 80 ; 583
CDR                  ; 584
LD     0 1          ; var pred ; 585
LDF    567          ;  @noneof ; 586
AP     2             ; 587
JOIN                 ; 588
LD     0 0          ;  <== empty  [Cons d] (as blk) ; 589
ATOM                 ; 590
LDC    1            ; for negation ; 591
SUB                  ; 592
SEL    595 597      ; IF? 23 ; 593
RTN                  ; 594
LDC    0            ; THEN: 23 ; 595
JOIN                 ; 596
LDC    1            ; ELSE: 23 ; 597
JOIN                 ; 598
LD     0 0          ;  <== notempty  [Cons d] (as blk) ; 599
ATOM                 ; 600
LDC    1            ; for negation ; 601
SUB                  ; 602
SEL    605 607      ; IF? 24 ; 603
RTN                  ; 604
LDC    1            ; THEN: 24 ; 605
JOIN                 ; 606
LDC    0            ; ELSE: 24 ; 607
JOIN                 ; 608
LD     0 0          ;  <== filter_acc  [ListCons<T> list, Function1<T,Integer> pred, ListCons<T> acc] (as blk) ; 609
ATOM                 ; 610
SEL    613 615      ; IF? 20 ; 611
RTN                  ; 612
LD     0 2          ; THEN: 20 ; 613
JOIN                 ; 614
LD     0 0          ; ELSE: 20 ; 615
CDR                  ; 616
LD     0 1          ; var pred ; 617
LD     0 0          ; var list ; 618
CAR                  ; 619
LD     0 1          ; var pred ; 620
AP     1             ; 621
LDC    1            ; just constant from code ; 622
CEQ                  ; 623
SEL    628 633      ; IF? 81 ; 624
LDF    609          ;  @filter_acc ; 625
AP     3             ; 626
JOIN                 ; 627
LD     0 0          ; THEN: 81 ; 628
CAR                  ; 629
LD     0 2          ; var acc ; 630
CONS                 ; 631
JOIN                 ; 632
LD     0 2          ; ELSE: 81 ; 633
JOIN                 ; 634
LD     0 0          ;  <== map_height  [Cons map] (as blk) ; 635
LDC    0            ; just constant from code ; 636
LDF    646          ;  @elements_counter ; 637
AP     2             ; 638
RTN                  ; 639
LD     0 0          ;  <== map_width  [Cons map] (as blk) ; 640
CAR                  ; 641
LDC    0            ; just constant from code ; 642
LDF    646          ;  @elements_counter ; 643
AP     2             ; 644
RTN                  ; 645
LD     0 0          ;  <== elements_counter  [Cons list, int counter] (as blk) ; 646
ATOM                 ; 647
SEL    650 652      ; IF? 19 ; 648
RTN                  ; 649
LD     0 1          ; THEN: 19 ; 650
JOIN                 ; 651
LD     0 0          ; ELSE: 19 ; 652
CDR                  ; 653
LD     0 1          ; var counter ; 654
LDC    1            ; just constant from code ; 655
ADD                  ; 656
LDF    646          ;  @elements_counter ; 657
AP     2             ; 658
JOIN                 ; 659
LD     0 1          ;  <== zip_with  [Function2<A,B,C> f, ListCons<A> x, ListCons<B> y] (as blk) ; 660
ATOM                 ; 661
SEL    664 666      ; IF? 25 ; 662
RTN                  ; 663
LDC    0            ; THEN: 25 ; 664
JOIN                 ; 665
LD     0 2          ; ELSE: 25 ; 666
ATOM                 ; 667
SEL    670 672      ; IF? 82 ; 668
JOIN                 ; 669
LDC    0            ; THEN: 82 ; 670
JOIN                 ; 671
LD     0 1          ; ELSE: 82 ; 672
CAR                  ; 673
LD     0 2          ; var y ; 674
CAR                  ; 675
LD     0 0          ; var f ; 676
AP     2             ; 677
LD     0 0          ; var f ; 678
LD     0 1          ; var x ; 679
CDR                  ; 680
LD     0 2          ; var y ; 681
CDR                  ; 682
LDF    660          ;  @zip_with ; 683
AP     3             ; 684
CONS                 ; 685
JOIN                 ; 686
LD     0 1          ;  <== zip3_with  [Function3<A,B,C,R> f, ListCons<A> x, ListCons<B> y, ListCons<C> z] (as blk) ; 687
ATOM                 ; 688
SEL    691 693      ; IF? 26 ; 689
RTN                  ; 690
LDC    0            ; THEN: 26 ; 691
JOIN                 ; 692
LD     0 2          ; ELSE: 26 ; 693
ATOM                 ; 694
SEL    697 699      ; IF? 83 ; 695
JOIN                 ; 696
LDC    0            ; THEN: 83 ; 697
JOIN                 ; 698
LD     0 3          ; ELSE: 83 ; 699
ATOM                 ; 700
SEL    703 705      ; IF? 84 ; 701
JOIN                 ; 702
LDC    0            ; THEN: 84 ; 703
JOIN                 ; 704
LD     0 1          ; ELSE: 84 ; 705
CAR                  ; 706
LD     0 2          ; var y ; 707
CAR                  ; 708
LD     0 3          ; var z ; 709
CAR                  ; 710
LD     0 0          ; var f ; 711
AP     3             ; 712
LD     0 0          ; var f ; 713
LD     0 1          ; var x ; 714
CDR                  ; 715
LD     0 2          ; var y ; 716
CDR                  ; 717
LD     0 3          ; var z ; 718
CDR                  ; 719
LDF    687          ;  @zip3_with ; 720
AP     4             ; 721
CONS                 ; 722
JOIN                 ; 723
LD     0 0          ;  <== zip  [final ListCons<A> x, final ListCons<B> y] (as blk) ; 724
ATOM                 ; 725
SEL    728 730      ; IF? 27 ; 726
RTN                  ; 727
LDC    0            ; THEN: 27 ; 728
JOIN                 ; 729
LD     0 1          ; ELSE: 27 ; 730
ATOM                 ; 731
SEL    734 736      ; IF? 85 ; 732
JOIN                 ; 733
LDC    0            ; THEN: 85 ; 734
JOIN                 ; 735
LD     0 0          ; ELSE: 85 ; 736
CAR                  ; 737
LD     0 1          ; var y ; 738
CAR                  ; 739
CONS                 ; 740
LD     0 0          ; var x ; 741
CDR                  ; 742
LD     0 1          ; var y ; 743
CDR                  ; 744
LDF    724          ;  @zip ; 745
AP     2             ; 746
CONS                 ; 747
JOIN                 ; 748
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 749
LD     0 0          ; var f ; 750
AP     1             ; 751
CAR                  ; 752
ST     0 3           ; 753
LD     0 2          ; var n ; 754
LDC    0            ; just constant from code ; 755
CEQ                  ; 756
SEL    759 763      ; IF? 28 ; 757
RTN                  ; 758
LD     0 3          ; THEN: 28 ; 759
LDC    0            ; NULL literal ; 760
CONS                 ; 761
JOIN                 ; 762
LD     0 3          ; ELSE: 28 ; 763
LD     0 0          ; var f ; 764
LD     0 1          ; var a ; 765
LD     0 0          ; var f ; 766
AP     1             ; 767
CDR                  ; 768
LD     0 2          ; var n ; 769
LDC    1            ; just constant from code ; 770
SUB                  ; 771
LDC 0               ; local var space ; 772
LDF    749          ;  @produce_n ; 773
AP     4             ; 774
CONS                 ; 775
JOIN                 ; 776
LD     0 0          ;  <== range_n  [int n] (as blk) ; 777
LDC    0            ; just constant from code ; 778
CEQ                  ; 779
SEL    782 786      ; IF? 29 ; 780
RTN                  ; 781
LD     0 0          ; THEN: 29 ; 782
LDC    0            ; NULL literal ; 783
CONS                 ; 784
JOIN                 ; 785
LD     0 0          ; ELSE: 29 ; 786
LD     0 0          ; var n ; 787
LDC    1            ; just constant from code ; 788
SUB                  ; 789
LDF    777          ;  @range_n ; 790
AP     1             ; 791
CONS                 ; 792
JOIN                 ; 793
LDC    1            ;  <== sorted_node_new  [int key, T val, int lev, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 794
LD     0 3          ; var lo ; 795
ATOM                 ; 796
LDC    1            ; for negation ; 797
SUB                  ; 798
SEL    818 821      ; IF? 30 ; 799
ADD                  ; 800
LD     0 4          ; var hi ; 801
ATOM                 ; 802
LDC    1            ; for negation ; 803
SUB                  ; 804
SEL    823 826      ; IF? 31 ; 805
ADD                  ; 806
LD     0 0          ; var key ; 807
LD     0 1          ; var val ; 808
LD     0 2          ; var lev ; 809
LD     0 3          ; var lo ; 810
LD     0 4          ; var hi ; 811
CONS                 ; 812
CONS                 ; 813
CONS                 ; 814
CONS                 ; 815
CONS                 ; 816
RTN                  ; 817
LD     0 3          ; THEN: 30 ; 818
CAR                 ; generateTupleAccess total=6 pos=0 ; 819
JOIN                 ; 820
LDC    0            ; ELSE: 30 ; 821
JOIN                 ; 822
LD     0 4          ; THEN: 31 ; 823
CAR                 ; generateTupleAccess total=6 pos=0 ; 824
JOIN                 ; 825
LDC    0            ; ELSE: 31 ; 826
JOIN                 ; 827
LD     0 0          ;  <== sorted_node_with_lev  [SortedMapNode<T> node, int lev] (as blk) ; 828
CDR                 ; generateTupleAccess total=6 pos=1 ; 829
CAR                  ; 830
LD     0 0          ; var node ; 831
CDR                 ; generateTupleAccess total=6 pos=2 ; 832
CDR                  ; 833
CAR                  ; 834
LD     0 1          ; var lev ; 835
LD     0 0          ; var node ; 836
CDR                 ; generateTupleAccess total=6 pos=4 ; 837
CDR                  ; 838
CDR                  ; 839
CDR                  ; 840
CAR                  ; 841
LD     0 0          ; var node ; 842
CDR                 ; generateTupleAccess total=6 pos=5 ; 843
CDR                  ; 844
CDR                  ; 845
CDR                  ; 846
CDR                  ; 847
LDF    794          ;  @sorted_node_new ; 848
AP     5             ; 849
RTN                  ; 850
LD     0 0          ;  <== sorted_node_with_lo_hi  [SortedMapNode<T> node, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 851
CDR                 ; generateTupleAccess total=6 pos=1 ; 852
CAR                  ; 853
LD     0 0          ; var node ; 854
CDR                 ; generateTupleAccess total=6 pos=2 ; 855
CDR                  ; 856
CAR                  ; 857
LD     0 0          ; var node ; 858
CDR                 ; generateTupleAccess total=6 pos=3 ; 859
CDR                  ; 860
CDR                  ; 861
CAR                  ; 862
LD     0 1          ; var lo ; 863
LD     0 2          ; var hi ; 864
LDF    794          ;  @sorted_node_new ; 865
AP     5             ; 866
RTN                  ; 867
LD     0 0          ;  <== sorted_node_with_lo  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 868
LD     0 1          ; var lo ; 869
LD     0 0          ; var node ; 870
CDR                 ; generateTupleAccess total=6 pos=5 ; 871
CDR                  ; 872
CDR                  ; 873
CDR                  ; 874
CDR                  ; 875
LDF    851          ;  @sorted_node_with_lo_hi ; 876
AP     3             ; 877
RTN                  ; 878
LD     0 0          ;  <== sorted_node_with_hi  [SortedMapNode<T> node, SortedMapNode<T> hi] (as blk) ; 879
LD     0 0          ; var node ; 880
CDR                 ; generateTupleAccess total=6 pos=4 ; 881
CDR                  ; 882
CDR                  ; 883
CDR                  ; 884
CAR                  ; 885
LD     0 1          ; var hi ; 886
LDF    851          ;  @sorted_node_with_lo_hi ; 887
AP     3             ; 888
RTN                  ; 889
LD     0 0          ;  <== sorted_node_has  [SortedMapNode<T> node, int key] (as blk) ; 890
ATOM                 ; 891
SEL    894 896      ; IF? 32 ; 892
RTN                  ; 893
LDC    0            ; THEN: 32 ; 894
JOIN                 ; 895
LD     0 1          ; ELSE: 32 ; 896
LD     0 0          ; var node ; 897
CDR                 ; generateTupleAccess total=6 pos=1 ; 898
CAR                  ; 899
CEQ                  ; 900
SEL    903 905      ; IF? 86 ; 901
JOIN                 ; 902
LDC    1            ; THEN: 86 ; 903
JOIN                 ; 904
LD     0 0          ; ELSE: 86 ; 905
CDR                 ; generateTupleAccess total=6 pos=1 ; 906
CAR                  ; 907
LD     0 1          ; var key ; 908
CGT                  ; 909
SEL    915 922      ; IF? 87 ; 910
LD     0 1          ; var key ; 911
LDF    890          ;  @sorted_node_has ; 912
AP     2             ; 913
JOIN                 ; 914
LD     0 0          ; THEN: 87 ; 915
CDR                 ; generateTupleAccess total=6 pos=4 ; 916
CDR                  ; 917
CDR                  ; 918
CDR                  ; 919
CAR                  ; 920
JOIN                 ; 921
LD     0 0          ; ELSE: 87 ; 922
CDR                 ; generateTupleAccess total=6 pos=5 ; 923
CDR                  ; 924
CDR                  ; 925
CDR                  ; 926
CDR                  ; 927
JOIN                 ; 928
LD     0 0          ;  <== sorted_node_get  [SortedMapNode<T> node, int key, T def] (as blk) ; 929
ATOM                 ; 930
SEL    933 935      ; IF? 33 ; 931
RTN                  ; 932
LD     0 2          ; THEN: 33 ; 933
JOIN                 ; 934
LD     0 1          ; ELSE: 33 ; 935
LD     0 0          ; var node ; 936
CDR                 ; generateTupleAccess total=6 pos=1 ; 937
CAR                  ; 938
CEQ                  ; 939
SEL    942 947      ; IF? 88 ; 940
JOIN                 ; 941
LD     0 0          ; THEN: 88 ; 942
CDR                 ; generateTupleAccess total=6 pos=2 ; 943
CDR                  ; 944
CAR                  ; 945
JOIN                 ; 946
LD     0 0          ; ELSE: 88 ; 947
CDR                 ; generateTupleAccess total=6 pos=1 ; 948
CAR                  ; 949
LD     0 1          ; var key ; 950
CGT                  ; 951
SEL    958 965      ; IF? 89 ; 952
LD     0 1          ; var key ; 953
LD     0 2          ; var def ; 954
LDF    929          ;  @sorted_node_get ; 955
AP     3             ; 956
JOIN                 ; 957
LD     0 0          ; THEN: 89 ; 958
CDR                 ; generateTupleAccess total=6 pos=4 ; 959
CDR                  ; 960
CDR                  ; 961
CDR                  ; 962
CAR                  ; 963
JOIN                 ; 964
LD     0 0          ; ELSE: 89 ; 965
CDR                 ; generateTupleAccess total=6 pos=5 ; 966
CDR                  ; 967
CDR                  ; 968
CDR                  ; 969
CDR                  ; 970
JOIN                 ; 971
LD     0 0          ;  <== sorted_node_put  [SortedMapNode<T> node, int key, T val] (as blk) ; 972
ATOM                 ; 973
SEL    976 984      ; IF? 34 ; 974
RTN                  ; 975
LD     0 1          ; THEN: 34 ; 976
LD     0 2          ; var val ; 977
LDC    0            ; just constant from code ; 978
LDC    0            ; NULL literal ; 979
LDC    0            ; NULL literal ; 980
LDF    794          ;  @sorted_node_new ; 981
AP     5             ; 982
JOIN                 ; 983
LD     0 1          ; ELSE: 34 ; 984
LD     0 0          ; var node ; 985
CDR                 ; generateTupleAccess total=6 pos=1 ; 986
CAR                  ; 987
CEQ                  ; 988
SEL    991 999      ; IF? 90 ; 989
JOIN                 ; 990
LD     0 2          ; THEN: 90 ; 991
LD     0 0          ; var node ; 992
CDR                 ; generateTupleAccess total=6 pos=2 ; 993
CDR                  ; 994
CAR                  ; 995
CEQ                  ; 996
SEL    1009 1011    ; IF? 91 ; 997
JOIN                 ; 998
LD     0 0          ; ELSE: 90 ; 999
CDR                 ; generateTupleAccess total=6 pos=1 ; 1000
CAR                  ; 1001
LD     0 1          ; var key ; 1002
CGT                  ; 1003
SEL    1033 1048    ; IF? 92 ; 1004
LDC 0               ; local var space ; 1005
LDF    1120         ;  @sorted_node_split ; 1006
AP     2             ; 1007
JOIN                 ; 1008
LD     0 0          ; THEN: 91 ; 1009
JOIN                 ; 1010
LD     0 1          ; ELSE: 91 ; 1011
LD     0 2          ; var val ; 1012
LD     0 0          ; var node ; 1013
CDR                 ; generateTupleAccess total=6 pos=3 ; 1014
CDR                  ; 1015
CDR                  ; 1016
CAR                  ; 1017
LD     0 0          ; var node ; 1018
CDR                 ; generateTupleAccess total=6 pos=4 ; 1019
CDR                  ; 1020
CDR                  ; 1021
CDR                  ; 1022
CAR                  ; 1023
LD     0 0          ; var node ; 1024
CDR                 ; generateTupleAccess total=6 pos=5 ; 1025
CDR                  ; 1026
CDR                  ; 1027
CDR                  ; 1028
CDR                  ; 1029
LDF    794          ;  @sorted_node_new ; 1030
AP     5             ; 1031
JOIN                 ; 1032
LD     0 0          ; THEN: 92 ; 1033
LD     0 0          ; var node ; 1034
CDR                 ; generateTupleAccess total=6 pos=4 ; 1035
CDR                  ; 1036
CDR                  ; 1037
CDR                  ; 1038
CAR                  ; 1039
LD     0 1          ; var key ; 1040
LD     0 2          ; var val ; 1041
LDF    972          ;  @sorted_node_put ; 1042
AP     3             ; 1043
LDC 0               ; local var space ; 1044
LDF    1066         ;  @sorted_node_skew ; 1045
AP     3             ; 1046
JOIN                 ; 1047
LD     0 0          ; ELSE: 92 ; 1048
LD     0 0          ; var node ; 1049
CDR                 ; generateTupleAccess total=6 pos=5 ; 1050
CDR                  ; 1051
CDR                  ; 1052
CDR                  ; 1053
CDR                  ; 1054
LD     0 1          ; var key ; 1055
LD     0 2          ; var val ; 1056
LDF    972          ;  @sorted_node_put ; 1057
AP     3             ; 1058
LDF    879          ;  @sorted_node_with_hi ; 1059
AP     2             ; 1060
LDC    0            ; NULL literal ; 1061
LDC 0               ; local var space ; 1062
LDF    1066         ;  @sorted_node_skew ; 1063
AP     3             ; 1064
JOIN                 ; 1065
LD     0 1          ;  <== sorted_node_skew  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 1066
ATOM                 ; 1067
LDC    1            ; for negation ; 1068
SUB                  ; 1069
SEL    1081 1083    ; IF? 35 ; 1070
ST     0 1           ; 1071
LD     0 0          ; var node ; 1072
LD     0 1          ; var lo ; 1073
LDF    868          ;  @sorted_node_with_lo ; 1074
AP     2             ; 1075
ST     0 2           ; 1076
LD     0 1          ; var lo ; 1077
ATOM                 ; 1078
SEL    1090 1092    ; IF? 36 ; 1079
RTN                  ; 1080
LD     0 1          ; THEN: 35 ; 1081
JOIN                 ; 1082
LD     0 0          ; ELSE: 35 ; 1083
CDR                 ; generateTupleAccess total=6 pos=4 ; 1084
CDR                  ; 1085
CDR                  ; 1086
CDR                  ; 1087
CAR                  ; 1088
JOIN                 ; 1089
LD     0 2          ; THEN: 36 ; 1090
JOIN                 ; 1091
LD     0 0          ; ELSE: 36 ; 1092
CDR                 ; generateTupleAccess total=6 pos=3 ; 1093
CDR                  ; 1094
CDR                  ; 1095
CAR                  ; 1096
LD     0 1          ; var lo ; 1097
CDR                 ; generateTupleAccess total=6 pos=3 ; 1098
CDR                  ; 1099
CDR                  ; 1100
CAR                  ; 1101
CGT                  ; 1102
SEL    1105 1107    ; IF? 93 ; 1103
JOIN                 ; 1104
LD     0 2          ; THEN: 93 ; 1105
JOIN                 ; 1106
LD     0 1          ; ELSE: 93 ; 1107
LD     0 0          ; var node ; 1108
LD     0 1          ; var lo ; 1109
CDR                 ; generateTupleAccess total=6 pos=5 ; 1110
CDR                  ; 1111
CDR                  ; 1112
CDR                  ; 1113
CDR                  ; 1114
LDF    868          ;  @sorted_node_with_lo ; 1115
AP     2             ; 1116
LDF    879          ;  @sorted_node_with_hi ; 1117
AP     2             ; 1118
JOIN                 ; 1119
LD     0 0          ;  <== sorted_node_split  [SortedMapNode<T> node] (as blk) ; 1120
CDR                 ; generateTupleAccess total=6 pos=5 ; 1121
CDR                  ; 1122
CDR                  ; 1123
CDR                  ; 1124
CDR                  ; 1125
ST     0 1           ; 1126
LD     0 1          ; var hi ; 1127
ATOM                 ; 1128
SEL    1131 1133    ; IF? 37 ; 1129
RTN                  ; 1130
LD     0 0          ; THEN: 37 ; 1131
JOIN                 ; 1132
LD     0 1          ; ELSE: 37 ; 1133
CDR                 ; generateTupleAccess total=6 pos=5 ; 1134
CDR                  ; 1135
CDR                  ; 1136
CDR                  ; 1137
CDR                  ; 1138
ATOM                 ; 1139
SEL    1142 1144    ; IF? 94 ; 1140
JOIN                 ; 1141
LD     0 0          ; THEN: 94 ; 1142
JOIN                 ; 1143
LD     0 0          ; ELSE: 94 ; 1144
CDR                 ; generateTupleAccess total=6 pos=3 ; 1145
CDR                  ; 1146
CDR                  ; 1147
CAR                  ; 1148
LD     0 1          ; var hi ; 1149
CDR                 ; generateTupleAccess total=6 pos=5 ; 1150
CDR                  ; 1151
CDR                  ; 1152
CDR                  ; 1153
CDR                  ; 1154
CDR                 ; generateTupleAccess total=6 pos=3 ; 1155
CDR                  ; 1156
CDR                  ; 1157
CAR                  ; 1158
CGT                  ; 1159
SEL    1162 1164    ; IF? 95 ; 1160
JOIN                 ; 1161
LD     0 0          ; THEN: 95 ; 1162
JOIN                 ; 1163
LD     0 1          ; ELSE: 95 ; 1164
CDR                 ; generateTupleAccess total=6 pos=1 ; 1165
CAR                  ; 1166
LD     0 1          ; var hi ; 1167
CDR                 ; generateTupleAccess total=6 pos=2 ; 1168
CDR                  ; 1169
CAR                  ; 1170
LD     0 1          ; var hi ; 1171
CDR                 ; generateTupleAccess total=6 pos=3 ; 1172
CDR                  ; 1173
CDR                  ; 1174
CAR                  ; 1175
LDC    1            ; just constant from code ; 1176
ADD                  ; 1177
LD     0 0          ; var node ; 1178
LD     0 1          ; var hi ; 1179
CDR                 ; generateTupleAccess total=6 pos=4 ; 1180
CDR                  ; 1181
CDR                  ; 1182
CDR                  ; 1183
CAR                  ; 1184
LDF    879          ;  @sorted_node_with_hi ; 1185
AP     2             ; 1186
LD     0 1          ; var hi ; 1187
CDR                 ; generateTupleAccess total=6 pos=5 ; 1188
CDR                  ; 1189
CDR                  ; 1190
CDR                  ; 1191
CDR                  ; 1192
LDF    794          ;  @sorted_node_new ; 1193
AP     5             ; 1194
JOIN                 ; 1195
LD     0 0          ;  <== sorted_node_walk  [SortedMapNode<T> node, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) ; 1196
ATOM                 ; 1197
SEL    1200 1202    ; IF? 38 ; 1198
RTN                  ; 1199
LD     0 1          ; THEN: 38 ; 1200
JOIN                 ; 1201
LD     0 0          ; ELSE: 38 ; 1202
CDR                 ; generateTupleAccess total=6 pos=5 ; 1203
CDR                  ; 1204
CDR                  ; 1205
CDR                  ; 1206
CDR                  ; 1207
ATOM                 ; 1208
LDC    1            ; for negation ; 1209
SUB                  ; 1210
SEL    1213 1243    ; IF? 96 ; 1211
JOIN                 ; 1212
LD     0 0          ; THEN: 96 ; 1213
CDR                 ; generateTupleAccess total=6 pos=5 ; 1214
CDR                  ; 1215
CDR                  ; 1216
CDR                  ; 1217
CDR                  ; 1218
LD     0 0          ; var node ; 1219
CDR                 ; generateTupleAccess total=6 pos=4 ; 1220
CDR                  ; 1221
CDR                  ; 1222
CDR                  ; 1223
CAR                  ; 1224
LD     0 1          ; var acc ; 1225
LD     0 2          ; var fun ; 1226
LDF    1196         ;  @sorted_node_walk ; 1227
AP     3             ; 1228
LD     0 0          ; var node ; 1229
CDR                 ; generateTupleAccess total=6 pos=1 ; 1230
CAR                  ; 1231
LD     0 0          ; var node ; 1232
CDR                 ; generateTupleAccess total=6 pos=2 ; 1233
CDR                  ; 1234
CAR                  ; 1235
CONS                 ; 1236
LD     0 2          ; var fun ; 1237
AP     2             ; 1238
LD     0 2          ; var fun ; 1239
LDF    1196         ;  @sorted_node_walk ; 1240
AP     3             ; 1241
JOIN                 ; 1242
LD     0 0          ; ELSE: 96 ; 1243
CDR                 ; generateTupleAccess total=6 pos=4 ; 1244
CDR                  ; 1245
CDR                  ; 1246
CDR                  ; 1247
CAR                  ; 1248
LD     0 1          ; var acc ; 1249
LD     0 2          ; var fun ; 1250
LDF    1196         ;  @sorted_node_walk ; 1251
AP     3             ; 1252
LD     0 0          ; var node ; 1253
CDR                 ; generateTupleAccess total=6 pos=1 ; 1254
CAR                  ; 1255
LD     0 0          ; var node ; 1256
CDR                 ; generateTupleAccess total=6 pos=2 ; 1257
CDR                  ; 1258
CAR                  ; 1259
CONS                 ; 1260
LD     0 2          ; var fun ; 1261
AP     2             ; 1262
JOIN                 ; 1263
LD     0 0          ;  <== sorted_map_count  [SortedMap<T> m] (as blk) ; 1264
CAR                 ; generateTupleAccess total=2 pos=0 ; 1265
ATOM                 ; 1266
LDC    1            ; for negation ; 1267
SUB                  ; 1268
SEL    1271 1275    ; IF? 39 ; 1269
RTN                  ; 1270
LD     0 0          ; THEN: 39 ; 1271
CAR                 ; generateTupleAccess total=2 pos=0 ; 1272
CAR                 ; generateTupleAccess total=6 pos=0 ; 1273
JOIN                 ; 1274
LDC    0            ; ELSE: 39 ; 1275
JOIN                 ; 1276
LD     0 0          ;  <== sorted_map_contains  [SortedMap<T> m, int key] (as blk) ; 1277
CAR                 ; generateTupleAccess total=2 pos=0 ; 1278
ATOM                 ; 1279
LDC    1            ; for negation ; 1280
SUB                  ; 1281
SEL    1284 1290    ; IF? 40 ; 1282
RTN                  ; 1283
LD     0 0          ; THEN: 40 ; 1284
CAR                 ; generateTupleAccess total=2 pos=0 ; 1285
LD     0 1          ; var key ; 1286
LDF    890          ;  @sorted_node_has ; 1287
AP     2             ; 1288
JOIN                 ; 1289
LDC    0            ; ELSE: 40 ; 1290
JOIN                 ; 1291
LD     0 0          ;  <== sorted_map_get  [SortedMap<T> m, int key, T def] (as blk) ; 1292
CAR                 ; generateTupleAccess total=2 pos=0 ; 1293
ATOM                 ; 1294
LDC    1            ; for negation ; 1295
SUB                  ; 1296
SEL    1299 1306    ; IF? 41 ; 1297
RTN                  ; 1298
LD     0 0          ; THEN: 41 ; 1299
CAR                 ; generateTupleAccess total=2 pos=0 ; 1300
LD     0 1          ; var key ; 1301
LD     0 2          ; var def ; 1302
LDF    929          ;  @sorted_node_get ; 1303
AP     3             ; 1304
JOIN                 ; 1305
LD     0 2          ; ELSE: 41 ; 1306
JOIN                 ; 1307
LD     0 0          ;  <== sorted_map_assoc  [SortedMap<T> m, int key, T val] (as blk) ; 1308
CAR                 ; generateTupleAccess total=2 pos=0 ; 1309
LD     0 1          ; var key ; 1310
LD     0 2          ; var val ; 1311
LDF    972          ;  @sorted_node_put ; 1312
AP     3             ; 1313
LDC    0            ; just constant from code ; 1314
CONS                 ; 1315
RTN                  ; 1316
LD     0 1          ;  <== sorted_map_assoc_all  [SortedMap<T> m, ListCons<Tuple<Integer,T>> l] (as blk) ; 1317
LD     0 0          ; var m ; 1318
LDF    9624         ;  @lambda_1003 ; 1319
LDF    386          ;  @fold0 ; 1320
AP     3             ; 1321
RTN                  ; 1322
LD     0 0          ;  <== sorted_map_walk  [SortedMap<T> map, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) ; 1323
CAR                 ; generateTupleAccess total=2 pos=0 ; 1324
ATOM                 ; 1325
SEL    1328 1330    ; IF? 42 ; 1326
RTN                  ; 1327
LD     0 1          ; THEN: 42 ; 1328
JOIN                 ; 1329
LD     0 0          ; ELSE: 42 ; 1330
CAR                 ; generateTupleAccess total=2 pos=0 ; 1331
LD     0 1          ; var acc ; 1332
LD     0 2          ; var fun ; 1333
LDF    1196         ;  @sorted_node_walk ; 1334
AP     3             ; 1335
JOIN                 ; 1336
LD     0 1          ;  <== ghcstate_read_val  [GHCState state, Cons<Integer,Integer> val_cons] (as blk) ; 1337
CAR                  ; 1338
ST     0 2           ; 1339
LD     0 1          ; var val_cons ; 1340
CDR                  ; 1341
ST     0 3           ; 1342
LD     0 2          ; var val_tag ; 1343
LDC    3            ; just constant from code ; 1344
CGT                  ; 1345
SEL    1352 1354     ; 1346
LD     0 2          ; var val_tag ; 1347
LDC    0            ; Named Const = Args.REGISTER ; 1348
CEQ                  ; 1349
SEL    1355 1363    ; IF? 43 ; 1350
RTN                  ; 1351
BRK                 ; branch@1352 ; 1352
JOIN                 ; 1353
JOIN                ; branch@1354 ; 1354
LD     0 0          ; THEN: 43 ; 1355
CDR                 ; generateTupleAccess total=3 pos=1 ; 1356
CAR                  ; 1357
LD     0 3          ; var val ; 1358
LDC    0            ; just constant from code ; 1359
LDF    1292         ;  @sorted_map_get ; 1360
AP     3             ; 1361
JOIN                 ; 1362
LD     0 2          ; ELSE: 43 ; 1363
LDC    1            ; Named Const = Args.REGISTER_INDIRECT ; 1364
CEQ                  ; 1365
SEL    1368 1382    ; IF? 97 ; 1366
JOIN                 ; 1367
LD     0 0          ; THEN: 97 ; 1368
CDR                 ; generateTupleAccess total=3 pos=2 ; 1369
CDR                  ; 1370
LD     0 0          ; var state ; 1371
CDR                 ; generateTupleAccess total=3 pos=1 ; 1372
CAR                  ; 1373
LD     0 3          ; var val ; 1374
LDC    0            ; just constant from code ; 1375
LDF    1292         ;  @sorted_map_get ; 1376
AP     3             ; 1377
LDC    0            ; just constant from code ; 1378
LDF    1292         ;  @sorted_map_get ; 1379
AP     3             ; 1380
JOIN                 ; 1381
LD     0 2          ; ELSE: 97 ; 1382
LDC    2            ; Named Const = Args.CONSTANT ; 1383
CEQ                  ; 1384
SEL    1387 1389    ; IF? 98 ; 1385
JOIN                 ; 1386
LD     0 3          ; THEN: 98 ; 1387
JOIN                 ; 1388
LD     0 0          ; ELSE: 98 ; 1389
CDR                 ; generateTupleAccess total=3 pos=2 ; 1390
CDR                  ; 1391
LD     0 3          ; var val ; 1392
LDC    0            ; just constant from code ; 1393
LDF    1292         ;  @sorted_map_get ; 1394
AP     3             ; 1395
JOIN                 ; 1396
LD     0 1          ;  <== ghcstate_write_val  [GHCState state, Cons arg_cons, Integer val] (as blk) ; 1397
CAR                  ; 1398
ST     0 3           ; 1399
LD     0 3          ; var arg_tag ; 1400
LDC    3            ; just constant from code ; 1401
CGT                  ; 1402
SEL    1413 1415     ; 1403
LD     0 3          ; var arg_tag ; 1404
LDC    2            ; just constant from code ; 1405
CEQ                  ; 1406
SEL    1416 1418     ; 1407
LD     0 3          ; var arg_tag ; 1408
LDC    0            ; just constant from code ; 1409
CEQ                  ; 1410
SEL    1419 1435    ; IF? 44 ; 1411
RTN                  ; 1412
BRK                 ; branch@1413 ; 1413
JOIN                 ; 1414
JOIN                ; branch@1415 ; 1415
BRK                 ; branch@1416 ; 1416
JOIN                 ; 1417
JOIN                ; branch@1418 ; 1418
LD     0 0          ; THEN: 44 ; 1419
CAR                 ; generateTupleAccess total=3 pos=0 ; 1420
LD     0 0          ; var state ; 1421
CDR                 ; generateTupleAccess total=3 pos=1 ; 1422
CAR                  ; 1423
LD     0 1          ; var arg_cons ; 1424
CDR                  ; 1425
LD     0 2          ; var val ; 1426
LDF    1308         ;  @sorted_map_assoc ; 1427
AP     3             ; 1428
LD     0 0          ; var state ; 1429
CDR                 ; generateTupleAccess total=3 pos=2 ; 1430
CDR                  ; 1431
CONS                 ; 1432
CONS                 ; 1433
JOIN                 ; 1434
LD     0 3          ; ELSE: 44 ; 1435
LDC    1            ; just constant from code ; 1436
CEQ                  ; 1437
SEL    1440 1462    ; IF? 99 ; 1438
JOIN                 ; 1439
LD     0 0          ; THEN: 99 ; 1440
CAR                 ; generateTupleAccess total=3 pos=0 ; 1441
LD     0 0          ; var state ; 1442
CDR                 ; generateTupleAccess total=3 pos=1 ; 1443
CAR                  ; 1444
LD     0 0          ; var state ; 1445
CDR                 ; generateTupleAccess total=3 pos=1 ; 1446
CAR                  ; 1447
LD     0 1          ; var arg_cons ; 1448
CDR                  ; 1449
LDC    0            ; just constant from code ; 1450
LDF    1292         ;  @sorted_map_get ; 1451
AP     3             ; 1452
LD     0 2          ; var val ; 1453
LDF    1308         ;  @sorted_map_assoc ; 1454
AP     3             ; 1455
LD     0 0          ; var state ; 1456
CDR                 ; generateTupleAccess total=3 pos=2 ; 1457
CDR                  ; 1458
CONS                 ; 1459
CONS                 ; 1460
JOIN                 ; 1461
LD     0 0          ; ELSE: 99 ; 1462
CAR                 ; generateTupleAccess total=3 pos=0 ; 1463
LD     0 0          ; var state ; 1464
CDR                 ; generateTupleAccess total=3 pos=1 ; 1465
CAR                  ; 1466
LD     0 0          ; var state ; 1467
CDR                 ; generateTupleAccess total=3 pos=2 ; 1468
CDR                  ; 1469
LD     0 1          ; var arg_cons ; 1470
CDR                  ; 1471
LD     0 2          ; var val ; 1472
LDF    1308         ;  @sorted_map_assoc ; 1473
AP     3             ; 1474
CONS                 ; 1475
CONS                 ; 1476
JOIN                 ; 1477
LD     0 0          ;  <== ghcstate_assoc  [GHCState state, Cons arg_cons, Cons val_cons] (as blk) ; 1478
LD     0 2          ; var val_cons ; 1479
LDC 0               ; local var space ; 1480
LDC 0               ; local var space ; 1481
LDF    1337         ;  @ghcstate_read_val ; 1482
AP     4             ; 1483
ST     0 3           ; 1484
LD     0 0          ; var state ; 1485
LD     0 1          ; var arg_cons ; 1486
LD     0 3          ; var val ; 1487
LDC 0               ; local var space ; 1488
LDF    1397         ;  @ghcstate_write_val ; 1489
AP     4             ; 1490
RTN                  ; 1491
LD     0 0          ;  <== processGhostInfoRequest  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer index, int requestType] (as blk) ; 1492
CDR                 ; generateTupleAccess total=4 pos=2 ; 1493
CDR                  ; 1494
CAR                  ; 1495
LD     0 3          ; var index ; 1496
LD     0 1          ; var state ; 1497
CAR                 ; generateTupleAccess total=3 pos=0 ; 1498
LDF    469          ;  @list_item_def ; 1499
AP     3             ; 1500
ST     0 5           ; 1501
LDC    4            ; just constant from code ; 1502
LD     0 4          ; var requestType ; 1503
CEQ                  ; 1504
SEL    1507 1529    ; IF? 45 ; 1505
RTN                  ; 1506
LD     0 5          ; THEN: 45 ; 1507
LD     0 1          ; var state ; 1508
CDR                 ; generateTupleAccess total=3 pos=1 ; 1509
CAR                  ; 1510
LDC    0            ; just constant from code ; 1511
LD     0 2          ; var ghostInfo ; 1512
CAR                 ; generateTupleAccess total=3 pos=0 ; 1513
CAR                 ; generateTupleAccess total=2 pos=0 ; 1514
LDF    1308         ;  @sorted_map_assoc ; 1515
AP     3             ; 1516
LDC    1            ; just constant from code ; 1517
LD     0 2          ; var ghostInfo ; 1518
CAR                 ; generateTupleAccess total=3 pos=0 ; 1519
CDR                 ; generateTupleAccess total=2 pos=1 ; 1520
LDF    1308         ;  @sorted_map_assoc ; 1521
AP     3             ; 1522
LD     0 1          ; var state ; 1523
CDR                 ; generateTupleAccess total=3 pos=2 ; 1524
CDR                  ; 1525
CONS                 ; 1526
CONS                 ; 1527
JOIN                 ; 1528
LDC    5            ; ELSE: 45 ; 1529
LD     0 4          ; var requestType ; 1530
CEQ                  ; 1531
SEL    1534 1558    ; IF? 100 ; 1532
JOIN                 ; 1533
LD     0 5          ; THEN: 100 ; 1534
LD     0 1          ; var state ; 1535
CDR                 ; generateTupleAccess total=3 pos=1 ; 1536
CAR                  ; 1537
LDC    0            ; just constant from code ; 1538
LD     0 5          ; var gs ; 1539
CDR                 ; generateTupleAccess total=3 pos=1 ; 1540
CAR                  ; 1541
CAR                 ; generateTupleAccess total=2 pos=0 ; 1542
LDF    1308         ;  @sorted_map_assoc ; 1543
AP     3             ; 1544
LDC    1            ; just constant from code ; 1545
LD     0 5          ; var gs ; 1546
CDR                 ; generateTupleAccess total=3 pos=1 ; 1547
CAR                  ; 1548
CDR                 ; generateTupleAccess total=2 pos=1 ; 1549
LDF    1308         ;  @sorted_map_assoc ; 1550
AP     3             ; 1551
LD     0 1          ; var state ; 1552
CDR                 ; generateTupleAccess total=3 pos=2 ; 1553
CDR                  ; 1554
CONS                 ; 1555
CONS                 ; 1556
JOIN                 ; 1557
LD     0 5          ; ELSE: 100 ; 1558
LD     0 1          ; var state ; 1559
CDR                 ; generateTupleAccess total=3 pos=1 ; 1560
CAR                  ; 1561
LDC    0            ; just constant from code ; 1562
LD     0 5          ; var gs ; 1563
CAR                 ; generateTupleAccess total=3 pos=0 ; 1564
LDF    1308         ;  @sorted_map_assoc ; 1565
AP     3             ; 1566
LDC    1            ; just constant from code ; 1567
LD     0 5          ; var gs ; 1568
CDR                 ; generateTupleAccess total=3 pos=2 ; 1569
CDR                  ; 1570
LDF    1308         ;  @sorted_map_assoc ; 1571
AP     3             ; 1572
LD     0 1          ; var state ; 1573
CDR                 ; generateTupleAccess total=3 pos=2 ; 1574
CDR                  ; 1575
CONS                 ; 1576
CONS                 ; 1577
JOIN                 ; 1578
LD     0 1          ;  <== processGhostInt  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer num, Cons arg] (as blk) ; 1579
CAR                 ; generateTupleAccess total=3 pos=0 ; 1580
ST     0 5           ; 1581
LD     0 2          ; var ghostInfo ; 1582
CDR                 ; generateTupleAccess total=3 pos=2 ; 1583
CDR                  ; 1584
ST     0 6           ; 1585
LDC    0            ; just constant from code ; 1586
LD     0 3          ; var num ; 1587
CEQ                  ; 1588
SEL    1591 1614    ; IF? 46 ; 1589
RTN                  ; 1590
LD     0 5          ; THEN: 46 ; 1591
CAR                 ; generateTupleAccess total=3 pos=0 ; 1592
LD     0 5          ; var gs ; 1593
CDR                 ; generateTupleAccess total=3 pos=1 ; 1594
CAR                  ; 1595
LD     0 1          ; var state ; 1596
CDR                 ; generateTupleAccess total=3 pos=1 ; 1597
CAR                  ; 1598
LDC    0            ; just constant from code ; 1599
LDC    0            ; just constant from code ; 1600
LDF    1292         ;  @sorted_map_get ; 1601
AP     3             ; 1602
CONS                 ; 1603
CONS                 ; 1604
LD     0 1          ; var state ; 1605
CDR                 ; generateTupleAccess total=3 pos=1 ; 1606
CAR                  ; 1607
LD     0 1          ; var state ; 1608
CDR                 ; generateTupleAccess total=3 pos=2 ; 1609
CDR                  ; 1610
CONS                 ; 1611
CONS                 ; 1612
JOIN                 ; 1613
LDC    1            ; ELSE: 46 ; 1614
LD     0 3          ; var num ; 1615
CEQ                  ; 1616
SEL    1619 1647    ; IF? 101 ; 1617
JOIN                 ; 1618
LD     0 5          ; THEN: 101 ; 1619
LD     0 1          ; var state ; 1620
CDR                 ; generateTupleAccess total=3 pos=1 ; 1621
CAR                  ; 1622
LDC    0            ; just constant from code ; 1623
LD     0 0          ; var world ; 1624
CDR                 ; generateTupleAccess total=4 pos=1 ; 1625
CAR                  ; 1626
CDR                 ; generateTupleAccess total=5 pos=1 ; 1627
CAR                  ; 1628
CAR                 ; generateTupleAccess total=2 pos=0 ; 1629
LDF    1308         ;  @sorted_map_assoc ; 1630
AP     3             ; 1631
LDC    1            ; just constant from code ; 1632
LD     0 0          ; var world ; 1633
CDR                 ; generateTupleAccess total=4 pos=1 ; 1634
CAR                  ; 1635
CDR                 ; generateTupleAccess total=5 pos=1 ; 1636
CAR                  ; 1637
CDR                 ; generateTupleAccess total=2 pos=1 ; 1638
LDF    1308         ;  @sorted_map_assoc ; 1639
AP     3             ; 1640
LD     0 1          ; var state ; 1641
CDR                 ; generateTupleAccess total=3 pos=2 ; 1642
CDR                  ; 1643
CONS                 ; 1644
CONS                 ; 1645
JOIN                 ; 1646
LDC    2            ; ELSE: 101 ; 1647
LD     0 3          ; var num ; 1648
CEQ                  ; 1649
SEL    1652 1680    ; IF? 102 ; 1650
JOIN                 ; 1651
LD     0 5          ; THEN: 102 ; 1652
LD     0 1          ; var state ; 1653
CDR                 ; generateTupleAccess total=3 pos=1 ; 1654
CAR                  ; 1655
LDC    0            ; just constant from code ; 1656
LD     0 0          ; var world ; 1657
CDR                 ; generateTupleAccess total=4 pos=1 ; 1658
CAR                  ; 1659
CDR                 ; generateTupleAccess total=5 pos=1 ; 1660
CAR                  ; 1661
CAR                 ; generateTupleAccess total=2 pos=0 ; 1662
LDF    1308         ;  @sorted_map_assoc ; 1663
AP     3             ; 1664
LDC    1            ; just constant from code ; 1665
LD     0 0          ; var world ; 1666
CDR                 ; generateTupleAccess total=4 pos=1 ; 1667
CAR                  ; 1668
CDR                 ; generateTupleAccess total=5 pos=1 ; 1669
CAR                  ; 1670
CDR                 ; generateTupleAccess total=2 pos=1 ; 1671
LDF    1308         ;  @sorted_map_assoc ; 1672
AP     3             ; 1673
LD     0 1          ; var state ; 1674
CDR                 ; generateTupleAccess total=3 pos=2 ; 1675
CDR                  ; 1676
CONS                 ; 1677
CONS                 ; 1678
JOIN                 ; 1679
LDC    3            ; ELSE: 102 ; 1680
LD     0 3          ; var num ; 1681
CEQ                  ; 1682
SEL    1685 1699    ; IF? 103 ; 1683
JOIN                 ; 1684
LD     0 5          ; THEN: 103 ; 1685
LD     0 1          ; var state ; 1686
CDR                 ; generateTupleAccess total=3 pos=1 ; 1687
CAR                  ; 1688
LDC    0            ; just constant from code ; 1689
LD     0 6          ; var currentGhostIndex ; 1690
LDF    1308         ;  @sorted_map_assoc ; 1691
AP     3             ; 1692
LD     0 1          ; var state ; 1693
CDR                 ; generateTupleAccess total=3 pos=2 ; 1694
CDR                  ; 1695
CONS                 ; 1696
CONS                 ; 1697
JOIN                 ; 1698
LDC    4            ; ELSE: 103 ; 1699
LD     0 3          ; var num ; 1700
CEQ                  ; 1701
SEL    1704 1719    ; IF? 104 ; 1702
JOIN                 ; 1703
LD     0 0          ; THEN: 104 ; 1704
LD     0 1          ; var state ; 1705
LD     0 2          ; var ghostInfo ; 1706
LD     0 1          ; var state ; 1707
CDR                 ; generateTupleAccess total=3 pos=1 ; 1708
CAR                  ; 1709
LDC    0            ; just constant from code ; 1710
LDC    0            ; just constant from code ; 1711
LDF    1292         ;  @sorted_map_get ; 1712
AP     3             ; 1713
LDC    4            ; just constant from code ; 1714
LDC 0               ; local var space ; 1715
LDF    1492         ;  @processGhostInfoRequest ; 1716
AP     6             ; 1717
JOIN                 ; 1718
LDC    5            ; ELSE: 104 ; 1719
LD     0 3          ; var num ; 1720
CEQ                  ; 1721
SEL    1724 1739    ; IF? 105 ; 1722
JOIN                 ; 1723
LD     0 0          ; THEN: 105 ; 1724
LD     0 1          ; var state ; 1725
LD     0 2          ; var ghostInfo ; 1726
LD     0 1          ; var state ; 1727
CDR                 ; generateTupleAccess total=3 pos=1 ; 1728
CAR                  ; 1729
LDC    0            ; just constant from code ; 1730
LDC    0            ; just constant from code ; 1731
LDF    1292         ;  @sorted_map_get ; 1732
AP     3             ; 1733
LDC    5            ; just constant from code ; 1734
LDC 0               ; local var space ; 1735
LDF    1492         ;  @processGhostInfoRequest ; 1736
AP     6             ; 1737
JOIN                 ; 1738
LDC    6            ; ELSE: 105 ; 1739
LD     0 3          ; var num ; 1740
CEQ                  ; 1741
SEL    1744 1759    ; IF? 106 ; 1742
JOIN                 ; 1743
LD     0 0          ; THEN: 106 ; 1744
LD     0 1          ; var state ; 1745
LD     0 2          ; var ghostInfo ; 1746
LD     0 1          ; var state ; 1747
CDR                 ; generateTupleAccess total=3 pos=1 ; 1748
CAR                  ; 1749
LDC    0            ; just constant from code ; 1750
LDC    0            ; just constant from code ; 1751
LDF    1292         ;  @sorted_map_get ; 1752
AP     3             ; 1753
LDC    6            ; just constant from code ; 1754
LDC 0               ; local var space ; 1755
LDF    1492         ;  @processGhostInfoRequest ; 1756
AP     6             ; 1757
JOIN                 ; 1758
LDC    7            ; ELSE: 106 ; 1759
LD     0 3          ; var num ; 1760
CEQ                  ; 1761
SEL    1764 1795    ; IF? 107 ; 1762
JOIN                 ; 1763
LD     0 5          ; THEN: 107 ; 1764
LD     0 1          ; var state ; 1765
CDR                 ; generateTupleAccess total=3 pos=1 ; 1766
CAR                  ; 1767
LDC    0            ; just constant from code ; 1768
LD     0 0          ; var world ; 1769
CAR                 ; generateTupleAccess total=4 pos=0 ; 1770
LD     0 1          ; var state ; 1771
CDR                 ; generateTupleAccess total=3 pos=1 ; 1772
CAR                  ; 1773
LDC    0            ; just constant from code ; 1774
LDC    0            ; just constant from code ; 1775
LDF    1292         ;  @sorted_map_get ; 1776
AP     3             ; 1777
LD     0 1          ; var state ; 1778
CDR                 ; generateTupleAccess total=3 pos=1 ; 1779
CAR                  ; 1780
LDC    1            ; just constant from code ; 1781
LDC    0            ; just constant from code ; 1782
LDF    1292         ;  @sorted_map_get ; 1783
AP     3             ; 1784
LDF    3605         ;  @getMapItem ; 1785
AP     3             ; 1786
LDF    1308         ;  @sorted_map_assoc ; 1787
AP     3             ; 1788
LD     0 1          ; var state ; 1789
CDR                 ; generateTupleAccess total=3 pos=2 ; 1790
CDR                  ; 1791
CONS                 ; 1792
CONS                 ; 1793
JOIN                 ; 1794
LD     0 1          ; ELSE: 107 ; 1795
JOIN                 ; 1796
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 1797
LD     0 0          ; var f ; 1798
AP     1             ; 1799
CAR                  ; 1800
ST     0 3           ; 1801
LD     0 2          ; var n ; 1802
LDC    0            ; just constant from code ; 1803
CEQ                  ; 1804
SEL    1807 1811    ; IF? 47 ; 1805
RTN                  ; 1806
LD     0 3          ; THEN: 47 ; 1807
LDC    0            ; NULL literal ; 1808
CONS                 ; 1809
JOIN                 ; 1810
LD     0 3          ; ELSE: 47 ; 1811
LD     0 0          ; var f ; 1812
LD     0 1          ; var a ; 1813
LD     0 0          ; var f ; 1814
AP     1             ; 1815
CDR                  ; 1816
LD     0 2          ; var n ; 1817
LDC    1            ; just constant from code ; 1818
SUB                  ; 1819
LDC 0               ; local var space ; 1820
LDF    749          ;  @produce_n ; 1821
AP     4             ; 1822
CONS                 ; 1823
JOIN                 ; 1824
LDF    9632         ;  <== bit_split  [Integer x] (as blk), ALSO: @lambda_1004 ; 1825
LD     0 0          ; var x ; 1826
LDC    7            ; just constant from code ; 1827
LDC 0               ; local var space ; 1828
LDF    749          ;  @produce_n ; 1829
AP     4             ; 1830
RTN                  ; 1831
LD     0 0          ;  <== emulate_bitop  [Integer x, Integer y, Function2<Integer,Integer,Integer> f] (as blk) ; 1832
LDF    1825         ;  @bit_split ; 1833
AP     1             ; 1834
ST     0 3           ; 1835
LD     0 1          ; var y ; 1836
LDF    1825         ;  @bit_split ; 1837
AP     1             ; 1838
ST     0 4           ; 1839
LDF    9649         ;  @lambda_1005 ; 1840
LDC    0            ; just constant from code ; 1841
LD     0 2          ; var f ; 1842
LD     0 3          ; var bits_x ; 1843
LD     0 4          ; var bits_y ; 1844
LDF    660          ;  @zip_with ; 1845
AP     3             ; 1846
LDF    48           ;  @foldr ; 1847
AP     3             ; 1848
RTN                  ; 1849
LD     0 0          ;  <== ghcstate_bitop  [GHCState state, Cons arg_cons, Cons val_cons, int type] (as blk) ; 1850
LD     0 1          ; var arg_cons ; 1851
LDC 0               ; local var space ; 1852
LDC 0               ; local var space ; 1853
LDF    1337         ;  @ghcstate_read_val ; 1854
AP     4             ; 1855
ST     0 4           ; 1856
LD     0 0          ; var state ; 1857
LD     0 2          ; var val_cons ; 1858
LDC 0               ; local var space ; 1859
LDC 0               ; local var space ; 1860
LDF    1337         ;  @ghcstate_read_val ; 1861
AP     4             ; 1862
ST     0 5           ; 1863
LD     0 4          ; var arg ; 1864
LD     0 5          ; var val ; 1865
LD     0 3          ; var type ; 1866
LDC    7            ; Named Const = GHCOps.AND ; 1867
CEQ                  ; 1868
SEL    1882 1884    ; IF? 48 ; 1869
LDC 0               ; local var space ; 1870
LDC 0               ; local var space ; 1871
LDF    1832         ;  @emulate_bitop ; 1872
AP     5             ; 1873
ST     0 6           ; 1874
LD     0 0          ; var state ; 1875
LD     0 1          ; var arg_cons ; 1876
LD     0 6          ; var result ; 1877
LDC 0               ; local var space ; 1878
LDF    1397         ;  @ghcstate_write_val ; 1879
AP     4             ; 1880
RTN                  ; 1881
LDF    10237        ; THEN: 48, ALSO: @lambda_1054 ; 1882
JOIN                 ; 1883
LD     0 3          ; ELSE: 48 ; 1884
LDC    8            ; Named Const = GHCOps.OR ; 1885
CEQ                  ; 1886
SEL    1889 1891    ; IF? 108 ; 1887
JOIN                 ; 1888
LDF    10241        ; THEN: 108, ALSO: @lambda_1055 ; 1889
JOIN                 ; 1890
LDF    10252        ; ELSE: 108, ALSO: @lambda_1056 ; 1891
JOIN                 ; 1892
LD     0 5          ;  <== runGhostStep  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state, Cons step] (as blk) ; 1893
CAR                  ; 1894
ST     0 6           ; 1895
LD     0 5          ; var step ; 1896
CDR                  ; 1897
ST     0 7           ; 1898
LD     0 4          ; var state ; 1899
CAR                 ; generateTupleAccess total=3 pos=0 ; 1900
LD     0 4          ; var state ; 1901
CDR                 ; generateTupleAccess total=3 pos=1 ; 1902
CAR                  ; 1903
LDC    8            ; just constant from code ; 1904
LD     0 4          ; var state ; 1905
CDR                 ; generateTupleAccess total=3 pos=1 ; 1906
CAR                  ; 1907
LDC    8            ; just constant from code ; 1908
LDC    0            ; just constant from code ; 1909
LDF    1292         ;  @sorted_map_get ; 1910
AP     3             ; 1911
LDC    1            ; just constant from code ; 1912
ADD                  ; 1913
LDF    1308         ;  @sorted_map_assoc ; 1914
AP     3             ; 1915
LD     0 4          ; var state ; 1916
CDR                 ; generateTupleAccess total=3 pos=2 ; 1917
CDR                  ; 1918
CONS                 ; 1919
CONS                 ; 1920
ST     0 8           ; 1921
LDC    0            ; Named Const = GHCOps.MOV ; 1922
LD     0 6          ; var opcode ; 1923
CEQ                  ; 1924
SEL    1927 1945    ; IF? 49 ; 1925
RTN                  ; 1926
LD     0 0          ; THEN: 49 ; 1927
LD     0 1          ; var world ; 1928
LD     0 2          ; var ghostInfo ; 1929
LD     0 3          ; var lev ; 1930
LD     0 8          ; var inc_pc ; 1931
LD     0 7          ; var args ; 1932
CAR                  ; 1933
LD     0 7          ; var args ; 1934
CDR                  ; 1935
CAR                  ; 1936
LDC 0               ; local var space ; 1937
LDF    1478         ;  @ghcstate_assoc ; 1938
AP     4             ; 1939
LDC 0               ; local var space ; 1940
LDC 0               ; local var space ; 1941
LDF    2405         ;  @runGhost ; 1942
AP     7             ; 1943
JOIN                 ; 1944
LDC    1            ; ELSE: 49 ; 1945
LD     0 6          ; var opcode ; 1946
CEQ                  ; 1947
SEL    1950 1974    ; IF? 109 ; 1948
JOIN                 ; 1949
LD     0 0          ; THEN: 109 ; 1950
LD     0 1          ; var world ; 1951
LD     0 2          ; var ghostInfo ; 1952
LD     0 3          ; var lev ; 1953
LD     0 8          ; var inc_pc ; 1954
LD     0 7          ; var args ; 1955
CAR                  ; 1956
LD     0 8          ; var inc_pc ; 1957
LD     0 7          ; var args ; 1958
CAR                  ; 1959
LDC 0               ; local var space ; 1960
LDC 0               ; local var space ; 1961
LDF    1337         ;  @ghcstate_read_val ; 1962
AP     4             ; 1963
LDC    1            ; just constant from code ; 1964
ADD                  ; 1965
LDC 0               ; local var space ; 1966
LDF    1397         ;  @ghcstate_write_val ; 1967
AP     4             ; 1968
LDC 0               ; local var space ; 1969
LDC 0               ; local var space ; 1970
LDF    2405         ;  @runGhost ; 1971
AP     7             ; 1972
JOIN                 ; 1973
LDC    2            ; ELSE: 109 ; 1974
LD     0 6          ; var opcode ; 1975
CEQ                  ; 1976
SEL    1979 2003    ; IF? 110 ; 1977
JOIN                 ; 1978
LD     0 0          ; THEN: 110 ; 1979
LD     0 1          ; var world ; 1980
LD     0 2          ; var ghostInfo ; 1981
LD     0 3          ; var lev ; 1982
LD     0 8          ; var inc_pc ; 1983
LD     0 7          ; var args ; 1984
CAR                  ; 1985
LD     0 8          ; var inc_pc ; 1986
LD     0 7          ; var args ; 1987
CAR                  ; 1988
LDC 0               ; local var space ; 1989
LDC 0               ; local var space ; 1990
LDF    1337         ;  @ghcstate_read_val ; 1991
AP     4             ; 1992
LDC    1            ; just constant from code ; 1993
SUB                  ; 1994
LDC 0               ; local var space ; 1995
LDF    1397         ;  @ghcstate_write_val ; 1996
AP     4             ; 1997
LDC 0               ; local var space ; 1998
LDC 0               ; local var space ; 1999
LDF    2405         ;  @runGhost ; 2000
AP     7             ; 2001
JOIN                 ; 2002
LDC    3            ; ELSE: 110 ; 2003
LD     0 6          ; var opcode ; 2004
CEQ                  ; 2005
SEL    2008 2039    ; IF? 111 ; 2006
JOIN                 ; 2007
LD     0 0          ; THEN: 111 ; 2008
LD     0 1          ; var world ; 2009
LD     0 2          ; var ghostInfo ; 2010
LD     0 3          ; var lev ; 2011
LD     0 8          ; var inc_pc ; 2012
LD     0 7          ; var args ; 2013
CAR                  ; 2014
LD     0 8          ; var inc_pc ; 2015
LD     0 7          ; var args ; 2016
CAR                  ; 2017
LDC 0               ; local var space ; 2018
LDC 0               ; local var space ; 2019
LDF    1337         ;  @ghcstate_read_val ; 2020
AP     4             ; 2021
LD     0 8          ; var inc_pc ; 2022
LD     0 7          ; var args ; 2023
CDR                  ; 2024
CAR                  ; 2025
LDC 0               ; local var space ; 2026
LDC 0               ; local var space ; 2027
LDF    1337         ;  @ghcstate_read_val ; 2028
AP     4             ; 2029
ADD                  ; 2030
LDC 0               ; local var space ; 2031
LDF    1397         ;  @ghcstate_write_val ; 2032
AP     4             ; 2033
LDC 0               ; local var space ; 2034
LDC 0               ; local var space ; 2035
LDF    2405         ;  @runGhost ; 2036
AP     7             ; 2037
JOIN                 ; 2038
LDC    4            ; ELSE: 111 ; 2039
LD     0 6          ; var opcode ; 2040
CEQ                  ; 2041
SEL    2044 2075    ; IF? 112 ; 2042
JOIN                 ; 2043
LD     0 0          ; THEN: 112 ; 2044
LD     0 1          ; var world ; 2045
LD     0 2          ; var ghostInfo ; 2046
LD     0 3          ; var lev ; 2047
LD     0 8          ; var inc_pc ; 2048
LD     0 7          ; var args ; 2049
CAR                  ; 2050
LD     0 8          ; var inc_pc ; 2051
LD     0 7          ; var args ; 2052
CAR                  ; 2053
LDC 0               ; local var space ; 2054
LDC 0               ; local var space ; 2055
LDF    1337         ;  @ghcstate_read_val ; 2056
AP     4             ; 2057
LD     0 8          ; var inc_pc ; 2058
LD     0 7          ; var args ; 2059
CDR                  ; 2060
CAR                  ; 2061
LDC 0               ; local var space ; 2062
LDC 0               ; local var space ; 2063
LDF    1337         ;  @ghcstate_read_val ; 2064
AP     4             ; 2065
SUB                  ; 2066
LDC 0               ; local var space ; 2067
LDF    1397         ;  @ghcstate_write_val ; 2068
AP     4             ; 2069
LDC 0               ; local var space ; 2070
LDC 0               ; local var space ; 2071
LDF    2405         ;  @runGhost ; 2072
AP     7             ; 2073
JOIN                 ; 2074
LDC    5            ; ELSE: 112 ; 2075
LD     0 6          ; var opcode ; 2076
CEQ                  ; 2077
SEL    2080 2111    ; IF? 113 ; 2078
JOIN                 ; 2079
LD     0 0          ; THEN: 113 ; 2080
LD     0 1          ; var world ; 2081
LD     0 2          ; var ghostInfo ; 2082
LD     0 3          ; var lev ; 2083
LD     0 8          ; var inc_pc ; 2084
LD     0 7          ; var args ; 2085
CAR                  ; 2086
LD     0 8          ; var inc_pc ; 2087
LD     0 7          ; var args ; 2088
CAR                  ; 2089
LDC 0               ; local var space ; 2090
LDC 0               ; local var space ; 2091
LDF    1337         ;  @ghcstate_read_val ; 2092
AP     4             ; 2093
LD     0 8          ; var inc_pc ; 2094
LD     0 7          ; var args ; 2095
CDR                  ; 2096
CAR                  ; 2097
LDC 0               ; local var space ; 2098
LDC 0               ; local var space ; 2099
LDF    1337         ;  @ghcstate_read_val ; 2100
AP     4             ; 2101
MUL                  ; 2102
LDC 0               ; local var space ; 2103
LDF    1397         ;  @ghcstate_write_val ; 2104
AP     4             ; 2105
LDC 0               ; local var space ; 2106
LDC 0               ; local var space ; 2107
LDF    2405         ;  @runGhost ; 2108
AP     7             ; 2109
JOIN                 ; 2110
LDC    6            ; ELSE: 113 ; 2111
LD     0 6          ; var opcode ; 2112
CEQ                  ; 2113
SEL    2116 2147    ; IF? 114 ; 2114
JOIN                 ; 2115
LD     0 0          ; THEN: 114 ; 2116
LD     0 1          ; var world ; 2117
LD     0 2          ; var ghostInfo ; 2118
LD     0 3          ; var lev ; 2119
LD     0 8          ; var inc_pc ; 2120
LD     0 7          ; var args ; 2121
CAR                  ; 2122
LD     0 8          ; var inc_pc ; 2123
LD     0 7          ; var args ; 2124
CAR                  ; 2125
LDC 0               ; local var space ; 2126
LDC 0               ; local var space ; 2127
LDF    1337         ;  @ghcstate_read_val ; 2128
AP     4             ; 2129
LD     0 8          ; var inc_pc ; 2130
LD     0 7          ; var args ; 2131
CDR                  ; 2132
CAR                  ; 2133
LDC 0               ; local var space ; 2134
LDC 0               ; local var space ; 2135
LDF    1337         ;  @ghcstate_read_val ; 2136
AP     4             ; 2137
DIV                  ; 2138
LDC 0               ; local var space ; 2139
LDF    1397         ;  @ghcstate_write_val ; 2140
AP     4             ; 2141
LDC 0               ; local var space ; 2142
LDC 0               ; local var space ; 2143
LDF    2405         ;  @runGhost ; 2144
AP     7             ; 2145
JOIN                 ; 2146
LDC    7            ; ELSE: 114 ; 2147
LD     0 6          ; var opcode ; 2148
CEQ                  ; 2149
SEL    2152 2173    ; IF? 115 ; 2150
JOIN                 ; 2151
LD     0 0          ; THEN: 115 ; 2152
LD     0 1          ; var world ; 2153
LD     0 2          ; var ghostInfo ; 2154
LD     0 3          ; var lev ; 2155
LD     0 8          ; var inc_pc ; 2156
LD     0 7          ; var args ; 2157
CAR                  ; 2158
LD     0 7          ; var args ; 2159
CDR                  ; 2160
CAR                  ; 2161
LDC    7            ; Named Const = GHCOps.AND ; 2162
LDC 0               ; local var space ; 2163
LDC 0               ; local var space ; 2164
LDC 0               ; local var space ; 2165
LDF    1850         ;  @ghcstate_bitop ; 2166
AP     7             ; 2167
LDC 0               ; local var space ; 2168
LDC 0               ; local var space ; 2169
LDF    2405         ;  @runGhost ; 2170
AP     7             ; 2171
JOIN                 ; 2172
LDC    8            ; ELSE: 115 ; 2173
LD     0 6          ; var opcode ; 2174
CEQ                  ; 2175
SEL    2178 2199    ; IF? 116 ; 2176
JOIN                 ; 2177
LD     0 0          ; THEN: 116 ; 2178
LD     0 1          ; var world ; 2179
LD     0 2          ; var ghostInfo ; 2180
LD     0 3          ; var lev ; 2181
LD     0 8          ; var inc_pc ; 2182
LD     0 7          ; var args ; 2183
CAR                  ; 2184
LD     0 7          ; var args ; 2185
CDR                  ; 2186
CAR                  ; 2187
LDC    8            ; Named Const = GHCOps.OR ; 2188
LDC 0               ; local var space ; 2189
LDC 0               ; local var space ; 2190
LDC 0               ; local var space ; 2191
LDF    1850         ;  @ghcstate_bitop ; 2192
AP     7             ; 2193
LDC 0               ; local var space ; 2194
LDC 0               ; local var space ; 2195
LDF    2405         ;  @runGhost ; 2196
AP     7             ; 2197
JOIN                 ; 2198
LDC    9            ; ELSE: 116 ; 2199
LD     0 6          ; var opcode ; 2200
CEQ                  ; 2201
SEL    2204 2225    ; IF? 117 ; 2202
JOIN                 ; 2203
LD     0 0          ; THEN: 117 ; 2204
LD     0 1          ; var world ; 2205
LD     0 2          ; var ghostInfo ; 2206
LD     0 3          ; var lev ; 2207
LD     0 8          ; var inc_pc ; 2208
LD     0 7          ; var args ; 2209
CAR                  ; 2210
LD     0 7          ; var args ; 2211
CDR                  ; 2212
CAR                  ; 2213
LDC    9            ; Named Const = GHCOps.XOR ; 2214
LDC 0               ; local var space ; 2215
LDC 0               ; local var space ; 2216
LDC 0               ; local var space ; 2217
LDF    1850         ;  @ghcstate_bitop ; 2218
AP     7             ; 2219
LDC 0               ; local var space ; 2220
LDC 0               ; local var space ; 2221
LDF    2405         ;  @runGhost ; 2222
AP     7             ; 2223
JOIN                 ; 2224
LDC    10           ; ELSE: 117 ; 2225
LD     0 6          ; var opcode ; 2226
CEQ                  ; 2227
SEL    2230 2257    ; IF? 118 ; 2228
JOIN                 ; 2229
LD     0 0          ; THEN: 118 ; 2230
LD     0 1          ; var world ; 2231
LD     0 2          ; var ghostInfo ; 2232
LD     0 3          ; var lev ; 2233
LD     0 4          ; var state ; 2234
LD     0 7          ; var args ; 2235
CDR                  ; 2236
CDR                  ; 2237
LDC 0               ; local var space ; 2238
LDC 0               ; local var space ; 2239
LDF    1337         ;  @ghcstate_read_val ; 2240
AP     4             ; 2241
LD     0 4          ; var state ; 2242
LD     0 7          ; var args ; 2243
CDR                  ; 2244
CAR                  ; 2245
LDC 0               ; local var space ; 2246
LDC 0               ; local var space ; 2247
LDF    1337         ;  @ghcstate_read_val ; 2248
AP     4             ; 2249
CGT                  ; 2250
SEL    2262 2278    ; IF? 119 ; 2251
LDC 0               ; local var space ; 2252
LDC 0               ; local var space ; 2253
LDF    2405         ;  @runGhost ; 2254
AP     7             ; 2255
JOIN                 ; 2256
LDC    11           ; ELSE: 118 ; 2257
LD     0 6          ; var opcode ; 2258
CEQ                  ; 2259
SEL    2280 2307    ; IF? 120 ; 2260
JOIN                 ; 2261
LD     0 4          ; THEN: 119 ; 2262
CAR                 ; generateTupleAccess total=3 pos=0 ; 2263
LD     0 4          ; var state ; 2264
CDR                 ; generateTupleAccess total=3 pos=1 ; 2265
CAR                  ; 2266
LDC    8            ; just constant from code ; 2267
LD     0 7          ; var args ; 2268
CAR                  ; 2269
LDF    1308         ;  @sorted_map_assoc ; 2270
AP     3             ; 2271
LD     0 4          ; var state ; 2272
CDR                 ; generateTupleAccess total=3 pos=2 ; 2273
CDR                  ; 2274
CONS                 ; 2275
CONS                 ; 2276
JOIN                 ; 2277
LD     0 4          ; ELSE: 119 ; 2278
JOIN                 ; 2279
LD     0 0          ; THEN: 120 ; 2280
LD     0 1          ; var world ; 2281
LD     0 2          ; var ghostInfo ; 2282
LD     0 3          ; var lev ; 2283
LD     0 4          ; var state ; 2284
LD     0 7          ; var args ; 2285
CDR                  ; 2286
CAR                  ; 2287
LDC 0               ; local var space ; 2288
LDC 0               ; local var space ; 2289
LDF    1337         ;  @ghcstate_read_val ; 2290
AP     4             ; 2291
LD     0 4          ; var state ; 2292
LD     0 7          ; var args ; 2293
CDR                  ; 2294
CDR                  ; 2295
LDC 0               ; local var space ; 2296
LDC 0               ; local var space ; 2297
LDF    1337         ;  @ghcstate_read_val ; 2298
AP     4             ; 2299
CEQ                  ; 2300
SEL    2312 2328    ; IF? 121 ; 2301
LDC 0               ; local var space ; 2302
LDC 0               ; local var space ; 2303
LDF    2405         ;  @runGhost ; 2304
AP     7             ; 2305
JOIN                 ; 2306
LDC    12           ; ELSE: 120 ; 2307
LD     0 6          ; var opcode ; 2308
CEQ                  ; 2309
SEL    2330 2357    ; IF? 122 ; 2310
JOIN                 ; 2311
LD     0 4          ; THEN: 121 ; 2312
CAR                 ; generateTupleAccess total=3 pos=0 ; 2313
LD     0 4          ; var state ; 2314
CDR                 ; generateTupleAccess total=3 pos=1 ; 2315
CAR                  ; 2316
LDC    8            ; just constant from code ; 2317
LD     0 7          ; var args ; 2318
CAR                  ; 2319
LDF    1308         ;  @sorted_map_assoc ; 2320
AP     3             ; 2321
LD     0 4          ; var state ; 2322
CDR                 ; generateTupleAccess total=3 pos=2 ; 2323
CDR                  ; 2324
CONS                 ; 2325
CONS                 ; 2326
JOIN                 ; 2327
LD     0 4          ; ELSE: 121 ; 2328
JOIN                 ; 2329
LD     0 0          ; THEN: 122 ; 2330
LD     0 1          ; var world ; 2331
LD     0 2          ; var ghostInfo ; 2332
LD     0 3          ; var lev ; 2333
LD     0 4          ; var state ; 2334
LD     0 7          ; var args ; 2335
CDR                  ; 2336
CAR                  ; 2337
LDC 0               ; local var space ; 2338
LDC 0               ; local var space ; 2339
LDF    1337         ;  @ghcstate_read_val ; 2340
AP     4             ; 2341
LD     0 4          ; var state ; 2342
LD     0 7          ; var args ; 2343
CDR                  ; 2344
CDR                  ; 2345
LDC 0               ; local var space ; 2346
LDC 0               ; local var space ; 2347
LDF    1337         ;  @ghcstate_read_val ; 2348
AP     4             ; 2349
CGT                  ; 2350
SEL    2362 2378    ; IF? 123 ; 2351
LDC 0               ; local var space ; 2352
LDC 0               ; local var space ; 2353
LDF    2405         ;  @runGhost ; 2354
AP     7             ; 2355
JOIN                 ; 2356
LDC    13           ; ELSE: 122 ; 2357
LD     0 6          ; var opcode ; 2358
CEQ                  ; 2359
SEL    2380 2400    ; IF? 124 ; 2360
JOIN                 ; 2361
LD     0 4          ; THEN: 123 ; 2362
CAR                 ; generateTupleAccess total=3 pos=0 ; 2363
LD     0 4          ; var state ; 2364
CDR                 ; generateTupleAccess total=3 pos=1 ; 2365
CAR                  ; 2366
LDC    8            ; just constant from code ; 2367
LD     0 7          ; var args ; 2368
CAR                  ; 2369
LDF    1308         ;  @sorted_map_assoc ; 2370
AP     3             ; 2371
LD     0 4          ; var state ; 2372
CDR                 ; generateTupleAccess total=3 pos=2 ; 2373
CDR                  ; 2374
CONS                 ; 2375
CONS                 ; 2376
JOIN                 ; 2377
LD     0 4          ; ELSE: 123 ; 2378
JOIN                 ; 2379
LD     0 0          ; THEN: 124 ; 2380
LD     0 1          ; var world ; 2381
LD     0 2          ; var ghostInfo ; 2382
LD     0 3          ; var lev ; 2383
LD     0 1          ; var world ; 2384
LD     0 8          ; var inc_pc ; 2385
LD     0 2          ; var ghostInfo ; 2386
LD     0 7          ; var args ; 2387
CAR                  ; 2388
LD     0 7          ; var args ; 2389
CDR                  ; 2390
LDC 0               ; local var space ; 2391
LDC 0               ; local var space ; 2392
LDF    1579         ;  @processGhostInt ; 2393
AP     7             ; 2394
LDC 0               ; local var space ; 2395
LDC 0               ; local var space ; 2396
LDF    2405         ;  @runGhost ; 2397
AP     7             ; 2398
JOIN                 ; 2399
LD     0 4          ; ELSE: 124 ; 2400
CAR                 ; generateTupleAccess total=3 pos=0 ; 2401
CDR                 ; generateTupleAccess total=3 pos=2 ; 2402
CDR                  ; 2403
JOIN                 ; 2404
LD     0 4          ;  <== runGhost  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state] (as blk) ; 2405
CDR                 ; generateTupleAccess total=3 pos=1 ; 2406
CAR                  ; 2407
LDC    8            ; just constant from code ; 2408
LDC    0            ; just constant from code ; 2409
LDF    1292         ;  @sorted_map_get ; 2410
AP     3             ; 2411
ST     0 5           ; 2412
LD     0 0          ; var prog ; 2413
LD     0 5          ; var pc ; 2414
LDC    0            ; NULL literal ; 2415
LDF    1292         ;  @sorted_map_get ; 2416
AP     3             ; 2417
ST     0 6           ; 2418
LD     0 6          ; var step ; 2419
ATOM                 ; 2420
SEL    2423 2428    ; IF? 50 ; 2421
RTN                  ; 2422
LD     0 4          ; THEN: 50 ; 2423
CAR                 ; generateTupleAccess total=3 pos=0 ; 2424
CDR                 ; generateTupleAccess total=3 pos=2 ; 2425
CDR                  ; 2426
JOIN                 ; 2427
LD     0 3          ; ELSE: 50 ; 2428
LDC    1023         ; just constant from code ; 2429
CGT                  ; 2430
SEL    2433 2438    ; IF? 125 ; 2431
JOIN                 ; 2432
LD     0 4          ; THEN: 125 ; 2433
CAR                 ; generateTupleAccess total=3 pos=0 ; 2434
CDR                 ; generateTupleAccess total=3 pos=2 ; 2435
CDR                  ; 2436
JOIN                 ; 2437
LD     0 0          ; ELSE: 125 ; 2438
LD     0 1          ; var world ; 2439
LD     0 2          ; var ghostInfo ; 2440
LD     0 3          ; var lev ; 2441
LDC    1            ; just constant from code ; 2442
ADD                  ; 2443
LD     0 4          ; var state ; 2444
LD     0 6          ; var step ; 2445
LDC 0               ; local var space ; 2446
LDC 0               ; local var space ; 2447
LDC 0               ; local var space ; 2448
LDF    1893         ;  @runGhostStep ; 2449
AP     9             ; 2450
JOIN                 ; 2451
LD     0 1          ;  <== getGhostDirection  [WorldState world, GhostInfo ghostInfo] (as blk) ; 2452
CDR                 ; generateTupleAccess total=3 pos=1 ; 2453
CAR                  ; 2454
LDC    0            ; just constant from code ; 2455
LDC    0            ; NULL literal ; 2456
LDC    0            ; just constant from code ; 2457
CONS                 ; 2458
CONS                 ; 2459
LDF    9655         ;  @lambda_1006 ; 2460
LDF    386          ;  @fold0 ; 2461
AP     3             ; 2462
ST     0 2           ; 2463
LD     0 0          ; var world ; 2464
CDR                 ; generateTupleAccess total=4 pos=2 ; 2465
CDR                  ; 2466
CAR                  ; 2467
CAR                  ; 2468
ST     0 3           ; 2469
LD     0 2          ; var prog ; 2470
CDR                 ; generateTupleAccess total=2 pos=1 ; 2471
LD     0 0          ; var world ; 2472
LD     0 1          ; var ghostInfo ; 2473
LDC    0            ; just constant from code ; 2474
LD     0 3          ; var ghostState ; 2475
LDC    0            ; NULL literal ; 2476
LDC    0            ; just constant from code ; 2477
CONS                 ; 2478
LDC    0            ; NULL literal ; 2479
LDC    0            ; just constant from code ; 2480
CONS                 ; 2481
CONS                 ; 2482
CONS                 ; 2483
LDC 0               ; local var space ; 2484
LDC 0               ; local var space ; 2485
LDF    2405         ;  @runGhost ; 2486
AP     7             ; 2487
RTN                  ; 2488
LDC    1000001      ;  <== entryCPUEmulator  [] (as blk) ; 2489
DBUG                 ; 2490
LDF    8503         ;  @sample_map ; 2491
AP     0             ; 2492
ST     0 0           ; 2493
LDC    1000002      ; just constant from code ; 2494
DBUG                 ; 2495
LD     0 0          ; var ws ; 2496
DBUG                 ; 2497
BRK                  ; 2498
LD     0 0          ; var ws ; 2499
LDC    0            ; NULL literal ; 2500
LDC 0               ; local var space ; 2501
LDC 0               ; local var space ; 2502
LDC 0               ; local var space ; 2503
LDF    2525         ;  @entryFactual ; 2504
AP     5             ; 2505
ST     0 1           ; 2506
LDC    1000003      ; just constant from code ; 2507
DBUG                 ; 2508
LD     0 0          ; var ws ; 2509
DBUG                 ; 2510
BRK                  ; 2511
LD     0 1          ; var initialDone ; 2512
CDR                 ; generateTupleAccess total=2 pos=1 ; 2513
ST     0 2           ; 2514
LD     0 1          ; var initialDone ; 2515
CAR                 ; generateTupleAccess total=2 pos=0 ; 2516
ST     0 3           ; 2517
LD     0 3          ; var a ; 2518
LD     0 0          ; var ws ; 2519
LD     0 2          ; var b ; 2520
AP     2             ; 2521
ST     0 4           ; 2522
LDC    0            ; NULL literal ; 2523
RTN                  ; 2524
LD     0 0          ;  <== entryFactual  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 2525
LD     0 1          ; var ghostSpecs ; 2526
LDC 0               ; local var space ; 2527
LDF    3033         ;  @createInitialState ; 2528
AP     3             ; 2529
ST     0 2           ; 2530
LD     0 2          ; var initialState ; 2531
CAR                 ; generateTupleAccess total=4 pos=0 ; 2532
CDR                 ; generateTupleAccess total=6 pos=5 ; 2533
CDR                  ; 2534
CDR                  ; 2535
CDR                  ; 2536
CDR                  ; 2537
LDC    1            ; just constant from code ; 2538
LDF    423          ;  @list_item ; 2539
AP     2             ; 2540
ST     0 3           ; 2541
LDC    0            ; just constant from code ; 2542
LDC    100          ; Named Const = VMExtras.GET_READER ; 2543
LDC    1            ; just constant from code ; 2544
LD     0 3          ; var newRowAccessor ; 2545
AP     2             ; 2546
AP     1             ; 2547
ST     0 4           ; 2548
LD     0 2          ; var initialState ; 2549
LDF    9798         ;  @lambda_1017 ; 2550
CONS                 ; 2551
RTN                  ; 2552
LDF    3626         ;  <== test01  [] (as blk), ALSO: @array_256 ; 2553
AP     0             ; 2554
ST     0 0           ; 2555
LDC    100          ; Named Const = VMExtras.GET_READER ; 2556
LDC    22           ; just constant from code ; 2557
LD     0 0          ; var accessor ; 2558
AP     2             ; 2559
ST     0 1           ; 2560
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 2561
LDC    22           ; just constant from code ; 2562
LD     0 0          ; var accessor ; 2563
AP     2             ; 2564
ST     0 2           ; 2565
LDC    77           ; just constant from code ; 2566
LD     0 2          ; var writer101 ; 2567
AP     1             ; 2568
ST     0 3           ; 2569
LDC    0            ; just constant from code ; 2570
LD     0 1          ; var reader101 ; 2571
AP     1             ; 2572
ST     0 4           ; 2573
LDC    0            ; just constant from code ; 2574
RTN                  ; 2575
LD     0 0          ;  <== collectEdgePills  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 2576
CDR                 ; generateTupleAccess total=7 pos=3 ; 2577
CDR                  ; 2578
CDR                  ; 2579
CAR                  ; 2580
LDF    9815         ;  @lambda_1018 ; 2581
LDF    349          ;  @dropWhile ; 2582
AP     2             ; 2583
ST     0 3           ; 2584
LD     0 3          ; var pathRemaining ; 2585
LDF    9838         ;  @lambda_1019 ; 2586
LDF    537          ;  @filter ; 2587
AP     2             ; 2588
ST     0 4           ; 2589
LD     0 4          ; var rv ; 2590
RTN                  ; 2591
LD     0 0          ;  <== collectEdgeGhosts  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 2592
CDR                 ; generateTupleAccess total=7 pos=2 ; 2593
CDR                  ; 2594
CAR                  ; 2595
LDF    9850         ;  @lambda_1020 ; 2596
LDF    349          ;  @dropWhile ; 2597
AP     2             ; 2598
ST     0 3           ; 2599
LD     0 3          ; var pathOnEdge ; 2600
LDF    9871         ;  @lambda_1021 ; 2601
LDF    537          ;  @filter ; 2602
AP     2             ; 2603
RTN                  ; 2604
LD     0 0          ;  <== collectAnyEdgePills  [ParsedEdge edge, ListCons<ListCons<Integer>> map] (as blk) ; 2605
CDR                 ; generateTupleAccess total=7 pos=3 ; 2606
CDR                  ; 2607
CDR                  ; 2608
CAR                  ; 2609
ST     0 2           ; 2610
LD     0 2          ; var edgeAccess ; 2611
LDF    9886         ;  @lambda_1022 ; 2612
LDF    537          ;  @filter ; 2613
AP     2             ; 2614
ST     0 3           ; 2615
LD     0 3          ; var rv ; 2616
RTN                  ; 2617
LD     0 0          ;  <== countAnyEdgePills  [ParsedEdge edge] (as blk) ; 2618
CDR                 ; generateTupleAccess total=7 pos=3 ; 2619
CDR                  ; 2620
CDR                  ; 2621
CAR                  ; 2622
ST     0 1           ; 2623
LD     0 1          ; var edgeAccess ; 2624
LDC    0            ; just constant from code ; 2625
LDF    9898         ;  @lambda_1023 ; 2626
LDF    386          ;  @fold0 ; 2627
AP     3             ; 2628
ST     0 2           ; 2629
LD     0 2          ; var rv ; 2630
RTN                  ; 2631
LD     0 0          ;  <== countMyEdgePills  [ParsedEdge edge, Point start] (as blk) ; 2632
CDR                 ; generateTupleAccess total=7 pos=3 ; 2633
CDR                  ; 2634
CDR                  ; 2635
CAR                  ; 2636
LDF    9912         ;  @lambda_1024 ; 2637
LDF    349          ;  @dropWhile ; 2638
AP     2             ; 2639
ST     0 2           ; 2640
LD     0 2          ; var pathRemaining ; 2641
LDC    0            ; just constant from code ; 2642
LDF    9935         ;  @lambda_1025 ; 2643
LDF    386          ;  @fold0 ; 2644
AP     3             ; 2645
ST     0 3           ; 2646
LD     0 3          ; var rv ; 2647
RTN                  ; 2648
LD     0 1          ;  <== performMove  [AIState aistate, WorldState worldState] (as blk) ; 2649
CDR                 ; generateTupleAccess total=4 pos=1 ; 2650
CAR                  ; 2651
CDR                 ; generateTupleAccess total=5 pos=1 ; 2652
CAR                  ; 2653
ST     0 2           ; 2654
LD     0 0          ; var aistate ; 2655
LD     0 2          ; var location ; 2656
LDF    3384         ;  @findEdgesForPoint ; 2657
AP     2             ; 2658
ST     0 3           ; 2659
LD     0 3          ; var edgesForPoint ; 2660
LD     0 0          ; var aistate ; 2661
LD     0 1          ; var worldState ; 2662
LDC 0               ; local var space ; 2663
LDC 0               ; local var space ; 2664
LDC 0               ; local var space ; 2665
LDC 0               ; local var space ; 2666
LDC 0               ; local var space ; 2667
LDF    2988         ;  @findBestDistantEdge ; 2668
AP     8             ; 2669
ST     0 7           ; 2670
LD     0 7          ; var startEdge ; 2671
CDR                 ; generateTupleAccess total=7 pos=2 ; 2672
CDR                  ; 2673
CAR                  ; 2674
LDF    9996         ;  @lambda_1031 ; 2675
LDF    349          ;  @dropWhile ; 2676
AP     2             ; 2677
ST     0 8           ; 2678
LD     0 8          ; var pathToWalk ; 2679
LDF    532          ;  @length ; 2680
AP     1             ; 2681
LDC    2            ; just constant from code ; 2682
CGTE                 ; 2683
SEL    2725 2741     ; 2684
LD     0 4          ; var retval ; 2685
CDR                 ; generateTupleAccess total=2 pos=1 ; 2686
LDC    3            ; Named Const = Direction.LEFT ; 2687
CEQ                  ; 2688
SEL    2746 2751    ; IF? 51 ; 2689
ST     0 9           ; 2690
LD     0 4          ; var retval ; 2691
CDR                 ; generateTupleAccess total=2 pos=1 ; 2692
LDC    0            ; Named Const = Direction.UP ; 2693
CEQ                  ; 2694
SEL    2757 2762    ; IF? 52 ; 2695
ST     0 10          ; 2696
LD     0 4          ; var retval ; 2697
CAR                 ; generateTupleAccess total=2 pos=0 ; 2698
ST     0 11          ; 2699
LD     0 11         ; var a ; 2700
CAR                 ; generateTupleAccess total=4 pos=0 ; 2701
CDR                 ; generateTupleAccess total=6 pos=5 ; 2702
CDR                  ; 2703
CDR                  ; 2704
CDR                  ; 2705
CDR                  ; 2706
LD     0 10         ; var ny ; 2707
LDF    423          ;  @list_item ; 2708
AP     2             ; 2709
ST     0 12          ; 2710
LDC    0            ; just constant from code ; 2711
LDC    100          ; Named Const = VMExtras.GET_READER ; 2712
LD     0 9          ; var nx ; 2713
LD     0 12         ; var newRowAccessor ; 2714
AP     2             ; 2715
AP     1             ; 2716
ST     0 13          ; 2717
LD     0 13         ; var oldValue ; 2718
LDC    2            ; Named Const = CT.PILL ; 2719
CEQ                  ; 2720
SEL    2768 2775    ; IF? 53 ; 2721
ST     0 13          ; 2722
LD     0 4          ; var retval ; 2723
RTN                  ; 2724
LD     0 8          ; branch@2725 ; 2725
CDR                  ; 2726
CAR                  ; 2727
ST     0 5           ; 2728
LD     0 5          ; var newLocation ; 2729
CAR                 ; generateTupleAccess total=2 pos=0 ; 2730
LD     0 2          ; var location ; 2731
CAR                 ; generateTupleAccess total=2 pos=0 ; 2732
CGT                  ; 2733
SEL    2777 2779    ; IF? 126 ; 2734
ST     0 6           ; 2735
LD     0 0          ; var aistate ; 2736
LD     0 6          ; var direction ; 2737
CONS                 ; 2738
ST     0 4           ; 2739
JOIN                 ; 2740
LD     0 0          ; branch@2741 ; 2741
LDC    0            ; Named Const = Direction.UP ; 2742
CONS                 ; 2743
ST     0 4           ; 2744
JOIN                 ; 2745
LD     0 2          ; THEN: 51 ; 2746
CAR                 ; generateTupleAccess total=2 pos=0 ; 2747
LDC    1            ; just constant from code ; 2748
SUB                  ; 2749
JOIN                 ; 2750
LD     0 4          ; ELSE: 51 ; 2751
CDR                 ; generateTupleAccess total=2 pos=1 ; 2752
LDC    1            ; Named Const = Direction.RIGHT ; 2753
CEQ                  ; 2754
SEL    2786 2791    ; IF? 127 ; 2755
JOIN                 ; 2756
LD     0 2          ; THEN: 52 ; 2757
CDR                 ; generateTupleAccess total=2 pos=1 ; 2758
LDC    1            ; just constant from code ; 2759
SUB                  ; 2760
JOIN                 ; 2761
LD     0 4          ; ELSE: 52 ; 2762
CDR                 ; generateTupleAccess total=2 pos=1 ; 2763
LDC    2            ; Named Const = Direction.DOWN ; 2764
CEQ                  ; 2765
SEL    2794 2799    ; IF? 128 ; 2766
JOIN                 ; 2767
LDC    1            ; THEN: 53 ; 2768
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 2769
LD     0 9          ; var nx ; 2770
LD     0 12         ; var newRowAccessor ; 2771
AP     2             ; 2772
AP     1             ; 2773
JOIN                 ; 2774
LD     0 13         ; ELSE: 53 ; 2775
JOIN                 ; 2776
LDC    1            ; THEN: 126 ; 2777
JOIN                 ; 2778
LD     0 2          ; ELSE: 126 ; 2779
CAR                 ; generateTupleAccess total=2 pos=0 ; 2780
LD     0 5          ; var newLocation ; 2781
CAR                 ; generateTupleAccess total=2 pos=0 ; 2782
CGT                  ; 2783
SEL    2802 2804    ; IF? 129 ; 2784
JOIN                 ; 2785
LD     0 2          ; THEN: 127 ; 2786
CAR                 ; generateTupleAccess total=2 pos=0 ; 2787
LDC    1            ; just constant from code ; 2788
ADD                  ; 2789
JOIN                 ; 2790
LD     0 2          ; ELSE: 127 ; 2791
CAR                 ; generateTupleAccess total=2 pos=0 ; 2792
JOIN                 ; 2793
LD     0 2          ; THEN: 128 ; 2794
CDR                 ; generateTupleAccess total=2 pos=1 ; 2795
LDC    1            ; just constant from code ; 2796
ADD                  ; 2797
JOIN                 ; 2798
LD     0 2          ; ELSE: 128 ; 2799
CDR                 ; generateTupleAccess total=2 pos=1 ; 2800
JOIN                 ; 2801
LDC    3            ; THEN: 129 ; 2802
JOIN                 ; 2803
LD     0 2          ; ELSE: 129 ; 2804
CDR                 ; generateTupleAccess total=2 pos=1 ; 2805
LD     0 5          ; var newLocation ; 2806
CDR                 ; generateTupleAccess total=2 pos=1 ; 2807
CGT                  ; 2808
SEL    2811 2813    ; IF? 130 ; 2809
JOIN                 ; 2810
LDC    0            ; THEN: 130 ; 2811
JOIN                 ; 2812
LDC    2            ; ELSE: 130 ; 2813
JOIN                 ; 2814
LD     0 2          ;  <== waveFromEdgeToNearestEdges  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 2815
LDF    415          ;  @queue_isempty ; 2816
AP     1             ; 2817
SEL    2821 2824     ; 2818
LD     0 6          ; var retval ; 2819
RTN                  ; 2820
LD     0 4          ; branch@2821 ; 2821
ST     0 6           ; 2822
JOIN                 ; 2823
LD     0 0          ; branch@2824 ; 2824
LD     0 1          ; var worldState ; 2825
LD     0 2          ; var edgeQueue ; 2826
LD     0 3          ; var visited ; 2827
LD     0 4          ; var acc ; 2828
LD     0 5          ; var edgesWithDotsSoFar ; 2829
LDC 0               ; local var space ; 2830
LDC 0               ; local var space ; 2831
LDC 0               ; local var space ; 2832
LDC 0               ; local var space ; 2833
LDC 0               ; local var space ; 2834
LDC 0               ; local var space ; 2835
LDC 0               ; local var space ; 2836
LDC 0               ; local var space ; 2837
LDC 0               ; local var space ; 2838
LDC 0               ; local var space ; 2839
LDF    2844         ;  @waveFromEdgeToNearestEdges0 ; 2840
AP     16            ; 2841
ST     0 6           ; 2842
JOIN                 ; 2843
LD     0 2          ;  <== waveFromEdgeToNearestEdges0  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 2844
LDC 0               ; local var space ; 2845
LDF    492          ;  @queue_dequeue ; 2846
AP     2             ; 2847
ST     0 7           ; 2848
LD     0 7          ; var reduced ; 2849
CAR                 ; generateTupleAccess total=2 pos=0 ; 2850
ST     0 8           ; 2851
LD     0 0          ; var aistate ; 2852
CAR                 ; generateTupleAccess total=4 pos=0 ; 2853
CDR                 ; generateTupleAccess total=6 pos=2 ; 2854
CDR                  ; 2855
CAR                  ; 2856
LD     0 8          ; var lookingEdge ; 2857
LDF    2953         ;  @findFollowingEdges ; 2858
AP     2             ; 2859
ST     0 9           ; 2860
LD     0 9          ; var following ; 2861
LDF    10026        ;  @lambda_1033 ; 2862
LDF    537          ;  @filter ; 2863
AP     2             ; 2864
ST     0 9           ; 2865
LD     0 9          ; var following ; 2866
LDF    10039        ;  @lambda_1034 ; 2867
LDF    537          ;  @filter ; 2868
AP     2             ; 2869
ST     0 10          ; 2870
LD     0 3          ; var visited ; 2871
LD     0 9          ; var following ; 2872
LDF    10056        ;  @lambda_1035 ; 2873
LDF    69           ;  @map ; 2874
AP     2             ; 2875
LDF    1317         ;  @sorted_map_assoc_all ; 2876
AP     2             ; 2877
ST     0 11          ; 2878
LD     0 11         ; var nvisited ; 2879
LD     0 9          ; var following ; 2880
LDF    10066        ;  @lambda_1036 ; 2881
LDF    69           ;  @map ; 2882
AP     2             ; 2883
LDF    1317         ;  @sorted_map_assoc_all ; 2884
AP     2             ; 2885
ST     0 11          ; 2886
LD     0 9          ; var following ; 2887
LDF    10076        ;  @lambda_1037 ; 2888
LDF    69           ;  @map ; 2889
AP     2             ; 2890
ST     0 12          ; 2891
LD     0 12         ; var newRoutes ; 2892
LD     0 7          ; var reduced ; 2893
CDR                 ; generateTupleAccess total=2 pos=1 ; 2894
LDF    10080        ;  @lambda_1038 ; 2895
LDF    386          ;  @fold0 ; 2896
AP     3             ; 2897
ST     0 13          ; 2898
LD     0 12         ; var newRoutes ; 2899
LD     0 4          ; var acc ; 2900
LDF    184          ;  @concat2_set ; 2901
AP     2             ; 2902
ST     0 14          ; 2903
LD     0 4          ; var acc ; 2904
ATOM                 ; 2905
LDC    1            ; for negation ; 2906
SUB                  ; 2907
SEL    2915 2935    ; IF? 54 ; 2908
ST     0 15          ; 2909
LD     0 15         ; var stopCondition ; 2910
SEL    2937 2939    ; IF? 55 ; 2911
ST     0 6           ; 2912
LD     0 6          ; var retval ; 2913
RTN                  ; 2914
LD     0 5          ; THEN: 54 ; 2915
LDC    3            ; just constant from code ; 2916
CGT                  ; 2917
LD     0 4          ; var acc ; 2918
LDF    532          ;  @length ; 2919
AP     1             ; 2920
LDC    15           ; just constant from code ; 2921
CGT                  ; 2922
MUL                  ; 2923
LD     0 14         ; var newAcc ; 2924
CAR                  ; 2925
LDF    532          ;  @length ; 2926
AP     1             ; 2927
LD     0 4          ; var acc ; 2928
CAR                  ; 2929
LDF    532          ;  @length ; 2930
AP     1             ; 2931
CGT                  ; 2932
MUL                  ; 2933
JOIN                 ; 2934
LDC    0            ; ELSE: 54 ; 2935
JOIN                 ; 2936
LD     0 4          ; THEN: 55 ; 2937
JOIN                 ; 2938
LD     0 0          ; ELSE: 55 ; 2939
LD     0 1          ; var worldState ; 2940
LD     0 13         ; var newqq ; 2941
LD     0 11         ; var nvisited ; 2942
LD     0 14         ; var newAcc ; 2943
LD     0 5          ; var edgesWithDotsSoFar ; 2944
LD     0 10         ; var withDots ; 2945
LDF    532          ;  @length ; 2946
AP     1             ; 2947
ADD                  ; 2948
LDC 0               ; local var space ; 2949
LDF    2815         ;  @waveFromEdgeToNearestEdges ; 2950
AP     7             ; 2951
JOIN                 ; 2952
LD     0 0          ;  <== findFollowingEdges  [ListCons<ParsedEdge> parsedEdges, ListCons<ParsedEdge> lookingEdge] (as blk) ; 2953
LDF    10017        ;  @lambda_1032 ; 2954
LDF    537          ;  @filter ; 2955
AP     2             ; 2956
RTN                  ; 2957
LD     0 0          ;  <== pointEquals  [Point a, Point b] (as blk) ; 2958
CAR                 ; generateTupleAccess total=2 pos=0 ; 2959
LD     0 1          ; var b ; 2960
CAR                 ; generateTupleAccess total=2 pos=0 ; 2961
CEQ                  ; 2962
LD     0 0          ; var a ; 2963
CDR                 ; generateTupleAccess total=2 pos=1 ; 2964
LD     0 1          ; var b ; 2965
CDR                 ; generateTupleAccess total=2 pos=1 ; 2966
CEQ                  ; 2967
MUL                  ; 2968
SEL    2971 2973    ; IF? 56 ; 2969
RTN                  ; 2970
LDC    1            ; THEN: 56 ; 2971
JOIN                 ; 2972
LDC    0            ; ELSE: 56 ; 2973
JOIN                 ; 2974
LD     0 0          ;  <== endingPointOfEdgeRoute  [ListCons<ParsedEdge> lookingEdge] (as blk) ; 2975
CAR                  ; 2976
ST     0 1           ; 2977
LD     0 1          ; var lastEdge ; 2978
CDR                 ; generateTupleAccess total=7 pos=1 ; 2979
CAR                  ; 2980
RTN                  ; 2981
LD     0 0          ;  <== countRoutePills  [ListCons<ParsedEdge> route] (as blk) ; 2982
LDC    0            ; just constant from code ; 2983
LDF    10085        ;  @lambda_1039 ; 2984
LDF    386          ;  @fold0 ; 2985
AP     3             ; 2986
RTN                  ; 2987
LDF    403          ;  <== findBestDistantEdge  [ListCons<ParsedEdge> currentEdges, AIState aistate, WorldState worldState] (as blk), ALSO: @queue_new ; 2988
AP     0             ; 2989
ST     0 3           ; 2990
LD     0 0          ; var currentEdges ; 2991
LD     0 3          ; var q ; 2992
LDF    9952         ;  @lambda_1027 ; 2993
LDF    386          ;  @fold0 ; 2994
AP     3             ; 2995
ST     0 3           ; 2996
LD     0 1          ; var aistate ; 2997
LD     0 2          ; var worldState ; 2998
LD     0 3          ; var q ; 2999
LDC    0            ; NULL literal ; 3000
LDC    0            ; just constant from code ; 3001
CONS                 ; 3002
LD     0 0          ; var currentEdges ; 3003
LDF    9959         ;  @lambda_1028 ; 3004
LDF    69           ;  @map ; 3005
AP     2             ; 3006
LDF    1317         ;  @sorted_map_assoc_all ; 3007
AP     2             ; 3008
LDC    0            ; NULL literal ; 3009
LDC    0            ; just constant from code ; 3010
LDC 0               ; local var space ; 3011
LDF    2815         ;  @waveFromEdgeToNearestEdges ; 3012
AP     7             ; 3013
ST     0 4           ; 3014
LD     0 4          ; var dests ; 3015
LDF    9969         ;  @lambda_1029 ; 3016
LDF    69           ;  @map ; 3017
AP     2             ; 3018
ST     0 5           ; 3019
LD     0 5          ; var scores ; 3020
LDF    9993         ;  @lambda_1030 ; 3021
LDF    335          ;  @maximum_by ; 3022
AP     2             ; 3023
ST     0 6           ; 3024
LD     0 6          ; var winningRoute ; 3025
CAR                 ; generateTupleAccess total=2 pos=0 ; 3026
LDF    299          ;  @reverse ; 3027
AP     1             ; 3028
CAR                  ; 3029
ST     0 7           ; 3030
LD     0 7          ; var myStart ; 3031
RTN                  ; 3032
LD     0 0          ;  <== createInitialState  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 3033
CDR                 ; generateTupleAccess total=4 pos=2 ; 3034
CDR                  ; 3035
CAR                  ; 3036
LDF    532          ;  @length ; 3037
AP     1             ; 3038
LDF    777          ;  @range_n ; 3039
AP     1             ; 3040
ST     0 2           ; 3041
LD     0 0          ; var ws ; 3042
CAR                 ; generateTupleAccess total=4 pos=0 ; 3043
LDF    3531         ;  @parseStaticMap ; 3044
AP     1             ; 3045
LDC    0            ; just constant from code ; 3046
LDC    0            ; just constant from code ; 3047
LDF    9790         ;  @lambda_1016 ; 3048
LD     0 0          ; var ws ; 3049
CDR                 ; generateTupleAccess total=4 pos=2 ; 3050
CDR                  ; 3051
CAR                  ; 3052
LD     0 1          ; var ghostSpecs ; 3053
LD     0 2          ; var ghostNumbers ; 3054
LDF    687          ;  @zip3_with ; 3055
AP     4             ; 3056
CONS                 ; 3057
CONS                 ; 3058
CONS                 ; 3059
RTN                  ; 3060
LD     0 0          ;  <== isWall  [int test] (as blk) ; 3061
LDC    0            ; Named Const = CT.WALL ; 3062
CEQ                  ; 3063
SEL    3066 3068    ; IF? 57 ; 3064
RTN                  ; 3065
LDC    1            ; THEN: 57 ; 3066
JOIN                 ; 3067
LDC    0            ; ELSE: 57 ; 3068
JOIN                 ; 3069
LDC    77           ;  <== isWalkable  [int test] (as blk) ; 3070
ST     0 1           ; 3071
LD     0 0          ; var test ; 3072
LDC    0            ; Named Const = CT.WALL ; 3073
CEQ                  ; 3074
SEL    3078 3081     ; 3075
LD     0 1          ; var retval ; 3076
RTN                  ; 3077
LDC    0            ; branch@3078 ; 3078
ST     0 1           ; 3079
JOIN                 ; 3080
LDC    1            ; branch@3081 ; 3081
ST     0 1           ; 3082
JOIN                 ; 3083
LD     0 0          ;  <== isWalkable2  [ListCons<ListCons<Integer>> map, Point p] (as blk) ; 3084
LD     0 1          ; var p ; 3085
CDR                 ; generateTupleAccess total=2 pos=1 ; 3086
LD     0 1          ; var p ; 3087
CAR                 ; generateTupleAccess total=2 pos=0 ; 3088
LDF    3605         ;  @getMapItem ; 3089
AP     3             ; 3090
LDC 0               ; local var space ; 3091
LDF    3070         ;  @isWalkable ; 3092
AP     2             ; 3093
RTN                  ; 3094
LD     0 0          ;  <== isWalkable3  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 3095
LD     0 2          ; var y ; 3096
LD     0 1          ; var x ; 3097
LDF    3605         ;  @getMapItem ; 3098
AP     3             ; 3099
LDC 0               ; local var space ; 3100
LDF    3070         ;  @isWalkable ; 3101
AP     2             ; 3102
RTN                  ; 3103
LD     0 0          ;  <== isJunction  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 3104
LD     0 2          ; var y ; 3105
LDC    1            ; just constant from code ; 3106
SUB                  ; 3107
LD     0 1          ; var x ; 3108
LDF    3605         ;  @getMapItem ; 3109
AP     3             ; 3110
LDC 0               ; local var space ; 3111
LDF    3070         ;  @isWalkable ; 3112
AP     2             ; 3113
ST     0 3           ; 3114
LD     0 0          ; var map ; 3115
LD     0 2          ; var y ; 3116
LDC    1            ; just constant from code ; 3117
ADD                  ; 3118
LD     0 1          ; var x ; 3119
LDF    3605         ;  @getMapItem ; 3120
AP     3             ; 3121
LDC 0               ; local var space ; 3122
LDF    3070         ;  @isWalkable ; 3123
AP     2             ; 3124
ST     0 4           ; 3125
LD     0 0          ; var map ; 3126
LD     0 2          ; var y ; 3127
LD     0 1          ; var x ; 3128
LDC    1            ; just constant from code ; 3129
SUB                  ; 3130
LDF    3605         ;  @getMapItem ; 3131
AP     3             ; 3132
LDC 0               ; local var space ; 3133
LDF    3070         ;  @isWalkable ; 3134
AP     2             ; 3135
ST     0 5           ; 3136
LD     0 0          ; var map ; 3137
LD     0 2          ; var y ; 3138
LD     0 1          ; var x ; 3139
LDC    1            ; just constant from code ; 3140
ADD                  ; 3141
LDF    3605         ;  @getMapItem ; 3142
AP     3             ; 3143
LDC 0               ; local var space ; 3144
LDF    3070         ;  @isWalkable ; 3145
AP     2             ; 3146
ST     0 6           ; 3147
LD     0 3          ; var a1 ; 3148
LD     0 4          ; var a2 ; 3149
ADD                  ; 3150
LD     0 5          ; var a3 ; 3151
ADD                  ; 3152
LD     0 6          ; var a4 ; 3153
ADD                  ; 3154
LDC    2            ; just constant from code ; 3155
CGT                  ; 3156
SEL    3159 3161    ; IF? 59 ; 3157
RTN                  ; 3158
LDC    1            ; THEN: 59 ; 3159
JOIN                 ; 3160
LDC    0            ; ELSE: 59 ; 3161
JOIN                 ; 3162
LD     0 0          ;  <== findNeighbourJunctions  [ListCons<ListCons<Integer>> map, Point somePoint, SortedMap<Point> allJunctions, ListCons<Point> allJunctions2, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 3163
LDF    403          ;  @queue_new ; 3164
AP     0             ; 3165
LD     0 1          ; var somePoint ; 3166
LDC    0            ; NULL literal ; 3167
CONS                 ; 3168
LDF    407          ;  @queue_enqueue ; 3169
AP     2             ; 3170
LD     0 2          ; var allJunctions ; 3171
LD     0 3          ; var allJunctions2 ; 3172
LDC    0            ; NULL literal ; 3173
LDC    0            ; just constant from code ; 3174
CONS                 ; 3175
LD     0 1          ; var somePoint ; 3176
LDF    3232         ;  @getPointKey ; 3177
AP     1             ; 3178
LD     0 1          ; var somePoint ; 3179
LDF    1308         ;  @sorted_map_assoc ; 3180
AP     3             ; 3181
LDC    0            ; NULL literal ; 3182
LDC 0               ; local var space ; 3183
LDF    3200         ;  @waveFromPointToNearestJunction ; 3184
AP     7             ; 3185
ST     0 5           ; 3186
LD     0 5          ; var allNeighbourJunctionsPaths ; 3187
LDF    10093        ;  @lambda_1040 ; 3188
LDF    69           ;  @map ; 3189
AP     2             ; 3190
RTN                  ; 3191
LD     0 0          ;  <== makeEdgeAccess  [ListCons<Point> p, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 3192
LDF    10117        ;  @lambda_1041 ; 3193
LDF    69           ;  @map ; 3194
AP     2             ; 3195
LD     0 0          ; var p ; 3196
LDF    724          ;  @zip ; 3197
AP     2             ; 3198
RTN                  ; 3199
LD     0 1          ;  <== waveFromPointToNearestJunction  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 3200
LDF    415          ;  @queue_isempty ; 3201
AP     1             ; 3202
SEL    3206 3209     ; 3203
LD     0 6          ; var retval ; 3204
RTN                  ; 3205
LD     0 5          ; branch@3206 ; 3206
ST     0 6           ; 3207
JOIN                 ; 3208
LD     0 0          ; branch@3209 ; 3209
LD     0 1          ; var pointQueue ; 3210
LD     0 2          ; var destinations ; 3211
LD     0 3          ; var destinations2 ; 3212
LD     0 4          ; var visited ; 3213
LD     0 5          ; var acc ; 3214
LDC 0               ; local var space ; 3215
LDC 0               ; local var space ; 3216
LDC 0               ; local var space ; 3217
LDC 0               ; local var space ; 3218
LDC 0               ; local var space ; 3219
LDC 0               ; local var space ; 3220
LDC 0               ; local var space ; 3221
LDC 0               ; local var space ; 3222
LDC 0               ; local var space ; 3223
LDC 0               ; local var space ; 3224
LDC 0               ; local var space ; 3225
LDC 0               ; local var space ; 3226
LDC 0               ; local var space ; 3227
LDF    3245         ;  @waveFromPointToNearestJunction0 ; 3228
AP     19            ; 3229
ST     0 6           ; 3230
JOIN                 ; 3231
LD     0 0          ;  <== getPointKey  [Point pt] (as blk) ; 3232
CAR                 ; generateTupleAccess total=2 pos=0 ; 3233
LDC    300          ; just constant from code ; 3234
MUL                  ; 3235
LD     0 0          ; var pt ; 3236
CDR                 ; generateTupleAccess total=2 pos=1 ; 3237
ADD                  ; 3238
RTN                  ; 3239
LD     0 0          ;  <== addPointKeyAll  [ListCons<Point> in] (as blk) ; 3240
LDF    9702         ;  @lambda_1012 ; 3241
LDF    69           ;  @map ; 3242
AP     2             ; 3243
RTN                  ; 3244
LD     0 1          ;  <== waveFromPointToNearestJunction0  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 3245
LDC 0               ; local var space ; 3246
LDF    492          ;  @queue_dequeue ; 3247
AP     2             ; 3248
ST     0 7           ; 3249
LD     0 7          ; var emptier ; 3250
CAR                 ; generateTupleAccess total=2 pos=0 ; 3251
ST     0 8           ; 3252
LD     0 8          ; var thisRoute ; 3253
CAR                  ; 3254
ST     0 9           ; 3255
LD     0 9          ; var weAreHere ; 3256
CAR                 ; generateTupleAccess total=2 pos=0 ; 3257
LDC    1            ; just constant from code ; 3258
ADD                  ; 3259
LD     0 9          ; var weAreHere ; 3260
CDR                 ; generateTupleAccess total=2 pos=1 ; 3261
CONS                 ; 3262
LD     0 9          ; var weAreHere ; 3263
CAR                 ; generateTupleAccess total=2 pos=0 ; 3264
LDC    1            ; just constant from code ; 3265
SUB                  ; 3266
LD     0 9          ; var weAreHere ; 3267
CDR                 ; generateTupleAccess total=2 pos=1 ; 3268
CONS                 ; 3269
LD     0 9          ; var weAreHere ; 3270
CAR                 ; generateTupleAccess total=2 pos=0 ; 3271
LD     0 9          ; var weAreHere ; 3272
CDR                 ; generateTupleAccess total=2 pos=1 ; 3273
LDC    1            ; just constant from code ; 3274
ADD                  ; 3275
CONS                 ; 3276
LD     0 9          ; var weAreHere ; 3277
CAR                 ; generateTupleAccess total=2 pos=0 ; 3278
LD     0 9          ; var weAreHere ; 3279
CDR                 ; generateTupleAccess total=2 pos=1 ; 3280
LDC    1            ; just constant from code ; 3281
SUB                  ; 3282
CONS                 ; 3283
LDC    0            ; NULL literal ; 3284
CONS                 ; 3285
CONS                 ; 3286
CONS                 ; 3287
CONS                 ; 3288
LDF    3240         ;  @addPointKeyAll ; 3289
AP     1             ; 3290
ST     0 10          ; 3291
LD     0 10         ; var possibleDestinations ; 3292
LDF    10127        ;  @lambda_1042 ; 3293
LDF    537          ;  @filter ; 3294
AP     2             ; 3295
ST     0 11          ; 3296
LD     0 11         ; var exits ; 3297
LDF    10141        ;  @lambda_1043 ; 3298
LDF    537          ;  @filter ; 3299
AP     2             ; 3300
ST     0 12          ; 3301
LD     0 11         ; var exits ; 3302
LDF    10147        ;  @lambda_1044 ; 3303
LDF    537          ;  @filter ; 3304
AP     2             ; 3305
ST     0 13          ; 3306
LDC    0            ; NULL literal ; 3307
LDC    1            ; just constant from code ; 3308
CONS                 ; 3309
LD     0 12         ; var arrivedsList ; 3310
LDF    1317         ;  @sorted_map_assoc_all ; 3311
AP     2             ; 3312
ST     0 14          ; 3313
LD     0 11         ; var exits ; 3314
LDF    10152        ;  @lambda_1045 ; 3315
LDF    537          ;  @filter ; 3316
AP     2             ; 3317
ST     0 15          ; 3318
LD     0 15         ; var continueds ; 3319
LDF    10160        ;  @lambda_1046 ; 3320
LDF    69           ;  @map ; 3321
AP     2             ; 3322
ST     0 16          ; 3323
LD     0 16         ; var exitRoutes ; 3324
LD     0 7          ; var emptier ; 3325
CDR                 ; generateTupleAccess total=2 pos=1 ; 3326
LDF    10165        ;  @lambda_1047 ; 3327
LDF    386          ;  @fold0 ; 3328
AP     3             ; 3329
ST     0 17          ; 3330
LD     0 5          ; var acc ; 3331
LD     0 12         ; var arrivedsList ; 3332
LDF    10170        ;  @lambda_1048 ; 3333
LDF    69           ;  @map ; 3334
AP     2             ; 3335
LDF    184          ;  @concat2_set ; 3336
AP     2             ; 3337
ST     0 18          ; 3338
LD     0 12         ; var arrivedsList ; 3339
LDF    532          ;  @length ; 3340
AP     1             ; 3341
LD     0 13         ; var arrivedsList2 ; 3342
LDF    532          ;  @length ; 3343
AP     1             ; 3344
CEQ                  ; 3345
LDC    1            ; for negation ; 3346
SUB                  ; 3347
SEL    3364 3383     ; 3348
LD     0 0          ; var map ; 3349
LD     0 17         ; var filledQueue ; 3350
LD     0 2          ; var destinations ; 3351
LD     0 3          ; var destinations2 ; 3352
LD     0 4          ; var visited ; 3353
LD     0 11         ; var exits ; 3354
LDF    1317         ;  @sorted_map_assoc_all ; 3355
AP     2             ; 3356
LD     0 18         ; var newacc ; 3357
LDC 0               ; local var space ; 3358
LDF    3200         ;  @waveFromPointToNearestJunction ; 3359
AP     7             ; 3360
ST     0 6           ; 3361
LD     0 6          ; var retval ; 3362
RTN                  ; 3363
LDC    5000000      ; branch@3364 ; 3364
DBUG                 ; 3365
LD     0 2          ; var destinations ; 3366
DBUG                 ; 3367
LD     0 3          ; var destinations2 ; 3368
DBUG                 ; 3369
LD     0 12         ; var arrivedsList ; 3370
DBUG                 ; 3371
LD     0 13         ; var arrivedsList2 ; 3372
DBUG                 ; 3373
LD     0 11         ; var exits ; 3374
DBUG                 ; 3375
BRK                  ; 3376
LD     0 11         ; var exits ; 3377
LDF    10263        ;  @lambda_1057 ; 3378
LDF    537          ;  @filter ; 3379
AP     2             ; 3380
DBUG                 ; 3381
JOIN                 ; 3382
JOIN                ; branch@3383 ; 3383
LD     0 0          ;  <== findEdgesForPoint  [AIState state, Point pos] (as blk) ; 3384
CAR                 ; generateTupleAccess total=4 pos=0 ; 3385
CDR                 ; generateTupleAccess total=6 pos=2 ; 3386
CDR                  ; 3387
CAR                  ; 3388
LDF    9947         ;  @lambda_1026 ; 3389
LDF    537          ;  @filter ; 3390
AP     2             ; 3391
RTN                  ; 3392
LD     0 1          ;  <== pointInEdge  [Point pos, ParsedEdge e] (as blk) ; 3393
CDR                 ; generateTupleAccess total=7 pos=2 ; 3394
CDR                  ; 3395
CAR                  ; 3396
LDF    10175        ;  @lambda_1049 ; 3397
LDF    545          ;  @any ; 3398
AP     2             ; 3399
RTN                  ; 3400
LDC    4000001      ;  <== parseMap  [ListCons<ListCons<Integer>> m] (as blk) ; 3401
DBUG                 ; 3402
LD     0 0          ; var m ; 3403
LDF    9668         ;  @lambda_1007 ; 3404
LDF    69           ;  @map ; 3405
AP     2             ; 3406
ST     0 1           ; 3407
LDC    4000002      ; just constant from code ; 3408
DBUG                 ; 3409
LDF    9671         ;  @lambda_1008 ; 3410
LD     0 0          ; var m ; 3411
LD     0 1          ; var accessors ; 3412
LDF    660          ;  @zip_with ; 3413
AP     3             ; 3414
ST     0 2           ; 3415
LDC    4000003      ; just constant from code ; 3416
DBUG                 ; 3417
LD     0 2          ; var mapAccessors ; 3418
LDF    9675         ;  @lambda_1009 ; 3419
LDF    69           ;  @map ; 3420
AP     2             ; 3421
ST     0 3           ; 3422
LDC    4000004      ; just constant from code ; 3423
DBUG                 ; 3424
LD     0 0          ; var m ; 3425
LDC    0            ; just constant from code ; 3426
LDF    9682         ;  @lambda_1010 ; 3427
LDF    86           ;  @mapi ; 3428
AP     3             ; 3429
ST     0 4           ; 3430
LDC    4000005      ; just constant from code ; 3431
DBUG                 ; 3432
LD     0 4          ; var toConcat ; 3433
LDF    118          ;  @concat ; 3434
AP     1             ; 3435
ST     0 5           ; 3436
LD     0 5          ; var walkableList ; 3437
LDF    9690         ;  @lambda_1011 ; 3438
LDF    537          ;  @filter ; 3439
AP     2             ; 3440
ST     0 6           ; 3441
LDC    4000006      ; just constant from code ; 3442
DBUG                 ; 3443
LDC    0            ; NULL literal ; 3444
LDC    0            ; just constant from code ; 3445
CONS                 ; 3446
LD     0 5          ; var walkableList ; 3447
LDF    3240         ;  @addPointKeyAll ; 3448
AP     1             ; 3449
LDF    1317         ;  @sorted_map_assoc_all ; 3450
AP     2             ; 3451
ST     0 7           ; 3452
LDC    4000007      ; just constant from code ; 3453
DBUG                 ; 3454
LDC    0            ; NULL literal ; 3455
LDC    0            ; just constant from code ; 3456
CONS                 ; 3457
LD     0 6          ; var junctionsList ; 3458
LDF    3240         ;  @addPointKeyAll ; 3459
AP     1             ; 3460
LDF    1317         ;  @sorted_map_assoc_all ; 3461
AP     2             ; 3462
ST     0 8           ; 3463
LDC    4000008      ; just constant from code ; 3464
DBUG                 ; 3465
LD     0 6          ; var junctionsList ; 3466
LDF    9708         ;  @lambda_1013 ; 3467
LDF    69           ;  @map ; 3468
AP     2             ; 3469
LDF    118          ;  @concat ; 3470
AP     1             ; 3471
ST     0 9           ; 3472
LDC    4000009      ; just constant from code ; 3473
DBUG                 ; 3474
LD     0 9          ; var allParsedEdges ; 3475
LDC    0            ; just constant from code ; 3476
LDF    9717         ;  @lambda_1014 ; 3477
LDF    86           ;  @mapi ; 3478
AP     3             ; 3479
ST     0 10          ; 3480
LDC    4000010      ; just constant from code ; 3481
DBUG                 ; 3482
LD     0 10         ; var allParsedEdges2 ; 3483
LDC    0            ; just constant from code ; 3484
LDF    9746         ;  @lambda_1015 ; 3485
LDF    86           ;  @mapi ; 3486
AP     3             ; 3487
ST     0 11          ; 3488
LDC    4000011      ; just constant from code ; 3489
DBUG                 ; 3490
LD     0 7          ; var walkable ; 3491
LD     0 8          ; var junctions ; 3492
LD     0 11         ; var allParsedEdges3 ; 3493
LDC    0            ; NULL literal ; 3494
LDC    0            ; NULL literal ; 3495
LD     0 1          ; var accessors ; 3496
CONS                 ; 3497
CONS                 ; 3498
CONS                 ; 3499
CONS                 ; 3500
CONS                 ; 3501
RTN                  ; 3502
LD     0 2          ;  <== findEdge  [Point a, Point b, ListCons<ParsedEdge> edges] (as blk) ; 3503
LDF    10192        ;  @lambda_1050 ; 3504
LDF    537          ;  @filter ; 3505
AP     2             ; 3506
CAR                  ; 3507
RTN                  ; 3508
LD     0 0          ;  <== edgeNumber  [ParsedEdge edge] (as blk) ; 3509
CDR                 ; generateTupleAccess total=7 pos=5 ; 3510
CDR                  ; 3511
CDR                  ; 3512
CDR                  ; 3513
CDR                  ; 3514
CAR                  ; 3515
RTN                  ; 3516
LD     0 0          ;  <== my_cat_maybes  [ListCons<Maybe<Point>> maybeListCons] (as blk) ; 3517
LDC 0               ; local var space ; 3518
LDC 0               ; local var space ; 3519
LDF    107          ;  @cat_maybes ; 3520
AP     3             ; 3521
ST     0 1           ; 3522
LD     0 1          ; var rv ; 3523
RTN                  ; 3524
LD     0 0          ;  <== collectWalkableXY  [ListCons<Integer> row, Integer rowy] (as blk) ; 3525
LDC    0            ; just constant from code ; 3526
LDF    10205        ;  @lambda_1051 ; 3527
LDF    86           ;  @mapi ; 3528
AP     3             ; 3529
RTN                  ; 3530
LD     0 0          ;  <== parseStaticMap  [ListCons<ListCons<Integer>> map] (as blk) ; 3531
LDC 0               ; local var space ; 3532
LDC 0               ; local var space ; 3533
LDC 0               ; local var space ; 3534
LDC 0               ; local var space ; 3535
LDC 0               ; local var space ; 3536
LDC 0               ; local var space ; 3537
LDC 0               ; local var space ; 3538
LDC 0               ; local var space ; 3539
LDC 0               ; local var space ; 3540
LDC 0               ; local var space ; 3541
LDC 0               ; local var space ; 3542
LDF    3401         ;  @parseMap ; 3543
AP     12            ; 3544
RTN                  ; 3545
LDF    403          ;  <== test2  [] (as blk), ALSO: @queue_new ; 3546
AP     0             ; 3547
LDC    1            ; just constant from code ; 3548
LDF    407          ;  @queue_enqueue ; 3549
AP     2             ; 3550
LDC    2            ; just constant from code ; 3551
LDF    407          ;  @queue_enqueue ; 3552
AP     2             ; 3553
LDC    3            ; just constant from code ; 3554
LDF    407          ;  @queue_enqueue ; 3555
AP     2             ; 3556
ST     0 0           ; 3557
LD     0 0          ; var queue ; 3558
LDC 0               ; local var space ; 3559
LDF    492          ;  @queue_dequeue ; 3560
AP     2             ; 3561
ST     0 1           ; 3562
LD     0 1          ; var q1 ; 3563
CDR                 ; generateTupleAccess total=2 pos=1 ; 3564
LDC 0               ; local var space ; 3565
LDF    492          ;  @queue_dequeue ; 3566
AP     2             ; 3567
ST     0 1           ; 3568
LD     0 1          ; var q1 ; 3569
CDR                 ; generateTupleAccess total=2 pos=1 ; 3570
LDC 0               ; local var space ; 3571
LDF    492          ;  @queue_dequeue ; 3572
AP     2             ; 3573
ST     0 1           ; 3574
LDC    1            ; just constant from code ; 3575
RTN                  ; 3576
LDC    0            ;  <== test3  [] (as blk) ; 3577
LDC    0            ; just constant from code ; 3578
CONS                 ; 3579
ST     0 0           ; 3580
LD     0 0          ; var map ; 3581
LDC    30           ; just constant from code ; 3582
LDC    31           ; just constant from code ; 3583
LDF    1308         ;  @sorted_map_assoc ; 3584
AP     3             ; 3585
LDC    20           ; just constant from code ; 3586
LDC    21           ; just constant from code ; 3587
LDF    1308         ;  @sorted_map_assoc ; 3588
AP     3             ; 3589
LDC    10           ; just constant from code ; 3590
LDC    11           ; just constant from code ; 3591
LDF    1308         ;  @sorted_map_assoc ; 3592
AP     3             ; 3593
ST     0 1           ; 3594
LD     0 1          ; var new_map2 ; 3595
LDC    20           ; just constant from code ; 3596
LDC    33           ; just constant from code ; 3597
LDF    1308         ;  @sorted_map_assoc ; 3598
AP     3             ; 3599
LDC    20           ; just constant from code ; 3600
LDC    88           ; just constant from code ; 3601
LDF    1292         ;  @sorted_map_get ; 3602
AP     3             ; 3603
RTN                  ; 3604
LDC    0            ;  <== getMapItem  [ListCons<ListCons<Integer>> map, int y, int x] (as blk) ; 3605
LD     0 1          ; var y ; 3606
CGT                  ; 3607
LDC    0            ; just constant from code ; 3608
LD     0 2          ; var x ; 3609
CGT                  ; 3610
ADD                  ; 3611
SEL    3614 3616    ; IF? 58 ; 3612
RTN                  ; 3613
LDC    0            ; THEN: 58 ; 3614
JOIN                 ; 3615
LD     0 0          ; ELSE: 58 ; 3616
LD     0 1          ; var y ; 3617
LDC    0            ; just constant from code ; 3618
LDF    469          ;  @list_item_def ; 3619
AP     3             ; 3620
LD     0 2          ; var x ; 3621
LDC    0            ; just constant from code ; 3622
LDF    469          ;  @list_item_def ; 3623
AP     3             ; 3624
JOIN                 ; 3625
LDC 0               ; generated from native: array_256 ; 3626
LDC 0                ; 3627
LDC 0                ; 3628
LDC 0                ; 3629
LDC 0                ; 3630
LDC 0                ; 3631
LDC 0                ; 3632
LDC 0                ; 3633
LDC 0                ; 3634
LDC 0                ; 3635
LDC 0                ; 3636
LDC 0                ; 3637
LDC 0                ; 3638
LDC 0                ; 3639
LDC 0                ; 3640
LDC 0                ; 3641
LDC 0                ; 3642
LDC 0                ; 3643
LDC 0                ; 3644
LDC 0                ; 3645
LDC 0                ; 3646
LDC 0                ; 3647
LDC 0                ; 3648
LDC 0                ; 3649
LDC 0                ; 3650
LDC 0                ; 3651
LDC 0                ; 3652
LDC 0                ; 3653
LDC 0                ; 3654
LDC 0                ; 3655
LDC 0                ; 3656
LDC 0                ; 3657
LDC 0                ; 3658
LDC 0                ; 3659
LDC 0                ; 3660
LDC 0                ; 3661
LDC 0                ; 3662
LDC 0                ; 3663
LDC 0                ; 3664
LDC 0                ; 3665
LDC 0                ; 3666
LDC 0                ; 3667
LDC 0                ; 3668
LDC 0                ; 3669
LDC 0                ; 3670
LDC 0                ; 3671
LDC 0                ; 3672
LDC 0                ; 3673
LDC 0                ; 3674
LDC 0                ; 3675
LDC 0                ; 3676
LDC 0                ; 3677
LDC 0                ; 3678
LDC 0                ; 3679
LDC 0                ; 3680
LDC 0                ; 3681
LDC 0                ; 3682
LDC 0                ; 3683
LDC 0                ; 3684
LDC 0                ; 3685
LDC 0                ; 3686
LDC 0                ; 3687
LDC 0                ; 3688
LDC 0                ; 3689
LDC 0                ; 3690
LDC 0                ; 3691
LDC 0                ; 3692
LDC 0                ; 3693
LDC 0                ; 3694
LDC 0                ; 3695
LDC 0                ; 3696
LDC 0                ; 3697
LDC 0                ; 3698
LDC 0                ; 3699
LDC 0                ; 3700
LDC 0                ; 3701
LDC 0                ; 3702
LDC 0                ; 3703
LDC 0                ; 3704
LDC 0                ; 3705
LDC 0                ; 3706
LDC 0                ; 3707
LDC 0                ; 3708
LDC 0                ; 3709
LDC 0                ; 3710
LDC 0                ; 3711
LDC 0                ; 3712
LDC 0                ; 3713
LDC 0                ; 3714
LDC 0                ; 3715
LDC 0                ; 3716
LDC 0                ; 3717
LDC 0                ; 3718
LDC 0                ; 3719
LDC 0                ; 3720
LDC 0                ; 3721
LDC 0                ; 3722
LDC 0                ; 3723
LDC 0                ; 3724
LDC 0                ; 3725
LDC 0                ; 3726
LDC 0                ; 3727
LDC 0                ; 3728
LDC 0                ; 3729
LDC 0                ; 3730
LDC 0                ; 3731
LDC 0                ; 3732
LDC 0                ; 3733
LDC 0                ; 3734
LDC 0                ; 3735
LDC 0                ; 3736
LDC 0                ; 3737
LDC 0                ; 3738
LDC 0                ; 3739
LDC 0                ; 3740
LDC 0                ; 3741
LDC 0                ; 3742
LDC 0                ; 3743
LDC 0                ; 3744
LDC 0                ; 3745
LDC 0                ; 3746
LDC 0                ; 3747
LDC 0                ; 3748
LDC 0                ; 3749
LDC 0                ; 3750
LDC 0                ; 3751
LDC 0                ; 3752
LDC 0                ; 3753
LDC 0                ; 3754
LDC 0                ; 3755
LDC 0                ; 3756
LDC 0                ; 3757
LDC 0                ; 3758
LDC 0                ; 3759
LDC 0                ; 3760
LDC 0                ; 3761
LDC 0                ; 3762
LDC 0                ; 3763
LDC 0                ; 3764
LDC 0                ; 3765
LDC 0                ; 3766
LDC 0                ; 3767
LDC 0                ; 3768
LDC 0                ; 3769
LDC 0                ; 3770
LDC 0                ; 3771
LDC 0                ; 3772
LDC 0                ; 3773
LDC 0                ; 3774
LDC 0                ; 3775
LDC 0                ; 3776
LDC 0                ; 3777
LDC 0                ; 3778
LDC 0                ; 3779
LDC 0                ; 3780
LDC 0                ; 3781
LDC 0                ; 3782
LDC 0                ; 3783
LDC 0                ; 3784
LDC 0                ; 3785
LDC 0                ; 3786
LDC 0                ; 3787
LDC 0                ; 3788
LDC 0                ; 3789
LDC 0                ; 3790
LDC 0                ; 3791
LDC 0                ; 3792
LDC 0                ; 3793
LDC 0                ; 3794
LDC 0                ; 3795
LDC 0                ; 3796
LDC 0                ; 3797
LDC 0                ; 3798
LDC 0                ; 3799
LDC 0                ; 3800
LDC 0                ; 3801
LDC 0                ; 3802
LDC 0                ; 3803
LDC 0                ; 3804
LDC 0                ; 3805
LDC 0                ; 3806
LDC 0                ; 3807
LDC 0                ; 3808
LDC 0                ; 3809
LDC 0                ; 3810
LDC 0                ; 3811
LDC 0                ; 3812
LDC 0                ; 3813
LDC 0                ; 3814
LDC 0                ; 3815
LDC 0                ; 3816
LDC 0                ; 3817
LDC 0                ; 3818
LDC 0                ; 3819
LDC 0                ; 3820
LDC 0                ; 3821
LDC 0                ; 3822
LDC 0                ; 3823
LDC 0                ; 3824
LDC 0                ; 3825
LDC 0                ; 3826
LDC 0                ; 3827
LDC 0                ; 3828
LDC 0                ; 3829
LDC 0                ; 3830
LDC 0                ; 3831
LDC 0                ; 3832
LDC 0                ; 3833
LDC 0                ; 3834
LDC 0                ; 3835
LDC 0                ; 3836
LDC 0                ; 3837
LDC 0                ; 3838
LDC 0                ; 3839
LDC 0                ; 3840
LDC 0                ; 3841
LDC 0                ; 3842
LDC 0                ; 3843
LDC 0                ; 3844
LDC 0                ; 3845
LDC 0                ; 3846
LDC 0                ; 3847
LDC 0                ; 3848
LDC 0                ; 3849
LDC 0                ; 3850
LDC 0                ; 3851
LDC 0                ; 3852
LDC 0                ; 3853
LDC 0                ; 3854
LDC 0                ; 3855
LDC 0                ; 3856
LDC 0                ; 3857
LDC 0                ; 3858
LDC 0                ; 3859
LDC 0                ; 3860
LDC 0                ; 3861
LDC 0                ; 3862
LDC 0                ; 3863
LDC 0                ; 3864
LDC 0                ; 3865
LDC 0                ; 3866
LDC 0                ; 3867
LDC 0                ; 3868
LDC 0                ; 3869
LDC 0                ; 3870
LDC 0                ; 3871
LDC 0                ; 3872
LDC 0                ; 3873
LDC 0                ; 3874
LDC 0                ; 3875
LDC 0                ; 3876
LDC 0                ; 3877
LDC 0                ; 3878
LDC 0                ; 3879
LDC 0                ; 3880
LDC 0                ; 3881
LDF 3885             ; 3882
AP 256               ; 3883
RTN                  ; 3884
LDF  3887            ; 3885
RTN                  ; 3886
LD  0   0            ; 3887
LDC 100              ; 3888
CEQ                  ; 3889
TSEL    3891 4917    ; 3890
LD  0   1            ; 3891
LDC 0                ; 3892
CEQ                  ; 3893
TSEL    5945 3895    ; 3894
LD  0   1            ; 3895
LDC 1                ; 3896
CEQ                  ; 3897
TSEL    5955 3899    ; 3898
LD  0   1            ; 3899
LDC 2                ; 3900
CEQ                  ; 3901
TSEL    5965 3903    ; 3902
LD  0   1            ; 3903
LDC 3                ; 3904
CEQ                  ; 3905
TSEL    5975 3907    ; 3906
LD  0   1            ; 3907
LDC 4                ; 3908
CEQ                  ; 3909
TSEL    5985 3911    ; 3910
LD  0   1            ; 3911
LDC 5                ; 3912
CEQ                  ; 3913
TSEL    5995 3915    ; 3914
LD  0   1            ; 3915
LDC 6                ; 3916
CEQ                  ; 3917
TSEL    6005 3919    ; 3918
LD  0   1            ; 3919
LDC 7                ; 3920
CEQ                  ; 3921
TSEL    6015 3923    ; 3922
LD  0   1            ; 3923
LDC 8                ; 3924
CEQ                  ; 3925
TSEL    6025 3927    ; 3926
LD  0   1            ; 3927
LDC 9                ; 3928
CEQ                  ; 3929
TSEL    6035 3931    ; 3930
LD  0   1            ; 3931
LDC 10               ; 3932
CEQ                  ; 3933
TSEL    6045 3935    ; 3934
LD  0   1            ; 3935
LDC 11               ; 3936
CEQ                  ; 3937
TSEL    6055 3939    ; 3938
LD  0   1            ; 3939
LDC 12               ; 3940
CEQ                  ; 3941
TSEL    6065 3943    ; 3942
LD  0   1            ; 3943
LDC 13               ; 3944
CEQ                  ; 3945
TSEL    6075 3947    ; 3946
LD  0   1            ; 3947
LDC 14               ; 3948
CEQ                  ; 3949
TSEL    6085 3951    ; 3950
LD  0   1            ; 3951
LDC 15               ; 3952
CEQ                  ; 3953
TSEL    6095 3955    ; 3954
LD  0   1            ; 3955
LDC 16               ; 3956
CEQ                  ; 3957
TSEL    6105 3959    ; 3958
LD  0   1            ; 3959
LDC 17               ; 3960
CEQ                  ; 3961
TSEL    6115 3963    ; 3962
LD  0   1            ; 3963
LDC 18               ; 3964
CEQ                  ; 3965
TSEL    6125 3967    ; 3966
LD  0   1            ; 3967
LDC 19               ; 3968
CEQ                  ; 3969
TSEL    6135 3971    ; 3970
LD  0   1            ; 3971
LDC 20               ; 3972
CEQ                  ; 3973
TSEL    6145 3975    ; 3974
LD  0   1            ; 3975
LDC 21               ; 3976
CEQ                  ; 3977
TSEL    6155 3979    ; 3978
LD  0   1            ; 3979
LDC 22               ; 3980
CEQ                  ; 3981
TSEL    6165 3983    ; 3982
LD  0   1            ; 3983
LDC 23               ; 3984
CEQ                  ; 3985
TSEL    6175 3987    ; 3986
LD  0   1            ; 3987
LDC 24               ; 3988
CEQ                  ; 3989
TSEL    6185 3991    ; 3990
LD  0   1            ; 3991
LDC 25               ; 3992
CEQ                  ; 3993
TSEL    6195 3995    ; 3994
LD  0   1            ; 3995
LDC 26               ; 3996
CEQ                  ; 3997
TSEL    6205 3999    ; 3998
LD  0   1            ; 3999
LDC 27               ; 4000
CEQ                  ; 4001
TSEL    6215 4003    ; 4002
LD  0   1            ; 4003
LDC 28               ; 4004
CEQ                  ; 4005
TSEL    6225 4007    ; 4006
LD  0   1            ; 4007
LDC 29               ; 4008
CEQ                  ; 4009
TSEL    6235 4011    ; 4010
LD  0   1            ; 4011
LDC 30               ; 4012
CEQ                  ; 4013
TSEL    6245 4015    ; 4014
LD  0   1            ; 4015
LDC 31               ; 4016
CEQ                  ; 4017
TSEL    6255 4019    ; 4018
LD  0   1            ; 4019
LDC 32               ; 4020
CEQ                  ; 4021
TSEL    6265 4023    ; 4022
LD  0   1            ; 4023
LDC 33               ; 4024
CEQ                  ; 4025
TSEL    6275 4027    ; 4026
LD  0   1            ; 4027
LDC 34               ; 4028
CEQ                  ; 4029
TSEL    6285 4031    ; 4030
LD  0   1            ; 4031
LDC 35               ; 4032
CEQ                  ; 4033
TSEL    6295 4035    ; 4034
LD  0   1            ; 4035
LDC 36               ; 4036
CEQ                  ; 4037
TSEL    6305 4039    ; 4038
LD  0   1            ; 4039
LDC 37               ; 4040
CEQ                  ; 4041
TSEL    6315 4043    ; 4042
LD  0   1            ; 4043
LDC 38               ; 4044
CEQ                  ; 4045
TSEL    6325 4047    ; 4046
LD  0   1            ; 4047
LDC 39               ; 4048
CEQ                  ; 4049
TSEL    6335 4051    ; 4050
LD  0   1            ; 4051
LDC 40               ; 4052
CEQ                  ; 4053
TSEL    6345 4055    ; 4054
LD  0   1            ; 4055
LDC 41               ; 4056
CEQ                  ; 4057
TSEL    6355 4059    ; 4058
LD  0   1            ; 4059
LDC 42               ; 4060
CEQ                  ; 4061
TSEL    6365 4063    ; 4062
LD  0   1            ; 4063
LDC 43               ; 4064
CEQ                  ; 4065
TSEL    6375 4067    ; 4066
LD  0   1            ; 4067
LDC 44               ; 4068
CEQ                  ; 4069
TSEL    6385 4071    ; 4070
LD  0   1            ; 4071
LDC 45               ; 4072
CEQ                  ; 4073
TSEL    6395 4075    ; 4074
LD  0   1            ; 4075
LDC 46               ; 4076
CEQ                  ; 4077
TSEL    6405 4079    ; 4078
LD  0   1            ; 4079
LDC 47               ; 4080
CEQ                  ; 4081
TSEL    6415 4083    ; 4082
LD  0   1            ; 4083
LDC 48               ; 4084
CEQ                  ; 4085
TSEL    6425 4087    ; 4086
LD  0   1            ; 4087
LDC 49               ; 4088
CEQ                  ; 4089
TSEL    6435 4091    ; 4090
LD  0   1            ; 4091
LDC 50               ; 4092
CEQ                  ; 4093
TSEL    6445 4095    ; 4094
LD  0   1            ; 4095
LDC 51               ; 4096
CEQ                  ; 4097
TSEL    6455 4099    ; 4098
LD  0   1            ; 4099
LDC 52               ; 4100
CEQ                  ; 4101
TSEL    6465 4103    ; 4102
LD  0   1            ; 4103
LDC 53               ; 4104
CEQ                  ; 4105
TSEL    6475 4107    ; 4106
LD  0   1            ; 4107
LDC 54               ; 4108
CEQ                  ; 4109
TSEL    6485 4111    ; 4110
LD  0   1            ; 4111
LDC 55               ; 4112
CEQ                  ; 4113
TSEL    6495 4115    ; 4114
LD  0   1            ; 4115
LDC 56               ; 4116
CEQ                  ; 4117
TSEL    6505 4119    ; 4118
LD  0   1            ; 4119
LDC 57               ; 4120
CEQ                  ; 4121
TSEL    6515 4123    ; 4122
LD  0   1            ; 4123
LDC 58               ; 4124
CEQ                  ; 4125
TSEL    6525 4127    ; 4126
LD  0   1            ; 4127
LDC 59               ; 4128
CEQ                  ; 4129
TSEL    6535 4131    ; 4130
LD  0   1            ; 4131
LDC 60               ; 4132
CEQ                  ; 4133
TSEL    6545 4135    ; 4134
LD  0   1            ; 4135
LDC 61               ; 4136
CEQ                  ; 4137
TSEL    6555 4139    ; 4138
LD  0   1            ; 4139
LDC 62               ; 4140
CEQ                  ; 4141
TSEL    6565 4143    ; 4142
LD  0   1            ; 4143
LDC 63               ; 4144
CEQ                  ; 4145
TSEL    6575 4147    ; 4146
LD  0   1            ; 4147
LDC 64               ; 4148
CEQ                  ; 4149
TSEL    6585 4151    ; 4150
LD  0   1            ; 4151
LDC 65               ; 4152
CEQ                  ; 4153
TSEL    6595 4155    ; 4154
LD  0   1            ; 4155
LDC 66               ; 4156
CEQ                  ; 4157
TSEL    6605 4159    ; 4158
LD  0   1            ; 4159
LDC 67               ; 4160
CEQ                  ; 4161
TSEL    6615 4163    ; 4162
LD  0   1            ; 4163
LDC 68               ; 4164
CEQ                  ; 4165
TSEL    6625 4167    ; 4166
LD  0   1            ; 4167
LDC 69               ; 4168
CEQ                  ; 4169
TSEL    6635 4171    ; 4170
LD  0   1            ; 4171
LDC 70               ; 4172
CEQ                  ; 4173
TSEL    6645 4175    ; 4174
LD  0   1            ; 4175
LDC 71               ; 4176
CEQ                  ; 4177
TSEL    6655 4179    ; 4178
LD  0   1            ; 4179
LDC 72               ; 4180
CEQ                  ; 4181
TSEL    6665 4183    ; 4182
LD  0   1            ; 4183
LDC 73               ; 4184
CEQ                  ; 4185
TSEL    6675 4187    ; 4186
LD  0   1            ; 4187
LDC 74               ; 4188
CEQ                  ; 4189
TSEL    6685 4191    ; 4190
LD  0   1            ; 4191
LDC 75               ; 4192
CEQ                  ; 4193
TSEL    6695 4195    ; 4194
LD  0   1            ; 4195
LDC 76               ; 4196
CEQ                  ; 4197
TSEL    6705 4199    ; 4198
LD  0   1            ; 4199
LDC 77               ; 4200
CEQ                  ; 4201
TSEL    6715 4203    ; 4202
LD  0   1            ; 4203
LDC 78               ; 4204
CEQ                  ; 4205
TSEL    6725 4207    ; 4206
LD  0   1            ; 4207
LDC 79               ; 4208
CEQ                  ; 4209
TSEL    6735 4211    ; 4210
LD  0   1            ; 4211
LDC 80               ; 4212
CEQ                  ; 4213
TSEL    6745 4215    ; 4214
LD  0   1            ; 4215
LDC 81               ; 4216
CEQ                  ; 4217
TSEL    6755 4219    ; 4218
LD  0   1            ; 4219
LDC 82               ; 4220
CEQ                  ; 4221
TSEL    6765 4223    ; 4222
LD  0   1            ; 4223
LDC 83               ; 4224
CEQ                  ; 4225
TSEL    6775 4227    ; 4226
LD  0   1            ; 4227
LDC 84               ; 4228
CEQ                  ; 4229
TSEL    6785 4231    ; 4230
LD  0   1            ; 4231
LDC 85               ; 4232
CEQ                  ; 4233
TSEL    6795 4235    ; 4234
LD  0   1            ; 4235
LDC 86               ; 4236
CEQ                  ; 4237
TSEL    6805 4239    ; 4238
LD  0   1            ; 4239
LDC 87               ; 4240
CEQ                  ; 4241
TSEL    6815 4243    ; 4242
LD  0   1            ; 4243
LDC 88               ; 4244
CEQ                  ; 4245
TSEL    6825 4247    ; 4246
LD  0   1            ; 4247
LDC 89               ; 4248
CEQ                  ; 4249
TSEL    6835 4251    ; 4250
LD  0   1            ; 4251
LDC 90               ; 4252
CEQ                  ; 4253
TSEL    6845 4255    ; 4254
LD  0   1            ; 4255
LDC 91               ; 4256
CEQ                  ; 4257
TSEL    6855 4259    ; 4258
LD  0   1            ; 4259
LDC 92               ; 4260
CEQ                  ; 4261
TSEL    6865 4263    ; 4262
LD  0   1            ; 4263
LDC 93               ; 4264
CEQ                  ; 4265
TSEL    6875 4267    ; 4266
LD  0   1            ; 4267
LDC 94               ; 4268
CEQ                  ; 4269
TSEL    6885 4271    ; 4270
LD  0   1            ; 4271
LDC 95               ; 4272
CEQ                  ; 4273
TSEL    6895 4275    ; 4274
LD  0   1            ; 4275
LDC 96               ; 4276
CEQ                  ; 4277
TSEL    6905 4279    ; 4278
LD  0   1            ; 4279
LDC 97               ; 4280
CEQ                  ; 4281
TSEL    6915 4283    ; 4282
LD  0   1            ; 4283
LDC 98               ; 4284
CEQ                  ; 4285
TSEL    6925 4287    ; 4286
LD  0   1            ; 4287
LDC 99               ; 4288
CEQ                  ; 4289
TSEL    6935 4291    ; 4290
LD  0   1            ; 4291
LDC 100              ; 4292
CEQ                  ; 4293
TSEL    6945 4295    ; 4294
LD  0   1            ; 4295
LDC 101              ; 4296
CEQ                  ; 4297
TSEL    6955 4299    ; 4298
LD  0   1            ; 4299
LDC 102              ; 4300
CEQ                  ; 4301
TSEL    6965 4303    ; 4302
LD  0   1            ; 4303
LDC 103              ; 4304
CEQ                  ; 4305
TSEL    6975 4307    ; 4306
LD  0   1            ; 4307
LDC 104              ; 4308
CEQ                  ; 4309
TSEL    6985 4311    ; 4310
LD  0   1            ; 4311
LDC 105              ; 4312
CEQ                  ; 4313
TSEL    6995 4315    ; 4314
LD  0   1            ; 4315
LDC 106              ; 4316
CEQ                  ; 4317
TSEL    7005 4319    ; 4318
LD  0   1            ; 4319
LDC 107              ; 4320
CEQ                  ; 4321
TSEL    7015 4323    ; 4322
LD  0   1            ; 4323
LDC 108              ; 4324
CEQ                  ; 4325
TSEL    7025 4327    ; 4326
LD  0   1            ; 4327
LDC 109              ; 4328
CEQ                  ; 4329
TSEL    7035 4331    ; 4330
LD  0   1            ; 4331
LDC 110              ; 4332
CEQ                  ; 4333
TSEL    7045 4335    ; 4334
LD  0   1            ; 4335
LDC 111              ; 4336
CEQ                  ; 4337
TSEL    7055 4339    ; 4338
LD  0   1            ; 4339
LDC 112              ; 4340
CEQ                  ; 4341
TSEL    7065 4343    ; 4342
LD  0   1            ; 4343
LDC 113              ; 4344
CEQ                  ; 4345
TSEL    7075 4347    ; 4346
LD  0   1            ; 4347
LDC 114              ; 4348
CEQ                  ; 4349
TSEL    7085 4351    ; 4350
LD  0   1            ; 4351
LDC 115              ; 4352
CEQ                  ; 4353
TSEL    7095 4355    ; 4354
LD  0   1            ; 4355
LDC 116              ; 4356
CEQ                  ; 4357
TSEL    7105 4359    ; 4358
LD  0   1            ; 4359
LDC 117              ; 4360
CEQ                  ; 4361
TSEL    7115 4363    ; 4362
LD  0   1            ; 4363
LDC 118              ; 4364
CEQ                  ; 4365
TSEL    7125 4367    ; 4366
LD  0   1            ; 4367
LDC 119              ; 4368
CEQ                  ; 4369
TSEL    7135 4371    ; 4370
LD  0   1            ; 4371
LDC 120              ; 4372
CEQ                  ; 4373
TSEL    7145 4375    ; 4374
LD  0   1            ; 4375
LDC 121              ; 4376
CEQ                  ; 4377
TSEL    7155 4379    ; 4378
LD  0   1            ; 4379
LDC 122              ; 4380
CEQ                  ; 4381
TSEL    7165 4383    ; 4382
LD  0   1            ; 4383
LDC 123              ; 4384
CEQ                  ; 4385
TSEL    7175 4387    ; 4386
LD  0   1            ; 4387
LDC 124              ; 4388
CEQ                  ; 4389
TSEL    7185 4391    ; 4390
LD  0   1            ; 4391
LDC 125              ; 4392
CEQ                  ; 4393
TSEL    7195 4395    ; 4394
LD  0   1            ; 4395
LDC 126              ; 4396
CEQ                  ; 4397
TSEL    7205 4399    ; 4398
LD  0   1            ; 4399
LDC 127              ; 4400
CEQ                  ; 4401
TSEL    7215 4403    ; 4402
LD  0   1            ; 4403
LDC 128              ; 4404
CEQ                  ; 4405
TSEL    7225 4407    ; 4406
LD  0   1            ; 4407
LDC 129              ; 4408
CEQ                  ; 4409
TSEL    7235 4411    ; 4410
LD  0   1            ; 4411
LDC 130              ; 4412
CEQ                  ; 4413
TSEL    7245 4415    ; 4414
LD  0   1            ; 4415
LDC 131              ; 4416
CEQ                  ; 4417
TSEL    7255 4419    ; 4418
LD  0   1            ; 4419
LDC 132              ; 4420
CEQ                  ; 4421
TSEL    7265 4423    ; 4422
LD  0   1            ; 4423
LDC 133              ; 4424
CEQ                  ; 4425
TSEL    7275 4427    ; 4426
LD  0   1            ; 4427
LDC 134              ; 4428
CEQ                  ; 4429
TSEL    7285 4431    ; 4430
LD  0   1            ; 4431
LDC 135              ; 4432
CEQ                  ; 4433
TSEL    7295 4435    ; 4434
LD  0   1            ; 4435
LDC 136              ; 4436
CEQ                  ; 4437
TSEL    7305 4439    ; 4438
LD  0   1            ; 4439
LDC 137              ; 4440
CEQ                  ; 4441
TSEL    7315 4443    ; 4442
LD  0   1            ; 4443
LDC 138              ; 4444
CEQ                  ; 4445
TSEL    7325 4447    ; 4446
LD  0   1            ; 4447
LDC 139              ; 4448
CEQ                  ; 4449
TSEL    7335 4451    ; 4450
LD  0   1            ; 4451
LDC 140              ; 4452
CEQ                  ; 4453
TSEL    7345 4455    ; 4454
LD  0   1            ; 4455
LDC 141              ; 4456
CEQ                  ; 4457
TSEL    7355 4459    ; 4458
LD  0   1            ; 4459
LDC 142              ; 4460
CEQ                  ; 4461
TSEL    7365 4463    ; 4462
LD  0   1            ; 4463
LDC 143              ; 4464
CEQ                  ; 4465
TSEL    7375 4467    ; 4466
LD  0   1            ; 4467
LDC 144              ; 4468
CEQ                  ; 4469
TSEL    7385 4471    ; 4470
LD  0   1            ; 4471
LDC 145              ; 4472
CEQ                  ; 4473
TSEL    7395 4475    ; 4474
LD  0   1            ; 4475
LDC 146              ; 4476
CEQ                  ; 4477
TSEL    7405 4479    ; 4478
LD  0   1            ; 4479
LDC 147              ; 4480
CEQ                  ; 4481
TSEL    7415 4483    ; 4482
LD  0   1            ; 4483
LDC 148              ; 4484
CEQ                  ; 4485
TSEL    7425 4487    ; 4486
LD  0   1            ; 4487
LDC 149              ; 4488
CEQ                  ; 4489
TSEL    7435 4491    ; 4490
LD  0   1            ; 4491
LDC 150              ; 4492
CEQ                  ; 4493
TSEL    7445 4495    ; 4494
LD  0   1            ; 4495
LDC 151              ; 4496
CEQ                  ; 4497
TSEL    7455 4499    ; 4498
LD  0   1            ; 4499
LDC 152              ; 4500
CEQ                  ; 4501
TSEL    7465 4503    ; 4502
LD  0   1            ; 4503
LDC 153              ; 4504
CEQ                  ; 4505
TSEL    7475 4507    ; 4506
LD  0   1            ; 4507
LDC 154              ; 4508
CEQ                  ; 4509
TSEL    7485 4511    ; 4510
LD  0   1            ; 4511
LDC 155              ; 4512
CEQ                  ; 4513
TSEL    7495 4515    ; 4514
LD  0   1            ; 4515
LDC 156              ; 4516
CEQ                  ; 4517
TSEL    7505 4519    ; 4518
LD  0   1            ; 4519
LDC 157              ; 4520
CEQ                  ; 4521
TSEL    7515 4523    ; 4522
LD  0   1            ; 4523
LDC 158              ; 4524
CEQ                  ; 4525
TSEL    7525 4527    ; 4526
LD  0   1            ; 4527
LDC 159              ; 4528
CEQ                  ; 4529
TSEL    7535 4531    ; 4530
LD  0   1            ; 4531
LDC 160              ; 4532
CEQ                  ; 4533
TSEL    7545 4535    ; 4534
LD  0   1            ; 4535
LDC 161              ; 4536
CEQ                  ; 4537
TSEL    7555 4539    ; 4538
LD  0   1            ; 4539
LDC 162              ; 4540
CEQ                  ; 4541
TSEL    7565 4543    ; 4542
LD  0   1            ; 4543
LDC 163              ; 4544
CEQ                  ; 4545
TSEL    7575 4547    ; 4546
LD  0   1            ; 4547
LDC 164              ; 4548
CEQ                  ; 4549
TSEL    7585 4551    ; 4550
LD  0   1            ; 4551
LDC 165              ; 4552
CEQ                  ; 4553
TSEL    7595 4555    ; 4554
LD  0   1            ; 4555
LDC 166              ; 4556
CEQ                  ; 4557
TSEL    7605 4559    ; 4558
LD  0   1            ; 4559
LDC 167              ; 4560
CEQ                  ; 4561
TSEL    7615 4563    ; 4562
LD  0   1            ; 4563
LDC 168              ; 4564
CEQ                  ; 4565
TSEL    7625 4567    ; 4566
LD  0   1            ; 4567
LDC 169              ; 4568
CEQ                  ; 4569
TSEL    7635 4571    ; 4570
LD  0   1            ; 4571
LDC 170              ; 4572
CEQ                  ; 4573
TSEL    7645 4575    ; 4574
LD  0   1            ; 4575
LDC 171              ; 4576
CEQ                  ; 4577
TSEL    7655 4579    ; 4578
LD  0   1            ; 4579
LDC 172              ; 4580
CEQ                  ; 4581
TSEL    7665 4583    ; 4582
LD  0   1            ; 4583
LDC 173              ; 4584
CEQ                  ; 4585
TSEL    7675 4587    ; 4586
LD  0   1            ; 4587
LDC 174              ; 4588
CEQ                  ; 4589
TSEL    7685 4591    ; 4590
LD  0   1            ; 4591
LDC 175              ; 4592
CEQ                  ; 4593
TSEL    7695 4595    ; 4594
LD  0   1            ; 4595
LDC 176              ; 4596
CEQ                  ; 4597
TSEL    7705 4599    ; 4598
LD  0   1            ; 4599
LDC 177              ; 4600
CEQ                  ; 4601
TSEL    7715 4603    ; 4602
LD  0   1            ; 4603
LDC 178              ; 4604
CEQ                  ; 4605
TSEL    7725 4607    ; 4606
LD  0   1            ; 4607
LDC 179              ; 4608
CEQ                  ; 4609
TSEL    7735 4611    ; 4610
LD  0   1            ; 4611
LDC 180              ; 4612
CEQ                  ; 4613
TSEL    7745 4615    ; 4614
LD  0   1            ; 4615
LDC 181              ; 4616
CEQ                  ; 4617
TSEL    7755 4619    ; 4618
LD  0   1            ; 4619
LDC 182              ; 4620
CEQ                  ; 4621
TSEL    7765 4623    ; 4622
LD  0   1            ; 4623
LDC 183              ; 4624
CEQ                  ; 4625
TSEL    7775 4627    ; 4626
LD  0   1            ; 4627
LDC 184              ; 4628
CEQ                  ; 4629
TSEL    7785 4631    ; 4630
LD  0   1            ; 4631
LDC 185              ; 4632
CEQ                  ; 4633
TSEL    7795 4635    ; 4634
LD  0   1            ; 4635
LDC 186              ; 4636
CEQ                  ; 4637
TSEL    7805 4639    ; 4638
LD  0   1            ; 4639
LDC 187              ; 4640
CEQ                  ; 4641
TSEL    7815 4643    ; 4642
LD  0   1            ; 4643
LDC 188              ; 4644
CEQ                  ; 4645
TSEL    7825 4647    ; 4646
LD  0   1            ; 4647
LDC 189              ; 4648
CEQ                  ; 4649
TSEL    7835 4651    ; 4650
LD  0   1            ; 4651
LDC 190              ; 4652
CEQ                  ; 4653
TSEL    7845 4655    ; 4654
LD  0   1            ; 4655
LDC 191              ; 4656
CEQ                  ; 4657
TSEL    7855 4659    ; 4658
LD  0   1            ; 4659
LDC 192              ; 4660
CEQ                  ; 4661
TSEL    7865 4663    ; 4662
LD  0   1            ; 4663
LDC 193              ; 4664
CEQ                  ; 4665
TSEL    7875 4667    ; 4666
LD  0   1            ; 4667
LDC 194              ; 4668
CEQ                  ; 4669
TSEL    7885 4671    ; 4670
LD  0   1            ; 4671
LDC 195              ; 4672
CEQ                  ; 4673
TSEL    7895 4675    ; 4674
LD  0   1            ; 4675
LDC 196              ; 4676
CEQ                  ; 4677
TSEL    7905 4679    ; 4678
LD  0   1            ; 4679
LDC 197              ; 4680
CEQ                  ; 4681
TSEL    7915 4683    ; 4682
LD  0   1            ; 4683
LDC 198              ; 4684
CEQ                  ; 4685
TSEL    7925 4687    ; 4686
LD  0   1            ; 4687
LDC 199              ; 4688
CEQ                  ; 4689
TSEL    7935 4691    ; 4690
LD  0   1            ; 4691
LDC 200              ; 4692
CEQ                  ; 4693
TSEL    7945 4695    ; 4694
LD  0   1            ; 4695
LDC 201              ; 4696
CEQ                  ; 4697
TSEL    7955 4699    ; 4698
LD  0   1            ; 4699
LDC 202              ; 4700
CEQ                  ; 4701
TSEL    7965 4703    ; 4702
LD  0   1            ; 4703
LDC 203              ; 4704
CEQ                  ; 4705
TSEL    7975 4707    ; 4706
LD  0   1            ; 4707
LDC 204              ; 4708
CEQ                  ; 4709
TSEL    7985 4711    ; 4710
LD  0   1            ; 4711
LDC 205              ; 4712
CEQ                  ; 4713
TSEL    7995 4715    ; 4714
LD  0   1            ; 4715
LDC 206              ; 4716
CEQ                  ; 4717
TSEL    8005 4719    ; 4718
LD  0   1            ; 4719
LDC 207              ; 4720
CEQ                  ; 4721
TSEL    8015 4723    ; 4722
LD  0   1            ; 4723
LDC 208              ; 4724
CEQ                  ; 4725
TSEL    8025 4727    ; 4726
LD  0   1            ; 4727
LDC 209              ; 4728
CEQ                  ; 4729
TSEL    8035 4731    ; 4730
LD  0   1            ; 4731
LDC 210              ; 4732
CEQ                  ; 4733
TSEL    8045 4735    ; 4734
LD  0   1            ; 4735
LDC 211              ; 4736
CEQ                  ; 4737
TSEL    8055 4739    ; 4738
LD  0   1            ; 4739
LDC 212              ; 4740
CEQ                  ; 4741
TSEL    8065 4743    ; 4742
LD  0   1            ; 4743
LDC 213              ; 4744
CEQ                  ; 4745
TSEL    8075 4747    ; 4746
LD  0   1            ; 4747
LDC 214              ; 4748
CEQ                  ; 4749
TSEL    8085 4751    ; 4750
LD  0   1            ; 4751
LDC 215              ; 4752
CEQ                  ; 4753
TSEL    8095 4755    ; 4754
LD  0   1            ; 4755
LDC 216              ; 4756
CEQ                  ; 4757
TSEL    8105 4759    ; 4758
LD  0   1            ; 4759
LDC 217              ; 4760
CEQ                  ; 4761
TSEL    8115 4763    ; 4762
LD  0   1            ; 4763
LDC 218              ; 4764
CEQ                  ; 4765
TSEL    8125 4767    ; 4766
LD  0   1            ; 4767
LDC 219              ; 4768
CEQ                  ; 4769
TSEL    8135 4771    ; 4770
LD  0   1            ; 4771
LDC 220              ; 4772
CEQ                  ; 4773
TSEL    8145 4775    ; 4774
LD  0   1            ; 4775
LDC 221              ; 4776
CEQ                  ; 4777
TSEL    8155 4779    ; 4778
LD  0   1            ; 4779
LDC 222              ; 4780
CEQ                  ; 4781
TSEL    8165 4783    ; 4782
LD  0   1            ; 4783
LDC 223              ; 4784
CEQ                  ; 4785
TSEL    8175 4787    ; 4786
LD  0   1            ; 4787
LDC 224              ; 4788
CEQ                  ; 4789
TSEL    8185 4791    ; 4790
LD  0   1            ; 4791
LDC 225              ; 4792
CEQ                  ; 4793
TSEL    8195 4795    ; 4794
LD  0   1            ; 4795
LDC 226              ; 4796
CEQ                  ; 4797
TSEL    8205 4799    ; 4798
LD  0   1            ; 4799
LDC 227              ; 4800
CEQ                  ; 4801
TSEL    8215 4803    ; 4802
LD  0   1            ; 4803
LDC 228              ; 4804
CEQ                  ; 4805
TSEL    8225 4807    ; 4806
LD  0   1            ; 4807
LDC 229              ; 4808
CEQ                  ; 4809
TSEL    8235 4811    ; 4810
LD  0   1            ; 4811
LDC 230              ; 4812
CEQ                  ; 4813
TSEL    8245 4815    ; 4814
LD  0   1            ; 4815
LDC 231              ; 4816
CEQ                  ; 4817
TSEL    8255 4819    ; 4818
LD  0   1            ; 4819
LDC 232              ; 4820
CEQ                  ; 4821
TSEL    8265 4823    ; 4822
LD  0   1            ; 4823
LDC 233              ; 4824
CEQ                  ; 4825
TSEL    8275 4827    ; 4826
LD  0   1            ; 4827
LDC 234              ; 4828
CEQ                  ; 4829
TSEL    8285 4831    ; 4830
LD  0   1            ; 4831
LDC 235              ; 4832
CEQ                  ; 4833
TSEL    8295 4835    ; 4834
LD  0   1            ; 4835
LDC 236              ; 4836
CEQ                  ; 4837
TSEL    8305 4839    ; 4838
LD  0   1            ; 4839
LDC 237              ; 4840
CEQ                  ; 4841
TSEL    8315 4843    ; 4842
LD  0   1            ; 4843
LDC 238              ; 4844
CEQ                  ; 4845
TSEL    8325 4847    ; 4846
LD  0   1            ; 4847
LDC 239              ; 4848
CEQ                  ; 4849
TSEL    8335 4851    ; 4850
LD  0   1            ; 4851
LDC 240              ; 4852
CEQ                  ; 4853
TSEL    8345 4855    ; 4854
LD  0   1            ; 4855
LDC 241              ; 4856
CEQ                  ; 4857
TSEL    8355 4859    ; 4858
LD  0   1            ; 4859
LDC 242              ; 4860
CEQ                  ; 4861
TSEL    8365 4863    ; 4862
LD  0   1            ; 4863
LDC 243              ; 4864
CEQ                  ; 4865
TSEL    8375 4867    ; 4866
LD  0   1            ; 4867
LDC 244              ; 4868
CEQ                  ; 4869
TSEL    8385 4871    ; 4870
LD  0   1            ; 4871
LDC 245              ; 4872
CEQ                  ; 4873
TSEL    8395 4875    ; 4874
LD  0   1            ; 4875
LDC 246              ; 4876
CEQ                  ; 4877
TSEL    8405 4879    ; 4878
LD  0   1            ; 4879
LDC 247              ; 4880
CEQ                  ; 4881
TSEL    8415 4883    ; 4882
LD  0   1            ; 4883
LDC 248              ; 4884
CEQ                  ; 4885
TSEL    8425 4887    ; 4886
LD  0   1            ; 4887
LDC 249              ; 4888
CEQ                  ; 4889
TSEL    8435 4891    ; 4890
LD  0   1            ; 4891
LDC 250              ; 4892
CEQ                  ; 4893
TSEL    8445 4895    ; 4894
LD  0   1            ; 4895
LDC 251              ; 4896
CEQ                  ; 4897
TSEL    8455 4899    ; 4898
LD  0   1            ; 4899
LDC 252              ; 4900
CEQ                  ; 4901
TSEL    8465 4903    ; 4902
LD  0   1            ; 4903
LDC 253              ; 4904
CEQ                  ; 4905
TSEL    8475 4907    ; 4906
LD  0   1            ; 4907
LDC 254              ; 4908
CEQ                  ; 4909
TSEL    8485 4911    ; 4910
LD  0   1            ; 4911
LDC 255              ; 4912
CEQ                  ; 4913
TSEL    8495 4915    ; 4914
LDC  0               ; 4915
RTN                  ; 4916
LD  0   1            ; 4917
LDC 0                ; 4918
CEQ                  ; 4919
TSEL    5951 4921    ; 4920
LD  0   1            ; 4921
LDC 1                ; 4922
CEQ                  ; 4923
TSEL    5961 4925    ; 4924
LD  0   1            ; 4925
LDC 2                ; 4926
CEQ                  ; 4927
TSEL    5971 4929    ; 4928
LD  0   1            ; 4929
LDC 3                ; 4930
CEQ                  ; 4931
TSEL    5981 4933    ; 4932
LD  0   1            ; 4933
LDC 4                ; 4934
CEQ                  ; 4935
TSEL    5991 4937    ; 4936
LD  0   1            ; 4937
LDC 5                ; 4938
CEQ                  ; 4939
TSEL    6001 4941    ; 4940
LD  0   1            ; 4941
LDC 6                ; 4942
CEQ                  ; 4943
TSEL    6011 4945    ; 4944
LD  0   1            ; 4945
LDC 7                ; 4946
CEQ                  ; 4947
TSEL    6021 4949    ; 4948
LD  0   1            ; 4949
LDC 8                ; 4950
CEQ                  ; 4951
TSEL    6031 4953    ; 4952
LD  0   1            ; 4953
LDC 9                ; 4954
CEQ                  ; 4955
TSEL    6041 4957    ; 4956
LD  0   1            ; 4957
LDC 10               ; 4958
CEQ                  ; 4959
TSEL    6051 4961    ; 4960
LD  0   1            ; 4961
LDC 11               ; 4962
CEQ                  ; 4963
TSEL    6061 4965    ; 4964
LD  0   1            ; 4965
LDC 12               ; 4966
CEQ                  ; 4967
TSEL    6071 4969    ; 4968
LD  0   1            ; 4969
LDC 13               ; 4970
CEQ                  ; 4971
TSEL    6081 4973    ; 4972
LD  0   1            ; 4973
LDC 14               ; 4974
CEQ                  ; 4975
TSEL    6091 4977    ; 4976
LD  0   1            ; 4977
LDC 15               ; 4978
CEQ                  ; 4979
TSEL    6101 4981    ; 4980
LD  0   1            ; 4981
LDC 16               ; 4982
CEQ                  ; 4983
TSEL    6111 4985    ; 4984
LD  0   1            ; 4985
LDC 17               ; 4986
CEQ                  ; 4987
TSEL    6121 4989    ; 4988
LD  0   1            ; 4989
LDC 18               ; 4990
CEQ                  ; 4991
TSEL    6131 4993    ; 4992
LD  0   1            ; 4993
LDC 19               ; 4994
CEQ                  ; 4995
TSEL    6141 4997    ; 4996
LD  0   1            ; 4997
LDC 20               ; 4998
CEQ                  ; 4999
TSEL    6151 5001    ; 5000
LD  0   1            ; 5001
LDC 21               ; 5002
CEQ                  ; 5003
TSEL    6161 5005    ; 5004
LD  0   1            ; 5005
LDC 22               ; 5006
CEQ                  ; 5007
TSEL    6171 5009    ; 5008
LD  0   1            ; 5009
LDC 23               ; 5010
CEQ                  ; 5011
TSEL    6181 5013    ; 5012
LD  0   1            ; 5013
LDC 24               ; 5014
CEQ                  ; 5015
TSEL    6191 5017    ; 5016
LD  0   1            ; 5017
LDC 25               ; 5018
CEQ                  ; 5019
TSEL    6201 5021    ; 5020
LD  0   1            ; 5021
LDC 26               ; 5022
CEQ                  ; 5023
TSEL    6211 5025    ; 5024
LD  0   1            ; 5025
LDC 27               ; 5026
CEQ                  ; 5027
TSEL    6221 5029    ; 5028
LD  0   1            ; 5029
LDC 28               ; 5030
CEQ                  ; 5031
TSEL    6231 5033    ; 5032
LD  0   1            ; 5033
LDC 29               ; 5034
CEQ                  ; 5035
TSEL    6241 5037    ; 5036
LD  0   1            ; 5037
LDC 30               ; 5038
CEQ                  ; 5039
TSEL    6251 5041    ; 5040
LD  0   1            ; 5041
LDC 31               ; 5042
CEQ                  ; 5043
TSEL    6261 5045    ; 5044
LD  0   1            ; 5045
LDC 32               ; 5046
CEQ                  ; 5047
TSEL    6271 5049    ; 5048
LD  0   1            ; 5049
LDC 33               ; 5050
CEQ                  ; 5051
TSEL    6281 5053    ; 5052
LD  0   1            ; 5053
LDC 34               ; 5054
CEQ                  ; 5055
TSEL    6291 5057    ; 5056
LD  0   1            ; 5057
LDC 35               ; 5058
CEQ                  ; 5059
TSEL    6301 5061    ; 5060
LD  0   1            ; 5061
LDC 36               ; 5062
CEQ                  ; 5063
TSEL    6311 5065    ; 5064
LD  0   1            ; 5065
LDC 37               ; 5066
CEQ                  ; 5067
TSEL    6321 5069    ; 5068
LD  0   1            ; 5069
LDC 38               ; 5070
CEQ                  ; 5071
TSEL    6331 5073    ; 5072
LD  0   1            ; 5073
LDC 39               ; 5074
CEQ                  ; 5075
TSEL    6341 5077    ; 5076
LD  0   1            ; 5077
LDC 40               ; 5078
CEQ                  ; 5079
TSEL    6351 5081    ; 5080
LD  0   1            ; 5081
LDC 41               ; 5082
CEQ                  ; 5083
TSEL    6361 5085    ; 5084
LD  0   1            ; 5085
LDC 42               ; 5086
CEQ                  ; 5087
TSEL    6371 5089    ; 5088
LD  0   1            ; 5089
LDC 43               ; 5090
CEQ                  ; 5091
TSEL    6381 5093    ; 5092
LD  0   1            ; 5093
LDC 44               ; 5094
CEQ                  ; 5095
TSEL    6391 5097    ; 5096
LD  0   1            ; 5097
LDC 45               ; 5098
CEQ                  ; 5099
TSEL    6401 5101    ; 5100
LD  0   1            ; 5101
LDC 46               ; 5102
CEQ                  ; 5103
TSEL    6411 5105    ; 5104
LD  0   1            ; 5105
LDC 47               ; 5106
CEQ                  ; 5107
TSEL    6421 5109    ; 5108
LD  0   1            ; 5109
LDC 48               ; 5110
CEQ                  ; 5111
TSEL    6431 5113    ; 5112
LD  0   1            ; 5113
LDC 49               ; 5114
CEQ                  ; 5115
TSEL    6441 5117    ; 5116
LD  0   1            ; 5117
LDC 50               ; 5118
CEQ                  ; 5119
TSEL    6451 5121    ; 5120
LD  0   1            ; 5121
LDC 51               ; 5122
CEQ                  ; 5123
TSEL    6461 5125    ; 5124
LD  0   1            ; 5125
LDC 52               ; 5126
CEQ                  ; 5127
TSEL    6471 5129    ; 5128
LD  0   1            ; 5129
LDC 53               ; 5130
CEQ                  ; 5131
TSEL    6481 5133    ; 5132
LD  0   1            ; 5133
LDC 54               ; 5134
CEQ                  ; 5135
TSEL    6491 5137    ; 5136
LD  0   1            ; 5137
LDC 55               ; 5138
CEQ                  ; 5139
TSEL    6501 5141    ; 5140
LD  0   1            ; 5141
LDC 56               ; 5142
CEQ                  ; 5143
TSEL    6511 5145    ; 5144
LD  0   1            ; 5145
LDC 57               ; 5146
CEQ                  ; 5147
TSEL    6521 5149    ; 5148
LD  0   1            ; 5149
LDC 58               ; 5150
CEQ                  ; 5151
TSEL    6531 5153    ; 5152
LD  0   1            ; 5153
LDC 59               ; 5154
CEQ                  ; 5155
TSEL    6541 5157    ; 5156
LD  0   1            ; 5157
LDC 60               ; 5158
CEQ                  ; 5159
TSEL    6551 5161    ; 5160
LD  0   1            ; 5161
LDC 61               ; 5162
CEQ                  ; 5163
TSEL    6561 5165    ; 5164
LD  0   1            ; 5165
LDC 62               ; 5166
CEQ                  ; 5167
TSEL    6571 5169    ; 5168
LD  0   1            ; 5169
LDC 63               ; 5170
CEQ                  ; 5171
TSEL    6581 5173    ; 5172
LD  0   1            ; 5173
LDC 64               ; 5174
CEQ                  ; 5175
TSEL    6591 5177    ; 5176
LD  0   1            ; 5177
LDC 65               ; 5178
CEQ                  ; 5179
TSEL    6601 5181    ; 5180
LD  0   1            ; 5181
LDC 66               ; 5182
CEQ                  ; 5183
TSEL    6611 5185    ; 5184
LD  0   1            ; 5185
LDC 67               ; 5186
CEQ                  ; 5187
TSEL    6621 5189    ; 5188
LD  0   1            ; 5189
LDC 68               ; 5190
CEQ                  ; 5191
TSEL    6631 5193    ; 5192
LD  0   1            ; 5193
LDC 69               ; 5194
CEQ                  ; 5195
TSEL    6641 5197    ; 5196
LD  0   1            ; 5197
LDC 70               ; 5198
CEQ                  ; 5199
TSEL    6651 5201    ; 5200
LD  0   1            ; 5201
LDC 71               ; 5202
CEQ                  ; 5203
TSEL    6661 5205    ; 5204
LD  0   1            ; 5205
LDC 72               ; 5206
CEQ                  ; 5207
TSEL    6671 5209    ; 5208
LD  0   1            ; 5209
LDC 73               ; 5210
CEQ                  ; 5211
TSEL    6681 5213    ; 5212
LD  0   1            ; 5213
LDC 74               ; 5214
CEQ                  ; 5215
TSEL    6691 5217    ; 5216
LD  0   1            ; 5217
LDC 75               ; 5218
CEQ                  ; 5219
TSEL    6701 5221    ; 5220
LD  0   1            ; 5221
LDC 76               ; 5222
CEQ                  ; 5223
TSEL    6711 5225    ; 5224
LD  0   1            ; 5225
LDC 77               ; 5226
CEQ                  ; 5227
TSEL    6721 5229    ; 5228
LD  0   1            ; 5229
LDC 78               ; 5230
CEQ                  ; 5231
TSEL    6731 5233    ; 5232
LD  0   1            ; 5233
LDC 79               ; 5234
CEQ                  ; 5235
TSEL    6741 5237    ; 5236
LD  0   1            ; 5237
LDC 80               ; 5238
CEQ                  ; 5239
TSEL    6751 5241    ; 5240
LD  0   1            ; 5241
LDC 81               ; 5242
CEQ                  ; 5243
TSEL    6761 5245    ; 5244
LD  0   1            ; 5245
LDC 82               ; 5246
CEQ                  ; 5247
TSEL    6771 5249    ; 5248
LD  0   1            ; 5249
LDC 83               ; 5250
CEQ                  ; 5251
TSEL    6781 5253    ; 5252
LD  0   1            ; 5253
LDC 84               ; 5254
CEQ                  ; 5255
TSEL    6791 5257    ; 5256
LD  0   1            ; 5257
LDC 85               ; 5258
CEQ                  ; 5259
TSEL    6801 5261    ; 5260
LD  0   1            ; 5261
LDC 86               ; 5262
CEQ                  ; 5263
TSEL    6811 5265    ; 5264
LD  0   1            ; 5265
LDC 87               ; 5266
CEQ                  ; 5267
TSEL    6821 5269    ; 5268
LD  0   1            ; 5269
LDC 88               ; 5270
CEQ                  ; 5271
TSEL    6831 5273    ; 5272
LD  0   1            ; 5273
LDC 89               ; 5274
CEQ                  ; 5275
TSEL    6841 5277    ; 5276
LD  0   1            ; 5277
LDC 90               ; 5278
CEQ                  ; 5279
TSEL    6851 5281    ; 5280
LD  0   1            ; 5281
LDC 91               ; 5282
CEQ                  ; 5283
TSEL    6861 5285    ; 5284
LD  0   1            ; 5285
LDC 92               ; 5286
CEQ                  ; 5287
TSEL    6871 5289    ; 5288
LD  0   1            ; 5289
LDC 93               ; 5290
CEQ                  ; 5291
TSEL    6881 5293    ; 5292
LD  0   1            ; 5293
LDC 94               ; 5294
CEQ                  ; 5295
TSEL    6891 5297    ; 5296
LD  0   1            ; 5297
LDC 95               ; 5298
CEQ                  ; 5299
TSEL    6901 5301    ; 5300
LD  0   1            ; 5301
LDC 96               ; 5302
CEQ                  ; 5303
TSEL    6911 5305    ; 5304
LD  0   1            ; 5305
LDC 97               ; 5306
CEQ                  ; 5307
TSEL    6921 5309    ; 5308
LD  0   1            ; 5309
LDC 98               ; 5310
CEQ                  ; 5311
TSEL    6931 5313    ; 5312
LD  0   1            ; 5313
LDC 99               ; 5314
CEQ                  ; 5315
TSEL    6941 5317    ; 5316
LD  0   1            ; 5317
LDC 100              ; 5318
CEQ                  ; 5319
TSEL    6951 5321    ; 5320
LD  0   1            ; 5321
LDC 101              ; 5322
CEQ                  ; 5323
TSEL    6961 5325    ; 5324
LD  0   1            ; 5325
LDC 102              ; 5326
CEQ                  ; 5327
TSEL    6971 5329    ; 5328
LD  0   1            ; 5329
LDC 103              ; 5330
CEQ                  ; 5331
TSEL    6981 5333    ; 5332
LD  0   1            ; 5333
LDC 104              ; 5334
CEQ                  ; 5335
TSEL    6991 5337    ; 5336
LD  0   1            ; 5337
LDC 105              ; 5338
CEQ                  ; 5339
TSEL    7001 5341    ; 5340
LD  0   1            ; 5341
LDC 106              ; 5342
CEQ                  ; 5343
TSEL    7011 5345    ; 5344
LD  0   1            ; 5345
LDC 107              ; 5346
CEQ                  ; 5347
TSEL    7021 5349    ; 5348
LD  0   1            ; 5349
LDC 108              ; 5350
CEQ                  ; 5351
TSEL    7031 5353    ; 5352
LD  0   1            ; 5353
LDC 109              ; 5354
CEQ                  ; 5355
TSEL    7041 5357    ; 5356
LD  0   1            ; 5357
LDC 110              ; 5358
CEQ                  ; 5359
TSEL    7051 5361    ; 5360
LD  0   1            ; 5361
LDC 111              ; 5362
CEQ                  ; 5363
TSEL    7061 5365    ; 5364
LD  0   1            ; 5365
LDC 112              ; 5366
CEQ                  ; 5367
TSEL    7071 5369    ; 5368
LD  0   1            ; 5369
LDC 113              ; 5370
CEQ                  ; 5371
TSEL    7081 5373    ; 5372
LD  0   1            ; 5373
LDC 114              ; 5374
CEQ                  ; 5375
TSEL    7091 5377    ; 5376
LD  0   1            ; 5377
LDC 115              ; 5378
CEQ                  ; 5379
TSEL    7101 5381    ; 5380
LD  0   1            ; 5381
LDC 116              ; 5382
CEQ                  ; 5383
TSEL    7111 5385    ; 5384
LD  0   1            ; 5385
LDC 117              ; 5386
CEQ                  ; 5387
TSEL    7121 5389    ; 5388
LD  0   1            ; 5389
LDC 118              ; 5390
CEQ                  ; 5391
TSEL    7131 5393    ; 5392
LD  0   1            ; 5393
LDC 119              ; 5394
CEQ                  ; 5395
TSEL    7141 5397    ; 5396
LD  0   1            ; 5397
LDC 120              ; 5398
CEQ                  ; 5399
TSEL    7151 5401    ; 5400
LD  0   1            ; 5401
LDC 121              ; 5402
CEQ                  ; 5403
TSEL    7161 5405    ; 5404
LD  0   1            ; 5405
LDC 122              ; 5406
CEQ                  ; 5407
TSEL    7171 5409    ; 5408
LD  0   1            ; 5409
LDC 123              ; 5410
CEQ                  ; 5411
TSEL    7181 5413    ; 5412
LD  0   1            ; 5413
LDC 124              ; 5414
CEQ                  ; 5415
TSEL    7191 5417    ; 5416
LD  0   1            ; 5417
LDC 125              ; 5418
CEQ                  ; 5419
TSEL    7201 5421    ; 5420
LD  0   1            ; 5421
LDC 126              ; 5422
CEQ                  ; 5423
TSEL    7211 5425    ; 5424
LD  0   1            ; 5425
LDC 127              ; 5426
CEQ                  ; 5427
TSEL    7221 5429    ; 5428
LD  0   1            ; 5429
LDC 128              ; 5430
CEQ                  ; 5431
TSEL    7231 5433    ; 5432
LD  0   1            ; 5433
LDC 129              ; 5434
CEQ                  ; 5435
TSEL    7241 5437    ; 5436
LD  0   1            ; 5437
LDC 130              ; 5438
CEQ                  ; 5439
TSEL    7251 5441    ; 5440
LD  0   1            ; 5441
LDC 131              ; 5442
CEQ                  ; 5443
TSEL    7261 5445    ; 5444
LD  0   1            ; 5445
LDC 132              ; 5446
CEQ                  ; 5447
TSEL    7271 5449    ; 5448
LD  0   1            ; 5449
LDC 133              ; 5450
CEQ                  ; 5451
TSEL    7281 5453    ; 5452
LD  0   1            ; 5453
LDC 134              ; 5454
CEQ                  ; 5455
TSEL    7291 5457    ; 5456
LD  0   1            ; 5457
LDC 135              ; 5458
CEQ                  ; 5459
TSEL    7301 5461    ; 5460
LD  0   1            ; 5461
LDC 136              ; 5462
CEQ                  ; 5463
TSEL    7311 5465    ; 5464
LD  0   1            ; 5465
LDC 137              ; 5466
CEQ                  ; 5467
TSEL    7321 5469    ; 5468
LD  0   1            ; 5469
LDC 138              ; 5470
CEQ                  ; 5471
TSEL    7331 5473    ; 5472
LD  0   1            ; 5473
LDC 139              ; 5474
CEQ                  ; 5475
TSEL    7341 5477    ; 5476
LD  0   1            ; 5477
LDC 140              ; 5478
CEQ                  ; 5479
TSEL    7351 5481    ; 5480
LD  0   1            ; 5481
LDC 141              ; 5482
CEQ                  ; 5483
TSEL    7361 5485    ; 5484
LD  0   1            ; 5485
LDC 142              ; 5486
CEQ                  ; 5487
TSEL    7371 5489    ; 5488
LD  0   1            ; 5489
LDC 143              ; 5490
CEQ                  ; 5491
TSEL    7381 5493    ; 5492
LD  0   1            ; 5493
LDC 144              ; 5494
CEQ                  ; 5495
TSEL    7391 5497    ; 5496
LD  0   1            ; 5497
LDC 145              ; 5498
CEQ                  ; 5499
TSEL    7401 5501    ; 5500
LD  0   1            ; 5501
LDC 146              ; 5502
CEQ                  ; 5503
TSEL    7411 5505    ; 5504
LD  0   1            ; 5505
LDC 147              ; 5506
CEQ                  ; 5507
TSEL    7421 5509    ; 5508
LD  0   1            ; 5509
LDC 148              ; 5510
CEQ                  ; 5511
TSEL    7431 5513    ; 5512
LD  0   1            ; 5513
LDC 149              ; 5514
CEQ                  ; 5515
TSEL    7441 5517    ; 5516
LD  0   1            ; 5517
LDC 150              ; 5518
CEQ                  ; 5519
TSEL    7451 5521    ; 5520
LD  0   1            ; 5521
LDC 151              ; 5522
CEQ                  ; 5523
TSEL    7461 5525    ; 5524
LD  0   1            ; 5525
LDC 152              ; 5526
CEQ                  ; 5527
TSEL    7471 5529    ; 5528
LD  0   1            ; 5529
LDC 153              ; 5530
CEQ                  ; 5531
TSEL    7481 5533    ; 5532
LD  0   1            ; 5533
LDC 154              ; 5534
CEQ                  ; 5535
TSEL    7491 5537    ; 5536
LD  0   1            ; 5537
LDC 155              ; 5538
CEQ                  ; 5539
TSEL    7501 5541    ; 5540
LD  0   1            ; 5541
LDC 156              ; 5542
CEQ                  ; 5543
TSEL    7511 5545    ; 5544
LD  0   1            ; 5545
LDC 157              ; 5546
CEQ                  ; 5547
TSEL    7521 5549    ; 5548
LD  0   1            ; 5549
LDC 158              ; 5550
CEQ                  ; 5551
TSEL    7531 5553    ; 5552
LD  0   1            ; 5553
LDC 159              ; 5554
CEQ                  ; 5555
TSEL    7541 5557    ; 5556
LD  0   1            ; 5557
LDC 160              ; 5558
CEQ                  ; 5559
TSEL    7551 5561    ; 5560
LD  0   1            ; 5561
LDC 161              ; 5562
CEQ                  ; 5563
TSEL    7561 5565    ; 5564
LD  0   1            ; 5565
LDC 162              ; 5566
CEQ                  ; 5567
TSEL    7571 5569    ; 5568
LD  0   1            ; 5569
LDC 163              ; 5570
CEQ                  ; 5571
TSEL    7581 5573    ; 5572
LD  0   1            ; 5573
LDC 164              ; 5574
CEQ                  ; 5575
TSEL    7591 5577    ; 5576
LD  0   1            ; 5577
LDC 165              ; 5578
CEQ                  ; 5579
TSEL    7601 5581    ; 5580
LD  0   1            ; 5581
LDC 166              ; 5582
CEQ                  ; 5583
TSEL    7611 5585    ; 5584
LD  0   1            ; 5585
LDC 167              ; 5586
CEQ                  ; 5587
TSEL    7621 5589    ; 5588
LD  0   1            ; 5589
LDC 168              ; 5590
CEQ                  ; 5591
TSEL    7631 5593    ; 5592
LD  0   1            ; 5593
LDC 169              ; 5594
CEQ                  ; 5595
TSEL    7641 5597    ; 5596
LD  0   1            ; 5597
LDC 170              ; 5598
CEQ                  ; 5599
TSEL    7651 5601    ; 5600
LD  0   1            ; 5601
LDC 171              ; 5602
CEQ                  ; 5603
TSEL    7661 5605    ; 5604
LD  0   1            ; 5605
LDC 172              ; 5606
CEQ                  ; 5607
TSEL    7671 5609    ; 5608
LD  0   1            ; 5609
LDC 173              ; 5610
CEQ                  ; 5611
TSEL    7681 5613    ; 5612
LD  0   1            ; 5613
LDC 174              ; 5614
CEQ                  ; 5615
TSEL    7691 5617    ; 5616
LD  0   1            ; 5617
LDC 175              ; 5618
CEQ                  ; 5619
TSEL    7701 5621    ; 5620
LD  0   1            ; 5621
LDC 176              ; 5622
CEQ                  ; 5623
TSEL    7711 5625    ; 5624
LD  0   1            ; 5625
LDC 177              ; 5626
CEQ                  ; 5627
TSEL    7721 5629    ; 5628
LD  0   1            ; 5629
LDC 178              ; 5630
CEQ                  ; 5631
TSEL    7731 5633    ; 5632
LD  0   1            ; 5633
LDC 179              ; 5634
CEQ                  ; 5635
TSEL    7741 5637    ; 5636
LD  0   1            ; 5637
LDC 180              ; 5638
CEQ                  ; 5639
TSEL    7751 5641    ; 5640
LD  0   1            ; 5641
LDC 181              ; 5642
CEQ                  ; 5643
TSEL    7761 5645    ; 5644
LD  0   1            ; 5645
LDC 182              ; 5646
CEQ                  ; 5647
TSEL    7771 5649    ; 5648
LD  0   1            ; 5649
LDC 183              ; 5650
CEQ                  ; 5651
TSEL    7781 5653    ; 5652
LD  0   1            ; 5653
LDC 184              ; 5654
CEQ                  ; 5655
TSEL    7791 5657    ; 5656
LD  0   1            ; 5657
LDC 185              ; 5658
CEQ                  ; 5659
TSEL    7801 5661    ; 5660
LD  0   1            ; 5661
LDC 186              ; 5662
CEQ                  ; 5663
TSEL    7811 5665    ; 5664
LD  0   1            ; 5665
LDC 187              ; 5666
CEQ                  ; 5667
TSEL    7821 5669    ; 5668
LD  0   1            ; 5669
LDC 188              ; 5670
CEQ                  ; 5671
TSEL    7831 5673    ; 5672
LD  0   1            ; 5673
LDC 189              ; 5674
CEQ                  ; 5675
TSEL    7841 5677    ; 5676
LD  0   1            ; 5677
LDC 190              ; 5678
CEQ                  ; 5679
TSEL    7851 5681    ; 5680
LD  0   1            ; 5681
LDC 191              ; 5682
CEQ                  ; 5683
TSEL    7861 5685    ; 5684
LD  0   1            ; 5685
LDC 192              ; 5686
CEQ                  ; 5687
TSEL    7871 5689    ; 5688
LD  0   1            ; 5689
LDC 193              ; 5690
CEQ                  ; 5691
TSEL    7881 5693    ; 5692
LD  0   1            ; 5693
LDC 194              ; 5694
CEQ                  ; 5695
TSEL    7891 5697    ; 5696
LD  0   1            ; 5697
LDC 195              ; 5698
CEQ                  ; 5699
TSEL    7901 5701    ; 5700
LD  0   1            ; 5701
LDC 196              ; 5702
CEQ                  ; 5703
TSEL    7911 5705    ; 5704
LD  0   1            ; 5705
LDC 197              ; 5706
CEQ                  ; 5707
TSEL    7921 5709    ; 5708
LD  0   1            ; 5709
LDC 198              ; 5710
CEQ                  ; 5711
TSEL    7931 5713    ; 5712
LD  0   1            ; 5713
LDC 199              ; 5714
CEQ                  ; 5715
TSEL    7941 5717    ; 5716
LD  0   1            ; 5717
LDC 200              ; 5718
CEQ                  ; 5719
TSEL    7951 5721    ; 5720
LD  0   1            ; 5721
LDC 201              ; 5722
CEQ                  ; 5723
TSEL    7961 5725    ; 5724
LD  0   1            ; 5725
LDC 202              ; 5726
CEQ                  ; 5727
TSEL    7971 5729    ; 5728
LD  0   1            ; 5729
LDC 203              ; 5730
CEQ                  ; 5731
TSEL    7981 5733    ; 5732
LD  0   1            ; 5733
LDC 204              ; 5734
CEQ                  ; 5735
TSEL    7991 5737    ; 5736
LD  0   1            ; 5737
LDC 205              ; 5738
CEQ                  ; 5739
TSEL    8001 5741    ; 5740
LD  0   1            ; 5741
LDC 206              ; 5742
CEQ                  ; 5743
TSEL    8011 5745    ; 5744
LD  0   1            ; 5745
LDC 207              ; 5746
CEQ                  ; 5747
TSEL    8021 5749    ; 5748
LD  0   1            ; 5749
LDC 208              ; 5750
CEQ                  ; 5751
TSEL    8031 5753    ; 5752
LD  0   1            ; 5753
LDC 209              ; 5754
CEQ                  ; 5755
TSEL    8041 5757    ; 5756
LD  0   1            ; 5757
LDC 210              ; 5758
CEQ                  ; 5759
TSEL    8051 5761    ; 5760
LD  0   1            ; 5761
LDC 211              ; 5762
CEQ                  ; 5763
TSEL    8061 5765    ; 5764
LD  0   1            ; 5765
LDC 212              ; 5766
CEQ                  ; 5767
TSEL    8071 5769    ; 5768
LD  0   1            ; 5769
LDC 213              ; 5770
CEQ                  ; 5771
TSEL    8081 5773    ; 5772
LD  0   1            ; 5773
LDC 214              ; 5774
CEQ                  ; 5775
TSEL    8091 5777    ; 5776
LD  0   1            ; 5777
LDC 215              ; 5778
CEQ                  ; 5779
TSEL    8101 5781    ; 5780
LD  0   1            ; 5781
LDC 216              ; 5782
CEQ                  ; 5783
TSEL    8111 5785    ; 5784
LD  0   1            ; 5785
LDC 217              ; 5786
CEQ                  ; 5787
TSEL    8121 5789    ; 5788
LD  0   1            ; 5789
LDC 218              ; 5790
CEQ                  ; 5791
TSEL    8131 5793    ; 5792
LD  0   1            ; 5793
LDC 219              ; 5794
CEQ                  ; 5795
TSEL    8141 5797    ; 5796
LD  0   1            ; 5797
LDC 220              ; 5798
CEQ                  ; 5799
TSEL    8151 5801    ; 5800
LD  0   1            ; 5801
LDC 221              ; 5802
CEQ                  ; 5803
TSEL    8161 5805    ; 5804
LD  0   1            ; 5805
LDC 222              ; 5806
CEQ                  ; 5807
TSEL    8171 5809    ; 5808
LD  0   1            ; 5809
LDC 223              ; 5810
CEQ                  ; 5811
TSEL    8181 5813    ; 5812
LD  0   1            ; 5813
LDC 224              ; 5814
CEQ                  ; 5815
TSEL    8191 5817    ; 5816
LD  0   1            ; 5817
LDC 225              ; 5818
CEQ                  ; 5819
TSEL    8201 5821    ; 5820
LD  0   1            ; 5821
LDC 226              ; 5822
CEQ                  ; 5823
TSEL    8211 5825    ; 5824
LD  0   1            ; 5825
LDC 227              ; 5826
CEQ                  ; 5827
TSEL    8221 5829    ; 5828
LD  0   1            ; 5829
LDC 228              ; 5830
CEQ                  ; 5831
TSEL    8231 5833    ; 5832
LD  0   1            ; 5833
LDC 229              ; 5834
CEQ                  ; 5835
TSEL    8241 5837    ; 5836
LD  0   1            ; 5837
LDC 230              ; 5838
CEQ                  ; 5839
TSEL    8251 5841    ; 5840
LD  0   1            ; 5841
LDC 231              ; 5842
CEQ                  ; 5843
TSEL    8261 5845    ; 5844
LD  0   1            ; 5845
LDC 232              ; 5846
CEQ                  ; 5847
TSEL    8271 5849    ; 5848
LD  0   1            ; 5849
LDC 233              ; 5850
CEQ                  ; 5851
TSEL    8281 5853    ; 5852
LD  0   1            ; 5853
LDC 234              ; 5854
CEQ                  ; 5855
TSEL    8291 5857    ; 5856
LD  0   1            ; 5857
LDC 235              ; 5858
CEQ                  ; 5859
TSEL    8301 5861    ; 5860
LD  0   1            ; 5861
LDC 236              ; 5862
CEQ                  ; 5863
TSEL    8311 5865    ; 5864
LD  0   1            ; 5865
LDC 237              ; 5866
CEQ                  ; 5867
TSEL    8321 5869    ; 5868
LD  0   1            ; 5869
LDC 238              ; 5870
CEQ                  ; 5871
TSEL    8331 5873    ; 5872
LD  0   1            ; 5873
LDC 239              ; 5874
CEQ                  ; 5875
TSEL    8341 5877    ; 5876
LD  0   1            ; 5877
LDC 240              ; 5878
CEQ                  ; 5879
TSEL    8351 5881    ; 5880
LD  0   1            ; 5881
LDC 241              ; 5882
CEQ                  ; 5883
TSEL    8361 5885    ; 5884
LD  0   1            ; 5885
LDC 242              ; 5886
CEQ                  ; 5887
TSEL    8371 5889    ; 5888
LD  0   1            ; 5889
LDC 243              ; 5890
CEQ                  ; 5891
TSEL    8381 5893    ; 5892
LD  0   1            ; 5893
LDC 244              ; 5894
CEQ                  ; 5895
TSEL    8391 5897    ; 5896
LD  0   1            ; 5897
LDC 245              ; 5898
CEQ                  ; 5899
TSEL    8401 5901    ; 5900
LD  0   1            ; 5901
LDC 246              ; 5902
CEQ                  ; 5903
TSEL    8411 5905    ; 5904
LD  0   1            ; 5905
LDC 247              ; 5906
CEQ                  ; 5907
TSEL    8421 5909    ; 5908
LD  0   1            ; 5909
LDC 248              ; 5910
CEQ                  ; 5911
TSEL    8431 5913    ; 5912
LD  0   1            ; 5913
LDC 249              ; 5914
CEQ                  ; 5915
TSEL    8441 5917    ; 5916
LD  0   1            ; 5917
LDC 250              ; 5918
CEQ                  ; 5919
TSEL    8451 5921    ; 5920
LD  0   1            ; 5921
LDC 251              ; 5922
CEQ                  ; 5923
TSEL    8461 5925    ; 5924
LD  0   1            ; 5925
LDC 252              ; 5926
CEQ                  ; 5927
TSEL    8471 5929    ; 5928
LD  0   1            ; 5929
LDC 253              ; 5930
CEQ                  ; 5931
TSEL    8481 5933    ; 5932
LD  0   1            ; 5933
LDC 254              ; 5934
CEQ                  ; 5935
TSEL    8491 5937    ; 5936
LD  0   1            ; 5937
LDC 255              ; 5938
CEQ                  ; 5939
TSEL    8501 5941    ; 5940
LDC  0               ; 5941
RTN                  ; 5942
LD  2   0            ; 5943
RTN                  ; 5944
LDF 5943             ; 5945
RTN                  ; 5946
LD  2   0            ; 5947
LD  0   0            ; 5948
ST  2   0            ; 5949
RTN                  ; 5950
LDF 5947             ; 5951
RTN                  ; 5952
LD  2   1            ; 5953
RTN                  ; 5954
LDF 5953             ; 5955
RTN                  ; 5956
LD  2   1            ; 5957
LD  0   0            ; 5958
ST  2   1            ; 5959
RTN                  ; 5960
LDF 5957             ; 5961
RTN                  ; 5962
LD  2   2            ; 5963
RTN                  ; 5964
LDF 5963             ; 5965
RTN                  ; 5966
LD  2   2            ; 5967
LD  0   0            ; 5968
ST  2   2            ; 5969
RTN                  ; 5970
LDF 5967             ; 5971
RTN                  ; 5972
LD  2   3            ; 5973
RTN                  ; 5974
LDF 5973             ; 5975
RTN                  ; 5976
LD  2   3            ; 5977
LD  0   0            ; 5978
ST  2   3            ; 5979
RTN                  ; 5980
LDF 5977             ; 5981
RTN                  ; 5982
LD  2   4            ; 5983
RTN                  ; 5984
LDF 5983             ; 5985
RTN                  ; 5986
LD  2   4            ; 5987
LD  0   0            ; 5988
ST  2   4            ; 5989
RTN                  ; 5990
LDF 5987             ; 5991
RTN                  ; 5992
LD  2   5            ; 5993
RTN                  ; 5994
LDF 5993             ; 5995
RTN                  ; 5996
LD  2   5            ; 5997
LD  0   0            ; 5998
ST  2   5            ; 5999
RTN                  ; 6000
LDF 5997             ; 6001
RTN                  ; 6002
LD  2   6            ; 6003
RTN                  ; 6004
LDF 6003             ; 6005
RTN                  ; 6006
LD  2   6            ; 6007
LD  0   0            ; 6008
ST  2   6            ; 6009
RTN                  ; 6010
LDF 6007             ; 6011
RTN                  ; 6012
LD  2   7            ; 6013
RTN                  ; 6014
LDF 6013             ; 6015
RTN                  ; 6016
LD  2   7            ; 6017
LD  0   0            ; 6018
ST  2   7            ; 6019
RTN                  ; 6020
LDF 6017             ; 6021
RTN                  ; 6022
LD  2   8            ; 6023
RTN                  ; 6024
LDF 6023             ; 6025
RTN                  ; 6026
LD  2   8            ; 6027
LD  0   0            ; 6028
ST  2   8            ; 6029
RTN                  ; 6030
LDF 6027             ; 6031
RTN                  ; 6032
LD  2   9            ; 6033
RTN                  ; 6034
LDF 6033             ; 6035
RTN                  ; 6036
LD  2   9            ; 6037
LD  0   0            ; 6038
ST  2   9            ; 6039
RTN                  ; 6040
LDF 6037             ; 6041
RTN                  ; 6042
LD  2   10           ; 6043
RTN                  ; 6044
LDF 6043             ; 6045
RTN                  ; 6046
LD  2   10           ; 6047
LD  0   0            ; 6048
ST  2   10           ; 6049
RTN                  ; 6050
LDF 6047             ; 6051
RTN                  ; 6052
LD  2   11           ; 6053
RTN                  ; 6054
LDF 6053             ; 6055
RTN                  ; 6056
LD  2   11           ; 6057
LD  0   0            ; 6058
ST  2   11           ; 6059
RTN                  ; 6060
LDF 6057             ; 6061
RTN                  ; 6062
LD  2   12           ; 6063
RTN                  ; 6064
LDF 6063             ; 6065
RTN                  ; 6066
LD  2   12           ; 6067
LD  0   0            ; 6068
ST  2   12           ; 6069
RTN                  ; 6070
LDF 6067             ; 6071
RTN                  ; 6072
LD  2   13           ; 6073
RTN                  ; 6074
LDF 6073             ; 6075
RTN                  ; 6076
LD  2   13           ; 6077
LD  0   0            ; 6078
ST  2   13           ; 6079
RTN                  ; 6080
LDF 6077             ; 6081
RTN                  ; 6082
LD  2   14           ; 6083
RTN                  ; 6084
LDF 6083             ; 6085
RTN                  ; 6086
LD  2   14           ; 6087
LD  0   0            ; 6088
ST  2   14           ; 6089
RTN                  ; 6090
LDF 6087             ; 6091
RTN                  ; 6092
LD  2   15           ; 6093
RTN                  ; 6094
LDF 6093             ; 6095
RTN                  ; 6096
LD  2   15           ; 6097
LD  0   0            ; 6098
ST  2   15           ; 6099
RTN                  ; 6100
LDF 6097             ; 6101
RTN                  ; 6102
LD  2   16           ; 6103
RTN                  ; 6104
LDF 6103             ; 6105
RTN                  ; 6106
LD  2   16           ; 6107
LD  0   0            ; 6108
ST  2   16           ; 6109
RTN                  ; 6110
LDF 6107             ; 6111
RTN                  ; 6112
LD  2   17           ; 6113
RTN                  ; 6114
LDF 6113             ; 6115
RTN                  ; 6116
LD  2   17           ; 6117
LD  0   0            ; 6118
ST  2   17           ; 6119
RTN                  ; 6120
LDF 6117             ; 6121
RTN                  ; 6122
LD  2   18           ; 6123
RTN                  ; 6124
LDF 6123             ; 6125
RTN                  ; 6126
LD  2   18           ; 6127
LD  0   0            ; 6128
ST  2   18           ; 6129
RTN                  ; 6130
LDF 6127             ; 6131
RTN                  ; 6132
LD  2   19           ; 6133
RTN                  ; 6134
LDF 6133             ; 6135
RTN                  ; 6136
LD  2   19           ; 6137
LD  0   0            ; 6138
ST  2   19           ; 6139
RTN                  ; 6140
LDF 6137             ; 6141
RTN                  ; 6142
LD  2   20           ; 6143
RTN                  ; 6144
LDF 6143             ; 6145
RTN                  ; 6146
LD  2   20           ; 6147
LD  0   0            ; 6148
ST  2   20           ; 6149
RTN                  ; 6150
LDF 6147             ; 6151
RTN                  ; 6152
LD  2   21           ; 6153
RTN                  ; 6154
LDF 6153             ; 6155
RTN                  ; 6156
LD  2   21           ; 6157
LD  0   0            ; 6158
ST  2   21           ; 6159
RTN                  ; 6160
LDF 6157             ; 6161
RTN                  ; 6162
LD  2   22           ; 6163
RTN                  ; 6164
LDF 6163             ; 6165
RTN                  ; 6166
LD  2   22           ; 6167
LD  0   0            ; 6168
ST  2   22           ; 6169
RTN                  ; 6170
LDF 6167             ; 6171
RTN                  ; 6172
LD  2   23           ; 6173
RTN                  ; 6174
LDF 6173             ; 6175
RTN                  ; 6176
LD  2   23           ; 6177
LD  0   0            ; 6178
ST  2   23           ; 6179
RTN                  ; 6180
LDF 6177             ; 6181
RTN                  ; 6182
LD  2   24           ; 6183
RTN                  ; 6184
LDF 6183             ; 6185
RTN                  ; 6186
LD  2   24           ; 6187
LD  0   0            ; 6188
ST  2   24           ; 6189
RTN                  ; 6190
LDF 6187             ; 6191
RTN                  ; 6192
LD  2   25           ; 6193
RTN                  ; 6194
LDF 6193             ; 6195
RTN                  ; 6196
LD  2   25           ; 6197
LD  0   0            ; 6198
ST  2   25           ; 6199
RTN                  ; 6200
LDF 6197             ; 6201
RTN                  ; 6202
LD  2   26           ; 6203
RTN                  ; 6204
LDF 6203             ; 6205
RTN                  ; 6206
LD  2   26           ; 6207
LD  0   0            ; 6208
ST  2   26           ; 6209
RTN                  ; 6210
LDF 6207             ; 6211
RTN                  ; 6212
LD  2   27           ; 6213
RTN                  ; 6214
LDF 6213             ; 6215
RTN                  ; 6216
LD  2   27           ; 6217
LD  0   0            ; 6218
ST  2   27           ; 6219
RTN                  ; 6220
LDF 6217             ; 6221
RTN                  ; 6222
LD  2   28           ; 6223
RTN                  ; 6224
LDF 6223             ; 6225
RTN                  ; 6226
LD  2   28           ; 6227
LD  0   0            ; 6228
ST  2   28           ; 6229
RTN                  ; 6230
LDF 6227             ; 6231
RTN                  ; 6232
LD  2   29           ; 6233
RTN                  ; 6234
LDF 6233             ; 6235
RTN                  ; 6236
LD  2   29           ; 6237
LD  0   0            ; 6238
ST  2   29           ; 6239
RTN                  ; 6240
LDF 6237             ; 6241
RTN                  ; 6242
LD  2   30           ; 6243
RTN                  ; 6244
LDF 6243             ; 6245
RTN                  ; 6246
LD  2   30           ; 6247
LD  0   0            ; 6248
ST  2   30           ; 6249
RTN                  ; 6250
LDF 6247             ; 6251
RTN                  ; 6252
LD  2   31           ; 6253
RTN                  ; 6254
LDF 6253             ; 6255
RTN                  ; 6256
LD  2   31           ; 6257
LD  0   0            ; 6258
ST  2   31           ; 6259
RTN                  ; 6260
LDF 6257             ; 6261
RTN                  ; 6262
LD  2   32           ; 6263
RTN                  ; 6264
LDF 6263             ; 6265
RTN                  ; 6266
LD  2   32           ; 6267
LD  0   0            ; 6268
ST  2   32           ; 6269
RTN                  ; 6270
LDF 6267             ; 6271
RTN                  ; 6272
LD  2   33           ; 6273
RTN                  ; 6274
LDF 6273             ; 6275
RTN                  ; 6276
LD  2   33           ; 6277
LD  0   0            ; 6278
ST  2   33           ; 6279
RTN                  ; 6280
LDF 6277             ; 6281
RTN                  ; 6282
LD  2   34           ; 6283
RTN                  ; 6284
LDF 6283             ; 6285
RTN                  ; 6286
LD  2   34           ; 6287
LD  0   0            ; 6288
ST  2   34           ; 6289
RTN                  ; 6290
LDF 6287             ; 6291
RTN                  ; 6292
LD  2   35           ; 6293
RTN                  ; 6294
LDF 6293             ; 6295
RTN                  ; 6296
LD  2   35           ; 6297
LD  0   0            ; 6298
ST  2   35           ; 6299
RTN                  ; 6300
LDF 6297             ; 6301
RTN                  ; 6302
LD  2   36           ; 6303
RTN                  ; 6304
LDF 6303             ; 6305
RTN                  ; 6306
LD  2   36           ; 6307
LD  0   0            ; 6308
ST  2   36           ; 6309
RTN                  ; 6310
LDF 6307             ; 6311
RTN                  ; 6312
LD  2   37           ; 6313
RTN                  ; 6314
LDF 6313             ; 6315
RTN                  ; 6316
LD  2   37           ; 6317
LD  0   0            ; 6318
ST  2   37           ; 6319
RTN                  ; 6320
LDF 6317             ; 6321
RTN                  ; 6322
LD  2   38           ; 6323
RTN                  ; 6324
LDF 6323             ; 6325
RTN                  ; 6326
LD  2   38           ; 6327
LD  0   0            ; 6328
ST  2   38           ; 6329
RTN                  ; 6330
LDF 6327             ; 6331
RTN                  ; 6332
LD  2   39           ; 6333
RTN                  ; 6334
LDF 6333             ; 6335
RTN                  ; 6336
LD  2   39           ; 6337
LD  0   0            ; 6338
ST  2   39           ; 6339
RTN                  ; 6340
LDF 6337             ; 6341
RTN                  ; 6342
LD  2   40           ; 6343
RTN                  ; 6344
LDF 6343             ; 6345
RTN                  ; 6346
LD  2   40           ; 6347
LD  0   0            ; 6348
ST  2   40           ; 6349
RTN                  ; 6350
LDF 6347             ; 6351
RTN                  ; 6352
LD  2   41           ; 6353
RTN                  ; 6354
LDF 6353             ; 6355
RTN                  ; 6356
LD  2   41           ; 6357
LD  0   0            ; 6358
ST  2   41           ; 6359
RTN                  ; 6360
LDF 6357             ; 6361
RTN                  ; 6362
LD  2   42           ; 6363
RTN                  ; 6364
LDF 6363             ; 6365
RTN                  ; 6366
LD  2   42           ; 6367
LD  0   0            ; 6368
ST  2   42           ; 6369
RTN                  ; 6370
LDF 6367             ; 6371
RTN                  ; 6372
LD  2   43           ; 6373
RTN                  ; 6374
LDF 6373             ; 6375
RTN                  ; 6376
LD  2   43           ; 6377
LD  0   0            ; 6378
ST  2   43           ; 6379
RTN                  ; 6380
LDF 6377             ; 6381
RTN                  ; 6382
LD  2   44           ; 6383
RTN                  ; 6384
LDF 6383             ; 6385
RTN                  ; 6386
LD  2   44           ; 6387
LD  0   0            ; 6388
ST  2   44           ; 6389
RTN                  ; 6390
LDF 6387             ; 6391
RTN                  ; 6392
LD  2   45           ; 6393
RTN                  ; 6394
LDF 6393             ; 6395
RTN                  ; 6396
LD  2   45           ; 6397
LD  0   0            ; 6398
ST  2   45           ; 6399
RTN                  ; 6400
LDF 6397             ; 6401
RTN                  ; 6402
LD  2   46           ; 6403
RTN                  ; 6404
LDF 6403             ; 6405
RTN                  ; 6406
LD  2   46           ; 6407
LD  0   0            ; 6408
ST  2   46           ; 6409
RTN                  ; 6410
LDF 6407             ; 6411
RTN                  ; 6412
LD  2   47           ; 6413
RTN                  ; 6414
LDF 6413             ; 6415
RTN                  ; 6416
LD  2   47           ; 6417
LD  0   0            ; 6418
ST  2   47           ; 6419
RTN                  ; 6420
LDF 6417             ; 6421
RTN                  ; 6422
LD  2   48           ; 6423
RTN                  ; 6424
LDF 6423             ; 6425
RTN                  ; 6426
LD  2   48           ; 6427
LD  0   0            ; 6428
ST  2   48           ; 6429
RTN                  ; 6430
LDF 6427             ; 6431
RTN                  ; 6432
LD  2   49           ; 6433
RTN                  ; 6434
LDF 6433             ; 6435
RTN                  ; 6436
LD  2   49           ; 6437
LD  0   0            ; 6438
ST  2   49           ; 6439
RTN                  ; 6440
LDF 6437             ; 6441
RTN                  ; 6442
LD  2   50           ; 6443
RTN                  ; 6444
LDF 6443             ; 6445
RTN                  ; 6446
LD  2   50           ; 6447
LD  0   0            ; 6448
ST  2   50           ; 6449
RTN                  ; 6450
LDF 6447             ; 6451
RTN                  ; 6452
LD  2   51           ; 6453
RTN                  ; 6454
LDF 6453             ; 6455
RTN                  ; 6456
LD  2   51           ; 6457
LD  0   0            ; 6458
ST  2   51           ; 6459
RTN                  ; 6460
LDF 6457             ; 6461
RTN                  ; 6462
LD  2   52           ; 6463
RTN                  ; 6464
LDF 6463             ; 6465
RTN                  ; 6466
LD  2   52           ; 6467
LD  0   0            ; 6468
ST  2   52           ; 6469
RTN                  ; 6470
LDF 6467             ; 6471
RTN                  ; 6472
LD  2   53           ; 6473
RTN                  ; 6474
LDF 6473             ; 6475
RTN                  ; 6476
LD  2   53           ; 6477
LD  0   0            ; 6478
ST  2   53           ; 6479
RTN                  ; 6480
LDF 6477             ; 6481
RTN                  ; 6482
LD  2   54           ; 6483
RTN                  ; 6484
LDF 6483             ; 6485
RTN                  ; 6486
LD  2   54           ; 6487
LD  0   0            ; 6488
ST  2   54           ; 6489
RTN                  ; 6490
LDF 6487             ; 6491
RTN                  ; 6492
LD  2   55           ; 6493
RTN                  ; 6494
LDF 6493             ; 6495
RTN                  ; 6496
LD  2   55           ; 6497
LD  0   0            ; 6498
ST  2   55           ; 6499
RTN                  ; 6500
LDF 6497             ; 6501
RTN                  ; 6502
LD  2   56           ; 6503
RTN                  ; 6504
LDF 6503             ; 6505
RTN                  ; 6506
LD  2   56           ; 6507
LD  0   0            ; 6508
ST  2   56           ; 6509
RTN                  ; 6510
LDF 6507             ; 6511
RTN                  ; 6512
LD  2   57           ; 6513
RTN                  ; 6514
LDF 6513             ; 6515
RTN                  ; 6516
LD  2   57           ; 6517
LD  0   0            ; 6518
ST  2   57           ; 6519
RTN                  ; 6520
LDF 6517             ; 6521
RTN                  ; 6522
LD  2   58           ; 6523
RTN                  ; 6524
LDF 6523             ; 6525
RTN                  ; 6526
LD  2   58           ; 6527
LD  0   0            ; 6528
ST  2   58           ; 6529
RTN                  ; 6530
LDF 6527             ; 6531
RTN                  ; 6532
LD  2   59           ; 6533
RTN                  ; 6534
LDF 6533             ; 6535
RTN                  ; 6536
LD  2   59           ; 6537
LD  0   0            ; 6538
ST  2   59           ; 6539
RTN                  ; 6540
LDF 6537             ; 6541
RTN                  ; 6542
LD  2   60           ; 6543
RTN                  ; 6544
LDF 6543             ; 6545
RTN                  ; 6546
LD  2   60           ; 6547
LD  0   0            ; 6548
ST  2   60           ; 6549
RTN                  ; 6550
LDF 6547             ; 6551
RTN                  ; 6552
LD  2   61           ; 6553
RTN                  ; 6554
LDF 6553             ; 6555
RTN                  ; 6556
LD  2   61           ; 6557
LD  0   0            ; 6558
ST  2   61           ; 6559
RTN                  ; 6560
LDF 6557             ; 6561
RTN                  ; 6562
LD  2   62           ; 6563
RTN                  ; 6564
LDF 6563             ; 6565
RTN                  ; 6566
LD  2   62           ; 6567
LD  0   0            ; 6568
ST  2   62           ; 6569
RTN                  ; 6570
LDF 6567             ; 6571
RTN                  ; 6572
LD  2   63           ; 6573
RTN                  ; 6574
LDF 6573             ; 6575
RTN                  ; 6576
LD  2   63           ; 6577
LD  0   0            ; 6578
ST  2   63           ; 6579
RTN                  ; 6580
LDF 6577             ; 6581
RTN                  ; 6582
LD  2   64           ; 6583
RTN                  ; 6584
LDF 6583             ; 6585
RTN                  ; 6586
LD  2   64           ; 6587
LD  0   0            ; 6588
ST  2   64           ; 6589
RTN                  ; 6590
LDF 6587             ; 6591
RTN                  ; 6592
LD  2   65           ; 6593
RTN                  ; 6594
LDF 6593             ; 6595
RTN                  ; 6596
LD  2   65           ; 6597
LD  0   0            ; 6598
ST  2   65           ; 6599
RTN                  ; 6600
LDF 6597             ; 6601
RTN                  ; 6602
LD  2   66           ; 6603
RTN                  ; 6604
LDF 6603             ; 6605
RTN                  ; 6606
LD  2   66           ; 6607
LD  0   0            ; 6608
ST  2   66           ; 6609
RTN                  ; 6610
LDF 6607             ; 6611
RTN                  ; 6612
LD  2   67           ; 6613
RTN                  ; 6614
LDF 6613             ; 6615
RTN                  ; 6616
LD  2   67           ; 6617
LD  0   0            ; 6618
ST  2   67           ; 6619
RTN                  ; 6620
LDF 6617             ; 6621
RTN                  ; 6622
LD  2   68           ; 6623
RTN                  ; 6624
LDF 6623             ; 6625
RTN                  ; 6626
LD  2   68           ; 6627
LD  0   0            ; 6628
ST  2   68           ; 6629
RTN                  ; 6630
LDF 6627             ; 6631
RTN                  ; 6632
LD  2   69           ; 6633
RTN                  ; 6634
LDF 6633             ; 6635
RTN                  ; 6636
LD  2   69           ; 6637
LD  0   0            ; 6638
ST  2   69           ; 6639
RTN                  ; 6640
LDF 6637             ; 6641
RTN                  ; 6642
LD  2   70           ; 6643
RTN                  ; 6644
LDF 6643             ; 6645
RTN                  ; 6646
LD  2   70           ; 6647
LD  0   0            ; 6648
ST  2   70           ; 6649
RTN                  ; 6650
LDF 6647             ; 6651
RTN                  ; 6652
LD  2   71           ; 6653
RTN                  ; 6654
LDF 6653             ; 6655
RTN                  ; 6656
LD  2   71           ; 6657
LD  0   0            ; 6658
ST  2   71           ; 6659
RTN                  ; 6660
LDF 6657             ; 6661
RTN                  ; 6662
LD  2   72           ; 6663
RTN                  ; 6664
LDF 6663             ; 6665
RTN                  ; 6666
LD  2   72           ; 6667
LD  0   0            ; 6668
ST  2   72           ; 6669
RTN                  ; 6670
LDF 6667             ; 6671
RTN                  ; 6672
LD  2   73           ; 6673
RTN                  ; 6674
LDF 6673             ; 6675
RTN                  ; 6676
LD  2   73           ; 6677
LD  0   0            ; 6678
ST  2   73           ; 6679
RTN                  ; 6680
LDF 6677             ; 6681
RTN                  ; 6682
LD  2   74           ; 6683
RTN                  ; 6684
LDF 6683             ; 6685
RTN                  ; 6686
LD  2   74           ; 6687
LD  0   0            ; 6688
ST  2   74           ; 6689
RTN                  ; 6690
LDF 6687             ; 6691
RTN                  ; 6692
LD  2   75           ; 6693
RTN                  ; 6694
LDF 6693             ; 6695
RTN                  ; 6696
LD  2   75           ; 6697
LD  0   0            ; 6698
ST  2   75           ; 6699
RTN                  ; 6700
LDF 6697             ; 6701
RTN                  ; 6702
LD  2   76           ; 6703
RTN                  ; 6704
LDF 6703             ; 6705
RTN                  ; 6706
LD  2   76           ; 6707
LD  0   0            ; 6708
ST  2   76           ; 6709
RTN                  ; 6710
LDF 6707             ; 6711
RTN                  ; 6712
LD  2   77           ; 6713
RTN                  ; 6714
LDF 6713             ; 6715
RTN                  ; 6716
LD  2   77           ; 6717
LD  0   0            ; 6718
ST  2   77           ; 6719
RTN                  ; 6720
LDF 6717             ; 6721
RTN                  ; 6722
LD  2   78           ; 6723
RTN                  ; 6724
LDF 6723             ; 6725
RTN                  ; 6726
LD  2   78           ; 6727
LD  0   0            ; 6728
ST  2   78           ; 6729
RTN                  ; 6730
LDF 6727             ; 6731
RTN                  ; 6732
LD  2   79           ; 6733
RTN                  ; 6734
LDF 6733             ; 6735
RTN                  ; 6736
LD  2   79           ; 6737
LD  0   0            ; 6738
ST  2   79           ; 6739
RTN                  ; 6740
LDF 6737             ; 6741
RTN                  ; 6742
LD  2   80           ; 6743
RTN                  ; 6744
LDF 6743             ; 6745
RTN                  ; 6746
LD  2   80           ; 6747
LD  0   0            ; 6748
ST  2   80           ; 6749
RTN                  ; 6750
LDF 6747             ; 6751
RTN                  ; 6752
LD  2   81           ; 6753
RTN                  ; 6754
LDF 6753             ; 6755
RTN                  ; 6756
LD  2   81           ; 6757
LD  0   0            ; 6758
ST  2   81           ; 6759
RTN                  ; 6760
LDF 6757             ; 6761
RTN                  ; 6762
LD  2   82           ; 6763
RTN                  ; 6764
LDF 6763             ; 6765
RTN                  ; 6766
LD  2   82           ; 6767
LD  0   0            ; 6768
ST  2   82           ; 6769
RTN                  ; 6770
LDF 6767             ; 6771
RTN                  ; 6772
LD  2   83           ; 6773
RTN                  ; 6774
LDF 6773             ; 6775
RTN                  ; 6776
LD  2   83           ; 6777
LD  0   0            ; 6778
ST  2   83           ; 6779
RTN                  ; 6780
LDF 6777             ; 6781
RTN                  ; 6782
LD  2   84           ; 6783
RTN                  ; 6784
LDF 6783             ; 6785
RTN                  ; 6786
LD  2   84           ; 6787
LD  0   0            ; 6788
ST  2   84           ; 6789
RTN                  ; 6790
LDF 6787             ; 6791
RTN                  ; 6792
LD  2   85           ; 6793
RTN                  ; 6794
LDF 6793             ; 6795
RTN                  ; 6796
LD  2   85           ; 6797
LD  0   0            ; 6798
ST  2   85           ; 6799
RTN                  ; 6800
LDF 6797             ; 6801
RTN                  ; 6802
LD  2   86           ; 6803
RTN                  ; 6804
LDF 6803             ; 6805
RTN                  ; 6806
LD  2   86           ; 6807
LD  0   0            ; 6808
ST  2   86           ; 6809
RTN                  ; 6810
LDF 6807             ; 6811
RTN                  ; 6812
LD  2   87           ; 6813
RTN                  ; 6814
LDF 6813             ; 6815
RTN                  ; 6816
LD  2   87           ; 6817
LD  0   0            ; 6818
ST  2   87           ; 6819
RTN                  ; 6820
LDF 6817             ; 6821
RTN                  ; 6822
LD  2   88           ; 6823
RTN                  ; 6824
LDF 6823             ; 6825
RTN                  ; 6826
LD  2   88           ; 6827
LD  0   0            ; 6828
ST  2   88           ; 6829
RTN                  ; 6830
LDF 6827             ; 6831
RTN                  ; 6832
LD  2   89           ; 6833
RTN                  ; 6834
LDF 6833             ; 6835
RTN                  ; 6836
LD  2   89           ; 6837
LD  0   0            ; 6838
ST  2   89           ; 6839
RTN                  ; 6840
LDF 6837             ; 6841
RTN                  ; 6842
LD  2   90           ; 6843
RTN                  ; 6844
LDF 6843             ; 6845
RTN                  ; 6846
LD  2   90           ; 6847
LD  0   0            ; 6848
ST  2   90           ; 6849
RTN                  ; 6850
LDF 6847             ; 6851
RTN                  ; 6852
LD  2   91           ; 6853
RTN                  ; 6854
LDF 6853             ; 6855
RTN                  ; 6856
LD  2   91           ; 6857
LD  0   0            ; 6858
ST  2   91           ; 6859
RTN                  ; 6860
LDF 6857             ; 6861
RTN                  ; 6862
LD  2   92           ; 6863
RTN                  ; 6864
LDF 6863             ; 6865
RTN                  ; 6866
LD  2   92           ; 6867
LD  0   0            ; 6868
ST  2   92           ; 6869
RTN                  ; 6870
LDF 6867             ; 6871
RTN                  ; 6872
LD  2   93           ; 6873
RTN                  ; 6874
LDF 6873             ; 6875
RTN                  ; 6876
LD  2   93           ; 6877
LD  0   0            ; 6878
ST  2   93           ; 6879
RTN                  ; 6880
LDF 6877             ; 6881
RTN                  ; 6882
LD  2   94           ; 6883
RTN                  ; 6884
LDF 6883             ; 6885
RTN                  ; 6886
LD  2   94           ; 6887
LD  0   0            ; 6888
ST  2   94           ; 6889
RTN                  ; 6890
LDF 6887             ; 6891
RTN                  ; 6892
LD  2   95           ; 6893
RTN                  ; 6894
LDF 6893             ; 6895
RTN                  ; 6896
LD  2   95           ; 6897
LD  0   0            ; 6898
ST  2   95           ; 6899
RTN                  ; 6900
LDF 6897             ; 6901
RTN                  ; 6902
LD  2   96           ; 6903
RTN                  ; 6904
LDF 6903             ; 6905
RTN                  ; 6906
LD  2   96           ; 6907
LD  0   0            ; 6908
ST  2   96           ; 6909
RTN                  ; 6910
LDF 6907             ; 6911
RTN                  ; 6912
LD  2   97           ; 6913
RTN                  ; 6914
LDF 6913             ; 6915
RTN                  ; 6916
LD  2   97           ; 6917
LD  0   0            ; 6918
ST  2   97           ; 6919
RTN                  ; 6920
LDF 6917             ; 6921
RTN                  ; 6922
LD  2   98           ; 6923
RTN                  ; 6924
LDF 6923             ; 6925
RTN                  ; 6926
LD  2   98           ; 6927
LD  0   0            ; 6928
ST  2   98           ; 6929
RTN                  ; 6930
LDF 6927             ; 6931
RTN                  ; 6932
LD  2   99           ; 6933
RTN                  ; 6934
LDF 6933             ; 6935
RTN                  ; 6936
LD  2   99           ; 6937
LD  0   0            ; 6938
ST  2   99           ; 6939
RTN                  ; 6940
LDF 6937             ; 6941
RTN                  ; 6942
LD  2   100          ; 6943
RTN                  ; 6944
LDF 6943             ; 6945
RTN                  ; 6946
LD  2   100          ; 6947
LD  0   0            ; 6948
ST  2   100          ; 6949
RTN                  ; 6950
LDF 6947             ; 6951
RTN                  ; 6952
LD  2   101          ; 6953
RTN                  ; 6954
LDF 6953             ; 6955
RTN                  ; 6956
LD  2   101          ; 6957
LD  0   0            ; 6958
ST  2   101          ; 6959
RTN                  ; 6960
LDF 6957             ; 6961
RTN                  ; 6962
LD  2   102          ; 6963
RTN                  ; 6964
LDF 6963             ; 6965
RTN                  ; 6966
LD  2   102          ; 6967
LD  0   0            ; 6968
ST  2   102          ; 6969
RTN                  ; 6970
LDF 6967             ; 6971
RTN                  ; 6972
LD  2   103          ; 6973
RTN                  ; 6974
LDF 6973             ; 6975
RTN                  ; 6976
LD  2   103          ; 6977
LD  0   0            ; 6978
ST  2   103          ; 6979
RTN                  ; 6980
LDF 6977             ; 6981
RTN                  ; 6982
LD  2   104          ; 6983
RTN                  ; 6984
LDF 6983             ; 6985
RTN                  ; 6986
LD  2   104          ; 6987
LD  0   0            ; 6988
ST  2   104          ; 6989
RTN                  ; 6990
LDF 6987             ; 6991
RTN                  ; 6992
LD  2   105          ; 6993
RTN                  ; 6994
LDF 6993             ; 6995
RTN                  ; 6996
LD  2   105          ; 6997
LD  0   0            ; 6998
ST  2   105          ; 6999
RTN                  ; 7000
LDF 6997             ; 7001
RTN                  ; 7002
LD  2   106          ; 7003
RTN                  ; 7004
LDF 7003             ; 7005
RTN                  ; 7006
LD  2   106          ; 7007
LD  0   0            ; 7008
ST  2   106          ; 7009
RTN                  ; 7010
LDF 7007             ; 7011
RTN                  ; 7012
LD  2   107          ; 7013
RTN                  ; 7014
LDF 7013             ; 7015
RTN                  ; 7016
LD  2   107          ; 7017
LD  0   0            ; 7018
ST  2   107          ; 7019
RTN                  ; 7020
LDF 7017             ; 7021
RTN                  ; 7022
LD  2   108          ; 7023
RTN                  ; 7024
LDF 7023             ; 7025
RTN                  ; 7026
LD  2   108          ; 7027
LD  0   0            ; 7028
ST  2   108          ; 7029
RTN                  ; 7030
LDF 7027             ; 7031
RTN                  ; 7032
LD  2   109          ; 7033
RTN                  ; 7034
LDF 7033             ; 7035
RTN                  ; 7036
LD  2   109          ; 7037
LD  0   0            ; 7038
ST  2   109          ; 7039
RTN                  ; 7040
LDF 7037             ; 7041
RTN                  ; 7042
LD  2   110          ; 7043
RTN                  ; 7044
LDF 7043             ; 7045
RTN                  ; 7046
LD  2   110          ; 7047
LD  0   0            ; 7048
ST  2   110          ; 7049
RTN                  ; 7050
LDF 7047             ; 7051
RTN                  ; 7052
LD  2   111          ; 7053
RTN                  ; 7054
LDF 7053             ; 7055
RTN                  ; 7056
LD  2   111          ; 7057
LD  0   0            ; 7058
ST  2   111          ; 7059
RTN                  ; 7060
LDF 7057             ; 7061
RTN                  ; 7062
LD  2   112          ; 7063
RTN                  ; 7064
LDF 7063             ; 7065
RTN                  ; 7066
LD  2   112          ; 7067
LD  0   0            ; 7068
ST  2   112          ; 7069
RTN                  ; 7070
LDF 7067             ; 7071
RTN                  ; 7072
LD  2   113          ; 7073
RTN                  ; 7074
LDF 7073             ; 7075
RTN                  ; 7076
LD  2   113          ; 7077
LD  0   0            ; 7078
ST  2   113          ; 7079
RTN                  ; 7080
LDF 7077             ; 7081
RTN                  ; 7082
LD  2   114          ; 7083
RTN                  ; 7084
LDF 7083             ; 7085
RTN                  ; 7086
LD  2   114          ; 7087
LD  0   0            ; 7088
ST  2   114          ; 7089
RTN                  ; 7090
LDF 7087             ; 7091
RTN                  ; 7092
LD  2   115          ; 7093
RTN                  ; 7094
LDF 7093             ; 7095
RTN                  ; 7096
LD  2   115          ; 7097
LD  0   0            ; 7098
ST  2   115          ; 7099
RTN                  ; 7100
LDF 7097             ; 7101
RTN                  ; 7102
LD  2   116          ; 7103
RTN                  ; 7104
LDF 7103             ; 7105
RTN                  ; 7106
LD  2   116          ; 7107
LD  0   0            ; 7108
ST  2   116          ; 7109
RTN                  ; 7110
LDF 7107             ; 7111
RTN                  ; 7112
LD  2   117          ; 7113
RTN                  ; 7114
LDF 7113             ; 7115
RTN                  ; 7116
LD  2   117          ; 7117
LD  0   0            ; 7118
ST  2   117          ; 7119
RTN                  ; 7120
LDF 7117             ; 7121
RTN                  ; 7122
LD  2   118          ; 7123
RTN                  ; 7124
LDF 7123             ; 7125
RTN                  ; 7126
LD  2   118          ; 7127
LD  0   0            ; 7128
ST  2   118          ; 7129
RTN                  ; 7130
LDF 7127             ; 7131
RTN                  ; 7132
LD  2   119          ; 7133
RTN                  ; 7134
LDF 7133             ; 7135
RTN                  ; 7136
LD  2   119          ; 7137
LD  0   0            ; 7138
ST  2   119          ; 7139
RTN                  ; 7140
LDF 7137             ; 7141
RTN                  ; 7142
LD  2   120          ; 7143
RTN                  ; 7144
LDF 7143             ; 7145
RTN                  ; 7146
LD  2   120          ; 7147
LD  0   0            ; 7148
ST  2   120          ; 7149
RTN                  ; 7150
LDF 7147             ; 7151
RTN                  ; 7152
LD  2   121          ; 7153
RTN                  ; 7154
LDF 7153             ; 7155
RTN                  ; 7156
LD  2   121          ; 7157
LD  0   0            ; 7158
ST  2   121          ; 7159
RTN                  ; 7160
LDF 7157             ; 7161
RTN                  ; 7162
LD  2   122          ; 7163
RTN                  ; 7164
LDF 7163             ; 7165
RTN                  ; 7166
LD  2   122          ; 7167
LD  0   0            ; 7168
ST  2   122          ; 7169
RTN                  ; 7170
LDF 7167             ; 7171
RTN                  ; 7172
LD  2   123          ; 7173
RTN                  ; 7174
LDF 7173             ; 7175
RTN                  ; 7176
LD  2   123          ; 7177
LD  0   0            ; 7178
ST  2   123          ; 7179
RTN                  ; 7180
LDF 7177             ; 7181
RTN                  ; 7182
LD  2   124          ; 7183
RTN                  ; 7184
LDF 7183             ; 7185
RTN                  ; 7186
LD  2   124          ; 7187
LD  0   0            ; 7188
ST  2   124          ; 7189
RTN                  ; 7190
LDF 7187             ; 7191
RTN                  ; 7192
LD  2   125          ; 7193
RTN                  ; 7194
LDF 7193             ; 7195
RTN                  ; 7196
LD  2   125          ; 7197
LD  0   0            ; 7198
ST  2   125          ; 7199
RTN                  ; 7200
LDF 7197             ; 7201
RTN                  ; 7202
LD  2   126          ; 7203
RTN                  ; 7204
LDF 7203             ; 7205
RTN                  ; 7206
LD  2   126          ; 7207
LD  0   0            ; 7208
ST  2   126          ; 7209
RTN                  ; 7210
LDF 7207             ; 7211
RTN                  ; 7212
LD  2   127          ; 7213
RTN                  ; 7214
LDF 7213             ; 7215
RTN                  ; 7216
LD  2   127          ; 7217
LD  0   0            ; 7218
ST  2   127          ; 7219
RTN                  ; 7220
LDF 7217             ; 7221
RTN                  ; 7222
LD  2   128          ; 7223
RTN                  ; 7224
LDF 7223             ; 7225
RTN                  ; 7226
LD  2   128          ; 7227
LD  0   0            ; 7228
ST  2   128          ; 7229
RTN                  ; 7230
LDF 7227             ; 7231
RTN                  ; 7232
LD  2   129          ; 7233
RTN                  ; 7234
LDF 7233             ; 7235
RTN                  ; 7236
LD  2   129          ; 7237
LD  0   0            ; 7238
ST  2   129          ; 7239
RTN                  ; 7240
LDF 7237             ; 7241
RTN                  ; 7242
LD  2   130          ; 7243
RTN                  ; 7244
LDF 7243             ; 7245
RTN                  ; 7246
LD  2   130          ; 7247
LD  0   0            ; 7248
ST  2   130          ; 7249
RTN                  ; 7250
LDF 7247             ; 7251
RTN                  ; 7252
LD  2   131          ; 7253
RTN                  ; 7254
LDF 7253             ; 7255
RTN                  ; 7256
LD  2   131          ; 7257
LD  0   0            ; 7258
ST  2   131          ; 7259
RTN                  ; 7260
LDF 7257             ; 7261
RTN                  ; 7262
LD  2   132          ; 7263
RTN                  ; 7264
LDF 7263             ; 7265
RTN                  ; 7266
LD  2   132          ; 7267
LD  0   0            ; 7268
ST  2   132          ; 7269
RTN                  ; 7270
LDF 7267             ; 7271
RTN                  ; 7272
LD  2   133          ; 7273
RTN                  ; 7274
LDF 7273             ; 7275
RTN                  ; 7276
LD  2   133          ; 7277
LD  0   0            ; 7278
ST  2   133          ; 7279
RTN                  ; 7280
LDF 7277             ; 7281
RTN                  ; 7282
LD  2   134          ; 7283
RTN                  ; 7284
LDF 7283             ; 7285
RTN                  ; 7286
LD  2   134          ; 7287
LD  0   0            ; 7288
ST  2   134          ; 7289
RTN                  ; 7290
LDF 7287             ; 7291
RTN                  ; 7292
LD  2   135          ; 7293
RTN                  ; 7294
LDF 7293             ; 7295
RTN                  ; 7296
LD  2   135          ; 7297
LD  0   0            ; 7298
ST  2   135          ; 7299
RTN                  ; 7300
LDF 7297             ; 7301
RTN                  ; 7302
LD  2   136          ; 7303
RTN                  ; 7304
LDF 7303             ; 7305
RTN                  ; 7306
LD  2   136          ; 7307
LD  0   0            ; 7308
ST  2   136          ; 7309
RTN                  ; 7310
LDF 7307             ; 7311
RTN                  ; 7312
LD  2   137          ; 7313
RTN                  ; 7314
LDF 7313             ; 7315
RTN                  ; 7316
LD  2   137          ; 7317
LD  0   0            ; 7318
ST  2   137          ; 7319
RTN                  ; 7320
LDF 7317             ; 7321
RTN                  ; 7322
LD  2   138          ; 7323
RTN                  ; 7324
LDF 7323             ; 7325
RTN                  ; 7326
LD  2   138          ; 7327
LD  0   0            ; 7328
ST  2   138          ; 7329
RTN                  ; 7330
LDF 7327             ; 7331
RTN                  ; 7332
LD  2   139          ; 7333
RTN                  ; 7334
LDF 7333             ; 7335
RTN                  ; 7336
LD  2   139          ; 7337
LD  0   0            ; 7338
ST  2   139          ; 7339
RTN                  ; 7340
LDF 7337             ; 7341
RTN                  ; 7342
LD  2   140          ; 7343
RTN                  ; 7344
LDF 7343             ; 7345
RTN                  ; 7346
LD  2   140          ; 7347
LD  0   0            ; 7348
ST  2   140          ; 7349
RTN                  ; 7350
LDF 7347             ; 7351
RTN                  ; 7352
LD  2   141          ; 7353
RTN                  ; 7354
LDF 7353             ; 7355
RTN                  ; 7356
LD  2   141          ; 7357
LD  0   0            ; 7358
ST  2   141          ; 7359
RTN                  ; 7360
LDF 7357             ; 7361
RTN                  ; 7362
LD  2   142          ; 7363
RTN                  ; 7364
LDF 7363             ; 7365
RTN                  ; 7366
LD  2   142          ; 7367
LD  0   0            ; 7368
ST  2   142          ; 7369
RTN                  ; 7370
LDF 7367             ; 7371
RTN                  ; 7372
LD  2   143          ; 7373
RTN                  ; 7374
LDF 7373             ; 7375
RTN                  ; 7376
LD  2   143          ; 7377
LD  0   0            ; 7378
ST  2   143          ; 7379
RTN                  ; 7380
LDF 7377             ; 7381
RTN                  ; 7382
LD  2   144          ; 7383
RTN                  ; 7384
LDF 7383             ; 7385
RTN                  ; 7386
LD  2   144          ; 7387
LD  0   0            ; 7388
ST  2   144          ; 7389
RTN                  ; 7390
LDF 7387             ; 7391
RTN                  ; 7392
LD  2   145          ; 7393
RTN                  ; 7394
LDF 7393             ; 7395
RTN                  ; 7396
LD  2   145          ; 7397
LD  0   0            ; 7398
ST  2   145          ; 7399
RTN                  ; 7400
LDF 7397             ; 7401
RTN                  ; 7402
LD  2   146          ; 7403
RTN                  ; 7404
LDF 7403             ; 7405
RTN                  ; 7406
LD  2   146          ; 7407
LD  0   0            ; 7408
ST  2   146          ; 7409
RTN                  ; 7410
LDF 7407             ; 7411
RTN                  ; 7412
LD  2   147          ; 7413
RTN                  ; 7414
LDF 7413             ; 7415
RTN                  ; 7416
LD  2   147          ; 7417
LD  0   0            ; 7418
ST  2   147          ; 7419
RTN                  ; 7420
LDF 7417             ; 7421
RTN                  ; 7422
LD  2   148          ; 7423
RTN                  ; 7424
LDF 7423             ; 7425
RTN                  ; 7426
LD  2   148          ; 7427
LD  0   0            ; 7428
ST  2   148          ; 7429
RTN                  ; 7430
LDF 7427             ; 7431
RTN                  ; 7432
LD  2   149          ; 7433
RTN                  ; 7434
LDF 7433             ; 7435
RTN                  ; 7436
LD  2   149          ; 7437
LD  0   0            ; 7438
ST  2   149          ; 7439
RTN                  ; 7440
LDF 7437             ; 7441
RTN                  ; 7442
LD  2   150          ; 7443
RTN                  ; 7444
LDF 7443             ; 7445
RTN                  ; 7446
LD  2   150          ; 7447
LD  0   0            ; 7448
ST  2   150          ; 7449
RTN                  ; 7450
LDF 7447             ; 7451
RTN                  ; 7452
LD  2   151          ; 7453
RTN                  ; 7454
LDF 7453             ; 7455
RTN                  ; 7456
LD  2   151          ; 7457
LD  0   0            ; 7458
ST  2   151          ; 7459
RTN                  ; 7460
LDF 7457             ; 7461
RTN                  ; 7462
LD  2   152          ; 7463
RTN                  ; 7464
LDF 7463             ; 7465
RTN                  ; 7466
LD  2   152          ; 7467
LD  0   0            ; 7468
ST  2   152          ; 7469
RTN                  ; 7470
LDF 7467             ; 7471
RTN                  ; 7472
LD  2   153          ; 7473
RTN                  ; 7474
LDF 7473             ; 7475
RTN                  ; 7476
LD  2   153          ; 7477
LD  0   0            ; 7478
ST  2   153          ; 7479
RTN                  ; 7480
LDF 7477             ; 7481
RTN                  ; 7482
LD  2   154          ; 7483
RTN                  ; 7484
LDF 7483             ; 7485
RTN                  ; 7486
LD  2   154          ; 7487
LD  0   0            ; 7488
ST  2   154          ; 7489
RTN                  ; 7490
LDF 7487             ; 7491
RTN                  ; 7492
LD  2   155          ; 7493
RTN                  ; 7494
LDF 7493             ; 7495
RTN                  ; 7496
LD  2   155          ; 7497
LD  0   0            ; 7498
ST  2   155          ; 7499
RTN                  ; 7500
LDF 7497             ; 7501
RTN                  ; 7502
LD  2   156          ; 7503
RTN                  ; 7504
LDF 7503             ; 7505
RTN                  ; 7506
LD  2   156          ; 7507
LD  0   0            ; 7508
ST  2   156          ; 7509
RTN                  ; 7510
LDF 7507             ; 7511
RTN                  ; 7512
LD  2   157          ; 7513
RTN                  ; 7514
LDF 7513             ; 7515
RTN                  ; 7516
LD  2   157          ; 7517
LD  0   0            ; 7518
ST  2   157          ; 7519
RTN                  ; 7520
LDF 7517             ; 7521
RTN                  ; 7522
LD  2   158          ; 7523
RTN                  ; 7524
LDF 7523             ; 7525
RTN                  ; 7526
LD  2   158          ; 7527
LD  0   0            ; 7528
ST  2   158          ; 7529
RTN                  ; 7530
LDF 7527             ; 7531
RTN                  ; 7532
LD  2   159          ; 7533
RTN                  ; 7534
LDF 7533             ; 7535
RTN                  ; 7536
LD  2   159          ; 7537
LD  0   0            ; 7538
ST  2   159          ; 7539
RTN                  ; 7540
LDF 7537             ; 7541
RTN                  ; 7542
LD  2   160          ; 7543
RTN                  ; 7544
LDF 7543             ; 7545
RTN                  ; 7546
LD  2   160          ; 7547
LD  0   0            ; 7548
ST  2   160          ; 7549
RTN                  ; 7550
LDF 7547             ; 7551
RTN                  ; 7552
LD  2   161          ; 7553
RTN                  ; 7554
LDF 7553             ; 7555
RTN                  ; 7556
LD  2   161          ; 7557
LD  0   0            ; 7558
ST  2   161          ; 7559
RTN                  ; 7560
LDF 7557             ; 7561
RTN                  ; 7562
LD  2   162          ; 7563
RTN                  ; 7564
LDF 7563             ; 7565
RTN                  ; 7566
LD  2   162          ; 7567
LD  0   0            ; 7568
ST  2   162          ; 7569
RTN                  ; 7570
LDF 7567             ; 7571
RTN                  ; 7572
LD  2   163          ; 7573
RTN                  ; 7574
LDF 7573             ; 7575
RTN                  ; 7576
LD  2   163          ; 7577
LD  0   0            ; 7578
ST  2   163          ; 7579
RTN                  ; 7580
LDF 7577             ; 7581
RTN                  ; 7582
LD  2   164          ; 7583
RTN                  ; 7584
LDF 7583             ; 7585
RTN                  ; 7586
LD  2   164          ; 7587
LD  0   0            ; 7588
ST  2   164          ; 7589
RTN                  ; 7590
LDF 7587             ; 7591
RTN                  ; 7592
LD  2   165          ; 7593
RTN                  ; 7594
LDF 7593             ; 7595
RTN                  ; 7596
LD  2   165          ; 7597
LD  0   0            ; 7598
ST  2   165          ; 7599
RTN                  ; 7600
LDF 7597             ; 7601
RTN                  ; 7602
LD  2   166          ; 7603
RTN                  ; 7604
LDF 7603             ; 7605
RTN                  ; 7606
LD  2   166          ; 7607
LD  0   0            ; 7608
ST  2   166          ; 7609
RTN                  ; 7610
LDF 7607             ; 7611
RTN                  ; 7612
LD  2   167          ; 7613
RTN                  ; 7614
LDF 7613             ; 7615
RTN                  ; 7616
LD  2   167          ; 7617
LD  0   0            ; 7618
ST  2   167          ; 7619
RTN                  ; 7620
LDF 7617             ; 7621
RTN                  ; 7622
LD  2   168          ; 7623
RTN                  ; 7624
LDF 7623             ; 7625
RTN                  ; 7626
LD  2   168          ; 7627
LD  0   0            ; 7628
ST  2   168          ; 7629
RTN                  ; 7630
LDF 7627             ; 7631
RTN                  ; 7632
LD  2   169          ; 7633
RTN                  ; 7634
LDF 7633             ; 7635
RTN                  ; 7636
LD  2   169          ; 7637
LD  0   0            ; 7638
ST  2   169          ; 7639
RTN                  ; 7640
LDF 7637             ; 7641
RTN                  ; 7642
LD  2   170          ; 7643
RTN                  ; 7644
LDF 7643             ; 7645
RTN                  ; 7646
LD  2   170          ; 7647
LD  0   0            ; 7648
ST  2   170          ; 7649
RTN                  ; 7650
LDF 7647             ; 7651
RTN                  ; 7652
LD  2   171          ; 7653
RTN                  ; 7654
LDF 7653             ; 7655
RTN                  ; 7656
LD  2   171          ; 7657
LD  0   0            ; 7658
ST  2   171          ; 7659
RTN                  ; 7660
LDF 7657             ; 7661
RTN                  ; 7662
LD  2   172          ; 7663
RTN                  ; 7664
LDF 7663             ; 7665
RTN                  ; 7666
LD  2   172          ; 7667
LD  0   0            ; 7668
ST  2   172          ; 7669
RTN                  ; 7670
LDF 7667             ; 7671
RTN                  ; 7672
LD  2   173          ; 7673
RTN                  ; 7674
LDF 7673             ; 7675
RTN                  ; 7676
LD  2   173          ; 7677
LD  0   0            ; 7678
ST  2   173          ; 7679
RTN                  ; 7680
LDF 7677             ; 7681
RTN                  ; 7682
LD  2   174          ; 7683
RTN                  ; 7684
LDF 7683             ; 7685
RTN                  ; 7686
LD  2   174          ; 7687
LD  0   0            ; 7688
ST  2   174          ; 7689
RTN                  ; 7690
LDF 7687             ; 7691
RTN                  ; 7692
LD  2   175          ; 7693
RTN                  ; 7694
LDF 7693             ; 7695
RTN                  ; 7696
LD  2   175          ; 7697
LD  0   0            ; 7698
ST  2   175          ; 7699
RTN                  ; 7700
LDF 7697             ; 7701
RTN                  ; 7702
LD  2   176          ; 7703
RTN                  ; 7704
LDF 7703             ; 7705
RTN                  ; 7706
LD  2   176          ; 7707
LD  0   0            ; 7708
ST  2   176          ; 7709
RTN                  ; 7710
LDF 7707             ; 7711
RTN                  ; 7712
LD  2   177          ; 7713
RTN                  ; 7714
LDF 7713             ; 7715
RTN                  ; 7716
LD  2   177          ; 7717
LD  0   0            ; 7718
ST  2   177          ; 7719
RTN                  ; 7720
LDF 7717             ; 7721
RTN                  ; 7722
LD  2   178          ; 7723
RTN                  ; 7724
LDF 7723             ; 7725
RTN                  ; 7726
LD  2   178          ; 7727
LD  0   0            ; 7728
ST  2   178          ; 7729
RTN                  ; 7730
LDF 7727             ; 7731
RTN                  ; 7732
LD  2   179          ; 7733
RTN                  ; 7734
LDF 7733             ; 7735
RTN                  ; 7736
LD  2   179          ; 7737
LD  0   0            ; 7738
ST  2   179          ; 7739
RTN                  ; 7740
LDF 7737             ; 7741
RTN                  ; 7742
LD  2   180          ; 7743
RTN                  ; 7744
LDF 7743             ; 7745
RTN                  ; 7746
LD  2   180          ; 7747
LD  0   0            ; 7748
ST  2   180          ; 7749
RTN                  ; 7750
LDF 7747             ; 7751
RTN                  ; 7752
LD  2   181          ; 7753
RTN                  ; 7754
LDF 7753             ; 7755
RTN                  ; 7756
LD  2   181          ; 7757
LD  0   0            ; 7758
ST  2   181          ; 7759
RTN                  ; 7760
LDF 7757             ; 7761
RTN                  ; 7762
LD  2   182          ; 7763
RTN                  ; 7764
LDF 7763             ; 7765
RTN                  ; 7766
LD  2   182          ; 7767
LD  0   0            ; 7768
ST  2   182          ; 7769
RTN                  ; 7770
LDF 7767             ; 7771
RTN                  ; 7772
LD  2   183          ; 7773
RTN                  ; 7774
LDF 7773             ; 7775
RTN                  ; 7776
LD  2   183          ; 7777
LD  0   0            ; 7778
ST  2   183          ; 7779
RTN                  ; 7780
LDF 7777             ; 7781
RTN                  ; 7782
LD  2   184          ; 7783
RTN                  ; 7784
LDF 7783             ; 7785
RTN                  ; 7786
LD  2   184          ; 7787
LD  0   0            ; 7788
ST  2   184          ; 7789
RTN                  ; 7790
LDF 7787             ; 7791
RTN                  ; 7792
LD  2   185          ; 7793
RTN                  ; 7794
LDF 7793             ; 7795
RTN                  ; 7796
LD  2   185          ; 7797
LD  0   0            ; 7798
ST  2   185          ; 7799
RTN                  ; 7800
LDF 7797             ; 7801
RTN                  ; 7802
LD  2   186          ; 7803
RTN                  ; 7804
LDF 7803             ; 7805
RTN                  ; 7806
LD  2   186          ; 7807
LD  0   0            ; 7808
ST  2   186          ; 7809
RTN                  ; 7810
LDF 7807             ; 7811
RTN                  ; 7812
LD  2   187          ; 7813
RTN                  ; 7814
LDF 7813             ; 7815
RTN                  ; 7816
LD  2   187          ; 7817
LD  0   0            ; 7818
ST  2   187          ; 7819
RTN                  ; 7820
LDF 7817             ; 7821
RTN                  ; 7822
LD  2   188          ; 7823
RTN                  ; 7824
LDF 7823             ; 7825
RTN                  ; 7826
LD  2   188          ; 7827
LD  0   0            ; 7828
ST  2   188          ; 7829
RTN                  ; 7830
LDF 7827             ; 7831
RTN                  ; 7832
LD  2   189          ; 7833
RTN                  ; 7834
LDF 7833             ; 7835
RTN                  ; 7836
LD  2   189          ; 7837
LD  0   0            ; 7838
ST  2   189          ; 7839
RTN                  ; 7840
LDF 7837             ; 7841
RTN                  ; 7842
LD  2   190          ; 7843
RTN                  ; 7844
LDF 7843             ; 7845
RTN                  ; 7846
LD  2   190          ; 7847
LD  0   0            ; 7848
ST  2   190          ; 7849
RTN                  ; 7850
LDF 7847             ; 7851
RTN                  ; 7852
LD  2   191          ; 7853
RTN                  ; 7854
LDF 7853             ; 7855
RTN                  ; 7856
LD  2   191          ; 7857
LD  0   0            ; 7858
ST  2   191          ; 7859
RTN                  ; 7860
LDF 7857             ; 7861
RTN                  ; 7862
LD  2   192          ; 7863
RTN                  ; 7864
LDF 7863             ; 7865
RTN                  ; 7866
LD  2   192          ; 7867
LD  0   0            ; 7868
ST  2   192          ; 7869
RTN                  ; 7870
LDF 7867             ; 7871
RTN                  ; 7872
LD  2   193          ; 7873
RTN                  ; 7874
LDF 7873             ; 7875
RTN                  ; 7876
LD  2   193          ; 7877
LD  0   0            ; 7878
ST  2   193          ; 7879
RTN                  ; 7880
LDF 7877             ; 7881
RTN                  ; 7882
LD  2   194          ; 7883
RTN                  ; 7884
LDF 7883             ; 7885
RTN                  ; 7886
LD  2   194          ; 7887
LD  0   0            ; 7888
ST  2   194          ; 7889
RTN                  ; 7890
LDF 7887             ; 7891
RTN                  ; 7892
LD  2   195          ; 7893
RTN                  ; 7894
LDF 7893             ; 7895
RTN                  ; 7896
LD  2   195          ; 7897
LD  0   0            ; 7898
ST  2   195          ; 7899
RTN                  ; 7900
LDF 7897             ; 7901
RTN                  ; 7902
LD  2   196          ; 7903
RTN                  ; 7904
LDF 7903             ; 7905
RTN                  ; 7906
LD  2   196          ; 7907
LD  0   0            ; 7908
ST  2   196          ; 7909
RTN                  ; 7910
LDF 7907             ; 7911
RTN                  ; 7912
LD  2   197          ; 7913
RTN                  ; 7914
LDF 7913             ; 7915
RTN                  ; 7916
LD  2   197          ; 7917
LD  0   0            ; 7918
ST  2   197          ; 7919
RTN                  ; 7920
LDF 7917             ; 7921
RTN                  ; 7922
LD  2   198          ; 7923
RTN                  ; 7924
LDF 7923             ; 7925
RTN                  ; 7926
LD  2   198          ; 7927
LD  0   0            ; 7928
ST  2   198          ; 7929
RTN                  ; 7930
LDF 7927             ; 7931
RTN                  ; 7932
LD  2   199          ; 7933
RTN                  ; 7934
LDF 7933             ; 7935
RTN                  ; 7936
LD  2   199          ; 7937
LD  0   0            ; 7938
ST  2   199          ; 7939
RTN                  ; 7940
LDF 7937             ; 7941
RTN                  ; 7942
LD  2   200          ; 7943
RTN                  ; 7944
LDF 7943             ; 7945
RTN                  ; 7946
LD  2   200          ; 7947
LD  0   0            ; 7948
ST  2   200          ; 7949
RTN                  ; 7950
LDF 7947             ; 7951
RTN                  ; 7952
LD  2   201          ; 7953
RTN                  ; 7954
LDF 7953             ; 7955
RTN                  ; 7956
LD  2   201          ; 7957
LD  0   0            ; 7958
ST  2   201          ; 7959
RTN                  ; 7960
LDF 7957             ; 7961
RTN                  ; 7962
LD  2   202          ; 7963
RTN                  ; 7964
LDF 7963             ; 7965
RTN                  ; 7966
LD  2   202          ; 7967
LD  0   0            ; 7968
ST  2   202          ; 7969
RTN                  ; 7970
LDF 7967             ; 7971
RTN                  ; 7972
LD  2   203          ; 7973
RTN                  ; 7974
LDF 7973             ; 7975
RTN                  ; 7976
LD  2   203          ; 7977
LD  0   0            ; 7978
ST  2   203          ; 7979
RTN                  ; 7980
LDF 7977             ; 7981
RTN                  ; 7982
LD  2   204          ; 7983
RTN                  ; 7984
LDF 7983             ; 7985
RTN                  ; 7986
LD  2   204          ; 7987
LD  0   0            ; 7988
ST  2   204          ; 7989
RTN                  ; 7990
LDF 7987             ; 7991
RTN                  ; 7992
LD  2   205          ; 7993
RTN                  ; 7994
LDF 7993             ; 7995
RTN                  ; 7996
LD  2   205          ; 7997
LD  0   0            ; 7998
ST  2   205          ; 7999
RTN                  ; 8000
LDF 7997             ; 8001
RTN                  ; 8002
LD  2   206          ; 8003
RTN                  ; 8004
LDF 8003             ; 8005
RTN                  ; 8006
LD  2   206          ; 8007
LD  0   0            ; 8008
ST  2   206          ; 8009
RTN                  ; 8010
LDF 8007             ; 8011
RTN                  ; 8012
LD  2   207          ; 8013
RTN                  ; 8014
LDF 8013             ; 8015
RTN                  ; 8016
LD  2   207          ; 8017
LD  0   0            ; 8018
ST  2   207          ; 8019
RTN                  ; 8020
LDF 8017             ; 8021
RTN                  ; 8022
LD  2   208          ; 8023
RTN                  ; 8024
LDF 8023             ; 8025
RTN                  ; 8026
LD  2   208          ; 8027
LD  0   0            ; 8028
ST  2   208          ; 8029
RTN                  ; 8030
LDF 8027             ; 8031
RTN                  ; 8032
LD  2   209          ; 8033
RTN                  ; 8034
LDF 8033             ; 8035
RTN                  ; 8036
LD  2   209          ; 8037
LD  0   0            ; 8038
ST  2   209          ; 8039
RTN                  ; 8040
LDF 8037             ; 8041
RTN                  ; 8042
LD  2   210          ; 8043
RTN                  ; 8044
LDF 8043             ; 8045
RTN                  ; 8046
LD  2   210          ; 8047
LD  0   0            ; 8048
ST  2   210          ; 8049
RTN                  ; 8050
LDF 8047             ; 8051
RTN                  ; 8052
LD  2   211          ; 8053
RTN                  ; 8054
LDF 8053             ; 8055
RTN                  ; 8056
LD  2   211          ; 8057
LD  0   0            ; 8058
ST  2   211          ; 8059
RTN                  ; 8060
LDF 8057             ; 8061
RTN                  ; 8062
LD  2   212          ; 8063
RTN                  ; 8064
LDF 8063             ; 8065
RTN                  ; 8066
LD  2   212          ; 8067
LD  0   0            ; 8068
ST  2   212          ; 8069
RTN                  ; 8070
LDF 8067             ; 8071
RTN                  ; 8072
LD  2   213          ; 8073
RTN                  ; 8074
LDF 8073             ; 8075
RTN                  ; 8076
LD  2   213          ; 8077
LD  0   0            ; 8078
ST  2   213          ; 8079
RTN                  ; 8080
LDF 8077             ; 8081
RTN                  ; 8082
LD  2   214          ; 8083
RTN                  ; 8084
LDF 8083             ; 8085
RTN                  ; 8086
LD  2   214          ; 8087
LD  0   0            ; 8088
ST  2   214          ; 8089
RTN                  ; 8090
LDF 8087             ; 8091
RTN                  ; 8092
LD  2   215          ; 8093
RTN                  ; 8094
LDF 8093             ; 8095
RTN                  ; 8096
LD  2   215          ; 8097
LD  0   0            ; 8098
ST  2   215          ; 8099
RTN                  ; 8100
LDF 8097             ; 8101
RTN                  ; 8102
LD  2   216          ; 8103
RTN                  ; 8104
LDF 8103             ; 8105
RTN                  ; 8106
LD  2   216          ; 8107
LD  0   0            ; 8108
ST  2   216          ; 8109
RTN                  ; 8110
LDF 8107             ; 8111
RTN                  ; 8112
LD  2   217          ; 8113
RTN                  ; 8114
LDF 8113             ; 8115
RTN                  ; 8116
LD  2   217          ; 8117
LD  0   0            ; 8118
ST  2   217          ; 8119
RTN                  ; 8120
LDF 8117             ; 8121
RTN                  ; 8122
LD  2   218          ; 8123
RTN                  ; 8124
LDF 8123             ; 8125
RTN                  ; 8126
LD  2   218          ; 8127
LD  0   0            ; 8128
ST  2   218          ; 8129
RTN                  ; 8130
LDF 8127             ; 8131
RTN                  ; 8132
LD  2   219          ; 8133
RTN                  ; 8134
LDF 8133             ; 8135
RTN                  ; 8136
LD  2   219          ; 8137
LD  0   0            ; 8138
ST  2   219          ; 8139
RTN                  ; 8140
LDF 8137             ; 8141
RTN                  ; 8142
LD  2   220          ; 8143
RTN                  ; 8144
LDF 8143             ; 8145
RTN                  ; 8146
LD  2   220          ; 8147
LD  0   0            ; 8148
ST  2   220          ; 8149
RTN                  ; 8150
LDF 8147             ; 8151
RTN                  ; 8152
LD  2   221          ; 8153
RTN                  ; 8154
LDF 8153             ; 8155
RTN                  ; 8156
LD  2   221          ; 8157
LD  0   0            ; 8158
ST  2   221          ; 8159
RTN                  ; 8160
LDF 8157             ; 8161
RTN                  ; 8162
LD  2   222          ; 8163
RTN                  ; 8164
LDF 8163             ; 8165
RTN                  ; 8166
LD  2   222          ; 8167
LD  0   0            ; 8168
ST  2   222          ; 8169
RTN                  ; 8170
LDF 8167             ; 8171
RTN                  ; 8172
LD  2   223          ; 8173
RTN                  ; 8174
LDF 8173             ; 8175
RTN                  ; 8176
LD  2   223          ; 8177
LD  0   0            ; 8178
ST  2   223          ; 8179
RTN                  ; 8180
LDF 8177             ; 8181
RTN                  ; 8182
LD  2   224          ; 8183
RTN                  ; 8184
LDF 8183             ; 8185
RTN                  ; 8186
LD  2   224          ; 8187
LD  0   0            ; 8188
ST  2   224          ; 8189
RTN                  ; 8190
LDF 8187             ; 8191
RTN                  ; 8192
LD  2   225          ; 8193
RTN                  ; 8194
LDF 8193             ; 8195
RTN                  ; 8196
LD  2   225          ; 8197
LD  0   0            ; 8198
ST  2   225          ; 8199
RTN                  ; 8200
LDF 8197             ; 8201
RTN                  ; 8202
LD  2   226          ; 8203
RTN                  ; 8204
LDF 8203             ; 8205
RTN                  ; 8206
LD  2   226          ; 8207
LD  0   0            ; 8208
ST  2   226          ; 8209
RTN                  ; 8210
LDF 8207             ; 8211
RTN                  ; 8212
LD  2   227          ; 8213
RTN                  ; 8214
LDF 8213             ; 8215
RTN                  ; 8216
LD  2   227          ; 8217
LD  0   0            ; 8218
ST  2   227          ; 8219
RTN                  ; 8220
LDF 8217             ; 8221
RTN                  ; 8222
LD  2   228          ; 8223
RTN                  ; 8224
LDF 8223             ; 8225
RTN                  ; 8226
LD  2   228          ; 8227
LD  0   0            ; 8228
ST  2   228          ; 8229
RTN                  ; 8230
LDF 8227             ; 8231
RTN                  ; 8232
LD  2   229          ; 8233
RTN                  ; 8234
LDF 8233             ; 8235
RTN                  ; 8236
LD  2   229          ; 8237
LD  0   0            ; 8238
ST  2   229          ; 8239
RTN                  ; 8240
LDF 8237             ; 8241
RTN                  ; 8242
LD  2   230          ; 8243
RTN                  ; 8244
LDF 8243             ; 8245
RTN                  ; 8246
LD  2   230          ; 8247
LD  0   0            ; 8248
ST  2   230          ; 8249
RTN                  ; 8250
LDF 8247             ; 8251
RTN                  ; 8252
LD  2   231          ; 8253
RTN                  ; 8254
LDF 8253             ; 8255
RTN                  ; 8256
LD  2   231          ; 8257
LD  0   0            ; 8258
ST  2   231          ; 8259
RTN                  ; 8260
LDF 8257             ; 8261
RTN                  ; 8262
LD  2   232          ; 8263
RTN                  ; 8264
LDF 8263             ; 8265
RTN                  ; 8266
LD  2   232          ; 8267
LD  0   0            ; 8268
ST  2   232          ; 8269
RTN                  ; 8270
LDF 8267             ; 8271
RTN                  ; 8272
LD  2   233          ; 8273
RTN                  ; 8274
LDF 8273             ; 8275
RTN                  ; 8276
LD  2   233          ; 8277
LD  0   0            ; 8278
ST  2   233          ; 8279
RTN                  ; 8280
LDF 8277             ; 8281
RTN                  ; 8282
LD  2   234          ; 8283
RTN                  ; 8284
LDF 8283             ; 8285
RTN                  ; 8286
LD  2   234          ; 8287
LD  0   0            ; 8288
ST  2   234          ; 8289
RTN                  ; 8290
LDF 8287             ; 8291
RTN                  ; 8292
LD  2   235          ; 8293
RTN                  ; 8294
LDF 8293             ; 8295
RTN                  ; 8296
LD  2   235          ; 8297
LD  0   0            ; 8298
ST  2   235          ; 8299
RTN                  ; 8300
LDF 8297             ; 8301
RTN                  ; 8302
LD  2   236          ; 8303
RTN                  ; 8304
LDF 8303             ; 8305
RTN                  ; 8306
LD  2   236          ; 8307
LD  0   0            ; 8308
ST  2   236          ; 8309
RTN                  ; 8310
LDF 8307             ; 8311
RTN                  ; 8312
LD  2   237          ; 8313
RTN                  ; 8314
LDF 8313             ; 8315
RTN                  ; 8316
LD  2   237          ; 8317
LD  0   0            ; 8318
ST  2   237          ; 8319
RTN                  ; 8320
LDF 8317             ; 8321
RTN                  ; 8322
LD  2   238          ; 8323
RTN                  ; 8324
LDF 8323             ; 8325
RTN                  ; 8326
LD  2   238          ; 8327
LD  0   0            ; 8328
ST  2   238          ; 8329
RTN                  ; 8330
LDF 8327             ; 8331
RTN                  ; 8332
LD  2   239          ; 8333
RTN                  ; 8334
LDF 8333             ; 8335
RTN                  ; 8336
LD  2   239          ; 8337
LD  0   0            ; 8338
ST  2   239          ; 8339
RTN                  ; 8340
LDF 8337             ; 8341
RTN                  ; 8342
LD  2   240          ; 8343
RTN                  ; 8344
LDF 8343             ; 8345
RTN                  ; 8346
LD  2   240          ; 8347
LD  0   0            ; 8348
ST  2   240          ; 8349
RTN                  ; 8350
LDF 8347             ; 8351
RTN                  ; 8352
LD  2   241          ; 8353
RTN                  ; 8354
LDF 8353             ; 8355
RTN                  ; 8356
LD  2   241          ; 8357
LD  0   0            ; 8358
ST  2   241          ; 8359
RTN                  ; 8360
LDF 8357             ; 8361
RTN                  ; 8362
LD  2   242          ; 8363
RTN                  ; 8364
LDF 8363             ; 8365
RTN                  ; 8366
LD  2   242          ; 8367
LD  0   0            ; 8368
ST  2   242          ; 8369
RTN                  ; 8370
LDF 8367             ; 8371
RTN                  ; 8372
LD  2   243          ; 8373
RTN                  ; 8374
LDF 8373             ; 8375
RTN                  ; 8376
LD  2   243          ; 8377
LD  0   0            ; 8378
ST  2   243          ; 8379
RTN                  ; 8380
LDF 8377             ; 8381
RTN                  ; 8382
LD  2   244          ; 8383
RTN                  ; 8384
LDF 8383             ; 8385
RTN                  ; 8386
LD  2   244          ; 8387
LD  0   0            ; 8388
ST  2   244          ; 8389
RTN                  ; 8390
LDF 8387             ; 8391
RTN                  ; 8392
LD  2   245          ; 8393
RTN                  ; 8394
LDF 8393             ; 8395
RTN                  ; 8396
LD  2   245          ; 8397
LD  0   0            ; 8398
ST  2   245          ; 8399
RTN                  ; 8400
LDF 8397             ; 8401
RTN                  ; 8402
LD  2   246          ; 8403
RTN                  ; 8404
LDF 8403             ; 8405
RTN                  ; 8406
LD  2   246          ; 8407
LD  0   0            ; 8408
ST  2   246          ; 8409
RTN                  ; 8410
LDF 8407             ; 8411
RTN                  ; 8412
LD  2   247          ; 8413
RTN                  ; 8414
LDF 8413             ; 8415
RTN                  ; 8416
LD  2   247          ; 8417
LD  0   0            ; 8418
ST  2   247          ; 8419
RTN                  ; 8420
LDF 8417             ; 8421
RTN                  ; 8422
LD  2   248          ; 8423
RTN                  ; 8424
LDF 8423             ; 8425
RTN                  ; 8426
LD  2   248          ; 8427
LD  0   0            ; 8428
ST  2   248          ; 8429
RTN                  ; 8430
LDF 8427             ; 8431
RTN                  ; 8432
LD  2   249          ; 8433
RTN                  ; 8434
LDF 8433             ; 8435
RTN                  ; 8436
LD  2   249          ; 8437
LD  0   0            ; 8438
ST  2   249          ; 8439
RTN                  ; 8440
LDF 8437             ; 8441
RTN                  ; 8442
LD  2   250          ; 8443
RTN                  ; 8444
LDF 8443             ; 8445
RTN                  ; 8446
LD  2   250          ; 8447
LD  0   0            ; 8448
ST  2   250          ; 8449
RTN                  ; 8450
LDF 8447             ; 8451
RTN                  ; 8452
LD  2   251          ; 8453
RTN                  ; 8454
LDF 8453             ; 8455
RTN                  ; 8456
LD  2   251          ; 8457
LD  0   0            ; 8458
ST  2   251          ; 8459
RTN                  ; 8460
LDF 8457             ; 8461
RTN                  ; 8462
LD  2   252          ; 8463
RTN                  ; 8464
LDF 8463             ; 8465
RTN                  ; 8466
LD  2   252          ; 8467
LD  0   0            ; 8468
ST  2   252          ; 8469
RTN                  ; 8470
LDF 8467             ; 8471
RTN                  ; 8472
LD  2   253          ; 8473
RTN                  ; 8474
LDF 8473             ; 8475
RTN                  ; 8476
LD  2   253          ; 8477
LD  0   0            ; 8478
ST  2   253          ; 8479
RTN                  ; 8480
LDF 8477             ; 8481
RTN                  ; 8482
LD  2   254          ; 8483
RTN                  ; 8484
LDF 8483             ; 8485
RTN                  ; 8486
LD  2   254          ; 8487
LD  0   0            ; 8488
ST  2   254          ; 8489
RTN                  ; 8490
LDF 8487             ; 8491
RTN                  ; 8492
LD  2   255          ; 8493
RTN                  ; 8494
LDF 8493             ; 8495
RTN                  ; 8496
LD  2   255          ; 8497
LD  0   0            ; 8498
ST  2   255          ; 8499
RTN                  ; 8500
LDF 8497             ; 8501
RTN                  ; 8502
LDC 0               ; generated from native: sample_map ; 8503
LDC 0                ; 8504
LDC 0                ; 8505
LDC 0                ; 8506
LDC 0                ; 8507
LDC 0                ; 8508
LDC 0                ; 8509
LDC 0                ; 8510
LDC 0                ; 8511
LDC 0                ; 8512
LDC 0                ; 8513
LDC 0                ; 8514
LDC 0                ; 8515
LDC 0                ; 8516
LDC 0                ; 8517
LDC 0                ; 8518
LDC 0                ; 8519
LDC 0                ; 8520
LDC 0                ; 8521
LDC 0                ; 8522
LDC 0                ; 8523
LDC 0                ; 8524
LDC 0                ; 8525
LDC 0                ; 8526
CONS                 ; 8527
CONS                 ; 8528
CONS                 ; 8529
CONS                 ; 8530
CONS                 ; 8531
CONS                 ; 8532
CONS                 ; 8533
CONS                 ; 8534
CONS                 ; 8535
CONS                 ; 8536
CONS                 ; 8537
CONS                 ; 8538
CONS                 ; 8539
CONS                 ; 8540
CONS                 ; 8541
CONS                 ; 8542
CONS                 ; 8543
CONS                 ; 8544
CONS                 ; 8545
CONS                 ; 8546
CONS                 ; 8547
CONS                 ; 8548
CONS                 ; 8549
LDC 0                ; 8550
LDC 2                ; 8551
LDC 2                ; 8552
LDC 2                ; 8553
LDC 2                ; 8554
LDC 2                ; 8555
LDC 2                ; 8556
LDC 2                ; 8557
LDC 2                ; 8558
LDC 2                ; 8559
LDC 2                ; 8560
LDC 0                ; 8561
LDC 2                ; 8562
LDC 2                ; 8563
LDC 2                ; 8564
LDC 2                ; 8565
LDC 2                ; 8566
LDC 2                ; 8567
LDC 2                ; 8568
LDC 2                ; 8569
LDC 2                ; 8570
LDC 2                ; 8571
LDC 0                ; 8572
LDC 0                ; 8573
CONS                 ; 8574
CONS                 ; 8575
CONS                 ; 8576
CONS                 ; 8577
CONS                 ; 8578
CONS                 ; 8579
CONS                 ; 8580
CONS                 ; 8581
CONS                 ; 8582
CONS                 ; 8583
CONS                 ; 8584
CONS                 ; 8585
CONS                 ; 8586
CONS                 ; 8587
CONS                 ; 8588
CONS                 ; 8589
CONS                 ; 8590
CONS                 ; 8591
CONS                 ; 8592
CONS                 ; 8593
CONS                 ; 8594
CONS                 ; 8595
CONS                 ; 8596
LDC 0                ; 8597
LDC 2                ; 8598
LDC 0                ; 8599
LDC 0                ; 8600
LDC 0                ; 8601
LDC 2                ; 8602
LDC 0                ; 8603
LDC 0                ; 8604
LDC 0                ; 8605
LDC 0                ; 8606
LDC 2                ; 8607
LDC 0                ; 8608
LDC 2                ; 8609
LDC 0                ; 8610
LDC 0                ; 8611
LDC 0                ; 8612
LDC 0                ; 8613
LDC 2                ; 8614
LDC 0                ; 8615
LDC 0                ; 8616
LDC 0                ; 8617
LDC 2                ; 8618
LDC 0                ; 8619
LDC 0                ; 8620
CONS                 ; 8621
CONS                 ; 8622
CONS                 ; 8623
CONS                 ; 8624
CONS                 ; 8625
CONS                 ; 8626
CONS                 ; 8627
CONS                 ; 8628
CONS                 ; 8629
CONS                 ; 8630
CONS                 ; 8631
CONS                 ; 8632
CONS                 ; 8633
CONS                 ; 8634
CONS                 ; 8635
CONS                 ; 8636
CONS                 ; 8637
CONS                 ; 8638
CONS                 ; 8639
CONS                 ; 8640
CONS                 ; 8641
CONS                 ; 8642
CONS                 ; 8643
LDC 0                ; 8644
LDC 3                ; 8645
LDC 0                ; 8646
LDC 0                ; 8647
LDC 0                ; 8648
LDC 2                ; 8649
LDC 0                ; 8650
LDC 0                ; 8651
LDC 0                ; 8652
LDC 0                ; 8653
LDC 2                ; 8654
LDC 0                ; 8655
LDC 2                ; 8656
LDC 0                ; 8657
LDC 0                ; 8658
LDC 0                ; 8659
LDC 0                ; 8660
LDC 2                ; 8661
LDC 0                ; 8662
LDC 0                ; 8663
LDC 0                ; 8664
LDC 3                ; 8665
LDC 0                ; 8666
LDC 0                ; 8667
CONS                 ; 8668
CONS                 ; 8669
CONS                 ; 8670
CONS                 ; 8671
CONS                 ; 8672
CONS                 ; 8673
CONS                 ; 8674
CONS                 ; 8675
CONS                 ; 8676
CONS                 ; 8677
CONS                 ; 8678
CONS                 ; 8679
CONS                 ; 8680
CONS                 ; 8681
CONS                 ; 8682
CONS                 ; 8683
CONS                 ; 8684
CONS                 ; 8685
CONS                 ; 8686
CONS                 ; 8687
CONS                 ; 8688
CONS                 ; 8689
CONS                 ; 8690
LDC 0                ; 8691
LDC 2                ; 8692
LDC 2                ; 8693
LDC 2                ; 8694
LDC 2                ; 8695
LDC 2                ; 8696
LDC 2                ; 8697
LDC 2                ; 8698
LDC 2                ; 8699
LDC 2                ; 8700
LDC 2                ; 8701
LDC 2                ; 8702
LDC 2                ; 8703
LDC 2                ; 8704
LDC 2                ; 8705
LDC 2                ; 8706
LDC 2                ; 8707
LDC 2                ; 8708
LDC 2                ; 8709
LDC 2                ; 8710
LDC 2                ; 8711
LDC 2                ; 8712
LDC 0                ; 8713
LDC 0                ; 8714
CONS                 ; 8715
CONS                 ; 8716
CONS                 ; 8717
CONS                 ; 8718
CONS                 ; 8719
CONS                 ; 8720
CONS                 ; 8721
CONS                 ; 8722
CONS                 ; 8723
CONS                 ; 8724
CONS                 ; 8725
CONS                 ; 8726
CONS                 ; 8727
CONS                 ; 8728
CONS                 ; 8729
CONS                 ; 8730
CONS                 ; 8731
CONS                 ; 8732
CONS                 ; 8733
CONS                 ; 8734
CONS                 ; 8735
CONS                 ; 8736
CONS                 ; 8737
LDC 0                ; 8738
LDC 2                ; 8739
LDC 0                ; 8740
LDC 0                ; 8741
LDC 0                ; 8742
LDC 2                ; 8743
LDC 0                ; 8744
LDC 2                ; 8745
LDC 0                ; 8746
LDC 0                ; 8747
LDC 0                ; 8748
LDC 0                ; 8749
LDC 0                ; 8750
LDC 0                ; 8751
LDC 0                ; 8752
LDC 2                ; 8753
LDC 0                ; 8754
LDC 2                ; 8755
LDC 0                ; 8756
LDC 0                ; 8757
LDC 0                ; 8758
LDC 2                ; 8759
LDC 0                ; 8760
LDC 0                ; 8761
CONS                 ; 8762
CONS                 ; 8763
CONS                 ; 8764
CONS                 ; 8765
CONS                 ; 8766
CONS                 ; 8767
CONS                 ; 8768
CONS                 ; 8769
CONS                 ; 8770
CONS                 ; 8771
CONS                 ; 8772
CONS                 ; 8773
CONS                 ; 8774
CONS                 ; 8775
CONS                 ; 8776
CONS                 ; 8777
CONS                 ; 8778
CONS                 ; 8779
CONS                 ; 8780
CONS                 ; 8781
CONS                 ; 8782
CONS                 ; 8783
CONS                 ; 8784
LDC 0                ; 8785
LDC 2                ; 8786
LDC 2                ; 8787
LDC 2                ; 8788
LDC 2                ; 8789
LDC 2                ; 8790
LDC 0                ; 8791
LDC 2                ; 8792
LDC 2                ; 8793
LDC 2                ; 8794
LDC 2                ; 8795
LDC 0                ; 8796
LDC 2                ; 8797
LDC 2                ; 8798
LDC 2                ; 8799
LDC 2                ; 8800
LDC 0                ; 8801
LDC 2                ; 8802
LDC 2                ; 8803
LDC 2                ; 8804
LDC 2                ; 8805
LDC 2                ; 8806
LDC 0                ; 8807
LDC 0                ; 8808
CONS                 ; 8809
CONS                 ; 8810
CONS                 ; 8811
CONS                 ; 8812
CONS                 ; 8813
CONS                 ; 8814
CONS                 ; 8815
CONS                 ; 8816
CONS                 ; 8817
CONS                 ; 8818
CONS                 ; 8819
CONS                 ; 8820
CONS                 ; 8821
CONS                 ; 8822
CONS                 ; 8823
CONS                 ; 8824
CONS                 ; 8825
CONS                 ; 8826
CONS                 ; 8827
CONS                 ; 8828
CONS                 ; 8829
CONS                 ; 8830
CONS                 ; 8831
LDC 0                ; 8832
LDC 0                ; 8833
LDC 0                ; 8834
LDC 0                ; 8835
LDC 0                ; 8836
LDC 2                ; 8837
LDC 0                ; 8838
LDC 0                ; 8839
LDC 0                ; 8840
LDC 0                ; 8841
LDC 1                ; 8842
LDC 0                ; 8843
LDC 1                ; 8844
LDC 0                ; 8845
LDC 0                ; 8846
LDC 0                ; 8847
LDC 0                ; 8848
LDC 2                ; 8849
LDC 0                ; 8850
LDC 0                ; 8851
LDC 0                ; 8852
LDC 0                ; 8853
LDC 0                ; 8854
LDC 0                ; 8855
CONS                 ; 8856
CONS                 ; 8857
CONS                 ; 8858
CONS                 ; 8859
CONS                 ; 8860
CONS                 ; 8861
CONS                 ; 8862
CONS                 ; 8863
CONS                 ; 8864
CONS                 ; 8865
CONS                 ; 8866
CONS                 ; 8867
CONS                 ; 8868
CONS                 ; 8869
CONS                 ; 8870
CONS                 ; 8871
CONS                 ; 8872
CONS                 ; 8873
CONS                 ; 8874
CONS                 ; 8875
CONS                 ; 8876
CONS                 ; 8877
CONS                 ; 8878
LDC 0                ; 8879
LDC 1                ; 8880
LDC 1                ; 8881
LDC 1                ; 8882
LDC 0                ; 8883
LDC 2                ; 8884
LDC 0                ; 8885
LDC 1                ; 8886
LDC 1                ; 8887
LDC 1                ; 8888
LDC 1                ; 8889
LDC 6                ; 8890
LDC 1                ; 8891
LDC 1                ; 8892
LDC 1                ; 8893
LDC 1                ; 8894
LDC 0                ; 8895
LDC 2                ; 8896
LDC 0                ; 8897
LDC 1                ; 8898
LDC 1                ; 8899
LDC 1                ; 8900
LDC 0                ; 8901
LDC 0                ; 8902
CONS                 ; 8903
CONS                 ; 8904
CONS                 ; 8905
CONS                 ; 8906
CONS                 ; 8907
CONS                 ; 8908
CONS                 ; 8909
CONS                 ; 8910
CONS                 ; 8911
CONS                 ; 8912
CONS                 ; 8913
CONS                 ; 8914
CONS                 ; 8915
CONS                 ; 8916
CONS                 ; 8917
CONS                 ; 8918
CONS                 ; 8919
CONS                 ; 8920
CONS                 ; 8921
CONS                 ; 8922
CONS                 ; 8923
CONS                 ; 8924
CONS                 ; 8925
LDC 0                ; 8926
LDC 0                ; 8927
LDC 0                ; 8928
LDC 0                ; 8929
LDC 0                ; 8930
LDC 2                ; 8931
LDC 0                ; 8932
LDC 1                ; 8933
LDC 0                ; 8934
LDC 0                ; 8935
LDC 0                ; 8936
LDC 1                ; 8937
LDC 0                ; 8938
LDC 0                ; 8939
LDC 0                ; 8940
LDC 1                ; 8941
LDC 0                ; 8942
LDC 2                ; 8943
LDC 0                ; 8944
LDC 0                ; 8945
LDC 0                ; 8946
LDC 0                ; 8947
LDC 0                ; 8948
LDC 0                ; 8949
CONS                 ; 8950
CONS                 ; 8951
CONS                 ; 8952
CONS                 ; 8953
CONS                 ; 8954
CONS                 ; 8955
CONS                 ; 8956
CONS                 ; 8957
CONS                 ; 8958
CONS                 ; 8959
CONS                 ; 8960
CONS                 ; 8961
CONS                 ; 8962
CONS                 ; 8963
CONS                 ; 8964
CONS                 ; 8965
CONS                 ; 8966
CONS                 ; 8967
CONS                 ; 8968
CONS                 ; 8969
CONS                 ; 8970
CONS                 ; 8971
CONS                 ; 8972
LDC 0                ; 8973
LDC 1                ; 8974
LDC 1                ; 8975
LDC 1                ; 8976
LDC 1                ; 8977
LDC 2                ; 8978
LDC 1                ; 8979
LDC 1                ; 8980
LDC 0                ; 8981
LDC 1                ; 8982
LDC 6                ; 8983
LDC 6                ; 8984
LDC 6                ; 8985
LDC 1                ; 8986
LDC 0                ; 8987
LDC 1                ; 8988
LDC 1                ; 8989
LDC 2                ; 8990
LDC 1                ; 8991
LDC 1                ; 8992
LDC 1                ; 8993
LDC 1                ; 8994
LDC 0                ; 8995
LDC 0                ; 8996
CONS                 ; 8997
CONS                 ; 8998
CONS                 ; 8999
CONS                 ; 9000
CONS                 ; 9001
CONS                 ; 9002
CONS                 ; 9003
CONS                 ; 9004
CONS                 ; 9005
CONS                 ; 9006
CONS                 ; 9007
CONS                 ; 9008
CONS                 ; 9009
CONS                 ; 9010
CONS                 ; 9011
CONS                 ; 9012
CONS                 ; 9013
CONS                 ; 9014
CONS                 ; 9015
CONS                 ; 9016
CONS                 ; 9017
CONS                 ; 9018
CONS                 ; 9019
LDC 0                ; 9020
LDC 0                ; 9021
LDC 0                ; 9022
LDC 0                ; 9023
LDC 0                ; 9024
LDC 2                ; 9025
LDC 0                ; 9026
LDC 1                ; 9027
LDC 0                ; 9028
LDC 0                ; 9029
LDC 0                ; 9030
LDC 0                ; 9031
LDC 0                ; 9032
LDC 0                ; 9033
LDC 0                ; 9034
LDC 1                ; 9035
LDC 0                ; 9036
LDC 2                ; 9037
LDC 0                ; 9038
LDC 0                ; 9039
LDC 0                ; 9040
LDC 0                ; 9041
LDC 0                ; 9042
LDC 0                ; 9043
CONS                 ; 9044
CONS                 ; 9045
CONS                 ; 9046
CONS                 ; 9047
CONS                 ; 9048
CONS                 ; 9049
CONS                 ; 9050
CONS                 ; 9051
CONS                 ; 9052
CONS                 ; 9053
CONS                 ; 9054
CONS                 ; 9055
CONS                 ; 9056
CONS                 ; 9057
CONS                 ; 9058
CONS                 ; 9059
CONS                 ; 9060
CONS                 ; 9061
CONS                 ; 9062
CONS                 ; 9063
CONS                 ; 9064
CONS                 ; 9065
CONS                 ; 9066
LDC 0                ; 9067
LDC 1                ; 9068
LDC 1                ; 9069
LDC 1                ; 9070
LDC 0                ; 9071
LDC 2                ; 9072
LDC 0                ; 9073
LDC 1                ; 9074
LDC 1                ; 9075
LDC 1                ; 9076
LDC 1                ; 9077
LDC 4                ; 9078
LDC 1                ; 9079
LDC 1                ; 9080
LDC 1                ; 9081
LDC 1                ; 9082
LDC 0                ; 9083
LDC 2                ; 9084
LDC 0                ; 9085
LDC 1                ; 9086
LDC 1                ; 9087
LDC 1                ; 9088
LDC 0                ; 9089
LDC 0                ; 9090
CONS                 ; 9091
CONS                 ; 9092
CONS                 ; 9093
CONS                 ; 9094
CONS                 ; 9095
CONS                 ; 9096
CONS                 ; 9097
CONS                 ; 9098
CONS                 ; 9099
CONS                 ; 9100
CONS                 ; 9101
CONS                 ; 9102
CONS                 ; 9103
CONS                 ; 9104
CONS                 ; 9105
CONS                 ; 9106
CONS                 ; 9107
CONS                 ; 9108
CONS                 ; 9109
CONS                 ; 9110
CONS                 ; 9111
CONS                 ; 9112
CONS                 ; 9113
LDC 0                ; 9114
LDC 0                ; 9115
LDC 0                ; 9116
LDC 0                ; 9117
LDC 0                ; 9118
LDC 2                ; 9119
LDC 0                ; 9120
LDC 1                ; 9121
LDC 0                ; 9122
LDC 0                ; 9123
LDC 0                ; 9124
LDC 0                ; 9125
LDC 0                ; 9126
LDC 0                ; 9127
LDC 0                ; 9128
LDC 1                ; 9129
LDC 0                ; 9130
LDC 2                ; 9131
LDC 0                ; 9132
LDC 0                ; 9133
LDC 0                ; 9134
LDC 0                ; 9135
LDC 0                ; 9136
LDC 0                ; 9137
CONS                 ; 9138
CONS                 ; 9139
CONS                 ; 9140
CONS                 ; 9141
CONS                 ; 9142
CONS                 ; 9143
CONS                 ; 9144
CONS                 ; 9145
CONS                 ; 9146
CONS                 ; 9147
CONS                 ; 9148
CONS                 ; 9149
CONS                 ; 9150
CONS                 ; 9151
CONS                 ; 9152
CONS                 ; 9153
CONS                 ; 9154
CONS                 ; 9155
CONS                 ; 9156
CONS                 ; 9157
CONS                 ; 9158
CONS                 ; 9159
CONS                 ; 9160
LDC 0                ; 9161
LDC 2                ; 9162
LDC 2                ; 9163
LDC 2                ; 9164
LDC 2                ; 9165
LDC 2                ; 9166
LDC 2                ; 9167
LDC 2                ; 9168
LDC 2                ; 9169
LDC 2                ; 9170
LDC 2                ; 9171
LDC 0                ; 9172
LDC 2                ; 9173
LDC 2                ; 9174
LDC 2                ; 9175
LDC 2                ; 9176
LDC 2                ; 9177
LDC 2                ; 9178
LDC 2                ; 9179
LDC 2                ; 9180
LDC 2                ; 9181
LDC 2                ; 9182
LDC 0                ; 9183
LDC 0                ; 9184
CONS                 ; 9185
CONS                 ; 9186
CONS                 ; 9187
CONS                 ; 9188
CONS                 ; 9189
CONS                 ; 9190
CONS                 ; 9191
CONS                 ; 9192
CONS                 ; 9193
CONS                 ; 9194
CONS                 ; 9195
CONS                 ; 9196
CONS                 ; 9197
CONS                 ; 9198
CONS                 ; 9199
CONS                 ; 9200
CONS                 ; 9201
CONS                 ; 9202
CONS                 ; 9203
CONS                 ; 9204
CONS                 ; 9205
CONS                 ; 9206
CONS                 ; 9207
LDC 0                ; 9208
LDC 2                ; 9209
LDC 0                ; 9210
LDC 0                ; 9211
LDC 0                ; 9212
LDC 2                ; 9213
LDC 0                ; 9214
LDC 0                ; 9215
LDC 0                ; 9216
LDC 0                ; 9217
LDC 2                ; 9218
LDC 0                ; 9219
LDC 2                ; 9220
LDC 0                ; 9221
LDC 0                ; 9222
LDC 0                ; 9223
LDC 0                ; 9224
LDC 2                ; 9225
LDC 0                ; 9226
LDC 0                ; 9227
LDC 0                ; 9228
LDC 2                ; 9229
LDC 0                ; 9230
LDC 0                ; 9231
CONS                 ; 9232
CONS                 ; 9233
CONS                 ; 9234
CONS                 ; 9235
CONS                 ; 9236
CONS                 ; 9237
CONS                 ; 9238
CONS                 ; 9239
CONS                 ; 9240
CONS                 ; 9241
CONS                 ; 9242
CONS                 ; 9243
CONS                 ; 9244
CONS                 ; 9245
CONS                 ; 9246
CONS                 ; 9247
CONS                 ; 9248
CONS                 ; 9249
CONS                 ; 9250
CONS                 ; 9251
CONS                 ; 9252
CONS                 ; 9253
CONS                 ; 9254
LDC 0                ; 9255
LDC 3                ; 9256
LDC 2                ; 9257
LDC 2                ; 9258
LDC 0                ; 9259
LDC 2                ; 9260
LDC 2                ; 9261
LDC 2                ; 9262
LDC 2                ; 9263
LDC 2                ; 9264
LDC 2                ; 9265
LDC 5                ; 9266
LDC 2                ; 9267
LDC 2                ; 9268
LDC 2                ; 9269
LDC 2                ; 9270
LDC 2                ; 9271
LDC 2                ; 9272
LDC 0                ; 9273
LDC 2                ; 9274
LDC 2                ; 9275
LDC 3                ; 9276
LDC 0                ; 9277
LDC 0                ; 9278
CONS                 ; 9279
CONS                 ; 9280
CONS                 ; 9281
CONS                 ; 9282
CONS                 ; 9283
CONS                 ; 9284
CONS                 ; 9285
CONS                 ; 9286
CONS                 ; 9287
CONS                 ; 9288
CONS                 ; 9289
CONS                 ; 9290
CONS                 ; 9291
CONS                 ; 9292
CONS                 ; 9293
CONS                 ; 9294
CONS                 ; 9295
CONS                 ; 9296
CONS                 ; 9297
CONS                 ; 9298
CONS                 ; 9299
CONS                 ; 9300
CONS                 ; 9301
LDC 0                ; 9302
LDC 0                ; 9303
LDC 0                ; 9304
LDC 2                ; 9305
LDC 0                ; 9306
LDC 2                ; 9307
LDC 0                ; 9308
LDC 2                ; 9309
LDC 0                ; 9310
LDC 0                ; 9311
LDC 0                ; 9312
LDC 0                ; 9313
LDC 0                ; 9314
LDC 0                ; 9315
LDC 0                ; 9316
LDC 2                ; 9317
LDC 0                ; 9318
LDC 2                ; 9319
LDC 0                ; 9320
LDC 2                ; 9321
LDC 0                ; 9322
LDC 0                ; 9323
LDC 0                ; 9324
LDC 0                ; 9325
CONS                 ; 9326
CONS                 ; 9327
CONS                 ; 9328
CONS                 ; 9329
CONS                 ; 9330
CONS                 ; 9331
CONS                 ; 9332
CONS                 ; 9333
CONS                 ; 9334
CONS                 ; 9335
CONS                 ; 9336
CONS                 ; 9337
CONS                 ; 9338
CONS                 ; 9339
CONS                 ; 9340
CONS                 ; 9341
CONS                 ; 9342
CONS                 ; 9343
CONS                 ; 9344
CONS                 ; 9345
CONS                 ; 9346
CONS                 ; 9347
CONS                 ; 9348
LDC 0                ; 9349
LDC 2                ; 9350
LDC 2                ; 9351
LDC 2                ; 9352
LDC 2                ; 9353
LDC 2                ; 9354
LDC 0                ; 9355
LDC 2                ; 9356
LDC 2                ; 9357
LDC 2                ; 9358
LDC 2                ; 9359
LDC 0                ; 9360
LDC 2                ; 9361
LDC 2                ; 9362
LDC 2                ; 9363
LDC 2                ; 9364
LDC 0                ; 9365
LDC 2                ; 9366
LDC 2                ; 9367
LDC 2                ; 9368
LDC 2                ; 9369
LDC 2                ; 9370
LDC 0                ; 9371
LDC 0                ; 9372
CONS                 ; 9373
CONS                 ; 9374
CONS                 ; 9375
CONS                 ; 9376
CONS                 ; 9377
CONS                 ; 9378
CONS                 ; 9379
CONS                 ; 9380
CONS                 ; 9381
CONS                 ; 9382
CONS                 ; 9383
CONS                 ; 9384
CONS                 ; 9385
CONS                 ; 9386
CONS                 ; 9387
CONS                 ; 9388
CONS                 ; 9389
CONS                 ; 9390
CONS                 ; 9391
CONS                 ; 9392
CONS                 ; 9393
CONS                 ; 9394
CONS                 ; 9395
LDC 0                ; 9396
LDC 2                ; 9397
LDC 0                ; 9398
LDC 0                ; 9399
LDC 0                ; 9400
LDC 0                ; 9401
LDC 0                ; 9402
LDC 0                ; 9403
LDC 0                ; 9404
LDC 0                ; 9405
LDC 2                ; 9406
LDC 0                ; 9407
LDC 2                ; 9408
LDC 0                ; 9409
LDC 0                ; 9410
LDC 0                ; 9411
LDC 0                ; 9412
LDC 0                ; 9413
LDC 0                ; 9414
LDC 0                ; 9415
LDC 0                ; 9416
LDC 2                ; 9417
LDC 0                ; 9418
LDC 0                ; 9419
CONS                 ; 9420
CONS                 ; 9421
CONS                 ; 9422
CONS                 ; 9423
CONS                 ; 9424
CONS                 ; 9425
CONS                 ; 9426
CONS                 ; 9427
CONS                 ; 9428
CONS                 ; 9429
CONS                 ; 9430
CONS                 ; 9431
CONS                 ; 9432
CONS                 ; 9433
CONS                 ; 9434
CONS                 ; 9435
CONS                 ; 9436
CONS                 ; 9437
CONS                 ; 9438
CONS                 ; 9439
CONS                 ; 9440
CONS                 ; 9441
CONS                 ; 9442
LDC 0                ; 9443
LDC 2                ; 9444
LDC 2                ; 9445
LDC 2                ; 9446
LDC 2                ; 9447
LDC 2                ; 9448
LDC 2                ; 9449
LDC 2                ; 9450
LDC 2                ; 9451
LDC 2                ; 9452
LDC 2                ; 9453
LDC 2                ; 9454
LDC 2                ; 9455
LDC 2                ; 9456
LDC 2                ; 9457
LDC 2                ; 9458
LDC 2                ; 9459
LDC 2                ; 9460
LDC 2                ; 9461
LDC 2                ; 9462
LDC 2                ; 9463
LDC 2                ; 9464
LDC 0                ; 9465
LDC 0                ; 9466
CONS                 ; 9467
CONS                 ; 9468
CONS                 ; 9469
CONS                 ; 9470
CONS                 ; 9471
CONS                 ; 9472
CONS                 ; 9473
CONS                 ; 9474
CONS                 ; 9475
CONS                 ; 9476
CONS                 ; 9477
CONS                 ; 9478
CONS                 ; 9479
CONS                 ; 9480
CONS                 ; 9481
CONS                 ; 9482
CONS                 ; 9483
CONS                 ; 9484
CONS                 ; 9485
CONS                 ; 9486
CONS                 ; 9487
CONS                 ; 9488
CONS                 ; 9489
LDC 0                ; 9490
LDC 0                ; 9491
LDC 0                ; 9492
LDC 0                ; 9493
LDC 0                ; 9494
LDC 0                ; 9495
LDC 0                ; 9496
LDC 0                ; 9497
LDC 0                ; 9498
LDC 0                ; 9499
LDC 0                ; 9500
LDC 0                ; 9501
LDC 0                ; 9502
LDC 0                ; 9503
LDC 0                ; 9504
LDC 0                ; 9505
LDC 0                ; 9506
LDC 0                ; 9507
LDC 0                ; 9508
LDC 0                ; 9509
LDC 0                ; 9510
LDC 0                ; 9511
LDC 0                ; 9512
LDC 0                ; 9513
CONS                 ; 9514
CONS                 ; 9515
CONS                 ; 9516
CONS                 ; 9517
CONS                 ; 9518
CONS                 ; 9519
CONS                 ; 9520
CONS                 ; 9521
CONS                 ; 9522
CONS                 ; 9523
CONS                 ; 9524
CONS                 ; 9525
CONS                 ; 9526
CONS                 ; 9527
CONS                 ; 9528
CONS                 ; 9529
CONS                 ; 9530
CONS                 ; 9531
CONS                 ; 9532
CONS                 ; 9533
CONS                 ; 9534
CONS                 ; 9535
CONS                 ; 9536
LDC 0                ; 9537
CONS                 ; 9538
CONS                 ; 9539
CONS                 ; 9540
CONS                 ; 9541
CONS                 ; 9542
CONS                 ; 9543
CONS                 ; 9544
CONS                 ; 9545
CONS                 ; 9546
CONS                 ; 9547
CONS                 ; 9548
CONS                 ; 9549
CONS                 ; 9550
CONS                 ; 9551
CONS                 ; 9552
CONS                 ; 9553
CONS                 ; 9554
CONS                 ; 9555
CONS                 ; 9556
CONS                 ; 9557
CONS                 ; 9558
CONS                 ; 9559
LDC 0                ; 9560
LDC 11               ; 9561
LDC 16               ; 9562
CONS                 ; 9563
LDC 2                ; 9564
LDC 3                ; 9565
LDC 0                ; 9566
CONS                 ; 9567
CONS                 ; 9568
CONS                 ; 9569
CONS                 ; 9570
LDC 0                ; 9571
LDC 11               ; 9572
LDC 8                ; 9573
CONS                 ; 9574
LDC 2                ; 9575
CONS                 ; 9576
CONS                 ; 9577
LDC 0                ; 9578
LDC 10               ; 9579
LDC 10               ; 9580
CONS                 ; 9581
LDC 2                ; 9582
CONS                 ; 9583
CONS                 ; 9584
LDC 0                ; 9585
LDC 11               ; 9586
LDC 10               ; 9587
CONS                 ; 9588
LDC 2                ; 9589
CONS                 ; 9590
CONS                 ; 9591
LDC 0                ; 9592
LDC 12               ; 9593
LDC 10               ; 9594
CONS                 ; 9595
LDC 2                ; 9596
CONS                 ; 9597
CONS                 ; 9598
LDC 0                ; 9599
CONS                 ; 9600
CONS                 ; 9601
CONS                 ; 9602
CONS                 ; 9603
LDC 0                ; 9604
CONS                 ; 9605
CONS                 ; 9606
CONS                 ; 9607
RTN                  ; 9608
LD     0 0          ;  <== lambda_1000  [x] (as expr) ; 9609
LD     1 1          ; var g ; 9610
AP     1             ; 9611
LD     1 0          ; var f ; 9612
AP     1             ; 9613
RTN                  ; 9614
LD     0 1          ;  <== lambda_1001  [b, a] (as expr) ; 9615
LD     0 0          ; var b ; 9616
LD     1 0          ; var f ; 9617
AP     2             ; 9618
RTN                  ; 9619
LD     0 0          ;  <== lambda_1002  [d] (as expr) ; 9620
LDF    226          ;  @maybeToList ; 9621
AP     1             ; 9622
RTN                  ; 9623
LD     0 0          ;  <== lambda_1003  [SortedMap<T> acc, Tuple<Integer,T> elem] (as expr) ; 9624
LD     0 1          ; var elem ; 9625
CAR                 ; generateTupleAccess total=2 pos=0 ; 9626
LD     0 1          ; var elem ; 9627
CDR                 ; generateTupleAccess total=2 pos=1 ; 9628
LDF    1308         ;  @sorted_map_assoc ; 9629
AP     3             ; 9630
RTN                  ; 9631
LD     0 0          ;  <== lambda_1004  [Integer a] (as expr) ; 9632
LD     0 0          ; var a ; 9633
LDC    2            ; just constant from code ; 9634
DIV                  ; 9635
LDC    2            ; just constant from code ; 9636
MUL                  ; 9637
CEQ                  ; 9638
SEL    9645 9647    ; IF? 60 ; 9639
LD     0 0          ; var a ; 9640
LDC    2            ; just constant from code ; 9641
DIV                  ; 9642
CONS                 ; 9643
RTN                  ; 9644
LDC    0            ; THEN: 60 ; 9645
JOIN                 ; 9646
LDC    1            ; ELSE: 60 ; 9647
JOIN                 ; 9648
LD     0 1          ;  <== lambda_1005  [Integer elem, Integer acc] (as expr) ; 9649
LDC    2            ; just constant from code ; 9650
MUL                  ; 9651
LD     0 0          ; var elem ; 9652
ADD                  ; 9653
RTN                  ; 9654
LD     0 0          ;  <== lambda_1006  [Tuple<Integer,SortedMap<Cons>> init, Cons step] (as expr) ; 9655
CAR                 ; generateTupleAccess total=2 pos=0 ; 9656
LDC    1            ; just constant from code ; 9657
ADD                  ; 9658
LD     0 0          ; var init ; 9659
CDR                 ; generateTupleAccess total=2 pos=1 ; 9660
LD     0 0          ; var init ; 9661
CAR                 ; generateTupleAccess total=2 pos=0 ; 9662
LD     0 1          ; var step ; 9663
LDF    1308         ;  @sorted_map_assoc ; 9664
AP     3             ; 9665
CONS                 ; 9666
RTN                  ; 9667
LDF    3626         ;  <== lambda_1007  [x] (as expr), ALSO: @array_256 ; 9668
AP     0             ; 9669
RTN                  ; 9670
LD     0 0          ;  <== lambda_1008  [a, b] (as expr) ; 9671
LD     0 1          ; var b ; 9672
CONS                 ; 9673
RTN                  ; 9674
LD     0 0          ;  <== lambda_1009  [Tuple<ListCons<Integer>,Function2<Integer,Integer,Function1<Integer,Integer>>> t] (as expr) ; 9675
CAR                 ; generateTupleAccess total=2 pos=0 ; 9676
LDC    0            ; just constant from code ; 9677
LDF    10223        ;  @lambda_1052 ; 9678
LDF    86           ;  @mapi ; 9679
AP     3             ; 9680
RTN                  ; 9681
LD     0 0          ;  <== lambda_1010  [row, rowy] (as expr) ; 9682
LD     0 1          ; var rowy ; 9683
LDF    3525         ;  @collectWalkableXY ; 9684
AP     2             ; 9685
LDC 0               ; local var space ; 9686
LDF    3517         ;  @my_cat_maybes ; 9687
AP     2             ; 9688
RTN                  ; 9689
LD     1 0          ;  <== lambda_1011  [Point w] (as expr) ; 9690
LD     0 0          ; var w ; 9691
CAR                 ; generateTupleAccess total=2 pos=0 ; 9692
LD     0 0          ; var w ; 9693
CDR                 ; generateTupleAccess total=2 pos=1 ; 9694
LDC 0               ; local var space ; 9695
LDC 0               ; local var space ; 9696
LDC 0               ; local var space ; 9697
LDC 0               ; local var space ; 9698
LDF    3104         ;  @isJunction ; 9699
AP     7             ; 9700
RTN                  ; 9701
LD     0 0          ;  <== lambda_1012  [Point pt] (as expr) ; 9702
LDF    3232         ;  @getPointKey ; 9703
AP     1             ; 9704
LD     0 0          ; var pt ; 9705
CONS                 ; 9706
RTN                  ; 9707
LD     1 0          ;  <== lambda_1013  [j] (as expr) ; 9708
LD     0 0          ; var j ; 9709
LD     1 8          ; var junctions ; 9710
LD     1 6          ; var junctionsList ; 9711
LD     1 1          ; var accessors ; 9712
LDC 0               ; local var space ; 9713
LDF    3163         ;  @findNeighbourJunctions ; 9714
AP     6             ; 9715
RTN                  ; 9716
LD     0 0          ;  <== lambda_1014  [ParsedEdge pe, Integer ix] (as expr) ; 9717
CAR                 ; generateTupleAccess total=7 pos=0 ; 9718
LD     0 0          ; var pe ; 9719
CDR                 ; generateTupleAccess total=7 pos=1 ; 9720
CAR                  ; 9721
LD     0 0          ; var pe ; 9722
CDR                 ; generateTupleAccess total=7 pos=2 ; 9723
CDR                  ; 9724
CAR                  ; 9725
LD     0 0          ; var pe ; 9726
CDR                 ; generateTupleAccess total=7 pos=3 ; 9727
CDR                  ; 9728
CDR                  ; 9729
CAR                  ; 9730
LD     0 0          ; var pe ; 9731
CDR                 ; generateTupleAccess total=7 pos=4 ; 9732
CDR                  ; 9733
CDR                  ; 9734
CDR                  ; 9735
CAR                  ; 9736
LD     0 1          ; var ix ; 9737
LDC    -1           ; just negative constant from code ; 9738
CONS                 ; 9739
CONS                 ; 9740
CONS                 ; 9741
CONS                 ; 9742
CONS                 ; 9743
CONS                 ; 9744
RTN                  ; 9745
LD     0 0          ;  <== lambda_1015  [ParsedEdge pe, Integer ix] (as expr) ; 9746
CAR                 ; generateTupleAccess total=7 pos=0 ; 9747
LD     0 0          ; var pe ; 9748
CDR                 ; generateTupleAccess total=7 pos=1 ; 9749
CAR                  ; 9750
LD     0 0          ; var pe ; 9751
CDR                 ; generateTupleAccess total=7 pos=2 ; 9752
CDR                  ; 9753
CAR                  ; 9754
LD     0 0          ; var pe ; 9755
CDR                 ; generateTupleAccess total=7 pos=3 ; 9756
CDR                  ; 9757
CDR                  ; 9758
CAR                  ; 9759
LD     0 0          ; var pe ; 9760
CDR                 ; generateTupleAccess total=7 pos=4 ; 9761
CDR                  ; 9762
CDR                  ; 9763
CDR                  ; 9764
CAR                  ; 9765
LD     0 0          ; var pe ; 9766
CDR                 ; generateTupleAccess total=7 pos=5 ; 9767
CDR                  ; 9768
CDR                  ; 9769
CDR                  ; 9770
CDR                  ; 9771
CAR                  ; 9772
LD     0 0          ; var pe ; 9773
CDR                 ; generateTupleAccess total=7 pos=1 ; 9774
CAR                  ; 9775
LD     0 0          ; var pe ; 9776
CAR                 ; generateTupleAccess total=7 pos=0 ; 9777
LD     1 10         ; var allParsedEdges2 ; 9778
LDF    3503         ;  @findEdge ; 9779
AP     3             ; 9780
LDF    3509         ;  @edgeNumber ; 9781
AP     1             ; 9782
CONS                 ; 9783
CONS                 ; 9784
CONS                 ; 9785
CONS                 ; 9786
CONS                 ; 9787
CONS                 ; 9788
RTN                  ; 9789
LD     0 0          ;  <== lambda_1016  [GhostState g, ListCons s, Integer ind] (as expr) ; 9790
CDR                 ; generateTupleAccess total=3 pos=1 ; 9791
CAR                  ; 9792
LD     0 1          ; var s ; 9793
LD     0 2          ; var ind ; 9794
CONS                 ; 9795
CONS                 ; 9796
RTN                  ; 9797
LD     0 0          ;  <== lambda_1017  [nextaistate, worldState] (as expr) ; 9798
LD     0 1          ; var worldState ; 9799
LDC 0               ; local var space ; 9800
LDC 0               ; local var space ; 9801
LDC 0               ; local var space ; 9802
LDC 0               ; local var space ; 9803
LDC 0               ; local var space ; 9804
LDC 0               ; local var space ; 9805
LDC 0               ; local var space ; 9806
LDC 0               ; local var space ; 9807
LDC 0               ; local var space ; 9808
LDC 0               ; local var space ; 9809
LDC 0               ; local var space ; 9810
LDC 0               ; local var space ; 9811
LDF    2649         ;  @performMove ; 9812
AP     14            ; 9813
RTN                  ; 9814
LD     0 0          ;  <== lambda_1018  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9815
CDR                 ; generateTupleAccess total=2 pos=1 ; 9816
CAR                 ; generateTupleAccess total=2 pos=0 ; 9817
LD     1 1          ; var start ; 9818
CAR                 ; generateTupleAccess total=2 pos=0 ; 9819
CEQ                  ; 9820
LDC    1            ; for negation ; 9821
SUB                  ; 9822
LD     0 0          ; var t ; 9823
CDR                 ; generateTupleAccess total=2 pos=1 ; 9824
CDR                 ; generateTupleAccess total=2 pos=1 ; 9825
LD     1 1          ; var start ; 9826
CDR                 ; generateTupleAccess total=2 pos=1 ; 9827
CEQ                  ; 9828
LDC    1            ; for negation ; 9829
SUB                  ; 9830
ADD                  ; 9831
SEL    9834 9836    ; IF? 61 ; 9832
RTN                  ; 9833
LDC    1            ; THEN: 61 ; 9834
JOIN                 ; 9835
LDC    0            ; ELSE: 61 ; 9836
JOIN                 ; 9837
LDC    0            ;  <== lambda_1019  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9838
LD     0 0          ; var t ; 9839
CAR                 ; generateTupleAccess total=2 pos=0 ; 9840
AP     1             ; 9841
LDC    2            ; Named Const = CT.PILL ; 9842
CEQ                  ; 9843
SEL    9846 9848    ; IF? 62 ; 9844
RTN                  ; 9845
LDC    1            ; THEN: 62 ; 9846
JOIN                 ; 9847
LDC    0            ; ELSE: 62 ; 9848
JOIN                 ; 9849
LD     0 0          ;  <== lambda_1020  [Point p] (as expr) ; 9850
CAR                 ; generateTupleAccess total=2 pos=0 ; 9851
LD     1 1          ; var start ; 9852
CAR                 ; generateTupleAccess total=2 pos=0 ; 9853
CEQ                  ; 9854
LDC    1            ; for negation ; 9855
SUB                  ; 9856
LD     0 0          ; var p ; 9857
CDR                 ; generateTupleAccess total=2 pos=1 ; 9858
LD     1 1          ; var start ; 9859
CDR                 ; generateTupleAccess total=2 pos=1 ; 9860
CEQ                  ; 9861
LDC    1            ; for negation ; 9862
SUB                  ; 9863
ADD                  ; 9864
SEL    9867 9869    ; IF? 63 ; 9865
RTN                  ; 9866
LDC    1            ; THEN: 63 ; 9867
JOIN                 ; 9868
LDC    0            ; ELSE: 63 ; 9869
JOIN                 ; 9870
LD     1 2          ;  <== lambda_1021  [Point p] (as expr) ; 9871
LD     0 0          ; var p ; 9872
CDR                 ; generateTupleAccess total=2 pos=1 ; 9873
LD     0 0          ; var p ; 9874
CAR                 ; generateTupleAccess total=2 pos=0 ; 9875
LDF    3605         ;  @getMapItem ; 9876
AP     3             ; 9877
LDC    6            ; Named Const = CT.GHOST ; 9878
CEQ                  ; 9879
SEL    9882 9884    ; IF? 64 ; 9880
RTN                  ; 9881
LDC    1            ; THEN: 64 ; 9882
JOIN                 ; 9883
LDC    0            ; ELSE: 64 ; 9884
JOIN                 ; 9885
LDC    0            ;  <== lambda_1022  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9886
LD     0 0          ; var t ; 9887
CAR                 ; generateTupleAccess total=2 pos=0 ; 9888
AP     1             ; 9889
LDC    2            ; Named Const = CT.PILL ; 9890
CEQ                  ; 9891
SEL    9894 9896    ; IF? 65 ; 9892
RTN                  ; 9893
LDC    1            ; THEN: 65 ; 9894
JOIN                 ; 9895
LDC    0            ; ELSE: 65 ; 9896
JOIN                 ; 9897
LD     0 0          ;  <== lambda_1023  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9898
LDC    0            ; just constant from code ; 9899
LD     0 1          ; var t ; 9900
CAR                 ; generateTupleAccess total=2 pos=0 ; 9901
AP     1             ; 9902
LDC    2            ; Named Const = CT.PILL ; 9903
CEQ                  ; 9904
SEL    9908 9910    ; IF? 66 ; 9905
ADD                  ; 9906
RTN                  ; 9907
LDC    1            ; THEN: 66 ; 9908
JOIN                 ; 9909
LDC    0            ; ELSE: 66 ; 9910
JOIN                 ; 9911
LD     0 0          ;  <== lambda_1024  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9912
CDR                 ; generateTupleAccess total=2 pos=1 ; 9913
CAR                 ; generateTupleAccess total=2 pos=0 ; 9914
LD     1 1          ; var start ; 9915
CAR                 ; generateTupleAccess total=2 pos=0 ; 9916
CEQ                  ; 9917
LDC    1            ; for negation ; 9918
SUB                  ; 9919
LD     0 0          ; var t ; 9920
CDR                 ; generateTupleAccess total=2 pos=1 ; 9921
CDR                 ; generateTupleAccess total=2 pos=1 ; 9922
LD     1 1          ; var start ; 9923
CDR                 ; generateTupleAccess total=2 pos=1 ; 9924
CEQ                  ; 9925
LDC    1            ; for negation ; 9926
SUB                  ; 9927
ADD                  ; 9928
SEL    9931 9933    ; IF? 67 ; 9929
RTN                  ; 9930
LDC    1            ; THEN: 67 ; 9931
JOIN                 ; 9932
LDC    0            ; ELSE: 67 ; 9933
JOIN                 ; 9934
LDC    0            ;  <== lambda_1025  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9935
LD     0 1          ; var t ; 9936
CAR                 ; generateTupleAccess total=2 pos=0 ; 9937
AP     1             ; 9938
LDC    2            ; Named Const = CT.PILL ; 9939
CEQ                  ; 9940
SEL    9943 9945    ; IF? 68 ; 9941
RTN                  ; 9942
LDC    1            ; THEN: 68 ; 9943
JOIN                 ; 9944
LDC    0            ; ELSE: 68 ; 9945
JOIN                 ; 9946
LD     1 1          ;  <== lambda_1026  [e] (as expr) ; 9947
LD     0 0          ; var e ; 9948
LDF    3393         ;  @pointInEdge ; 9949
AP     2             ; 9950
RTN                  ; 9951
LD     0 0          ;  <== lambda_1027  [Queue<ListCons<ParsedEdge>> qq, ParsedEdge e] (as expr) ; 9952
LD     0 1          ; var e ; 9953
LDC    0            ; NULL literal ; 9954
CONS                 ; 9955
LDF    407          ;  @queue_enqueue ; 9956
AP     2             ; 9957
RTN                  ; 9958
LD     0 0          ;  <== lambda_1028  [ParsedEdge e] (as expr) ; 9959
CDR                 ; generateTupleAccess total=7 pos=5 ; 9960
CDR                  ; 9961
CDR                  ; 9962
CDR                  ; 9963
CDR                  ; 9964
CAR                  ; 9965
LDC    0            ; just constant from code ; 9966
CONS                 ; 9967
RTN                  ; 9968
LD     0 0          ;  <== lambda_1029  [r] (as expr) ; 9969
LDC    5            ; just constant from code ; 9970
LD     0 0          ; var r ; 9971
LDF    125          ;  @last ; 9972
AP     1             ; 9973
LD     1 2          ; var worldState ; 9974
CDR                 ; generateTupleAccess total=4 pos=1 ; 9975
CAR                  ; 9976
CDR                 ; generateTupleAccess total=5 pos=1 ; 9977
CAR                  ; 9978
LDC 0               ; local var space ; 9979
LDC 0               ; local var space ; 9980
LDF    2632         ;  @countMyEdgePills ; 9981
AP     4             ; 9982
MUL                  ; 9983
LD     0 0          ; var r ; 9984
LDF    299          ;  @reverse ; 9985
AP     1             ; 9986
CDR                  ; 9987
LDF    2982         ;  @countRoutePills ; 9988
AP     1             ; 9989
ADD                  ; 9990
CONS                 ; 9991
RTN                  ; 9992
LD     0 0          ;  <== lambda_1030  [Tuple<ListCons<ParsedEdge>,Integer> t] (as expr) ; 9993
CDR                 ; generateTupleAccess total=2 pos=1 ; 9994
RTN                  ; 9995
LD     0 0          ;  <== lambda_1031  [Point p] (as expr) ; 9996
CAR                 ; generateTupleAccess total=2 pos=0 ; 9997
LD     1 2          ; var location ; 9998
CAR                 ; generateTupleAccess total=2 pos=0 ; 9999
CEQ                  ; 10000
LDC    1            ; for negation ; 10001
SUB                  ; 10002
LD     0 0          ; var p ; 10003
CDR                 ; generateTupleAccess total=2 pos=1 ; 10004
LD     1 2          ; var location ; 10005
CDR                 ; generateTupleAccess total=2 pos=1 ; 10006
CEQ                  ; 10007
LDC    1            ; for negation ; 10008
SUB                  ; 10009
ADD                  ; 10010
SEL    10013 10015  ; IF? 69 ; 10011
RTN                  ; 10012
LDC    1            ; THEN: 69 ; 10013
JOIN                 ; 10014
LDC    0            ; ELSE: 69 ; 10015
JOIN                 ; 10016
LD     0 0          ;  <== lambda_1032  [ParsedEdge pe] (as expr) ; 10017
CAR                 ; generateTupleAccess total=7 pos=0 ; 10018
LD     1 1          ; var lookingEdge ; 10019
LDC 0               ; local var space ; 10020
LDF    2975         ;  @endingPointOfEdgeRoute ; 10021
AP     2             ; 10022
LDF    2958         ;  @pointEquals ; 10023
AP     2             ; 10024
RTN                  ; 10025
LDC    1            ;  <== lambda_1033  [ParsedEdge f] (as expr) ; 10026
LD     1 3          ; var visited ; 10027
LD     0 0          ; var f ; 10028
CDR                 ; generateTupleAccess total=7 pos=5 ; 10029
CDR                  ; 10030
CDR                  ; 10031
CDR                  ; 10032
CDR                  ; 10033
CAR                  ; 10034
LDF    1277         ;  @sorted_map_contains ; 10035
AP     2             ; 10036
SUB                  ; 10037
RTN                  ; 10038
LD     0 0          ;  <== lambda_1034  [pe] (as expr) ; 10039
LD     1 1          ; var worldState ; 10040
CAR                 ; generateTupleAccess total=4 pos=0 ; 10041
LDC 0               ; local var space ; 10042
LDC 0               ; local var space ; 10043
LDF    2605         ;  @collectAnyEdgePills ; 10044
AP     4             ; 10045
LDF    532          ;  @length ; 10046
AP     1             ; 10047
LDC    0            ; just constant from code ; 10048
CGT                  ; 10049
SEL    10052 10054  ; IF? 70 ; 10050
RTN                  ; 10051
LDC    1            ; THEN: 70 ; 10052
JOIN                 ; 10053
LDC    0            ; ELSE: 70 ; 10054
JOIN                 ; 10055
LD     0 0          ;  <== lambda_1035  [ParsedEdge f] (as expr) ; 10056
CDR                 ; generateTupleAccess total=7 pos=5 ; 10057
CDR                  ; 10058
CDR                  ; 10059
CDR                  ; 10060
CDR                  ; 10061
CAR                  ; 10062
LDC    0            ; just constant from code ; 10063
CONS                 ; 10064
RTN                  ; 10065
LD     0 0          ;  <== lambda_1036  [ParsedEdge f] (as expr) ; 10066
CDR                 ; generateTupleAccess total=7 pos=6 ; 10067
CDR                  ; 10068
CDR                  ; 10069
CDR                  ; 10070
CDR                  ; 10071
CDR                  ; 10072
LDC    0            ; just constant from code ; 10073
CONS                 ; 10074
RTN                  ; 10075
LD     0 0          ;  <== lambda_1037  [ParsedEdge next] (as expr) ; 10076
LD     1 8          ; var lookingEdge ; 10077
CONS                 ; 10078
RTN                  ; 10079
LD     0 0          ;  <== lambda_1038  [Queue<ListCons<ParsedEdge>> qq, ListCons<ParsedEdge> nr] (as expr) ; 10080
LD     0 1          ; var nr ; 10081
LDF    407          ;  @queue_enqueue ; 10082
AP     2             ; 10083
RTN                  ; 10084
LD     0 0          ;  <== lambda_1039  [acc, pe] (as expr) ; 10085
LD     0 1          ; var pe ; 10086
LDC 0               ; local var space ; 10087
LDC 0               ; local var space ; 10088
LDF    2618         ;  @countAnyEdgePills ; 10089
AP     3             ; 10090
ADD                  ; 10091
RTN                  ; 10092
LD     0 0          ;  <== lambda_1040  [p] (as expr) ; 10093
CAR                  ; 10094
LD     0 0          ; var p ; 10095
LDF    125          ;  @last ; 10096
AP     1             ; 10097
LD     0 0          ; var p ; 10098
LD     0 0          ; var p ; 10099
LD     1 4          ; var accessors ; 10100
LDF    3192         ;  @makeEdgeAccess ; 10101
AP     2             ; 10102
LD     0 0          ; var p ; 10103
LDF    532          ;  @length ; 10104
AP     1             ; 10105
LDC    1            ; just constant from code ; 10106
SUB                  ; 10107
LDC    -1           ; just negative constant from code ; 10108
LDC    -1           ; just negative constant from code ; 10109
CONS                 ; 10110
CONS                 ; 10111
CONS                 ; 10112
CONS                 ; 10113
CONS                 ; 10114
CONS                 ; 10115
RTN                  ; 10116
LDC    100          ;  <== lambda_1041  [Point pt] (as expr) ; 10117
LD     0 0          ; var pt ; 10118
CAR                 ; generateTupleAccess total=2 pos=0 ; 10119
LD     1 1          ; var accessors ; 10120
LD     0 0          ; var pt ; 10121
CDR                 ; generateTupleAccess total=2 pos=1 ; 10122
LDF    423          ;  @list_item ; 10123
AP     2             ; 10124
AP     2             ; 10125
RTN                  ; 10126
LD     1 0          ;  <== lambda_1042  [Tuple<Integer,Point> d] (as expr) ; 10127
LD     0 0          ; var d ; 10128
CDR                 ; generateTupleAccess total=2 pos=1 ; 10129
LDF    3084         ;  @isWalkable2 ; 10130
AP     2             ; 10131
LDC    1            ; just constant from code ; 10132
LD     1 4          ; var visited ; 10133
LD     0 0          ; var d ; 10134
CAR                 ; generateTupleAccess total=2 pos=0 ; 10135
LDF    1277         ;  @sorted_map_contains ; 10136
AP     2             ; 10137
SUB                  ; 10138
MUL                  ; 10139
RTN                  ; 10140
LD     1 2          ;  <== lambda_1043  [Tuple<Integer,Point> e] (as expr) ; 10141
LD     0 0          ; var e ; 10142
CAR                 ; generateTupleAccess total=2 pos=0 ; 10143
LDF    1277         ;  @sorted_map_contains ; 10144
AP     2             ; 10145
RTN                  ; 10146
LD     1 3          ;  <== lambda_1044  [Tuple<Integer,Point> e] (as expr) ; 10147
LDF    10231        ;  @lambda_1053 ; 10148
LDF    545          ;  @any ; 10149
AP     2             ; 10150
RTN                  ; 10151
LDC    1            ;  <== lambda_1045  [Tuple<Integer,Point> e] (as expr) ; 10152
LD     1 14         ; var arriveds ; 10153
LD     0 0          ; var e ; 10154
CAR                 ; generateTupleAccess total=2 pos=0 ; 10155
LDF    1277         ;  @sorted_map_contains ; 10156
AP     2             ; 10157
SUB                  ; 10158
RTN                  ; 10159
LD     0 0          ;  <== lambda_1046  [Tuple<Integer,Point> e] (as expr) ; 10160
CDR                 ; generateTupleAccess total=2 pos=1 ; 10161
LD     1 8          ; var thisRoute ; 10162
CONS                 ; 10163
RTN                  ; 10164
LD     0 0          ;  <== lambda_1047  [r, i] (as expr) ; 10165
LD     0 1          ; var i ; 10166
LDF    407          ;  @queue_enqueue ; 10167
AP     2             ; 10168
RTN                  ; 10169
LD     0 0          ;  <== lambda_1048  [Tuple<Integer,Point> e] (as expr) ; 10170
CDR                 ; generateTupleAccess total=2 pos=1 ; 10171
LD     1 8          ; var thisRoute ; 10172
CONS                 ; 10173
RTN                  ; 10174
LD     1 0          ;  <== lambda_1049  [Point ep] (as expr) ; 10175
CAR                 ; generateTupleAccess total=2 pos=0 ; 10176
LD     0 0          ; var ep ; 10177
CAR                 ; generateTupleAccess total=2 pos=0 ; 10178
CEQ                  ; 10179
LD     1 0          ; var pos ; 10180
CDR                 ; generateTupleAccess total=2 pos=1 ; 10181
LD     0 0          ; var ep ; 10182
CDR                 ; generateTupleAccess total=2 pos=1 ; 10183
CEQ                  ; 10184
MUL                  ; 10185
SEL    10188 10190  ; IF? 71 ; 10186
RTN                  ; 10187
LDC    1            ; THEN: 71 ; 10188
JOIN                 ; 10189
LDC    0            ; ELSE: 71 ; 10190
JOIN                 ; 10191
LD     0 0          ;  <== lambda_1050  [ParsedEdge e] (as expr) ; 10192
CAR                 ; generateTupleAccess total=7 pos=0 ; 10193
LD     1 0          ; var a ; 10194
LDF    2958         ;  @pointEquals ; 10195
AP     2             ; 10196
LD     0 0          ; var e ; 10197
CDR                 ; generateTupleAccess total=7 pos=1 ; 10198
CAR                  ; 10199
LD     1 1          ; var b ; 10200
LDF    2958         ;  @pointEquals ; 10201
AP     2             ; 10202
MUL                  ; 10203
RTN                  ; 10204
LD     0 0          ;  <== lambda_1051  [col, colx] (as expr) ; 10205
LDC 0               ; local var space ; 10206
LDF    3070         ;  @isWalkable ; 10207
AP     2             ; 10208
LDC    0            ; just constant from code ; 10209
CGT                  ; 10210
SEL    10213 10220  ; IF? 72 ; 10211
RTN                  ; 10212
LD     0 1          ; THEN: 72 ; 10213
LD     1 1          ; var rowy ; 10214
CONS                 ; 10215
LDC 0               ; local var space ; 10216
LDF    220          ;  @JUST ; 10217
AP     2             ; 10218
JOIN                 ; 10219
LDF    216          ; ELSE: 72, ALSO: @NOTHING ; 10220
AP     0             ; 10221
JOIN                 ; 10222
LD     0 0          ;  <== lambda_1052  [val, ix] (as expr) ; 10223
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 10224
LD     0 1          ; var ix ; 10225
LD     1 0          ; var t ; 10226
CDR                 ; generateTupleAccess total=2 pos=1 ; 10227
AP     2             ; 10228
AP     1             ; 10229
RTN                  ; 10230
LD     1 0          ;  <== lambda_1053  [d] (as expr) ; 10231
CDR                 ; generateTupleAccess total=2 pos=1 ; 10232
LD     0 0          ; var d ; 10233
LDF    2958         ;  @pointEquals ; 10234
AP     2             ; 10235
RTN                  ; 10236
LD     0 0          ;  <== lambda_1054  [x, y] (as expr) ; 10237
LD     0 1          ; var y ; 10238
MUL                  ; 10239
RTN                  ; 10240
LD     0 0          ;  <== lambda_1055  [x, y] (as expr) ; 10241
LD     0 1          ; var y ; 10242
ADD                  ; 10243
LDC    0            ; just constant from code ; 10244
CGT                  ; 10245
SEL    10248 10250  ; IF? 131 ; 10246
RTN                  ; 10247
LDC    1            ; THEN: 131 ; 10248
JOIN                 ; 10249
LDC    0            ; ELSE: 131 ; 10250
JOIN                 ; 10251
LD     0 0          ;  <== lambda_1056  [x, y] (as expr) ; 10252
LD     0 1          ; var y ; 10253
CEQ                  ; 10254
LDC    1            ; for negation ; 10255
SUB                  ; 10256
SEL    10259 10261  ; IF? 132 ; 10257
RTN                  ; 10258
LDC    1            ; THEN: 132 ; 10259
JOIN                 ; 10260
LDC    0            ; ELSE: 132 ; 10261
JOIN                 ; 10262
LD     1 2          ;  <== lambda_1057  [Tuple<Integer,Point> e] (as expr) ; 10263
LD     0 0          ; var e ; 10264
CAR                 ; generateTupleAccess total=2 pos=0 ; 10265
LDF    1277         ;  @sorted_map_contains ; 10266
AP     2             ; 10267
RTN                  ; 10268
