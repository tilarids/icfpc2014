LD     0 0          ;  <== entryPoint  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 0
LD     0 1          ; var ghostSpecs ; 1
LDC 0               ; local var space ; 2
LDC 0               ; local var space ; 3
LDC 0               ; local var space ; 4
LDF    6764         ;  @entryFactual ; 5
AP     5             ; 6
RTN                  ; 7
LD     0 0          ;  <== mydebug  [T o] (as blk) ; 8
DBUG                 ; 9
LD     0 0          ; var o ; 10
RTN                  ; 11
LD     0 0          ;  <== mydebugv  [Object tag, T o] (as blk) ; 12
DBUG                 ; 13
LD     0 1          ; var o ; 14
DBUG                 ; 15
LD     0 1          ; var o ; 16
RTN                  ; 17
LD     0 2          ;  <== foldl  [Function2<A,B,A> f, A a, ListCons<B> l] (as blk) ; 18
ATOM                 ; 19
SEL    22 24        ; IF? 12 ; 20
RTN                  ; 21
LD     0 1          ; THEN: 12 ; 22
JOIN                 ; 23
LD     0 0          ; ELSE: 12 ; 24
LD     0 1          ; var a ; 25
LD     0 2          ; var l ; 26
CAR                  ; 27
LD     0 0          ; var f ; 28
AP     2             ; 29
LD     0 2          ; var l ; 30
CDR                  ; 31
LDF    18           ;  @foldl ; 32
AP     3             ; 33
JOIN                 ; 34
LD     0 2          ;  <== foldr  [Function2<A,B,B> f, B a, ListCons<A> l] (as blk) ; 35
ATOM                 ; 36
SEL    39 41        ; IF? 13 ; 37
RTN                  ; 38
LD     0 1          ; THEN: 13 ; 39
JOIN                 ; 40
LD     0 2          ; ELSE: 13 ; 41
CAR                  ; 42
LD     0 0          ; var f ; 43
LD     0 1          ; var a ; 44
LD     0 2          ; var l ; 45
CDR                  ; 46
LDF    35           ;  @foldr ; 47
AP     3             ; 48
LD     0 0          ; var f ; 49
AP     2             ; 50
JOIN                 ; 51
LDF    9715         ;  <== o  [final Function1<B,C> f, final Function1<A,B> g] (as blk), ALSO: @lambda_1012 ; 52
RTN                  ; 53
LDF    9721         ;  <== flip  [Function2<A,B,C> f] (as blk), ALSO: @lambda_1013 ; 54
RTN                  ; 55
LD     0 0          ;  <== map  [ListCons<T> c, Function1<T,T2> arg] (as blk) ; 56
ATOM                 ; 57
SEL    60 62        ; IF? 3 ; 58
RTN                  ; 59
LDC    0            ; THEN: 3 ; 60
JOIN                 ; 61
LD     0 0          ; ELSE: 3 ; 62
CAR                  ; 63
LD     0 1          ; var arg ; 64
AP     1             ; 65
LD     0 0          ; var c ; 66
CDR                  ; 67
LD     0 1          ; var arg ; 68
LDF    56           ;  @map ; 69
AP     2             ; 70
CONS                 ; 71
JOIN                 ; 72
LD     0 0          ;  <== mapi  [ListCons<D> c, int ix, Function2<D,Integer,D2> arg] (as blk) ; 73
ATOM                 ; 74
SEL    77 79        ; IF? 5 ; 75
RTN                  ; 76
LDC    0            ; THEN: 5 ; 77
JOIN                 ; 78
LD     0 0          ; ELSE: 5 ; 79
CAR                  ; 80
LD     0 1          ; var ix ; 81
LD     0 2          ; var arg ; 82
AP     2             ; 83
LD     0 0          ; var c ; 84
CDR                  ; 85
LD     0 1          ; var ix ; 86
LDC    1            ; just constant from code ; 87
ADD                  ; 88
LD     0 2          ; var arg ; 89
LDF    73           ;  @mapi ; 90
AP     3             ; 91
CONS                 ; 92
JOIN                 ; 93
LD     0 0          ;  <== cat_maybes  [ListCons<Maybe<D>> data] (as blk) ; 94
LDF    9726         ;  @lambda_1014 ; 95
LDF    56           ;  @map ; 96
AP     2             ; 97
ST     0 1           ; 98
LD     0 1          ; var mtl ; 99
LDF    105          ;  @concat ; 100
AP     1             ; 101
ST     0 2           ; 102
LD     0 2          ; var rv ; 103
RTN                  ; 104
LD     0 0          ;  <== concat  [ListCons<ListCons<D>> data] (as blk) ; 105
LDC    0            ; NULL literal ; 106
LDF    136          ;  @concat_acc ; 107
AP     2             ; 108
LDF    286          ;  @reverse ; 109
AP     1             ; 110
RTN                  ; 111
LD     0 0          ;  <== last  [ListCons<D> data] (as blk) ; 112
ATOM                 ; 113
SEL    120 122       ; 114
LD     0 0          ; var data ; 115
CDR                  ; 116
ATOM                 ; 117
SEL    123 126      ; IF? 14 ; 118
RTN                  ; 119
BRK                 ; branch@120 ; 120
JOIN                 ; 121
JOIN                ; branch@122 ; 122
LD     0 0          ; THEN: 14 ; 123
CAR                  ; 124
JOIN                 ; 125
LD     0 0          ; ELSE: 14 ; 126
CDR                  ; 127
LDF    112          ;  @last ; 128
AP     1             ; 129
JOIN                 ; 130
LD     0 0          ;  <== concat_set  [ListCons<ListCons<D>> data] (as blk) ; 131
LDC    0            ; NULL literal ; 132
LDF    136          ;  @concat_acc ; 133
AP     2             ; 134
RTN                  ; 135
LD     0 0          ;  <== concat_acc  [ListCons<ListCons<D>> data, ListCons<D> acc] (as blk) ; 136
ATOM                 ; 137
SEL    140 142      ; IF? 6 ; 138
RTN                  ; 139
LD     0 1          ; THEN: 6 ; 140
JOIN                 ; 141
LD     0 0          ; ELSE: 6 ; 142
CDR                  ; 143
LD     0 0          ; var data ; 144
CAR                  ; 145
LD     0 1          ; var acc ; 146
LDF    152          ;  @concat2 ; 147
AP     2             ; 148
LDF    136          ;  @concat_acc ; 149
AP     2             ; 150
JOIN                 ; 151
LD     0 0          ;  <== concat2  [ListCons<D> data, ListCons<D> data2] (as blk) ; 152
ATOM                 ; 153
SEL    156 158      ; IF? 15 ; 154
RTN                  ; 155
LD     0 1          ; THEN: 15 ; 156
JOIN                 ; 157
LD     0 1          ; ELSE: 15 ; 158
ATOM                 ; 159
SEL    162 164      ; IF? 72 ; 160
JOIN                 ; 161
LD     0 0          ; THEN: 72 ; 162
JOIN                 ; 163
LD     0 0          ; ELSE: 72 ; 164
LDF    286          ;  @reverse ; 165
AP     1             ; 166
LD     0 1          ; var data2 ; 167
LDF    188          ;  @concat2_acc ; 168
AP     2             ; 169
JOIN                 ; 170
LD     0 0          ;  <== concat2_set  [ListCons<D> data, ListCons<D> data2] (as blk) ; 171
ATOM                 ; 172
SEL    175 177      ; IF? 16 ; 173
RTN                  ; 174
LD     0 1          ; THEN: 16 ; 175
JOIN                 ; 176
LD     0 1          ; ELSE: 16 ; 177
ATOM                 ; 178
SEL    181 183      ; IF? 73 ; 179
JOIN                 ; 180
LD     0 0          ; THEN: 73 ; 181
JOIN                 ; 182
LD     0 0          ; ELSE: 73 ; 183
LD     0 1          ; var data2 ; 184
LDF    188          ;  @concat2_acc ; 185
AP     2             ; 186
JOIN                 ; 187
LD     0 0          ;  <== concat2_acc  [ListCons<D> data, ListCons<D> acc] (as blk) ; 188
ATOM                 ; 189
SEL    192 194      ; IF? 17 ; 190
RTN                  ; 191
LD     0 1          ; THEN: 17 ; 192
JOIN                 ; 193
LD     0 0          ; ELSE: 17 ; 194
CDR                  ; 195
LD     0 0          ; var data ; 196
CAR                  ; 197
LD     0 1          ; var acc ; 198
CONS                 ; 199
LDF    188          ;  @concat2_acc ; 200
AP     2             ; 201
JOIN                 ; 202
LDC    0            ;  <== NOTHING  [] (as blk) ; 203
LDC    0            ; NULL literal ; 204
CONS                 ; 205
RTN                  ; 206
LDC    1            ;  <== JUST  [T t] (as blk) ; 207
LD     0 0          ; var t ; 208
CONS                 ; 209
ST     0 1           ; 210
LD     0 1          ; var tMaybe ; 211
RTN                  ; 212
LD     0 0          ;  <== maybeToList  [Maybe<D> d] (as blk) ; 213
LDF    270          ;  @is_nothing ; 214
AP     1             ; 215
LDC    1            ; just constant from code ; 216
CEQ                  ; 217
SEL    220 222      ; IF? 18 ; 218
RTN                  ; 219
LDC    0            ; THEN: 18 ; 220
JOIN                 ; 221
LD     0 0          ; ELSE: 18 ; 222
LDF    275          ;  @from_maybe ; 223
AP     1             ; 224
LDC    0            ; NULL literal ; 225
CONS                 ; 226
JOIN                 ; 227
LDC    0            ;  <== catMaybes_acc  [ListCons<Maybe<D>> data, ListCons<D> acc] (as blk) ; 228
ST     0 2           ; 229
LD     0 0          ; var data ; 230
ATOM                 ; 231
SEL    235 238       ; 232
LD     0 2          ; var rv ; 233
RTN                  ; 234
LD     0 1          ; branch@235 ; 235
ST     0 2           ; 236
JOIN                 ; 237
LD     0 0          ; branch@238 ; 238
CAR                  ; 239
LDF    270          ;  @is_nothing ; 240
AP     1             ; 241
ST     0 3           ; 242
LD     0 0          ; var data ; 243
CAR                  ; 244
LDF    275          ;  @from_maybe ; 245
AP     1             ; 246
ST     0 4           ; 247
LD     0 4          ; var data1 ; 248
LD     0 1          ; var acc ; 249
CONS                 ; 250
ST     0 5           ; 251
LD     0 0          ; var data ; 252
CDR                  ; 253
LD     0 3          ; var nothing ; 254
LDC    1            ; just constant from code ; 255
CEQ                  ; 256
SEL    266 268      ; IF? 74 ; 257
LDC 0               ; local var space ; 258
LDC 0               ; local var space ; 259
LDC 0               ; local var space ; 260
LDC 0               ; local var space ; 261
LDF    228          ;  @catMaybes_acc ; 262
AP     6             ; 263
ST     0 2           ; 264
JOIN                 ; 265
LD     0 1          ; THEN: 74 ; 266
JOIN                 ; 267
LD     0 5          ; ELSE: 74 ; 268
JOIN                 ; 269
LDC    1            ;  <== is_nothing  [Maybe<D> head] (as blk) ; 270
LD     0 0          ; var head ; 271
CAR                 ; generateTupleAccess total=2 pos=0 ; 272
SUB                  ; 273
RTN                  ; 274
LD     0 0          ;  <== from_maybe  [Maybe<D> head] (as blk) ; 275
CAR                 ; generateTupleAccess total=2 pos=0 ; 276
LDC    0            ; just constant from code ; 277
CEQ                  ; 278
SEL    283 285       ; 279
LD     0 0          ; var head ; 280
CDR                 ; generateTupleAccess total=2 pos=1 ; 281
RTN                  ; 282
BRK                 ; branch@283 ; 283
JOIN                 ; 284
JOIN                ; branch@285 ; 285
LD     0 0          ;  <== reverse  [ListCons<D> c] (as blk) ; 286
LDC    0            ; NULL literal ; 287
LDF    358          ;  @reverse_acc ; 288
AP     2             ; 289
RTN                  ; 290
LD     0 0          ;  <== maximum_by_acc  [ListCons<D> d, Function1<D,Integer> projection, D acc] (as blk) ; 291
ATOM                 ; 292
SEL    295 297      ; IF? 19 ; 293
RTN                  ; 294
LD     0 2          ; THEN: 19 ; 295
JOIN                 ; 296
LD     0 2          ; ELSE: 19 ; 297
LD     0 1          ; var projection ; 298
AP     1             ; 299
LD     0 0          ; var d ; 300
CAR                  ; 301
LD     0 1          ; var projection ; 302
AP     1             ; 303
CGT                  ; 304
SEL    307 314      ; IF? 75 ; 305
JOIN                 ; 306
LD     0 0          ; THEN: 75 ; 307
CDR                  ; 308
LD     0 1          ; var projection ; 309
LD     0 2          ; var acc ; 310
LDF    291          ;  @maximum_by_acc ; 311
AP     3             ; 312
JOIN                 ; 313
LD     0 0          ; ELSE: 75 ; 314
CDR                  ; 315
LD     0 1          ; var projection ; 316
LD     0 0          ; var d ; 317
CAR                  ; 318
LDF    291          ;  @maximum_by_acc ; 319
AP     3             ; 320
JOIN                 ; 321
LD     0 0          ;  <== maximum_by  [ListCons<D> d, Function1<D,Integer> projection] (as blk) ; 322
ATOM                 ; 323
SEL    333 335       ; 324
LD     0 0          ; var d ; 325
CDR                  ; 326
LD     0 1          ; var projection ; 327
LD     0 0          ; var d ; 328
CAR                  ; 329
LDF    291          ;  @maximum_by_acc ; 330
AP     3             ; 331
RTN                  ; 332
BRK                 ; branch@333 ; 333
JOIN                 ; 334
JOIN                ; branch@335 ; 335
LD     0 0          ;  <== dropWhile  [ListCons<D> c, Function1<D,Integer> test] (as blk) ; 336
ATOM                 ; 337
SEL    340 342      ; IF? 20 ; 338
RTN                  ; 339
LDC    0            ; THEN: 20 ; 340
JOIN                 ; 341
LD     0 0          ; ELSE: 20 ; 342
CAR                  ; 343
LD     0 1          ; var test ; 344
AP     1             ; 345
LDC    1            ; just constant from code ; 346
CEQ                  ; 347
SEL    350 356      ; IF? 76 ; 348
JOIN                 ; 349
LD     0 0          ; THEN: 76 ; 350
CDR                  ; 351
LD     0 1          ; var test ; 352
LDF    336          ;  @dropWhile ; 353
AP     2             ; 354
JOIN                 ; 355
LD     0 0          ; ELSE: 76 ; 356
JOIN                 ; 357
LD     0 0          ;  <== reverse_acc  [ListCons<D> c, ListCons<D> acc] (as blk) ; 358
ATOM                 ; 359
SEL    362 364      ; IF? 7 ; 360
RTN                  ; 361
LD     0 1          ; THEN: 7 ; 362
JOIN                 ; 363
LD     0 0          ; ELSE: 7 ; 364
CDR                  ; 365
LD     0 0          ; var c ; 366
CAR                  ; 367
LD     0 1          ; var acc ; 368
CONS                 ; 369
LDF    358          ;  @reverse_acc ; 370
AP     2             ; 371
JOIN                 ; 372
LD     0 0          ;  <== fold0  [ListCons<I> c, R init, Function2<R,I,R> arg] (as blk) ; 373
ATOM                 ; 374
SEL    377 379      ; IF? 9 ; 375
RTN                  ; 376
LD     0 1          ; THEN: 9 ; 377
JOIN                 ; 378
LD     0 0          ; ELSE: 9 ; 379
CDR                  ; 380
LD     0 1          ; var init ; 381
LD     0 0          ; var c ; 382
CAR                  ; 383
LD     0 2          ; var arg ; 384
AP     2             ; 385
LD     0 2          ; var arg ; 386
LDF    373          ;  @fold0 ; 387
AP     3             ; 388
JOIN                 ; 389
LDC    0            ;  <== queue_new  [] (as blk) ; 390
LDC    0            ; NULL literal ; 391
CONS                 ; 392
RTN                  ; 393
LD     0 0          ;  <== queue_enqueue  [Queue<T> q, T v] (as blk) ; 394
CAR                 ; generateTupleAccess total=2 pos=0 ; 395
LD     0 1          ; var v ; 396
LD     0 0          ; var q ; 397
CDR                 ; generateTupleAccess total=2 pos=1 ; 398
CONS                 ; 399
CONS                 ; 400
RTN                  ; 401
LD     0 0          ;  <== queue_isempty  [Queue<T> q] (as blk) ; 402
CAR                 ; generateTupleAccess total=2 pos=0 ; 403
ATOM                 ; 404
LD     0 0          ; var q ; 405
CDR                 ; generateTupleAccess total=2 pos=1 ; 406
ATOM                 ; 407
MUL                  ; 408
RTN                  ; 409
LDC    0            ;  <== list_item  [Cons list, int n] (as blk) ; 410
LD     0 1          ; var n ; 411
CGT                  ; 412
SEL    419 421       ; 413
LD     0 1          ; var n ; 414
LDC    0            ; just constant from code ; 415
CEQ                  ; 416
SEL    422 425      ; IF? 11 ; 417
RTN                  ; 418
BRK                 ; branch@419 ; 419
JOIN                 ; 420
JOIN                ; branch@421 ; 421
LD     0 0          ; THEN: 11 ; 422
CAR                  ; 423
JOIN                 ; 424
LD     0 0          ; ELSE: 11 ; 425
CDR                  ; 426
LD     0 1          ; var n ; 427
LDC    1            ; just constant from code ; 428
SUB                  ; 429
LDF    410          ;  @list_item ; 430
AP     2             ; 431
JOIN                 ; 432
LDC    0            ;  <== list_item  [ListCons<T> list, int n] (as blk) ; 433
LD     0 1          ; var n ; 434
CGT                  ; 435
SEL    442 444       ; 436
LD     0 1          ; var n ; 437
LDC    0            ; just constant from code ; 438
CEQ                  ; 439
SEL    445 448      ; IF? 21 ; 440
RTN                  ; 441
BRK                 ; branch@442 ; 442
JOIN                 ; 443
JOIN                ; branch@444 ; 444
LD     0 0          ; THEN: 21 ; 445
CAR                  ; 446
JOIN                 ; 447
LD     0 0          ; ELSE: 21 ; 448
CDR                  ; 449
LD     0 1          ; var n ; 450
LDC    1            ; just constant from code ; 451
SUB                  ; 452
LDF    410          ;  @list_item ; 453
AP     2             ; 454
JOIN                 ; 455
LDC    0            ;  <== list_item_def  [Cons list, int index, Object deflt] (as blk) ; 456
LD     0 1          ; var index ; 457
CGT                  ; 458
SEL    461 463      ; IF? 22 ; 459
RTN                  ; 460
LD     0 2          ; THEN: 22 ; 461
JOIN                 ; 462
LD     0 1          ; ELSE: 22 ; 463
LDC    0            ; just constant from code ; 464
CEQ                  ; 465
SEL    468 471      ; IF? 77 ; 466
JOIN                 ; 467
LD     0 0          ; THEN: 77 ; 468
CAR                  ; 469
JOIN                 ; 470
LD     0 0          ; ELSE: 77 ; 471
CDR                  ; 472
LD     0 1          ; var index ; 473
LDC    1            ; just constant from code ; 474
SUB                  ; 475
LDF    410          ;  @list_item ; 476
AP     2             ; 477
JOIN                 ; 478
LDC    0            ;  <== queue_dequeue  [Queue<T> q] (as blk) ; 479
ST     0 1           ; 480
LD     0 0          ; var q ; 481
CAR                 ; generateTupleAccess total=2 pos=0 ; 482
ATOM                 ; 483
SEL    487 494       ; 484
LD     0 1          ; var retval ; 485
RTN                  ; 486
LD     0 0          ; branch@487 ; 487
CDR                 ; generateTupleAccess total=2 pos=1 ; 488
ATOM                 ; 489
LDC    1            ; for negation ; 490
SUB                  ; 491
SEL    506 517       ; 492
JOIN                 ; 493
LD     0 0          ; branch@494 ; 494
CAR                 ; generateTupleAccess total=2 pos=0 ; 495
CAR                  ; 496
LD     0 0          ; var q ; 497
CAR                 ; generateTupleAccess total=2 pos=0 ; 498
CDR                  ; 499
LD     0 0          ; var q ; 500
CDR                 ; generateTupleAccess total=2 pos=1 ; 501
CONS                 ; 502
CONS                 ; 503
ST     0 1           ; 504
JOIN                 ; 505
LD     0 0          ; branch@506 ; 506
CDR                 ; generateTupleAccess total=2 pos=1 ; 507
LDF    286          ;  @reverse ; 508
AP     1             ; 509
LDC    0            ; NULL literal ; 510
CONS                 ; 511
LDC 0               ; local var space ; 512
LDF    479          ;  @queue_dequeue ; 513
AP     2             ; 514
ST     0 1           ; 515
JOIN                 ; 516
BRK                 ; branch@517 ; 517
JOIN                 ; 518
LD     0 0          ;  <== length  [ListCons<T> list] (as blk) ; 519
LDC    0            ; just constant from code ; 520
LDF    633          ;  @elements_counter ; 521
AP     2             ; 522
RTN                  ; 523
LD     0 0          ;  <== filter  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 524
LD     0 1          ; var pred ; 525
LDC    0            ; NULL literal ; 526
LDF    596          ;  @filter_acc ; 527
AP     3             ; 528
LDF    286          ;  @reverse ; 529
AP     1             ; 530
RTN                  ; 531
LD     0 0          ;  <== any  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 532
ATOM                 ; 533
SEL    536 538      ; IF? 23 ; 534
RTN                  ; 535
LDC    0            ; THEN: 23 ; 536
JOIN                 ; 537
LD     0 0          ; ELSE: 23 ; 538
CAR                  ; 539
LD     0 1          ; var pred ; 540
AP     1             ; 541
LDC    1            ; just constant from code ; 542
CEQ                  ; 543
SEL    546 548      ; IF? 78 ; 544
JOIN                 ; 545
LDC    1            ; THEN: 78 ; 546
JOIN                 ; 547
LD     0 0          ; ELSE: 78 ; 548
CDR                  ; 549
LD     0 1          ; var pred ; 550
LDF    532          ;  @any ; 551
AP     2             ; 552
JOIN                 ; 553
LD     0 0          ;  <== noneof  [ListCons<T> list, Function1<T,Integer> pred] (as blk) ; 554
ATOM                 ; 555
SEL    558 560      ; IF? 24 ; 556
RTN                  ; 557
LDC    1            ; THEN: 24 ; 558
JOIN                 ; 559
LD     0 0          ; ELSE: 24 ; 560
CAR                  ; 561
LD     0 1          ; var pred ; 562
AP     1             ; 563
LDC    1            ; just constant from code ; 564
CEQ                  ; 565
SEL    568 570      ; IF? 79 ; 566
JOIN                 ; 567
LDC    0            ; THEN: 79 ; 568
JOIN                 ; 569
LD     0 0          ; ELSE: 79 ; 570
CDR                  ; 571
LD     0 1          ; var pred ; 572
LDF    554          ;  @noneof ; 573
AP     2             ; 574
JOIN                 ; 575
LD     0 0          ;  <== empty  [Cons d] (as blk) ; 576
ATOM                 ; 577
LDC    1            ; for negation ; 578
SUB                  ; 579
SEL    582 584      ; IF? 25 ; 580
RTN                  ; 581
LDC    0            ; THEN: 25 ; 582
JOIN                 ; 583
LDC    1            ; ELSE: 25 ; 584
JOIN                 ; 585
LD     0 0          ;  <== notempty  [Cons d] (as blk) ; 586
ATOM                 ; 587
LDC    1            ; for negation ; 588
SUB                  ; 589
SEL    592 594      ; IF? 26 ; 590
RTN                  ; 591
LDC    1            ; THEN: 26 ; 592
JOIN                 ; 593
LDC    0            ; ELSE: 26 ; 594
JOIN                 ; 595
LD     0 0          ;  <== filter_acc  [ListCons<T> list, Function1<T,Integer> pred, ListCons<T> acc] (as blk) ; 596
ATOM                 ; 597
SEL    600 602      ; IF? 8 ; 598
RTN                  ; 599
LD     0 2          ; THEN: 8 ; 600
JOIN                 ; 601
LD     0 0          ; ELSE: 8 ; 602
CDR                  ; 603
LD     0 1          ; var pred ; 604
LD     0 0          ; var list ; 605
CAR                  ; 606
LD     0 1          ; var pred ; 607
AP     1             ; 608
LDC    1            ; just constant from code ; 609
CEQ                  ; 610
SEL    615 620      ; IF? 80 ; 611
LDF    596          ;  @filter_acc ; 612
AP     3             ; 613
JOIN                 ; 614
LD     0 0          ; THEN: 80 ; 615
CAR                  ; 616
LD     0 2          ; var acc ; 617
CONS                 ; 618
JOIN                 ; 619
LD     0 2          ; ELSE: 80 ; 620
JOIN                 ; 621
LD     0 0          ;  <== map_height  [Cons map] (as blk) ; 622
LDC    0            ; just constant from code ; 623
LDF    633          ;  @elements_counter ; 624
AP     2             ; 625
RTN                  ; 626
LD     0 0          ;  <== map_width  [Cons map] (as blk) ; 627
CAR                  ; 628
LDC    0            ; just constant from code ; 629
LDF    633          ;  @elements_counter ; 630
AP     2             ; 631
RTN                  ; 632
LD     0 0          ;  <== elements_counter  [Cons list, int counter] (as blk) ; 633
ATOM                 ; 634
SEL    637 639      ; IF? 1 ; 635
RTN                  ; 636
LD     0 1          ; THEN: 1 ; 637
JOIN                 ; 638
LD     0 0          ; ELSE: 1 ; 639
CDR                  ; 640
LD     0 1          ; var counter ; 641
LDC    1            ; just constant from code ; 642
ADD                  ; 643
LDF    633          ;  @elements_counter ; 644
AP     2             ; 645
JOIN                 ; 646
LD     0 1          ;  <== zip_with  [Function2<A,B,C> f, ListCons<A> x, ListCons<B> y] (as blk) ; 647
ATOM                 ; 648
SEL    651 653      ; IF? 4 ; 649
RTN                  ; 650
LDC    0            ; THEN: 4 ; 651
JOIN                 ; 652
LD     0 2          ; ELSE: 4 ; 653
ATOM                 ; 654
SEL    657 659      ; IF? 81 ; 655
JOIN                 ; 656
LDC    0            ; THEN: 81 ; 657
JOIN                 ; 658
LD     0 1          ; ELSE: 81 ; 659
CAR                  ; 660
LD     0 2          ; var y ; 661
CAR                  ; 662
LD     0 0          ; var f ; 663
AP     2             ; 664
LD     0 0          ; var f ; 665
LD     0 1          ; var x ; 666
CDR                  ; 667
LD     0 2          ; var y ; 668
CDR                  ; 669
LDF    647          ;  @zip_with ; 670
AP     3             ; 671
CONS                 ; 672
JOIN                 ; 673
LD     0 1          ;  <== zip3_with  [Function3<A,B,C,R> f, ListCons<A> x, ListCons<B> y, ListCons<C> z] (as blk) ; 674
ATOM                 ; 675
SEL    678 680      ; IF? 10 ; 676
RTN                  ; 677
LDC    0            ; THEN: 10 ; 678
JOIN                 ; 679
LD     0 2          ; ELSE: 10 ; 680
ATOM                 ; 681
SEL    684 686      ; IF? 82 ; 682
JOIN                 ; 683
LDC    0            ; THEN: 82 ; 684
JOIN                 ; 685
LD     0 3          ; ELSE: 82 ; 686
ATOM                 ; 687
SEL    690 692      ; IF? 83 ; 688
JOIN                 ; 689
LDC    0            ; THEN: 83 ; 690
JOIN                 ; 691
LD     0 1          ; ELSE: 83 ; 692
CAR                  ; 693
LD     0 2          ; var y ; 694
CAR                  ; 695
LD     0 3          ; var z ; 696
CAR                  ; 697
LD     0 0          ; var f ; 698
AP     3             ; 699
LD     0 0          ; var f ; 700
LD     0 1          ; var x ; 701
CDR                  ; 702
LD     0 2          ; var y ; 703
CDR                  ; 704
LD     0 3          ; var z ; 705
CDR                  ; 706
LDF    674          ;  @zip3_with ; 707
AP     4             ; 708
CONS                 ; 709
JOIN                 ; 710
LD     0 0          ;  <== zip  [final ListCons<A> x, final ListCons<B> y] (as blk) ; 711
ATOM                 ; 712
SEL    715 717      ; IF? 27 ; 713
RTN                  ; 714
LDC    0            ; THEN: 27 ; 715
JOIN                 ; 716
LD     0 1          ; ELSE: 27 ; 717
ATOM                 ; 718
SEL    721 723      ; IF? 84 ; 719
JOIN                 ; 720
LDC    0            ; THEN: 84 ; 721
JOIN                 ; 722
LD     0 0          ; ELSE: 84 ; 723
CAR                  ; 724
LD     0 1          ; var y ; 725
CAR                  ; 726
CONS                 ; 727
LD     0 0          ; var x ; 728
CDR                  ; 729
LD     0 1          ; var y ; 730
CDR                  ; 731
LDF    711          ;  @zip ; 732
AP     2             ; 733
CONS                 ; 734
JOIN                 ; 735
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 736
LD     0 0          ; var f ; 737
AP     1             ; 738
CAR                  ; 739
ST     0 3           ; 740
LD     0 2          ; var n ; 741
LDC    0            ; just constant from code ; 742
CEQ                  ; 743
SEL    746 750      ; IF? 28 ; 744
RTN                  ; 745
LD     0 3          ; THEN: 28 ; 746
LDC    0            ; NULL literal ; 747
CONS                 ; 748
JOIN                 ; 749
LD     0 3          ; ELSE: 28 ; 750
LD     0 0          ; var f ; 751
LD     0 1          ; var a ; 752
LD     0 0          ; var f ; 753
AP     1             ; 754
CDR                  ; 755
LD     0 2          ; var n ; 756
LDC    1            ; just constant from code ; 757
SUB                  ; 758
LDC 0               ; local var space ; 759
LDF    736          ;  @produce_n ; 760
AP     4             ; 761
CONS                 ; 762
JOIN                 ; 763
LD     0 0          ;  <== range_n  [int n] (as blk) ; 764
LDC    0            ; just constant from code ; 765
CEQ                  ; 766
SEL    769 773      ; IF? 2 ; 767
RTN                  ; 768
LD     0 0          ; THEN: 2 ; 769
LDC    0            ; NULL literal ; 770
CONS                 ; 771
JOIN                 ; 772
LD     0 0          ; ELSE: 2 ; 773
LD     0 0          ; var n ; 774
LDC    1            ; just constant from code ; 775
SUB                  ; 776
LDF    764          ;  @range_n ; 777
AP     1             ; 778
CONS                 ; 779
JOIN                 ; 780
LDC 0               ; generated from native: array_256 ; 781
LDC 0                ; 782
LDC 0                ; 783
LDC 0                ; 784
LDC 0                ; 785
LDC 0                ; 786
LDC 0                ; 787
LDC 0                ; 788
LDC 0                ; 789
LDC 0                ; 790
LDC 0                ; 791
LDC 0                ; 792
LDC 0                ; 793
LDC 0                ; 794
LDC 0                ; 795
LDC 0                ; 796
LDC 0                ; 797
LDC 0                ; 798
LDC 0                ; 799
LDC 0                ; 800
LDC 0                ; 801
LDC 0                ; 802
LDC 0                ; 803
LDC 0                ; 804
LDC 0                ; 805
LDC 0                ; 806
LDC 0                ; 807
LDC 0                ; 808
LDC 0                ; 809
LDC 0                ; 810
LDC 0                ; 811
LDC 0                ; 812
LDC 0                ; 813
LDC 0                ; 814
LDC 0                ; 815
LDC 0                ; 816
LDC 0                ; 817
LDC 0                ; 818
LDC 0                ; 819
LDC 0                ; 820
LDC 0                ; 821
LDC 0                ; 822
LDC 0                ; 823
LDC 0                ; 824
LDC 0                ; 825
LDC 0                ; 826
LDC 0                ; 827
LDC 0                ; 828
LDC 0                ; 829
LDC 0                ; 830
LDC 0                ; 831
LDC 0                ; 832
LDC 0                ; 833
LDC 0                ; 834
LDC 0                ; 835
LDC 0                ; 836
LDC 0                ; 837
LDC 0                ; 838
LDC 0                ; 839
LDC 0                ; 840
LDC 0                ; 841
LDC 0                ; 842
LDC 0                ; 843
LDC 0                ; 844
LDC 0                ; 845
LDC 0                ; 846
LDC 0                ; 847
LDC 0                ; 848
LDC 0                ; 849
LDC 0                ; 850
LDC 0                ; 851
LDC 0                ; 852
LDC 0                ; 853
LDC 0                ; 854
LDC 0                ; 855
LDC 0                ; 856
LDC 0                ; 857
LDC 0                ; 858
LDC 0                ; 859
LDC 0                ; 860
LDC 0                ; 861
LDC 0                ; 862
LDC 0                ; 863
LDC 0                ; 864
LDC 0                ; 865
LDC 0                ; 866
LDC 0                ; 867
LDC 0                ; 868
LDC 0                ; 869
LDC 0                ; 870
LDC 0                ; 871
LDC 0                ; 872
LDC 0                ; 873
LDC 0                ; 874
LDC 0                ; 875
LDC 0                ; 876
LDC 0                ; 877
LDC 0                ; 878
LDC 0                ; 879
LDC 0                ; 880
LDC 0                ; 881
LDC 0                ; 882
LDC 0                ; 883
LDC 0                ; 884
LDC 0                ; 885
LDC 0                ; 886
LDC 0                ; 887
LDC 0                ; 888
LDC 0                ; 889
LDC 0                ; 890
LDC 0                ; 891
LDC 0                ; 892
LDC 0                ; 893
LDC 0                ; 894
LDC 0                ; 895
LDC 0                ; 896
LDC 0                ; 897
LDC 0                ; 898
LDC 0                ; 899
LDC 0                ; 900
LDC 0                ; 901
LDC 0                ; 902
LDC 0                ; 903
LDC 0                ; 904
LDC 0                ; 905
LDC 0                ; 906
LDC 0                ; 907
LDC 0                ; 908
LDC 0                ; 909
LDC 0                ; 910
LDC 0                ; 911
LDC 0                ; 912
LDC 0                ; 913
LDC 0                ; 914
LDC 0                ; 915
LDC 0                ; 916
LDC 0                ; 917
LDC 0                ; 918
LDC 0                ; 919
LDC 0                ; 920
LDC 0                ; 921
LDC 0                ; 922
LDC 0                ; 923
LDC 0                ; 924
LDC 0                ; 925
LDC 0                ; 926
LDC 0                ; 927
LDC 0                ; 928
LDC 0                ; 929
LDC 0                ; 930
LDC 0                ; 931
LDC 0                ; 932
LDC 0                ; 933
LDC 0                ; 934
LDC 0                ; 935
LDC 0                ; 936
LDC 0                ; 937
LDC 0                ; 938
LDC 0                ; 939
LDC 0                ; 940
LDC 0                ; 941
LDC 0                ; 942
LDC 0                ; 943
LDC 0                ; 944
LDC 0                ; 945
LDC 0                ; 946
LDC 0                ; 947
LDC 0                ; 948
LDC 0                ; 949
LDC 0                ; 950
LDC 0                ; 951
LDC 0                ; 952
LDC 0                ; 953
LDC 0                ; 954
LDC 0                ; 955
LDC 0                ; 956
LDC 0                ; 957
LDC 0                ; 958
LDC 0                ; 959
LDC 0                ; 960
LDC 0                ; 961
LDC 0                ; 962
LDC 0                ; 963
LDC 0                ; 964
LDC 0                ; 965
LDC 0                ; 966
LDC 0                ; 967
LDC 0                ; 968
LDC 0                ; 969
LDC 0                ; 970
LDC 0                ; 971
LDC 0                ; 972
LDC 0                ; 973
LDC 0                ; 974
LDC 0                ; 975
LDC 0                ; 976
LDC 0                ; 977
LDC 0                ; 978
LDC 0                ; 979
LDC 0                ; 980
LDC 0                ; 981
LDC 0                ; 982
LDC 0                ; 983
LDC 0                ; 984
LDC 0                ; 985
LDC 0                ; 986
LDC 0                ; 987
LDC 0                ; 988
LDC 0                ; 989
LDC 0                ; 990
LDC 0                ; 991
LDC 0                ; 992
LDC 0                ; 993
LDC 0                ; 994
LDC 0                ; 995
LDC 0                ; 996
LDC 0                ; 997
LDC 0                ; 998
LDC 0                ; 999
LDC 0                ; 1000
LDC 0                ; 1001
LDC 0                ; 1002
LDC 0                ; 1003
LDC 0                ; 1004
LDC 0                ; 1005
LDC 0                ; 1006
LDC 0                ; 1007
LDC 0                ; 1008
LDC 0                ; 1009
LDC 0                ; 1010
LDC 0                ; 1011
LDC 0                ; 1012
LDC 0                ; 1013
LDC 0                ; 1014
LDC 0                ; 1015
LDC 0                ; 1016
LDC 0                ; 1017
LDC 0                ; 1018
LDC 0                ; 1019
LDC 0                ; 1020
LDC 0                ; 1021
LDC 0                ; 1022
LDC 0                ; 1023
LDC 0                ; 1024
LDC 0                ; 1025
LDC 0                ; 1026
LDC 0                ; 1027
LDC 0                ; 1028
LDC 0                ; 1029
LDC 0                ; 1030
LDC 0                ; 1031
LDC 0                ; 1032
LDC 0                ; 1033
LDC 0                ; 1034
LDC 0                ; 1035
LDC 0                ; 1036
LDF 1040             ; 1037
AP 256               ; 1038
RTN                  ; 1039
LDF  1042            ; 1040
RTN                  ; 1041
LD  0   0            ; 1042
LDC 100              ; 1043
CEQ                  ; 1044
TSEL    1046 2072    ; 1045
LD  0   1            ; 1046
LDC 0                ; 1047
CEQ                  ; 1048
TSEL    3100 1050    ; 1049
LD  0   1            ; 1050
LDC 1                ; 1051
CEQ                  ; 1052
TSEL    3110 1054    ; 1053
LD  0   1            ; 1054
LDC 2                ; 1055
CEQ                  ; 1056
TSEL    3120 1058    ; 1057
LD  0   1            ; 1058
LDC 3                ; 1059
CEQ                  ; 1060
TSEL    3130 1062    ; 1061
LD  0   1            ; 1062
LDC 4                ; 1063
CEQ                  ; 1064
TSEL    3140 1066    ; 1065
LD  0   1            ; 1066
LDC 5                ; 1067
CEQ                  ; 1068
TSEL    3150 1070    ; 1069
LD  0   1            ; 1070
LDC 6                ; 1071
CEQ                  ; 1072
TSEL    3160 1074    ; 1073
LD  0   1            ; 1074
LDC 7                ; 1075
CEQ                  ; 1076
TSEL    3170 1078    ; 1077
LD  0   1            ; 1078
LDC 8                ; 1079
CEQ                  ; 1080
TSEL    3180 1082    ; 1081
LD  0   1            ; 1082
LDC 9                ; 1083
CEQ                  ; 1084
TSEL    3190 1086    ; 1085
LD  0   1            ; 1086
LDC 10               ; 1087
CEQ                  ; 1088
TSEL    3200 1090    ; 1089
LD  0   1            ; 1090
LDC 11               ; 1091
CEQ                  ; 1092
TSEL    3210 1094    ; 1093
LD  0   1            ; 1094
LDC 12               ; 1095
CEQ                  ; 1096
TSEL    3220 1098    ; 1097
LD  0   1            ; 1098
LDC 13               ; 1099
CEQ                  ; 1100
TSEL    3230 1102    ; 1101
LD  0   1            ; 1102
LDC 14               ; 1103
CEQ                  ; 1104
TSEL    3240 1106    ; 1105
LD  0   1            ; 1106
LDC 15               ; 1107
CEQ                  ; 1108
TSEL    3250 1110    ; 1109
LD  0   1            ; 1110
LDC 16               ; 1111
CEQ                  ; 1112
TSEL    3260 1114    ; 1113
LD  0   1            ; 1114
LDC 17               ; 1115
CEQ                  ; 1116
TSEL    3270 1118    ; 1117
LD  0   1            ; 1118
LDC 18               ; 1119
CEQ                  ; 1120
TSEL    3280 1122    ; 1121
LD  0   1            ; 1122
LDC 19               ; 1123
CEQ                  ; 1124
TSEL    3290 1126    ; 1125
LD  0   1            ; 1126
LDC 20               ; 1127
CEQ                  ; 1128
TSEL    3300 1130    ; 1129
LD  0   1            ; 1130
LDC 21               ; 1131
CEQ                  ; 1132
TSEL    3310 1134    ; 1133
LD  0   1            ; 1134
LDC 22               ; 1135
CEQ                  ; 1136
TSEL    3320 1138    ; 1137
LD  0   1            ; 1138
LDC 23               ; 1139
CEQ                  ; 1140
TSEL    3330 1142    ; 1141
LD  0   1            ; 1142
LDC 24               ; 1143
CEQ                  ; 1144
TSEL    3340 1146    ; 1145
LD  0   1            ; 1146
LDC 25               ; 1147
CEQ                  ; 1148
TSEL    3350 1150    ; 1149
LD  0   1            ; 1150
LDC 26               ; 1151
CEQ                  ; 1152
TSEL    3360 1154    ; 1153
LD  0   1            ; 1154
LDC 27               ; 1155
CEQ                  ; 1156
TSEL    3370 1158    ; 1157
LD  0   1            ; 1158
LDC 28               ; 1159
CEQ                  ; 1160
TSEL    3380 1162    ; 1161
LD  0   1            ; 1162
LDC 29               ; 1163
CEQ                  ; 1164
TSEL    3390 1166    ; 1165
LD  0   1            ; 1166
LDC 30               ; 1167
CEQ                  ; 1168
TSEL    3400 1170    ; 1169
LD  0   1            ; 1170
LDC 31               ; 1171
CEQ                  ; 1172
TSEL    3410 1174    ; 1173
LD  0   1            ; 1174
LDC 32               ; 1175
CEQ                  ; 1176
TSEL    3420 1178    ; 1177
LD  0   1            ; 1178
LDC 33               ; 1179
CEQ                  ; 1180
TSEL    3430 1182    ; 1181
LD  0   1            ; 1182
LDC 34               ; 1183
CEQ                  ; 1184
TSEL    3440 1186    ; 1185
LD  0   1            ; 1186
LDC 35               ; 1187
CEQ                  ; 1188
TSEL    3450 1190    ; 1189
LD  0   1            ; 1190
LDC 36               ; 1191
CEQ                  ; 1192
TSEL    3460 1194    ; 1193
LD  0   1            ; 1194
LDC 37               ; 1195
CEQ                  ; 1196
TSEL    3470 1198    ; 1197
LD  0   1            ; 1198
LDC 38               ; 1199
CEQ                  ; 1200
TSEL    3480 1202    ; 1201
LD  0   1            ; 1202
LDC 39               ; 1203
CEQ                  ; 1204
TSEL    3490 1206    ; 1205
LD  0   1            ; 1206
LDC 40               ; 1207
CEQ                  ; 1208
TSEL    3500 1210    ; 1209
LD  0   1            ; 1210
LDC 41               ; 1211
CEQ                  ; 1212
TSEL    3510 1214    ; 1213
LD  0   1            ; 1214
LDC 42               ; 1215
CEQ                  ; 1216
TSEL    3520 1218    ; 1217
LD  0   1            ; 1218
LDC 43               ; 1219
CEQ                  ; 1220
TSEL    3530 1222    ; 1221
LD  0   1            ; 1222
LDC 44               ; 1223
CEQ                  ; 1224
TSEL    3540 1226    ; 1225
LD  0   1            ; 1226
LDC 45               ; 1227
CEQ                  ; 1228
TSEL    3550 1230    ; 1229
LD  0   1            ; 1230
LDC 46               ; 1231
CEQ                  ; 1232
TSEL    3560 1234    ; 1233
LD  0   1            ; 1234
LDC 47               ; 1235
CEQ                  ; 1236
TSEL    3570 1238    ; 1237
LD  0   1            ; 1238
LDC 48               ; 1239
CEQ                  ; 1240
TSEL    3580 1242    ; 1241
LD  0   1            ; 1242
LDC 49               ; 1243
CEQ                  ; 1244
TSEL    3590 1246    ; 1245
LD  0   1            ; 1246
LDC 50               ; 1247
CEQ                  ; 1248
TSEL    3600 1250    ; 1249
LD  0   1            ; 1250
LDC 51               ; 1251
CEQ                  ; 1252
TSEL    3610 1254    ; 1253
LD  0   1            ; 1254
LDC 52               ; 1255
CEQ                  ; 1256
TSEL    3620 1258    ; 1257
LD  0   1            ; 1258
LDC 53               ; 1259
CEQ                  ; 1260
TSEL    3630 1262    ; 1261
LD  0   1            ; 1262
LDC 54               ; 1263
CEQ                  ; 1264
TSEL    3640 1266    ; 1265
LD  0   1            ; 1266
LDC 55               ; 1267
CEQ                  ; 1268
TSEL    3650 1270    ; 1269
LD  0   1            ; 1270
LDC 56               ; 1271
CEQ                  ; 1272
TSEL    3660 1274    ; 1273
LD  0   1            ; 1274
LDC 57               ; 1275
CEQ                  ; 1276
TSEL    3670 1278    ; 1277
LD  0   1            ; 1278
LDC 58               ; 1279
CEQ                  ; 1280
TSEL    3680 1282    ; 1281
LD  0   1            ; 1282
LDC 59               ; 1283
CEQ                  ; 1284
TSEL    3690 1286    ; 1285
LD  0   1            ; 1286
LDC 60               ; 1287
CEQ                  ; 1288
TSEL    3700 1290    ; 1289
LD  0   1            ; 1290
LDC 61               ; 1291
CEQ                  ; 1292
TSEL    3710 1294    ; 1293
LD  0   1            ; 1294
LDC 62               ; 1295
CEQ                  ; 1296
TSEL    3720 1298    ; 1297
LD  0   1            ; 1298
LDC 63               ; 1299
CEQ                  ; 1300
TSEL    3730 1302    ; 1301
LD  0   1            ; 1302
LDC 64               ; 1303
CEQ                  ; 1304
TSEL    3740 1306    ; 1305
LD  0   1            ; 1306
LDC 65               ; 1307
CEQ                  ; 1308
TSEL    3750 1310    ; 1309
LD  0   1            ; 1310
LDC 66               ; 1311
CEQ                  ; 1312
TSEL    3760 1314    ; 1313
LD  0   1            ; 1314
LDC 67               ; 1315
CEQ                  ; 1316
TSEL    3770 1318    ; 1317
LD  0   1            ; 1318
LDC 68               ; 1319
CEQ                  ; 1320
TSEL    3780 1322    ; 1321
LD  0   1            ; 1322
LDC 69               ; 1323
CEQ                  ; 1324
TSEL    3790 1326    ; 1325
LD  0   1            ; 1326
LDC 70               ; 1327
CEQ                  ; 1328
TSEL    3800 1330    ; 1329
LD  0   1            ; 1330
LDC 71               ; 1331
CEQ                  ; 1332
TSEL    3810 1334    ; 1333
LD  0   1            ; 1334
LDC 72               ; 1335
CEQ                  ; 1336
TSEL    3820 1338    ; 1337
LD  0   1            ; 1338
LDC 73               ; 1339
CEQ                  ; 1340
TSEL    3830 1342    ; 1341
LD  0   1            ; 1342
LDC 74               ; 1343
CEQ                  ; 1344
TSEL    3840 1346    ; 1345
LD  0   1            ; 1346
LDC 75               ; 1347
CEQ                  ; 1348
TSEL    3850 1350    ; 1349
LD  0   1            ; 1350
LDC 76               ; 1351
CEQ                  ; 1352
TSEL    3860 1354    ; 1353
LD  0   1            ; 1354
LDC 77               ; 1355
CEQ                  ; 1356
TSEL    3870 1358    ; 1357
LD  0   1            ; 1358
LDC 78               ; 1359
CEQ                  ; 1360
TSEL    3880 1362    ; 1361
LD  0   1            ; 1362
LDC 79               ; 1363
CEQ                  ; 1364
TSEL    3890 1366    ; 1365
LD  0   1            ; 1366
LDC 80               ; 1367
CEQ                  ; 1368
TSEL    3900 1370    ; 1369
LD  0   1            ; 1370
LDC 81               ; 1371
CEQ                  ; 1372
TSEL    3910 1374    ; 1373
LD  0   1            ; 1374
LDC 82               ; 1375
CEQ                  ; 1376
TSEL    3920 1378    ; 1377
LD  0   1            ; 1378
LDC 83               ; 1379
CEQ                  ; 1380
TSEL    3930 1382    ; 1381
LD  0   1            ; 1382
LDC 84               ; 1383
CEQ                  ; 1384
TSEL    3940 1386    ; 1385
LD  0   1            ; 1386
LDC 85               ; 1387
CEQ                  ; 1388
TSEL    3950 1390    ; 1389
LD  0   1            ; 1390
LDC 86               ; 1391
CEQ                  ; 1392
TSEL    3960 1394    ; 1393
LD  0   1            ; 1394
LDC 87               ; 1395
CEQ                  ; 1396
TSEL    3970 1398    ; 1397
LD  0   1            ; 1398
LDC 88               ; 1399
CEQ                  ; 1400
TSEL    3980 1402    ; 1401
LD  0   1            ; 1402
LDC 89               ; 1403
CEQ                  ; 1404
TSEL    3990 1406    ; 1405
LD  0   1            ; 1406
LDC 90               ; 1407
CEQ                  ; 1408
TSEL    4000 1410    ; 1409
LD  0   1            ; 1410
LDC 91               ; 1411
CEQ                  ; 1412
TSEL    4010 1414    ; 1413
LD  0   1            ; 1414
LDC 92               ; 1415
CEQ                  ; 1416
TSEL    4020 1418    ; 1417
LD  0   1            ; 1418
LDC 93               ; 1419
CEQ                  ; 1420
TSEL    4030 1422    ; 1421
LD  0   1            ; 1422
LDC 94               ; 1423
CEQ                  ; 1424
TSEL    4040 1426    ; 1425
LD  0   1            ; 1426
LDC 95               ; 1427
CEQ                  ; 1428
TSEL    4050 1430    ; 1429
LD  0   1            ; 1430
LDC 96               ; 1431
CEQ                  ; 1432
TSEL    4060 1434    ; 1433
LD  0   1            ; 1434
LDC 97               ; 1435
CEQ                  ; 1436
TSEL    4070 1438    ; 1437
LD  0   1            ; 1438
LDC 98               ; 1439
CEQ                  ; 1440
TSEL    4080 1442    ; 1441
LD  0   1            ; 1442
LDC 99               ; 1443
CEQ                  ; 1444
TSEL    4090 1446    ; 1445
LD  0   1            ; 1446
LDC 100              ; 1447
CEQ                  ; 1448
TSEL    4100 1450    ; 1449
LD  0   1            ; 1450
LDC 101              ; 1451
CEQ                  ; 1452
TSEL    4110 1454    ; 1453
LD  0   1            ; 1454
LDC 102              ; 1455
CEQ                  ; 1456
TSEL    4120 1458    ; 1457
LD  0   1            ; 1458
LDC 103              ; 1459
CEQ                  ; 1460
TSEL    4130 1462    ; 1461
LD  0   1            ; 1462
LDC 104              ; 1463
CEQ                  ; 1464
TSEL    4140 1466    ; 1465
LD  0   1            ; 1466
LDC 105              ; 1467
CEQ                  ; 1468
TSEL    4150 1470    ; 1469
LD  0   1            ; 1470
LDC 106              ; 1471
CEQ                  ; 1472
TSEL    4160 1474    ; 1473
LD  0   1            ; 1474
LDC 107              ; 1475
CEQ                  ; 1476
TSEL    4170 1478    ; 1477
LD  0   1            ; 1478
LDC 108              ; 1479
CEQ                  ; 1480
TSEL    4180 1482    ; 1481
LD  0   1            ; 1482
LDC 109              ; 1483
CEQ                  ; 1484
TSEL    4190 1486    ; 1485
LD  0   1            ; 1486
LDC 110              ; 1487
CEQ                  ; 1488
TSEL    4200 1490    ; 1489
LD  0   1            ; 1490
LDC 111              ; 1491
CEQ                  ; 1492
TSEL    4210 1494    ; 1493
LD  0   1            ; 1494
LDC 112              ; 1495
CEQ                  ; 1496
TSEL    4220 1498    ; 1497
LD  0   1            ; 1498
LDC 113              ; 1499
CEQ                  ; 1500
TSEL    4230 1502    ; 1501
LD  0   1            ; 1502
LDC 114              ; 1503
CEQ                  ; 1504
TSEL    4240 1506    ; 1505
LD  0   1            ; 1506
LDC 115              ; 1507
CEQ                  ; 1508
TSEL    4250 1510    ; 1509
LD  0   1            ; 1510
LDC 116              ; 1511
CEQ                  ; 1512
TSEL    4260 1514    ; 1513
LD  0   1            ; 1514
LDC 117              ; 1515
CEQ                  ; 1516
TSEL    4270 1518    ; 1517
LD  0   1            ; 1518
LDC 118              ; 1519
CEQ                  ; 1520
TSEL    4280 1522    ; 1521
LD  0   1            ; 1522
LDC 119              ; 1523
CEQ                  ; 1524
TSEL    4290 1526    ; 1525
LD  0   1            ; 1526
LDC 120              ; 1527
CEQ                  ; 1528
TSEL    4300 1530    ; 1529
LD  0   1            ; 1530
LDC 121              ; 1531
CEQ                  ; 1532
TSEL    4310 1534    ; 1533
LD  0   1            ; 1534
LDC 122              ; 1535
CEQ                  ; 1536
TSEL    4320 1538    ; 1537
LD  0   1            ; 1538
LDC 123              ; 1539
CEQ                  ; 1540
TSEL    4330 1542    ; 1541
LD  0   1            ; 1542
LDC 124              ; 1543
CEQ                  ; 1544
TSEL    4340 1546    ; 1545
LD  0   1            ; 1546
LDC 125              ; 1547
CEQ                  ; 1548
TSEL    4350 1550    ; 1549
LD  0   1            ; 1550
LDC 126              ; 1551
CEQ                  ; 1552
TSEL    4360 1554    ; 1553
LD  0   1            ; 1554
LDC 127              ; 1555
CEQ                  ; 1556
TSEL    4370 1558    ; 1557
LD  0   1            ; 1558
LDC 128              ; 1559
CEQ                  ; 1560
TSEL    4380 1562    ; 1561
LD  0   1            ; 1562
LDC 129              ; 1563
CEQ                  ; 1564
TSEL    4390 1566    ; 1565
LD  0   1            ; 1566
LDC 130              ; 1567
CEQ                  ; 1568
TSEL    4400 1570    ; 1569
LD  0   1            ; 1570
LDC 131              ; 1571
CEQ                  ; 1572
TSEL    4410 1574    ; 1573
LD  0   1            ; 1574
LDC 132              ; 1575
CEQ                  ; 1576
TSEL    4420 1578    ; 1577
LD  0   1            ; 1578
LDC 133              ; 1579
CEQ                  ; 1580
TSEL    4430 1582    ; 1581
LD  0   1            ; 1582
LDC 134              ; 1583
CEQ                  ; 1584
TSEL    4440 1586    ; 1585
LD  0   1            ; 1586
LDC 135              ; 1587
CEQ                  ; 1588
TSEL    4450 1590    ; 1589
LD  0   1            ; 1590
LDC 136              ; 1591
CEQ                  ; 1592
TSEL    4460 1594    ; 1593
LD  0   1            ; 1594
LDC 137              ; 1595
CEQ                  ; 1596
TSEL    4470 1598    ; 1597
LD  0   1            ; 1598
LDC 138              ; 1599
CEQ                  ; 1600
TSEL    4480 1602    ; 1601
LD  0   1            ; 1602
LDC 139              ; 1603
CEQ                  ; 1604
TSEL    4490 1606    ; 1605
LD  0   1            ; 1606
LDC 140              ; 1607
CEQ                  ; 1608
TSEL    4500 1610    ; 1609
LD  0   1            ; 1610
LDC 141              ; 1611
CEQ                  ; 1612
TSEL    4510 1614    ; 1613
LD  0   1            ; 1614
LDC 142              ; 1615
CEQ                  ; 1616
TSEL    4520 1618    ; 1617
LD  0   1            ; 1618
LDC 143              ; 1619
CEQ                  ; 1620
TSEL    4530 1622    ; 1621
LD  0   1            ; 1622
LDC 144              ; 1623
CEQ                  ; 1624
TSEL    4540 1626    ; 1625
LD  0   1            ; 1626
LDC 145              ; 1627
CEQ                  ; 1628
TSEL    4550 1630    ; 1629
LD  0   1            ; 1630
LDC 146              ; 1631
CEQ                  ; 1632
TSEL    4560 1634    ; 1633
LD  0   1            ; 1634
LDC 147              ; 1635
CEQ                  ; 1636
TSEL    4570 1638    ; 1637
LD  0   1            ; 1638
LDC 148              ; 1639
CEQ                  ; 1640
TSEL    4580 1642    ; 1641
LD  0   1            ; 1642
LDC 149              ; 1643
CEQ                  ; 1644
TSEL    4590 1646    ; 1645
LD  0   1            ; 1646
LDC 150              ; 1647
CEQ                  ; 1648
TSEL    4600 1650    ; 1649
LD  0   1            ; 1650
LDC 151              ; 1651
CEQ                  ; 1652
TSEL    4610 1654    ; 1653
LD  0   1            ; 1654
LDC 152              ; 1655
CEQ                  ; 1656
TSEL    4620 1658    ; 1657
LD  0   1            ; 1658
LDC 153              ; 1659
CEQ                  ; 1660
TSEL    4630 1662    ; 1661
LD  0   1            ; 1662
LDC 154              ; 1663
CEQ                  ; 1664
TSEL    4640 1666    ; 1665
LD  0   1            ; 1666
LDC 155              ; 1667
CEQ                  ; 1668
TSEL    4650 1670    ; 1669
LD  0   1            ; 1670
LDC 156              ; 1671
CEQ                  ; 1672
TSEL    4660 1674    ; 1673
LD  0   1            ; 1674
LDC 157              ; 1675
CEQ                  ; 1676
TSEL    4670 1678    ; 1677
LD  0   1            ; 1678
LDC 158              ; 1679
CEQ                  ; 1680
TSEL    4680 1682    ; 1681
LD  0   1            ; 1682
LDC 159              ; 1683
CEQ                  ; 1684
TSEL    4690 1686    ; 1685
LD  0   1            ; 1686
LDC 160              ; 1687
CEQ                  ; 1688
TSEL    4700 1690    ; 1689
LD  0   1            ; 1690
LDC 161              ; 1691
CEQ                  ; 1692
TSEL    4710 1694    ; 1693
LD  0   1            ; 1694
LDC 162              ; 1695
CEQ                  ; 1696
TSEL    4720 1698    ; 1697
LD  0   1            ; 1698
LDC 163              ; 1699
CEQ                  ; 1700
TSEL    4730 1702    ; 1701
LD  0   1            ; 1702
LDC 164              ; 1703
CEQ                  ; 1704
TSEL    4740 1706    ; 1705
LD  0   1            ; 1706
LDC 165              ; 1707
CEQ                  ; 1708
TSEL    4750 1710    ; 1709
LD  0   1            ; 1710
LDC 166              ; 1711
CEQ                  ; 1712
TSEL    4760 1714    ; 1713
LD  0   1            ; 1714
LDC 167              ; 1715
CEQ                  ; 1716
TSEL    4770 1718    ; 1717
LD  0   1            ; 1718
LDC 168              ; 1719
CEQ                  ; 1720
TSEL    4780 1722    ; 1721
LD  0   1            ; 1722
LDC 169              ; 1723
CEQ                  ; 1724
TSEL    4790 1726    ; 1725
LD  0   1            ; 1726
LDC 170              ; 1727
CEQ                  ; 1728
TSEL    4800 1730    ; 1729
LD  0   1            ; 1730
LDC 171              ; 1731
CEQ                  ; 1732
TSEL    4810 1734    ; 1733
LD  0   1            ; 1734
LDC 172              ; 1735
CEQ                  ; 1736
TSEL    4820 1738    ; 1737
LD  0   1            ; 1738
LDC 173              ; 1739
CEQ                  ; 1740
TSEL    4830 1742    ; 1741
LD  0   1            ; 1742
LDC 174              ; 1743
CEQ                  ; 1744
TSEL    4840 1746    ; 1745
LD  0   1            ; 1746
LDC 175              ; 1747
CEQ                  ; 1748
TSEL    4850 1750    ; 1749
LD  0   1            ; 1750
LDC 176              ; 1751
CEQ                  ; 1752
TSEL    4860 1754    ; 1753
LD  0   1            ; 1754
LDC 177              ; 1755
CEQ                  ; 1756
TSEL    4870 1758    ; 1757
LD  0   1            ; 1758
LDC 178              ; 1759
CEQ                  ; 1760
TSEL    4880 1762    ; 1761
LD  0   1            ; 1762
LDC 179              ; 1763
CEQ                  ; 1764
TSEL    4890 1766    ; 1765
LD  0   1            ; 1766
LDC 180              ; 1767
CEQ                  ; 1768
TSEL    4900 1770    ; 1769
LD  0   1            ; 1770
LDC 181              ; 1771
CEQ                  ; 1772
TSEL    4910 1774    ; 1773
LD  0   1            ; 1774
LDC 182              ; 1775
CEQ                  ; 1776
TSEL    4920 1778    ; 1777
LD  0   1            ; 1778
LDC 183              ; 1779
CEQ                  ; 1780
TSEL    4930 1782    ; 1781
LD  0   1            ; 1782
LDC 184              ; 1783
CEQ                  ; 1784
TSEL    4940 1786    ; 1785
LD  0   1            ; 1786
LDC 185              ; 1787
CEQ                  ; 1788
TSEL    4950 1790    ; 1789
LD  0   1            ; 1790
LDC 186              ; 1791
CEQ                  ; 1792
TSEL    4960 1794    ; 1793
LD  0   1            ; 1794
LDC 187              ; 1795
CEQ                  ; 1796
TSEL    4970 1798    ; 1797
LD  0   1            ; 1798
LDC 188              ; 1799
CEQ                  ; 1800
TSEL    4980 1802    ; 1801
LD  0   1            ; 1802
LDC 189              ; 1803
CEQ                  ; 1804
TSEL    4990 1806    ; 1805
LD  0   1            ; 1806
LDC 190              ; 1807
CEQ                  ; 1808
TSEL    5000 1810    ; 1809
LD  0   1            ; 1810
LDC 191              ; 1811
CEQ                  ; 1812
TSEL    5010 1814    ; 1813
LD  0   1            ; 1814
LDC 192              ; 1815
CEQ                  ; 1816
TSEL    5020 1818    ; 1817
LD  0   1            ; 1818
LDC 193              ; 1819
CEQ                  ; 1820
TSEL    5030 1822    ; 1821
LD  0   1            ; 1822
LDC 194              ; 1823
CEQ                  ; 1824
TSEL    5040 1826    ; 1825
LD  0   1            ; 1826
LDC 195              ; 1827
CEQ                  ; 1828
TSEL    5050 1830    ; 1829
LD  0   1            ; 1830
LDC 196              ; 1831
CEQ                  ; 1832
TSEL    5060 1834    ; 1833
LD  0   1            ; 1834
LDC 197              ; 1835
CEQ                  ; 1836
TSEL    5070 1838    ; 1837
LD  0   1            ; 1838
LDC 198              ; 1839
CEQ                  ; 1840
TSEL    5080 1842    ; 1841
LD  0   1            ; 1842
LDC 199              ; 1843
CEQ                  ; 1844
TSEL    5090 1846    ; 1845
LD  0   1            ; 1846
LDC 200              ; 1847
CEQ                  ; 1848
TSEL    5100 1850    ; 1849
LD  0   1            ; 1850
LDC 201              ; 1851
CEQ                  ; 1852
TSEL    5110 1854    ; 1853
LD  0   1            ; 1854
LDC 202              ; 1855
CEQ                  ; 1856
TSEL    5120 1858    ; 1857
LD  0   1            ; 1858
LDC 203              ; 1859
CEQ                  ; 1860
TSEL    5130 1862    ; 1861
LD  0   1            ; 1862
LDC 204              ; 1863
CEQ                  ; 1864
TSEL    5140 1866    ; 1865
LD  0   1            ; 1866
LDC 205              ; 1867
CEQ                  ; 1868
TSEL    5150 1870    ; 1869
LD  0   1            ; 1870
LDC 206              ; 1871
CEQ                  ; 1872
TSEL    5160 1874    ; 1873
LD  0   1            ; 1874
LDC 207              ; 1875
CEQ                  ; 1876
TSEL    5170 1878    ; 1877
LD  0   1            ; 1878
LDC 208              ; 1879
CEQ                  ; 1880
TSEL    5180 1882    ; 1881
LD  0   1            ; 1882
LDC 209              ; 1883
CEQ                  ; 1884
TSEL    5190 1886    ; 1885
LD  0   1            ; 1886
LDC 210              ; 1887
CEQ                  ; 1888
TSEL    5200 1890    ; 1889
LD  0   1            ; 1890
LDC 211              ; 1891
CEQ                  ; 1892
TSEL    5210 1894    ; 1893
LD  0   1            ; 1894
LDC 212              ; 1895
CEQ                  ; 1896
TSEL    5220 1898    ; 1897
LD  0   1            ; 1898
LDC 213              ; 1899
CEQ                  ; 1900
TSEL    5230 1902    ; 1901
LD  0   1            ; 1902
LDC 214              ; 1903
CEQ                  ; 1904
TSEL    5240 1906    ; 1905
LD  0   1            ; 1906
LDC 215              ; 1907
CEQ                  ; 1908
TSEL    5250 1910    ; 1909
LD  0   1            ; 1910
LDC 216              ; 1911
CEQ                  ; 1912
TSEL    5260 1914    ; 1913
LD  0   1            ; 1914
LDC 217              ; 1915
CEQ                  ; 1916
TSEL    5270 1918    ; 1917
LD  0   1            ; 1918
LDC 218              ; 1919
CEQ                  ; 1920
TSEL    5280 1922    ; 1921
LD  0   1            ; 1922
LDC 219              ; 1923
CEQ                  ; 1924
TSEL    5290 1926    ; 1925
LD  0   1            ; 1926
LDC 220              ; 1927
CEQ                  ; 1928
TSEL    5300 1930    ; 1929
LD  0   1            ; 1930
LDC 221              ; 1931
CEQ                  ; 1932
TSEL    5310 1934    ; 1933
LD  0   1            ; 1934
LDC 222              ; 1935
CEQ                  ; 1936
TSEL    5320 1938    ; 1937
LD  0   1            ; 1938
LDC 223              ; 1939
CEQ                  ; 1940
TSEL    5330 1942    ; 1941
LD  0   1            ; 1942
LDC 224              ; 1943
CEQ                  ; 1944
TSEL    5340 1946    ; 1945
LD  0   1            ; 1946
LDC 225              ; 1947
CEQ                  ; 1948
TSEL    5350 1950    ; 1949
LD  0   1            ; 1950
LDC 226              ; 1951
CEQ                  ; 1952
TSEL    5360 1954    ; 1953
LD  0   1            ; 1954
LDC 227              ; 1955
CEQ                  ; 1956
TSEL    5370 1958    ; 1957
LD  0   1            ; 1958
LDC 228              ; 1959
CEQ                  ; 1960
TSEL    5380 1962    ; 1961
LD  0   1            ; 1962
LDC 229              ; 1963
CEQ                  ; 1964
TSEL    5390 1966    ; 1965
LD  0   1            ; 1966
LDC 230              ; 1967
CEQ                  ; 1968
TSEL    5400 1970    ; 1969
LD  0   1            ; 1970
LDC 231              ; 1971
CEQ                  ; 1972
TSEL    5410 1974    ; 1973
LD  0   1            ; 1974
LDC 232              ; 1975
CEQ                  ; 1976
TSEL    5420 1978    ; 1977
LD  0   1            ; 1978
LDC 233              ; 1979
CEQ                  ; 1980
TSEL    5430 1982    ; 1981
LD  0   1            ; 1982
LDC 234              ; 1983
CEQ                  ; 1984
TSEL    5440 1986    ; 1985
LD  0   1            ; 1986
LDC 235              ; 1987
CEQ                  ; 1988
TSEL    5450 1990    ; 1989
LD  0   1            ; 1990
LDC 236              ; 1991
CEQ                  ; 1992
TSEL    5460 1994    ; 1993
LD  0   1            ; 1994
LDC 237              ; 1995
CEQ                  ; 1996
TSEL    5470 1998    ; 1997
LD  0   1            ; 1998
LDC 238              ; 1999
CEQ                  ; 2000
TSEL    5480 2002    ; 2001
LD  0   1            ; 2002
LDC 239              ; 2003
CEQ                  ; 2004
TSEL    5490 2006    ; 2005
LD  0   1            ; 2006
LDC 240              ; 2007
CEQ                  ; 2008
TSEL    5500 2010    ; 2009
LD  0   1            ; 2010
LDC 241              ; 2011
CEQ                  ; 2012
TSEL    5510 2014    ; 2013
LD  0   1            ; 2014
LDC 242              ; 2015
CEQ                  ; 2016
TSEL    5520 2018    ; 2017
LD  0   1            ; 2018
LDC 243              ; 2019
CEQ                  ; 2020
TSEL    5530 2022    ; 2021
LD  0   1            ; 2022
LDC 244              ; 2023
CEQ                  ; 2024
TSEL    5540 2026    ; 2025
LD  0   1            ; 2026
LDC 245              ; 2027
CEQ                  ; 2028
TSEL    5550 2030    ; 2029
LD  0   1            ; 2030
LDC 246              ; 2031
CEQ                  ; 2032
TSEL    5560 2034    ; 2033
LD  0   1            ; 2034
LDC 247              ; 2035
CEQ                  ; 2036
TSEL    5570 2038    ; 2037
LD  0   1            ; 2038
LDC 248              ; 2039
CEQ                  ; 2040
TSEL    5580 2042    ; 2041
LD  0   1            ; 2042
LDC 249              ; 2043
CEQ                  ; 2044
TSEL    5590 2046    ; 2045
LD  0   1            ; 2046
LDC 250              ; 2047
CEQ                  ; 2048
TSEL    5600 2050    ; 2049
LD  0   1            ; 2050
LDC 251              ; 2051
CEQ                  ; 2052
TSEL    5610 2054    ; 2053
LD  0   1            ; 2054
LDC 252              ; 2055
CEQ                  ; 2056
TSEL    5620 2058    ; 2057
LD  0   1            ; 2058
LDC 253              ; 2059
CEQ                  ; 2060
TSEL    5630 2062    ; 2061
LD  0   1            ; 2062
LDC 254              ; 2063
CEQ                  ; 2064
TSEL    5640 2066    ; 2065
LD  0   1            ; 2066
LDC 255              ; 2067
CEQ                  ; 2068
TSEL    5650 2070    ; 2069
LDC  0               ; 2070
RTN                  ; 2071
LD  0   1            ; 2072
LDC 0                ; 2073
CEQ                  ; 2074
TSEL    3106 2076    ; 2075
LD  0   1            ; 2076
LDC 1                ; 2077
CEQ                  ; 2078
TSEL    3116 2080    ; 2079
LD  0   1            ; 2080
LDC 2                ; 2081
CEQ                  ; 2082
TSEL    3126 2084    ; 2083
LD  0   1            ; 2084
LDC 3                ; 2085
CEQ                  ; 2086
TSEL    3136 2088    ; 2087
LD  0   1            ; 2088
LDC 4                ; 2089
CEQ                  ; 2090
TSEL    3146 2092    ; 2091
LD  0   1            ; 2092
LDC 5                ; 2093
CEQ                  ; 2094
TSEL    3156 2096    ; 2095
LD  0   1            ; 2096
LDC 6                ; 2097
CEQ                  ; 2098
TSEL    3166 2100    ; 2099
LD  0   1            ; 2100
LDC 7                ; 2101
CEQ                  ; 2102
TSEL    3176 2104    ; 2103
LD  0   1            ; 2104
LDC 8                ; 2105
CEQ                  ; 2106
TSEL    3186 2108    ; 2107
LD  0   1            ; 2108
LDC 9                ; 2109
CEQ                  ; 2110
TSEL    3196 2112    ; 2111
LD  0   1            ; 2112
LDC 10               ; 2113
CEQ                  ; 2114
TSEL    3206 2116    ; 2115
LD  0   1            ; 2116
LDC 11               ; 2117
CEQ                  ; 2118
TSEL    3216 2120    ; 2119
LD  0   1            ; 2120
LDC 12               ; 2121
CEQ                  ; 2122
TSEL    3226 2124    ; 2123
LD  0   1            ; 2124
LDC 13               ; 2125
CEQ                  ; 2126
TSEL    3236 2128    ; 2127
LD  0   1            ; 2128
LDC 14               ; 2129
CEQ                  ; 2130
TSEL    3246 2132    ; 2131
LD  0   1            ; 2132
LDC 15               ; 2133
CEQ                  ; 2134
TSEL    3256 2136    ; 2135
LD  0   1            ; 2136
LDC 16               ; 2137
CEQ                  ; 2138
TSEL    3266 2140    ; 2139
LD  0   1            ; 2140
LDC 17               ; 2141
CEQ                  ; 2142
TSEL    3276 2144    ; 2143
LD  0   1            ; 2144
LDC 18               ; 2145
CEQ                  ; 2146
TSEL    3286 2148    ; 2147
LD  0   1            ; 2148
LDC 19               ; 2149
CEQ                  ; 2150
TSEL    3296 2152    ; 2151
LD  0   1            ; 2152
LDC 20               ; 2153
CEQ                  ; 2154
TSEL    3306 2156    ; 2155
LD  0   1            ; 2156
LDC 21               ; 2157
CEQ                  ; 2158
TSEL    3316 2160    ; 2159
LD  0   1            ; 2160
LDC 22               ; 2161
CEQ                  ; 2162
TSEL    3326 2164    ; 2163
LD  0   1            ; 2164
LDC 23               ; 2165
CEQ                  ; 2166
TSEL    3336 2168    ; 2167
LD  0   1            ; 2168
LDC 24               ; 2169
CEQ                  ; 2170
TSEL    3346 2172    ; 2171
LD  0   1            ; 2172
LDC 25               ; 2173
CEQ                  ; 2174
TSEL    3356 2176    ; 2175
LD  0   1            ; 2176
LDC 26               ; 2177
CEQ                  ; 2178
TSEL    3366 2180    ; 2179
LD  0   1            ; 2180
LDC 27               ; 2181
CEQ                  ; 2182
TSEL    3376 2184    ; 2183
LD  0   1            ; 2184
LDC 28               ; 2185
CEQ                  ; 2186
TSEL    3386 2188    ; 2187
LD  0   1            ; 2188
LDC 29               ; 2189
CEQ                  ; 2190
TSEL    3396 2192    ; 2191
LD  0   1            ; 2192
LDC 30               ; 2193
CEQ                  ; 2194
TSEL    3406 2196    ; 2195
LD  0   1            ; 2196
LDC 31               ; 2197
CEQ                  ; 2198
TSEL    3416 2200    ; 2199
LD  0   1            ; 2200
LDC 32               ; 2201
CEQ                  ; 2202
TSEL    3426 2204    ; 2203
LD  0   1            ; 2204
LDC 33               ; 2205
CEQ                  ; 2206
TSEL    3436 2208    ; 2207
LD  0   1            ; 2208
LDC 34               ; 2209
CEQ                  ; 2210
TSEL    3446 2212    ; 2211
LD  0   1            ; 2212
LDC 35               ; 2213
CEQ                  ; 2214
TSEL    3456 2216    ; 2215
LD  0   1            ; 2216
LDC 36               ; 2217
CEQ                  ; 2218
TSEL    3466 2220    ; 2219
LD  0   1            ; 2220
LDC 37               ; 2221
CEQ                  ; 2222
TSEL    3476 2224    ; 2223
LD  0   1            ; 2224
LDC 38               ; 2225
CEQ                  ; 2226
TSEL    3486 2228    ; 2227
LD  0   1            ; 2228
LDC 39               ; 2229
CEQ                  ; 2230
TSEL    3496 2232    ; 2231
LD  0   1            ; 2232
LDC 40               ; 2233
CEQ                  ; 2234
TSEL    3506 2236    ; 2235
LD  0   1            ; 2236
LDC 41               ; 2237
CEQ                  ; 2238
TSEL    3516 2240    ; 2239
LD  0   1            ; 2240
LDC 42               ; 2241
CEQ                  ; 2242
TSEL    3526 2244    ; 2243
LD  0   1            ; 2244
LDC 43               ; 2245
CEQ                  ; 2246
TSEL    3536 2248    ; 2247
LD  0   1            ; 2248
LDC 44               ; 2249
CEQ                  ; 2250
TSEL    3546 2252    ; 2251
LD  0   1            ; 2252
LDC 45               ; 2253
CEQ                  ; 2254
TSEL    3556 2256    ; 2255
LD  0   1            ; 2256
LDC 46               ; 2257
CEQ                  ; 2258
TSEL    3566 2260    ; 2259
LD  0   1            ; 2260
LDC 47               ; 2261
CEQ                  ; 2262
TSEL    3576 2264    ; 2263
LD  0   1            ; 2264
LDC 48               ; 2265
CEQ                  ; 2266
TSEL    3586 2268    ; 2267
LD  0   1            ; 2268
LDC 49               ; 2269
CEQ                  ; 2270
TSEL    3596 2272    ; 2271
LD  0   1            ; 2272
LDC 50               ; 2273
CEQ                  ; 2274
TSEL    3606 2276    ; 2275
LD  0   1            ; 2276
LDC 51               ; 2277
CEQ                  ; 2278
TSEL    3616 2280    ; 2279
LD  0   1            ; 2280
LDC 52               ; 2281
CEQ                  ; 2282
TSEL    3626 2284    ; 2283
LD  0   1            ; 2284
LDC 53               ; 2285
CEQ                  ; 2286
TSEL    3636 2288    ; 2287
LD  0   1            ; 2288
LDC 54               ; 2289
CEQ                  ; 2290
TSEL    3646 2292    ; 2291
LD  0   1            ; 2292
LDC 55               ; 2293
CEQ                  ; 2294
TSEL    3656 2296    ; 2295
LD  0   1            ; 2296
LDC 56               ; 2297
CEQ                  ; 2298
TSEL    3666 2300    ; 2299
LD  0   1            ; 2300
LDC 57               ; 2301
CEQ                  ; 2302
TSEL    3676 2304    ; 2303
LD  0   1            ; 2304
LDC 58               ; 2305
CEQ                  ; 2306
TSEL    3686 2308    ; 2307
LD  0   1            ; 2308
LDC 59               ; 2309
CEQ                  ; 2310
TSEL    3696 2312    ; 2311
LD  0   1            ; 2312
LDC 60               ; 2313
CEQ                  ; 2314
TSEL    3706 2316    ; 2315
LD  0   1            ; 2316
LDC 61               ; 2317
CEQ                  ; 2318
TSEL    3716 2320    ; 2319
LD  0   1            ; 2320
LDC 62               ; 2321
CEQ                  ; 2322
TSEL    3726 2324    ; 2323
LD  0   1            ; 2324
LDC 63               ; 2325
CEQ                  ; 2326
TSEL    3736 2328    ; 2327
LD  0   1            ; 2328
LDC 64               ; 2329
CEQ                  ; 2330
TSEL    3746 2332    ; 2331
LD  0   1            ; 2332
LDC 65               ; 2333
CEQ                  ; 2334
TSEL    3756 2336    ; 2335
LD  0   1            ; 2336
LDC 66               ; 2337
CEQ                  ; 2338
TSEL    3766 2340    ; 2339
LD  0   1            ; 2340
LDC 67               ; 2341
CEQ                  ; 2342
TSEL    3776 2344    ; 2343
LD  0   1            ; 2344
LDC 68               ; 2345
CEQ                  ; 2346
TSEL    3786 2348    ; 2347
LD  0   1            ; 2348
LDC 69               ; 2349
CEQ                  ; 2350
TSEL    3796 2352    ; 2351
LD  0   1            ; 2352
LDC 70               ; 2353
CEQ                  ; 2354
TSEL    3806 2356    ; 2355
LD  0   1            ; 2356
LDC 71               ; 2357
CEQ                  ; 2358
TSEL    3816 2360    ; 2359
LD  0   1            ; 2360
LDC 72               ; 2361
CEQ                  ; 2362
TSEL    3826 2364    ; 2363
LD  0   1            ; 2364
LDC 73               ; 2365
CEQ                  ; 2366
TSEL    3836 2368    ; 2367
LD  0   1            ; 2368
LDC 74               ; 2369
CEQ                  ; 2370
TSEL    3846 2372    ; 2371
LD  0   1            ; 2372
LDC 75               ; 2373
CEQ                  ; 2374
TSEL    3856 2376    ; 2375
LD  0   1            ; 2376
LDC 76               ; 2377
CEQ                  ; 2378
TSEL    3866 2380    ; 2379
LD  0   1            ; 2380
LDC 77               ; 2381
CEQ                  ; 2382
TSEL    3876 2384    ; 2383
LD  0   1            ; 2384
LDC 78               ; 2385
CEQ                  ; 2386
TSEL    3886 2388    ; 2387
LD  0   1            ; 2388
LDC 79               ; 2389
CEQ                  ; 2390
TSEL    3896 2392    ; 2391
LD  0   1            ; 2392
LDC 80               ; 2393
CEQ                  ; 2394
TSEL    3906 2396    ; 2395
LD  0   1            ; 2396
LDC 81               ; 2397
CEQ                  ; 2398
TSEL    3916 2400    ; 2399
LD  0   1            ; 2400
LDC 82               ; 2401
CEQ                  ; 2402
TSEL    3926 2404    ; 2403
LD  0   1            ; 2404
LDC 83               ; 2405
CEQ                  ; 2406
TSEL    3936 2408    ; 2407
LD  0   1            ; 2408
LDC 84               ; 2409
CEQ                  ; 2410
TSEL    3946 2412    ; 2411
LD  0   1            ; 2412
LDC 85               ; 2413
CEQ                  ; 2414
TSEL    3956 2416    ; 2415
LD  0   1            ; 2416
LDC 86               ; 2417
CEQ                  ; 2418
TSEL    3966 2420    ; 2419
LD  0   1            ; 2420
LDC 87               ; 2421
CEQ                  ; 2422
TSEL    3976 2424    ; 2423
LD  0   1            ; 2424
LDC 88               ; 2425
CEQ                  ; 2426
TSEL    3986 2428    ; 2427
LD  0   1            ; 2428
LDC 89               ; 2429
CEQ                  ; 2430
TSEL    3996 2432    ; 2431
LD  0   1            ; 2432
LDC 90               ; 2433
CEQ                  ; 2434
TSEL    4006 2436    ; 2435
LD  0   1            ; 2436
LDC 91               ; 2437
CEQ                  ; 2438
TSEL    4016 2440    ; 2439
LD  0   1            ; 2440
LDC 92               ; 2441
CEQ                  ; 2442
TSEL    4026 2444    ; 2443
LD  0   1            ; 2444
LDC 93               ; 2445
CEQ                  ; 2446
TSEL    4036 2448    ; 2447
LD  0   1            ; 2448
LDC 94               ; 2449
CEQ                  ; 2450
TSEL    4046 2452    ; 2451
LD  0   1            ; 2452
LDC 95               ; 2453
CEQ                  ; 2454
TSEL    4056 2456    ; 2455
LD  0   1            ; 2456
LDC 96               ; 2457
CEQ                  ; 2458
TSEL    4066 2460    ; 2459
LD  0   1            ; 2460
LDC 97               ; 2461
CEQ                  ; 2462
TSEL    4076 2464    ; 2463
LD  0   1            ; 2464
LDC 98               ; 2465
CEQ                  ; 2466
TSEL    4086 2468    ; 2467
LD  0   1            ; 2468
LDC 99               ; 2469
CEQ                  ; 2470
TSEL    4096 2472    ; 2471
LD  0   1            ; 2472
LDC 100              ; 2473
CEQ                  ; 2474
TSEL    4106 2476    ; 2475
LD  0   1            ; 2476
LDC 101              ; 2477
CEQ                  ; 2478
TSEL    4116 2480    ; 2479
LD  0   1            ; 2480
LDC 102              ; 2481
CEQ                  ; 2482
TSEL    4126 2484    ; 2483
LD  0   1            ; 2484
LDC 103              ; 2485
CEQ                  ; 2486
TSEL    4136 2488    ; 2487
LD  0   1            ; 2488
LDC 104              ; 2489
CEQ                  ; 2490
TSEL    4146 2492    ; 2491
LD  0   1            ; 2492
LDC 105              ; 2493
CEQ                  ; 2494
TSEL    4156 2496    ; 2495
LD  0   1            ; 2496
LDC 106              ; 2497
CEQ                  ; 2498
TSEL    4166 2500    ; 2499
LD  0   1            ; 2500
LDC 107              ; 2501
CEQ                  ; 2502
TSEL    4176 2504    ; 2503
LD  0   1            ; 2504
LDC 108              ; 2505
CEQ                  ; 2506
TSEL    4186 2508    ; 2507
LD  0   1            ; 2508
LDC 109              ; 2509
CEQ                  ; 2510
TSEL    4196 2512    ; 2511
LD  0   1            ; 2512
LDC 110              ; 2513
CEQ                  ; 2514
TSEL    4206 2516    ; 2515
LD  0   1            ; 2516
LDC 111              ; 2517
CEQ                  ; 2518
TSEL    4216 2520    ; 2519
LD  0   1            ; 2520
LDC 112              ; 2521
CEQ                  ; 2522
TSEL    4226 2524    ; 2523
LD  0   1            ; 2524
LDC 113              ; 2525
CEQ                  ; 2526
TSEL    4236 2528    ; 2527
LD  0   1            ; 2528
LDC 114              ; 2529
CEQ                  ; 2530
TSEL    4246 2532    ; 2531
LD  0   1            ; 2532
LDC 115              ; 2533
CEQ                  ; 2534
TSEL    4256 2536    ; 2535
LD  0   1            ; 2536
LDC 116              ; 2537
CEQ                  ; 2538
TSEL    4266 2540    ; 2539
LD  0   1            ; 2540
LDC 117              ; 2541
CEQ                  ; 2542
TSEL    4276 2544    ; 2543
LD  0   1            ; 2544
LDC 118              ; 2545
CEQ                  ; 2546
TSEL    4286 2548    ; 2547
LD  0   1            ; 2548
LDC 119              ; 2549
CEQ                  ; 2550
TSEL    4296 2552    ; 2551
LD  0   1            ; 2552
LDC 120              ; 2553
CEQ                  ; 2554
TSEL    4306 2556    ; 2555
LD  0   1            ; 2556
LDC 121              ; 2557
CEQ                  ; 2558
TSEL    4316 2560    ; 2559
LD  0   1            ; 2560
LDC 122              ; 2561
CEQ                  ; 2562
TSEL    4326 2564    ; 2563
LD  0   1            ; 2564
LDC 123              ; 2565
CEQ                  ; 2566
TSEL    4336 2568    ; 2567
LD  0   1            ; 2568
LDC 124              ; 2569
CEQ                  ; 2570
TSEL    4346 2572    ; 2571
LD  0   1            ; 2572
LDC 125              ; 2573
CEQ                  ; 2574
TSEL    4356 2576    ; 2575
LD  0   1            ; 2576
LDC 126              ; 2577
CEQ                  ; 2578
TSEL    4366 2580    ; 2579
LD  0   1            ; 2580
LDC 127              ; 2581
CEQ                  ; 2582
TSEL    4376 2584    ; 2583
LD  0   1            ; 2584
LDC 128              ; 2585
CEQ                  ; 2586
TSEL    4386 2588    ; 2587
LD  0   1            ; 2588
LDC 129              ; 2589
CEQ                  ; 2590
TSEL    4396 2592    ; 2591
LD  0   1            ; 2592
LDC 130              ; 2593
CEQ                  ; 2594
TSEL    4406 2596    ; 2595
LD  0   1            ; 2596
LDC 131              ; 2597
CEQ                  ; 2598
TSEL    4416 2600    ; 2599
LD  0   1            ; 2600
LDC 132              ; 2601
CEQ                  ; 2602
TSEL    4426 2604    ; 2603
LD  0   1            ; 2604
LDC 133              ; 2605
CEQ                  ; 2606
TSEL    4436 2608    ; 2607
LD  0   1            ; 2608
LDC 134              ; 2609
CEQ                  ; 2610
TSEL    4446 2612    ; 2611
LD  0   1            ; 2612
LDC 135              ; 2613
CEQ                  ; 2614
TSEL    4456 2616    ; 2615
LD  0   1            ; 2616
LDC 136              ; 2617
CEQ                  ; 2618
TSEL    4466 2620    ; 2619
LD  0   1            ; 2620
LDC 137              ; 2621
CEQ                  ; 2622
TSEL    4476 2624    ; 2623
LD  0   1            ; 2624
LDC 138              ; 2625
CEQ                  ; 2626
TSEL    4486 2628    ; 2627
LD  0   1            ; 2628
LDC 139              ; 2629
CEQ                  ; 2630
TSEL    4496 2632    ; 2631
LD  0   1            ; 2632
LDC 140              ; 2633
CEQ                  ; 2634
TSEL    4506 2636    ; 2635
LD  0   1            ; 2636
LDC 141              ; 2637
CEQ                  ; 2638
TSEL    4516 2640    ; 2639
LD  0   1            ; 2640
LDC 142              ; 2641
CEQ                  ; 2642
TSEL    4526 2644    ; 2643
LD  0   1            ; 2644
LDC 143              ; 2645
CEQ                  ; 2646
TSEL    4536 2648    ; 2647
LD  0   1            ; 2648
LDC 144              ; 2649
CEQ                  ; 2650
TSEL    4546 2652    ; 2651
LD  0   1            ; 2652
LDC 145              ; 2653
CEQ                  ; 2654
TSEL    4556 2656    ; 2655
LD  0   1            ; 2656
LDC 146              ; 2657
CEQ                  ; 2658
TSEL    4566 2660    ; 2659
LD  0   1            ; 2660
LDC 147              ; 2661
CEQ                  ; 2662
TSEL    4576 2664    ; 2663
LD  0   1            ; 2664
LDC 148              ; 2665
CEQ                  ; 2666
TSEL    4586 2668    ; 2667
LD  0   1            ; 2668
LDC 149              ; 2669
CEQ                  ; 2670
TSEL    4596 2672    ; 2671
LD  0   1            ; 2672
LDC 150              ; 2673
CEQ                  ; 2674
TSEL    4606 2676    ; 2675
LD  0   1            ; 2676
LDC 151              ; 2677
CEQ                  ; 2678
TSEL    4616 2680    ; 2679
LD  0   1            ; 2680
LDC 152              ; 2681
CEQ                  ; 2682
TSEL    4626 2684    ; 2683
LD  0   1            ; 2684
LDC 153              ; 2685
CEQ                  ; 2686
TSEL    4636 2688    ; 2687
LD  0   1            ; 2688
LDC 154              ; 2689
CEQ                  ; 2690
TSEL    4646 2692    ; 2691
LD  0   1            ; 2692
LDC 155              ; 2693
CEQ                  ; 2694
TSEL    4656 2696    ; 2695
LD  0   1            ; 2696
LDC 156              ; 2697
CEQ                  ; 2698
TSEL    4666 2700    ; 2699
LD  0   1            ; 2700
LDC 157              ; 2701
CEQ                  ; 2702
TSEL    4676 2704    ; 2703
LD  0   1            ; 2704
LDC 158              ; 2705
CEQ                  ; 2706
TSEL    4686 2708    ; 2707
LD  0   1            ; 2708
LDC 159              ; 2709
CEQ                  ; 2710
TSEL    4696 2712    ; 2711
LD  0   1            ; 2712
LDC 160              ; 2713
CEQ                  ; 2714
TSEL    4706 2716    ; 2715
LD  0   1            ; 2716
LDC 161              ; 2717
CEQ                  ; 2718
TSEL    4716 2720    ; 2719
LD  0   1            ; 2720
LDC 162              ; 2721
CEQ                  ; 2722
TSEL    4726 2724    ; 2723
LD  0   1            ; 2724
LDC 163              ; 2725
CEQ                  ; 2726
TSEL    4736 2728    ; 2727
LD  0   1            ; 2728
LDC 164              ; 2729
CEQ                  ; 2730
TSEL    4746 2732    ; 2731
LD  0   1            ; 2732
LDC 165              ; 2733
CEQ                  ; 2734
TSEL    4756 2736    ; 2735
LD  0   1            ; 2736
LDC 166              ; 2737
CEQ                  ; 2738
TSEL    4766 2740    ; 2739
LD  0   1            ; 2740
LDC 167              ; 2741
CEQ                  ; 2742
TSEL    4776 2744    ; 2743
LD  0   1            ; 2744
LDC 168              ; 2745
CEQ                  ; 2746
TSEL    4786 2748    ; 2747
LD  0   1            ; 2748
LDC 169              ; 2749
CEQ                  ; 2750
TSEL    4796 2752    ; 2751
LD  0   1            ; 2752
LDC 170              ; 2753
CEQ                  ; 2754
TSEL    4806 2756    ; 2755
LD  0   1            ; 2756
LDC 171              ; 2757
CEQ                  ; 2758
TSEL    4816 2760    ; 2759
LD  0   1            ; 2760
LDC 172              ; 2761
CEQ                  ; 2762
TSEL    4826 2764    ; 2763
LD  0   1            ; 2764
LDC 173              ; 2765
CEQ                  ; 2766
TSEL    4836 2768    ; 2767
LD  0   1            ; 2768
LDC 174              ; 2769
CEQ                  ; 2770
TSEL    4846 2772    ; 2771
LD  0   1            ; 2772
LDC 175              ; 2773
CEQ                  ; 2774
TSEL    4856 2776    ; 2775
LD  0   1            ; 2776
LDC 176              ; 2777
CEQ                  ; 2778
TSEL    4866 2780    ; 2779
LD  0   1            ; 2780
LDC 177              ; 2781
CEQ                  ; 2782
TSEL    4876 2784    ; 2783
LD  0   1            ; 2784
LDC 178              ; 2785
CEQ                  ; 2786
TSEL    4886 2788    ; 2787
LD  0   1            ; 2788
LDC 179              ; 2789
CEQ                  ; 2790
TSEL    4896 2792    ; 2791
LD  0   1            ; 2792
LDC 180              ; 2793
CEQ                  ; 2794
TSEL    4906 2796    ; 2795
LD  0   1            ; 2796
LDC 181              ; 2797
CEQ                  ; 2798
TSEL    4916 2800    ; 2799
LD  0   1            ; 2800
LDC 182              ; 2801
CEQ                  ; 2802
TSEL    4926 2804    ; 2803
LD  0   1            ; 2804
LDC 183              ; 2805
CEQ                  ; 2806
TSEL    4936 2808    ; 2807
LD  0   1            ; 2808
LDC 184              ; 2809
CEQ                  ; 2810
TSEL    4946 2812    ; 2811
LD  0   1            ; 2812
LDC 185              ; 2813
CEQ                  ; 2814
TSEL    4956 2816    ; 2815
LD  0   1            ; 2816
LDC 186              ; 2817
CEQ                  ; 2818
TSEL    4966 2820    ; 2819
LD  0   1            ; 2820
LDC 187              ; 2821
CEQ                  ; 2822
TSEL    4976 2824    ; 2823
LD  0   1            ; 2824
LDC 188              ; 2825
CEQ                  ; 2826
TSEL    4986 2828    ; 2827
LD  0   1            ; 2828
LDC 189              ; 2829
CEQ                  ; 2830
TSEL    4996 2832    ; 2831
LD  0   1            ; 2832
LDC 190              ; 2833
CEQ                  ; 2834
TSEL    5006 2836    ; 2835
LD  0   1            ; 2836
LDC 191              ; 2837
CEQ                  ; 2838
TSEL    5016 2840    ; 2839
LD  0   1            ; 2840
LDC 192              ; 2841
CEQ                  ; 2842
TSEL    5026 2844    ; 2843
LD  0   1            ; 2844
LDC 193              ; 2845
CEQ                  ; 2846
TSEL    5036 2848    ; 2847
LD  0   1            ; 2848
LDC 194              ; 2849
CEQ                  ; 2850
TSEL    5046 2852    ; 2851
LD  0   1            ; 2852
LDC 195              ; 2853
CEQ                  ; 2854
TSEL    5056 2856    ; 2855
LD  0   1            ; 2856
LDC 196              ; 2857
CEQ                  ; 2858
TSEL    5066 2860    ; 2859
LD  0   1            ; 2860
LDC 197              ; 2861
CEQ                  ; 2862
TSEL    5076 2864    ; 2863
LD  0   1            ; 2864
LDC 198              ; 2865
CEQ                  ; 2866
TSEL    5086 2868    ; 2867
LD  0   1            ; 2868
LDC 199              ; 2869
CEQ                  ; 2870
TSEL    5096 2872    ; 2871
LD  0   1            ; 2872
LDC 200              ; 2873
CEQ                  ; 2874
TSEL    5106 2876    ; 2875
LD  0   1            ; 2876
LDC 201              ; 2877
CEQ                  ; 2878
TSEL    5116 2880    ; 2879
LD  0   1            ; 2880
LDC 202              ; 2881
CEQ                  ; 2882
TSEL    5126 2884    ; 2883
LD  0   1            ; 2884
LDC 203              ; 2885
CEQ                  ; 2886
TSEL    5136 2888    ; 2887
LD  0   1            ; 2888
LDC 204              ; 2889
CEQ                  ; 2890
TSEL    5146 2892    ; 2891
LD  0   1            ; 2892
LDC 205              ; 2893
CEQ                  ; 2894
TSEL    5156 2896    ; 2895
LD  0   1            ; 2896
LDC 206              ; 2897
CEQ                  ; 2898
TSEL    5166 2900    ; 2899
LD  0   1            ; 2900
LDC 207              ; 2901
CEQ                  ; 2902
TSEL    5176 2904    ; 2903
LD  0   1            ; 2904
LDC 208              ; 2905
CEQ                  ; 2906
TSEL    5186 2908    ; 2907
LD  0   1            ; 2908
LDC 209              ; 2909
CEQ                  ; 2910
TSEL    5196 2912    ; 2911
LD  0   1            ; 2912
LDC 210              ; 2913
CEQ                  ; 2914
TSEL    5206 2916    ; 2915
LD  0   1            ; 2916
LDC 211              ; 2917
CEQ                  ; 2918
TSEL    5216 2920    ; 2919
LD  0   1            ; 2920
LDC 212              ; 2921
CEQ                  ; 2922
TSEL    5226 2924    ; 2923
LD  0   1            ; 2924
LDC 213              ; 2925
CEQ                  ; 2926
TSEL    5236 2928    ; 2927
LD  0   1            ; 2928
LDC 214              ; 2929
CEQ                  ; 2930
TSEL    5246 2932    ; 2931
LD  0   1            ; 2932
LDC 215              ; 2933
CEQ                  ; 2934
TSEL    5256 2936    ; 2935
LD  0   1            ; 2936
LDC 216              ; 2937
CEQ                  ; 2938
TSEL    5266 2940    ; 2939
LD  0   1            ; 2940
LDC 217              ; 2941
CEQ                  ; 2942
TSEL    5276 2944    ; 2943
LD  0   1            ; 2944
LDC 218              ; 2945
CEQ                  ; 2946
TSEL    5286 2948    ; 2947
LD  0   1            ; 2948
LDC 219              ; 2949
CEQ                  ; 2950
TSEL    5296 2952    ; 2951
LD  0   1            ; 2952
LDC 220              ; 2953
CEQ                  ; 2954
TSEL    5306 2956    ; 2955
LD  0   1            ; 2956
LDC 221              ; 2957
CEQ                  ; 2958
TSEL    5316 2960    ; 2959
LD  0   1            ; 2960
LDC 222              ; 2961
CEQ                  ; 2962
TSEL    5326 2964    ; 2963
LD  0   1            ; 2964
LDC 223              ; 2965
CEQ                  ; 2966
TSEL    5336 2968    ; 2967
LD  0   1            ; 2968
LDC 224              ; 2969
CEQ                  ; 2970
TSEL    5346 2972    ; 2971
LD  0   1            ; 2972
LDC 225              ; 2973
CEQ                  ; 2974
TSEL    5356 2976    ; 2975
LD  0   1            ; 2976
LDC 226              ; 2977
CEQ                  ; 2978
TSEL    5366 2980    ; 2979
LD  0   1            ; 2980
LDC 227              ; 2981
CEQ                  ; 2982
TSEL    5376 2984    ; 2983
LD  0   1            ; 2984
LDC 228              ; 2985
CEQ                  ; 2986
TSEL    5386 2988    ; 2987
LD  0   1            ; 2988
LDC 229              ; 2989
CEQ                  ; 2990
TSEL    5396 2992    ; 2991
LD  0   1            ; 2992
LDC 230              ; 2993
CEQ                  ; 2994
TSEL    5406 2996    ; 2995
LD  0   1            ; 2996
LDC 231              ; 2997
CEQ                  ; 2998
TSEL    5416 3000    ; 2999
LD  0   1            ; 3000
LDC 232              ; 3001
CEQ                  ; 3002
TSEL    5426 3004    ; 3003
LD  0   1            ; 3004
LDC 233              ; 3005
CEQ                  ; 3006
TSEL    5436 3008    ; 3007
LD  0   1            ; 3008
LDC 234              ; 3009
CEQ                  ; 3010
TSEL    5446 3012    ; 3011
LD  0   1            ; 3012
LDC 235              ; 3013
CEQ                  ; 3014
TSEL    5456 3016    ; 3015
LD  0   1            ; 3016
LDC 236              ; 3017
CEQ                  ; 3018
TSEL    5466 3020    ; 3019
LD  0   1            ; 3020
LDC 237              ; 3021
CEQ                  ; 3022
TSEL    5476 3024    ; 3023
LD  0   1            ; 3024
LDC 238              ; 3025
CEQ                  ; 3026
TSEL    5486 3028    ; 3027
LD  0   1            ; 3028
LDC 239              ; 3029
CEQ                  ; 3030
TSEL    5496 3032    ; 3031
LD  0   1            ; 3032
LDC 240              ; 3033
CEQ                  ; 3034
TSEL    5506 3036    ; 3035
LD  0   1            ; 3036
LDC 241              ; 3037
CEQ                  ; 3038
TSEL    5516 3040    ; 3039
LD  0   1            ; 3040
LDC 242              ; 3041
CEQ                  ; 3042
TSEL    5526 3044    ; 3043
LD  0   1            ; 3044
LDC 243              ; 3045
CEQ                  ; 3046
TSEL    5536 3048    ; 3047
LD  0   1            ; 3048
LDC 244              ; 3049
CEQ                  ; 3050
TSEL    5546 3052    ; 3051
LD  0   1            ; 3052
LDC 245              ; 3053
CEQ                  ; 3054
TSEL    5556 3056    ; 3055
LD  0   1            ; 3056
LDC 246              ; 3057
CEQ                  ; 3058
TSEL    5566 3060    ; 3059
LD  0   1            ; 3060
LDC 247              ; 3061
CEQ                  ; 3062
TSEL    5576 3064    ; 3063
LD  0   1            ; 3064
LDC 248              ; 3065
CEQ                  ; 3066
TSEL    5586 3068    ; 3067
LD  0   1            ; 3068
LDC 249              ; 3069
CEQ                  ; 3070
TSEL    5596 3072    ; 3071
LD  0   1            ; 3072
LDC 250              ; 3073
CEQ                  ; 3074
TSEL    5606 3076    ; 3075
LD  0   1            ; 3076
LDC 251              ; 3077
CEQ                  ; 3078
TSEL    5616 3080    ; 3079
LD  0   1            ; 3080
LDC 252              ; 3081
CEQ                  ; 3082
TSEL    5626 3084    ; 3083
LD  0   1            ; 3084
LDC 253              ; 3085
CEQ                  ; 3086
TSEL    5636 3088    ; 3087
LD  0   1            ; 3088
LDC 254              ; 3089
CEQ                  ; 3090
TSEL    5646 3092    ; 3091
LD  0   1            ; 3092
LDC 255              ; 3093
CEQ                  ; 3094
TSEL    5656 3096    ; 3095
LDC  0               ; 3096
RTN                  ; 3097
LD  2   0            ; 3098
RTN                  ; 3099
LDF 3098             ; 3100
RTN                  ; 3101
LD  2   0            ; 3102
LD  0   0            ; 3103
ST  2   0            ; 3104
RTN                  ; 3105
LDF 3102             ; 3106
RTN                  ; 3107
LD  2   1            ; 3108
RTN                  ; 3109
LDF 3108             ; 3110
RTN                  ; 3111
LD  2   1            ; 3112
LD  0   0            ; 3113
ST  2   1            ; 3114
RTN                  ; 3115
LDF 3112             ; 3116
RTN                  ; 3117
LD  2   2            ; 3118
RTN                  ; 3119
LDF 3118             ; 3120
RTN                  ; 3121
LD  2   2            ; 3122
LD  0   0            ; 3123
ST  2   2            ; 3124
RTN                  ; 3125
LDF 3122             ; 3126
RTN                  ; 3127
LD  2   3            ; 3128
RTN                  ; 3129
LDF 3128             ; 3130
RTN                  ; 3131
LD  2   3            ; 3132
LD  0   0            ; 3133
ST  2   3            ; 3134
RTN                  ; 3135
LDF 3132             ; 3136
RTN                  ; 3137
LD  2   4            ; 3138
RTN                  ; 3139
LDF 3138             ; 3140
RTN                  ; 3141
LD  2   4            ; 3142
LD  0   0            ; 3143
ST  2   4            ; 3144
RTN                  ; 3145
LDF 3142             ; 3146
RTN                  ; 3147
LD  2   5            ; 3148
RTN                  ; 3149
LDF 3148             ; 3150
RTN                  ; 3151
LD  2   5            ; 3152
LD  0   0            ; 3153
ST  2   5            ; 3154
RTN                  ; 3155
LDF 3152             ; 3156
RTN                  ; 3157
LD  2   6            ; 3158
RTN                  ; 3159
LDF 3158             ; 3160
RTN                  ; 3161
LD  2   6            ; 3162
LD  0   0            ; 3163
ST  2   6            ; 3164
RTN                  ; 3165
LDF 3162             ; 3166
RTN                  ; 3167
LD  2   7            ; 3168
RTN                  ; 3169
LDF 3168             ; 3170
RTN                  ; 3171
LD  2   7            ; 3172
LD  0   0            ; 3173
ST  2   7            ; 3174
RTN                  ; 3175
LDF 3172             ; 3176
RTN                  ; 3177
LD  2   8            ; 3178
RTN                  ; 3179
LDF 3178             ; 3180
RTN                  ; 3181
LD  2   8            ; 3182
LD  0   0            ; 3183
ST  2   8            ; 3184
RTN                  ; 3185
LDF 3182             ; 3186
RTN                  ; 3187
LD  2   9            ; 3188
RTN                  ; 3189
LDF 3188             ; 3190
RTN                  ; 3191
LD  2   9            ; 3192
LD  0   0            ; 3193
ST  2   9            ; 3194
RTN                  ; 3195
LDF 3192             ; 3196
RTN                  ; 3197
LD  2   10           ; 3198
RTN                  ; 3199
LDF 3198             ; 3200
RTN                  ; 3201
LD  2   10           ; 3202
LD  0   0            ; 3203
ST  2   10           ; 3204
RTN                  ; 3205
LDF 3202             ; 3206
RTN                  ; 3207
LD  2   11           ; 3208
RTN                  ; 3209
LDF 3208             ; 3210
RTN                  ; 3211
LD  2   11           ; 3212
LD  0   0            ; 3213
ST  2   11           ; 3214
RTN                  ; 3215
LDF 3212             ; 3216
RTN                  ; 3217
LD  2   12           ; 3218
RTN                  ; 3219
LDF 3218             ; 3220
RTN                  ; 3221
LD  2   12           ; 3222
LD  0   0            ; 3223
ST  2   12           ; 3224
RTN                  ; 3225
LDF 3222             ; 3226
RTN                  ; 3227
LD  2   13           ; 3228
RTN                  ; 3229
LDF 3228             ; 3230
RTN                  ; 3231
LD  2   13           ; 3232
LD  0   0            ; 3233
ST  2   13           ; 3234
RTN                  ; 3235
LDF 3232             ; 3236
RTN                  ; 3237
LD  2   14           ; 3238
RTN                  ; 3239
LDF 3238             ; 3240
RTN                  ; 3241
LD  2   14           ; 3242
LD  0   0            ; 3243
ST  2   14           ; 3244
RTN                  ; 3245
LDF 3242             ; 3246
RTN                  ; 3247
LD  2   15           ; 3248
RTN                  ; 3249
LDF 3248             ; 3250
RTN                  ; 3251
LD  2   15           ; 3252
LD  0   0            ; 3253
ST  2   15           ; 3254
RTN                  ; 3255
LDF 3252             ; 3256
RTN                  ; 3257
LD  2   16           ; 3258
RTN                  ; 3259
LDF 3258             ; 3260
RTN                  ; 3261
LD  2   16           ; 3262
LD  0   0            ; 3263
ST  2   16           ; 3264
RTN                  ; 3265
LDF 3262             ; 3266
RTN                  ; 3267
LD  2   17           ; 3268
RTN                  ; 3269
LDF 3268             ; 3270
RTN                  ; 3271
LD  2   17           ; 3272
LD  0   0            ; 3273
ST  2   17           ; 3274
RTN                  ; 3275
LDF 3272             ; 3276
RTN                  ; 3277
LD  2   18           ; 3278
RTN                  ; 3279
LDF 3278             ; 3280
RTN                  ; 3281
LD  2   18           ; 3282
LD  0   0            ; 3283
ST  2   18           ; 3284
RTN                  ; 3285
LDF 3282             ; 3286
RTN                  ; 3287
LD  2   19           ; 3288
RTN                  ; 3289
LDF 3288             ; 3290
RTN                  ; 3291
LD  2   19           ; 3292
LD  0   0            ; 3293
ST  2   19           ; 3294
RTN                  ; 3295
LDF 3292             ; 3296
RTN                  ; 3297
LD  2   20           ; 3298
RTN                  ; 3299
LDF 3298             ; 3300
RTN                  ; 3301
LD  2   20           ; 3302
LD  0   0            ; 3303
ST  2   20           ; 3304
RTN                  ; 3305
LDF 3302             ; 3306
RTN                  ; 3307
LD  2   21           ; 3308
RTN                  ; 3309
LDF 3308             ; 3310
RTN                  ; 3311
LD  2   21           ; 3312
LD  0   0            ; 3313
ST  2   21           ; 3314
RTN                  ; 3315
LDF 3312             ; 3316
RTN                  ; 3317
LD  2   22           ; 3318
RTN                  ; 3319
LDF 3318             ; 3320
RTN                  ; 3321
LD  2   22           ; 3322
LD  0   0            ; 3323
ST  2   22           ; 3324
RTN                  ; 3325
LDF 3322             ; 3326
RTN                  ; 3327
LD  2   23           ; 3328
RTN                  ; 3329
LDF 3328             ; 3330
RTN                  ; 3331
LD  2   23           ; 3332
LD  0   0            ; 3333
ST  2   23           ; 3334
RTN                  ; 3335
LDF 3332             ; 3336
RTN                  ; 3337
LD  2   24           ; 3338
RTN                  ; 3339
LDF 3338             ; 3340
RTN                  ; 3341
LD  2   24           ; 3342
LD  0   0            ; 3343
ST  2   24           ; 3344
RTN                  ; 3345
LDF 3342             ; 3346
RTN                  ; 3347
LD  2   25           ; 3348
RTN                  ; 3349
LDF 3348             ; 3350
RTN                  ; 3351
LD  2   25           ; 3352
LD  0   0            ; 3353
ST  2   25           ; 3354
RTN                  ; 3355
LDF 3352             ; 3356
RTN                  ; 3357
LD  2   26           ; 3358
RTN                  ; 3359
LDF 3358             ; 3360
RTN                  ; 3361
LD  2   26           ; 3362
LD  0   0            ; 3363
ST  2   26           ; 3364
RTN                  ; 3365
LDF 3362             ; 3366
RTN                  ; 3367
LD  2   27           ; 3368
RTN                  ; 3369
LDF 3368             ; 3370
RTN                  ; 3371
LD  2   27           ; 3372
LD  0   0            ; 3373
ST  2   27           ; 3374
RTN                  ; 3375
LDF 3372             ; 3376
RTN                  ; 3377
LD  2   28           ; 3378
RTN                  ; 3379
LDF 3378             ; 3380
RTN                  ; 3381
LD  2   28           ; 3382
LD  0   0            ; 3383
ST  2   28           ; 3384
RTN                  ; 3385
LDF 3382             ; 3386
RTN                  ; 3387
LD  2   29           ; 3388
RTN                  ; 3389
LDF 3388             ; 3390
RTN                  ; 3391
LD  2   29           ; 3392
LD  0   0            ; 3393
ST  2   29           ; 3394
RTN                  ; 3395
LDF 3392             ; 3396
RTN                  ; 3397
LD  2   30           ; 3398
RTN                  ; 3399
LDF 3398             ; 3400
RTN                  ; 3401
LD  2   30           ; 3402
LD  0   0            ; 3403
ST  2   30           ; 3404
RTN                  ; 3405
LDF 3402             ; 3406
RTN                  ; 3407
LD  2   31           ; 3408
RTN                  ; 3409
LDF 3408             ; 3410
RTN                  ; 3411
LD  2   31           ; 3412
LD  0   0            ; 3413
ST  2   31           ; 3414
RTN                  ; 3415
LDF 3412             ; 3416
RTN                  ; 3417
LD  2   32           ; 3418
RTN                  ; 3419
LDF 3418             ; 3420
RTN                  ; 3421
LD  2   32           ; 3422
LD  0   0            ; 3423
ST  2   32           ; 3424
RTN                  ; 3425
LDF 3422             ; 3426
RTN                  ; 3427
LD  2   33           ; 3428
RTN                  ; 3429
LDF 3428             ; 3430
RTN                  ; 3431
LD  2   33           ; 3432
LD  0   0            ; 3433
ST  2   33           ; 3434
RTN                  ; 3435
LDF 3432             ; 3436
RTN                  ; 3437
LD  2   34           ; 3438
RTN                  ; 3439
LDF 3438             ; 3440
RTN                  ; 3441
LD  2   34           ; 3442
LD  0   0            ; 3443
ST  2   34           ; 3444
RTN                  ; 3445
LDF 3442             ; 3446
RTN                  ; 3447
LD  2   35           ; 3448
RTN                  ; 3449
LDF 3448             ; 3450
RTN                  ; 3451
LD  2   35           ; 3452
LD  0   0            ; 3453
ST  2   35           ; 3454
RTN                  ; 3455
LDF 3452             ; 3456
RTN                  ; 3457
LD  2   36           ; 3458
RTN                  ; 3459
LDF 3458             ; 3460
RTN                  ; 3461
LD  2   36           ; 3462
LD  0   0            ; 3463
ST  2   36           ; 3464
RTN                  ; 3465
LDF 3462             ; 3466
RTN                  ; 3467
LD  2   37           ; 3468
RTN                  ; 3469
LDF 3468             ; 3470
RTN                  ; 3471
LD  2   37           ; 3472
LD  0   0            ; 3473
ST  2   37           ; 3474
RTN                  ; 3475
LDF 3472             ; 3476
RTN                  ; 3477
LD  2   38           ; 3478
RTN                  ; 3479
LDF 3478             ; 3480
RTN                  ; 3481
LD  2   38           ; 3482
LD  0   0            ; 3483
ST  2   38           ; 3484
RTN                  ; 3485
LDF 3482             ; 3486
RTN                  ; 3487
LD  2   39           ; 3488
RTN                  ; 3489
LDF 3488             ; 3490
RTN                  ; 3491
LD  2   39           ; 3492
LD  0   0            ; 3493
ST  2   39           ; 3494
RTN                  ; 3495
LDF 3492             ; 3496
RTN                  ; 3497
LD  2   40           ; 3498
RTN                  ; 3499
LDF 3498             ; 3500
RTN                  ; 3501
LD  2   40           ; 3502
LD  0   0            ; 3503
ST  2   40           ; 3504
RTN                  ; 3505
LDF 3502             ; 3506
RTN                  ; 3507
LD  2   41           ; 3508
RTN                  ; 3509
LDF 3508             ; 3510
RTN                  ; 3511
LD  2   41           ; 3512
LD  0   0            ; 3513
ST  2   41           ; 3514
RTN                  ; 3515
LDF 3512             ; 3516
RTN                  ; 3517
LD  2   42           ; 3518
RTN                  ; 3519
LDF 3518             ; 3520
RTN                  ; 3521
LD  2   42           ; 3522
LD  0   0            ; 3523
ST  2   42           ; 3524
RTN                  ; 3525
LDF 3522             ; 3526
RTN                  ; 3527
LD  2   43           ; 3528
RTN                  ; 3529
LDF 3528             ; 3530
RTN                  ; 3531
LD  2   43           ; 3532
LD  0   0            ; 3533
ST  2   43           ; 3534
RTN                  ; 3535
LDF 3532             ; 3536
RTN                  ; 3537
LD  2   44           ; 3538
RTN                  ; 3539
LDF 3538             ; 3540
RTN                  ; 3541
LD  2   44           ; 3542
LD  0   0            ; 3543
ST  2   44           ; 3544
RTN                  ; 3545
LDF 3542             ; 3546
RTN                  ; 3547
LD  2   45           ; 3548
RTN                  ; 3549
LDF 3548             ; 3550
RTN                  ; 3551
LD  2   45           ; 3552
LD  0   0            ; 3553
ST  2   45           ; 3554
RTN                  ; 3555
LDF 3552             ; 3556
RTN                  ; 3557
LD  2   46           ; 3558
RTN                  ; 3559
LDF 3558             ; 3560
RTN                  ; 3561
LD  2   46           ; 3562
LD  0   0            ; 3563
ST  2   46           ; 3564
RTN                  ; 3565
LDF 3562             ; 3566
RTN                  ; 3567
LD  2   47           ; 3568
RTN                  ; 3569
LDF 3568             ; 3570
RTN                  ; 3571
LD  2   47           ; 3572
LD  0   0            ; 3573
ST  2   47           ; 3574
RTN                  ; 3575
LDF 3572             ; 3576
RTN                  ; 3577
LD  2   48           ; 3578
RTN                  ; 3579
LDF 3578             ; 3580
RTN                  ; 3581
LD  2   48           ; 3582
LD  0   0            ; 3583
ST  2   48           ; 3584
RTN                  ; 3585
LDF 3582             ; 3586
RTN                  ; 3587
LD  2   49           ; 3588
RTN                  ; 3589
LDF 3588             ; 3590
RTN                  ; 3591
LD  2   49           ; 3592
LD  0   0            ; 3593
ST  2   49           ; 3594
RTN                  ; 3595
LDF 3592             ; 3596
RTN                  ; 3597
LD  2   50           ; 3598
RTN                  ; 3599
LDF 3598             ; 3600
RTN                  ; 3601
LD  2   50           ; 3602
LD  0   0            ; 3603
ST  2   50           ; 3604
RTN                  ; 3605
LDF 3602             ; 3606
RTN                  ; 3607
LD  2   51           ; 3608
RTN                  ; 3609
LDF 3608             ; 3610
RTN                  ; 3611
LD  2   51           ; 3612
LD  0   0            ; 3613
ST  2   51           ; 3614
RTN                  ; 3615
LDF 3612             ; 3616
RTN                  ; 3617
LD  2   52           ; 3618
RTN                  ; 3619
LDF 3618             ; 3620
RTN                  ; 3621
LD  2   52           ; 3622
LD  0   0            ; 3623
ST  2   52           ; 3624
RTN                  ; 3625
LDF 3622             ; 3626
RTN                  ; 3627
LD  2   53           ; 3628
RTN                  ; 3629
LDF 3628             ; 3630
RTN                  ; 3631
LD  2   53           ; 3632
LD  0   0            ; 3633
ST  2   53           ; 3634
RTN                  ; 3635
LDF 3632             ; 3636
RTN                  ; 3637
LD  2   54           ; 3638
RTN                  ; 3639
LDF 3638             ; 3640
RTN                  ; 3641
LD  2   54           ; 3642
LD  0   0            ; 3643
ST  2   54           ; 3644
RTN                  ; 3645
LDF 3642             ; 3646
RTN                  ; 3647
LD  2   55           ; 3648
RTN                  ; 3649
LDF 3648             ; 3650
RTN                  ; 3651
LD  2   55           ; 3652
LD  0   0            ; 3653
ST  2   55           ; 3654
RTN                  ; 3655
LDF 3652             ; 3656
RTN                  ; 3657
LD  2   56           ; 3658
RTN                  ; 3659
LDF 3658             ; 3660
RTN                  ; 3661
LD  2   56           ; 3662
LD  0   0            ; 3663
ST  2   56           ; 3664
RTN                  ; 3665
LDF 3662             ; 3666
RTN                  ; 3667
LD  2   57           ; 3668
RTN                  ; 3669
LDF 3668             ; 3670
RTN                  ; 3671
LD  2   57           ; 3672
LD  0   0            ; 3673
ST  2   57           ; 3674
RTN                  ; 3675
LDF 3672             ; 3676
RTN                  ; 3677
LD  2   58           ; 3678
RTN                  ; 3679
LDF 3678             ; 3680
RTN                  ; 3681
LD  2   58           ; 3682
LD  0   0            ; 3683
ST  2   58           ; 3684
RTN                  ; 3685
LDF 3682             ; 3686
RTN                  ; 3687
LD  2   59           ; 3688
RTN                  ; 3689
LDF 3688             ; 3690
RTN                  ; 3691
LD  2   59           ; 3692
LD  0   0            ; 3693
ST  2   59           ; 3694
RTN                  ; 3695
LDF 3692             ; 3696
RTN                  ; 3697
LD  2   60           ; 3698
RTN                  ; 3699
LDF 3698             ; 3700
RTN                  ; 3701
LD  2   60           ; 3702
LD  0   0            ; 3703
ST  2   60           ; 3704
RTN                  ; 3705
LDF 3702             ; 3706
RTN                  ; 3707
LD  2   61           ; 3708
RTN                  ; 3709
LDF 3708             ; 3710
RTN                  ; 3711
LD  2   61           ; 3712
LD  0   0            ; 3713
ST  2   61           ; 3714
RTN                  ; 3715
LDF 3712             ; 3716
RTN                  ; 3717
LD  2   62           ; 3718
RTN                  ; 3719
LDF 3718             ; 3720
RTN                  ; 3721
LD  2   62           ; 3722
LD  0   0            ; 3723
ST  2   62           ; 3724
RTN                  ; 3725
LDF 3722             ; 3726
RTN                  ; 3727
LD  2   63           ; 3728
RTN                  ; 3729
LDF 3728             ; 3730
RTN                  ; 3731
LD  2   63           ; 3732
LD  0   0            ; 3733
ST  2   63           ; 3734
RTN                  ; 3735
LDF 3732             ; 3736
RTN                  ; 3737
LD  2   64           ; 3738
RTN                  ; 3739
LDF 3738             ; 3740
RTN                  ; 3741
LD  2   64           ; 3742
LD  0   0            ; 3743
ST  2   64           ; 3744
RTN                  ; 3745
LDF 3742             ; 3746
RTN                  ; 3747
LD  2   65           ; 3748
RTN                  ; 3749
LDF 3748             ; 3750
RTN                  ; 3751
LD  2   65           ; 3752
LD  0   0            ; 3753
ST  2   65           ; 3754
RTN                  ; 3755
LDF 3752             ; 3756
RTN                  ; 3757
LD  2   66           ; 3758
RTN                  ; 3759
LDF 3758             ; 3760
RTN                  ; 3761
LD  2   66           ; 3762
LD  0   0            ; 3763
ST  2   66           ; 3764
RTN                  ; 3765
LDF 3762             ; 3766
RTN                  ; 3767
LD  2   67           ; 3768
RTN                  ; 3769
LDF 3768             ; 3770
RTN                  ; 3771
LD  2   67           ; 3772
LD  0   0            ; 3773
ST  2   67           ; 3774
RTN                  ; 3775
LDF 3772             ; 3776
RTN                  ; 3777
LD  2   68           ; 3778
RTN                  ; 3779
LDF 3778             ; 3780
RTN                  ; 3781
LD  2   68           ; 3782
LD  0   0            ; 3783
ST  2   68           ; 3784
RTN                  ; 3785
LDF 3782             ; 3786
RTN                  ; 3787
LD  2   69           ; 3788
RTN                  ; 3789
LDF 3788             ; 3790
RTN                  ; 3791
LD  2   69           ; 3792
LD  0   0            ; 3793
ST  2   69           ; 3794
RTN                  ; 3795
LDF 3792             ; 3796
RTN                  ; 3797
LD  2   70           ; 3798
RTN                  ; 3799
LDF 3798             ; 3800
RTN                  ; 3801
LD  2   70           ; 3802
LD  0   0            ; 3803
ST  2   70           ; 3804
RTN                  ; 3805
LDF 3802             ; 3806
RTN                  ; 3807
LD  2   71           ; 3808
RTN                  ; 3809
LDF 3808             ; 3810
RTN                  ; 3811
LD  2   71           ; 3812
LD  0   0            ; 3813
ST  2   71           ; 3814
RTN                  ; 3815
LDF 3812             ; 3816
RTN                  ; 3817
LD  2   72           ; 3818
RTN                  ; 3819
LDF 3818             ; 3820
RTN                  ; 3821
LD  2   72           ; 3822
LD  0   0            ; 3823
ST  2   72           ; 3824
RTN                  ; 3825
LDF 3822             ; 3826
RTN                  ; 3827
LD  2   73           ; 3828
RTN                  ; 3829
LDF 3828             ; 3830
RTN                  ; 3831
LD  2   73           ; 3832
LD  0   0            ; 3833
ST  2   73           ; 3834
RTN                  ; 3835
LDF 3832             ; 3836
RTN                  ; 3837
LD  2   74           ; 3838
RTN                  ; 3839
LDF 3838             ; 3840
RTN                  ; 3841
LD  2   74           ; 3842
LD  0   0            ; 3843
ST  2   74           ; 3844
RTN                  ; 3845
LDF 3842             ; 3846
RTN                  ; 3847
LD  2   75           ; 3848
RTN                  ; 3849
LDF 3848             ; 3850
RTN                  ; 3851
LD  2   75           ; 3852
LD  0   0            ; 3853
ST  2   75           ; 3854
RTN                  ; 3855
LDF 3852             ; 3856
RTN                  ; 3857
LD  2   76           ; 3858
RTN                  ; 3859
LDF 3858             ; 3860
RTN                  ; 3861
LD  2   76           ; 3862
LD  0   0            ; 3863
ST  2   76           ; 3864
RTN                  ; 3865
LDF 3862             ; 3866
RTN                  ; 3867
LD  2   77           ; 3868
RTN                  ; 3869
LDF 3868             ; 3870
RTN                  ; 3871
LD  2   77           ; 3872
LD  0   0            ; 3873
ST  2   77           ; 3874
RTN                  ; 3875
LDF 3872             ; 3876
RTN                  ; 3877
LD  2   78           ; 3878
RTN                  ; 3879
LDF 3878             ; 3880
RTN                  ; 3881
LD  2   78           ; 3882
LD  0   0            ; 3883
ST  2   78           ; 3884
RTN                  ; 3885
LDF 3882             ; 3886
RTN                  ; 3887
LD  2   79           ; 3888
RTN                  ; 3889
LDF 3888             ; 3890
RTN                  ; 3891
LD  2   79           ; 3892
LD  0   0            ; 3893
ST  2   79           ; 3894
RTN                  ; 3895
LDF 3892             ; 3896
RTN                  ; 3897
LD  2   80           ; 3898
RTN                  ; 3899
LDF 3898             ; 3900
RTN                  ; 3901
LD  2   80           ; 3902
LD  0   0            ; 3903
ST  2   80           ; 3904
RTN                  ; 3905
LDF 3902             ; 3906
RTN                  ; 3907
LD  2   81           ; 3908
RTN                  ; 3909
LDF 3908             ; 3910
RTN                  ; 3911
LD  2   81           ; 3912
LD  0   0            ; 3913
ST  2   81           ; 3914
RTN                  ; 3915
LDF 3912             ; 3916
RTN                  ; 3917
LD  2   82           ; 3918
RTN                  ; 3919
LDF 3918             ; 3920
RTN                  ; 3921
LD  2   82           ; 3922
LD  0   0            ; 3923
ST  2   82           ; 3924
RTN                  ; 3925
LDF 3922             ; 3926
RTN                  ; 3927
LD  2   83           ; 3928
RTN                  ; 3929
LDF 3928             ; 3930
RTN                  ; 3931
LD  2   83           ; 3932
LD  0   0            ; 3933
ST  2   83           ; 3934
RTN                  ; 3935
LDF 3932             ; 3936
RTN                  ; 3937
LD  2   84           ; 3938
RTN                  ; 3939
LDF 3938             ; 3940
RTN                  ; 3941
LD  2   84           ; 3942
LD  0   0            ; 3943
ST  2   84           ; 3944
RTN                  ; 3945
LDF 3942             ; 3946
RTN                  ; 3947
LD  2   85           ; 3948
RTN                  ; 3949
LDF 3948             ; 3950
RTN                  ; 3951
LD  2   85           ; 3952
LD  0   0            ; 3953
ST  2   85           ; 3954
RTN                  ; 3955
LDF 3952             ; 3956
RTN                  ; 3957
LD  2   86           ; 3958
RTN                  ; 3959
LDF 3958             ; 3960
RTN                  ; 3961
LD  2   86           ; 3962
LD  0   0            ; 3963
ST  2   86           ; 3964
RTN                  ; 3965
LDF 3962             ; 3966
RTN                  ; 3967
LD  2   87           ; 3968
RTN                  ; 3969
LDF 3968             ; 3970
RTN                  ; 3971
LD  2   87           ; 3972
LD  0   0            ; 3973
ST  2   87           ; 3974
RTN                  ; 3975
LDF 3972             ; 3976
RTN                  ; 3977
LD  2   88           ; 3978
RTN                  ; 3979
LDF 3978             ; 3980
RTN                  ; 3981
LD  2   88           ; 3982
LD  0   0            ; 3983
ST  2   88           ; 3984
RTN                  ; 3985
LDF 3982             ; 3986
RTN                  ; 3987
LD  2   89           ; 3988
RTN                  ; 3989
LDF 3988             ; 3990
RTN                  ; 3991
LD  2   89           ; 3992
LD  0   0            ; 3993
ST  2   89           ; 3994
RTN                  ; 3995
LDF 3992             ; 3996
RTN                  ; 3997
LD  2   90           ; 3998
RTN                  ; 3999
LDF 3998             ; 4000
RTN                  ; 4001
LD  2   90           ; 4002
LD  0   0            ; 4003
ST  2   90           ; 4004
RTN                  ; 4005
LDF 4002             ; 4006
RTN                  ; 4007
LD  2   91           ; 4008
RTN                  ; 4009
LDF 4008             ; 4010
RTN                  ; 4011
LD  2   91           ; 4012
LD  0   0            ; 4013
ST  2   91           ; 4014
RTN                  ; 4015
LDF 4012             ; 4016
RTN                  ; 4017
LD  2   92           ; 4018
RTN                  ; 4019
LDF 4018             ; 4020
RTN                  ; 4021
LD  2   92           ; 4022
LD  0   0            ; 4023
ST  2   92           ; 4024
RTN                  ; 4025
LDF 4022             ; 4026
RTN                  ; 4027
LD  2   93           ; 4028
RTN                  ; 4029
LDF 4028             ; 4030
RTN                  ; 4031
LD  2   93           ; 4032
LD  0   0            ; 4033
ST  2   93           ; 4034
RTN                  ; 4035
LDF 4032             ; 4036
RTN                  ; 4037
LD  2   94           ; 4038
RTN                  ; 4039
LDF 4038             ; 4040
RTN                  ; 4041
LD  2   94           ; 4042
LD  0   0            ; 4043
ST  2   94           ; 4044
RTN                  ; 4045
LDF 4042             ; 4046
RTN                  ; 4047
LD  2   95           ; 4048
RTN                  ; 4049
LDF 4048             ; 4050
RTN                  ; 4051
LD  2   95           ; 4052
LD  0   0            ; 4053
ST  2   95           ; 4054
RTN                  ; 4055
LDF 4052             ; 4056
RTN                  ; 4057
LD  2   96           ; 4058
RTN                  ; 4059
LDF 4058             ; 4060
RTN                  ; 4061
LD  2   96           ; 4062
LD  0   0            ; 4063
ST  2   96           ; 4064
RTN                  ; 4065
LDF 4062             ; 4066
RTN                  ; 4067
LD  2   97           ; 4068
RTN                  ; 4069
LDF 4068             ; 4070
RTN                  ; 4071
LD  2   97           ; 4072
LD  0   0            ; 4073
ST  2   97           ; 4074
RTN                  ; 4075
LDF 4072             ; 4076
RTN                  ; 4077
LD  2   98           ; 4078
RTN                  ; 4079
LDF 4078             ; 4080
RTN                  ; 4081
LD  2   98           ; 4082
LD  0   0            ; 4083
ST  2   98           ; 4084
RTN                  ; 4085
LDF 4082             ; 4086
RTN                  ; 4087
LD  2   99           ; 4088
RTN                  ; 4089
LDF 4088             ; 4090
RTN                  ; 4091
LD  2   99           ; 4092
LD  0   0            ; 4093
ST  2   99           ; 4094
RTN                  ; 4095
LDF 4092             ; 4096
RTN                  ; 4097
LD  2   100          ; 4098
RTN                  ; 4099
LDF 4098             ; 4100
RTN                  ; 4101
LD  2   100          ; 4102
LD  0   0            ; 4103
ST  2   100          ; 4104
RTN                  ; 4105
LDF 4102             ; 4106
RTN                  ; 4107
LD  2   101          ; 4108
RTN                  ; 4109
LDF 4108             ; 4110
RTN                  ; 4111
LD  2   101          ; 4112
LD  0   0            ; 4113
ST  2   101          ; 4114
RTN                  ; 4115
LDF 4112             ; 4116
RTN                  ; 4117
LD  2   102          ; 4118
RTN                  ; 4119
LDF 4118             ; 4120
RTN                  ; 4121
LD  2   102          ; 4122
LD  0   0            ; 4123
ST  2   102          ; 4124
RTN                  ; 4125
LDF 4122             ; 4126
RTN                  ; 4127
LD  2   103          ; 4128
RTN                  ; 4129
LDF 4128             ; 4130
RTN                  ; 4131
LD  2   103          ; 4132
LD  0   0            ; 4133
ST  2   103          ; 4134
RTN                  ; 4135
LDF 4132             ; 4136
RTN                  ; 4137
LD  2   104          ; 4138
RTN                  ; 4139
LDF 4138             ; 4140
RTN                  ; 4141
LD  2   104          ; 4142
LD  0   0            ; 4143
ST  2   104          ; 4144
RTN                  ; 4145
LDF 4142             ; 4146
RTN                  ; 4147
LD  2   105          ; 4148
RTN                  ; 4149
LDF 4148             ; 4150
RTN                  ; 4151
LD  2   105          ; 4152
LD  0   0            ; 4153
ST  2   105          ; 4154
RTN                  ; 4155
LDF 4152             ; 4156
RTN                  ; 4157
LD  2   106          ; 4158
RTN                  ; 4159
LDF 4158             ; 4160
RTN                  ; 4161
LD  2   106          ; 4162
LD  0   0            ; 4163
ST  2   106          ; 4164
RTN                  ; 4165
LDF 4162             ; 4166
RTN                  ; 4167
LD  2   107          ; 4168
RTN                  ; 4169
LDF 4168             ; 4170
RTN                  ; 4171
LD  2   107          ; 4172
LD  0   0            ; 4173
ST  2   107          ; 4174
RTN                  ; 4175
LDF 4172             ; 4176
RTN                  ; 4177
LD  2   108          ; 4178
RTN                  ; 4179
LDF 4178             ; 4180
RTN                  ; 4181
LD  2   108          ; 4182
LD  0   0            ; 4183
ST  2   108          ; 4184
RTN                  ; 4185
LDF 4182             ; 4186
RTN                  ; 4187
LD  2   109          ; 4188
RTN                  ; 4189
LDF 4188             ; 4190
RTN                  ; 4191
LD  2   109          ; 4192
LD  0   0            ; 4193
ST  2   109          ; 4194
RTN                  ; 4195
LDF 4192             ; 4196
RTN                  ; 4197
LD  2   110          ; 4198
RTN                  ; 4199
LDF 4198             ; 4200
RTN                  ; 4201
LD  2   110          ; 4202
LD  0   0            ; 4203
ST  2   110          ; 4204
RTN                  ; 4205
LDF 4202             ; 4206
RTN                  ; 4207
LD  2   111          ; 4208
RTN                  ; 4209
LDF 4208             ; 4210
RTN                  ; 4211
LD  2   111          ; 4212
LD  0   0            ; 4213
ST  2   111          ; 4214
RTN                  ; 4215
LDF 4212             ; 4216
RTN                  ; 4217
LD  2   112          ; 4218
RTN                  ; 4219
LDF 4218             ; 4220
RTN                  ; 4221
LD  2   112          ; 4222
LD  0   0            ; 4223
ST  2   112          ; 4224
RTN                  ; 4225
LDF 4222             ; 4226
RTN                  ; 4227
LD  2   113          ; 4228
RTN                  ; 4229
LDF 4228             ; 4230
RTN                  ; 4231
LD  2   113          ; 4232
LD  0   0            ; 4233
ST  2   113          ; 4234
RTN                  ; 4235
LDF 4232             ; 4236
RTN                  ; 4237
LD  2   114          ; 4238
RTN                  ; 4239
LDF 4238             ; 4240
RTN                  ; 4241
LD  2   114          ; 4242
LD  0   0            ; 4243
ST  2   114          ; 4244
RTN                  ; 4245
LDF 4242             ; 4246
RTN                  ; 4247
LD  2   115          ; 4248
RTN                  ; 4249
LDF 4248             ; 4250
RTN                  ; 4251
LD  2   115          ; 4252
LD  0   0            ; 4253
ST  2   115          ; 4254
RTN                  ; 4255
LDF 4252             ; 4256
RTN                  ; 4257
LD  2   116          ; 4258
RTN                  ; 4259
LDF 4258             ; 4260
RTN                  ; 4261
LD  2   116          ; 4262
LD  0   0            ; 4263
ST  2   116          ; 4264
RTN                  ; 4265
LDF 4262             ; 4266
RTN                  ; 4267
LD  2   117          ; 4268
RTN                  ; 4269
LDF 4268             ; 4270
RTN                  ; 4271
LD  2   117          ; 4272
LD  0   0            ; 4273
ST  2   117          ; 4274
RTN                  ; 4275
LDF 4272             ; 4276
RTN                  ; 4277
LD  2   118          ; 4278
RTN                  ; 4279
LDF 4278             ; 4280
RTN                  ; 4281
LD  2   118          ; 4282
LD  0   0            ; 4283
ST  2   118          ; 4284
RTN                  ; 4285
LDF 4282             ; 4286
RTN                  ; 4287
LD  2   119          ; 4288
RTN                  ; 4289
LDF 4288             ; 4290
RTN                  ; 4291
LD  2   119          ; 4292
LD  0   0            ; 4293
ST  2   119          ; 4294
RTN                  ; 4295
LDF 4292             ; 4296
RTN                  ; 4297
LD  2   120          ; 4298
RTN                  ; 4299
LDF 4298             ; 4300
RTN                  ; 4301
LD  2   120          ; 4302
LD  0   0            ; 4303
ST  2   120          ; 4304
RTN                  ; 4305
LDF 4302             ; 4306
RTN                  ; 4307
LD  2   121          ; 4308
RTN                  ; 4309
LDF 4308             ; 4310
RTN                  ; 4311
LD  2   121          ; 4312
LD  0   0            ; 4313
ST  2   121          ; 4314
RTN                  ; 4315
LDF 4312             ; 4316
RTN                  ; 4317
LD  2   122          ; 4318
RTN                  ; 4319
LDF 4318             ; 4320
RTN                  ; 4321
LD  2   122          ; 4322
LD  0   0            ; 4323
ST  2   122          ; 4324
RTN                  ; 4325
LDF 4322             ; 4326
RTN                  ; 4327
LD  2   123          ; 4328
RTN                  ; 4329
LDF 4328             ; 4330
RTN                  ; 4331
LD  2   123          ; 4332
LD  0   0            ; 4333
ST  2   123          ; 4334
RTN                  ; 4335
LDF 4332             ; 4336
RTN                  ; 4337
LD  2   124          ; 4338
RTN                  ; 4339
LDF 4338             ; 4340
RTN                  ; 4341
LD  2   124          ; 4342
LD  0   0            ; 4343
ST  2   124          ; 4344
RTN                  ; 4345
LDF 4342             ; 4346
RTN                  ; 4347
LD  2   125          ; 4348
RTN                  ; 4349
LDF 4348             ; 4350
RTN                  ; 4351
LD  2   125          ; 4352
LD  0   0            ; 4353
ST  2   125          ; 4354
RTN                  ; 4355
LDF 4352             ; 4356
RTN                  ; 4357
LD  2   126          ; 4358
RTN                  ; 4359
LDF 4358             ; 4360
RTN                  ; 4361
LD  2   126          ; 4362
LD  0   0            ; 4363
ST  2   126          ; 4364
RTN                  ; 4365
LDF 4362             ; 4366
RTN                  ; 4367
LD  2   127          ; 4368
RTN                  ; 4369
LDF 4368             ; 4370
RTN                  ; 4371
LD  2   127          ; 4372
LD  0   0            ; 4373
ST  2   127          ; 4374
RTN                  ; 4375
LDF 4372             ; 4376
RTN                  ; 4377
LD  2   128          ; 4378
RTN                  ; 4379
LDF 4378             ; 4380
RTN                  ; 4381
LD  2   128          ; 4382
LD  0   0            ; 4383
ST  2   128          ; 4384
RTN                  ; 4385
LDF 4382             ; 4386
RTN                  ; 4387
LD  2   129          ; 4388
RTN                  ; 4389
LDF 4388             ; 4390
RTN                  ; 4391
LD  2   129          ; 4392
LD  0   0            ; 4393
ST  2   129          ; 4394
RTN                  ; 4395
LDF 4392             ; 4396
RTN                  ; 4397
LD  2   130          ; 4398
RTN                  ; 4399
LDF 4398             ; 4400
RTN                  ; 4401
LD  2   130          ; 4402
LD  0   0            ; 4403
ST  2   130          ; 4404
RTN                  ; 4405
LDF 4402             ; 4406
RTN                  ; 4407
LD  2   131          ; 4408
RTN                  ; 4409
LDF 4408             ; 4410
RTN                  ; 4411
LD  2   131          ; 4412
LD  0   0            ; 4413
ST  2   131          ; 4414
RTN                  ; 4415
LDF 4412             ; 4416
RTN                  ; 4417
LD  2   132          ; 4418
RTN                  ; 4419
LDF 4418             ; 4420
RTN                  ; 4421
LD  2   132          ; 4422
LD  0   0            ; 4423
ST  2   132          ; 4424
RTN                  ; 4425
LDF 4422             ; 4426
RTN                  ; 4427
LD  2   133          ; 4428
RTN                  ; 4429
LDF 4428             ; 4430
RTN                  ; 4431
LD  2   133          ; 4432
LD  0   0            ; 4433
ST  2   133          ; 4434
RTN                  ; 4435
LDF 4432             ; 4436
RTN                  ; 4437
LD  2   134          ; 4438
RTN                  ; 4439
LDF 4438             ; 4440
RTN                  ; 4441
LD  2   134          ; 4442
LD  0   0            ; 4443
ST  2   134          ; 4444
RTN                  ; 4445
LDF 4442             ; 4446
RTN                  ; 4447
LD  2   135          ; 4448
RTN                  ; 4449
LDF 4448             ; 4450
RTN                  ; 4451
LD  2   135          ; 4452
LD  0   0            ; 4453
ST  2   135          ; 4454
RTN                  ; 4455
LDF 4452             ; 4456
RTN                  ; 4457
LD  2   136          ; 4458
RTN                  ; 4459
LDF 4458             ; 4460
RTN                  ; 4461
LD  2   136          ; 4462
LD  0   0            ; 4463
ST  2   136          ; 4464
RTN                  ; 4465
LDF 4462             ; 4466
RTN                  ; 4467
LD  2   137          ; 4468
RTN                  ; 4469
LDF 4468             ; 4470
RTN                  ; 4471
LD  2   137          ; 4472
LD  0   0            ; 4473
ST  2   137          ; 4474
RTN                  ; 4475
LDF 4472             ; 4476
RTN                  ; 4477
LD  2   138          ; 4478
RTN                  ; 4479
LDF 4478             ; 4480
RTN                  ; 4481
LD  2   138          ; 4482
LD  0   0            ; 4483
ST  2   138          ; 4484
RTN                  ; 4485
LDF 4482             ; 4486
RTN                  ; 4487
LD  2   139          ; 4488
RTN                  ; 4489
LDF 4488             ; 4490
RTN                  ; 4491
LD  2   139          ; 4492
LD  0   0            ; 4493
ST  2   139          ; 4494
RTN                  ; 4495
LDF 4492             ; 4496
RTN                  ; 4497
LD  2   140          ; 4498
RTN                  ; 4499
LDF 4498             ; 4500
RTN                  ; 4501
LD  2   140          ; 4502
LD  0   0            ; 4503
ST  2   140          ; 4504
RTN                  ; 4505
LDF 4502             ; 4506
RTN                  ; 4507
LD  2   141          ; 4508
RTN                  ; 4509
LDF 4508             ; 4510
RTN                  ; 4511
LD  2   141          ; 4512
LD  0   0            ; 4513
ST  2   141          ; 4514
RTN                  ; 4515
LDF 4512             ; 4516
RTN                  ; 4517
LD  2   142          ; 4518
RTN                  ; 4519
LDF 4518             ; 4520
RTN                  ; 4521
LD  2   142          ; 4522
LD  0   0            ; 4523
ST  2   142          ; 4524
RTN                  ; 4525
LDF 4522             ; 4526
RTN                  ; 4527
LD  2   143          ; 4528
RTN                  ; 4529
LDF 4528             ; 4530
RTN                  ; 4531
LD  2   143          ; 4532
LD  0   0            ; 4533
ST  2   143          ; 4534
RTN                  ; 4535
LDF 4532             ; 4536
RTN                  ; 4537
LD  2   144          ; 4538
RTN                  ; 4539
LDF 4538             ; 4540
RTN                  ; 4541
LD  2   144          ; 4542
LD  0   0            ; 4543
ST  2   144          ; 4544
RTN                  ; 4545
LDF 4542             ; 4546
RTN                  ; 4547
LD  2   145          ; 4548
RTN                  ; 4549
LDF 4548             ; 4550
RTN                  ; 4551
LD  2   145          ; 4552
LD  0   0            ; 4553
ST  2   145          ; 4554
RTN                  ; 4555
LDF 4552             ; 4556
RTN                  ; 4557
LD  2   146          ; 4558
RTN                  ; 4559
LDF 4558             ; 4560
RTN                  ; 4561
LD  2   146          ; 4562
LD  0   0            ; 4563
ST  2   146          ; 4564
RTN                  ; 4565
LDF 4562             ; 4566
RTN                  ; 4567
LD  2   147          ; 4568
RTN                  ; 4569
LDF 4568             ; 4570
RTN                  ; 4571
LD  2   147          ; 4572
LD  0   0            ; 4573
ST  2   147          ; 4574
RTN                  ; 4575
LDF 4572             ; 4576
RTN                  ; 4577
LD  2   148          ; 4578
RTN                  ; 4579
LDF 4578             ; 4580
RTN                  ; 4581
LD  2   148          ; 4582
LD  0   0            ; 4583
ST  2   148          ; 4584
RTN                  ; 4585
LDF 4582             ; 4586
RTN                  ; 4587
LD  2   149          ; 4588
RTN                  ; 4589
LDF 4588             ; 4590
RTN                  ; 4591
LD  2   149          ; 4592
LD  0   0            ; 4593
ST  2   149          ; 4594
RTN                  ; 4595
LDF 4592             ; 4596
RTN                  ; 4597
LD  2   150          ; 4598
RTN                  ; 4599
LDF 4598             ; 4600
RTN                  ; 4601
LD  2   150          ; 4602
LD  0   0            ; 4603
ST  2   150          ; 4604
RTN                  ; 4605
LDF 4602             ; 4606
RTN                  ; 4607
LD  2   151          ; 4608
RTN                  ; 4609
LDF 4608             ; 4610
RTN                  ; 4611
LD  2   151          ; 4612
LD  0   0            ; 4613
ST  2   151          ; 4614
RTN                  ; 4615
LDF 4612             ; 4616
RTN                  ; 4617
LD  2   152          ; 4618
RTN                  ; 4619
LDF 4618             ; 4620
RTN                  ; 4621
LD  2   152          ; 4622
LD  0   0            ; 4623
ST  2   152          ; 4624
RTN                  ; 4625
LDF 4622             ; 4626
RTN                  ; 4627
LD  2   153          ; 4628
RTN                  ; 4629
LDF 4628             ; 4630
RTN                  ; 4631
LD  2   153          ; 4632
LD  0   0            ; 4633
ST  2   153          ; 4634
RTN                  ; 4635
LDF 4632             ; 4636
RTN                  ; 4637
LD  2   154          ; 4638
RTN                  ; 4639
LDF 4638             ; 4640
RTN                  ; 4641
LD  2   154          ; 4642
LD  0   0            ; 4643
ST  2   154          ; 4644
RTN                  ; 4645
LDF 4642             ; 4646
RTN                  ; 4647
LD  2   155          ; 4648
RTN                  ; 4649
LDF 4648             ; 4650
RTN                  ; 4651
LD  2   155          ; 4652
LD  0   0            ; 4653
ST  2   155          ; 4654
RTN                  ; 4655
LDF 4652             ; 4656
RTN                  ; 4657
LD  2   156          ; 4658
RTN                  ; 4659
LDF 4658             ; 4660
RTN                  ; 4661
LD  2   156          ; 4662
LD  0   0            ; 4663
ST  2   156          ; 4664
RTN                  ; 4665
LDF 4662             ; 4666
RTN                  ; 4667
LD  2   157          ; 4668
RTN                  ; 4669
LDF 4668             ; 4670
RTN                  ; 4671
LD  2   157          ; 4672
LD  0   0            ; 4673
ST  2   157          ; 4674
RTN                  ; 4675
LDF 4672             ; 4676
RTN                  ; 4677
LD  2   158          ; 4678
RTN                  ; 4679
LDF 4678             ; 4680
RTN                  ; 4681
LD  2   158          ; 4682
LD  0   0            ; 4683
ST  2   158          ; 4684
RTN                  ; 4685
LDF 4682             ; 4686
RTN                  ; 4687
LD  2   159          ; 4688
RTN                  ; 4689
LDF 4688             ; 4690
RTN                  ; 4691
LD  2   159          ; 4692
LD  0   0            ; 4693
ST  2   159          ; 4694
RTN                  ; 4695
LDF 4692             ; 4696
RTN                  ; 4697
LD  2   160          ; 4698
RTN                  ; 4699
LDF 4698             ; 4700
RTN                  ; 4701
LD  2   160          ; 4702
LD  0   0            ; 4703
ST  2   160          ; 4704
RTN                  ; 4705
LDF 4702             ; 4706
RTN                  ; 4707
LD  2   161          ; 4708
RTN                  ; 4709
LDF 4708             ; 4710
RTN                  ; 4711
LD  2   161          ; 4712
LD  0   0            ; 4713
ST  2   161          ; 4714
RTN                  ; 4715
LDF 4712             ; 4716
RTN                  ; 4717
LD  2   162          ; 4718
RTN                  ; 4719
LDF 4718             ; 4720
RTN                  ; 4721
LD  2   162          ; 4722
LD  0   0            ; 4723
ST  2   162          ; 4724
RTN                  ; 4725
LDF 4722             ; 4726
RTN                  ; 4727
LD  2   163          ; 4728
RTN                  ; 4729
LDF 4728             ; 4730
RTN                  ; 4731
LD  2   163          ; 4732
LD  0   0            ; 4733
ST  2   163          ; 4734
RTN                  ; 4735
LDF 4732             ; 4736
RTN                  ; 4737
LD  2   164          ; 4738
RTN                  ; 4739
LDF 4738             ; 4740
RTN                  ; 4741
LD  2   164          ; 4742
LD  0   0            ; 4743
ST  2   164          ; 4744
RTN                  ; 4745
LDF 4742             ; 4746
RTN                  ; 4747
LD  2   165          ; 4748
RTN                  ; 4749
LDF 4748             ; 4750
RTN                  ; 4751
LD  2   165          ; 4752
LD  0   0            ; 4753
ST  2   165          ; 4754
RTN                  ; 4755
LDF 4752             ; 4756
RTN                  ; 4757
LD  2   166          ; 4758
RTN                  ; 4759
LDF 4758             ; 4760
RTN                  ; 4761
LD  2   166          ; 4762
LD  0   0            ; 4763
ST  2   166          ; 4764
RTN                  ; 4765
LDF 4762             ; 4766
RTN                  ; 4767
LD  2   167          ; 4768
RTN                  ; 4769
LDF 4768             ; 4770
RTN                  ; 4771
LD  2   167          ; 4772
LD  0   0            ; 4773
ST  2   167          ; 4774
RTN                  ; 4775
LDF 4772             ; 4776
RTN                  ; 4777
LD  2   168          ; 4778
RTN                  ; 4779
LDF 4778             ; 4780
RTN                  ; 4781
LD  2   168          ; 4782
LD  0   0            ; 4783
ST  2   168          ; 4784
RTN                  ; 4785
LDF 4782             ; 4786
RTN                  ; 4787
LD  2   169          ; 4788
RTN                  ; 4789
LDF 4788             ; 4790
RTN                  ; 4791
LD  2   169          ; 4792
LD  0   0            ; 4793
ST  2   169          ; 4794
RTN                  ; 4795
LDF 4792             ; 4796
RTN                  ; 4797
LD  2   170          ; 4798
RTN                  ; 4799
LDF 4798             ; 4800
RTN                  ; 4801
LD  2   170          ; 4802
LD  0   0            ; 4803
ST  2   170          ; 4804
RTN                  ; 4805
LDF 4802             ; 4806
RTN                  ; 4807
LD  2   171          ; 4808
RTN                  ; 4809
LDF 4808             ; 4810
RTN                  ; 4811
LD  2   171          ; 4812
LD  0   0            ; 4813
ST  2   171          ; 4814
RTN                  ; 4815
LDF 4812             ; 4816
RTN                  ; 4817
LD  2   172          ; 4818
RTN                  ; 4819
LDF 4818             ; 4820
RTN                  ; 4821
LD  2   172          ; 4822
LD  0   0            ; 4823
ST  2   172          ; 4824
RTN                  ; 4825
LDF 4822             ; 4826
RTN                  ; 4827
LD  2   173          ; 4828
RTN                  ; 4829
LDF 4828             ; 4830
RTN                  ; 4831
LD  2   173          ; 4832
LD  0   0            ; 4833
ST  2   173          ; 4834
RTN                  ; 4835
LDF 4832             ; 4836
RTN                  ; 4837
LD  2   174          ; 4838
RTN                  ; 4839
LDF 4838             ; 4840
RTN                  ; 4841
LD  2   174          ; 4842
LD  0   0            ; 4843
ST  2   174          ; 4844
RTN                  ; 4845
LDF 4842             ; 4846
RTN                  ; 4847
LD  2   175          ; 4848
RTN                  ; 4849
LDF 4848             ; 4850
RTN                  ; 4851
LD  2   175          ; 4852
LD  0   0            ; 4853
ST  2   175          ; 4854
RTN                  ; 4855
LDF 4852             ; 4856
RTN                  ; 4857
LD  2   176          ; 4858
RTN                  ; 4859
LDF 4858             ; 4860
RTN                  ; 4861
LD  2   176          ; 4862
LD  0   0            ; 4863
ST  2   176          ; 4864
RTN                  ; 4865
LDF 4862             ; 4866
RTN                  ; 4867
LD  2   177          ; 4868
RTN                  ; 4869
LDF 4868             ; 4870
RTN                  ; 4871
LD  2   177          ; 4872
LD  0   0            ; 4873
ST  2   177          ; 4874
RTN                  ; 4875
LDF 4872             ; 4876
RTN                  ; 4877
LD  2   178          ; 4878
RTN                  ; 4879
LDF 4878             ; 4880
RTN                  ; 4881
LD  2   178          ; 4882
LD  0   0            ; 4883
ST  2   178          ; 4884
RTN                  ; 4885
LDF 4882             ; 4886
RTN                  ; 4887
LD  2   179          ; 4888
RTN                  ; 4889
LDF 4888             ; 4890
RTN                  ; 4891
LD  2   179          ; 4892
LD  0   0            ; 4893
ST  2   179          ; 4894
RTN                  ; 4895
LDF 4892             ; 4896
RTN                  ; 4897
LD  2   180          ; 4898
RTN                  ; 4899
LDF 4898             ; 4900
RTN                  ; 4901
LD  2   180          ; 4902
LD  0   0            ; 4903
ST  2   180          ; 4904
RTN                  ; 4905
LDF 4902             ; 4906
RTN                  ; 4907
LD  2   181          ; 4908
RTN                  ; 4909
LDF 4908             ; 4910
RTN                  ; 4911
LD  2   181          ; 4912
LD  0   0            ; 4913
ST  2   181          ; 4914
RTN                  ; 4915
LDF 4912             ; 4916
RTN                  ; 4917
LD  2   182          ; 4918
RTN                  ; 4919
LDF 4918             ; 4920
RTN                  ; 4921
LD  2   182          ; 4922
LD  0   0            ; 4923
ST  2   182          ; 4924
RTN                  ; 4925
LDF 4922             ; 4926
RTN                  ; 4927
LD  2   183          ; 4928
RTN                  ; 4929
LDF 4928             ; 4930
RTN                  ; 4931
LD  2   183          ; 4932
LD  0   0            ; 4933
ST  2   183          ; 4934
RTN                  ; 4935
LDF 4932             ; 4936
RTN                  ; 4937
LD  2   184          ; 4938
RTN                  ; 4939
LDF 4938             ; 4940
RTN                  ; 4941
LD  2   184          ; 4942
LD  0   0            ; 4943
ST  2   184          ; 4944
RTN                  ; 4945
LDF 4942             ; 4946
RTN                  ; 4947
LD  2   185          ; 4948
RTN                  ; 4949
LDF 4948             ; 4950
RTN                  ; 4951
LD  2   185          ; 4952
LD  0   0            ; 4953
ST  2   185          ; 4954
RTN                  ; 4955
LDF 4952             ; 4956
RTN                  ; 4957
LD  2   186          ; 4958
RTN                  ; 4959
LDF 4958             ; 4960
RTN                  ; 4961
LD  2   186          ; 4962
LD  0   0            ; 4963
ST  2   186          ; 4964
RTN                  ; 4965
LDF 4962             ; 4966
RTN                  ; 4967
LD  2   187          ; 4968
RTN                  ; 4969
LDF 4968             ; 4970
RTN                  ; 4971
LD  2   187          ; 4972
LD  0   0            ; 4973
ST  2   187          ; 4974
RTN                  ; 4975
LDF 4972             ; 4976
RTN                  ; 4977
LD  2   188          ; 4978
RTN                  ; 4979
LDF 4978             ; 4980
RTN                  ; 4981
LD  2   188          ; 4982
LD  0   0            ; 4983
ST  2   188          ; 4984
RTN                  ; 4985
LDF 4982             ; 4986
RTN                  ; 4987
LD  2   189          ; 4988
RTN                  ; 4989
LDF 4988             ; 4990
RTN                  ; 4991
LD  2   189          ; 4992
LD  0   0            ; 4993
ST  2   189          ; 4994
RTN                  ; 4995
LDF 4992             ; 4996
RTN                  ; 4997
LD  2   190          ; 4998
RTN                  ; 4999
LDF 4998             ; 5000
RTN                  ; 5001
LD  2   190          ; 5002
LD  0   0            ; 5003
ST  2   190          ; 5004
RTN                  ; 5005
LDF 5002             ; 5006
RTN                  ; 5007
LD  2   191          ; 5008
RTN                  ; 5009
LDF 5008             ; 5010
RTN                  ; 5011
LD  2   191          ; 5012
LD  0   0            ; 5013
ST  2   191          ; 5014
RTN                  ; 5015
LDF 5012             ; 5016
RTN                  ; 5017
LD  2   192          ; 5018
RTN                  ; 5019
LDF 5018             ; 5020
RTN                  ; 5021
LD  2   192          ; 5022
LD  0   0            ; 5023
ST  2   192          ; 5024
RTN                  ; 5025
LDF 5022             ; 5026
RTN                  ; 5027
LD  2   193          ; 5028
RTN                  ; 5029
LDF 5028             ; 5030
RTN                  ; 5031
LD  2   193          ; 5032
LD  0   0            ; 5033
ST  2   193          ; 5034
RTN                  ; 5035
LDF 5032             ; 5036
RTN                  ; 5037
LD  2   194          ; 5038
RTN                  ; 5039
LDF 5038             ; 5040
RTN                  ; 5041
LD  2   194          ; 5042
LD  0   0            ; 5043
ST  2   194          ; 5044
RTN                  ; 5045
LDF 5042             ; 5046
RTN                  ; 5047
LD  2   195          ; 5048
RTN                  ; 5049
LDF 5048             ; 5050
RTN                  ; 5051
LD  2   195          ; 5052
LD  0   0            ; 5053
ST  2   195          ; 5054
RTN                  ; 5055
LDF 5052             ; 5056
RTN                  ; 5057
LD  2   196          ; 5058
RTN                  ; 5059
LDF 5058             ; 5060
RTN                  ; 5061
LD  2   196          ; 5062
LD  0   0            ; 5063
ST  2   196          ; 5064
RTN                  ; 5065
LDF 5062             ; 5066
RTN                  ; 5067
LD  2   197          ; 5068
RTN                  ; 5069
LDF 5068             ; 5070
RTN                  ; 5071
LD  2   197          ; 5072
LD  0   0            ; 5073
ST  2   197          ; 5074
RTN                  ; 5075
LDF 5072             ; 5076
RTN                  ; 5077
LD  2   198          ; 5078
RTN                  ; 5079
LDF 5078             ; 5080
RTN                  ; 5081
LD  2   198          ; 5082
LD  0   0            ; 5083
ST  2   198          ; 5084
RTN                  ; 5085
LDF 5082             ; 5086
RTN                  ; 5087
LD  2   199          ; 5088
RTN                  ; 5089
LDF 5088             ; 5090
RTN                  ; 5091
LD  2   199          ; 5092
LD  0   0            ; 5093
ST  2   199          ; 5094
RTN                  ; 5095
LDF 5092             ; 5096
RTN                  ; 5097
LD  2   200          ; 5098
RTN                  ; 5099
LDF 5098             ; 5100
RTN                  ; 5101
LD  2   200          ; 5102
LD  0   0            ; 5103
ST  2   200          ; 5104
RTN                  ; 5105
LDF 5102             ; 5106
RTN                  ; 5107
LD  2   201          ; 5108
RTN                  ; 5109
LDF 5108             ; 5110
RTN                  ; 5111
LD  2   201          ; 5112
LD  0   0            ; 5113
ST  2   201          ; 5114
RTN                  ; 5115
LDF 5112             ; 5116
RTN                  ; 5117
LD  2   202          ; 5118
RTN                  ; 5119
LDF 5118             ; 5120
RTN                  ; 5121
LD  2   202          ; 5122
LD  0   0            ; 5123
ST  2   202          ; 5124
RTN                  ; 5125
LDF 5122             ; 5126
RTN                  ; 5127
LD  2   203          ; 5128
RTN                  ; 5129
LDF 5128             ; 5130
RTN                  ; 5131
LD  2   203          ; 5132
LD  0   0            ; 5133
ST  2   203          ; 5134
RTN                  ; 5135
LDF 5132             ; 5136
RTN                  ; 5137
LD  2   204          ; 5138
RTN                  ; 5139
LDF 5138             ; 5140
RTN                  ; 5141
LD  2   204          ; 5142
LD  0   0            ; 5143
ST  2   204          ; 5144
RTN                  ; 5145
LDF 5142             ; 5146
RTN                  ; 5147
LD  2   205          ; 5148
RTN                  ; 5149
LDF 5148             ; 5150
RTN                  ; 5151
LD  2   205          ; 5152
LD  0   0            ; 5153
ST  2   205          ; 5154
RTN                  ; 5155
LDF 5152             ; 5156
RTN                  ; 5157
LD  2   206          ; 5158
RTN                  ; 5159
LDF 5158             ; 5160
RTN                  ; 5161
LD  2   206          ; 5162
LD  0   0            ; 5163
ST  2   206          ; 5164
RTN                  ; 5165
LDF 5162             ; 5166
RTN                  ; 5167
LD  2   207          ; 5168
RTN                  ; 5169
LDF 5168             ; 5170
RTN                  ; 5171
LD  2   207          ; 5172
LD  0   0            ; 5173
ST  2   207          ; 5174
RTN                  ; 5175
LDF 5172             ; 5176
RTN                  ; 5177
LD  2   208          ; 5178
RTN                  ; 5179
LDF 5178             ; 5180
RTN                  ; 5181
LD  2   208          ; 5182
LD  0   0            ; 5183
ST  2   208          ; 5184
RTN                  ; 5185
LDF 5182             ; 5186
RTN                  ; 5187
LD  2   209          ; 5188
RTN                  ; 5189
LDF 5188             ; 5190
RTN                  ; 5191
LD  2   209          ; 5192
LD  0   0            ; 5193
ST  2   209          ; 5194
RTN                  ; 5195
LDF 5192             ; 5196
RTN                  ; 5197
LD  2   210          ; 5198
RTN                  ; 5199
LDF 5198             ; 5200
RTN                  ; 5201
LD  2   210          ; 5202
LD  0   0            ; 5203
ST  2   210          ; 5204
RTN                  ; 5205
LDF 5202             ; 5206
RTN                  ; 5207
LD  2   211          ; 5208
RTN                  ; 5209
LDF 5208             ; 5210
RTN                  ; 5211
LD  2   211          ; 5212
LD  0   0            ; 5213
ST  2   211          ; 5214
RTN                  ; 5215
LDF 5212             ; 5216
RTN                  ; 5217
LD  2   212          ; 5218
RTN                  ; 5219
LDF 5218             ; 5220
RTN                  ; 5221
LD  2   212          ; 5222
LD  0   0            ; 5223
ST  2   212          ; 5224
RTN                  ; 5225
LDF 5222             ; 5226
RTN                  ; 5227
LD  2   213          ; 5228
RTN                  ; 5229
LDF 5228             ; 5230
RTN                  ; 5231
LD  2   213          ; 5232
LD  0   0            ; 5233
ST  2   213          ; 5234
RTN                  ; 5235
LDF 5232             ; 5236
RTN                  ; 5237
LD  2   214          ; 5238
RTN                  ; 5239
LDF 5238             ; 5240
RTN                  ; 5241
LD  2   214          ; 5242
LD  0   0            ; 5243
ST  2   214          ; 5244
RTN                  ; 5245
LDF 5242             ; 5246
RTN                  ; 5247
LD  2   215          ; 5248
RTN                  ; 5249
LDF 5248             ; 5250
RTN                  ; 5251
LD  2   215          ; 5252
LD  0   0            ; 5253
ST  2   215          ; 5254
RTN                  ; 5255
LDF 5252             ; 5256
RTN                  ; 5257
LD  2   216          ; 5258
RTN                  ; 5259
LDF 5258             ; 5260
RTN                  ; 5261
LD  2   216          ; 5262
LD  0   0            ; 5263
ST  2   216          ; 5264
RTN                  ; 5265
LDF 5262             ; 5266
RTN                  ; 5267
LD  2   217          ; 5268
RTN                  ; 5269
LDF 5268             ; 5270
RTN                  ; 5271
LD  2   217          ; 5272
LD  0   0            ; 5273
ST  2   217          ; 5274
RTN                  ; 5275
LDF 5272             ; 5276
RTN                  ; 5277
LD  2   218          ; 5278
RTN                  ; 5279
LDF 5278             ; 5280
RTN                  ; 5281
LD  2   218          ; 5282
LD  0   0            ; 5283
ST  2   218          ; 5284
RTN                  ; 5285
LDF 5282             ; 5286
RTN                  ; 5287
LD  2   219          ; 5288
RTN                  ; 5289
LDF 5288             ; 5290
RTN                  ; 5291
LD  2   219          ; 5292
LD  0   0            ; 5293
ST  2   219          ; 5294
RTN                  ; 5295
LDF 5292             ; 5296
RTN                  ; 5297
LD  2   220          ; 5298
RTN                  ; 5299
LDF 5298             ; 5300
RTN                  ; 5301
LD  2   220          ; 5302
LD  0   0            ; 5303
ST  2   220          ; 5304
RTN                  ; 5305
LDF 5302             ; 5306
RTN                  ; 5307
LD  2   221          ; 5308
RTN                  ; 5309
LDF 5308             ; 5310
RTN                  ; 5311
LD  2   221          ; 5312
LD  0   0            ; 5313
ST  2   221          ; 5314
RTN                  ; 5315
LDF 5312             ; 5316
RTN                  ; 5317
LD  2   222          ; 5318
RTN                  ; 5319
LDF 5318             ; 5320
RTN                  ; 5321
LD  2   222          ; 5322
LD  0   0            ; 5323
ST  2   222          ; 5324
RTN                  ; 5325
LDF 5322             ; 5326
RTN                  ; 5327
LD  2   223          ; 5328
RTN                  ; 5329
LDF 5328             ; 5330
RTN                  ; 5331
LD  2   223          ; 5332
LD  0   0            ; 5333
ST  2   223          ; 5334
RTN                  ; 5335
LDF 5332             ; 5336
RTN                  ; 5337
LD  2   224          ; 5338
RTN                  ; 5339
LDF 5338             ; 5340
RTN                  ; 5341
LD  2   224          ; 5342
LD  0   0            ; 5343
ST  2   224          ; 5344
RTN                  ; 5345
LDF 5342             ; 5346
RTN                  ; 5347
LD  2   225          ; 5348
RTN                  ; 5349
LDF 5348             ; 5350
RTN                  ; 5351
LD  2   225          ; 5352
LD  0   0            ; 5353
ST  2   225          ; 5354
RTN                  ; 5355
LDF 5352             ; 5356
RTN                  ; 5357
LD  2   226          ; 5358
RTN                  ; 5359
LDF 5358             ; 5360
RTN                  ; 5361
LD  2   226          ; 5362
LD  0   0            ; 5363
ST  2   226          ; 5364
RTN                  ; 5365
LDF 5362             ; 5366
RTN                  ; 5367
LD  2   227          ; 5368
RTN                  ; 5369
LDF 5368             ; 5370
RTN                  ; 5371
LD  2   227          ; 5372
LD  0   0            ; 5373
ST  2   227          ; 5374
RTN                  ; 5375
LDF 5372             ; 5376
RTN                  ; 5377
LD  2   228          ; 5378
RTN                  ; 5379
LDF 5378             ; 5380
RTN                  ; 5381
LD  2   228          ; 5382
LD  0   0            ; 5383
ST  2   228          ; 5384
RTN                  ; 5385
LDF 5382             ; 5386
RTN                  ; 5387
LD  2   229          ; 5388
RTN                  ; 5389
LDF 5388             ; 5390
RTN                  ; 5391
LD  2   229          ; 5392
LD  0   0            ; 5393
ST  2   229          ; 5394
RTN                  ; 5395
LDF 5392             ; 5396
RTN                  ; 5397
LD  2   230          ; 5398
RTN                  ; 5399
LDF 5398             ; 5400
RTN                  ; 5401
LD  2   230          ; 5402
LD  0   0            ; 5403
ST  2   230          ; 5404
RTN                  ; 5405
LDF 5402             ; 5406
RTN                  ; 5407
LD  2   231          ; 5408
RTN                  ; 5409
LDF 5408             ; 5410
RTN                  ; 5411
LD  2   231          ; 5412
LD  0   0            ; 5413
ST  2   231          ; 5414
RTN                  ; 5415
LDF 5412             ; 5416
RTN                  ; 5417
LD  2   232          ; 5418
RTN                  ; 5419
LDF 5418             ; 5420
RTN                  ; 5421
LD  2   232          ; 5422
LD  0   0            ; 5423
ST  2   232          ; 5424
RTN                  ; 5425
LDF 5422             ; 5426
RTN                  ; 5427
LD  2   233          ; 5428
RTN                  ; 5429
LDF 5428             ; 5430
RTN                  ; 5431
LD  2   233          ; 5432
LD  0   0            ; 5433
ST  2   233          ; 5434
RTN                  ; 5435
LDF 5432             ; 5436
RTN                  ; 5437
LD  2   234          ; 5438
RTN                  ; 5439
LDF 5438             ; 5440
RTN                  ; 5441
LD  2   234          ; 5442
LD  0   0            ; 5443
ST  2   234          ; 5444
RTN                  ; 5445
LDF 5442             ; 5446
RTN                  ; 5447
LD  2   235          ; 5448
RTN                  ; 5449
LDF 5448             ; 5450
RTN                  ; 5451
LD  2   235          ; 5452
LD  0   0            ; 5453
ST  2   235          ; 5454
RTN                  ; 5455
LDF 5452             ; 5456
RTN                  ; 5457
LD  2   236          ; 5458
RTN                  ; 5459
LDF 5458             ; 5460
RTN                  ; 5461
LD  2   236          ; 5462
LD  0   0            ; 5463
ST  2   236          ; 5464
RTN                  ; 5465
LDF 5462             ; 5466
RTN                  ; 5467
LD  2   237          ; 5468
RTN                  ; 5469
LDF 5468             ; 5470
RTN                  ; 5471
LD  2   237          ; 5472
LD  0   0            ; 5473
ST  2   237          ; 5474
RTN                  ; 5475
LDF 5472             ; 5476
RTN                  ; 5477
LD  2   238          ; 5478
RTN                  ; 5479
LDF 5478             ; 5480
RTN                  ; 5481
LD  2   238          ; 5482
LD  0   0            ; 5483
ST  2   238          ; 5484
RTN                  ; 5485
LDF 5482             ; 5486
RTN                  ; 5487
LD  2   239          ; 5488
RTN                  ; 5489
LDF 5488             ; 5490
RTN                  ; 5491
LD  2   239          ; 5492
LD  0   0            ; 5493
ST  2   239          ; 5494
RTN                  ; 5495
LDF 5492             ; 5496
RTN                  ; 5497
LD  2   240          ; 5498
RTN                  ; 5499
LDF 5498             ; 5500
RTN                  ; 5501
LD  2   240          ; 5502
LD  0   0            ; 5503
ST  2   240          ; 5504
RTN                  ; 5505
LDF 5502             ; 5506
RTN                  ; 5507
LD  2   241          ; 5508
RTN                  ; 5509
LDF 5508             ; 5510
RTN                  ; 5511
LD  2   241          ; 5512
LD  0   0            ; 5513
ST  2   241          ; 5514
RTN                  ; 5515
LDF 5512             ; 5516
RTN                  ; 5517
LD  2   242          ; 5518
RTN                  ; 5519
LDF 5518             ; 5520
RTN                  ; 5521
LD  2   242          ; 5522
LD  0   0            ; 5523
ST  2   242          ; 5524
RTN                  ; 5525
LDF 5522             ; 5526
RTN                  ; 5527
LD  2   243          ; 5528
RTN                  ; 5529
LDF 5528             ; 5530
RTN                  ; 5531
LD  2   243          ; 5532
LD  0   0            ; 5533
ST  2   243          ; 5534
RTN                  ; 5535
LDF 5532             ; 5536
RTN                  ; 5537
LD  2   244          ; 5538
RTN                  ; 5539
LDF 5538             ; 5540
RTN                  ; 5541
LD  2   244          ; 5542
LD  0   0            ; 5543
ST  2   244          ; 5544
RTN                  ; 5545
LDF 5542             ; 5546
RTN                  ; 5547
LD  2   245          ; 5548
RTN                  ; 5549
LDF 5548             ; 5550
RTN                  ; 5551
LD  2   245          ; 5552
LD  0   0            ; 5553
ST  2   245          ; 5554
RTN                  ; 5555
LDF 5552             ; 5556
RTN                  ; 5557
LD  2   246          ; 5558
RTN                  ; 5559
LDF 5558             ; 5560
RTN                  ; 5561
LD  2   246          ; 5562
LD  0   0            ; 5563
ST  2   246          ; 5564
RTN                  ; 5565
LDF 5562             ; 5566
RTN                  ; 5567
LD  2   247          ; 5568
RTN                  ; 5569
LDF 5568             ; 5570
RTN                  ; 5571
LD  2   247          ; 5572
LD  0   0            ; 5573
ST  2   247          ; 5574
RTN                  ; 5575
LDF 5572             ; 5576
RTN                  ; 5577
LD  2   248          ; 5578
RTN                  ; 5579
LDF 5578             ; 5580
RTN                  ; 5581
LD  2   248          ; 5582
LD  0   0            ; 5583
ST  2   248          ; 5584
RTN                  ; 5585
LDF 5582             ; 5586
RTN                  ; 5587
LD  2   249          ; 5588
RTN                  ; 5589
LDF 5588             ; 5590
RTN                  ; 5591
LD  2   249          ; 5592
LD  0   0            ; 5593
ST  2   249          ; 5594
RTN                  ; 5595
LDF 5592             ; 5596
RTN                  ; 5597
LD  2   250          ; 5598
RTN                  ; 5599
LDF 5598             ; 5600
RTN                  ; 5601
LD  2   250          ; 5602
LD  0   0            ; 5603
ST  2   250          ; 5604
RTN                  ; 5605
LDF 5602             ; 5606
RTN                  ; 5607
LD  2   251          ; 5608
RTN                  ; 5609
LDF 5608             ; 5610
RTN                  ; 5611
LD  2   251          ; 5612
LD  0   0            ; 5613
ST  2   251          ; 5614
RTN                  ; 5615
LDF 5612             ; 5616
RTN                  ; 5617
LD  2   252          ; 5618
RTN                  ; 5619
LDF 5618             ; 5620
RTN                  ; 5621
LD  2   252          ; 5622
LD  0   0            ; 5623
ST  2   252          ; 5624
RTN                  ; 5625
LDF 5622             ; 5626
RTN                  ; 5627
LD  2   253          ; 5628
RTN                  ; 5629
LDF 5628             ; 5630
RTN                  ; 5631
LD  2   253          ; 5632
LD  0   0            ; 5633
ST  2   253          ; 5634
RTN                  ; 5635
LDF 5632             ; 5636
RTN                  ; 5637
LD  2   254          ; 5638
RTN                  ; 5639
LDF 5638             ; 5640
RTN                  ; 5641
LD  2   254          ; 5642
LD  0   0            ; 5643
ST  2   254          ; 5644
RTN                  ; 5645
LDF 5642             ; 5646
RTN                  ; 5647
LD  2   255          ; 5648
RTN                  ; 5649
LDF 5648             ; 5650
RTN                  ; 5651
LD  2   255          ; 5652
LD  0   0            ; 5653
ST  2   255          ; 5654
RTN                  ; 5655
LDF 5652             ; 5656
RTN                  ; 5657
LDC 0               ; generated from native: sample_map ; 5658
LDC 0                ; 5659
LDC 0                ; 5660
LDC 0                ; 5661
LDC 0                ; 5662
LDC 0                ; 5663
LDC 0                ; 5664
LDC 0                ; 5665
LDC 0                ; 5666
LDC 0                ; 5667
LDC 0                ; 5668
LDC 0                ; 5669
LDC 0                ; 5670
LDC 0                ; 5671
LDC 0                ; 5672
LDC 0                ; 5673
LDC 0                ; 5674
LDC 0                ; 5675
LDC 0                ; 5676
LDC 0                ; 5677
LDC 0                ; 5678
LDC 0                ; 5679
LDC 0                ; 5680
LDC 0                ; 5681
CONS                 ; 5682
CONS                 ; 5683
CONS                 ; 5684
CONS                 ; 5685
CONS                 ; 5686
CONS                 ; 5687
CONS                 ; 5688
CONS                 ; 5689
CONS                 ; 5690
CONS                 ; 5691
CONS                 ; 5692
CONS                 ; 5693
CONS                 ; 5694
CONS                 ; 5695
CONS                 ; 5696
CONS                 ; 5697
CONS                 ; 5698
CONS                 ; 5699
CONS                 ; 5700
CONS                 ; 5701
CONS                 ; 5702
CONS                 ; 5703
CONS                 ; 5704
LDC 0                ; 5705
LDC 2                ; 5706
LDC 2                ; 5707
LDC 2                ; 5708
LDC 2                ; 5709
LDC 2                ; 5710
LDC 2                ; 5711
LDC 2                ; 5712
LDC 2                ; 5713
LDC 2                ; 5714
LDC 2                ; 5715
LDC 0                ; 5716
LDC 2                ; 5717
LDC 2                ; 5718
LDC 2                ; 5719
LDC 2                ; 5720
LDC 2                ; 5721
LDC 2                ; 5722
LDC 2                ; 5723
LDC 2                ; 5724
LDC 2                ; 5725
LDC 2                ; 5726
LDC 0                ; 5727
LDC 0                ; 5728
CONS                 ; 5729
CONS                 ; 5730
CONS                 ; 5731
CONS                 ; 5732
CONS                 ; 5733
CONS                 ; 5734
CONS                 ; 5735
CONS                 ; 5736
CONS                 ; 5737
CONS                 ; 5738
CONS                 ; 5739
CONS                 ; 5740
CONS                 ; 5741
CONS                 ; 5742
CONS                 ; 5743
CONS                 ; 5744
CONS                 ; 5745
CONS                 ; 5746
CONS                 ; 5747
CONS                 ; 5748
CONS                 ; 5749
CONS                 ; 5750
CONS                 ; 5751
LDC 0                ; 5752
LDC 2                ; 5753
LDC 0                ; 5754
LDC 0                ; 5755
LDC 0                ; 5756
LDC 2                ; 5757
LDC 0                ; 5758
LDC 0                ; 5759
LDC 0                ; 5760
LDC 0                ; 5761
LDC 2                ; 5762
LDC 0                ; 5763
LDC 2                ; 5764
LDC 0                ; 5765
LDC 0                ; 5766
LDC 0                ; 5767
LDC 0                ; 5768
LDC 2                ; 5769
LDC 0                ; 5770
LDC 0                ; 5771
LDC 0                ; 5772
LDC 2                ; 5773
LDC 0                ; 5774
LDC 0                ; 5775
CONS                 ; 5776
CONS                 ; 5777
CONS                 ; 5778
CONS                 ; 5779
CONS                 ; 5780
CONS                 ; 5781
CONS                 ; 5782
CONS                 ; 5783
CONS                 ; 5784
CONS                 ; 5785
CONS                 ; 5786
CONS                 ; 5787
CONS                 ; 5788
CONS                 ; 5789
CONS                 ; 5790
CONS                 ; 5791
CONS                 ; 5792
CONS                 ; 5793
CONS                 ; 5794
CONS                 ; 5795
CONS                 ; 5796
CONS                 ; 5797
CONS                 ; 5798
LDC 0                ; 5799
LDC 3                ; 5800
LDC 0                ; 5801
LDC 0                ; 5802
LDC 0                ; 5803
LDC 2                ; 5804
LDC 0                ; 5805
LDC 0                ; 5806
LDC 0                ; 5807
LDC 0                ; 5808
LDC 2                ; 5809
LDC 0                ; 5810
LDC 2                ; 5811
LDC 0                ; 5812
LDC 0                ; 5813
LDC 0                ; 5814
LDC 0                ; 5815
LDC 2                ; 5816
LDC 0                ; 5817
LDC 0                ; 5818
LDC 0                ; 5819
LDC 3                ; 5820
LDC 0                ; 5821
LDC 0                ; 5822
CONS                 ; 5823
CONS                 ; 5824
CONS                 ; 5825
CONS                 ; 5826
CONS                 ; 5827
CONS                 ; 5828
CONS                 ; 5829
CONS                 ; 5830
CONS                 ; 5831
CONS                 ; 5832
CONS                 ; 5833
CONS                 ; 5834
CONS                 ; 5835
CONS                 ; 5836
CONS                 ; 5837
CONS                 ; 5838
CONS                 ; 5839
CONS                 ; 5840
CONS                 ; 5841
CONS                 ; 5842
CONS                 ; 5843
CONS                 ; 5844
CONS                 ; 5845
LDC 0                ; 5846
LDC 2                ; 5847
LDC 2                ; 5848
LDC 2                ; 5849
LDC 2                ; 5850
LDC 2                ; 5851
LDC 2                ; 5852
LDC 2                ; 5853
LDC 2                ; 5854
LDC 2                ; 5855
LDC 2                ; 5856
LDC 2                ; 5857
LDC 2                ; 5858
LDC 2                ; 5859
LDC 2                ; 5860
LDC 2                ; 5861
LDC 2                ; 5862
LDC 2                ; 5863
LDC 2                ; 5864
LDC 2                ; 5865
LDC 2                ; 5866
LDC 2                ; 5867
LDC 0                ; 5868
LDC 0                ; 5869
CONS                 ; 5870
CONS                 ; 5871
CONS                 ; 5872
CONS                 ; 5873
CONS                 ; 5874
CONS                 ; 5875
CONS                 ; 5876
CONS                 ; 5877
CONS                 ; 5878
CONS                 ; 5879
CONS                 ; 5880
CONS                 ; 5881
CONS                 ; 5882
CONS                 ; 5883
CONS                 ; 5884
CONS                 ; 5885
CONS                 ; 5886
CONS                 ; 5887
CONS                 ; 5888
CONS                 ; 5889
CONS                 ; 5890
CONS                 ; 5891
CONS                 ; 5892
LDC 0                ; 5893
LDC 2                ; 5894
LDC 0                ; 5895
LDC 0                ; 5896
LDC 0                ; 5897
LDC 2                ; 5898
LDC 0                ; 5899
LDC 2                ; 5900
LDC 0                ; 5901
LDC 0                ; 5902
LDC 0                ; 5903
LDC 0                ; 5904
LDC 0                ; 5905
LDC 0                ; 5906
LDC 0                ; 5907
LDC 2                ; 5908
LDC 0                ; 5909
LDC 2                ; 5910
LDC 0                ; 5911
LDC 0                ; 5912
LDC 0                ; 5913
LDC 2                ; 5914
LDC 0                ; 5915
LDC 0                ; 5916
CONS                 ; 5917
CONS                 ; 5918
CONS                 ; 5919
CONS                 ; 5920
CONS                 ; 5921
CONS                 ; 5922
CONS                 ; 5923
CONS                 ; 5924
CONS                 ; 5925
CONS                 ; 5926
CONS                 ; 5927
CONS                 ; 5928
CONS                 ; 5929
CONS                 ; 5930
CONS                 ; 5931
CONS                 ; 5932
CONS                 ; 5933
CONS                 ; 5934
CONS                 ; 5935
CONS                 ; 5936
CONS                 ; 5937
CONS                 ; 5938
CONS                 ; 5939
LDC 0                ; 5940
LDC 2                ; 5941
LDC 2                ; 5942
LDC 2                ; 5943
LDC 2                ; 5944
LDC 2                ; 5945
LDC 0                ; 5946
LDC 2                ; 5947
LDC 2                ; 5948
LDC 2                ; 5949
LDC 2                ; 5950
LDC 0                ; 5951
LDC 2                ; 5952
LDC 2                ; 5953
LDC 2                ; 5954
LDC 2                ; 5955
LDC 0                ; 5956
LDC 2                ; 5957
LDC 2                ; 5958
LDC 2                ; 5959
LDC 2                ; 5960
LDC 2                ; 5961
LDC 0                ; 5962
LDC 0                ; 5963
CONS                 ; 5964
CONS                 ; 5965
CONS                 ; 5966
CONS                 ; 5967
CONS                 ; 5968
CONS                 ; 5969
CONS                 ; 5970
CONS                 ; 5971
CONS                 ; 5972
CONS                 ; 5973
CONS                 ; 5974
CONS                 ; 5975
CONS                 ; 5976
CONS                 ; 5977
CONS                 ; 5978
CONS                 ; 5979
CONS                 ; 5980
CONS                 ; 5981
CONS                 ; 5982
CONS                 ; 5983
CONS                 ; 5984
CONS                 ; 5985
CONS                 ; 5986
LDC 0                ; 5987
LDC 0                ; 5988
LDC 0                ; 5989
LDC 0                ; 5990
LDC 0                ; 5991
LDC 2                ; 5992
LDC 0                ; 5993
LDC 0                ; 5994
LDC 0                ; 5995
LDC 0                ; 5996
LDC 1                ; 5997
LDC 0                ; 5998
LDC 1                ; 5999
LDC 0                ; 6000
LDC 0                ; 6001
LDC 0                ; 6002
LDC 0                ; 6003
LDC 2                ; 6004
LDC 0                ; 6005
LDC 0                ; 6006
LDC 0                ; 6007
LDC 0                ; 6008
LDC 0                ; 6009
LDC 0                ; 6010
CONS                 ; 6011
CONS                 ; 6012
CONS                 ; 6013
CONS                 ; 6014
CONS                 ; 6015
CONS                 ; 6016
CONS                 ; 6017
CONS                 ; 6018
CONS                 ; 6019
CONS                 ; 6020
CONS                 ; 6021
CONS                 ; 6022
CONS                 ; 6023
CONS                 ; 6024
CONS                 ; 6025
CONS                 ; 6026
CONS                 ; 6027
CONS                 ; 6028
CONS                 ; 6029
CONS                 ; 6030
CONS                 ; 6031
CONS                 ; 6032
CONS                 ; 6033
LDC 0                ; 6034
LDC 1                ; 6035
LDC 1                ; 6036
LDC 1                ; 6037
LDC 0                ; 6038
LDC 2                ; 6039
LDC 0                ; 6040
LDC 1                ; 6041
LDC 1                ; 6042
LDC 1                ; 6043
LDC 1                ; 6044
LDC 6                ; 6045
LDC 1                ; 6046
LDC 1                ; 6047
LDC 1                ; 6048
LDC 1                ; 6049
LDC 0                ; 6050
LDC 2                ; 6051
LDC 0                ; 6052
LDC 1                ; 6053
LDC 1                ; 6054
LDC 1                ; 6055
LDC 0                ; 6056
LDC 0                ; 6057
CONS                 ; 6058
CONS                 ; 6059
CONS                 ; 6060
CONS                 ; 6061
CONS                 ; 6062
CONS                 ; 6063
CONS                 ; 6064
CONS                 ; 6065
CONS                 ; 6066
CONS                 ; 6067
CONS                 ; 6068
CONS                 ; 6069
CONS                 ; 6070
CONS                 ; 6071
CONS                 ; 6072
CONS                 ; 6073
CONS                 ; 6074
CONS                 ; 6075
CONS                 ; 6076
CONS                 ; 6077
CONS                 ; 6078
CONS                 ; 6079
CONS                 ; 6080
LDC 0                ; 6081
LDC 0                ; 6082
LDC 0                ; 6083
LDC 0                ; 6084
LDC 0                ; 6085
LDC 2                ; 6086
LDC 0                ; 6087
LDC 1                ; 6088
LDC 0                ; 6089
LDC 0                ; 6090
LDC 0                ; 6091
LDC 1                ; 6092
LDC 0                ; 6093
LDC 0                ; 6094
LDC 0                ; 6095
LDC 1                ; 6096
LDC 0                ; 6097
LDC 2                ; 6098
LDC 0                ; 6099
LDC 0                ; 6100
LDC 0                ; 6101
LDC 0                ; 6102
LDC 0                ; 6103
LDC 0                ; 6104
CONS                 ; 6105
CONS                 ; 6106
CONS                 ; 6107
CONS                 ; 6108
CONS                 ; 6109
CONS                 ; 6110
CONS                 ; 6111
CONS                 ; 6112
CONS                 ; 6113
CONS                 ; 6114
CONS                 ; 6115
CONS                 ; 6116
CONS                 ; 6117
CONS                 ; 6118
CONS                 ; 6119
CONS                 ; 6120
CONS                 ; 6121
CONS                 ; 6122
CONS                 ; 6123
CONS                 ; 6124
CONS                 ; 6125
CONS                 ; 6126
CONS                 ; 6127
LDC 0                ; 6128
LDC 1                ; 6129
LDC 1                ; 6130
LDC 1                ; 6131
LDC 1                ; 6132
LDC 2                ; 6133
LDC 1                ; 6134
LDC 1                ; 6135
LDC 0                ; 6136
LDC 1                ; 6137
LDC 6                ; 6138
LDC 6                ; 6139
LDC 6                ; 6140
LDC 1                ; 6141
LDC 0                ; 6142
LDC 1                ; 6143
LDC 1                ; 6144
LDC 2                ; 6145
LDC 1                ; 6146
LDC 1                ; 6147
LDC 1                ; 6148
LDC 1                ; 6149
LDC 0                ; 6150
LDC 0                ; 6151
CONS                 ; 6152
CONS                 ; 6153
CONS                 ; 6154
CONS                 ; 6155
CONS                 ; 6156
CONS                 ; 6157
CONS                 ; 6158
CONS                 ; 6159
CONS                 ; 6160
CONS                 ; 6161
CONS                 ; 6162
CONS                 ; 6163
CONS                 ; 6164
CONS                 ; 6165
CONS                 ; 6166
CONS                 ; 6167
CONS                 ; 6168
CONS                 ; 6169
CONS                 ; 6170
CONS                 ; 6171
CONS                 ; 6172
CONS                 ; 6173
CONS                 ; 6174
LDC 0                ; 6175
LDC 0                ; 6176
LDC 0                ; 6177
LDC 0                ; 6178
LDC 0                ; 6179
LDC 2                ; 6180
LDC 0                ; 6181
LDC 1                ; 6182
LDC 0                ; 6183
LDC 0                ; 6184
LDC 0                ; 6185
LDC 0                ; 6186
LDC 0                ; 6187
LDC 0                ; 6188
LDC 0                ; 6189
LDC 1                ; 6190
LDC 0                ; 6191
LDC 2                ; 6192
LDC 0                ; 6193
LDC 0                ; 6194
LDC 0                ; 6195
LDC 0                ; 6196
LDC 0                ; 6197
LDC 0                ; 6198
CONS                 ; 6199
CONS                 ; 6200
CONS                 ; 6201
CONS                 ; 6202
CONS                 ; 6203
CONS                 ; 6204
CONS                 ; 6205
CONS                 ; 6206
CONS                 ; 6207
CONS                 ; 6208
CONS                 ; 6209
CONS                 ; 6210
CONS                 ; 6211
CONS                 ; 6212
CONS                 ; 6213
CONS                 ; 6214
CONS                 ; 6215
CONS                 ; 6216
CONS                 ; 6217
CONS                 ; 6218
CONS                 ; 6219
CONS                 ; 6220
CONS                 ; 6221
LDC 0                ; 6222
LDC 1                ; 6223
LDC 1                ; 6224
LDC 1                ; 6225
LDC 0                ; 6226
LDC 2                ; 6227
LDC 0                ; 6228
LDC 1                ; 6229
LDC 1                ; 6230
LDC 1                ; 6231
LDC 1                ; 6232
LDC 4                ; 6233
LDC 1                ; 6234
LDC 1                ; 6235
LDC 1                ; 6236
LDC 1                ; 6237
LDC 0                ; 6238
LDC 2                ; 6239
LDC 0                ; 6240
LDC 1                ; 6241
LDC 1                ; 6242
LDC 1                ; 6243
LDC 0                ; 6244
LDC 0                ; 6245
CONS                 ; 6246
CONS                 ; 6247
CONS                 ; 6248
CONS                 ; 6249
CONS                 ; 6250
CONS                 ; 6251
CONS                 ; 6252
CONS                 ; 6253
CONS                 ; 6254
CONS                 ; 6255
CONS                 ; 6256
CONS                 ; 6257
CONS                 ; 6258
CONS                 ; 6259
CONS                 ; 6260
CONS                 ; 6261
CONS                 ; 6262
CONS                 ; 6263
CONS                 ; 6264
CONS                 ; 6265
CONS                 ; 6266
CONS                 ; 6267
CONS                 ; 6268
LDC 0                ; 6269
LDC 0                ; 6270
LDC 0                ; 6271
LDC 0                ; 6272
LDC 0                ; 6273
LDC 2                ; 6274
LDC 0                ; 6275
LDC 1                ; 6276
LDC 0                ; 6277
LDC 0                ; 6278
LDC 0                ; 6279
LDC 0                ; 6280
LDC 0                ; 6281
LDC 0                ; 6282
LDC 0                ; 6283
LDC 1                ; 6284
LDC 0                ; 6285
LDC 2                ; 6286
LDC 0                ; 6287
LDC 0                ; 6288
LDC 0                ; 6289
LDC 0                ; 6290
LDC 0                ; 6291
LDC 0                ; 6292
CONS                 ; 6293
CONS                 ; 6294
CONS                 ; 6295
CONS                 ; 6296
CONS                 ; 6297
CONS                 ; 6298
CONS                 ; 6299
CONS                 ; 6300
CONS                 ; 6301
CONS                 ; 6302
CONS                 ; 6303
CONS                 ; 6304
CONS                 ; 6305
CONS                 ; 6306
CONS                 ; 6307
CONS                 ; 6308
CONS                 ; 6309
CONS                 ; 6310
CONS                 ; 6311
CONS                 ; 6312
CONS                 ; 6313
CONS                 ; 6314
CONS                 ; 6315
LDC 0                ; 6316
LDC 2                ; 6317
LDC 2                ; 6318
LDC 2                ; 6319
LDC 2                ; 6320
LDC 2                ; 6321
LDC 2                ; 6322
LDC 2                ; 6323
LDC 2                ; 6324
LDC 2                ; 6325
LDC 2                ; 6326
LDC 0                ; 6327
LDC 2                ; 6328
LDC 2                ; 6329
LDC 2                ; 6330
LDC 2                ; 6331
LDC 2                ; 6332
LDC 2                ; 6333
LDC 2                ; 6334
LDC 2                ; 6335
LDC 2                ; 6336
LDC 2                ; 6337
LDC 0                ; 6338
LDC 0                ; 6339
CONS                 ; 6340
CONS                 ; 6341
CONS                 ; 6342
CONS                 ; 6343
CONS                 ; 6344
CONS                 ; 6345
CONS                 ; 6346
CONS                 ; 6347
CONS                 ; 6348
CONS                 ; 6349
CONS                 ; 6350
CONS                 ; 6351
CONS                 ; 6352
CONS                 ; 6353
CONS                 ; 6354
CONS                 ; 6355
CONS                 ; 6356
CONS                 ; 6357
CONS                 ; 6358
CONS                 ; 6359
CONS                 ; 6360
CONS                 ; 6361
CONS                 ; 6362
LDC 0                ; 6363
LDC 2                ; 6364
LDC 0                ; 6365
LDC 0                ; 6366
LDC 0                ; 6367
LDC 2                ; 6368
LDC 0                ; 6369
LDC 0                ; 6370
LDC 0                ; 6371
LDC 0                ; 6372
LDC 2                ; 6373
LDC 0                ; 6374
LDC 2                ; 6375
LDC 0                ; 6376
LDC 0                ; 6377
LDC 0                ; 6378
LDC 0                ; 6379
LDC 2                ; 6380
LDC 0                ; 6381
LDC 0                ; 6382
LDC 0                ; 6383
LDC 2                ; 6384
LDC 0                ; 6385
LDC 0                ; 6386
CONS                 ; 6387
CONS                 ; 6388
CONS                 ; 6389
CONS                 ; 6390
CONS                 ; 6391
CONS                 ; 6392
CONS                 ; 6393
CONS                 ; 6394
CONS                 ; 6395
CONS                 ; 6396
CONS                 ; 6397
CONS                 ; 6398
CONS                 ; 6399
CONS                 ; 6400
CONS                 ; 6401
CONS                 ; 6402
CONS                 ; 6403
CONS                 ; 6404
CONS                 ; 6405
CONS                 ; 6406
CONS                 ; 6407
CONS                 ; 6408
CONS                 ; 6409
LDC 0                ; 6410
LDC 3                ; 6411
LDC 2                ; 6412
LDC 2                ; 6413
LDC 0                ; 6414
LDC 2                ; 6415
LDC 2                ; 6416
LDC 2                ; 6417
LDC 2                ; 6418
LDC 2                ; 6419
LDC 2                ; 6420
LDC 5                ; 6421
LDC 2                ; 6422
LDC 2                ; 6423
LDC 2                ; 6424
LDC 2                ; 6425
LDC 2                ; 6426
LDC 2                ; 6427
LDC 0                ; 6428
LDC 2                ; 6429
LDC 2                ; 6430
LDC 3                ; 6431
LDC 0                ; 6432
LDC 0                ; 6433
CONS                 ; 6434
CONS                 ; 6435
CONS                 ; 6436
CONS                 ; 6437
CONS                 ; 6438
CONS                 ; 6439
CONS                 ; 6440
CONS                 ; 6441
CONS                 ; 6442
CONS                 ; 6443
CONS                 ; 6444
CONS                 ; 6445
CONS                 ; 6446
CONS                 ; 6447
CONS                 ; 6448
CONS                 ; 6449
CONS                 ; 6450
CONS                 ; 6451
CONS                 ; 6452
CONS                 ; 6453
CONS                 ; 6454
CONS                 ; 6455
CONS                 ; 6456
LDC 0                ; 6457
LDC 0                ; 6458
LDC 0                ; 6459
LDC 2                ; 6460
LDC 0                ; 6461
LDC 2                ; 6462
LDC 0                ; 6463
LDC 2                ; 6464
LDC 0                ; 6465
LDC 0                ; 6466
LDC 0                ; 6467
LDC 0                ; 6468
LDC 0                ; 6469
LDC 0                ; 6470
LDC 0                ; 6471
LDC 2                ; 6472
LDC 0                ; 6473
LDC 2                ; 6474
LDC 0                ; 6475
LDC 2                ; 6476
LDC 0                ; 6477
LDC 0                ; 6478
LDC 0                ; 6479
LDC 0                ; 6480
CONS                 ; 6481
CONS                 ; 6482
CONS                 ; 6483
CONS                 ; 6484
CONS                 ; 6485
CONS                 ; 6486
CONS                 ; 6487
CONS                 ; 6488
CONS                 ; 6489
CONS                 ; 6490
CONS                 ; 6491
CONS                 ; 6492
CONS                 ; 6493
CONS                 ; 6494
CONS                 ; 6495
CONS                 ; 6496
CONS                 ; 6497
CONS                 ; 6498
CONS                 ; 6499
CONS                 ; 6500
CONS                 ; 6501
CONS                 ; 6502
CONS                 ; 6503
LDC 0                ; 6504
LDC 2                ; 6505
LDC 2                ; 6506
LDC 2                ; 6507
LDC 2                ; 6508
LDC 2                ; 6509
LDC 0                ; 6510
LDC 2                ; 6511
LDC 2                ; 6512
LDC 2                ; 6513
LDC 2                ; 6514
LDC 0                ; 6515
LDC 2                ; 6516
LDC 2                ; 6517
LDC 2                ; 6518
LDC 2                ; 6519
LDC 0                ; 6520
LDC 2                ; 6521
LDC 2                ; 6522
LDC 2                ; 6523
LDC 2                ; 6524
LDC 2                ; 6525
LDC 0                ; 6526
LDC 0                ; 6527
CONS                 ; 6528
CONS                 ; 6529
CONS                 ; 6530
CONS                 ; 6531
CONS                 ; 6532
CONS                 ; 6533
CONS                 ; 6534
CONS                 ; 6535
CONS                 ; 6536
CONS                 ; 6537
CONS                 ; 6538
CONS                 ; 6539
CONS                 ; 6540
CONS                 ; 6541
CONS                 ; 6542
CONS                 ; 6543
CONS                 ; 6544
CONS                 ; 6545
CONS                 ; 6546
CONS                 ; 6547
CONS                 ; 6548
CONS                 ; 6549
CONS                 ; 6550
LDC 0                ; 6551
LDC 2                ; 6552
LDC 0                ; 6553
LDC 0                ; 6554
LDC 0                ; 6555
LDC 0                ; 6556
LDC 0                ; 6557
LDC 0                ; 6558
LDC 0                ; 6559
LDC 0                ; 6560
LDC 2                ; 6561
LDC 0                ; 6562
LDC 2                ; 6563
LDC 0                ; 6564
LDC 0                ; 6565
LDC 0                ; 6566
LDC 0                ; 6567
LDC 0                ; 6568
LDC 0                ; 6569
LDC 0                ; 6570
LDC 0                ; 6571
LDC 2                ; 6572
LDC 0                ; 6573
LDC 0                ; 6574
CONS                 ; 6575
CONS                 ; 6576
CONS                 ; 6577
CONS                 ; 6578
CONS                 ; 6579
CONS                 ; 6580
CONS                 ; 6581
CONS                 ; 6582
CONS                 ; 6583
CONS                 ; 6584
CONS                 ; 6585
CONS                 ; 6586
CONS                 ; 6587
CONS                 ; 6588
CONS                 ; 6589
CONS                 ; 6590
CONS                 ; 6591
CONS                 ; 6592
CONS                 ; 6593
CONS                 ; 6594
CONS                 ; 6595
CONS                 ; 6596
CONS                 ; 6597
LDC 0                ; 6598
LDC 2                ; 6599
LDC 2                ; 6600
LDC 2                ; 6601
LDC 2                ; 6602
LDC 2                ; 6603
LDC 2                ; 6604
LDC 2                ; 6605
LDC 2                ; 6606
LDC 2                ; 6607
LDC 2                ; 6608
LDC 2                ; 6609
LDC 2                ; 6610
LDC 2                ; 6611
LDC 2                ; 6612
LDC 2                ; 6613
LDC 2                ; 6614
LDC 2                ; 6615
LDC 2                ; 6616
LDC 2                ; 6617
LDC 2                ; 6618
LDC 2                ; 6619
LDC 0                ; 6620
LDC 0                ; 6621
CONS                 ; 6622
CONS                 ; 6623
CONS                 ; 6624
CONS                 ; 6625
CONS                 ; 6626
CONS                 ; 6627
CONS                 ; 6628
CONS                 ; 6629
CONS                 ; 6630
CONS                 ; 6631
CONS                 ; 6632
CONS                 ; 6633
CONS                 ; 6634
CONS                 ; 6635
CONS                 ; 6636
CONS                 ; 6637
CONS                 ; 6638
CONS                 ; 6639
CONS                 ; 6640
CONS                 ; 6641
CONS                 ; 6642
CONS                 ; 6643
CONS                 ; 6644
LDC 0                ; 6645
LDC 0                ; 6646
LDC 0                ; 6647
LDC 0                ; 6648
LDC 0                ; 6649
LDC 0                ; 6650
LDC 0                ; 6651
LDC 0                ; 6652
LDC 0                ; 6653
LDC 0                ; 6654
LDC 0                ; 6655
LDC 0                ; 6656
LDC 0                ; 6657
LDC 0                ; 6658
LDC 0                ; 6659
LDC 0                ; 6660
LDC 0                ; 6661
LDC 0                ; 6662
LDC 0                ; 6663
LDC 0                ; 6664
LDC 0                ; 6665
LDC 0                ; 6666
LDC 0                ; 6667
LDC 0                ; 6668
CONS                 ; 6669
CONS                 ; 6670
CONS                 ; 6671
CONS                 ; 6672
CONS                 ; 6673
CONS                 ; 6674
CONS                 ; 6675
CONS                 ; 6676
CONS                 ; 6677
CONS                 ; 6678
CONS                 ; 6679
CONS                 ; 6680
CONS                 ; 6681
CONS                 ; 6682
CONS                 ; 6683
CONS                 ; 6684
CONS                 ; 6685
CONS                 ; 6686
CONS                 ; 6687
CONS                 ; 6688
CONS                 ; 6689
CONS                 ; 6690
CONS                 ; 6691
LDC 0                ; 6692
CONS                 ; 6693
CONS                 ; 6694
CONS                 ; 6695
CONS                 ; 6696
CONS                 ; 6697
CONS                 ; 6698
CONS                 ; 6699
CONS                 ; 6700
CONS                 ; 6701
CONS                 ; 6702
CONS                 ; 6703
CONS                 ; 6704
CONS                 ; 6705
CONS                 ; 6706
CONS                 ; 6707
CONS                 ; 6708
CONS                 ; 6709
CONS                 ; 6710
CONS                 ; 6711
CONS                 ; 6712
CONS                 ; 6713
CONS                 ; 6714
LDC 0                ; 6715
LDC 11               ; 6716
LDC 16               ; 6717
CONS                 ; 6718
LDC 2                ; 6719
LDC 3                ; 6720
LDC 0                ; 6721
CONS                 ; 6722
CONS                 ; 6723
CONS                 ; 6724
CONS                 ; 6725
LDC 0                ; 6726
LDC 11               ; 6727
LDC 8                ; 6728
CONS                 ; 6729
LDC 2                ; 6730
CONS                 ; 6731
CONS                 ; 6732
LDC 0                ; 6733
LDC 10               ; 6734
LDC 10               ; 6735
CONS                 ; 6736
LDC 2                ; 6737
CONS                 ; 6738
CONS                 ; 6739
LDC 0                ; 6740
LDC 11               ; 6741
LDC 10               ; 6742
CONS                 ; 6743
LDC 2                ; 6744
CONS                 ; 6745
CONS                 ; 6746
LDC 0                ; 6747
LDC 12               ; 6748
LDC 10               ; 6749
CONS                 ; 6750
LDC 2                ; 6751
CONS                 ; 6752
CONS                 ; 6753
LDC 0                ; 6754
CONS                 ; 6755
CONS                 ; 6756
CONS                 ; 6757
CONS                 ; 6758
LDC 0                ; 6759
CONS                 ; 6760
CONS                 ; 6761
CONS                 ; 6762
RTN                  ; 6763
LD     0 0          ;  <== entryFactual  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 6764
LD     0 1          ; var ghostSpecs ; 6765
LDC 0               ; local var space ; 6766
LDF    7272         ;  @createInitialState ; 6767
AP     3             ; 6768
ST     0 2           ; 6769
LD     0 2          ; var initialState ; 6770
CAR                 ; generateTupleAccess total=4 pos=0 ; 6771
CDR                 ; generateTupleAccess total=6 pos=5 ; 6772
CDR                  ; 6773
CDR                  ; 6774
CDR                  ; 6775
CDR                  ; 6776
LDC    1            ; just constant from code ; 6777
LDF    410          ;  @list_item ; 6778
AP     2             ; 6779
ST     0 3           ; 6780
LDC    0            ; just constant from code ; 6781
LDC    100          ; Named Const = VMExtras.GET_READER ; 6782
LDC    1            ; just constant from code ; 6783
LD     0 3          ; var newRowAccessor ; 6784
AP     2             ; 6785
AP     1             ; 6786
ST     0 4           ; 6787
LD     0 2          ; var initialState ; 6788
LDF    9698         ;  @lambda_1011 ; 6789
CONS                 ; 6790
RTN                  ; 6791
LDF    781          ;  <== test01  [] (as blk), ALSO: @array_256 ; 6792
AP     0             ; 6793
ST     0 0           ; 6794
LDC    100          ; Named Const = VMExtras.GET_READER ; 6795
LDC    22           ; just constant from code ; 6796
LD     0 0          ; var accessor ; 6797
AP     2             ; 6798
ST     0 1           ; 6799
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 6800
LDC    22           ; just constant from code ; 6801
LD     0 0          ; var accessor ; 6802
AP     2             ; 6803
ST     0 2           ; 6804
LDC    77           ; just constant from code ; 6805
LD     0 2          ; var writer101 ; 6806
AP     1             ; 6807
ST     0 3           ; 6808
LDC    0            ; just constant from code ; 6809
LD     0 1          ; var reader101 ; 6810
AP     1             ; 6811
ST     0 4           ; 6812
LDC    0            ; just constant from code ; 6813
RTN                  ; 6814
LD     0 0          ;  <== collectEdgePills  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 6815
CDR                 ; generateTupleAccess total=7 pos=3 ; 6816
CDR                  ; 6817
CDR                  ; 6818
CAR                  ; 6819
LDF    9730         ;  @lambda_1015 ; 6820
LDF    336          ;  @dropWhile ; 6821
AP     2             ; 6822
ST     0 3           ; 6823
LD     0 3          ; var pathRemaining ; 6824
LDF    9753         ;  @lambda_1016 ; 6825
LDF    524          ;  @filter ; 6826
AP     2             ; 6827
ST     0 4           ; 6828
LD     0 4          ; var rv ; 6829
RTN                  ; 6830
LD     0 0          ;  <== collectEdgeGhosts  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) ; 6831
CDR                 ; generateTupleAccess total=7 pos=2 ; 6832
CDR                  ; 6833
CAR                  ; 6834
LDF    9765         ;  @lambda_1017 ; 6835
LDF    336          ;  @dropWhile ; 6836
AP     2             ; 6837
ST     0 3           ; 6838
LD     0 3          ; var pathOnEdge ; 6839
LDF    9786         ;  @lambda_1018 ; 6840
LDF    524          ;  @filter ; 6841
AP     2             ; 6842
RTN                  ; 6843
LD     0 0          ;  <== collectAnyEdgePills  [ParsedEdge edge, ListCons<ListCons<Integer>> map] (as blk) ; 6844
CDR                 ; generateTupleAccess total=7 pos=3 ; 6845
CDR                  ; 6846
CDR                  ; 6847
CAR                  ; 6848
ST     0 2           ; 6849
LD     0 2          ; var edgeAccess ; 6850
LDF    9801         ;  @lambda_1019 ; 6851
LDF    524          ;  @filter ; 6852
AP     2             ; 6853
ST     0 3           ; 6854
LD     0 3          ; var rv ; 6855
RTN                  ; 6856
LD     0 0          ;  <== countAnyEdgePills  [ParsedEdge edge] (as blk) ; 6857
CDR                 ; generateTupleAccess total=7 pos=3 ; 6858
CDR                  ; 6859
CDR                  ; 6860
CAR                  ; 6861
ST     0 1           ; 6862
LD     0 1          ; var edgeAccess ; 6863
LDC    0            ; just constant from code ; 6864
LDF    9813         ;  @lambda_1020 ; 6865
LDF    373          ;  @fold0 ; 6866
AP     3             ; 6867
ST     0 2           ; 6868
LD     0 2          ; var rv ; 6869
RTN                  ; 6870
LD     0 0          ;  <== countMyEdgePills  [ParsedEdge edge, Point start] (as blk) ; 6871
CDR                 ; generateTupleAccess total=7 pos=3 ; 6872
CDR                  ; 6873
CDR                  ; 6874
CAR                  ; 6875
LDF    9827         ;  @lambda_1021 ; 6876
LDF    336          ;  @dropWhile ; 6877
AP     2             ; 6878
ST     0 2           ; 6879
LD     0 2          ; var pathRemaining ; 6880
LDC    0            ; just constant from code ; 6881
LDF    9850         ;  @lambda_1022 ; 6882
LDF    373          ;  @fold0 ; 6883
AP     3             ; 6884
ST     0 3           ; 6885
LD     0 3          ; var rv ; 6886
RTN                  ; 6887
LD     0 1          ;  <== performMove  [AIState aistate, WorldState worldState] (as blk) ; 6888
CDR                 ; generateTupleAccess total=4 pos=1 ; 6889
CAR                  ; 6890
CDR                 ; generateTupleAccess total=5 pos=1 ; 6891
CAR                  ; 6892
ST     0 2           ; 6893
LD     0 0          ; var aistate ; 6894
LD     0 2          ; var location ; 6895
LDF    7623         ;  @findEdgesForPoint ; 6896
AP     2             ; 6897
ST     0 3           ; 6898
LD     0 3          ; var edgesForPoint ; 6899
LD     0 0          ; var aistate ; 6900
LD     0 1          ; var worldState ; 6901
LDC 0               ; local var space ; 6902
LDC 0               ; local var space ; 6903
LDC 0               ; local var space ; 6904
LDC 0               ; local var space ; 6905
LDC 0               ; local var space ; 6906
LDF    7227         ;  @findBestDistantEdge ; 6907
AP     8             ; 6908
ST     0 7           ; 6909
LD     0 7          ; var startEdge ; 6910
CDR                 ; generateTupleAccess total=7 pos=2 ; 6911
CDR                  ; 6912
CAR                  ; 6913
LDF    9911         ;  @lambda_1028 ; 6914
LDF    336          ;  @dropWhile ; 6915
AP     2             ; 6916
ST     0 8           ; 6917
LD     0 8          ; var pathToWalk ; 6918
LDF    519          ;  @length ; 6919
AP     1             ; 6920
LDC    2            ; just constant from code ; 6921
CGTE                 ; 6922
SEL    6964 6980     ; 6923
LD     0 4          ; var retval ; 6924
CDR                 ; generateTupleAccess total=2 pos=1 ; 6925
LDC    3            ; Named Const = Direction.LEFT ; 6926
CEQ                  ; 6927
SEL    6985 6990    ; IF? 29 ; 6928
ST     0 9           ; 6929
LD     0 4          ; var retval ; 6930
CDR                 ; generateTupleAccess total=2 pos=1 ; 6931
LDC    0            ; Named Const = Direction.UP ; 6932
CEQ                  ; 6933
SEL    6996 7001    ; IF? 30 ; 6934
ST     0 10          ; 6935
LD     0 4          ; var retval ; 6936
CAR                 ; generateTupleAccess total=2 pos=0 ; 6937
ST     0 11          ; 6938
LD     0 11         ; var a ; 6939
CAR                 ; generateTupleAccess total=4 pos=0 ; 6940
CDR                 ; generateTupleAccess total=6 pos=5 ; 6941
CDR                  ; 6942
CDR                  ; 6943
CDR                  ; 6944
CDR                  ; 6945
LD     0 10         ; var ny ; 6946
LDF    410          ;  @list_item ; 6947
AP     2             ; 6948
ST     0 12          ; 6949
LDC    0            ; just constant from code ; 6950
LDC    100          ; Named Const = VMExtras.GET_READER ; 6951
LD     0 9          ; var nx ; 6952
LD     0 12         ; var newRowAccessor ; 6953
AP     2             ; 6954
AP     1             ; 6955
ST     0 13          ; 6956
LD     0 13         ; var oldValue ; 6957
LDC    2            ; Named Const = CT.PILL ; 6958
CEQ                  ; 6959
SEL    7007 7014    ; IF? 31 ; 6960
ST     0 13          ; 6961
LD     0 4          ; var retval ; 6962
RTN                  ; 6963
LD     0 8          ; branch@6964 ; 6964
CDR                  ; 6965
CAR                  ; 6966
ST     0 5           ; 6967
LD     0 5          ; var newLocation ; 6968
CAR                 ; generateTupleAccess total=2 pos=0 ; 6969
LD     0 2          ; var location ; 6970
CAR                 ; generateTupleAccess total=2 pos=0 ; 6971
CGT                  ; 6972
SEL    7016 7018    ; IF? 85 ; 6973
ST     0 6           ; 6974
LD     0 0          ; var aistate ; 6975
LD     0 6          ; var direction ; 6976
CONS                 ; 6977
ST     0 4           ; 6978
JOIN                 ; 6979
LD     0 0          ; branch@6980 ; 6980
LDC    0            ; Named Const = Direction.UP ; 6981
CONS                 ; 6982
ST     0 4           ; 6983
JOIN                 ; 6984
LD     0 2          ; THEN: 29 ; 6985
CAR                 ; generateTupleAccess total=2 pos=0 ; 6986
LDC    1            ; just constant from code ; 6987
SUB                  ; 6988
JOIN                 ; 6989
LD     0 4          ; ELSE: 29 ; 6990
CDR                 ; generateTupleAccess total=2 pos=1 ; 6991
LDC    1            ; Named Const = Direction.RIGHT ; 6992
CEQ                  ; 6993
SEL    7025 7030    ; IF? 86 ; 6994
JOIN                 ; 6995
LD     0 2          ; THEN: 30 ; 6996
CDR                 ; generateTupleAccess total=2 pos=1 ; 6997
LDC    1            ; just constant from code ; 6998
SUB                  ; 6999
JOIN                 ; 7000
LD     0 4          ; ELSE: 30 ; 7001
CDR                 ; generateTupleAccess total=2 pos=1 ; 7002
LDC    2            ; Named Const = Direction.DOWN ; 7003
CEQ                  ; 7004
SEL    7033 7038    ; IF? 87 ; 7005
JOIN                 ; 7006
LDC    1            ; THEN: 31 ; 7007
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 7008
LD     0 9          ; var nx ; 7009
LD     0 12         ; var newRowAccessor ; 7010
AP     2             ; 7011
AP     1             ; 7012
JOIN                 ; 7013
LD     0 13         ; ELSE: 31 ; 7014
JOIN                 ; 7015
LDC    1            ; THEN: 85 ; 7016
JOIN                 ; 7017
LD     0 2          ; ELSE: 85 ; 7018
CAR                 ; generateTupleAccess total=2 pos=0 ; 7019
LD     0 5          ; var newLocation ; 7020
CAR                 ; generateTupleAccess total=2 pos=0 ; 7021
CGT                  ; 7022
SEL    7041 7043    ; IF? 88 ; 7023
JOIN                 ; 7024
LD     0 2          ; THEN: 86 ; 7025
CAR                 ; generateTupleAccess total=2 pos=0 ; 7026
LDC    1            ; just constant from code ; 7027
ADD                  ; 7028
JOIN                 ; 7029
LD     0 2          ; ELSE: 86 ; 7030
CAR                 ; generateTupleAccess total=2 pos=0 ; 7031
JOIN                 ; 7032
LD     0 2          ; THEN: 87 ; 7033
CDR                 ; generateTupleAccess total=2 pos=1 ; 7034
LDC    1            ; just constant from code ; 7035
ADD                  ; 7036
JOIN                 ; 7037
LD     0 2          ; ELSE: 87 ; 7038
CDR                 ; generateTupleAccess total=2 pos=1 ; 7039
JOIN                 ; 7040
LDC    3            ; THEN: 88 ; 7041
JOIN                 ; 7042
LD     0 2          ; ELSE: 88 ; 7043
CDR                 ; generateTupleAccess total=2 pos=1 ; 7044
LD     0 5          ; var newLocation ; 7045
CDR                 ; generateTupleAccess total=2 pos=1 ; 7046
CGT                  ; 7047
SEL    7050 7052    ; IF? 89 ; 7048
JOIN                 ; 7049
LDC    0            ; THEN: 89 ; 7050
JOIN                 ; 7051
LDC    2            ; ELSE: 89 ; 7052
JOIN                 ; 7053
LD     0 2          ;  <== waveFromEdgeToNearestEdges  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 7054
LDF    402          ;  @queue_isempty ; 7055
AP     1             ; 7056
SEL    7060 7063     ; 7057
LD     0 6          ; var retval ; 7058
RTN                  ; 7059
LD     0 4          ; branch@7060 ; 7060
ST     0 6           ; 7061
JOIN                 ; 7062
LD     0 0          ; branch@7063 ; 7063
LD     0 1          ; var worldState ; 7064
LD     0 2          ; var edgeQueue ; 7065
LD     0 3          ; var visited ; 7066
LD     0 4          ; var acc ; 7067
LD     0 5          ; var edgesWithDotsSoFar ; 7068
LDC 0               ; local var space ; 7069
LDC 0               ; local var space ; 7070
LDC 0               ; local var space ; 7071
LDC 0               ; local var space ; 7072
LDC 0               ; local var space ; 7073
LDC 0               ; local var space ; 7074
LDC 0               ; local var space ; 7075
LDC 0               ; local var space ; 7076
LDC 0               ; local var space ; 7077
LDC 0               ; local var space ; 7078
LDF    7083         ;  @waveFromEdgeToNearestEdges0 ; 7079
AP     16            ; 7080
ST     0 6           ; 7081
JOIN                 ; 7082
LD     0 2          ;  <== waveFromEdgeToNearestEdges0  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, SortedMap<Integer> visited, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) ; 7083
LDC 0               ; local var space ; 7084
LDF    479          ;  @queue_dequeue ; 7085
AP     2             ; 7086
ST     0 7           ; 7087
LD     0 7          ; var reduced ; 7088
CAR                 ; generateTupleAccess total=2 pos=0 ; 7089
ST     0 8           ; 7090
LD     0 0          ; var aistate ; 7091
CAR                 ; generateTupleAccess total=4 pos=0 ; 7092
CDR                 ; generateTupleAccess total=6 pos=2 ; 7093
CDR                  ; 7094
CAR                  ; 7095
LD     0 8          ; var lookingEdge ; 7096
LDF    7192         ;  @findFollowingEdges ; 7097
AP     2             ; 7098
ST     0 9           ; 7099
LD     0 9          ; var following ; 7100
LDF    9941         ;  @lambda_1030 ; 7101
LDF    524          ;  @filter ; 7102
AP     2             ; 7103
ST     0 9           ; 7104
LD     0 9          ; var following ; 7105
LDF    9954         ;  @lambda_1031 ; 7106
LDF    524          ;  @filter ; 7107
AP     2             ; 7108
ST     0 10          ; 7109
LD     0 3          ; var visited ; 7110
LD     0 9          ; var following ; 7111
LDF    9971         ;  @lambda_1032 ; 7112
LDF    56           ;  @map ; 7113
AP     2             ; 7114
LDF    8388         ;  @sorted_map_assoc_all ; 7115
AP     2             ; 7116
ST     0 11          ; 7117
LD     0 11         ; var nvisited ; 7118
LD     0 9          ; var following ; 7119
LDF    9981         ;  @lambda_1033 ; 7120
LDF    56           ;  @map ; 7121
AP     2             ; 7122
LDF    8388         ;  @sorted_map_assoc_all ; 7123
AP     2             ; 7124
ST     0 11          ; 7125
LD     0 9          ; var following ; 7126
LDF    9991         ;  @lambda_1034 ; 7127
LDF    56           ;  @map ; 7128
AP     2             ; 7129
ST     0 12          ; 7130
LD     0 12         ; var newRoutes ; 7131
LD     0 7          ; var reduced ; 7132
CDR                 ; generateTupleAccess total=2 pos=1 ; 7133
LDF    9995         ;  @lambda_1035 ; 7134
LDF    373          ;  @fold0 ; 7135
AP     3             ; 7136
ST     0 13          ; 7137
LD     0 12         ; var newRoutes ; 7138
LD     0 4          ; var acc ; 7139
LDF    171          ;  @concat2_set ; 7140
AP     2             ; 7141
ST     0 14          ; 7142
LD     0 4          ; var acc ; 7143
ATOM                 ; 7144
LDC    1            ; for negation ; 7145
SUB                  ; 7146
SEL    7154 7174    ; IF? 32 ; 7147
ST     0 15          ; 7148
LD     0 15         ; var stopCondition ; 7149
SEL    7176 7178    ; IF? 33 ; 7150
ST     0 6           ; 7151
LD     0 6          ; var retval ; 7152
RTN                  ; 7153
LD     0 5          ; THEN: 32 ; 7154
LDC    3            ; just constant from code ; 7155
CGT                  ; 7156
LD     0 4          ; var acc ; 7157
LDF    519          ;  @length ; 7158
AP     1             ; 7159
LDC    15           ; just constant from code ; 7160
CGT                  ; 7161
MUL                  ; 7162
LD     0 14         ; var newAcc ; 7163
CAR                  ; 7164
LDF    519          ;  @length ; 7165
AP     1             ; 7166
LD     0 4          ; var acc ; 7167
CAR                  ; 7168
LDF    519          ;  @length ; 7169
AP     1             ; 7170
CGT                  ; 7171
MUL                  ; 7172
JOIN                 ; 7173
LDC    0            ; ELSE: 32 ; 7174
JOIN                 ; 7175
LD     0 4          ; THEN: 33 ; 7176
JOIN                 ; 7177
LD     0 0          ; ELSE: 33 ; 7178
LD     0 1          ; var worldState ; 7179
LD     0 13         ; var newqq ; 7180
LD     0 11         ; var nvisited ; 7181
LD     0 14         ; var newAcc ; 7182
LD     0 5          ; var edgesWithDotsSoFar ; 7183
LD     0 10         ; var withDots ; 7184
LDF    519          ;  @length ; 7185
AP     1             ; 7186
ADD                  ; 7187
LDC 0               ; local var space ; 7188
LDF    7054         ;  @waveFromEdgeToNearestEdges ; 7189
AP     7             ; 7190
JOIN                 ; 7191
LD     0 0          ;  <== findFollowingEdges  [ListCons<ParsedEdge> parsedEdges, ListCons<ParsedEdge> lookingEdge] (as blk) ; 7192
LDF    9932         ;  @lambda_1029 ; 7193
LDF    524          ;  @filter ; 7194
AP     2             ; 7195
RTN                  ; 7196
LD     0 0          ;  <== pointEquals  [Point a, Point b] (as blk) ; 7197
CAR                 ; generateTupleAccess total=2 pos=0 ; 7198
LD     0 1          ; var b ; 7199
CAR                 ; generateTupleAccess total=2 pos=0 ; 7200
CEQ                  ; 7201
LD     0 0          ; var a ; 7202
CDR                 ; generateTupleAccess total=2 pos=1 ; 7203
LD     0 1          ; var b ; 7204
CDR                 ; generateTupleAccess total=2 pos=1 ; 7205
CEQ                  ; 7206
MUL                  ; 7207
SEL    7210 7212    ; IF? 34 ; 7208
RTN                  ; 7209
LDC    1            ; THEN: 34 ; 7210
JOIN                 ; 7211
LDC    0            ; ELSE: 34 ; 7212
JOIN                 ; 7213
LD     0 0          ;  <== endingPointOfEdgeRoute  [ListCons<ParsedEdge> lookingEdge] (as blk) ; 7214
CAR                  ; 7215
ST     0 1           ; 7216
LD     0 1          ; var lastEdge ; 7217
CDR                 ; generateTupleAccess total=7 pos=1 ; 7218
CAR                  ; 7219
RTN                  ; 7220
LD     0 0          ;  <== countRoutePills  [ListCons<ParsedEdge> route] (as blk) ; 7221
LDC    0            ; just constant from code ; 7222
LDF    10000        ;  @lambda_1036 ; 7223
LDF    373          ;  @fold0 ; 7224
AP     3             ; 7225
RTN                  ; 7226
LDF    390          ;  <== findBestDistantEdge  [ListCons<ParsedEdge> currentEdges, AIState aistate, WorldState worldState] (as blk), ALSO: @queue_new ; 7227
AP     0             ; 7228
ST     0 3           ; 7229
LD     0 0          ; var currentEdges ; 7230
LD     0 3          ; var q ; 7231
LDF    9867         ;  @lambda_1024 ; 7232
LDF    373          ;  @fold0 ; 7233
AP     3             ; 7234
ST     0 3           ; 7235
LD     0 1          ; var aistate ; 7236
LD     0 2          ; var worldState ; 7237
LD     0 3          ; var q ; 7238
LDC    0            ; NULL literal ; 7239
LDC    0            ; just constant from code ; 7240
CONS                 ; 7241
LD     0 0          ; var currentEdges ; 7242
LDF    9874         ;  @lambda_1025 ; 7243
LDF    56           ;  @map ; 7244
AP     2             ; 7245
LDF    8388         ;  @sorted_map_assoc_all ; 7246
AP     2             ; 7247
LDC    0            ; NULL literal ; 7248
LDC    0            ; just constant from code ; 7249
LDC 0               ; local var space ; 7250
LDF    7054         ;  @waveFromEdgeToNearestEdges ; 7251
AP     7             ; 7252
ST     0 4           ; 7253
LD     0 4          ; var dests ; 7254
LDF    9884         ;  @lambda_1026 ; 7255
LDF    56           ;  @map ; 7256
AP     2             ; 7257
ST     0 5           ; 7258
LD     0 5          ; var scores ; 7259
LDF    9908         ;  @lambda_1027 ; 7260
LDF    322          ;  @maximum_by ; 7261
AP     2             ; 7262
ST     0 6           ; 7263
LD     0 6          ; var winningRoute ; 7264
CAR                 ; generateTupleAccess total=2 pos=0 ; 7265
LDF    286          ;  @reverse ; 7266
AP     1             ; 7267
CAR                  ; 7268
ST     0 7           ; 7269
LD     0 7          ; var myStart ; 7270
RTN                  ; 7271
LD     0 0          ;  <== createInitialState  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) ; 7272
CDR                 ; generateTupleAccess total=4 pos=2 ; 7273
CDR                  ; 7274
CAR                  ; 7275
LDF    519          ;  @length ; 7276
AP     1             ; 7277
LDF    764          ;  @range_n ; 7278
AP     1             ; 7279
ST     0 2           ; 7280
LD     0 0          ; var ws ; 7281
CAR                 ; generateTupleAccess total=4 pos=0 ; 7282
LDF    7770         ;  @parseStaticMap ; 7283
AP     1             ; 7284
LDC    0            ; just constant from code ; 7285
LDC    0            ; just constant from code ; 7286
LDF    9690         ;  @lambda_1010 ; 7287
LD     0 0          ; var ws ; 7288
CDR                 ; generateTupleAccess total=4 pos=2 ; 7289
CDR                  ; 7290
CAR                  ; 7291
LD     0 1          ; var ghostSpecs ; 7292
LD     0 2          ; var ghostNumbers ; 7293
LDF    674          ;  @zip3_with ; 7294
AP     4             ; 7295
CONS                 ; 7296
CONS                 ; 7297
CONS                 ; 7298
RTN                  ; 7299
LD     0 0          ;  <== isWall  [int test] (as blk) ; 7300
LDC    0            ; Named Const = CT.WALL ; 7301
CEQ                  ; 7302
SEL    7305 7307    ; IF? 35 ; 7303
RTN                  ; 7304
LDC    1            ; THEN: 35 ; 7305
JOIN                 ; 7306
LDC    0            ; ELSE: 35 ; 7307
JOIN                 ; 7308
LDC    77           ;  <== isWalkable  [int test] (as blk) ; 7309
ST     0 1           ; 7310
LD     0 0          ; var test ; 7311
LDC    0            ; Named Const = CT.WALL ; 7312
CEQ                  ; 7313
SEL    7317 7320     ; 7314
LD     0 1          ; var retval ; 7315
RTN                  ; 7316
LDC    0            ; branch@7317 ; 7317
ST     0 1           ; 7318
JOIN                 ; 7319
LDC    1            ; branch@7320 ; 7320
ST     0 1           ; 7321
JOIN                 ; 7322
LD     0 0          ;  <== isWalkable2  [ListCons<ListCons<Integer>> map, Point p] (as blk) ; 7323
LD     0 1          ; var p ; 7324
CDR                 ; generateTupleAccess total=2 pos=1 ; 7325
LD     0 1          ; var p ; 7326
CAR                 ; generateTupleAccess total=2 pos=0 ; 7327
LDF    7844         ;  @getMapItem ; 7328
AP     3             ; 7329
LDC 0               ; local var space ; 7330
LDF    7309         ;  @isWalkable ; 7331
AP     2             ; 7332
RTN                  ; 7333
LD     0 0          ;  <== isWalkable3  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 7334
LD     0 2          ; var y ; 7335
LD     0 1          ; var x ; 7336
LDF    7844         ;  @getMapItem ; 7337
AP     3             ; 7338
LDC 0               ; local var space ; 7339
LDF    7309         ;  @isWalkable ; 7340
AP     2             ; 7341
RTN                  ; 7342
LD     0 0          ;  <== isJunction  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) ; 7343
LD     0 2          ; var y ; 7344
LDC    1            ; just constant from code ; 7345
SUB                  ; 7346
LD     0 1          ; var x ; 7347
LDF    7844         ;  @getMapItem ; 7348
AP     3             ; 7349
LDC 0               ; local var space ; 7350
LDF    7309         ;  @isWalkable ; 7351
AP     2             ; 7352
ST     0 3           ; 7353
LD     0 0          ; var map ; 7354
LD     0 2          ; var y ; 7355
LDC    1            ; just constant from code ; 7356
ADD                  ; 7357
LD     0 1          ; var x ; 7358
LDF    7844         ;  @getMapItem ; 7359
AP     3             ; 7360
LDC 0               ; local var space ; 7361
LDF    7309         ;  @isWalkable ; 7362
AP     2             ; 7363
ST     0 4           ; 7364
LD     0 0          ; var map ; 7365
LD     0 2          ; var y ; 7366
LD     0 1          ; var x ; 7367
LDC    1            ; just constant from code ; 7368
SUB                  ; 7369
LDF    7844         ;  @getMapItem ; 7370
AP     3             ; 7371
LDC 0               ; local var space ; 7372
LDF    7309         ;  @isWalkable ; 7373
AP     2             ; 7374
ST     0 5           ; 7375
LD     0 0          ; var map ; 7376
LD     0 2          ; var y ; 7377
LD     0 1          ; var x ; 7378
LDC    1            ; just constant from code ; 7379
ADD                  ; 7380
LDF    7844         ;  @getMapItem ; 7381
AP     3             ; 7382
LDC 0               ; local var space ; 7383
LDF    7309         ;  @isWalkable ; 7384
AP     2             ; 7385
ST     0 6           ; 7386
LD     0 3          ; var a1 ; 7387
LD     0 4          ; var a2 ; 7388
ADD                  ; 7389
LD     0 5          ; var a3 ; 7390
ADD                  ; 7391
LD     0 6          ; var a4 ; 7392
ADD                  ; 7393
LDC    2            ; just constant from code ; 7394
CGT                  ; 7395
SEL    7398 7400    ; IF? 37 ; 7396
RTN                  ; 7397
LDC    1            ; THEN: 37 ; 7398
JOIN                 ; 7399
LDC    0            ; ELSE: 37 ; 7400
JOIN                 ; 7401
LD     0 0          ;  <== findNeighbourJunctions  [ListCons<ListCons<Integer>> map, Point somePoint, SortedMap<Point> allJunctions, ListCons<Point> allJunctions2, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 7402
LDF    390          ;  @queue_new ; 7403
AP     0             ; 7404
LD     0 1          ; var somePoint ; 7405
LDC    0            ; NULL literal ; 7406
CONS                 ; 7407
LDF    394          ;  @queue_enqueue ; 7408
AP     2             ; 7409
LD     0 2          ; var allJunctions ; 7410
LD     0 3          ; var allJunctions2 ; 7411
LDC    0            ; NULL literal ; 7412
LDC    0            ; just constant from code ; 7413
CONS                 ; 7414
LD     0 1          ; var somePoint ; 7415
LDF    7471         ;  @getPointKey ; 7416
AP     1             ; 7417
LD     0 1          ; var somePoint ; 7418
LDF    8379         ;  @sorted_map_assoc ; 7419
AP     3             ; 7420
LDC    0            ; NULL literal ; 7421
LDC 0               ; local var space ; 7422
LDF    7439         ;  @waveFromPointToNearestJunction ; 7423
AP     7             ; 7424
ST     0 5           ; 7425
LD     0 5          ; var allNeighbourJunctionsPaths ; 7426
LDF    10008        ;  @lambda_1037 ; 7427
LDF    56           ;  @map ; 7428
AP     2             ; 7429
RTN                  ; 7430
LD     0 0          ;  <== makeEdgeAccess  [ListCons<Point> p, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) ; 7431
LDF    10032        ;  @lambda_1038 ; 7432
LDF    56           ;  @map ; 7433
AP     2             ; 7434
LD     0 0          ; var p ; 7435
LDF    711          ;  @zip ; 7436
AP     2             ; 7437
RTN                  ; 7438
LD     0 1          ;  <== waveFromPointToNearestJunction  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 7439
LDF    402          ;  @queue_isempty ; 7440
AP     1             ; 7441
SEL    7445 7448     ; 7442
LD     0 6          ; var retval ; 7443
RTN                  ; 7444
LD     0 5          ; branch@7445 ; 7445
ST     0 6           ; 7446
JOIN                 ; 7447
LD     0 0          ; branch@7448 ; 7448
LD     0 1          ; var pointQueue ; 7449
LD     0 2          ; var destinations ; 7450
LD     0 3          ; var destinations2 ; 7451
LD     0 4          ; var visited ; 7452
LD     0 5          ; var acc ; 7453
LDC 0               ; local var space ; 7454
LDC 0               ; local var space ; 7455
LDC 0               ; local var space ; 7456
LDC 0               ; local var space ; 7457
LDC 0               ; local var space ; 7458
LDC 0               ; local var space ; 7459
LDC 0               ; local var space ; 7460
LDC 0               ; local var space ; 7461
LDC 0               ; local var space ; 7462
LDC 0               ; local var space ; 7463
LDC 0               ; local var space ; 7464
LDC 0               ; local var space ; 7465
LDC 0               ; local var space ; 7466
LDF    7484         ;  @waveFromPointToNearestJunction0 ; 7467
AP     19            ; 7468
ST     0 6           ; 7469
JOIN                 ; 7470
LD     0 0          ;  <== getPointKey  [Point pt] (as blk) ; 7471
CAR                 ; generateTupleAccess total=2 pos=0 ; 7472
LDC    300          ; just constant from code ; 7473
MUL                  ; 7474
LD     0 0          ; var pt ; 7475
CDR                 ; generateTupleAccess total=2 pos=1 ; 7476
ADD                  ; 7477
RTN                  ; 7478
LD     0 0          ;  <== addPointKeyAll  [ListCons<Point> in] (as blk) ; 7479
LDF    9594         ;  @lambda_1005 ; 7480
LDF    56           ;  @map ; 7481
AP     2             ; 7482
RTN                  ; 7483
LD     0 1          ;  <== waveFromPointToNearestJunction0  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) ; 7484
LDC 0               ; local var space ; 7485
LDF    479          ;  @queue_dequeue ; 7486
AP     2             ; 7487
ST     0 7           ; 7488
LD     0 7          ; var emptier ; 7489
CAR                 ; generateTupleAccess total=2 pos=0 ; 7490
ST     0 8           ; 7491
LD     0 8          ; var thisRoute ; 7492
CAR                  ; 7493
ST     0 9           ; 7494
LD     0 9          ; var weAreHere ; 7495
CAR                 ; generateTupleAccess total=2 pos=0 ; 7496
LDC    1            ; just constant from code ; 7497
ADD                  ; 7498
LD     0 9          ; var weAreHere ; 7499
CDR                 ; generateTupleAccess total=2 pos=1 ; 7500
CONS                 ; 7501
LD     0 9          ; var weAreHere ; 7502
CAR                 ; generateTupleAccess total=2 pos=0 ; 7503
LDC    1            ; just constant from code ; 7504
SUB                  ; 7505
LD     0 9          ; var weAreHere ; 7506
CDR                 ; generateTupleAccess total=2 pos=1 ; 7507
CONS                 ; 7508
LD     0 9          ; var weAreHere ; 7509
CAR                 ; generateTupleAccess total=2 pos=0 ; 7510
LD     0 9          ; var weAreHere ; 7511
CDR                 ; generateTupleAccess total=2 pos=1 ; 7512
LDC    1            ; just constant from code ; 7513
ADD                  ; 7514
CONS                 ; 7515
LD     0 9          ; var weAreHere ; 7516
CAR                 ; generateTupleAccess total=2 pos=0 ; 7517
LD     0 9          ; var weAreHere ; 7518
CDR                 ; generateTupleAccess total=2 pos=1 ; 7519
LDC    1            ; just constant from code ; 7520
SUB                  ; 7521
CONS                 ; 7522
LDC    0            ; NULL literal ; 7523
CONS                 ; 7524
CONS                 ; 7525
CONS                 ; 7526
CONS                 ; 7527
LDF    7479         ;  @addPointKeyAll ; 7528
AP     1             ; 7529
ST     0 10          ; 7530
LD     0 10         ; var possibleDestinations ; 7531
LDF    10042        ;  @lambda_1039 ; 7532
LDF    524          ;  @filter ; 7533
AP     2             ; 7534
ST     0 11          ; 7535
LD     0 11         ; var exits ; 7536
LDF    10056        ;  @lambda_1040 ; 7537
LDF    524          ;  @filter ; 7538
AP     2             ; 7539
ST     0 12          ; 7540
LD     0 11         ; var exits ; 7541
LDF    10062        ;  @lambda_1041 ; 7542
LDF    524          ;  @filter ; 7543
AP     2             ; 7544
ST     0 13          ; 7545
LDC    0            ; NULL literal ; 7546
LDC    1            ; just constant from code ; 7547
CONS                 ; 7548
LD     0 12         ; var arrivedsList ; 7549
LDF    8388         ;  @sorted_map_assoc_all ; 7550
AP     2             ; 7551
ST     0 14          ; 7552
LD     0 11         ; var exits ; 7553
LDF    10067        ;  @lambda_1042 ; 7554
LDF    524          ;  @filter ; 7555
AP     2             ; 7556
ST     0 15          ; 7557
LD     0 15         ; var continueds ; 7558
LDF    10075        ;  @lambda_1043 ; 7559
LDF    56           ;  @map ; 7560
AP     2             ; 7561
ST     0 16          ; 7562
LD     0 16         ; var exitRoutes ; 7563
LD     0 7          ; var emptier ; 7564
CDR                 ; generateTupleAccess total=2 pos=1 ; 7565
LDF    10080        ;  @lambda_1044 ; 7566
LDF    373          ;  @fold0 ; 7567
AP     3             ; 7568
ST     0 17          ; 7569
LD     0 5          ; var acc ; 7570
LD     0 12         ; var arrivedsList ; 7571
LDF    10085        ;  @lambda_1045 ; 7572
LDF    56           ;  @map ; 7573
AP     2             ; 7574
LDF    171          ;  @concat2_set ; 7575
AP     2             ; 7576
ST     0 18          ; 7577
LD     0 12         ; var arrivedsList ; 7578
LDF    519          ;  @length ; 7579
AP     1             ; 7580
LD     0 13         ; var arrivedsList2 ; 7581
LDF    519          ;  @length ; 7582
AP     1             ; 7583
CEQ                  ; 7584
LDC    1            ; for negation ; 7585
SUB                  ; 7586
SEL    7603 7622     ; 7587
LD     0 0          ; var map ; 7588
LD     0 17         ; var filledQueue ; 7589
LD     0 2          ; var destinations ; 7590
LD     0 3          ; var destinations2 ; 7591
LD     0 4          ; var visited ; 7592
LD     0 11         ; var exits ; 7593
LDF    8388         ;  @sorted_map_assoc_all ; 7594
AP     2             ; 7595
LD     0 18         ; var newacc ; 7596
LDC 0               ; local var space ; 7597
LDF    7439         ;  @waveFromPointToNearestJunction ; 7598
AP     7             ; 7599
ST     0 6           ; 7600
LD     0 6          ; var retval ; 7601
RTN                  ; 7602
LDC    5000000      ; branch@7603 ; 7603
DBUG                 ; 7604
LD     0 2          ; var destinations ; 7605
DBUG                 ; 7606
LD     0 3          ; var destinations2 ; 7607
DBUG                 ; 7608
LD     0 12         ; var arrivedsList ; 7609
DBUG                 ; 7610
LD     0 13         ; var arrivedsList2 ; 7611
DBUG                 ; 7612
LD     0 11         ; var exits ; 7613
DBUG                 ; 7614
BRK                  ; 7615
LD     0 11         ; var exits ; 7616
LDF    10188        ;  @lambda_1054 ; 7617
LDF    524          ;  @filter ; 7618
AP     2             ; 7619
DBUG                 ; 7620
JOIN                 ; 7621
JOIN                ; branch@7622 ; 7622
LD     0 0          ;  <== findEdgesForPoint  [AIState state, Point pos] (as blk) ; 7623
CAR                 ; generateTupleAccess total=4 pos=0 ; 7624
CDR                 ; generateTupleAccess total=6 pos=2 ; 7625
CDR                  ; 7626
CAR                  ; 7627
LDF    9862         ;  @lambda_1023 ; 7628
LDF    524          ;  @filter ; 7629
AP     2             ; 7630
RTN                  ; 7631
LD     0 1          ;  <== pointInEdge  [Point pos, ParsedEdge e] (as blk) ; 7632
CDR                 ; generateTupleAccess total=7 pos=2 ; 7633
CDR                  ; 7634
CAR                  ; 7635
LDF    10090        ;  @lambda_1046 ; 7636
LDF    532          ;  @any ; 7637
AP     2             ; 7638
RTN                  ; 7639
LDC    4000001      ;  <== parseMap  [ListCons<ListCons<Integer>> m] (as blk) ; 7640
DBUG                 ; 7641
LD     0 0          ; var m ; 7642
LDF    9560         ;  @lambda_1000 ; 7643
LDF    56           ;  @map ; 7644
AP     2             ; 7645
ST     0 1           ; 7646
LDC    4000002      ; just constant from code ; 7647
DBUG                 ; 7648
LDF    9563         ;  @lambda_1001 ; 7649
LD     0 0          ; var m ; 7650
LD     0 1          ; var accessors ; 7651
LDF    647          ;  @zip_with ; 7652
AP     3             ; 7653
ST     0 2           ; 7654
LDC    4000003      ; just constant from code ; 7655
DBUG                 ; 7656
LD     0 2          ; var mapAccessors ; 7657
LDF    9567         ;  @lambda_1002 ; 7658
LDF    56           ;  @map ; 7659
AP     2             ; 7660
ST     0 3           ; 7661
LDC    4000004      ; just constant from code ; 7662
DBUG                 ; 7663
LD     0 0          ; var m ; 7664
LDC    0            ; just constant from code ; 7665
LDF    9574         ;  @lambda_1003 ; 7666
LDF    73           ;  @mapi ; 7667
AP     3             ; 7668
ST     0 4           ; 7669
LDC    4000005      ; just constant from code ; 7670
DBUG                 ; 7671
LD     0 4          ; var toConcat ; 7672
LDF    105          ;  @concat ; 7673
AP     1             ; 7674
ST     0 5           ; 7675
LD     0 5          ; var walkableList ; 7676
LDF    9582         ;  @lambda_1004 ; 7677
LDF    524          ;  @filter ; 7678
AP     2             ; 7679
ST     0 6           ; 7680
LDC    4000006      ; just constant from code ; 7681
DBUG                 ; 7682
LDC    0            ; NULL literal ; 7683
LDC    0            ; just constant from code ; 7684
CONS                 ; 7685
LD     0 5          ; var walkableList ; 7686
LDF    7479         ;  @addPointKeyAll ; 7687
AP     1             ; 7688
LDF    8388         ;  @sorted_map_assoc_all ; 7689
AP     2             ; 7690
ST     0 7           ; 7691
LDC    4000007      ; just constant from code ; 7692
DBUG                 ; 7693
LDC    0            ; NULL literal ; 7694
LDC    0            ; just constant from code ; 7695
CONS                 ; 7696
LD     0 6          ; var junctionsList ; 7697
LDF    7479         ;  @addPointKeyAll ; 7698
AP     1             ; 7699
LDF    8388         ;  @sorted_map_assoc_all ; 7700
AP     2             ; 7701
ST     0 8           ; 7702
LDC    4000008      ; just constant from code ; 7703
DBUG                 ; 7704
LD     0 6          ; var junctionsList ; 7705
LDF    9608         ;  @lambda_1007 ; 7706
LDF    56           ;  @map ; 7707
AP     2             ; 7708
LDF    105          ;  @concat ; 7709
AP     1             ; 7710
ST     0 9           ; 7711
LDC    4000009      ; just constant from code ; 7712
DBUG                 ; 7713
LD     0 9          ; var allParsedEdges ; 7714
LDC    0            ; just constant from code ; 7715
LDF    9617         ;  @lambda_1008 ; 7716
LDF    73           ;  @mapi ; 7717
AP     3             ; 7718
ST     0 10          ; 7719
LDC    4000010      ; just constant from code ; 7720
DBUG                 ; 7721
LD     0 10         ; var allParsedEdges2 ; 7722
LDC    0            ; just constant from code ; 7723
LDF    9646         ;  @lambda_1009 ; 7724
LDF    73           ;  @mapi ; 7725
AP     3             ; 7726
ST     0 11          ; 7727
LDC    4000011      ; just constant from code ; 7728
DBUG                 ; 7729
LD     0 7          ; var walkable ; 7730
LD     0 8          ; var junctions ; 7731
LD     0 11         ; var allParsedEdges3 ; 7732
LDC    0            ; NULL literal ; 7733
LDC    0            ; NULL literal ; 7734
LD     0 1          ; var accessors ; 7735
CONS                 ; 7736
CONS                 ; 7737
CONS                 ; 7738
CONS                 ; 7739
CONS                 ; 7740
RTN                  ; 7741
LD     0 2          ;  <== findEdge  [Point a, Point b, ListCons<ParsedEdge> edges] (as blk) ; 7742
LDF    10107        ;  @lambda_1047 ; 7743
LDF    524          ;  @filter ; 7744
AP     2             ; 7745
CAR                  ; 7746
RTN                  ; 7747
LD     0 0          ;  <== edgeNumber  [ParsedEdge edge] (as blk) ; 7748
CDR                 ; generateTupleAccess total=7 pos=5 ; 7749
CDR                  ; 7750
CDR                  ; 7751
CDR                  ; 7752
CDR                  ; 7753
CAR                  ; 7754
RTN                  ; 7755
LD     0 0          ;  <== my_cat_maybes  [ListCons<Maybe<Point>> maybeListCons] (as blk) ; 7756
LDC 0               ; local var space ; 7757
LDC 0               ; local var space ; 7758
LDF    94           ;  @cat_maybes ; 7759
AP     3             ; 7760
ST     0 1           ; 7761
LD     0 1          ; var rv ; 7762
RTN                  ; 7763
LD     0 0          ;  <== collectWalkableXY  [ListCons<Integer> row, Integer rowy] (as blk) ; 7764
LDC    0            ; just constant from code ; 7765
LDF    10120        ;  @lambda_1048 ; 7766
LDF    73           ;  @mapi ; 7767
AP     3             ; 7768
RTN                  ; 7769
LD     0 0          ;  <== parseStaticMap  [ListCons<ListCons<Integer>> map] (as blk) ; 7770
LDC 0               ; local var space ; 7771
LDC 0               ; local var space ; 7772
LDC 0               ; local var space ; 7773
LDC 0               ; local var space ; 7774
LDC 0               ; local var space ; 7775
LDC 0               ; local var space ; 7776
LDC 0               ; local var space ; 7777
LDC 0               ; local var space ; 7778
LDC 0               ; local var space ; 7779
LDC 0               ; local var space ; 7780
LDC 0               ; local var space ; 7781
LDF    7640         ;  @parseMap ; 7782
AP     12            ; 7783
RTN                  ; 7784
LDF    390          ;  <== test2  [] (as blk), ALSO: @queue_new ; 7785
AP     0             ; 7786
LDC    1            ; just constant from code ; 7787
LDF    394          ;  @queue_enqueue ; 7788
AP     2             ; 7789
LDC    2            ; just constant from code ; 7790
LDF    394          ;  @queue_enqueue ; 7791
AP     2             ; 7792
LDC    3            ; just constant from code ; 7793
LDF    394          ;  @queue_enqueue ; 7794
AP     2             ; 7795
ST     0 0           ; 7796
LD     0 0          ; var queue ; 7797
LDC 0               ; local var space ; 7798
LDF    479          ;  @queue_dequeue ; 7799
AP     2             ; 7800
ST     0 1           ; 7801
LD     0 1          ; var q1 ; 7802
CDR                 ; generateTupleAccess total=2 pos=1 ; 7803
LDC 0               ; local var space ; 7804
LDF    479          ;  @queue_dequeue ; 7805
AP     2             ; 7806
ST     0 1           ; 7807
LD     0 1          ; var q1 ; 7808
CDR                 ; generateTupleAccess total=2 pos=1 ; 7809
LDC 0               ; local var space ; 7810
LDF    479          ;  @queue_dequeue ; 7811
AP     2             ; 7812
ST     0 1           ; 7813
LDC    1            ; just constant from code ; 7814
RTN                  ; 7815
LDC    0            ;  <== test3  [] (as blk) ; 7816
LDC    0            ; just constant from code ; 7817
CONS                 ; 7818
ST     0 0           ; 7819
LD     0 0          ; var map ; 7820
LDC    30           ; just constant from code ; 7821
LDC    31           ; just constant from code ; 7822
LDF    8379         ;  @sorted_map_assoc ; 7823
AP     3             ; 7824
LDC    20           ; just constant from code ; 7825
LDC    21           ; just constant from code ; 7826
LDF    8379         ;  @sorted_map_assoc ; 7827
AP     3             ; 7828
LDC    10           ; just constant from code ; 7829
LDC    11           ; just constant from code ; 7830
LDF    8379         ;  @sorted_map_assoc ; 7831
AP     3             ; 7832
ST     0 1           ; 7833
LD     0 1          ; var new_map2 ; 7834
LDC    20           ; just constant from code ; 7835
LDC    33           ; just constant from code ; 7836
LDF    8379         ;  @sorted_map_assoc ; 7837
AP     3             ; 7838
LDC    20           ; just constant from code ; 7839
LDC    88           ; just constant from code ; 7840
LDF    8363         ;  @sorted_map_get ; 7841
AP     3             ; 7842
RTN                  ; 7843
LDC    0            ;  <== getMapItem  [ListCons<ListCons<Integer>> map, int y, int x] (as blk) ; 7844
LD     0 1          ; var y ; 7845
CGT                  ; 7846
LDC    0            ; just constant from code ; 7847
LD     0 2          ; var x ; 7848
CGT                  ; 7849
ADD                  ; 7850
SEL    7853 7855    ; IF? 36 ; 7851
RTN                  ; 7852
LDC    0            ; THEN: 36 ; 7853
JOIN                 ; 7854
LD     0 0          ; ELSE: 36 ; 7855
LD     0 1          ; var y ; 7856
LDC    0            ; just constant from code ; 7857
LDF    456          ;  @list_item_def ; 7858
AP     3             ; 7859
LD     0 2          ; var x ; 7860
LDC    0            ; just constant from code ; 7861
LDF    456          ;  @list_item_def ; 7862
AP     3             ; 7863
JOIN                 ; 7864
LDC    1            ;  <== sorted_node_new  [int key, T val, int lev, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 7865
LD     0 3          ; var lo ; 7866
ATOM                 ; 7867
LDC    1            ; for negation ; 7868
SUB                  ; 7869
SEL    7889 7892    ; IF? 40 ; 7870
ADD                  ; 7871
LD     0 4          ; var hi ; 7872
ATOM                 ; 7873
LDC    1            ; for negation ; 7874
SUB                  ; 7875
SEL    7894 7897    ; IF? 41 ; 7876
ADD                  ; 7877
LD     0 0          ; var key ; 7878
LD     0 1          ; var val ; 7879
LD     0 2          ; var lev ; 7880
LD     0 3          ; var lo ; 7881
LD     0 4          ; var hi ; 7882
CONS                 ; 7883
CONS                 ; 7884
CONS                 ; 7885
CONS                 ; 7886
CONS                 ; 7887
RTN                  ; 7888
LD     0 3          ; THEN: 40 ; 7889
CAR                 ; generateTupleAccess total=6 pos=0 ; 7890
JOIN                 ; 7891
LDC    0            ; ELSE: 40 ; 7892
JOIN                 ; 7893
LD     0 4          ; THEN: 41 ; 7894
CAR                 ; generateTupleAccess total=6 pos=0 ; 7895
JOIN                 ; 7896
LDC    0            ; ELSE: 41 ; 7897
JOIN                 ; 7898
LD     0 0          ;  <== sorted_node_with_lev  [SortedMapNode<T> node, int lev] (as blk) ; 7899
CDR                 ; generateTupleAccess total=6 pos=1 ; 7900
CAR                  ; 7901
LD     0 0          ; var node ; 7902
CDR                 ; generateTupleAccess total=6 pos=2 ; 7903
CDR                  ; 7904
CAR                  ; 7905
LD     0 1          ; var lev ; 7906
LD     0 0          ; var node ; 7907
CDR                 ; generateTupleAccess total=6 pos=4 ; 7908
CDR                  ; 7909
CDR                  ; 7910
CDR                  ; 7911
CAR                  ; 7912
LD     0 0          ; var node ; 7913
CDR                 ; generateTupleAccess total=6 pos=5 ; 7914
CDR                  ; 7915
CDR                  ; 7916
CDR                  ; 7917
CDR                  ; 7918
LDF    7865         ;  @sorted_node_new ; 7919
AP     5             ; 7920
RTN                  ; 7921
LD     0 0          ;  <== sorted_node_with_lo_hi  [SortedMapNode<T> node, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) ; 7922
CDR                 ; generateTupleAccess total=6 pos=1 ; 7923
CAR                  ; 7924
LD     0 0          ; var node ; 7925
CDR                 ; generateTupleAccess total=6 pos=2 ; 7926
CDR                  ; 7927
CAR                  ; 7928
LD     0 0          ; var node ; 7929
CDR                 ; generateTupleAccess total=6 pos=3 ; 7930
CDR                  ; 7931
CDR                  ; 7932
CAR                  ; 7933
LD     0 1          ; var lo ; 7934
LD     0 2          ; var hi ; 7935
LDF    7865         ;  @sorted_node_new ; 7936
AP     5             ; 7937
RTN                  ; 7938
LD     0 0          ;  <== sorted_node_with_lo  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 7939
LD     0 1          ; var lo ; 7940
LD     0 0          ; var node ; 7941
CDR                 ; generateTupleAccess total=6 pos=5 ; 7942
CDR                  ; 7943
CDR                  ; 7944
CDR                  ; 7945
CDR                  ; 7946
LDF    7922         ;  @sorted_node_with_lo_hi ; 7947
AP     3             ; 7948
RTN                  ; 7949
LD     0 0          ;  <== sorted_node_with_hi  [SortedMapNode<T> node, SortedMapNode<T> hi] (as blk) ; 7950
LD     0 0          ; var node ; 7951
CDR                 ; generateTupleAccess total=6 pos=4 ; 7952
CDR                  ; 7953
CDR                  ; 7954
CDR                  ; 7955
CAR                  ; 7956
LD     0 1          ; var hi ; 7957
LDF    7922         ;  @sorted_node_with_lo_hi ; 7958
AP     3             ; 7959
RTN                  ; 7960
LD     0 0          ;  <== sorted_node_has  [SortedMapNode<T> node, int key] (as blk) ; 7961
ATOM                 ; 7962
SEL    7965 7967    ; IF? 42 ; 7963
RTN                  ; 7964
LDC    0            ; THEN: 42 ; 7965
JOIN                 ; 7966
LD     0 1          ; ELSE: 42 ; 7967
LD     0 0          ; var node ; 7968
CDR                 ; generateTupleAccess total=6 pos=1 ; 7969
CAR                  ; 7970
CEQ                  ; 7971
SEL    7974 7976    ; IF? 90 ; 7972
JOIN                 ; 7973
LDC    1            ; THEN: 90 ; 7974
JOIN                 ; 7975
LD     0 0          ; ELSE: 90 ; 7976
CDR                 ; generateTupleAccess total=6 pos=1 ; 7977
CAR                  ; 7978
LD     0 1          ; var key ; 7979
CGT                  ; 7980
SEL    7986 7993    ; IF? 91 ; 7981
LD     0 1          ; var key ; 7982
LDF    7961         ;  @sorted_node_has ; 7983
AP     2             ; 7984
JOIN                 ; 7985
LD     0 0          ; THEN: 91 ; 7986
CDR                 ; generateTupleAccess total=6 pos=4 ; 7987
CDR                  ; 7988
CDR                  ; 7989
CDR                  ; 7990
CAR                  ; 7991
JOIN                 ; 7992
LD     0 0          ; ELSE: 91 ; 7993
CDR                 ; generateTupleAccess total=6 pos=5 ; 7994
CDR                  ; 7995
CDR                  ; 7996
CDR                  ; 7997
CDR                  ; 7998
JOIN                 ; 7999
LD     0 0          ;  <== sorted_node_get  [SortedMapNode<T> node, int key, T def] (as blk) ; 8000
ATOM                 ; 8001
SEL    8004 8006    ; IF? 43 ; 8002
RTN                  ; 8003
LD     0 2          ; THEN: 43 ; 8004
JOIN                 ; 8005
LD     0 1          ; ELSE: 43 ; 8006
LD     0 0          ; var node ; 8007
CDR                 ; generateTupleAccess total=6 pos=1 ; 8008
CAR                  ; 8009
CEQ                  ; 8010
SEL    8013 8018    ; IF? 92 ; 8011
JOIN                 ; 8012
LD     0 0          ; THEN: 92 ; 8013
CDR                 ; generateTupleAccess total=6 pos=2 ; 8014
CDR                  ; 8015
CAR                  ; 8016
JOIN                 ; 8017
LD     0 0          ; ELSE: 92 ; 8018
CDR                 ; generateTupleAccess total=6 pos=1 ; 8019
CAR                  ; 8020
LD     0 1          ; var key ; 8021
CGT                  ; 8022
SEL    8029 8036    ; IF? 93 ; 8023
LD     0 1          ; var key ; 8024
LD     0 2          ; var def ; 8025
LDF    8000         ;  @sorted_node_get ; 8026
AP     3             ; 8027
JOIN                 ; 8028
LD     0 0          ; THEN: 93 ; 8029
CDR                 ; generateTupleAccess total=6 pos=4 ; 8030
CDR                  ; 8031
CDR                  ; 8032
CDR                  ; 8033
CAR                  ; 8034
JOIN                 ; 8035
LD     0 0          ; ELSE: 93 ; 8036
CDR                 ; generateTupleAccess total=6 pos=5 ; 8037
CDR                  ; 8038
CDR                  ; 8039
CDR                  ; 8040
CDR                  ; 8041
JOIN                 ; 8042
LD     0 0          ;  <== sorted_node_put  [SortedMapNode<T> node, int key, T val] (as blk) ; 8043
ATOM                 ; 8044
SEL    8047 8055    ; IF? 38 ; 8045
RTN                  ; 8046
LD     0 1          ; THEN: 38 ; 8047
LD     0 2          ; var val ; 8048
LDC    0            ; just constant from code ; 8049
LDC    0            ; NULL literal ; 8050
LDC    0            ; NULL literal ; 8051
LDF    7865         ;  @sorted_node_new ; 8052
AP     5             ; 8053
JOIN                 ; 8054
LD     0 1          ; ELSE: 38 ; 8055
LD     0 0          ; var node ; 8056
CDR                 ; generateTupleAccess total=6 pos=1 ; 8057
CAR                  ; 8058
CEQ                  ; 8059
SEL    8062 8070    ; IF? 94 ; 8060
JOIN                 ; 8061
LD     0 2          ; THEN: 94 ; 8062
LD     0 0          ; var node ; 8063
CDR                 ; generateTupleAccess total=6 pos=2 ; 8064
CDR                  ; 8065
CAR                  ; 8066
CEQ                  ; 8067
SEL    8080 8082    ; IF? 95 ; 8068
JOIN                 ; 8069
LD     0 0          ; ELSE: 94 ; 8070
CDR                 ; generateTupleAccess total=6 pos=1 ; 8071
CAR                  ; 8072
LD     0 1          ; var key ; 8073
CGT                  ; 8074
SEL    8104 8119    ; IF? 96 ; 8075
LDC 0               ; local var space ; 8076
LDF    8191         ;  @sorted_node_split ; 8077
AP     2             ; 8078
JOIN                 ; 8079
LD     0 0          ; THEN: 95 ; 8080
JOIN                 ; 8081
LD     0 1          ; ELSE: 95 ; 8082
LD     0 2          ; var val ; 8083
LD     0 0          ; var node ; 8084
CDR                 ; generateTupleAccess total=6 pos=3 ; 8085
CDR                  ; 8086
CDR                  ; 8087
CAR                  ; 8088
LD     0 0          ; var node ; 8089
CDR                 ; generateTupleAccess total=6 pos=4 ; 8090
CDR                  ; 8091
CDR                  ; 8092
CDR                  ; 8093
CAR                  ; 8094
LD     0 0          ; var node ; 8095
CDR                 ; generateTupleAccess total=6 pos=5 ; 8096
CDR                  ; 8097
CDR                  ; 8098
CDR                  ; 8099
CDR                  ; 8100
LDF    7865         ;  @sorted_node_new ; 8101
AP     5             ; 8102
JOIN                 ; 8103
LD     0 0          ; THEN: 96 ; 8104
LD     0 0          ; var node ; 8105
CDR                 ; generateTupleAccess total=6 pos=4 ; 8106
CDR                  ; 8107
CDR                  ; 8108
CDR                  ; 8109
CAR                  ; 8110
LD     0 1          ; var key ; 8111
LD     0 2          ; var val ; 8112
LDF    8043         ;  @sorted_node_put ; 8113
AP     3             ; 8114
LDC 0               ; local var space ; 8115
LDF    8137         ;  @sorted_node_skew ; 8116
AP     3             ; 8117
JOIN                 ; 8118
LD     0 0          ; ELSE: 96 ; 8119
LD     0 0          ; var node ; 8120
CDR                 ; generateTupleAccess total=6 pos=5 ; 8121
CDR                  ; 8122
CDR                  ; 8123
CDR                  ; 8124
CDR                  ; 8125
LD     0 1          ; var key ; 8126
LD     0 2          ; var val ; 8127
LDF    8043         ;  @sorted_node_put ; 8128
AP     3             ; 8129
LDF    7950         ;  @sorted_node_with_hi ; 8130
AP     2             ; 8131
LDC    0            ; NULL literal ; 8132
LDC 0               ; local var space ; 8133
LDF    8137         ;  @sorted_node_skew ; 8134
AP     3             ; 8135
JOIN                 ; 8136
LD     0 1          ;  <== sorted_node_skew  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) ; 8137
ATOM                 ; 8138
LDC    1            ; for negation ; 8139
SUB                  ; 8140
SEL    8152 8154    ; IF? 44 ; 8141
ST     0 1           ; 8142
LD     0 0          ; var node ; 8143
LD     0 1          ; var lo ; 8144
LDF    7939         ;  @sorted_node_with_lo ; 8145
AP     2             ; 8146
ST     0 2           ; 8147
LD     0 1          ; var lo ; 8148
ATOM                 ; 8149
SEL    8161 8163    ; IF? 45 ; 8150
RTN                  ; 8151
LD     0 1          ; THEN: 44 ; 8152
JOIN                 ; 8153
LD     0 0          ; ELSE: 44 ; 8154
CDR                 ; generateTupleAccess total=6 pos=4 ; 8155
CDR                  ; 8156
CDR                  ; 8157
CDR                  ; 8158
CAR                  ; 8159
JOIN                 ; 8160
LD     0 2          ; THEN: 45 ; 8161
JOIN                 ; 8162
LD     0 0          ; ELSE: 45 ; 8163
CDR                 ; generateTupleAccess total=6 pos=3 ; 8164
CDR                  ; 8165
CDR                  ; 8166
CAR                  ; 8167
LD     0 1          ; var lo ; 8168
CDR                 ; generateTupleAccess total=6 pos=3 ; 8169
CDR                  ; 8170
CDR                  ; 8171
CAR                  ; 8172
CGT                  ; 8173
SEL    8176 8178    ; IF? 97 ; 8174
JOIN                 ; 8175
LD     0 2          ; THEN: 97 ; 8176
JOIN                 ; 8177
LD     0 1          ; ELSE: 97 ; 8178
LD     0 0          ; var node ; 8179
LD     0 1          ; var lo ; 8180
CDR                 ; generateTupleAccess total=6 pos=5 ; 8181
CDR                  ; 8182
CDR                  ; 8183
CDR                  ; 8184
CDR                  ; 8185
LDF    7939         ;  @sorted_node_with_lo ; 8186
AP     2             ; 8187
LDF    7950         ;  @sorted_node_with_hi ; 8188
AP     2             ; 8189
JOIN                 ; 8190
LD     0 0          ;  <== sorted_node_split  [SortedMapNode<T> node] (as blk) ; 8191
CDR                 ; generateTupleAccess total=6 pos=5 ; 8192
CDR                  ; 8193
CDR                  ; 8194
CDR                  ; 8195
CDR                  ; 8196
ST     0 1           ; 8197
LD     0 1          ; var hi ; 8198
ATOM                 ; 8199
SEL    8202 8204    ; IF? 46 ; 8200
RTN                  ; 8201
LD     0 0          ; THEN: 46 ; 8202
JOIN                 ; 8203
LD     0 1          ; ELSE: 46 ; 8204
CDR                 ; generateTupleAccess total=6 pos=5 ; 8205
CDR                  ; 8206
CDR                  ; 8207
CDR                  ; 8208
CDR                  ; 8209
ATOM                 ; 8210
SEL    8213 8215    ; IF? 98 ; 8211
JOIN                 ; 8212
LD     0 0          ; THEN: 98 ; 8213
JOIN                 ; 8214
LD     0 0          ; ELSE: 98 ; 8215
CDR                 ; generateTupleAccess total=6 pos=3 ; 8216
CDR                  ; 8217
CDR                  ; 8218
CAR                  ; 8219
LD     0 1          ; var hi ; 8220
CDR                 ; generateTupleAccess total=6 pos=5 ; 8221
CDR                  ; 8222
CDR                  ; 8223
CDR                  ; 8224
CDR                  ; 8225
CDR                 ; generateTupleAccess total=6 pos=3 ; 8226
CDR                  ; 8227
CDR                  ; 8228
CAR                  ; 8229
CGT                  ; 8230
SEL    8233 8235    ; IF? 99 ; 8231
JOIN                 ; 8232
LD     0 0          ; THEN: 99 ; 8233
JOIN                 ; 8234
LD     0 1          ; ELSE: 99 ; 8235
CDR                 ; generateTupleAccess total=6 pos=1 ; 8236
CAR                  ; 8237
LD     0 1          ; var hi ; 8238
CDR                 ; generateTupleAccess total=6 pos=2 ; 8239
CDR                  ; 8240
CAR                  ; 8241
LD     0 1          ; var hi ; 8242
CDR                 ; generateTupleAccess total=6 pos=3 ; 8243
CDR                  ; 8244
CDR                  ; 8245
CAR                  ; 8246
LDC    1            ; just constant from code ; 8247
ADD                  ; 8248
LD     0 0          ; var node ; 8249
LD     0 1          ; var hi ; 8250
CDR                 ; generateTupleAccess total=6 pos=4 ; 8251
CDR                  ; 8252
CDR                  ; 8253
CDR                  ; 8254
CAR                  ; 8255
LDF    7950         ;  @sorted_node_with_hi ; 8256
AP     2             ; 8257
LD     0 1          ; var hi ; 8258
CDR                 ; generateTupleAccess total=6 pos=5 ; 8259
CDR                  ; 8260
CDR                  ; 8261
CDR                  ; 8262
CDR                  ; 8263
LDF    7865         ;  @sorted_node_new ; 8264
AP     5             ; 8265
JOIN                 ; 8266
LD     0 0          ;  <== sorted_node_walk  [SortedMapNode<T> node, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) ; 8267
ATOM                 ; 8268
SEL    8271 8273    ; IF? 47 ; 8269
RTN                  ; 8270
LD     0 1          ; THEN: 47 ; 8271
JOIN                 ; 8272
LD     0 0          ; ELSE: 47 ; 8273
CDR                 ; generateTupleAccess total=6 pos=5 ; 8274
CDR                  ; 8275
CDR                  ; 8276
CDR                  ; 8277
CDR                  ; 8278
ATOM                 ; 8279
LDC    1            ; for negation ; 8280
SUB                  ; 8281
SEL    8284 8314    ; IF? 100 ; 8282
JOIN                 ; 8283
LD     0 0          ; THEN: 100 ; 8284
CDR                 ; generateTupleAccess total=6 pos=5 ; 8285
CDR                  ; 8286
CDR                  ; 8287
CDR                  ; 8288
CDR                  ; 8289
LD     0 0          ; var node ; 8290
CDR                 ; generateTupleAccess total=6 pos=4 ; 8291
CDR                  ; 8292
CDR                  ; 8293
CDR                  ; 8294
CAR                  ; 8295
LD     0 1          ; var acc ; 8296
LD     0 2          ; var fun ; 8297
LDF    8267         ;  @sorted_node_walk ; 8298
AP     3             ; 8299
LD     0 0          ; var node ; 8300
CDR                 ; generateTupleAccess total=6 pos=1 ; 8301
CAR                  ; 8302
LD     0 0          ; var node ; 8303
CDR                 ; generateTupleAccess total=6 pos=2 ; 8304
CDR                  ; 8305
CAR                  ; 8306
CONS                 ; 8307
LD     0 2          ; var fun ; 8308
AP     2             ; 8309
LD     0 2          ; var fun ; 8310
LDF    8267         ;  @sorted_node_walk ; 8311
AP     3             ; 8312
JOIN                 ; 8313
LD     0 0          ; ELSE: 100 ; 8314
CDR                 ; generateTupleAccess total=6 pos=4 ; 8315
CDR                  ; 8316
CDR                  ; 8317
CDR                  ; 8318
CAR                  ; 8319
LD     0 1          ; var acc ; 8320
LD     0 2          ; var fun ; 8321
LDF    8267         ;  @sorted_node_walk ; 8322
AP     3             ; 8323
LD     0 0          ; var node ; 8324
CDR                 ; generateTupleAccess total=6 pos=1 ; 8325
CAR                  ; 8326
LD     0 0          ; var node ; 8327
CDR                 ; generateTupleAccess total=6 pos=2 ; 8328
CDR                  ; 8329
CAR                  ; 8330
CONS                 ; 8331
LD     0 2          ; var fun ; 8332
AP     2             ; 8333
JOIN                 ; 8334
LD     0 0          ;  <== sorted_map_count  [SortedMap<T> m] (as blk) ; 8335
CAR                 ; generateTupleAccess total=2 pos=0 ; 8336
ATOM                 ; 8337
LDC    1            ; for negation ; 8338
SUB                  ; 8339
SEL    8342 8346    ; IF? 48 ; 8340
RTN                  ; 8341
LD     0 0          ; THEN: 48 ; 8342
CAR                 ; generateTupleAccess total=2 pos=0 ; 8343
CAR                 ; generateTupleAccess total=6 pos=0 ; 8344
JOIN                 ; 8345
LDC    0            ; ELSE: 48 ; 8346
JOIN                 ; 8347
LD     0 0          ;  <== sorted_map_contains  [SortedMap<T> m, int key] (as blk) ; 8348
CAR                 ; generateTupleAccess total=2 pos=0 ; 8349
ATOM                 ; 8350
LDC    1            ; for negation ; 8351
SUB                  ; 8352
SEL    8355 8361    ; IF? 49 ; 8353
RTN                  ; 8354
LD     0 0          ; THEN: 49 ; 8355
CAR                 ; generateTupleAccess total=2 pos=0 ; 8356
LD     0 1          ; var key ; 8357
LDF    7961         ;  @sorted_node_has ; 8358
AP     2             ; 8359
JOIN                 ; 8360
LDC    0            ; ELSE: 49 ; 8361
JOIN                 ; 8362
LD     0 0          ;  <== sorted_map_get  [SortedMap<T> m, int key, T def] (as blk) ; 8363
CAR                 ; generateTupleAccess total=2 pos=0 ; 8364
ATOM                 ; 8365
LDC    1            ; for negation ; 8366
SUB                  ; 8367
SEL    8370 8377    ; IF? 39 ; 8368
RTN                  ; 8369
LD     0 0          ; THEN: 39 ; 8370
CAR                 ; generateTupleAccess total=2 pos=0 ; 8371
LD     0 1          ; var key ; 8372
LD     0 2          ; var def ; 8373
LDF    8000         ;  @sorted_node_get ; 8374
AP     3             ; 8375
JOIN                 ; 8376
LD     0 2          ; ELSE: 39 ; 8377
JOIN                 ; 8378
LD     0 0          ;  <== sorted_map_assoc  [SortedMap<T> m, int key, T val] (as blk) ; 8379
CAR                 ; generateTupleAccess total=2 pos=0 ; 8380
LD     0 1          ; var key ; 8381
LD     0 2          ; var val ; 8382
LDF    8043         ;  @sorted_node_put ; 8383
AP     3             ; 8384
LDC    0            ; just constant from code ; 8385
CONS                 ; 8386
RTN                  ; 8387
LD     0 1          ;  <== sorted_map_assoc_all  [SortedMap<T> m, ListCons<Tuple<Integer,T>> l] (as blk) ; 8388
LD     0 0          ; var m ; 8389
LDF    9600         ;  @lambda_1006 ; 8390
LDF    373          ;  @fold0 ; 8391
AP     3             ; 8392
RTN                  ; 8393
LD     0 0          ;  <== sorted_map_walk  [SortedMap<T> map, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) ; 8394
CAR                 ; generateTupleAccess total=2 pos=0 ; 8395
ATOM                 ; 8396
SEL    8399 8401    ; IF? 50 ; 8397
RTN                  ; 8398
LD     0 1          ; THEN: 50 ; 8399
JOIN                 ; 8400
LD     0 0          ; ELSE: 50 ; 8401
CAR                 ; generateTupleAccess total=2 pos=0 ; 8402
LD     0 1          ; var acc ; 8403
LD     0 2          ; var fun ; 8404
LDF    8267         ;  @sorted_node_walk ; 8405
AP     3             ; 8406
JOIN                 ; 8407
LD     0 1          ;  <== ghcstate_read_val  [GHCState state, Cons<Integer,Integer> val_cons] (as blk) ; 8408
CAR                  ; 8409
ST     0 2           ; 8410
LD     0 1          ; var val_cons ; 8411
CDR                  ; 8412
ST     0 3           ; 8413
LD     0 2          ; var val_tag ; 8414
LDC    3            ; just constant from code ; 8415
CGT                  ; 8416
SEL    8423 8425     ; 8417
LD     0 2          ; var val_tag ; 8418
LDC    0            ; Named Const = Args.REGISTER ; 8419
CEQ                  ; 8420
SEL    8426 8434    ; IF? 51 ; 8421
RTN                  ; 8422
BRK                 ; branch@8423 ; 8423
JOIN                 ; 8424
JOIN                ; branch@8425 ; 8425
LD     0 0          ; THEN: 51 ; 8426
CDR                 ; generateTupleAccess total=3 pos=1 ; 8427
CAR                  ; 8428
LD     0 3          ; var val ; 8429
LDC    0            ; just constant from code ; 8430
LDF    8363         ;  @sorted_map_get ; 8431
AP     3             ; 8432
JOIN                 ; 8433
LD     0 2          ; ELSE: 51 ; 8434
LDC    1            ; Named Const = Args.REGISTER_INDIRECT ; 8435
CEQ                  ; 8436
SEL    8439 8453    ; IF? 101 ; 8437
JOIN                 ; 8438
LD     0 0          ; THEN: 101 ; 8439
CDR                 ; generateTupleAccess total=3 pos=2 ; 8440
CDR                  ; 8441
LD     0 0          ; var state ; 8442
CDR                 ; generateTupleAccess total=3 pos=1 ; 8443
CAR                  ; 8444
LD     0 3          ; var val ; 8445
LDC    0            ; just constant from code ; 8446
LDF    8363         ;  @sorted_map_get ; 8447
AP     3             ; 8448
LDC    0            ; just constant from code ; 8449
LDF    8363         ;  @sorted_map_get ; 8450
AP     3             ; 8451
JOIN                 ; 8452
LD     0 2          ; ELSE: 101 ; 8453
LDC    2            ; Named Const = Args.CONSTANT ; 8454
CEQ                  ; 8455
SEL    8458 8460    ; IF? 102 ; 8456
JOIN                 ; 8457
LD     0 3          ; THEN: 102 ; 8458
JOIN                 ; 8459
LD     0 0          ; ELSE: 102 ; 8460
CDR                 ; generateTupleAccess total=3 pos=2 ; 8461
CDR                  ; 8462
LD     0 3          ; var val ; 8463
LDC    0            ; just constant from code ; 8464
LDF    8363         ;  @sorted_map_get ; 8465
AP     3             ; 8466
JOIN                 ; 8467
LD     0 1          ;  <== ghcstate_write_val  [GHCState state, Cons arg_cons, Integer val] (as blk) ; 8468
CAR                  ; 8469
ST     0 3           ; 8470
LD     0 3          ; var arg_tag ; 8471
LDC    3            ; just constant from code ; 8472
CGT                  ; 8473
SEL    8484 8486     ; 8474
LD     0 3          ; var arg_tag ; 8475
LDC    2            ; just constant from code ; 8476
CEQ                  ; 8477
SEL    8487 8489     ; 8478
LD     0 3          ; var arg_tag ; 8479
LDC    0            ; just constant from code ; 8480
CEQ                  ; 8481
SEL    8490 8506    ; IF? 52 ; 8482
RTN                  ; 8483
BRK                 ; branch@8484 ; 8484
JOIN                 ; 8485
JOIN                ; branch@8486 ; 8486
BRK                 ; branch@8487 ; 8487
JOIN                 ; 8488
JOIN                ; branch@8489 ; 8489
LD     0 0          ; THEN: 52 ; 8490
CAR                 ; generateTupleAccess total=3 pos=0 ; 8491
LD     0 0          ; var state ; 8492
CDR                 ; generateTupleAccess total=3 pos=1 ; 8493
CAR                  ; 8494
LD     0 1          ; var arg_cons ; 8495
CDR                  ; 8496
LD     0 2          ; var val ; 8497
LDF    8379         ;  @sorted_map_assoc ; 8498
AP     3             ; 8499
LD     0 0          ; var state ; 8500
CDR                 ; generateTupleAccess total=3 pos=2 ; 8501
CDR                  ; 8502
CONS                 ; 8503
CONS                 ; 8504
JOIN                 ; 8505
LD     0 3          ; ELSE: 52 ; 8506
LDC    1            ; just constant from code ; 8507
CEQ                  ; 8508
SEL    8511 8533    ; IF? 103 ; 8509
JOIN                 ; 8510
LD     0 0          ; THEN: 103 ; 8511
CAR                 ; generateTupleAccess total=3 pos=0 ; 8512
LD     0 0          ; var state ; 8513
CDR                 ; generateTupleAccess total=3 pos=1 ; 8514
CAR                  ; 8515
LD     0 0          ; var state ; 8516
CDR                 ; generateTupleAccess total=3 pos=1 ; 8517
CAR                  ; 8518
LD     0 1          ; var arg_cons ; 8519
CDR                  ; 8520
LDC    0            ; just constant from code ; 8521
LDF    8363         ;  @sorted_map_get ; 8522
AP     3             ; 8523
LD     0 2          ; var val ; 8524
LDF    8379         ;  @sorted_map_assoc ; 8525
AP     3             ; 8526
LD     0 0          ; var state ; 8527
CDR                 ; generateTupleAccess total=3 pos=2 ; 8528
CDR                  ; 8529
CONS                 ; 8530
CONS                 ; 8531
JOIN                 ; 8532
LD     0 0          ; ELSE: 103 ; 8533
CAR                 ; generateTupleAccess total=3 pos=0 ; 8534
LD     0 0          ; var state ; 8535
CDR                 ; generateTupleAccess total=3 pos=1 ; 8536
CAR                  ; 8537
LD     0 0          ; var state ; 8538
CDR                 ; generateTupleAccess total=3 pos=2 ; 8539
CDR                  ; 8540
LD     0 1          ; var arg_cons ; 8541
CDR                  ; 8542
LD     0 2          ; var val ; 8543
LDF    8379         ;  @sorted_map_assoc ; 8544
AP     3             ; 8545
CONS                 ; 8546
CONS                 ; 8547
JOIN                 ; 8548
LD     0 0          ;  <== ghcstate_assoc  [GHCState state, Cons arg_cons, Cons val_cons] (as blk) ; 8549
LD     0 2          ; var val_cons ; 8550
LDC 0               ; local var space ; 8551
LDC 0               ; local var space ; 8552
LDF    8408         ;  @ghcstate_read_val ; 8553
AP     4             ; 8554
ST     0 3           ; 8555
LD     0 0          ; var state ; 8556
LD     0 1          ; var arg_cons ; 8557
LD     0 3          ; var val ; 8558
LDC 0               ; local var space ; 8559
LDF    8468         ;  @ghcstate_write_val ; 8560
AP     4             ; 8561
RTN                  ; 8562
LD     0 0          ;  <== processGhostInfoRequest  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer index, int requestType] (as blk) ; 8563
CDR                 ; generateTupleAccess total=4 pos=2 ; 8564
CDR                  ; 8565
CAR                  ; 8566
LD     0 3          ; var index ; 8567
LD     0 1          ; var state ; 8568
CAR                 ; generateTupleAccess total=3 pos=0 ; 8569
LDF    456          ;  @list_item_def ; 8570
AP     3             ; 8571
ST     0 5           ; 8572
LDC    4            ; just constant from code ; 8573
LD     0 4          ; var requestType ; 8574
CEQ                  ; 8575
SEL    8578 8600    ; IF? 53 ; 8576
RTN                  ; 8577
LD     0 5          ; THEN: 53 ; 8578
LD     0 1          ; var state ; 8579
CDR                 ; generateTupleAccess total=3 pos=1 ; 8580
CAR                  ; 8581
LDC    0            ; just constant from code ; 8582
LD     0 2          ; var ghostInfo ; 8583
CAR                 ; generateTupleAccess total=3 pos=0 ; 8584
CAR                 ; generateTupleAccess total=2 pos=0 ; 8585
LDF    8379         ;  @sorted_map_assoc ; 8586
AP     3             ; 8587
LDC    1            ; just constant from code ; 8588
LD     0 2          ; var ghostInfo ; 8589
CAR                 ; generateTupleAccess total=3 pos=0 ; 8590
CDR                 ; generateTupleAccess total=2 pos=1 ; 8591
LDF    8379         ;  @sorted_map_assoc ; 8592
AP     3             ; 8593
LD     0 1          ; var state ; 8594
CDR                 ; generateTupleAccess total=3 pos=2 ; 8595
CDR                  ; 8596
CONS                 ; 8597
CONS                 ; 8598
JOIN                 ; 8599
LDC    5            ; ELSE: 53 ; 8600
LD     0 4          ; var requestType ; 8601
CEQ                  ; 8602
SEL    8605 8629    ; IF? 104 ; 8603
JOIN                 ; 8604
LD     0 5          ; THEN: 104 ; 8605
LD     0 1          ; var state ; 8606
CDR                 ; generateTupleAccess total=3 pos=1 ; 8607
CAR                  ; 8608
LDC    0            ; just constant from code ; 8609
LD     0 5          ; var gs ; 8610
CDR                 ; generateTupleAccess total=3 pos=1 ; 8611
CAR                  ; 8612
CAR                 ; generateTupleAccess total=2 pos=0 ; 8613
LDF    8379         ;  @sorted_map_assoc ; 8614
AP     3             ; 8615
LDC    1            ; just constant from code ; 8616
LD     0 5          ; var gs ; 8617
CDR                 ; generateTupleAccess total=3 pos=1 ; 8618
CAR                  ; 8619
CDR                 ; generateTupleAccess total=2 pos=1 ; 8620
LDF    8379         ;  @sorted_map_assoc ; 8621
AP     3             ; 8622
LD     0 1          ; var state ; 8623
CDR                 ; generateTupleAccess total=3 pos=2 ; 8624
CDR                  ; 8625
CONS                 ; 8626
CONS                 ; 8627
JOIN                 ; 8628
LD     0 5          ; ELSE: 104 ; 8629
LD     0 1          ; var state ; 8630
CDR                 ; generateTupleAccess total=3 pos=1 ; 8631
CAR                  ; 8632
LDC    0            ; just constant from code ; 8633
LD     0 5          ; var gs ; 8634
CAR                 ; generateTupleAccess total=3 pos=0 ; 8635
LDF    8379         ;  @sorted_map_assoc ; 8636
AP     3             ; 8637
LDC    1            ; just constant from code ; 8638
LD     0 5          ; var gs ; 8639
CDR                 ; generateTupleAccess total=3 pos=2 ; 8640
CDR                  ; 8641
LDF    8379         ;  @sorted_map_assoc ; 8642
AP     3             ; 8643
LD     0 1          ; var state ; 8644
CDR                 ; generateTupleAccess total=3 pos=2 ; 8645
CDR                  ; 8646
CONS                 ; 8647
CONS                 ; 8648
JOIN                 ; 8649
LD     0 1          ;  <== processGhostInt  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer num, Cons arg] (as blk) ; 8650
CAR                 ; generateTupleAccess total=3 pos=0 ; 8651
ST     0 5           ; 8652
LD     0 2          ; var ghostInfo ; 8653
CDR                 ; generateTupleAccess total=3 pos=2 ; 8654
CDR                  ; 8655
ST     0 6           ; 8656
LDC    0            ; just constant from code ; 8657
LD     0 3          ; var num ; 8658
CEQ                  ; 8659
SEL    8662 8685    ; IF? 54 ; 8660
RTN                  ; 8661
LD     0 5          ; THEN: 54 ; 8662
CAR                 ; generateTupleAccess total=3 pos=0 ; 8663
LD     0 5          ; var gs ; 8664
CDR                 ; generateTupleAccess total=3 pos=1 ; 8665
CAR                  ; 8666
LD     0 1          ; var state ; 8667
CDR                 ; generateTupleAccess total=3 pos=1 ; 8668
CAR                  ; 8669
LDC    0            ; just constant from code ; 8670
LDC    0            ; just constant from code ; 8671
LDF    8363         ;  @sorted_map_get ; 8672
AP     3             ; 8673
CONS                 ; 8674
CONS                 ; 8675
LD     0 1          ; var state ; 8676
CDR                 ; generateTupleAccess total=3 pos=1 ; 8677
CAR                  ; 8678
LD     0 1          ; var state ; 8679
CDR                 ; generateTupleAccess total=3 pos=2 ; 8680
CDR                  ; 8681
CONS                 ; 8682
CONS                 ; 8683
JOIN                 ; 8684
LDC    1            ; ELSE: 54 ; 8685
LD     0 3          ; var num ; 8686
CEQ                  ; 8687
SEL    8690 8718    ; IF? 105 ; 8688
JOIN                 ; 8689
LD     0 5          ; THEN: 105 ; 8690
LD     0 1          ; var state ; 8691
CDR                 ; generateTupleAccess total=3 pos=1 ; 8692
CAR                  ; 8693
LDC    0            ; just constant from code ; 8694
LD     0 0          ; var world ; 8695
CDR                 ; generateTupleAccess total=4 pos=1 ; 8696
CAR                  ; 8697
CDR                 ; generateTupleAccess total=5 pos=1 ; 8698
CAR                  ; 8699
CAR                 ; generateTupleAccess total=2 pos=0 ; 8700
LDF    8379         ;  @sorted_map_assoc ; 8701
AP     3             ; 8702
LDC    1            ; just constant from code ; 8703
LD     0 0          ; var world ; 8704
CDR                 ; generateTupleAccess total=4 pos=1 ; 8705
CAR                  ; 8706
CDR                 ; generateTupleAccess total=5 pos=1 ; 8707
CAR                  ; 8708
CDR                 ; generateTupleAccess total=2 pos=1 ; 8709
LDF    8379         ;  @sorted_map_assoc ; 8710
AP     3             ; 8711
LD     0 1          ; var state ; 8712
CDR                 ; generateTupleAccess total=3 pos=2 ; 8713
CDR                  ; 8714
CONS                 ; 8715
CONS                 ; 8716
JOIN                 ; 8717
LDC    2            ; ELSE: 105 ; 8718
LD     0 3          ; var num ; 8719
CEQ                  ; 8720
SEL    8723 8751    ; IF? 106 ; 8721
JOIN                 ; 8722
LD     0 5          ; THEN: 106 ; 8723
LD     0 1          ; var state ; 8724
CDR                 ; generateTupleAccess total=3 pos=1 ; 8725
CAR                  ; 8726
LDC    0            ; just constant from code ; 8727
LD     0 0          ; var world ; 8728
CDR                 ; generateTupleAccess total=4 pos=1 ; 8729
CAR                  ; 8730
CDR                 ; generateTupleAccess total=5 pos=1 ; 8731
CAR                  ; 8732
CAR                 ; generateTupleAccess total=2 pos=0 ; 8733
LDF    8379         ;  @sorted_map_assoc ; 8734
AP     3             ; 8735
LDC    1            ; just constant from code ; 8736
LD     0 0          ; var world ; 8737
CDR                 ; generateTupleAccess total=4 pos=1 ; 8738
CAR                  ; 8739
CDR                 ; generateTupleAccess total=5 pos=1 ; 8740
CAR                  ; 8741
CDR                 ; generateTupleAccess total=2 pos=1 ; 8742
LDF    8379         ;  @sorted_map_assoc ; 8743
AP     3             ; 8744
LD     0 1          ; var state ; 8745
CDR                 ; generateTupleAccess total=3 pos=2 ; 8746
CDR                  ; 8747
CONS                 ; 8748
CONS                 ; 8749
JOIN                 ; 8750
LDC    3            ; ELSE: 106 ; 8751
LD     0 3          ; var num ; 8752
CEQ                  ; 8753
SEL    8756 8770    ; IF? 107 ; 8754
JOIN                 ; 8755
LD     0 5          ; THEN: 107 ; 8756
LD     0 1          ; var state ; 8757
CDR                 ; generateTupleAccess total=3 pos=1 ; 8758
CAR                  ; 8759
LDC    0            ; just constant from code ; 8760
LD     0 6          ; var currentGhostIndex ; 8761
LDF    8379         ;  @sorted_map_assoc ; 8762
AP     3             ; 8763
LD     0 1          ; var state ; 8764
CDR                 ; generateTupleAccess total=3 pos=2 ; 8765
CDR                  ; 8766
CONS                 ; 8767
CONS                 ; 8768
JOIN                 ; 8769
LDC    4            ; ELSE: 107 ; 8770
LD     0 3          ; var num ; 8771
CEQ                  ; 8772
SEL    8775 8790    ; IF? 108 ; 8773
JOIN                 ; 8774
LD     0 0          ; THEN: 108 ; 8775
LD     0 1          ; var state ; 8776
LD     0 2          ; var ghostInfo ; 8777
LD     0 1          ; var state ; 8778
CDR                 ; generateTupleAccess total=3 pos=1 ; 8779
CAR                  ; 8780
LDC    0            ; just constant from code ; 8781
LDC    0            ; just constant from code ; 8782
LDF    8363         ;  @sorted_map_get ; 8783
AP     3             ; 8784
LDC    4            ; just constant from code ; 8785
LDC 0               ; local var space ; 8786
LDF    8563         ;  @processGhostInfoRequest ; 8787
AP     6             ; 8788
JOIN                 ; 8789
LDC    5            ; ELSE: 108 ; 8790
LD     0 3          ; var num ; 8791
CEQ                  ; 8792
SEL    8795 8810    ; IF? 109 ; 8793
JOIN                 ; 8794
LD     0 0          ; THEN: 109 ; 8795
LD     0 1          ; var state ; 8796
LD     0 2          ; var ghostInfo ; 8797
LD     0 1          ; var state ; 8798
CDR                 ; generateTupleAccess total=3 pos=1 ; 8799
CAR                  ; 8800
LDC    0            ; just constant from code ; 8801
LDC    0            ; just constant from code ; 8802
LDF    8363         ;  @sorted_map_get ; 8803
AP     3             ; 8804
LDC    5            ; just constant from code ; 8805
LDC 0               ; local var space ; 8806
LDF    8563         ;  @processGhostInfoRequest ; 8807
AP     6             ; 8808
JOIN                 ; 8809
LDC    6            ; ELSE: 109 ; 8810
LD     0 3          ; var num ; 8811
CEQ                  ; 8812
SEL    8815 8830    ; IF? 110 ; 8813
JOIN                 ; 8814
LD     0 0          ; THEN: 110 ; 8815
LD     0 1          ; var state ; 8816
LD     0 2          ; var ghostInfo ; 8817
LD     0 1          ; var state ; 8818
CDR                 ; generateTupleAccess total=3 pos=1 ; 8819
CAR                  ; 8820
LDC    0            ; just constant from code ; 8821
LDC    0            ; just constant from code ; 8822
LDF    8363         ;  @sorted_map_get ; 8823
AP     3             ; 8824
LDC    6            ; just constant from code ; 8825
LDC 0               ; local var space ; 8826
LDF    8563         ;  @processGhostInfoRequest ; 8827
AP     6             ; 8828
JOIN                 ; 8829
LDC    7            ; ELSE: 110 ; 8830
LD     0 3          ; var num ; 8831
CEQ                  ; 8832
SEL    8835 8866    ; IF? 111 ; 8833
JOIN                 ; 8834
LD     0 5          ; THEN: 111 ; 8835
LD     0 1          ; var state ; 8836
CDR                 ; generateTupleAccess total=3 pos=1 ; 8837
CAR                  ; 8838
LDC    0            ; just constant from code ; 8839
LD     0 0          ; var world ; 8840
CAR                 ; generateTupleAccess total=4 pos=0 ; 8841
LD     0 1          ; var state ; 8842
CDR                 ; generateTupleAccess total=3 pos=1 ; 8843
CAR                  ; 8844
LDC    0            ; just constant from code ; 8845
LDC    0            ; just constant from code ; 8846
LDF    8363         ;  @sorted_map_get ; 8847
AP     3             ; 8848
LD     0 1          ; var state ; 8849
CDR                 ; generateTupleAccess total=3 pos=1 ; 8850
CAR                  ; 8851
LDC    1            ; just constant from code ; 8852
LDC    0            ; just constant from code ; 8853
LDF    8363         ;  @sorted_map_get ; 8854
AP     3             ; 8855
LDF    7844         ;  @getMapItem ; 8856
AP     3             ; 8857
LDF    8379         ;  @sorted_map_assoc ; 8858
AP     3             ; 8859
LD     0 1          ; var state ; 8860
CDR                 ; generateTupleAccess total=3 pos=2 ; 8861
CDR                  ; 8862
CONS                 ; 8863
CONS                 ; 8864
JOIN                 ; 8865
LD     0 1          ; ELSE: 111 ; 8866
JOIN                 ; 8867
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) ; 8868
LD     0 0          ; var f ; 8869
AP     1             ; 8870
CAR                  ; 8871
ST     0 3           ; 8872
LD     0 2          ; var n ; 8873
LDC    0            ; just constant from code ; 8874
CEQ                  ; 8875
SEL    8878 8882    ; IF? 55 ; 8876
RTN                  ; 8877
LD     0 3          ; THEN: 55 ; 8878
LDC    0            ; NULL literal ; 8879
CONS                 ; 8880
JOIN                 ; 8881
LD     0 3          ; ELSE: 55 ; 8882
LD     0 0          ; var f ; 8883
LD     0 1          ; var a ; 8884
LD     0 0          ; var f ; 8885
AP     1             ; 8886
CDR                  ; 8887
LD     0 2          ; var n ; 8888
LDC    1            ; just constant from code ; 8889
SUB                  ; 8890
LDC 0               ; local var space ; 8891
LDF    736          ;  @produce_n ; 8892
AP     4             ; 8893
CONS                 ; 8894
JOIN                 ; 8895
LDF    10138        ;  <== bit_split  [Integer x] (as blk), ALSO: @lambda_1049 ; 8896
LD     0 0          ; var x ; 8897
LDC    7            ; just constant from code ; 8898
LDC 0               ; local var space ; 8899
LDF    736          ;  @produce_n ; 8900
AP     4             ; 8901
RTN                  ; 8902
LD     0 0          ;  <== emulate_bitop  [Integer x, Integer y, Function2<Integer,Integer,Integer> f] (as blk) ; 8903
LDF    8896         ;  @bit_split ; 8904
AP     1             ; 8905
ST     0 3           ; 8906
LD     0 1          ; var y ; 8907
LDF    8896         ;  @bit_split ; 8908
AP     1             ; 8909
ST     0 4           ; 8910
LDF    10155        ;  @lambda_1050 ; 8911
LDC    0            ; just constant from code ; 8912
LD     0 2          ; var f ; 8913
LD     0 3          ; var bits_x ; 8914
LD     0 4          ; var bits_y ; 8915
LDF    647          ;  @zip_with ; 8916
AP     3             ; 8917
LDF    35           ;  @foldr ; 8918
AP     3             ; 8919
RTN                  ; 8920
LD     0 0          ;  <== ghcstate_bitop  [GHCState state, Cons arg_cons, Cons val_cons, int type] (as blk) ; 8921
LD     0 1          ; var arg_cons ; 8922
LDC 0               ; local var space ; 8923
LDC 0               ; local var space ; 8924
LDF    8408         ;  @ghcstate_read_val ; 8925
AP     4             ; 8926
ST     0 4           ; 8927
LD     0 0          ; var state ; 8928
LD     0 2          ; var val_cons ; 8929
LDC 0               ; local var space ; 8930
LDC 0               ; local var space ; 8931
LDF    8408         ;  @ghcstate_read_val ; 8932
AP     4             ; 8933
ST     0 5           ; 8934
LD     0 4          ; var arg ; 8935
LD     0 5          ; var val ; 8936
LD     0 3          ; var type ; 8937
LDC    7            ; Named Const = GHCOps.AND ; 8938
CEQ                  ; 8939
SEL    8953 8955    ; IF? 56 ; 8940
LDC 0               ; local var space ; 8941
LDC 0               ; local var space ; 8942
LDF    8903         ;  @emulate_bitop ; 8943
AP     5             ; 8944
ST     0 6           ; 8945
LD     0 0          ; var state ; 8946
LD     0 1          ; var arg_cons ; 8947
LD     0 6          ; var result ; 8948
LDC 0               ; local var space ; 8949
LDF    8468         ;  @ghcstate_write_val ; 8950
AP     4             ; 8951
RTN                  ; 8952
LDF    10194        ; THEN: 56, ALSO: @lambda_1055 ; 8953
JOIN                 ; 8954
LD     0 3          ; ELSE: 56 ; 8955
LDC    8            ; Named Const = GHCOps.OR ; 8956
CEQ                  ; 8957
SEL    8960 8962    ; IF? 112 ; 8958
JOIN                 ; 8959
LDF    10198        ; THEN: 112, ALSO: @lambda_1056 ; 8960
JOIN                 ; 8961
LDF    10209        ; ELSE: 112, ALSO: @lambda_1057 ; 8962
JOIN                 ; 8963
LD     0 5          ;  <== runGhostStep  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state, Cons step] (as blk) ; 8964
CAR                  ; 8965
ST     0 6           ; 8966
LD     0 5          ; var step ; 8967
CDR                  ; 8968
ST     0 7           ; 8969
LD     0 4          ; var state ; 8970
CAR                 ; generateTupleAccess total=3 pos=0 ; 8971
LD     0 4          ; var state ; 8972
CDR                 ; generateTupleAccess total=3 pos=1 ; 8973
CAR                  ; 8974
LDC    8            ; just constant from code ; 8975
LD     0 4          ; var state ; 8976
CDR                 ; generateTupleAccess total=3 pos=1 ; 8977
CAR                  ; 8978
LDC    8            ; just constant from code ; 8979
LDC    0            ; just constant from code ; 8980
LDF    8363         ;  @sorted_map_get ; 8981
AP     3             ; 8982
LDC    1            ; just constant from code ; 8983
ADD                  ; 8984
LDF    8379         ;  @sorted_map_assoc ; 8985
AP     3             ; 8986
LD     0 4          ; var state ; 8987
CDR                 ; generateTupleAccess total=3 pos=2 ; 8988
CDR                  ; 8989
CONS                 ; 8990
CONS                 ; 8991
ST     0 8           ; 8992
LDC    0            ; Named Const = GHCOps.MOV ; 8993
LD     0 6          ; var opcode ; 8994
CEQ                  ; 8995
SEL    8998 9016    ; IF? 57 ; 8996
RTN                  ; 8997
LD     0 0          ; THEN: 57 ; 8998
LD     0 1          ; var world ; 8999
LD     0 2          ; var ghostInfo ; 9000
LD     0 3          ; var lev ; 9001
LD     0 8          ; var inc_pc ; 9002
LD     0 7          ; var args ; 9003
CAR                  ; 9004
LD     0 7          ; var args ; 9005
CDR                  ; 9006
CAR                  ; 9007
LDC 0               ; local var space ; 9008
LDF    8549         ;  @ghcstate_assoc ; 9009
AP     4             ; 9010
LDC 0               ; local var space ; 9011
LDC 0               ; local var space ; 9012
LDF    9476         ;  @runGhost ; 9013
AP     7             ; 9014
JOIN                 ; 9015
LDC    1            ; ELSE: 57 ; 9016
LD     0 6          ; var opcode ; 9017
CEQ                  ; 9018
SEL    9021 9045    ; IF? 113 ; 9019
JOIN                 ; 9020
LD     0 0          ; THEN: 113 ; 9021
LD     0 1          ; var world ; 9022
LD     0 2          ; var ghostInfo ; 9023
LD     0 3          ; var lev ; 9024
LD     0 8          ; var inc_pc ; 9025
LD     0 7          ; var args ; 9026
CAR                  ; 9027
LD     0 8          ; var inc_pc ; 9028
LD     0 7          ; var args ; 9029
CAR                  ; 9030
LDC 0               ; local var space ; 9031
LDC 0               ; local var space ; 9032
LDF    8408         ;  @ghcstate_read_val ; 9033
AP     4             ; 9034
LDC    1            ; just constant from code ; 9035
ADD                  ; 9036
LDC 0               ; local var space ; 9037
LDF    8468         ;  @ghcstate_write_val ; 9038
AP     4             ; 9039
LDC 0               ; local var space ; 9040
LDC 0               ; local var space ; 9041
LDF    9476         ;  @runGhost ; 9042
AP     7             ; 9043
JOIN                 ; 9044
LDC    2            ; ELSE: 113 ; 9045
LD     0 6          ; var opcode ; 9046
CEQ                  ; 9047
SEL    9050 9074    ; IF? 114 ; 9048
JOIN                 ; 9049
LD     0 0          ; THEN: 114 ; 9050
LD     0 1          ; var world ; 9051
LD     0 2          ; var ghostInfo ; 9052
LD     0 3          ; var lev ; 9053
LD     0 8          ; var inc_pc ; 9054
LD     0 7          ; var args ; 9055
CAR                  ; 9056
LD     0 8          ; var inc_pc ; 9057
LD     0 7          ; var args ; 9058
CAR                  ; 9059
LDC 0               ; local var space ; 9060
LDC 0               ; local var space ; 9061
LDF    8408         ;  @ghcstate_read_val ; 9062
AP     4             ; 9063
LDC    1            ; just constant from code ; 9064
SUB                  ; 9065
LDC 0               ; local var space ; 9066
LDF    8468         ;  @ghcstate_write_val ; 9067
AP     4             ; 9068
LDC 0               ; local var space ; 9069
LDC 0               ; local var space ; 9070
LDF    9476         ;  @runGhost ; 9071
AP     7             ; 9072
JOIN                 ; 9073
LDC    3            ; ELSE: 114 ; 9074
LD     0 6          ; var opcode ; 9075
CEQ                  ; 9076
SEL    9079 9110    ; IF? 115 ; 9077
JOIN                 ; 9078
LD     0 0          ; THEN: 115 ; 9079
LD     0 1          ; var world ; 9080
LD     0 2          ; var ghostInfo ; 9081
LD     0 3          ; var lev ; 9082
LD     0 8          ; var inc_pc ; 9083
LD     0 7          ; var args ; 9084
CAR                  ; 9085
LD     0 8          ; var inc_pc ; 9086
LD     0 7          ; var args ; 9087
CAR                  ; 9088
LDC 0               ; local var space ; 9089
LDC 0               ; local var space ; 9090
LDF    8408         ;  @ghcstate_read_val ; 9091
AP     4             ; 9092
LD     0 8          ; var inc_pc ; 9093
LD     0 7          ; var args ; 9094
CDR                  ; 9095
CAR                  ; 9096
LDC 0               ; local var space ; 9097
LDC 0               ; local var space ; 9098
LDF    8408         ;  @ghcstate_read_val ; 9099
AP     4             ; 9100
ADD                  ; 9101
LDC 0               ; local var space ; 9102
LDF    8468         ;  @ghcstate_write_val ; 9103
AP     4             ; 9104
LDC 0               ; local var space ; 9105
LDC 0               ; local var space ; 9106
LDF    9476         ;  @runGhost ; 9107
AP     7             ; 9108
JOIN                 ; 9109
LDC    4            ; ELSE: 115 ; 9110
LD     0 6          ; var opcode ; 9111
CEQ                  ; 9112
SEL    9115 9146    ; IF? 116 ; 9113
JOIN                 ; 9114
LD     0 0          ; THEN: 116 ; 9115
LD     0 1          ; var world ; 9116
LD     0 2          ; var ghostInfo ; 9117
LD     0 3          ; var lev ; 9118
LD     0 8          ; var inc_pc ; 9119
LD     0 7          ; var args ; 9120
CAR                  ; 9121
LD     0 8          ; var inc_pc ; 9122
LD     0 7          ; var args ; 9123
CAR                  ; 9124
LDC 0               ; local var space ; 9125
LDC 0               ; local var space ; 9126
LDF    8408         ;  @ghcstate_read_val ; 9127
AP     4             ; 9128
LD     0 8          ; var inc_pc ; 9129
LD     0 7          ; var args ; 9130
CDR                  ; 9131
CAR                  ; 9132
LDC 0               ; local var space ; 9133
LDC 0               ; local var space ; 9134
LDF    8408         ;  @ghcstate_read_val ; 9135
AP     4             ; 9136
SUB                  ; 9137
LDC 0               ; local var space ; 9138
LDF    8468         ;  @ghcstate_write_val ; 9139
AP     4             ; 9140
LDC 0               ; local var space ; 9141
LDC 0               ; local var space ; 9142
LDF    9476         ;  @runGhost ; 9143
AP     7             ; 9144
JOIN                 ; 9145
LDC    5            ; ELSE: 116 ; 9146
LD     0 6          ; var opcode ; 9147
CEQ                  ; 9148
SEL    9151 9182    ; IF? 117 ; 9149
JOIN                 ; 9150
LD     0 0          ; THEN: 117 ; 9151
LD     0 1          ; var world ; 9152
LD     0 2          ; var ghostInfo ; 9153
LD     0 3          ; var lev ; 9154
LD     0 8          ; var inc_pc ; 9155
LD     0 7          ; var args ; 9156
CAR                  ; 9157
LD     0 8          ; var inc_pc ; 9158
LD     0 7          ; var args ; 9159
CAR                  ; 9160
LDC 0               ; local var space ; 9161
LDC 0               ; local var space ; 9162
LDF    8408         ;  @ghcstate_read_val ; 9163
AP     4             ; 9164
LD     0 8          ; var inc_pc ; 9165
LD     0 7          ; var args ; 9166
CDR                  ; 9167
CAR                  ; 9168
LDC 0               ; local var space ; 9169
LDC 0               ; local var space ; 9170
LDF    8408         ;  @ghcstate_read_val ; 9171
AP     4             ; 9172
MUL                  ; 9173
LDC 0               ; local var space ; 9174
LDF    8468         ;  @ghcstate_write_val ; 9175
AP     4             ; 9176
LDC 0               ; local var space ; 9177
LDC 0               ; local var space ; 9178
LDF    9476         ;  @runGhost ; 9179
AP     7             ; 9180
JOIN                 ; 9181
LDC    6            ; ELSE: 117 ; 9182
LD     0 6          ; var opcode ; 9183
CEQ                  ; 9184
SEL    9187 9218    ; IF? 118 ; 9185
JOIN                 ; 9186
LD     0 0          ; THEN: 118 ; 9187
LD     0 1          ; var world ; 9188
LD     0 2          ; var ghostInfo ; 9189
LD     0 3          ; var lev ; 9190
LD     0 8          ; var inc_pc ; 9191
LD     0 7          ; var args ; 9192
CAR                  ; 9193
LD     0 8          ; var inc_pc ; 9194
LD     0 7          ; var args ; 9195
CAR                  ; 9196
LDC 0               ; local var space ; 9197
LDC 0               ; local var space ; 9198
LDF    8408         ;  @ghcstate_read_val ; 9199
AP     4             ; 9200
LD     0 8          ; var inc_pc ; 9201
LD     0 7          ; var args ; 9202
CDR                  ; 9203
CAR                  ; 9204
LDC 0               ; local var space ; 9205
LDC 0               ; local var space ; 9206
LDF    8408         ;  @ghcstate_read_val ; 9207
AP     4             ; 9208
DIV                  ; 9209
LDC 0               ; local var space ; 9210
LDF    8468         ;  @ghcstate_write_val ; 9211
AP     4             ; 9212
LDC 0               ; local var space ; 9213
LDC 0               ; local var space ; 9214
LDF    9476         ;  @runGhost ; 9215
AP     7             ; 9216
JOIN                 ; 9217
LDC    7            ; ELSE: 118 ; 9218
LD     0 6          ; var opcode ; 9219
CEQ                  ; 9220
SEL    9223 9244    ; IF? 119 ; 9221
JOIN                 ; 9222
LD     0 0          ; THEN: 119 ; 9223
LD     0 1          ; var world ; 9224
LD     0 2          ; var ghostInfo ; 9225
LD     0 3          ; var lev ; 9226
LD     0 8          ; var inc_pc ; 9227
LD     0 7          ; var args ; 9228
CAR                  ; 9229
LD     0 7          ; var args ; 9230
CDR                  ; 9231
CAR                  ; 9232
LDC    7            ; Named Const = GHCOps.AND ; 9233
LDC 0               ; local var space ; 9234
LDC 0               ; local var space ; 9235
LDC 0               ; local var space ; 9236
LDF    8921         ;  @ghcstate_bitop ; 9237
AP     7             ; 9238
LDC 0               ; local var space ; 9239
LDC 0               ; local var space ; 9240
LDF    9476         ;  @runGhost ; 9241
AP     7             ; 9242
JOIN                 ; 9243
LDC    8            ; ELSE: 119 ; 9244
LD     0 6          ; var opcode ; 9245
CEQ                  ; 9246
SEL    9249 9270    ; IF? 120 ; 9247
JOIN                 ; 9248
LD     0 0          ; THEN: 120 ; 9249
LD     0 1          ; var world ; 9250
LD     0 2          ; var ghostInfo ; 9251
LD     0 3          ; var lev ; 9252
LD     0 8          ; var inc_pc ; 9253
LD     0 7          ; var args ; 9254
CAR                  ; 9255
LD     0 7          ; var args ; 9256
CDR                  ; 9257
CAR                  ; 9258
LDC    8            ; Named Const = GHCOps.OR ; 9259
LDC 0               ; local var space ; 9260
LDC 0               ; local var space ; 9261
LDC 0               ; local var space ; 9262
LDF    8921         ;  @ghcstate_bitop ; 9263
AP     7             ; 9264
LDC 0               ; local var space ; 9265
LDC 0               ; local var space ; 9266
LDF    9476         ;  @runGhost ; 9267
AP     7             ; 9268
JOIN                 ; 9269
LDC    9            ; ELSE: 120 ; 9270
LD     0 6          ; var opcode ; 9271
CEQ                  ; 9272
SEL    9275 9296    ; IF? 121 ; 9273
JOIN                 ; 9274
LD     0 0          ; THEN: 121 ; 9275
LD     0 1          ; var world ; 9276
LD     0 2          ; var ghostInfo ; 9277
LD     0 3          ; var lev ; 9278
LD     0 8          ; var inc_pc ; 9279
LD     0 7          ; var args ; 9280
CAR                  ; 9281
LD     0 7          ; var args ; 9282
CDR                  ; 9283
CAR                  ; 9284
LDC    9            ; Named Const = GHCOps.XOR ; 9285
LDC 0               ; local var space ; 9286
LDC 0               ; local var space ; 9287
LDC 0               ; local var space ; 9288
LDF    8921         ;  @ghcstate_bitop ; 9289
AP     7             ; 9290
LDC 0               ; local var space ; 9291
LDC 0               ; local var space ; 9292
LDF    9476         ;  @runGhost ; 9293
AP     7             ; 9294
JOIN                 ; 9295
LDC    10           ; ELSE: 121 ; 9296
LD     0 6          ; var opcode ; 9297
CEQ                  ; 9298
SEL    9301 9328    ; IF? 122 ; 9299
JOIN                 ; 9300
LD     0 0          ; THEN: 122 ; 9301
LD     0 1          ; var world ; 9302
LD     0 2          ; var ghostInfo ; 9303
LD     0 3          ; var lev ; 9304
LD     0 4          ; var state ; 9305
LD     0 7          ; var args ; 9306
CDR                  ; 9307
CDR                  ; 9308
LDC 0               ; local var space ; 9309
LDC 0               ; local var space ; 9310
LDF    8408         ;  @ghcstate_read_val ; 9311
AP     4             ; 9312
LD     0 4          ; var state ; 9313
LD     0 7          ; var args ; 9314
CDR                  ; 9315
CAR                  ; 9316
LDC 0               ; local var space ; 9317
LDC 0               ; local var space ; 9318
LDF    8408         ;  @ghcstate_read_val ; 9319
AP     4             ; 9320
CGT                  ; 9321
SEL    9333 9349    ; IF? 123 ; 9322
LDC 0               ; local var space ; 9323
LDC 0               ; local var space ; 9324
LDF    9476         ;  @runGhost ; 9325
AP     7             ; 9326
JOIN                 ; 9327
LDC    11           ; ELSE: 122 ; 9328
LD     0 6          ; var opcode ; 9329
CEQ                  ; 9330
SEL    9351 9378    ; IF? 124 ; 9331
JOIN                 ; 9332
LD     0 4          ; THEN: 123 ; 9333
CAR                 ; generateTupleAccess total=3 pos=0 ; 9334
LD     0 4          ; var state ; 9335
CDR                 ; generateTupleAccess total=3 pos=1 ; 9336
CAR                  ; 9337
LDC    8            ; just constant from code ; 9338
LD     0 7          ; var args ; 9339
CAR                  ; 9340
LDF    8379         ;  @sorted_map_assoc ; 9341
AP     3             ; 9342
LD     0 4          ; var state ; 9343
CDR                 ; generateTupleAccess total=3 pos=2 ; 9344
CDR                  ; 9345
CONS                 ; 9346
CONS                 ; 9347
JOIN                 ; 9348
LD     0 4          ; ELSE: 123 ; 9349
JOIN                 ; 9350
LD     0 0          ; THEN: 124 ; 9351
LD     0 1          ; var world ; 9352
LD     0 2          ; var ghostInfo ; 9353
LD     0 3          ; var lev ; 9354
LD     0 4          ; var state ; 9355
LD     0 7          ; var args ; 9356
CDR                  ; 9357
CAR                  ; 9358
LDC 0               ; local var space ; 9359
LDC 0               ; local var space ; 9360
LDF    8408         ;  @ghcstate_read_val ; 9361
AP     4             ; 9362
LD     0 4          ; var state ; 9363
LD     0 7          ; var args ; 9364
CDR                  ; 9365
CDR                  ; 9366
LDC 0               ; local var space ; 9367
LDC 0               ; local var space ; 9368
LDF    8408         ;  @ghcstate_read_val ; 9369
AP     4             ; 9370
CEQ                  ; 9371
SEL    9383 9399    ; IF? 125 ; 9372
LDC 0               ; local var space ; 9373
LDC 0               ; local var space ; 9374
LDF    9476         ;  @runGhost ; 9375
AP     7             ; 9376
JOIN                 ; 9377
LDC    12           ; ELSE: 124 ; 9378
LD     0 6          ; var opcode ; 9379
CEQ                  ; 9380
SEL    9401 9428    ; IF? 126 ; 9381
JOIN                 ; 9382
LD     0 4          ; THEN: 125 ; 9383
CAR                 ; generateTupleAccess total=3 pos=0 ; 9384
LD     0 4          ; var state ; 9385
CDR                 ; generateTupleAccess total=3 pos=1 ; 9386
CAR                  ; 9387
LDC    8            ; just constant from code ; 9388
LD     0 7          ; var args ; 9389
CAR                  ; 9390
LDF    8379         ;  @sorted_map_assoc ; 9391
AP     3             ; 9392
LD     0 4          ; var state ; 9393
CDR                 ; generateTupleAccess total=3 pos=2 ; 9394
CDR                  ; 9395
CONS                 ; 9396
CONS                 ; 9397
JOIN                 ; 9398
LD     0 4          ; ELSE: 125 ; 9399
JOIN                 ; 9400
LD     0 0          ; THEN: 126 ; 9401
LD     0 1          ; var world ; 9402
LD     0 2          ; var ghostInfo ; 9403
LD     0 3          ; var lev ; 9404
LD     0 4          ; var state ; 9405
LD     0 7          ; var args ; 9406
CDR                  ; 9407
CAR                  ; 9408
LDC 0               ; local var space ; 9409
LDC 0               ; local var space ; 9410
LDF    8408         ;  @ghcstate_read_val ; 9411
AP     4             ; 9412
LD     0 4          ; var state ; 9413
LD     0 7          ; var args ; 9414
CDR                  ; 9415
CDR                  ; 9416
LDC 0               ; local var space ; 9417
LDC 0               ; local var space ; 9418
LDF    8408         ;  @ghcstate_read_val ; 9419
AP     4             ; 9420
CGT                  ; 9421
SEL    9433 9449    ; IF? 127 ; 9422
LDC 0               ; local var space ; 9423
LDC 0               ; local var space ; 9424
LDF    9476         ;  @runGhost ; 9425
AP     7             ; 9426
JOIN                 ; 9427
LDC    13           ; ELSE: 126 ; 9428
LD     0 6          ; var opcode ; 9429
CEQ                  ; 9430
SEL    9451 9471    ; IF? 128 ; 9431
JOIN                 ; 9432
LD     0 4          ; THEN: 127 ; 9433
CAR                 ; generateTupleAccess total=3 pos=0 ; 9434
LD     0 4          ; var state ; 9435
CDR                 ; generateTupleAccess total=3 pos=1 ; 9436
CAR                  ; 9437
LDC    8            ; just constant from code ; 9438
LD     0 7          ; var args ; 9439
CAR                  ; 9440
LDF    8379         ;  @sorted_map_assoc ; 9441
AP     3             ; 9442
LD     0 4          ; var state ; 9443
CDR                 ; generateTupleAccess total=3 pos=2 ; 9444
CDR                  ; 9445
CONS                 ; 9446
CONS                 ; 9447
JOIN                 ; 9448
LD     0 4          ; ELSE: 127 ; 9449
JOIN                 ; 9450
LD     0 0          ; THEN: 128 ; 9451
LD     0 1          ; var world ; 9452
LD     0 2          ; var ghostInfo ; 9453
LD     0 3          ; var lev ; 9454
LD     0 1          ; var world ; 9455
LD     0 8          ; var inc_pc ; 9456
LD     0 2          ; var ghostInfo ; 9457
LD     0 7          ; var args ; 9458
CAR                  ; 9459
LD     0 7          ; var args ; 9460
CDR                  ; 9461
LDC 0               ; local var space ; 9462
LDC 0               ; local var space ; 9463
LDF    8650         ;  @processGhostInt ; 9464
AP     7             ; 9465
LDC 0               ; local var space ; 9466
LDC 0               ; local var space ; 9467
LDF    9476         ;  @runGhost ; 9468
AP     7             ; 9469
JOIN                 ; 9470
LD     0 4          ; ELSE: 128 ; 9471
CAR                 ; generateTupleAccess total=3 pos=0 ; 9472
CDR                 ; generateTupleAccess total=3 pos=2 ; 9473
CDR                  ; 9474
JOIN                 ; 9475
LD     0 4          ;  <== runGhost  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state] (as blk) ; 9476
CDR                 ; generateTupleAccess total=3 pos=1 ; 9477
CAR                  ; 9478
LDC    8            ; just constant from code ; 9479
LDC    0            ; just constant from code ; 9480
LDF    8363         ;  @sorted_map_get ; 9481
AP     3             ; 9482
ST     0 5           ; 9483
LD     0 0          ; var prog ; 9484
LD     0 5          ; var pc ; 9485
LDC    0            ; NULL literal ; 9486
LDF    8363         ;  @sorted_map_get ; 9487
AP     3             ; 9488
ST     0 6           ; 9489
LD     0 6          ; var step ; 9490
ATOM                 ; 9491
SEL    9494 9499    ; IF? 58 ; 9492
RTN                  ; 9493
LD     0 4          ; THEN: 58 ; 9494
CAR                 ; generateTupleAccess total=3 pos=0 ; 9495
CDR                 ; generateTupleAccess total=3 pos=2 ; 9496
CDR                  ; 9497
JOIN                 ; 9498
LD     0 3          ; ELSE: 58 ; 9499
LDC    1023         ; just constant from code ; 9500
CGT                  ; 9501
SEL    9504 9509    ; IF? 129 ; 9502
JOIN                 ; 9503
LD     0 4          ; THEN: 129 ; 9504
CAR                 ; generateTupleAccess total=3 pos=0 ; 9505
CDR                 ; generateTupleAccess total=3 pos=2 ; 9506
CDR                  ; 9507
JOIN                 ; 9508
LD     0 0          ; ELSE: 129 ; 9509
LD     0 1          ; var world ; 9510
LD     0 2          ; var ghostInfo ; 9511
LD     0 3          ; var lev ; 9512
LDC    1            ; just constant from code ; 9513
ADD                  ; 9514
LD     0 4          ; var state ; 9515
LD     0 6          ; var step ; 9516
LDC 0               ; local var space ; 9517
LDC 0               ; local var space ; 9518
LDC 0               ; local var space ; 9519
LDF    8964         ;  @runGhostStep ; 9520
AP     9             ; 9521
JOIN                 ; 9522
LD     0 1          ;  <== getGhostDirection  [WorldState world, GhostInfo ghostInfo] (as blk) ; 9523
CDR                 ; generateTupleAccess total=3 pos=1 ; 9524
CAR                  ; 9525
LDC    0            ; just constant from code ; 9526
LDC    0            ; NULL literal ; 9527
LDC    0            ; just constant from code ; 9528
CONS                 ; 9529
CONS                 ; 9530
LDF    10161        ;  @lambda_1051 ; 9531
LDF    373          ;  @fold0 ; 9532
AP     3             ; 9533
ST     0 2           ; 9534
LD     0 0          ; var world ; 9535
CDR                 ; generateTupleAccess total=4 pos=2 ; 9536
CDR                  ; 9537
CAR                  ; 9538
CAR                  ; 9539
ST     0 3           ; 9540
LD     0 2          ; var prog ; 9541
CDR                 ; generateTupleAccess total=2 pos=1 ; 9542
LD     0 0          ; var world ; 9543
LD     0 1          ; var ghostInfo ; 9544
LDC    0            ; just constant from code ; 9545
LD     0 3          ; var ghostState ; 9546
LDC    0            ; NULL literal ; 9547
LDC    0            ; just constant from code ; 9548
CONS                 ; 9549
LDC    0            ; NULL literal ; 9550
LDC    0            ; just constant from code ; 9551
CONS                 ; 9552
CONS                 ; 9553
CONS                 ; 9554
LDC 0               ; local var space ; 9555
LDC 0               ; local var space ; 9556
LDF    9476         ;  @runGhost ; 9557
AP     7             ; 9558
RTN                  ; 9559
LDF    781          ;  <== lambda_1000  [x] (as expr), ALSO: @array_256 ; 9560
AP     0             ; 9561
RTN                  ; 9562
LD     0 0          ;  <== lambda_1001  [a, b] (as expr) ; 9563
LD     0 1          ; var b ; 9564
CONS                 ; 9565
RTN                  ; 9566
LD     0 0          ;  <== lambda_1002  [Tuple<ListCons<Integer>,Function2<Integer,Integer,Function1<Integer,Integer>>> t] (as expr) ; 9567
CAR                 ; generateTupleAccess total=2 pos=0 ; 9568
LDC    0            ; just constant from code ; 9569
LDF    10174        ;  @lambda_1052 ; 9570
LDF    73           ;  @mapi ; 9571
AP     3             ; 9572
RTN                  ; 9573
LD     0 0          ;  <== lambda_1003  [row, rowy] (as expr) ; 9574
LD     0 1          ; var rowy ; 9575
LDF    7764         ;  @collectWalkableXY ; 9576
AP     2             ; 9577
LDC 0               ; local var space ; 9578
LDF    7756         ;  @my_cat_maybes ; 9579
AP     2             ; 9580
RTN                  ; 9581
LD     1 0          ;  <== lambda_1004  [Point w] (as expr) ; 9582
LD     0 0          ; var w ; 9583
CAR                 ; generateTupleAccess total=2 pos=0 ; 9584
LD     0 0          ; var w ; 9585
CDR                 ; generateTupleAccess total=2 pos=1 ; 9586
LDC 0               ; local var space ; 9587
LDC 0               ; local var space ; 9588
LDC 0               ; local var space ; 9589
LDC 0               ; local var space ; 9590
LDF    7343         ;  @isJunction ; 9591
AP     7             ; 9592
RTN                  ; 9593
LD     0 0          ;  <== lambda_1005  [Point pt] (as expr) ; 9594
LDF    7471         ;  @getPointKey ; 9595
AP     1             ; 9596
LD     0 0          ; var pt ; 9597
CONS                 ; 9598
RTN                  ; 9599
LD     0 0          ;  <== lambda_1006  [SortedMap<T> acc, Tuple<Integer,T> elem] (as expr) ; 9600
LD     0 1          ; var elem ; 9601
CAR                 ; generateTupleAccess total=2 pos=0 ; 9602
LD     0 1          ; var elem ; 9603
CDR                 ; generateTupleAccess total=2 pos=1 ; 9604
LDF    8379         ;  @sorted_map_assoc ; 9605
AP     3             ; 9606
RTN                  ; 9607
LD     1 0          ;  <== lambda_1007  [j] (as expr) ; 9608
LD     0 0          ; var j ; 9609
LD     1 8          ; var junctions ; 9610
LD     1 6          ; var junctionsList ; 9611
LD     1 1          ; var accessors ; 9612
LDC 0               ; local var space ; 9613
LDF    7402         ;  @findNeighbourJunctions ; 9614
AP     6             ; 9615
RTN                  ; 9616
LD     0 0          ;  <== lambda_1008  [ParsedEdge pe, Integer ix] (as expr) ; 9617
CAR                 ; generateTupleAccess total=7 pos=0 ; 9618
LD     0 0          ; var pe ; 9619
CDR                 ; generateTupleAccess total=7 pos=1 ; 9620
CAR                  ; 9621
LD     0 0          ; var pe ; 9622
CDR                 ; generateTupleAccess total=7 pos=2 ; 9623
CDR                  ; 9624
CAR                  ; 9625
LD     0 0          ; var pe ; 9626
CDR                 ; generateTupleAccess total=7 pos=3 ; 9627
CDR                  ; 9628
CDR                  ; 9629
CAR                  ; 9630
LD     0 0          ; var pe ; 9631
CDR                 ; generateTupleAccess total=7 pos=4 ; 9632
CDR                  ; 9633
CDR                  ; 9634
CDR                  ; 9635
CAR                  ; 9636
LD     0 1          ; var ix ; 9637
LDC    -1           ; just negative constant from code ; 9638
CONS                 ; 9639
CONS                 ; 9640
CONS                 ; 9641
CONS                 ; 9642
CONS                 ; 9643
CONS                 ; 9644
RTN                  ; 9645
LD     0 0          ;  <== lambda_1009  [ParsedEdge pe, Integer ix] (as expr) ; 9646
CAR                 ; generateTupleAccess total=7 pos=0 ; 9647
LD     0 0          ; var pe ; 9648
CDR                 ; generateTupleAccess total=7 pos=1 ; 9649
CAR                  ; 9650
LD     0 0          ; var pe ; 9651
CDR                 ; generateTupleAccess total=7 pos=2 ; 9652
CDR                  ; 9653
CAR                  ; 9654
LD     0 0          ; var pe ; 9655
CDR                 ; generateTupleAccess total=7 pos=3 ; 9656
CDR                  ; 9657
CDR                  ; 9658
CAR                  ; 9659
LD     0 0          ; var pe ; 9660
CDR                 ; generateTupleAccess total=7 pos=4 ; 9661
CDR                  ; 9662
CDR                  ; 9663
CDR                  ; 9664
CAR                  ; 9665
LD     0 0          ; var pe ; 9666
CDR                 ; generateTupleAccess total=7 pos=5 ; 9667
CDR                  ; 9668
CDR                  ; 9669
CDR                  ; 9670
CDR                  ; 9671
CAR                  ; 9672
LD     0 0          ; var pe ; 9673
CDR                 ; generateTupleAccess total=7 pos=1 ; 9674
CAR                  ; 9675
LD     0 0          ; var pe ; 9676
CAR                 ; generateTupleAccess total=7 pos=0 ; 9677
LD     1 10         ; var allParsedEdges2 ; 9678
LDF    7742         ;  @findEdge ; 9679
AP     3             ; 9680
LDF    7748         ;  @edgeNumber ; 9681
AP     1             ; 9682
CONS                 ; 9683
CONS                 ; 9684
CONS                 ; 9685
CONS                 ; 9686
CONS                 ; 9687
CONS                 ; 9688
RTN                  ; 9689
LD     0 0          ;  <== lambda_1010  [GhostState g, ListCons s, Integer ind] (as expr) ; 9690
CDR                 ; generateTupleAccess total=3 pos=1 ; 9691
CAR                  ; 9692
LD     0 1          ; var s ; 9693
LD     0 2          ; var ind ; 9694
CONS                 ; 9695
CONS                 ; 9696
RTN                  ; 9697
LD     0 0          ;  <== lambda_1011  [nextaistate, worldState] (as expr) ; 9698
LD     0 1          ; var worldState ; 9699
LDC 0               ; local var space ; 9700
LDC 0               ; local var space ; 9701
LDC 0               ; local var space ; 9702
LDC 0               ; local var space ; 9703
LDC 0               ; local var space ; 9704
LDC 0               ; local var space ; 9705
LDC 0               ; local var space ; 9706
LDC 0               ; local var space ; 9707
LDC 0               ; local var space ; 9708
LDC 0               ; local var space ; 9709
LDC 0               ; local var space ; 9710
LDC 0               ; local var space ; 9711
LDF    6888         ;  @performMove ; 9712
AP     14            ; 9713
RTN                  ; 9714
LD     0 0          ;  <== lambda_1012  [x] (as expr) ; 9715
LD     1 1          ; var g ; 9716
AP     1             ; 9717
LD     1 0          ; var f ; 9718
AP     1             ; 9719
RTN                  ; 9720
LD     0 1          ;  <== lambda_1013  [b, a] (as expr) ; 9721
LD     0 0          ; var b ; 9722
LD     1 0          ; var f ; 9723
AP     2             ; 9724
RTN                  ; 9725
LD     0 0          ;  <== lambda_1014  [d] (as expr) ; 9726
LDF    213          ;  @maybeToList ; 9727
AP     1             ; 9728
RTN                  ; 9729
LD     0 0          ;  <== lambda_1015  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9730
CDR                 ; generateTupleAccess total=2 pos=1 ; 9731
CAR                 ; generateTupleAccess total=2 pos=0 ; 9732
LD     1 1          ; var start ; 9733
CAR                 ; generateTupleAccess total=2 pos=0 ; 9734
CEQ                  ; 9735
LDC    1            ; for negation ; 9736
SUB                  ; 9737
LD     0 0          ; var t ; 9738
CDR                 ; generateTupleAccess total=2 pos=1 ; 9739
CDR                 ; generateTupleAccess total=2 pos=1 ; 9740
LD     1 1          ; var start ; 9741
CDR                 ; generateTupleAccess total=2 pos=1 ; 9742
CEQ                  ; 9743
LDC    1            ; for negation ; 9744
SUB                  ; 9745
ADD                  ; 9746
SEL    9749 9751    ; IF? 59 ; 9747
RTN                  ; 9748
LDC    1            ; THEN: 59 ; 9749
JOIN                 ; 9750
LDC    0            ; ELSE: 59 ; 9751
JOIN                 ; 9752
LDC    0            ;  <== lambda_1016  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9753
LD     0 0          ; var t ; 9754
CAR                 ; generateTupleAccess total=2 pos=0 ; 9755
AP     1             ; 9756
LDC    2            ; Named Const = CT.PILL ; 9757
CEQ                  ; 9758
SEL    9761 9763    ; IF? 60 ; 9759
RTN                  ; 9760
LDC    1            ; THEN: 60 ; 9761
JOIN                 ; 9762
LDC    0            ; ELSE: 60 ; 9763
JOIN                 ; 9764
LD     0 0          ;  <== lambda_1017  [Point p] (as expr) ; 9765
CAR                 ; generateTupleAccess total=2 pos=0 ; 9766
LD     1 1          ; var start ; 9767
CAR                 ; generateTupleAccess total=2 pos=0 ; 9768
CEQ                  ; 9769
LDC    1            ; for negation ; 9770
SUB                  ; 9771
LD     0 0          ; var p ; 9772
CDR                 ; generateTupleAccess total=2 pos=1 ; 9773
LD     1 1          ; var start ; 9774
CDR                 ; generateTupleAccess total=2 pos=1 ; 9775
CEQ                  ; 9776
LDC    1            ; for negation ; 9777
SUB                  ; 9778
ADD                  ; 9779
SEL    9782 9784    ; IF? 61 ; 9780
RTN                  ; 9781
LDC    1            ; THEN: 61 ; 9782
JOIN                 ; 9783
LDC    0            ; ELSE: 61 ; 9784
JOIN                 ; 9785
LD     1 2          ;  <== lambda_1018  [Point p] (as expr) ; 9786
LD     0 0          ; var p ; 9787
CDR                 ; generateTupleAccess total=2 pos=1 ; 9788
LD     0 0          ; var p ; 9789
CAR                 ; generateTupleAccess total=2 pos=0 ; 9790
LDF    7844         ;  @getMapItem ; 9791
AP     3             ; 9792
LDC    6            ; Named Const = CT.GHOST ; 9793
CEQ                  ; 9794
SEL    9797 9799    ; IF? 62 ; 9795
RTN                  ; 9796
LDC    1            ; THEN: 62 ; 9797
JOIN                 ; 9798
LDC    0            ; ELSE: 62 ; 9799
JOIN                 ; 9800
LDC    0            ;  <== lambda_1019  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9801
LD     0 0          ; var t ; 9802
CAR                 ; generateTupleAccess total=2 pos=0 ; 9803
AP     1             ; 9804
LDC    2            ; Named Const = CT.PILL ; 9805
CEQ                  ; 9806
SEL    9809 9811    ; IF? 63 ; 9807
RTN                  ; 9808
LDC    1            ; THEN: 63 ; 9809
JOIN                 ; 9810
LDC    0            ; ELSE: 63 ; 9811
JOIN                 ; 9812
LD     0 0          ;  <== lambda_1020  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9813
LDC    0            ; just constant from code ; 9814
LD     0 1          ; var t ; 9815
CAR                 ; generateTupleAccess total=2 pos=0 ; 9816
AP     1             ; 9817
LDC    2            ; Named Const = CT.PILL ; 9818
CEQ                  ; 9819
SEL    9823 9825    ; IF? 64 ; 9820
ADD                  ; 9821
RTN                  ; 9822
LDC    1            ; THEN: 64 ; 9823
JOIN                 ; 9824
LDC    0            ; ELSE: 64 ; 9825
JOIN                 ; 9826
LD     0 0          ;  <== lambda_1021  [Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9827
CDR                 ; generateTupleAccess total=2 pos=1 ; 9828
CAR                 ; generateTupleAccess total=2 pos=0 ; 9829
LD     1 1          ; var start ; 9830
CAR                 ; generateTupleAccess total=2 pos=0 ; 9831
CEQ                  ; 9832
LDC    1            ; for negation ; 9833
SUB                  ; 9834
LD     0 0          ; var t ; 9835
CDR                 ; generateTupleAccess total=2 pos=1 ; 9836
CDR                 ; generateTupleAccess total=2 pos=1 ; 9837
LD     1 1          ; var start ; 9838
CDR                 ; generateTupleAccess total=2 pos=1 ; 9839
CEQ                  ; 9840
LDC    1            ; for negation ; 9841
SUB                  ; 9842
ADD                  ; 9843
SEL    9846 9848    ; IF? 65 ; 9844
RTN                  ; 9845
LDC    1            ; THEN: 65 ; 9846
JOIN                 ; 9847
LDC    0            ; ELSE: 65 ; 9848
JOIN                 ; 9849
LDC    0            ;  <== lambda_1022  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr) ; 9850
LD     0 1          ; var t ; 9851
CAR                 ; generateTupleAccess total=2 pos=0 ; 9852
AP     1             ; 9853
LDC    2            ; Named Const = CT.PILL ; 9854
CEQ                  ; 9855
SEL    9858 9860    ; IF? 66 ; 9856
RTN                  ; 9857
LDC    1            ; THEN: 66 ; 9858
JOIN                 ; 9859
LDC    0            ; ELSE: 66 ; 9860
JOIN                 ; 9861
LD     1 1          ;  <== lambda_1023  [e] (as expr) ; 9862
LD     0 0          ; var e ; 9863
LDF    7632         ;  @pointInEdge ; 9864
AP     2             ; 9865
RTN                  ; 9866
LD     0 0          ;  <== lambda_1024  [Queue<ListCons<ParsedEdge>> qq, ParsedEdge e] (as expr) ; 9867
LD     0 1          ; var e ; 9868
LDC    0            ; NULL literal ; 9869
CONS                 ; 9870
LDF    394          ;  @queue_enqueue ; 9871
AP     2             ; 9872
RTN                  ; 9873
LD     0 0          ;  <== lambda_1025  [ParsedEdge e] (as expr) ; 9874
CDR                 ; generateTupleAccess total=7 pos=5 ; 9875
CDR                  ; 9876
CDR                  ; 9877
CDR                  ; 9878
CDR                  ; 9879
CAR                  ; 9880
LDC    0            ; just constant from code ; 9881
CONS                 ; 9882
RTN                  ; 9883
LD     0 0          ;  <== lambda_1026  [r] (as expr) ; 9884
LDC    5            ; just constant from code ; 9885
LD     0 0          ; var r ; 9886
LDF    112          ;  @last ; 9887
AP     1             ; 9888
LD     1 2          ; var worldState ; 9889
CDR                 ; generateTupleAccess total=4 pos=1 ; 9890
CAR                  ; 9891
CDR                 ; generateTupleAccess total=5 pos=1 ; 9892
CAR                  ; 9893
LDC 0               ; local var space ; 9894
LDC 0               ; local var space ; 9895
LDF    6871         ;  @countMyEdgePills ; 9896
AP     4             ; 9897
MUL                  ; 9898
LD     0 0          ; var r ; 9899
LDF    286          ;  @reverse ; 9900
AP     1             ; 9901
CDR                  ; 9902
LDF    7221         ;  @countRoutePills ; 9903
AP     1             ; 9904
ADD                  ; 9905
CONS                 ; 9906
RTN                  ; 9907
LD     0 0          ;  <== lambda_1027  [Tuple<ListCons<ParsedEdge>,Integer> t] (as expr) ; 9908
CDR                 ; generateTupleAccess total=2 pos=1 ; 9909
RTN                  ; 9910
LD     0 0          ;  <== lambda_1028  [Point p] (as expr) ; 9911
CAR                 ; generateTupleAccess total=2 pos=0 ; 9912
LD     1 2          ; var location ; 9913
CAR                 ; generateTupleAccess total=2 pos=0 ; 9914
CEQ                  ; 9915
LDC    1            ; for negation ; 9916
SUB                  ; 9917
LD     0 0          ; var p ; 9918
CDR                 ; generateTupleAccess total=2 pos=1 ; 9919
LD     1 2          ; var location ; 9920
CDR                 ; generateTupleAccess total=2 pos=1 ; 9921
CEQ                  ; 9922
LDC    1            ; for negation ; 9923
SUB                  ; 9924
ADD                  ; 9925
SEL    9928 9930    ; IF? 67 ; 9926
RTN                  ; 9927
LDC    1            ; THEN: 67 ; 9928
JOIN                 ; 9929
LDC    0            ; ELSE: 67 ; 9930
JOIN                 ; 9931
LD     0 0          ;  <== lambda_1029  [ParsedEdge pe] (as expr) ; 9932
CAR                 ; generateTupleAccess total=7 pos=0 ; 9933
LD     1 1          ; var lookingEdge ; 9934
LDC 0               ; local var space ; 9935
LDF    7214         ;  @endingPointOfEdgeRoute ; 9936
AP     2             ; 9937
LDF    7197         ;  @pointEquals ; 9938
AP     2             ; 9939
RTN                  ; 9940
LDC    1            ;  <== lambda_1030  [ParsedEdge f] (as expr) ; 9941
LD     1 3          ; var visited ; 9942
LD     0 0          ; var f ; 9943
CDR                 ; generateTupleAccess total=7 pos=5 ; 9944
CDR                  ; 9945
CDR                  ; 9946
CDR                  ; 9947
CDR                  ; 9948
CAR                  ; 9949
LDF    8348         ;  @sorted_map_contains ; 9950
AP     2             ; 9951
SUB                  ; 9952
RTN                  ; 9953
LD     0 0          ;  <== lambda_1031  [pe] (as expr) ; 9954
LD     1 1          ; var worldState ; 9955
CAR                 ; generateTupleAccess total=4 pos=0 ; 9956
LDC 0               ; local var space ; 9957
LDC 0               ; local var space ; 9958
LDF    6844         ;  @collectAnyEdgePills ; 9959
AP     4             ; 9960
LDF    519          ;  @length ; 9961
AP     1             ; 9962
LDC    0            ; just constant from code ; 9963
CGT                  ; 9964
SEL    9967 9969    ; IF? 68 ; 9965
RTN                  ; 9966
LDC    1            ; THEN: 68 ; 9967
JOIN                 ; 9968
LDC    0            ; ELSE: 68 ; 9969
JOIN                 ; 9970
LD     0 0          ;  <== lambda_1032  [ParsedEdge f] (as expr) ; 9971
CDR                 ; generateTupleAccess total=7 pos=5 ; 9972
CDR                  ; 9973
CDR                  ; 9974
CDR                  ; 9975
CDR                  ; 9976
CAR                  ; 9977
LDC    0            ; just constant from code ; 9978
CONS                 ; 9979
RTN                  ; 9980
LD     0 0          ;  <== lambda_1033  [ParsedEdge f] (as expr) ; 9981
CDR                 ; generateTupleAccess total=7 pos=6 ; 9982
CDR                  ; 9983
CDR                  ; 9984
CDR                  ; 9985
CDR                  ; 9986
CDR                  ; 9987
LDC    0            ; just constant from code ; 9988
CONS                 ; 9989
RTN                  ; 9990
LD     0 0          ;  <== lambda_1034  [ParsedEdge next] (as expr) ; 9991
LD     1 8          ; var lookingEdge ; 9992
CONS                 ; 9993
RTN                  ; 9994
LD     0 0          ;  <== lambda_1035  [Queue<ListCons<ParsedEdge>> qq, ListCons<ParsedEdge> nr] (as expr) ; 9995
LD     0 1          ; var nr ; 9996
LDF    394          ;  @queue_enqueue ; 9997
AP     2             ; 9998
RTN                  ; 9999
LD     0 0          ;  <== lambda_1036  [acc, pe] (as expr) ; 10000
LD     0 1          ; var pe ; 10001
LDC 0               ; local var space ; 10002
LDC 0               ; local var space ; 10003
LDF    6857         ;  @countAnyEdgePills ; 10004
AP     3             ; 10005
ADD                  ; 10006
RTN                  ; 10007
LD     0 0          ;  <== lambda_1037  [p] (as expr) ; 10008
CAR                  ; 10009
LD     0 0          ; var p ; 10010
LDF    112          ;  @last ; 10011
AP     1             ; 10012
LD     0 0          ; var p ; 10013
LD     0 0          ; var p ; 10014
LD     1 4          ; var accessors ; 10015
LDF    7431         ;  @makeEdgeAccess ; 10016
AP     2             ; 10017
LD     0 0          ; var p ; 10018
LDF    519          ;  @length ; 10019
AP     1             ; 10020
LDC    1            ; just constant from code ; 10021
SUB                  ; 10022
LDC    -1           ; just negative constant from code ; 10023
LDC    -1           ; just negative constant from code ; 10024
CONS                 ; 10025
CONS                 ; 10026
CONS                 ; 10027
CONS                 ; 10028
CONS                 ; 10029
CONS                 ; 10030
RTN                  ; 10031
LDC    100          ;  <== lambda_1038  [Point pt] (as expr) ; 10032
LD     0 0          ; var pt ; 10033
CAR                 ; generateTupleAccess total=2 pos=0 ; 10034
LD     1 1          ; var accessors ; 10035
LD     0 0          ; var pt ; 10036
CDR                 ; generateTupleAccess total=2 pos=1 ; 10037
LDF    410          ;  @list_item ; 10038
AP     2             ; 10039
AP     2             ; 10040
RTN                  ; 10041
LD     1 0          ;  <== lambda_1039  [Tuple<Integer,Point> d] (as expr) ; 10042
LD     0 0          ; var d ; 10043
CDR                 ; generateTupleAccess total=2 pos=1 ; 10044
LDF    7323         ;  @isWalkable2 ; 10045
AP     2             ; 10046
LDC    1            ; just constant from code ; 10047
LD     1 4          ; var visited ; 10048
LD     0 0          ; var d ; 10049
CAR                 ; generateTupleAccess total=2 pos=0 ; 10050
LDF    8348         ;  @sorted_map_contains ; 10051
AP     2             ; 10052
SUB                  ; 10053
MUL                  ; 10054
RTN                  ; 10055
LD     1 2          ;  <== lambda_1040  [Tuple<Integer,Point> e] (as expr) ; 10056
LD     0 0          ; var e ; 10057
CAR                 ; generateTupleAccess total=2 pos=0 ; 10058
LDF    8348         ;  @sorted_map_contains ; 10059
AP     2             ; 10060
RTN                  ; 10061
LD     1 3          ;  <== lambda_1041  [Tuple<Integer,Point> e] (as expr) ; 10062
LDF    10182        ;  @lambda_1053 ; 10063
LDF    532          ;  @any ; 10064
AP     2             ; 10065
RTN                  ; 10066
LDC    1            ;  <== lambda_1042  [Tuple<Integer,Point> e] (as expr) ; 10067
LD     1 14         ; var arriveds ; 10068
LD     0 0          ; var e ; 10069
CAR                 ; generateTupleAccess total=2 pos=0 ; 10070
LDF    8348         ;  @sorted_map_contains ; 10071
AP     2             ; 10072
SUB                  ; 10073
RTN                  ; 10074
LD     0 0          ;  <== lambda_1043  [Tuple<Integer,Point> e] (as expr) ; 10075
CDR                 ; generateTupleAccess total=2 pos=1 ; 10076
LD     1 8          ; var thisRoute ; 10077
CONS                 ; 10078
RTN                  ; 10079
LD     0 0          ;  <== lambda_1044  [r, i] (as expr) ; 10080
LD     0 1          ; var i ; 10081
LDF    394          ;  @queue_enqueue ; 10082
AP     2             ; 10083
RTN                  ; 10084
LD     0 0          ;  <== lambda_1045  [Tuple<Integer,Point> e] (as expr) ; 10085
CDR                 ; generateTupleAccess total=2 pos=1 ; 10086
LD     1 8          ; var thisRoute ; 10087
CONS                 ; 10088
RTN                  ; 10089
LD     1 0          ;  <== lambda_1046  [Point ep] (as expr) ; 10090
CAR                 ; generateTupleAccess total=2 pos=0 ; 10091
LD     0 0          ; var ep ; 10092
CAR                 ; generateTupleAccess total=2 pos=0 ; 10093
CEQ                  ; 10094
LD     1 0          ; var pos ; 10095
CDR                 ; generateTupleAccess total=2 pos=1 ; 10096
LD     0 0          ; var ep ; 10097
CDR                 ; generateTupleAccess total=2 pos=1 ; 10098
CEQ                  ; 10099
MUL                  ; 10100
SEL    10103 10105  ; IF? 69 ; 10101
RTN                  ; 10102
LDC    1            ; THEN: 69 ; 10103
JOIN                 ; 10104
LDC    0            ; ELSE: 69 ; 10105
JOIN                 ; 10106
LD     0 0          ;  <== lambda_1047  [ParsedEdge e] (as expr) ; 10107
CAR                 ; generateTupleAccess total=7 pos=0 ; 10108
LD     1 0          ; var a ; 10109
LDF    7197         ;  @pointEquals ; 10110
AP     2             ; 10111
LD     0 0          ; var e ; 10112
CDR                 ; generateTupleAccess total=7 pos=1 ; 10113
CAR                  ; 10114
LD     1 1          ; var b ; 10115
LDF    7197         ;  @pointEquals ; 10116
AP     2             ; 10117
MUL                  ; 10118
RTN                  ; 10119
LD     0 0          ;  <== lambda_1048  [col, colx] (as expr) ; 10120
LDC 0               ; local var space ; 10121
LDF    7309         ;  @isWalkable ; 10122
AP     2             ; 10123
LDC    0            ; just constant from code ; 10124
CGT                  ; 10125
SEL    10128 10135  ; IF? 70 ; 10126
RTN                  ; 10127
LD     0 1          ; THEN: 70 ; 10128
LD     1 1          ; var rowy ; 10129
CONS                 ; 10130
LDC 0               ; local var space ; 10131
LDF    207          ;  @JUST ; 10132
AP     2             ; 10133
JOIN                 ; 10134
LDF    203          ; ELSE: 70, ALSO: @NOTHING ; 10135
AP     0             ; 10136
JOIN                 ; 10137
LD     0 0          ;  <== lambda_1049  [Integer a] (as expr) ; 10138
LD     0 0          ; var a ; 10139
LDC    2            ; just constant from code ; 10140
DIV                  ; 10141
LDC    2            ; just constant from code ; 10142
MUL                  ; 10143
CEQ                  ; 10144
SEL    10151 10153  ; IF? 71 ; 10145
LD     0 0          ; var a ; 10146
LDC    2            ; just constant from code ; 10147
DIV                  ; 10148
CONS                 ; 10149
RTN                  ; 10150
LDC    0            ; THEN: 71 ; 10151
JOIN                 ; 10152
LDC    1            ; ELSE: 71 ; 10153
JOIN                 ; 10154
LD     0 1          ;  <== lambda_1050  [Integer elem, Integer acc] (as expr) ; 10155
LDC    2            ; just constant from code ; 10156
MUL                  ; 10157
LD     0 0          ; var elem ; 10158
ADD                  ; 10159
RTN                  ; 10160
LD     0 0          ;  <== lambda_1051  [Tuple<Integer,SortedMap<Cons>> init, Cons step] (as expr) ; 10161
CAR                 ; generateTupleAccess total=2 pos=0 ; 10162
LDC    1            ; just constant from code ; 10163
ADD                  ; 10164
LD     0 0          ; var init ; 10165
CDR                 ; generateTupleAccess total=2 pos=1 ; 10166
LD     0 0          ; var init ; 10167
CAR                 ; generateTupleAccess total=2 pos=0 ; 10168
LD     0 1          ; var step ; 10169
LDF    8379         ;  @sorted_map_assoc ; 10170
AP     3             ; 10171
CONS                 ; 10172
RTN                  ; 10173
LD     0 0          ;  <== lambda_1052  [val, ix] (as expr) ; 10174
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 10175
LD     0 1          ; var ix ; 10176
LD     1 0          ; var t ; 10177
CDR                 ; generateTupleAccess total=2 pos=1 ; 10178
AP     2             ; 10179
AP     1             ; 10180
RTN                  ; 10181
LD     1 0          ;  <== lambda_1053  [d] (as expr) ; 10182
CDR                 ; generateTupleAccess total=2 pos=1 ; 10183
LD     0 0          ; var d ; 10184
LDF    7197         ;  @pointEquals ; 10185
AP     2             ; 10186
RTN                  ; 10187
LD     1 2          ;  <== lambda_1054  [Tuple<Integer,Point> e] (as expr) ; 10188
LD     0 0          ; var e ; 10189
CAR                 ; generateTupleAccess total=2 pos=0 ; 10190
LDF    8348         ;  @sorted_map_contains ; 10191
AP     2             ; 10192
RTN                  ; 10193
LD     0 0          ;  <== lambda_1055  [x, y] (as expr) ; 10194
LD     0 1          ; var y ; 10195
MUL                  ; 10196
RTN                  ; 10197
LD     0 0          ;  <== lambda_1056  [x, y] (as expr) ; 10198
LD     0 1          ; var y ; 10199
ADD                  ; 10200
LDC    0            ; just constant from code ; 10201
CGT                  ; 10202
SEL    10205 10207  ; IF? 130 ; 10203
RTN                  ; 10204
LDC    1            ; THEN: 130 ; 10205
JOIN                 ; 10206
LDC    0            ; ELSE: 130 ; 10207
JOIN                 ; 10208
LD     0 0          ;  <== lambda_1057  [x, y] (as expr) ; 10209
LD     0 1          ; var y ; 10210
CEQ                  ; 10211
LDC    1            ; for negation ; 10212
SUB                  ; 10213
SEL    10216 10218  ; IF? 131 ; 10214
RTN                  ; 10215
LDC    1            ; THEN: 131 ; 10216
JOIN                 ; 10217
LDC    0            ; ELSE: 131 ; 10218
JOIN                 ; 10219
