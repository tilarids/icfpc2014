LD     0 0          ;  <== entryPoint  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) @src/app/Sample1.java(53,140) ; 0
LD     0 1          ; var ghostSpecs ; 1
LDC 0               ; local var space ; 2
LDC 0               ; local var space ; 3
LDC 0               ; local var space ; 4
LDF    2494         ;  @entryFactual ; 5
AP     5             ; 6
RTN                  ; 7
LD     0 0          ;  <== mydebug  [T o] (as blk) @src/app/VM.java(83,37) ; 8
DBUG                 ; 9
LD     0 0          ; var o ; 10
RTN                  ; 11
LD     0 0          ;  <== mydebugv  [Object tag, T o] (as blk) @src/app/VM.java(89,50) ; 12
DBUG                 ; 13
LD     0 1          ; var o ; 14
DBUG                 ; 15
LD     0 1          ; var o ; 16
RTN                  ; 17
LD     0 2          ;  <== foldl  [Function2<A,B,A> f, A a, ListCons<B> l] (as blk) @src/app/VM.java(134,75) ; 18
ATOM                 ; 19
SEL    22 24        ; IF? 12 ; 20
RTN                  ; 21
LD     0 1          ; THEN: 12 ; 22
JOIN                 ; 23
LD     0 0          ; ELSE: 12 ; 24
LD     0 1          ; var a ; 25
LD     0 2          ; var l ; 26
CAR                  ; 27
LD     0 0          ; var f ; 28
AP     2             ; 29
LD     0 2          ; var l ; 30
CDR                  ; 31
LDF    18           ;  @foldl ; 32
AP     3             ; 33
JOIN                 ; 34
LD     0 2          ;  <== foldr  [Function2<A,B,B> f, B a, ListCons<A> l] (as blk) @src/app/VM.java(144,75) ; 35
ATOM                 ; 36
SEL    39 41        ; IF? 13 ; 37
RTN                  ; 38
LD     0 1          ; THEN: 13 ; 39
JOIN                 ; 40
LD     0 2          ; ELSE: 13 ; 41
CAR                  ; 42
LD     0 0          ; var f ; 43
LD     0 1          ; var a ; 44
LD     0 2          ; var l ; 45
CDR                  ; 46
LDF    35           ;  @foldr ; 47
AP     3             ; 48
LD     0 0          ; var f ; 49
AP     2             ; 50
JOIN                 ; 51
LDF    10651        ;  <== o  [final Function1<B,C> f, final Function1<A,B> g] (as blk) @src/app/VM.java(153,96), ALSO: @lambda_1015 ; 52
RTN                  ; 53
LDF    10657        ;  <== flip  [Function2<A,B,C> f] (as blk) @src/app/VM.java(179,74), ALSO: @lambda_1016 ; 54
RTN                  ; 55
LD     0 0          ;  <== map  [ListCons<T> c, Function1<T,T2> arg] (as blk) @src/app/VM.java(205,80) ; 56
ATOM                 ; 57
SEL    60 62        ; IF? 3 ; 58
RTN                  ; 59
LDC    0            ; THEN: 3 ; 60
JOIN                 ; 61
LD     0 0          ; ELSE: 3 ; 62
CAR                  ; 63
LD     0 1          ; var arg ; 64
AP     1             ; 65
LD     0 0          ; var c ; 66
CDR                  ; 67
LD     0 1          ; var arg ; 68
LDF    56           ;  @map ; 69
AP     2             ; 70
CONS                 ; 71
JOIN                 ; 72
LD     0 0          ;  <== mapi  [ListCons<D> c, int ix, Function2<D,Integer,D2> arg] (as blk) @src/app/VM.java(243,98) ; 73
ATOM                 ; 74
SEL    77 79        ; IF? 5 ; 75
RTN                  ; 76
LDC    0            ; THEN: 5 ; 77
JOIN                 ; 78
LD     0 0          ; ELSE: 5 ; 79
CAR                  ; 80
LD     0 1          ; var ix ; 81
LD     0 2          ; var arg ; 82
AP     2             ; 83
LD     0 0          ; var c ; 84
CDR                  ; 85
LD     0 1          ; var ix ; 86
LDC    1            ; just constant from code ; 87
ADD                  ; 88
LD     0 2          ; var arg ; 89
LDF    73           ;  @mapi ; 90
AP     3             ; 91
CONS                 ; 92
JOIN                 ; 93
LD     0 0          ;  <== cat_maybes  [ListCons<Maybe<D>> data] (as blk) @src/app/VM.java(252,70) ; 94
LDF    10662        ;  @lambda_1017 ; 95
LDF    56           ;  @map ; 96
AP     2             ; 97
ST     0 1           ; 98
LD     0 1          ; var mtl ; 99
LDF    105          ;  @concat ; 100
AP     1             ; 101
ST     0 2           ; 102
LD     0 2          ; var rv ; 103
RTN                  ; 104
LD     0 0          ;  <== concat  [ListCons<ListCons<D>> data] (as blk) @src/app/VM.java(262,69) ; 105
LDC    0            ; NULL literal ; 106
LDF    136          ;  @concat_acc ; 107
AP     2             ; 108
LDF    286          ;  @reverse ; 109
AP     1             ; 110
RTN                  ; 111
LD     0 0          ;  <== last  [ListCons<D> data] (as blk) @src/app/VM.java(270,47) ; 112
ATOM                 ; 113
SEL    120 122       ; 114
LD     0 0          ; var data ; 115
CDR                  ; 116
ATOM                 ; 117
SEL    123 126      ; IF? 14 ; 118
RTN                  ; 119
BRK                 ; branch@120 ; 120
JOIN                 ; 121
JOIN                ; branch@122 ; 122
LD     0 0          ; THEN: 14 ; 123
CAR                  ; 124
JOIN                 ; 125
LD     0 0          ; ELSE: 14 ; 126
CDR                  ; 127
LDF    112          ;  @last ; 128
AP     1             ; 129
JOIN                 ; 130
LD     0 0          ;  <== concat_set  [ListCons<ListCons<D>> data] (as blk) @src/app/VM.java(279,73) ; 131
LDC    0            ; NULL literal ; 132
LDF    136          ;  @concat_acc ; 133
AP     2             ; 134
RTN                  ; 135
LD     0 0          ;  <== concat_acc  [ListCons<ListCons<D>> data, ListCons<D> acc] (as blk) @src/app/VM.java(287,90) ; 136
ATOM                 ; 137
SEL    140 142      ; IF? 6 ; 138
RTN                  ; 139
LD     0 1          ; THEN: 6 ; 140
JOIN                 ; 141
LD     0 0          ; ELSE: 6 ; 142
CDR                  ; 143
LD     0 0          ; var data ; 144
CAR                  ; 145
LD     0 1          ; var acc ; 146
LDF    152          ;  @concat2 ; 147
AP     2             ; 148
LDF    136          ;  @concat_acc ; 149
AP     2             ; 150
JOIN                 ; 151
LD     0 0          ;  <== concat2  [ListCons<D> data, ListCons<D> data2] (as blk) @src/app/VM.java(295,79) ; 152
ATOM                 ; 153
SEL    156 158      ; IF? 15 ; 154
RTN                  ; 155
LD     0 1          ; THEN: 15 ; 156
JOIN                 ; 157
LD     0 1          ; ELSE: 15 ; 158
ATOM                 ; 159
SEL    162 164      ; IF? 86 ; 160
JOIN                 ; 161
LD     0 0          ; THEN: 86 ; 162
JOIN                 ; 163
LD     0 0          ; ELSE: 86 ; 164
LDF    286          ;  @reverse ; 165
AP     1             ; 166
LD     0 1          ; var data2 ; 167
LDF    188          ;  @concat2_acc ; 168
AP     2             ; 169
JOIN                 ; 170
LD     0 0          ;  <== concat2_set  [ListCons<D> data, ListCons<D> data2] (as blk) @src/app/VM.java(305,83) ; 171
ATOM                 ; 172
SEL    175 177      ; IF? 16 ; 173
RTN                  ; 174
LD     0 1          ; THEN: 16 ; 175
JOIN                 ; 176
LD     0 1          ; ELSE: 16 ; 177
ATOM                 ; 178
SEL    181 183      ; IF? 87 ; 179
JOIN                 ; 180
LD     0 0          ; THEN: 87 ; 181
JOIN                 ; 182
LD     0 0          ; ELSE: 87 ; 183
LD     0 1          ; var data2 ; 184
LDF    188          ;  @concat2_acc ; 185
AP     2             ; 186
JOIN                 ; 187
LD     0 0          ;  <== concat2_acc  [ListCons<D> data, ListCons<D> acc] (as blk) @src/app/VM.java(315,81) ; 188
ATOM                 ; 189
SEL    192 194      ; IF? 17 ; 190
RTN                  ; 191
LD     0 1          ; THEN: 17 ; 192
JOIN                 ; 193
LD     0 0          ; ELSE: 17 ; 194
CDR                  ; 195
LD     0 0          ; var data ; 196
CAR                  ; 197
LD     0 1          ; var acc ; 198
CONS                 ; 199
LDF    188          ;  @concat2_acc ; 200
AP     2             ; 201
JOIN                 ; 202
LDC    0            ;  <== NOTHING  [] (as blk) @src/app/VM.java(323,41) ; 203
LDC    0            ; NULL literal ; 204
CONS                 ; 205
RTN                  ; 206
LDC    1            ;  <== JUST  [T t] (as blk) @src/app/VM.java(331,41) ; 207
LD     0 0          ; var t ; 208
CONS                 ; 209
ST     0 1           ; 210
LD     0 1          ; var tMaybe ; 211
RTN                  ; 212
LD     0 0          ;  <== maybeToList  [Maybe<D> d] (as blk) @src/app/VM.java(337,58) ; 213
LDF    270          ;  @is_nothing ; 214
AP     1             ; 215
LDC    1            ; just constant from code ; 216
CEQ                  ; 217
SEL    220 222      ; IF? 18 ; 218
RTN                  ; 219
LDC    0            ; THEN: 18 ; 220
JOIN                 ; 221
LD     0 0          ; ELSE: 18 ; 222
LDF    275          ;  @from_maybe ; 223
AP     1             ; 224
LDC    0            ; NULL literal ; 225
CONS                 ; 226
JOIN                 ; 227
LDC    0            ;  <== catMaybes_acc  [ListCons<Maybe<D>> data, ListCons<D> acc] (as blk) @src/app/VM.java(345,90) ; 228
ST     0 2           ; 229
LD     0 0          ; var data ; 230
ATOM                 ; 231
SEL    235 238       ; 232
LD     0 2          ; var rv ; 233
RTN                  ; 234
LD     0 1          ; branch@235 ; 235
ST     0 2           ; 236
JOIN                 ; 237
LD     0 0          ; branch@238 ; 238
CAR                  ; 239
LDF    270          ;  @is_nothing ; 240
AP     1             ; 241
ST     0 3           ; 242
LD     0 0          ; var data ; 243
CAR                  ; 244
LDF    275          ;  @from_maybe ; 245
AP     1             ; 246
ST     0 4           ; 247
LD     0 4          ; var data1 ; 248
LD     0 1          ; var acc ; 249
CONS                 ; 250
ST     0 5           ; 251
LD     0 0          ; var data ; 252
CDR                  ; 253
LD     0 3          ; var nothing ; 254
LDC    1            ; just constant from code ; 255
CEQ                  ; 256
SEL    266 268      ; IF? 88 ; 257
LDC 0               ; local var space ; 258
LDC 0               ; local var space ; 259
LDC 0               ; local var space ; 260
LDC 0               ; local var space ; 261
LDF    228          ;  @catMaybes_acc ; 262
AP     6             ; 263
ST     0 2           ; 264
JOIN                 ; 265
LD     0 1          ; THEN: 88 ; 266
JOIN                 ; 267
LD     0 5          ; ELSE: 88 ; 268
JOIN                 ; 269
LDC    1            ;  <== is_nothing  [Maybe<D> head] (as blk) @src/app/VM.java(368,53) ; 270
LD     0 0          ; var head ; 271
CAR                 ; generateTupleAccess total=2 pos=0 ; 272
SUB                  ; 273
RTN                  ; 274
LD     0 0          ;  <== from_maybe  [Maybe<D> head] (as blk) @src/app/VM.java(376,51) ; 275
CAR                 ; generateTupleAccess total=2 pos=0 ; 276
LDC    0            ; just constant from code ; 277
CEQ                  ; 278
SEL    283 285       ; 279
LD     0 0          ; var head ; 280
CDR                 ; generateTupleAccess total=2 pos=1 ; 281
RTN                  ; 282
BRK                 ; branch@283 ; 283
JOIN                 ; 284
JOIN                ; branch@285 ; 285
LD     0 0          ;  <== reverse  [ListCons<D> c] (as blk) @src/app/VM.java(388,57) ; 286
LDC    0            ; NULL literal ; 287
LDF    358          ;  @reverse_acc ; 288
AP     2             ; 289
RTN                  ; 290
LD     0 0          ;  <== maximum_by_acc  [ListCons<D> d, Function1<D,Integer> projection, D acc] (as blk) @src/app/VM.java(393,95) ; 291
ATOM                 ; 292
SEL    295 297      ; IF? 19 ; 293
RTN                  ; 294
LD     0 2          ; THEN: 19 ; 295
JOIN                 ; 296
LD     0 2          ; ELSE: 19 ; 297
LD     0 1          ; var projection ; 298
AP     1             ; 299
LD     0 0          ; var d ; 300
CAR                  ; 301
LD     0 1          ; var projection ; 302
AP     1             ; 303
CGT                  ; 304
SEL    307 314      ; IF? 89 ; 305
JOIN                 ; 306
LD     0 0          ; THEN: 89 ; 307
CDR                  ; 308
LD     0 1          ; var projection ; 309
LD     0 2          ; var acc ; 310
LDF    291          ;  @maximum_by_acc ; 311
AP     3             ; 312
JOIN                 ; 313
LD     0 0          ; ELSE: 89 ; 314
CDR                  ; 315
LD     0 1          ; var projection ; 316
LD     0 0          ; var d ; 317
CAR                  ; 318
LDF    291          ;  @maximum_by_acc ; 319
AP     3             ; 320
JOIN                 ; 321
LD     0 0          ;  <== maximum_by  [ListCons<D> d, Function1<D,Integer> projection] (as blk) @src/app/VM.java(400,84) ; 322
ATOM                 ; 323
SEL    333 335       ; 324
LD     0 0          ; var d ; 325
CDR                  ; 326
LD     0 1          ; var projection ; 327
LD     0 0          ; var d ; 328
CAR                  ; 329
LDF    291          ;  @maximum_by_acc ; 330
AP     3             ; 331
RTN                  ; 332
BRK                 ; branch@333 ; 333
JOIN                 ; 334
JOIN                ; branch@335 ; 335
LD     0 0          ;  <== dropWhile  [ListCons<D> c, Function1<D,Integer> test] (as blk) @src/app/VM.java(409,87) ; 336
ATOM                 ; 337
SEL    340 342      ; IF? 20 ; 338
RTN                  ; 339
LDC    0            ; THEN: 20 ; 340
JOIN                 ; 341
LD     0 0          ; ELSE: 20 ; 342
CAR                  ; 343
LD     0 1          ; var test ; 344
AP     1             ; 345
LDC    1            ; just constant from code ; 346
CEQ                  ; 347
SEL    350 356      ; IF? 90 ; 348
JOIN                 ; 349
LD     0 0          ; THEN: 90 ; 350
CDR                  ; 351
LD     0 1          ; var test ; 352
LDF    336          ;  @dropWhile ; 353
AP     2             ; 354
JOIN                 ; 355
LD     0 0          ; ELSE: 90 ; 356
JOIN                 ; 357
LD     0 0          ;  <== reverse_acc  [ListCons<D> c, ListCons<D> acc] (as blk) @src/app/VM.java(418,78) ; 358
ATOM                 ; 359
SEL    362 364      ; IF? 7 ; 360
RTN                  ; 361
LD     0 1          ; THEN: 7 ; 362
JOIN                 ; 363
LD     0 0          ; ELSE: 7 ; 364
CDR                  ; 365
LD     0 0          ; var c ; 366
CAR                  ; 367
LD     0 1          ; var acc ; 368
CONS                 ; 369
LDF    358          ;  @reverse_acc ; 370
AP     2             ; 371
JOIN                 ; 372
LD     0 0          ;  <== fold0  [ListCons<I> c, R init, Function2<R,I,R> arg] (as blk) @src/app/VM.java(427,80) ; 373
ATOM                 ; 374
SEL    377 379      ; IF? 9 ; 375
RTN                  ; 376
LD     0 1          ; THEN: 9 ; 377
JOIN                 ; 378
LD     0 0          ; ELSE: 9 ; 379
CDR                  ; 380
LD     0 1          ; var init ; 381
LD     0 0          ; var c ; 382
CAR                  ; 383
LD     0 2          ; var arg ; 384
AP     2             ; 385
LD     0 2          ; var arg ; 386
LDF    373          ;  @fold0 ; 387
AP     3             ; 388
JOIN                 ; 389
LD     0 0          ;  <== max  [int a, int b] (as blk) @src/app/VM.java(434,32) ; 390
LD     0 1          ; var b ; 391
CGT                  ; 392
SEL    395 397      ; IF? 21 ; 393
RTN                  ; 394
LD     0 0          ; THEN: 21 ; 395
JOIN                 ; 396
LD     0 1          ; ELSE: 21 ; 397
JOIN                 ; 398
LDC    0            ;  <== queue_new  [] (as blk) @src/app/VM.java(439,36) ; 399
LDC    0            ; NULL literal ; 400
CONS                 ; 401
RTN                  ; 402
LD     0 0          ;  <== queue_enqueue  [Queue<T> q, T v] (as blk) @src/app/VM.java(444,55) ; 403
CAR                 ; generateTupleAccess total=2 pos=0 ; 404
LD     0 1          ; var v ; 405
LD     0 0          ; var q ; 406
CDR                 ; generateTupleAccess total=2 pos=1 ; 407
CONS                 ; 408
CONS                 ; 409
RTN                  ; 410
LD     0 0          ;  <== queue_isempty  [Queue<T> q] (as blk) @src/app/VM.java(452,49) ; 411
CAR                 ; generateTupleAccess total=2 pos=0 ; 412
ATOM                 ; 413
LD     0 0          ; var q ; 414
CDR                 ; generateTupleAccess total=2 pos=1 ; 415
ATOM                 ; 416
MUL                  ; 417
RTN                  ; 418
LDC    0            ;  <== list_item  [Cons list, int n] (as blk) @src/app/VM.java(460,53) ; 419
LD     0 1          ; var n ; 420
CGT                  ; 421
SEL    428 430       ; 422
LD     0 1          ; var n ; 423
LDC    0            ; just constant from code ; 424
CEQ                  ; 425
SEL    431 434      ; IF? 11 ; 426
RTN                  ; 427
BRK                 ; branch@428 ; 428
JOIN                 ; 429
JOIN                ; branch@430 ; 430
LD     0 0          ; THEN: 11 ; 431
CAR                  ; 432
JOIN                 ; 433
LD     0 0          ; ELSE: 11 ; 434
CDR                  ; 435
LD     0 1          ; var n ; 436
LDC    1            ; just constant from code ; 437
SUB                  ; 438
LDF    419          ;  @list_item ; 439
AP     2             ; 440
JOIN                 ; 441
LDC    0            ;  <== list_item  [ListCons<T> list, int n] (as blk) @src/app/VM.java(469,59) ; 442
LD     0 1          ; var n ; 443
CGT                  ; 444
SEL    451 453       ; 445
LD     0 1          ; var n ; 446
LDC    0            ; just constant from code ; 447
CEQ                  ; 448
SEL    454 457      ; IF? 22 ; 449
RTN                  ; 450
BRK                 ; branch@451 ; 451
JOIN                 ; 452
JOIN                ; branch@453 ; 453
LD     0 0          ; THEN: 22 ; 454
CAR                  ; 455
JOIN                 ; 456
LD     0 0          ; ELSE: 22 ; 457
CDR                  ; 458
LD     0 1          ; var n ; 459
LDC    1            ; just constant from code ; 460
SUB                  ; 461
LDF    419          ;  @list_item ; 462
AP     2             ; 463
JOIN                 ; 464
LDC    0            ;  <== list_item_def  [Cons list, int index, Object deflt] (as blk) @src/app/VM.java(478,75) ; 465
LD     0 1          ; var index ; 466
CGT                  ; 467
SEL    470 472      ; IF? 23 ; 468
RTN                  ; 469
LD     0 2          ; THEN: 23 ; 470
JOIN                 ; 471
LD     0 1          ; ELSE: 23 ; 472
LDC    0            ; just constant from code ; 473
CEQ                  ; 474
SEL    477 480      ; IF? 91 ; 475
JOIN                 ; 476
LD     0 0          ; THEN: 91 ; 477
CAR                  ; 478
JOIN                 ; 479
LD     0 0          ; ELSE: 91 ; 480
CDR                  ; 481
LD     0 1          ; var index ; 482
LDC    1            ; just constant from code ; 483
SUB                  ; 484
LDF    419          ;  @list_item ; 485
AP     2             ; 486
JOIN                 ; 487
LDC    0            ;  <== queue_dequeue  [Queue<T> q] (as blk) @src/app/VM.java(487,60) ; 488
ST     0 1           ; 489
LD     0 0          ; var q ; 490
CAR                 ; generateTupleAccess total=2 pos=0 ; 491
ATOM                 ; 492
SEL    496 503       ; 493
LD     0 1          ; var retval ; 494
RTN                  ; 495
LD     0 0          ; branch@496 ; 496
CDR                 ; generateTupleAccess total=2 pos=1 ; 497
ATOM                 ; 498
LDC    1            ; for negation ; 499
SUB                  ; 500
SEL    515 526       ; 501
JOIN                 ; 502
LD     0 0          ; branch@503 ; 503
CAR                 ; generateTupleAccess total=2 pos=0 ; 504
CAR                  ; 505
LD     0 0          ; var q ; 506
CAR                 ; generateTupleAccess total=2 pos=0 ; 507
CDR                  ; 508
LD     0 0          ; var q ; 509
CDR                 ; generateTupleAccess total=2 pos=1 ; 510
CONS                 ; 511
CONS                 ; 512
ST     0 1           ; 513
JOIN                 ; 514
LD     0 0          ; branch@515 ; 515
CDR                 ; generateTupleAccess total=2 pos=1 ; 516
LDF    286          ;  @reverse ; 517
AP     1             ; 518
LDC    0            ; NULL literal ; 519
CONS                 ; 520
LDC 0               ; local var space ; 521
LDF    488          ;  @queue_dequeue ; 522
AP     2             ; 523
ST     0 1           ; 524
JOIN                 ; 525
BRK                 ; branch@526 ; 526
JOIN                 ; 527
LD     0 0          ;  <== length  [ListCons<T> list] (as blk) @src/app/VM.java(505,51) ; 528
LDC    0            ; just constant from code ; 529
LDF    642          ;  @elements_counter ; 530
AP     2             ; 531
RTN                  ; 532
LD     0 0          ;  <== filter  [ListCons<T> list, Function1<T,Integer> pred] (as blk) @src/app/VM.java(513,87) ; 533
LD     0 1          ; var pred ; 534
LDC    0            ; NULL literal ; 535
LDF    605          ;  @filter_acc ; 536
AP     3             ; 537
LDF    286          ;  @reverse ; 538
AP     1             ; 539
RTN                  ; 540
LD     0 0          ;  <== any  [ListCons<T> list, Function1<T,Integer> pred] (as blk) @src/app/VM.java(521,76) ; 541
ATOM                 ; 542
SEL    545 547      ; IF? 24 ; 543
RTN                  ; 544
LDC    0            ; THEN: 24 ; 545
JOIN                 ; 546
LD     0 0          ; ELSE: 24 ; 547
CAR                  ; 548
LD     0 1          ; var pred ; 549
AP     1             ; 550
LDC    1            ; just constant from code ; 551
CEQ                  ; 552
SEL    555 557      ; IF? 92 ; 553
JOIN                 ; 554
LDC    1            ; THEN: 92 ; 555
JOIN                 ; 556
LD     0 0          ; ELSE: 92 ; 557
CDR                  ; 558
LD     0 1          ; var pred ; 559
LDF    541          ;  @any ; 560
AP     2             ; 561
JOIN                 ; 562
LD     0 0          ;  <== noneof  [ListCons<T> list, Function1<T,Integer> pred] (as blk) @src/app/VM.java(532,79) ; 563
ATOM                 ; 564
SEL    567 569      ; IF? 25 ; 565
RTN                  ; 566
LDC    1            ; THEN: 25 ; 567
JOIN                 ; 568
LD     0 0          ; ELSE: 25 ; 569
CAR                  ; 570
LD     0 1          ; var pred ; 571
AP     1             ; 572
LDC    1            ; just constant from code ; 573
CEQ                  ; 574
SEL    577 579      ; IF? 93 ; 575
JOIN                 ; 576
LDC    0            ; THEN: 93 ; 577
JOIN                 ; 578
LD     0 0          ; ELSE: 93 ; 579
CDR                  ; 580
LD     0 1          ; var pred ; 581
LDF    563          ;  @noneof ; 582
AP     2             ; 583
JOIN                 ; 584
LD     0 0          ;  <== empty  [Cons d] (as blk) @src/app/VM.java(543,29) ; 585
ATOM                 ; 586
LDC    1            ; for negation ; 587
SUB                  ; 588
SEL    591 593      ; IF? 26 ; 589
RTN                  ; 590
LDC    0            ; THEN: 26 ; 591
JOIN                 ; 592
LDC    1            ; ELSE: 26 ; 593
JOIN                 ; 594
LD     0 0          ;  <== notempty  [Cons d] (as blk) @src/app/VM.java(551,32) ; 595
ATOM                 ; 596
LDC    1            ; for negation ; 597
SUB                  ; 598
SEL    601 603      ; IF? 27 ; 599
RTN                  ; 600
LDC    1            ; THEN: 27 ; 601
JOIN                 ; 602
LDC    0            ; ELSE: 27 ; 603
JOIN                 ; 604
LD     0 0          ;  <== filter_acc  [ListCons<T> list, Function1<T,Integer> pred, ListCons<T> acc] (as blk) @src/app/VM.java(559,108) ; 605
ATOM                 ; 606
SEL    609 611      ; IF? 8 ; 607
RTN                  ; 608
LD     0 2          ; THEN: 8 ; 609
JOIN                 ; 610
LD     0 0          ; ELSE: 8 ; 611
CDR                  ; 612
LD     0 1          ; var pred ; 613
LD     0 0          ; var list ; 614
CAR                  ; 615
LD     0 1          ; var pred ; 616
AP     1             ; 617
LDC    1            ; just constant from code ; 618
CEQ                  ; 619
SEL    624 629      ; IF? 94 ; 620
LDF    605          ;  @filter_acc ; 621
AP     3             ; 622
JOIN                 ; 623
LD     0 0          ; THEN: 94 ; 624
CAR                  ; 625
LD     0 2          ; var acc ; 626
CONS                 ; 627
JOIN                 ; 628
LD     0 2          ; ELSE: 94 ; 629
JOIN                 ; 630
LD     0 0          ;  <== map_height  [Cons map] (as blk) @src/app/VM.java(566,43) ; 631
LDC    0            ; just constant from code ; 632
LDF    642          ;  @elements_counter ; 633
AP     2             ; 634
RTN                  ; 635
LD     0 0          ;  <== map_width  [Cons map] (as blk) @src/app/VM.java(571,42) ; 636
CAR                  ; 637
LDC    0            ; just constant from code ; 638
LDF    642          ;  @elements_counter ; 639
AP     2             ; 640
RTN                  ; 641
LD     0 0          ;  <== elements_counter  [Cons list, int counter] (as blk) @src/app/VM.java(579,63) ; 642
ATOM                 ; 643
SEL    646 648      ; IF? 1 ; 644
RTN                  ; 645
LD     0 1          ; THEN: 1 ; 646
JOIN                 ; 647
LD     0 0          ; ELSE: 1 ; 648
CDR                  ; 649
LD     0 1          ; var counter ; 650
LDC    1            ; just constant from code ; 651
ADD                  ; 652
LDF    642          ;  @elements_counter ; 653
AP     2             ; 654
JOIN                 ; 655
LD     0 1          ;  <== zip_with  [Function2<A,B,C> f, ListCons<A> x, ListCons<B> y] (as blk) @src/app/VM.java(586,101) ; 656
ATOM                 ; 657
SEL    660 662      ; IF? 4 ; 658
RTN                  ; 659
LDC    0            ; THEN: 4 ; 660
JOIN                 ; 661
LD     0 2          ; ELSE: 4 ; 662
ATOM                 ; 663
SEL    666 668      ; IF? 95 ; 664
JOIN                 ; 665
LDC    0            ; THEN: 95 ; 666
JOIN                 ; 667
LD     0 1          ; ELSE: 95 ; 668
CAR                  ; 669
LD     0 2          ; var y ; 670
CAR                  ; 671
LD     0 0          ; var f ; 672
AP     2             ; 673
LD     0 0          ; var f ; 674
LD     0 1          ; var x ; 675
CDR                  ; 676
LD     0 2          ; var y ; 677
CDR                  ; 678
LDF    656          ;  @zip_with ; 679
AP     3             ; 680
CONS                 ; 681
JOIN                 ; 682
LD     0 1          ;  <== zip3_with  [Function3<A,B,C,R> f, ListCons<A> x, ListCons<B> y, ListCons<C> z] (as blk) @src/app/VM.java(594,123) ; 683
ATOM                 ; 684
SEL    687 689      ; IF? 10 ; 685
RTN                  ; 686
LDC    0            ; THEN: 10 ; 687
JOIN                 ; 688
LD     0 2          ; ELSE: 10 ; 689
ATOM                 ; 690
SEL    693 695      ; IF? 96 ; 691
JOIN                 ; 692
LDC    0            ; THEN: 96 ; 693
JOIN                 ; 694
LD     0 3          ; ELSE: 96 ; 695
ATOM                 ; 696
SEL    699 701      ; IF? 97 ; 697
JOIN                 ; 698
LDC    0            ; THEN: 97 ; 699
JOIN                 ; 700
LD     0 1          ; ELSE: 97 ; 701
CAR                  ; 702
LD     0 2          ; var y ; 703
CAR                  ; 704
LD     0 3          ; var z ; 705
CAR                  ; 706
LD     0 0          ; var f ; 707
AP     3             ; 708
LD     0 0          ; var f ; 709
LD     0 1          ; var x ; 710
CDR                  ; 711
LD     0 2          ; var y ; 712
CDR                  ; 713
LD     0 3          ; var z ; 714
CDR                  ; 715
LDF    683          ;  @zip3_with ; 716
AP     4             ; 717
CONS                 ; 718
JOIN                 ; 719
LD     0 0          ;  <== zip  [final ListCons<A> x, final ListCons<B> y] (as blk) @src/app/VM.java(603,93) ; 720
ATOM                 ; 721
SEL    724 726      ; IF? 28 ; 722
RTN                  ; 723
LDC    0            ; THEN: 28 ; 724
JOIN                 ; 725
LD     0 1          ; ELSE: 28 ; 726
ATOM                 ; 727
SEL    730 732      ; IF? 98 ; 728
JOIN                 ; 729
LDC    0            ; THEN: 98 ; 730
JOIN                 ; 731
LD     0 0          ; ELSE: 98 ; 732
CAR                  ; 733
LD     0 1          ; var y ; 734
CAR                  ; 735
CONS                 ; 736
LD     0 0          ; var x ; 737
CDR                  ; 738
LD     0 1          ; var y ; 739
CDR                  ; 740
LDF    720          ;  @zip ; 741
AP     2             ; 742
CONS                 ; 743
JOIN                 ; 744
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) @src/app/VM.java(613,71) ; 745
LD     0 0          ; var f ; 746
AP     1             ; 747
CAR                  ; 748
ST     0 3           ; 749
LD     0 2          ; var n ; 750
LDC    0            ; just constant from code ; 751
CEQ                  ; 752
SEL    755 759      ; IF? 29 ; 753
RTN                  ; 754
LD     0 3          ; THEN: 29 ; 755
LDC    0            ; NULL literal ; 756
CONS                 ; 757
JOIN                 ; 758
LD     0 3          ; ELSE: 29 ; 759
LD     0 0          ; var f ; 760
LD     0 1          ; var a ; 761
LD     0 0          ; var f ; 762
AP     1             ; 763
CDR                  ; 764
LD     0 2          ; var n ; 765
LDC    1            ; just constant from code ; 766
SUB                  ; 767
LDC 0               ; local var space ; 768
LDF    745          ;  @produce_n ; 769
AP     4             ; 770
CONS                 ; 771
JOIN                 ; 772
LD     0 0          ;  <== range_n  [int n] (as blk) @src/app/VM.java(619,51) ; 773
LDC    0            ; just constant from code ; 774
CEQ                  ; 775
SEL    778 782      ; IF? 2 ; 776
RTN                  ; 777
LD     0 0          ; THEN: 2 ; 778
LDC    0            ; NULL literal ; 779
CONS                 ; 780
JOIN                 ; 781
LD     0 0          ; ELSE: 2 ; 782
LD     0 0          ; var n ; 783
LDC    1            ; just constant from code ; 784
SUB                  ; 785
LDF    773          ;  @range_n ; 786
AP     1             ; 787
CONS                 ; 788
JOIN                 ; 789
LDC    1            ;  <== sorted_node_new  [int key, T val, int lev, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) @src/app/SortedMap.java(40,122) ; 790
LD     0 3          ; var lo ; 791
ATOM                 ; 792
LDC    1            ; for negation ; 793
SUB                  ; 794
SEL    814 817      ; IF? 30 ; 795
ADD                  ; 796
LD     0 4          ; var hi ; 797
ATOM                 ; 798
LDC    1            ; for negation ; 799
SUB                  ; 800
SEL    819 822      ; IF? 31 ; 801
ADD                  ; 802
LD     0 0          ; var key ; 803
LD     0 1          ; var val ; 804
LD     0 2          ; var lev ; 805
LD     0 3          ; var lo ; 806
LD     0 4          ; var hi ; 807
CONS                 ; 808
CONS                 ; 809
CONS                 ; 810
CONS                 ; 811
CONS                 ; 812
RTN                  ; 813
LD     0 3          ; THEN: 30 ; 814
CAR                 ; generateTupleAccess total=6 pos=0 ; 815
JOIN                 ; 816
LDC    0            ; ELSE: 30 ; 817
JOIN                 ; 818
LD     0 4          ; THEN: 31 ; 819
CAR                 ; generateTupleAccess total=6 pos=0 ; 820
JOIN                 ; 821
LDC    0            ; ELSE: 31 ; 822
JOIN                 ; 823
LD     0 0          ;  <== sorted_node_with_lev  [SortedMapNode<T> node, int lev] (as blk) @src/app/SortedMap.java(51,92) ; 824
CDR                 ; generateTupleAccess total=6 pos=1 ; 825
CAR                  ; 826
LD     0 0          ; var node ; 827
CDR                 ; generateTupleAccess total=6 pos=2 ; 828
CDR                  ; 829
CAR                  ; 830
LD     0 1          ; var lev ; 831
LD     0 0          ; var node ; 832
CDR                 ; generateTupleAccess total=6 pos=4 ; 833
CDR                  ; 834
CDR                  ; 835
CDR                  ; 836
CAR                  ; 837
LD     0 0          ; var node ; 838
CDR                 ; generateTupleAccess total=6 pos=5 ; 839
CDR                  ; 840
CDR                  ; 841
CDR                  ; 842
CDR                  ; 843
LDF    790          ;  @sorted_node_new ; 844
AP     5             ; 845
RTN                  ; 846
LD     0 0          ;  <== sorted_node_with_lo_hi  [SortedMapNode<T> node, SortedMapNode<T> lo, SortedMapNode<T> hi] (as blk) @src/app/SortedMap.java(56,127) ; 847
CDR                 ; generateTupleAccess total=6 pos=1 ; 848
CAR                  ; 849
LD     0 0          ; var node ; 850
CDR                 ; generateTupleAccess total=6 pos=2 ; 851
CDR                  ; 852
CAR                  ; 853
LD     0 0          ; var node ; 854
CDR                 ; generateTupleAccess total=6 pos=3 ; 855
CDR                  ; 856
CDR                  ; 857
CAR                  ; 858
LD     0 1          ; var lo ; 859
LD     0 2          ; var hi ; 860
LDF    790          ;  @sorted_node_new ; 861
AP     5             ; 862
RTN                  ; 863
LD     0 0          ;  <== sorted_node_with_lo  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) @src/app/SortedMap.java(61,103) ; 864
LD     0 1          ; var lo ; 865
LD     0 0          ; var node ; 866
CDR                 ; generateTupleAccess total=6 pos=5 ; 867
CDR                  ; 868
CDR                  ; 869
CDR                  ; 870
CDR                  ; 871
LDF    847          ;  @sorted_node_with_lo_hi ; 872
AP     3             ; 873
RTN                  ; 874
LD     0 0          ;  <== sorted_node_with_hi  [SortedMapNode<T> node, SortedMapNode<T> hi] (as blk) @src/app/SortedMap.java(66,103) ; 875
LD     0 0          ; var node ; 876
CDR                 ; generateTupleAccess total=6 pos=4 ; 877
CDR                  ; 878
CDR                  ; 879
CDR                  ; 880
CAR                  ; 881
LD     0 1          ; var hi ; 882
LDF    847          ;  @sorted_node_with_lo_hi ; 883
AP     3             ; 884
RTN                  ; 885
LD     0 0          ;  <== sorted_node_has  [SortedMapNode<T> node, int key] (as blk) @src/app/SortedMap.java(74,74) ; 886
ATOM                 ; 887
SEL    890 892      ; IF? 32 ; 888
RTN                  ; 889
LDC    0            ; THEN: 32 ; 890
JOIN                 ; 891
LD     0 1          ; ELSE: 32 ; 892
LD     0 0          ; var node ; 893
CDR                 ; generateTupleAccess total=6 pos=1 ; 894
CAR                  ; 895
CEQ                  ; 896
SEL    899 901      ; IF? 99 ; 897
JOIN                 ; 898
LDC    1            ; THEN: 99 ; 899
JOIN                 ; 900
LD     0 0          ; ELSE: 99 ; 901
CDR                 ; generateTupleAccess total=6 pos=1 ; 902
CAR                  ; 903
LD     0 1          ; var key ; 904
CGT                  ; 905
SEL    911 918      ; IF? 100 ; 906
LD     0 1          ; var key ; 907
LDF    886          ;  @sorted_node_has ; 908
AP     2             ; 909
JOIN                 ; 910
LD     0 0          ; THEN: 100 ; 911
CDR                 ; generateTupleAccess total=6 pos=4 ; 912
CDR                  ; 913
CDR                  ; 914
CDR                  ; 915
CAR                  ; 916
JOIN                 ; 917
LD     0 0          ; ELSE: 100 ; 918
CDR                 ; generateTupleAccess total=6 pos=5 ; 919
CDR                  ; 920
CDR                  ; 921
CDR                  ; 922
CDR                  ; 923
JOIN                 ; 924
LD     0 0          ;  <== sorted_node_get  [SortedMapNode<T> node, int key, T def] (as blk) @src/app/SortedMap.java(79,79) ; 925
ATOM                 ; 926
SEL    929 931      ; IF? 33 ; 927
RTN                  ; 928
LD     0 2          ; THEN: 33 ; 929
JOIN                 ; 930
LD     0 1          ; ELSE: 33 ; 931
LD     0 0          ; var node ; 932
CDR                 ; generateTupleAccess total=6 pos=1 ; 933
CAR                  ; 934
CEQ                  ; 935
SEL    938 943      ; IF? 101 ; 936
JOIN                 ; 937
LD     0 0          ; THEN: 101 ; 938
CDR                 ; generateTupleAccess total=6 pos=2 ; 939
CDR                  ; 940
CAR                  ; 941
JOIN                 ; 942
LD     0 0          ; ELSE: 101 ; 943
CDR                 ; generateTupleAccess total=6 pos=1 ; 944
CAR                  ; 945
LD     0 1          ; var key ; 946
CGT                  ; 947
SEL    954 961      ; IF? 102 ; 948
LD     0 1          ; var key ; 949
LD     0 2          ; var def ; 950
LDF    925          ;  @sorted_node_get ; 951
AP     3             ; 952
JOIN                 ; 953
LD     0 0          ; THEN: 102 ; 954
CDR                 ; generateTupleAccess total=6 pos=4 ; 955
CDR                  ; 956
CDR                  ; 957
CDR                  ; 958
CAR                  ; 959
JOIN                 ; 960
LD     0 0          ; ELSE: 102 ; 961
CDR                 ; generateTupleAccess total=6 pos=5 ; 962
CDR                  ; 963
CDR                  ; 964
CDR                  ; 965
CDR                  ; 966
JOIN                 ; 967
LD     0 0          ;  <== sorted_node_put  [SortedMapNode<T> node, int key, T val] (as blk) @src/app/SortedMap.java(84,94) ; 968
ATOM                 ; 969
SEL    972 980      ; IF? 34 ; 970
RTN                  ; 971
LD     0 1          ; THEN: 34 ; 972
LD     0 2          ; var val ; 973
LDC    0            ; just constant from code ; 974
LDC    0            ; NULL literal ; 975
LDC    0            ; NULL literal ; 976
LDF    790          ;  @sorted_node_new ; 977
AP     5             ; 978
JOIN                 ; 979
LD     0 1          ; ELSE: 34 ; 980
LD     0 0          ; var node ; 981
CDR                 ; generateTupleAccess total=6 pos=1 ; 982
CAR                  ; 983
CEQ                  ; 984
SEL    987 995      ; IF? 103 ; 985
JOIN                 ; 986
LD     0 2          ; THEN: 103 ; 987
LD     0 0          ; var node ; 988
CDR                 ; generateTupleAccess total=6 pos=2 ; 989
CDR                  ; 990
CAR                  ; 991
CEQ                  ; 992
SEL    1005 1007    ; IF? 104 ; 993
JOIN                 ; 994
LD     0 0          ; ELSE: 103 ; 995
CDR                 ; generateTupleAccess total=6 pos=1 ; 996
CAR                  ; 997
LD     0 1          ; var key ; 998
CGT                  ; 999
SEL    1029 1044    ; IF? 105 ; 1000
LDC 0               ; local var space ; 1001
LDF    1116         ;  @sorted_node_split ; 1002
AP     2             ; 1003
JOIN                 ; 1004
LD     0 0          ; THEN: 104 ; 1005
JOIN                 ; 1006
LD     0 1          ; ELSE: 104 ; 1007
LD     0 2          ; var val ; 1008
LD     0 0          ; var node ; 1009
CDR                 ; generateTupleAccess total=6 pos=3 ; 1010
CDR                  ; 1011
CDR                  ; 1012
CAR                  ; 1013
LD     0 0          ; var node ; 1014
CDR                 ; generateTupleAccess total=6 pos=4 ; 1015
CDR                  ; 1016
CDR                  ; 1017
CDR                  ; 1018
CAR                  ; 1019
LD     0 0          ; var node ; 1020
CDR                 ; generateTupleAccess total=6 pos=5 ; 1021
CDR                  ; 1022
CDR                  ; 1023
CDR                  ; 1024
CDR                  ; 1025
LDF    790          ;  @sorted_node_new ; 1026
AP     5             ; 1027
JOIN                 ; 1028
LD     0 0          ; THEN: 105 ; 1029
LD     0 0          ; var node ; 1030
CDR                 ; generateTupleAccess total=6 pos=4 ; 1031
CDR                  ; 1032
CDR                  ; 1033
CDR                  ; 1034
CAR                  ; 1035
LD     0 1          ; var key ; 1036
LD     0 2          ; var val ; 1037
LDF    968          ;  @sorted_node_put ; 1038
AP     3             ; 1039
LDC 0               ; local var space ; 1040
LDF    1062         ;  @sorted_node_skew ; 1041
AP     3             ; 1042
JOIN                 ; 1043
LD     0 0          ; ELSE: 105 ; 1044
LD     0 0          ; var node ; 1045
CDR                 ; generateTupleAccess total=6 pos=5 ; 1046
CDR                  ; 1047
CDR                  ; 1048
CDR                  ; 1049
CDR                  ; 1050
LD     0 1          ; var key ; 1051
LD     0 2          ; var val ; 1052
LDF    968          ;  @sorted_node_put ; 1053
AP     3             ; 1054
LDF    875          ;  @sorted_node_with_hi ; 1055
AP     2             ; 1056
LDC    0            ; NULL literal ; 1057
LDC 0               ; local var space ; 1058
LDF    1062         ;  @sorted_node_skew ; 1059
AP     3             ; 1060
JOIN                 ; 1061
LD     0 1          ;  <== sorted_node_skew  [SortedMapNode<T> node, SortedMapNode<T> lo] (as blk) @src/app/SortedMap.java(94,100) ; 1062
ATOM                 ; 1063
LDC    1            ; for negation ; 1064
SUB                  ; 1065
SEL    1077 1079    ; IF? 35 ; 1066
ST     0 1           ; 1067
LD     0 0          ; var node ; 1068
LD     0 1          ; var lo ; 1069
LDF    864          ;  @sorted_node_with_lo ; 1070
AP     2             ; 1071
ST     0 2           ; 1072
LD     0 1          ; var lo ; 1073
ATOM                 ; 1074
SEL    1086 1088    ; IF? 36 ; 1075
RTN                  ; 1076
LD     0 1          ; THEN: 35 ; 1077
JOIN                 ; 1078
LD     0 0          ; ELSE: 35 ; 1079
CDR                 ; generateTupleAccess total=6 pos=4 ; 1080
CDR                  ; 1081
CDR                  ; 1082
CDR                  ; 1083
CAR                  ; 1084
JOIN                 ; 1085
LD     0 2          ; THEN: 36 ; 1086
JOIN                 ; 1087
LD     0 0          ; ELSE: 36 ; 1088
CDR                 ; generateTupleAccess total=6 pos=3 ; 1089
CDR                  ; 1090
CDR                  ; 1091
CAR                  ; 1092
LD     0 1          ; var lo ; 1093
CDR                 ; generateTupleAccess total=6 pos=3 ; 1094
CDR                  ; 1095
CDR                  ; 1096
CAR                  ; 1097
CGT                  ; 1098
SEL    1101 1103    ; IF? 106 ; 1099
JOIN                 ; 1100
LD     0 2          ; THEN: 106 ; 1101
JOIN                 ; 1102
LD     0 1          ; ELSE: 106 ; 1103
LD     0 0          ; var node ; 1104
LD     0 1          ; var lo ; 1105
CDR                 ; generateTupleAccess total=6 pos=5 ; 1106
CDR                  ; 1107
CDR                  ; 1108
CDR                  ; 1109
CDR                  ; 1110
LDF    864          ;  @sorted_node_with_lo ; 1111
AP     2             ; 1112
LDF    875          ;  @sorted_node_with_hi ; 1113
AP     2             ; 1114
JOIN                 ; 1115
LD     0 0          ;  <== sorted_node_split  [SortedMapNode<T> node] (as blk) @src/app/SortedMap.java(101,80) ; 1116
CDR                 ; generateTupleAccess total=6 pos=5 ; 1117
CDR                  ; 1118
CDR                  ; 1119
CDR                  ; 1120
CDR                  ; 1121
ST     0 1           ; 1122
LD     0 1          ; var hi ; 1123
ATOM                 ; 1124
SEL    1127 1129    ; IF? 37 ; 1125
RTN                  ; 1126
LD     0 0          ; THEN: 37 ; 1127
JOIN                 ; 1128
LD     0 1          ; ELSE: 37 ; 1129
CDR                 ; generateTupleAccess total=6 pos=5 ; 1130
CDR                  ; 1131
CDR                  ; 1132
CDR                  ; 1133
CDR                  ; 1134
ATOM                 ; 1135
SEL    1138 1140    ; IF? 107 ; 1136
JOIN                 ; 1137
LD     0 0          ; THEN: 107 ; 1138
JOIN                 ; 1139
LD     0 0          ; ELSE: 107 ; 1140
CDR                 ; generateTupleAccess total=6 pos=3 ; 1141
CDR                  ; 1142
CDR                  ; 1143
CAR                  ; 1144
LD     0 1          ; var hi ; 1145
CDR                 ; generateTupleAccess total=6 pos=5 ; 1146
CDR                  ; 1147
CDR                  ; 1148
CDR                  ; 1149
CDR                  ; 1150
CDR                 ; generateTupleAccess total=6 pos=3 ; 1151
CDR                  ; 1152
CDR                  ; 1153
CAR                  ; 1154
CGT                  ; 1155
SEL    1158 1160    ; IF? 108 ; 1156
JOIN                 ; 1157
LD     0 0          ; THEN: 108 ; 1158
JOIN                 ; 1159
LD     0 1          ; ELSE: 108 ; 1160
CDR                 ; generateTupleAccess total=6 pos=1 ; 1161
CAR                  ; 1162
LD     0 1          ; var hi ; 1163
CDR                 ; generateTupleAccess total=6 pos=2 ; 1164
CDR                  ; 1165
CAR                  ; 1166
LD     0 1          ; var hi ; 1167
CDR                 ; generateTupleAccess total=6 pos=3 ; 1168
CDR                  ; 1169
CDR                  ; 1170
CAR                  ; 1171
LDC    1            ; just constant from code ; 1172
ADD                  ; 1173
LD     0 0          ; var node ; 1174
LD     0 1          ; var hi ; 1175
CDR                 ; generateTupleAccess total=6 pos=4 ; 1176
CDR                  ; 1177
CDR                  ; 1178
CDR                  ; 1179
CAR                  ; 1180
LDF    875          ;  @sorted_node_with_hi ; 1181
AP     2             ; 1182
LD     0 1          ; var hi ; 1183
CDR                 ; generateTupleAccess total=6 pos=5 ; 1184
CDR                  ; 1185
CDR                  ; 1186
CDR                  ; 1187
CDR                  ; 1188
LDF    790          ;  @sorted_node_new ; 1189
AP     5             ; 1190
JOIN                 ; 1191
LD     0 0          ;  <== sorted_node_walk  [SortedMapNode<T> node, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) @src/app/SortedMap.java(107,114) ; 1192
ATOM                 ; 1193
SEL    1196 1198    ; IF? 38 ; 1194
RTN                  ; 1195
LD     0 1          ; THEN: 38 ; 1196
JOIN                 ; 1197
LD     0 0          ; ELSE: 38 ; 1198
CDR                 ; generateTupleAccess total=6 pos=5 ; 1199
CDR                  ; 1200
CDR                  ; 1201
CDR                  ; 1202
CDR                  ; 1203
ATOM                 ; 1204
LDC    1            ; for negation ; 1205
SUB                  ; 1206
SEL    1209 1239    ; IF? 109 ; 1207
JOIN                 ; 1208
LD     0 0          ; THEN: 109 ; 1209
CDR                 ; generateTupleAccess total=6 pos=5 ; 1210
CDR                  ; 1211
CDR                  ; 1212
CDR                  ; 1213
CDR                  ; 1214
LD     0 0          ; var node ; 1215
CDR                 ; generateTupleAccess total=6 pos=4 ; 1216
CDR                  ; 1217
CDR                  ; 1218
CDR                  ; 1219
CAR                  ; 1220
LD     0 1          ; var acc ; 1221
LD     0 2          ; var fun ; 1222
LDF    1192         ;  @sorted_node_walk ; 1223
AP     3             ; 1224
LD     0 0          ; var node ; 1225
CDR                 ; generateTupleAccess total=6 pos=1 ; 1226
CAR                  ; 1227
LD     0 0          ; var node ; 1228
CDR                 ; generateTupleAccess total=6 pos=2 ; 1229
CDR                  ; 1230
CAR                  ; 1231
CONS                 ; 1232
LD     0 2          ; var fun ; 1233
AP     2             ; 1234
LD     0 2          ; var fun ; 1235
LDF    1192         ;  @sorted_node_walk ; 1236
AP     3             ; 1237
JOIN                 ; 1238
LD     0 0          ; ELSE: 109 ; 1239
CDR                 ; generateTupleAccess total=6 pos=4 ; 1240
CDR                  ; 1241
CDR                  ; 1242
CDR                  ; 1243
CAR                  ; 1244
LD     0 1          ; var acc ; 1245
LD     0 2          ; var fun ; 1246
LDF    1192         ;  @sorted_node_walk ; 1247
AP     3             ; 1248
LD     0 0          ; var node ; 1249
CDR                 ; generateTupleAccess total=6 pos=1 ; 1250
CAR                  ; 1251
LD     0 0          ; var node ; 1252
CDR                 ; generateTupleAccess total=6 pos=2 ; 1253
CDR                  ; 1254
CAR                  ; 1255
CONS                 ; 1256
LD     0 2          ; var fun ; 1257
AP     2             ; 1258
JOIN                 ; 1259
LD     0 0          ;  <== sorted_map_count  [SortedMap<T> m] (as blk) @src/app/SortedMap.java(115,59) ; 1260
CAR                 ; generateTupleAccess total=2 pos=0 ; 1261
ATOM                 ; 1262
LDC    1            ; for negation ; 1263
SUB                  ; 1264
SEL    1267 1271    ; IF? 39 ; 1265
RTN                  ; 1266
LD     0 0          ; THEN: 39 ; 1267
CAR                 ; generateTupleAccess total=2 pos=0 ; 1268
CAR                 ; generateTupleAccess total=6 pos=0 ; 1269
JOIN                 ; 1270
LDC    0            ; ELSE: 39 ; 1271
JOIN                 ; 1272
LD     0 0          ;  <== sorted_map_contains  [SortedMap<T> m, int key] (as blk) @src/app/SortedMap.java(120,71) ; 1273
CAR                 ; generateTupleAccess total=2 pos=0 ; 1274
ATOM                 ; 1275
LDC    1            ; for negation ; 1276
SUB                  ; 1277
SEL    1280 1286    ; IF? 40 ; 1278
RTN                  ; 1279
LD     0 0          ; THEN: 40 ; 1280
CAR                 ; generateTupleAccess total=2 pos=0 ; 1281
LD     0 1          ; var key ; 1282
LDF    886          ;  @sorted_node_has ; 1283
AP     2             ; 1284
JOIN                 ; 1285
LDC    0            ; ELSE: 40 ; 1286
JOIN                 ; 1287
LD     0 0          ;  <== sorted_map_get  [SortedMap<T> m, int key, T def] (as blk) @src/app/SortedMap.java(125,71) ; 1288
CAR                 ; generateTupleAccess total=2 pos=0 ; 1289
ATOM                 ; 1290
LDC    1            ; for negation ; 1291
SUB                  ; 1292
SEL    1295 1302    ; IF? 41 ; 1293
RTN                  ; 1294
LD     0 0          ; THEN: 41 ; 1295
CAR                 ; generateTupleAccess total=2 pos=0 ; 1296
LD     0 1          ; var key ; 1297
LD     0 2          ; var def ; 1298
LDF    925          ;  @sorted_node_get ; 1299
AP     3             ; 1300
JOIN                 ; 1301
LD     0 2          ; ELSE: 41 ; 1302
JOIN                 ; 1303
LD     0 0          ;  <== sorted_map_assoc  [SortedMap<T> m, int key, T val] (as blk) @src/app/SortedMap.java(130,84) ; 1304
CAR                 ; generateTupleAccess total=2 pos=0 ; 1305
LD     0 1          ; var key ; 1306
LD     0 2          ; var val ; 1307
LDF    968          ;  @sorted_node_put ; 1308
AP     3             ; 1309
LDC    0            ; just constant from code ; 1310
CONS                 ; 1311
RTN                  ; 1312
LD     0 1          ;  <== sorted_map_assoc_all  [SortedMap<T> m, ListCons<Tuple<Integer,T>> l] (as blk) @src/app/SortedMap.java(135,103) ; 1313
LD     0 0          ; var m ; 1314
LDF    10497        ;  @lambda_1006 ; 1315
LDF    373          ;  @fold0 ; 1316
AP     3             ; 1317
RTN                  ; 1318
LD     0 0          ;  <== sorted_map_walk  [SortedMap<T> map, X acc, Function2<X,Tuple<Integer,T>,X> fun] (as blk) @src/app/SortedMap.java(142,108) ; 1319
CAR                 ; generateTupleAccess total=2 pos=0 ; 1320
ATOM                 ; 1321
SEL    1324 1326    ; IF? 42 ; 1322
RTN                  ; 1323
LD     0 1          ; THEN: 42 ; 1324
JOIN                 ; 1325
LD     0 0          ; ELSE: 42 ; 1326
CAR                 ; generateTupleAccess total=2 pos=0 ; 1327
LD     0 1          ; var acc ; 1328
LD     0 2          ; var fun ; 1329
LDF    1192         ;  @sorted_node_walk ; 1330
AP     3             ; 1331
JOIN                 ; 1332
LD     0 1          ;  <== ghcstate_read_val  [GHCState state, Cons<Integer,Integer> val_cons] (as blk) @src/app/LambdaGhostEmulator.java(22,89) ; 1333
CAR                  ; 1334
ST     0 2           ; 1335
LD     0 1          ; var val_cons ; 1336
CDR                  ; 1337
ST     0 3           ; 1338
LD     0 2          ; var val_tag ; 1339
LDC    3            ; just constant from code ; 1340
CGT                  ; 1341
SEL    1348 1350     ; 1342
LD     0 2          ; var val_tag ; 1343
LDC    0            ; Named Const = Args.REGISTER ; 1344
CEQ                  ; 1345
SEL    1351 1359    ; IF? 43 ; 1346
RTN                  ; 1347
BRK                 ; branch@1348 ; 1348
JOIN                 ; 1349
JOIN                ; branch@1350 ; 1350
LD     0 0          ; THEN: 43 ; 1351
CDR                 ; generateTupleAccess total=3 pos=1 ; 1352
CAR                  ; 1353
LD     0 3          ; var val ; 1354
LDC    0            ; just constant from code ; 1355
LDF    1288         ;  @sorted_map_get ; 1356
AP     3             ; 1357
JOIN                 ; 1358
LD     0 2          ; ELSE: 43 ; 1359
LDC    1            ; Named Const = Args.REGISTER_INDIRECT ; 1360
CEQ                  ; 1361
SEL    1364 1378    ; IF? 110 ; 1362
JOIN                 ; 1363
LD     0 0          ; THEN: 110 ; 1364
CDR                 ; generateTupleAccess total=3 pos=2 ; 1365
CDR                  ; 1366
LD     0 0          ; var state ; 1367
CDR                 ; generateTupleAccess total=3 pos=1 ; 1368
CAR                  ; 1369
LD     0 3          ; var val ; 1370
LDC    0            ; just constant from code ; 1371
LDF    1288         ;  @sorted_map_get ; 1372
AP     3             ; 1373
LDC    0            ; just constant from code ; 1374
LDF    1288         ;  @sorted_map_get ; 1375
AP     3             ; 1376
JOIN                 ; 1377
LD     0 2          ; ELSE: 110 ; 1378
LDC    2            ; Named Const = Args.CONSTANT ; 1379
CEQ                  ; 1380
SEL    1383 1385    ; IF? 111 ; 1381
JOIN                 ; 1382
LD     0 3          ; THEN: 111 ; 1383
JOIN                 ; 1384
LD     0 0          ; ELSE: 111 ; 1385
CDR                 ; generateTupleAccess total=3 pos=2 ; 1386
CDR                  ; 1387
LD     0 3          ; var val ; 1388
LDC    0            ; just constant from code ; 1389
LDF    1288         ;  @sorted_map_get ; 1390
AP     3             ; 1391
JOIN                 ; 1392
LD     0 1          ;  <== ghcstate_write_val  [GHCState state, Cons arg_cons, Integer val] (as blk) @src/app/LambdaGhostEmulator.java(33,90) ; 1393
CAR                  ; 1394
ST     0 3           ; 1395
LD     0 3          ; var arg_tag ; 1396
LDC    3            ; just constant from code ; 1397
CGT                  ; 1398
SEL    1409 1411     ; 1399
LD     0 3          ; var arg_tag ; 1400
LDC    2            ; just constant from code ; 1401
CEQ                  ; 1402
SEL    1412 1414     ; 1403
LD     0 3          ; var arg_tag ; 1404
LDC    0            ; just constant from code ; 1405
CEQ                  ; 1406
SEL    1415 1431    ; IF? 44 ; 1407
RTN                  ; 1408
BRK                 ; branch@1409 ; 1409
JOIN                 ; 1410
JOIN                ; branch@1411 ; 1411
BRK                 ; branch@1412 ; 1412
JOIN                 ; 1413
JOIN                ; branch@1414 ; 1414
LD     0 0          ; THEN: 44 ; 1415
CAR                 ; generateTupleAccess total=3 pos=0 ; 1416
LD     0 0          ; var state ; 1417
CDR                 ; generateTupleAccess total=3 pos=1 ; 1418
CAR                  ; 1419
LD     0 1          ; var arg_cons ; 1420
CDR                  ; 1421
LD     0 2          ; var val ; 1422
LDF    1304         ;  @sorted_map_assoc ; 1423
AP     3             ; 1424
LD     0 0          ; var state ; 1425
CDR                 ; generateTupleAccess total=3 pos=2 ; 1426
CDR                  ; 1427
CONS                 ; 1428
CONS                 ; 1429
JOIN                 ; 1430
LD     0 3          ; ELSE: 44 ; 1431
LDC    1            ; just constant from code ; 1432
CEQ                  ; 1433
SEL    1436 1458    ; IF? 112 ; 1434
JOIN                 ; 1435
LD     0 0          ; THEN: 112 ; 1436
CAR                 ; generateTupleAccess total=3 pos=0 ; 1437
LD     0 0          ; var state ; 1438
CDR                 ; generateTupleAccess total=3 pos=1 ; 1439
CAR                  ; 1440
LD     0 0          ; var state ; 1441
CDR                 ; generateTupleAccess total=3 pos=1 ; 1442
CAR                  ; 1443
LD     0 1          ; var arg_cons ; 1444
CDR                  ; 1445
LDC    0            ; just constant from code ; 1446
LDF    1288         ;  @sorted_map_get ; 1447
AP     3             ; 1448
LD     0 2          ; var val ; 1449
LDF    1304         ;  @sorted_map_assoc ; 1450
AP     3             ; 1451
LD     0 0          ; var state ; 1452
CDR                 ; generateTupleAccess total=3 pos=2 ; 1453
CDR                  ; 1454
CONS                 ; 1455
CONS                 ; 1456
JOIN                 ; 1457
LD     0 0          ; ELSE: 112 ; 1458
CAR                 ; generateTupleAccess total=3 pos=0 ; 1459
LD     0 0          ; var state ; 1460
CDR                 ; generateTupleAccess total=3 pos=1 ; 1461
CAR                  ; 1462
LD     0 0          ; var state ; 1463
CDR                 ; generateTupleAccess total=3 pos=2 ; 1464
CDR                  ; 1465
LD     0 1          ; var arg_cons ; 1466
CDR                  ; 1467
LD     0 2          ; var val ; 1468
LDF    1304         ;  @sorted_map_assoc ; 1469
AP     3             ; 1470
CONS                 ; 1471
CONS                 ; 1472
JOIN                 ; 1473
LD     0 0          ;  <== ghcstate_assoc  [GHCState state, Cons arg_cons, Cons val_cons] (as blk) @src/app/LambdaGhostEmulator.java(44,88) ; 1474
LD     0 2          ; var val_cons ; 1475
LDC 0               ; local var space ; 1476
LDC 0               ; local var space ; 1477
LDF    1333         ;  @ghcstate_read_val ; 1478
AP     4             ; 1479
ST     0 3           ; 1480
LD     0 0          ; var state ; 1481
LD     0 1          ; var arg_cons ; 1482
LD     0 3          ; var val ; 1483
LDC 0               ; local var space ; 1484
LDF    1393         ;  @ghcstate_write_val ; 1485
AP     4             ; 1486
RTN                  ; 1487
LD     0 0          ;  <== processGhostInfoRequest  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer index, int requestType] (as blk) @src/app/LambdaGhostEmulator.java(50,138) ; 1488
CDR                 ; generateTupleAccess total=4 pos=2 ; 1489
CDR                  ; 1490
CAR                  ; 1491
LD     0 3          ; var index ; 1492
LD     0 1          ; var state ; 1493
CAR                 ; generateTupleAccess total=3 pos=0 ; 1494
LDF    465          ;  @list_item_def ; 1495
AP     3             ; 1496
ST     0 5           ; 1497
LDC    4            ; just constant from code ; 1498
LD     0 4          ; var requestType ; 1499
CEQ                  ; 1500
SEL    1503 1525    ; IF? 45 ; 1501
RTN                  ; 1502
LD     0 5          ; THEN: 45 ; 1503
LD     0 1          ; var state ; 1504
CDR                 ; generateTupleAccess total=3 pos=1 ; 1505
CAR                  ; 1506
LDC    0            ; just constant from code ; 1507
LD     0 2          ; var ghostInfo ; 1508
CAR                 ; generateTupleAccess total=3 pos=0 ; 1509
CAR                 ; generateTupleAccess total=2 pos=0 ; 1510
LDF    1304         ;  @sorted_map_assoc ; 1511
AP     3             ; 1512
LDC    1            ; just constant from code ; 1513
LD     0 2          ; var ghostInfo ; 1514
CAR                 ; generateTupleAccess total=3 pos=0 ; 1515
CDR                 ; generateTupleAccess total=2 pos=1 ; 1516
LDF    1304         ;  @sorted_map_assoc ; 1517
AP     3             ; 1518
LD     0 1          ; var state ; 1519
CDR                 ; generateTupleAccess total=3 pos=2 ; 1520
CDR                  ; 1521
CONS                 ; 1522
CONS                 ; 1523
JOIN                 ; 1524
LDC    5            ; ELSE: 45 ; 1525
LD     0 4          ; var requestType ; 1526
CEQ                  ; 1527
SEL    1530 1554    ; IF? 113 ; 1528
JOIN                 ; 1529
LD     0 5          ; THEN: 113 ; 1530
LD     0 1          ; var state ; 1531
CDR                 ; generateTupleAccess total=3 pos=1 ; 1532
CAR                  ; 1533
LDC    0            ; just constant from code ; 1534
LD     0 5          ; var gs ; 1535
CDR                 ; generateTupleAccess total=3 pos=1 ; 1536
CAR                  ; 1537
CAR                 ; generateTupleAccess total=2 pos=0 ; 1538
LDF    1304         ;  @sorted_map_assoc ; 1539
AP     3             ; 1540
LDC    1            ; just constant from code ; 1541
LD     0 5          ; var gs ; 1542
CDR                 ; generateTupleAccess total=3 pos=1 ; 1543
CAR                  ; 1544
CDR                 ; generateTupleAccess total=2 pos=1 ; 1545
LDF    1304         ;  @sorted_map_assoc ; 1546
AP     3             ; 1547
LD     0 1          ; var state ; 1548
CDR                 ; generateTupleAccess total=3 pos=2 ; 1549
CDR                  ; 1550
CONS                 ; 1551
CONS                 ; 1552
JOIN                 ; 1553
LD     0 5          ; ELSE: 113 ; 1554
LD     0 1          ; var state ; 1555
CDR                 ; generateTupleAccess total=3 pos=1 ; 1556
CAR                  ; 1557
LDC    0            ; just constant from code ; 1558
LD     0 5          ; var gs ; 1559
CAR                 ; generateTupleAccess total=3 pos=0 ; 1560
LDF    1304         ;  @sorted_map_assoc ; 1561
AP     3             ; 1562
LDC    1            ; just constant from code ; 1563
LD     0 5          ; var gs ; 1564
CDR                 ; generateTupleAccess total=3 pos=2 ; 1565
CDR                  ; 1566
LDF    1304         ;  @sorted_map_assoc ; 1567
AP     3             ; 1568
LD     0 1          ; var state ; 1569
CDR                 ; generateTupleAccess total=3 pos=2 ; 1570
CDR                  ; 1571
CONS                 ; 1572
CONS                 ; 1573
JOIN                 ; 1574
LD     0 1          ;  <== processGhostInt  [WorldState world, GHCState state, GhostInfo ghostInfo, Integer num, Cons arg] (as blk) @src/app/LambdaGhostEmulator.java(59,121) ; 1575
CAR                 ; generateTupleAccess total=3 pos=0 ; 1576
ST     0 5           ; 1577
LD     0 2          ; var ghostInfo ; 1578
CDR                 ; generateTupleAccess total=3 pos=2 ; 1579
CDR                  ; 1580
ST     0 6           ; 1581
LDC    0            ; just constant from code ; 1582
LD     0 3          ; var num ; 1583
CEQ                  ; 1584
SEL    1587 1610    ; IF? 46 ; 1585
RTN                  ; 1586
LD     0 5          ; THEN: 46 ; 1587
CAR                 ; generateTupleAccess total=3 pos=0 ; 1588
LD     0 5          ; var gs ; 1589
CDR                 ; generateTupleAccess total=3 pos=1 ; 1590
CAR                  ; 1591
LD     0 1          ; var state ; 1592
CDR                 ; generateTupleAccess total=3 pos=1 ; 1593
CAR                  ; 1594
LDC    0            ; just constant from code ; 1595
LDC    0            ; just constant from code ; 1596
LDF    1288         ;  @sorted_map_get ; 1597
AP     3             ; 1598
CONS                 ; 1599
CONS                 ; 1600
LD     0 1          ; var state ; 1601
CDR                 ; generateTupleAccess total=3 pos=1 ; 1602
CAR                  ; 1603
LD     0 1          ; var state ; 1604
CDR                 ; generateTupleAccess total=3 pos=2 ; 1605
CDR                  ; 1606
CONS                 ; 1607
CONS                 ; 1608
JOIN                 ; 1609
LDC    1            ; ELSE: 46 ; 1610
LD     0 3          ; var num ; 1611
CEQ                  ; 1612
SEL    1615 1643    ; IF? 114 ; 1613
JOIN                 ; 1614
LD     0 5          ; THEN: 114 ; 1615
LD     0 1          ; var state ; 1616
CDR                 ; generateTupleAccess total=3 pos=1 ; 1617
CAR                  ; 1618
LDC    0            ; just constant from code ; 1619
LD     0 0          ; var world ; 1620
CDR                 ; generateTupleAccess total=4 pos=1 ; 1621
CAR                  ; 1622
CDR                 ; generateTupleAccess total=5 pos=1 ; 1623
CAR                  ; 1624
CAR                 ; generateTupleAccess total=2 pos=0 ; 1625
LDF    1304         ;  @sorted_map_assoc ; 1626
AP     3             ; 1627
LDC    1            ; just constant from code ; 1628
LD     0 0          ; var world ; 1629
CDR                 ; generateTupleAccess total=4 pos=1 ; 1630
CAR                  ; 1631
CDR                 ; generateTupleAccess total=5 pos=1 ; 1632
CAR                  ; 1633
CDR                 ; generateTupleAccess total=2 pos=1 ; 1634
LDF    1304         ;  @sorted_map_assoc ; 1635
AP     3             ; 1636
LD     0 1          ; var state ; 1637
CDR                 ; generateTupleAccess total=3 pos=2 ; 1638
CDR                  ; 1639
CONS                 ; 1640
CONS                 ; 1641
JOIN                 ; 1642
LDC    2            ; ELSE: 114 ; 1643
LD     0 3          ; var num ; 1644
CEQ                  ; 1645
SEL    1648 1676    ; IF? 115 ; 1646
JOIN                 ; 1647
LD     0 5          ; THEN: 115 ; 1648
LD     0 1          ; var state ; 1649
CDR                 ; generateTupleAccess total=3 pos=1 ; 1650
CAR                  ; 1651
LDC    0            ; just constant from code ; 1652
LD     0 0          ; var world ; 1653
CDR                 ; generateTupleAccess total=4 pos=1 ; 1654
CAR                  ; 1655
CDR                 ; generateTupleAccess total=5 pos=1 ; 1656
CAR                  ; 1657
CAR                 ; generateTupleAccess total=2 pos=0 ; 1658
LDF    1304         ;  @sorted_map_assoc ; 1659
AP     3             ; 1660
LDC    1            ; just constant from code ; 1661
LD     0 0          ; var world ; 1662
CDR                 ; generateTupleAccess total=4 pos=1 ; 1663
CAR                  ; 1664
CDR                 ; generateTupleAccess total=5 pos=1 ; 1665
CAR                  ; 1666
CDR                 ; generateTupleAccess total=2 pos=1 ; 1667
LDF    1304         ;  @sorted_map_assoc ; 1668
AP     3             ; 1669
LD     0 1          ; var state ; 1670
CDR                 ; generateTupleAccess total=3 pos=2 ; 1671
CDR                  ; 1672
CONS                 ; 1673
CONS                 ; 1674
JOIN                 ; 1675
LDC    3            ; ELSE: 115 ; 1676
LD     0 3          ; var num ; 1677
CEQ                  ; 1678
SEL    1681 1695    ; IF? 116 ; 1679
JOIN                 ; 1680
LD     0 5          ; THEN: 116 ; 1681
LD     0 1          ; var state ; 1682
CDR                 ; generateTupleAccess total=3 pos=1 ; 1683
CAR                  ; 1684
LDC    0            ; just constant from code ; 1685
LD     0 6          ; var currentGhostIndex ; 1686
LDF    1304         ;  @sorted_map_assoc ; 1687
AP     3             ; 1688
LD     0 1          ; var state ; 1689
CDR                 ; generateTupleAccess total=3 pos=2 ; 1690
CDR                  ; 1691
CONS                 ; 1692
CONS                 ; 1693
JOIN                 ; 1694
LDC    4            ; ELSE: 116 ; 1695
LD     0 3          ; var num ; 1696
CEQ                  ; 1697
SEL    1700 1715    ; IF? 117 ; 1698
JOIN                 ; 1699
LD     0 0          ; THEN: 117 ; 1700
LD     0 1          ; var state ; 1701
LD     0 2          ; var ghostInfo ; 1702
LD     0 1          ; var state ; 1703
CDR                 ; generateTupleAccess total=3 pos=1 ; 1704
CAR                  ; 1705
LDC    0            ; just constant from code ; 1706
LDC    0            ; just constant from code ; 1707
LDF    1288         ;  @sorted_map_get ; 1708
AP     3             ; 1709
LDC    4            ; just constant from code ; 1710
LDC 0               ; local var space ; 1711
LDF    1488         ;  @processGhostInfoRequest ; 1712
AP     6             ; 1713
JOIN                 ; 1714
LDC    5            ; ELSE: 117 ; 1715
LD     0 3          ; var num ; 1716
CEQ                  ; 1717
SEL    1720 1735    ; IF? 118 ; 1718
JOIN                 ; 1719
LD     0 0          ; THEN: 118 ; 1720
LD     0 1          ; var state ; 1721
LD     0 2          ; var ghostInfo ; 1722
LD     0 1          ; var state ; 1723
CDR                 ; generateTupleAccess total=3 pos=1 ; 1724
CAR                  ; 1725
LDC    0            ; just constant from code ; 1726
LDC    0            ; just constant from code ; 1727
LDF    1288         ;  @sorted_map_get ; 1728
AP     3             ; 1729
LDC    5            ; just constant from code ; 1730
LDC 0               ; local var space ; 1731
LDF    1488         ;  @processGhostInfoRequest ; 1732
AP     6             ; 1733
JOIN                 ; 1734
LDC    6            ; ELSE: 118 ; 1735
LD     0 3          ; var num ; 1736
CEQ                  ; 1737
SEL    1740 1755    ; IF? 119 ; 1738
JOIN                 ; 1739
LD     0 0          ; THEN: 119 ; 1740
LD     0 1          ; var state ; 1741
LD     0 2          ; var ghostInfo ; 1742
LD     0 1          ; var state ; 1743
CDR                 ; generateTupleAccess total=3 pos=1 ; 1744
CAR                  ; 1745
LDC    0            ; just constant from code ; 1746
LDC    0            ; just constant from code ; 1747
LDF    1288         ;  @sorted_map_get ; 1748
AP     3             ; 1749
LDC    6            ; just constant from code ; 1750
LDC 0               ; local var space ; 1751
LDF    1488         ;  @processGhostInfoRequest ; 1752
AP     6             ; 1753
JOIN                 ; 1754
LDC    7            ; ELSE: 119 ; 1755
LD     0 3          ; var num ; 1756
CEQ                  ; 1757
SEL    1760 1791    ; IF? 120 ; 1758
JOIN                 ; 1759
LD     0 5          ; THEN: 120 ; 1760
LD     0 1          ; var state ; 1761
CDR                 ; generateTupleAccess total=3 pos=1 ; 1762
CAR                  ; 1763
LDC    0            ; just constant from code ; 1764
LD     0 0          ; var world ; 1765
CAR                 ; generateTupleAccess total=4 pos=0 ; 1766
LD     0 1          ; var state ; 1767
CDR                 ; generateTupleAccess total=3 pos=1 ; 1768
CAR                  ; 1769
LDC    0            ; just constant from code ; 1770
LDC    0            ; just constant from code ; 1771
LDF    1288         ;  @sorted_map_get ; 1772
AP     3             ; 1773
LD     0 1          ; var state ; 1774
CDR                 ; generateTupleAccess total=3 pos=1 ; 1775
CAR                  ; 1776
LDC    1            ; just constant from code ; 1777
LDC    0            ; just constant from code ; 1778
LDF    1288         ;  @sorted_map_get ; 1779
AP     3             ; 1780
LDF    4220         ;  @getMapItem ; 1781
AP     3             ; 1782
LDF    1304         ;  @sorted_map_assoc ; 1783
AP     3             ; 1784
LD     0 1          ; var state ; 1785
CDR                 ; generateTupleAccess total=3 pos=2 ; 1786
CDR                  ; 1787
CONS                 ; 1788
CONS                 ; 1789
JOIN                 ; 1790
LD     0 1          ; ELSE: 120 ; 1791
JOIN                 ; 1792
LD     0 1          ;  <== produce_n  [Function1<T,Cons> f, T a, int n] (as blk) @src/app/LambdaGhostEmulator.java(77,78) ; 1793
LD     0 0          ; var f ; 1794
AP     1             ; 1795
CAR                  ; 1796
ST     0 3           ; 1797
LD     0 2          ; var n ; 1798
LDC    0            ; just constant from code ; 1799
CEQ                  ; 1800
SEL    1803 1807    ; IF? 47 ; 1801
RTN                  ; 1802
LD     0 3          ; THEN: 47 ; 1803
LDC    0            ; NULL literal ; 1804
CONS                 ; 1805
JOIN                 ; 1806
LD     0 3          ; ELSE: 47 ; 1807
LD     0 0          ; var f ; 1808
LD     0 1          ; var a ; 1809
LD     0 0          ; var f ; 1810
AP     1             ; 1811
CDR                  ; 1812
LD     0 2          ; var n ; 1813
LDC    1            ; just constant from code ; 1814
SUB                  ; 1815
LDC 0               ; local var space ; 1816
LDF    745          ;  @produce_n ; 1817
AP     4             ; 1818
CONS                 ; 1819
JOIN                 ; 1820
LDF    10666        ;  <== bit_split  [Integer x] (as blk) @src/app/LambdaGhostEmulator.java(83,57), ALSO: @lambda_1018 ; 1821
LD     0 0          ; var x ; 1822
LDC    7            ; just constant from code ; 1823
LDC 0               ; local var space ; 1824
LDF    745          ;  @produce_n ; 1825
AP     4             ; 1826
RTN                  ; 1827
LD     0 0          ;  <== emulate_bitop  [Integer x, Integer y, Function2<Integer,Integer,Integer> f] (as blk) @src/app/LambdaGhostEmulator.java(88,102) ; 1828
LDF    1821         ;  @bit_split ; 1829
AP     1             ; 1830
ST     0 3           ; 1831
LD     0 1          ; var y ; 1832
LDF    1821         ;  @bit_split ; 1833
AP     1             ; 1834
ST     0 4           ; 1835
LDF    10683        ;  @lambda_1019 ; 1836
LDC    0            ; just constant from code ; 1837
LD     0 2          ; var f ; 1838
LD     0 3          ; var bits_x ; 1839
LD     0 4          ; var bits_y ; 1840
LDF    656          ;  @zip_with ; 1841
AP     3             ; 1842
LDF    35           ;  @foldr ; 1843
AP     3             ; 1844
RTN                  ; 1845
LD     0 0          ;  <== intCompare  [int a, int b] (as blk) @src/app/LambdaGhostEmulator.java(97,47) ; 1846
LD     0 1          ; var b ; 1847
CEQ                  ; 1848
SEL    1851 1853    ; IF? 48 ; 1849
RTN                  ; 1850
LDC    1            ; THEN: 48 ; 1851
JOIN                 ; 1852
LDC    0            ; ELSE: 48 ; 1853
JOIN                 ; 1854
LD     0 0          ;  <== ghcstate_bitop  [GHCState state, Cons arg_cons, Cons val_cons, int type] (as blk) @src/app/LambdaGhostEmulator.java(102,98) ; 1855
LD     0 1          ; var arg_cons ; 1856
LDC 0               ; local var space ; 1857
LDC 0               ; local var space ; 1858
LDF    1333         ;  @ghcstate_read_val ; 1859
AP     4             ; 1860
ST     0 4           ; 1861
LD     0 0          ; var state ; 1862
LD     0 2          ; var val_cons ; 1863
LDC 0               ; local var space ; 1864
LDC 0               ; local var space ; 1865
LDF    1333         ;  @ghcstate_read_val ; 1866
AP     4             ; 1867
ST     0 5           ; 1868
LD     0 4          ; var arg ; 1869
LD     0 5          ; var val ; 1870
LD     0 3          ; var type ; 1871
LDC    7            ; Named Const = GHCOps.AND ; 1872
CEQ                  ; 1873
SEL    1887 1889    ; IF? 49 ; 1874
LDC 0               ; local var space ; 1875
LDC 0               ; local var space ; 1876
LDF    1828         ;  @emulate_bitop ; 1877
AP     5             ; 1878
ST     0 6           ; 1879
LD     0 0          ; var state ; 1880
LD     0 1          ; var arg_cons ; 1881
LD     0 6          ; var result ; 1882
LDC 0               ; local var space ; 1883
LDF    1393         ;  @ghcstate_write_val ; 1884
AP     4             ; 1885
RTN                  ; 1886
LDF    11424        ; THEN: 49, ALSO: @lambda_1065 ; 1887
JOIN                 ; 1888
LD     0 3          ; ELSE: 49 ; 1889
LDC    8            ; Named Const = GHCOps.OR ; 1890
CEQ                  ; 1891
SEL    1894 1896    ; IF? 121 ; 1892
JOIN                 ; 1893
LDF    11428        ; THEN: 121, ALSO: @lambda_1066 ; 1894
JOIN                 ; 1895
LDF    11439        ; ELSE: 121, ALSO: @lambda_1067 ; 1896
JOIN                 ; 1897
LD     0 5          ;  <== runGhostStep  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state, Cons step] (as blk) @src/app/LambdaGhostEmulator.java(113,136) ; 1898
CAR                  ; 1899
ST     0 6           ; 1900
LD     0 5          ; var step ; 1901
CDR                  ; 1902
ST     0 7           ; 1903
LD     0 4          ; var state ; 1904
CAR                 ; generateTupleAccess total=3 pos=0 ; 1905
LD     0 4          ; var state ; 1906
CDR                 ; generateTupleAccess total=3 pos=1 ; 1907
CAR                  ; 1908
LDC    8            ; just constant from code ; 1909
LD     0 4          ; var state ; 1910
CDR                 ; generateTupleAccess total=3 pos=1 ; 1911
CAR                  ; 1912
LDC    8            ; just constant from code ; 1913
LDC    0            ; just constant from code ; 1914
LDF    1288         ;  @sorted_map_get ; 1915
AP     3             ; 1916
LDC    1            ; just constant from code ; 1917
ADD                  ; 1918
LDF    1304         ;  @sorted_map_assoc ; 1919
AP     3             ; 1920
LD     0 4          ; var state ; 1921
CDR                 ; generateTupleAccess total=3 pos=2 ; 1922
CDR                  ; 1923
CONS                 ; 1924
CONS                 ; 1925
ST     0 8           ; 1926
LDC    0            ; Named Const = GHCOps.MOV ; 1927
LD     0 6          ; var opcode ; 1928
CEQ                  ; 1929
SEL    1932 1950    ; IF? 50 ; 1930
RTN                  ; 1931
LD     0 0          ; THEN: 50 ; 1932
LD     0 1          ; var world ; 1933
LD     0 2          ; var ghostInfo ; 1934
LD     0 3          ; var lev ; 1935
LD     0 8          ; var inc_pc ; 1936
LD     0 7          ; var args ; 1937
CAR                  ; 1938
LD     0 7          ; var args ; 1939
CDR                  ; 1940
CAR                  ; 1941
LDC 0               ; local var space ; 1942
LDF    1474         ;  @ghcstate_assoc ; 1943
AP     4             ; 1944
LDC 0               ; local var space ; 1945
LDC 0               ; local var space ; 1946
LDF    2410         ;  @runGhost ; 1947
AP     7             ; 1948
JOIN                 ; 1949
LDC    1            ; ELSE: 50 ; 1950
LD     0 6          ; var opcode ; 1951
CEQ                  ; 1952
SEL    1955 1979    ; IF? 122 ; 1953
JOIN                 ; 1954
LD     0 0          ; THEN: 122 ; 1955
LD     0 1          ; var world ; 1956
LD     0 2          ; var ghostInfo ; 1957
LD     0 3          ; var lev ; 1958
LD     0 8          ; var inc_pc ; 1959
LD     0 7          ; var args ; 1960
CAR                  ; 1961
LD     0 8          ; var inc_pc ; 1962
LD     0 7          ; var args ; 1963
CAR                  ; 1964
LDC 0               ; local var space ; 1965
LDC 0               ; local var space ; 1966
LDF    1333         ;  @ghcstate_read_val ; 1967
AP     4             ; 1968
LDC    1            ; just constant from code ; 1969
ADD                  ; 1970
LDC 0               ; local var space ; 1971
LDF    1393         ;  @ghcstate_write_val ; 1972
AP     4             ; 1973
LDC 0               ; local var space ; 1974
LDC 0               ; local var space ; 1975
LDF    2410         ;  @runGhost ; 1976
AP     7             ; 1977
JOIN                 ; 1978
LDC    2            ; ELSE: 122 ; 1979
LD     0 6          ; var opcode ; 1980
CEQ                  ; 1981
SEL    1984 2008    ; IF? 123 ; 1982
JOIN                 ; 1983
LD     0 0          ; THEN: 123 ; 1984
LD     0 1          ; var world ; 1985
LD     0 2          ; var ghostInfo ; 1986
LD     0 3          ; var lev ; 1987
LD     0 8          ; var inc_pc ; 1988
LD     0 7          ; var args ; 1989
CAR                  ; 1990
LD     0 8          ; var inc_pc ; 1991
LD     0 7          ; var args ; 1992
CAR                  ; 1993
LDC 0               ; local var space ; 1994
LDC 0               ; local var space ; 1995
LDF    1333         ;  @ghcstate_read_val ; 1996
AP     4             ; 1997
LDC    1            ; just constant from code ; 1998
SUB                  ; 1999
LDC 0               ; local var space ; 2000
LDF    1393         ;  @ghcstate_write_val ; 2001
AP     4             ; 2002
LDC 0               ; local var space ; 2003
LDC 0               ; local var space ; 2004
LDF    2410         ;  @runGhost ; 2005
AP     7             ; 2006
JOIN                 ; 2007
LDC    3            ; ELSE: 123 ; 2008
LD     0 6          ; var opcode ; 2009
CEQ                  ; 2010
SEL    2013 2044    ; IF? 124 ; 2011
JOIN                 ; 2012
LD     0 0          ; THEN: 124 ; 2013
LD     0 1          ; var world ; 2014
LD     0 2          ; var ghostInfo ; 2015
LD     0 3          ; var lev ; 2016
LD     0 8          ; var inc_pc ; 2017
LD     0 7          ; var args ; 2018
CAR                  ; 2019
LD     0 8          ; var inc_pc ; 2020
LD     0 7          ; var args ; 2021
CAR                  ; 2022
LDC 0               ; local var space ; 2023
LDC 0               ; local var space ; 2024
LDF    1333         ;  @ghcstate_read_val ; 2025
AP     4             ; 2026
LD     0 8          ; var inc_pc ; 2027
LD     0 7          ; var args ; 2028
CDR                  ; 2029
CAR                  ; 2030
LDC 0               ; local var space ; 2031
LDC 0               ; local var space ; 2032
LDF    1333         ;  @ghcstate_read_val ; 2033
AP     4             ; 2034
ADD                  ; 2035
LDC 0               ; local var space ; 2036
LDF    1393         ;  @ghcstate_write_val ; 2037
AP     4             ; 2038
LDC 0               ; local var space ; 2039
LDC 0               ; local var space ; 2040
LDF    2410         ;  @runGhost ; 2041
AP     7             ; 2042
JOIN                 ; 2043
LDC    4            ; ELSE: 124 ; 2044
LD     0 6          ; var opcode ; 2045
CEQ                  ; 2046
SEL    2049 2080    ; IF? 125 ; 2047
JOIN                 ; 2048
LD     0 0          ; THEN: 125 ; 2049
LD     0 1          ; var world ; 2050
LD     0 2          ; var ghostInfo ; 2051
LD     0 3          ; var lev ; 2052
LD     0 8          ; var inc_pc ; 2053
LD     0 7          ; var args ; 2054
CAR                  ; 2055
LD     0 8          ; var inc_pc ; 2056
LD     0 7          ; var args ; 2057
CAR                  ; 2058
LDC 0               ; local var space ; 2059
LDC 0               ; local var space ; 2060
LDF    1333         ;  @ghcstate_read_val ; 2061
AP     4             ; 2062
LD     0 8          ; var inc_pc ; 2063
LD     0 7          ; var args ; 2064
CDR                  ; 2065
CAR                  ; 2066
LDC 0               ; local var space ; 2067
LDC 0               ; local var space ; 2068
LDF    1333         ;  @ghcstate_read_val ; 2069
AP     4             ; 2070
SUB                  ; 2071
LDC 0               ; local var space ; 2072
LDF    1393         ;  @ghcstate_write_val ; 2073
AP     4             ; 2074
LDC 0               ; local var space ; 2075
LDC 0               ; local var space ; 2076
LDF    2410         ;  @runGhost ; 2077
AP     7             ; 2078
JOIN                 ; 2079
LDC    5            ; ELSE: 125 ; 2080
LD     0 6          ; var opcode ; 2081
CEQ                  ; 2082
SEL    2085 2116    ; IF? 126 ; 2083
JOIN                 ; 2084
LD     0 0          ; THEN: 126 ; 2085
LD     0 1          ; var world ; 2086
LD     0 2          ; var ghostInfo ; 2087
LD     0 3          ; var lev ; 2088
LD     0 8          ; var inc_pc ; 2089
LD     0 7          ; var args ; 2090
CAR                  ; 2091
LD     0 8          ; var inc_pc ; 2092
LD     0 7          ; var args ; 2093
CAR                  ; 2094
LDC 0               ; local var space ; 2095
LDC 0               ; local var space ; 2096
LDF    1333         ;  @ghcstate_read_val ; 2097
AP     4             ; 2098
LD     0 8          ; var inc_pc ; 2099
LD     0 7          ; var args ; 2100
CDR                  ; 2101
CAR                  ; 2102
LDC 0               ; local var space ; 2103
LDC 0               ; local var space ; 2104
LDF    1333         ;  @ghcstate_read_val ; 2105
AP     4             ; 2106
MUL                  ; 2107
LDC 0               ; local var space ; 2108
LDF    1393         ;  @ghcstate_write_val ; 2109
AP     4             ; 2110
LDC 0               ; local var space ; 2111
LDC 0               ; local var space ; 2112
LDF    2410         ;  @runGhost ; 2113
AP     7             ; 2114
JOIN                 ; 2115
LDC    6            ; ELSE: 126 ; 2116
LD     0 6          ; var opcode ; 2117
CEQ                  ; 2118
SEL    2121 2152    ; IF? 127 ; 2119
JOIN                 ; 2120
LD     0 0          ; THEN: 127 ; 2121
LD     0 1          ; var world ; 2122
LD     0 2          ; var ghostInfo ; 2123
LD     0 3          ; var lev ; 2124
LD     0 8          ; var inc_pc ; 2125
LD     0 7          ; var args ; 2126
CAR                  ; 2127
LD     0 8          ; var inc_pc ; 2128
LD     0 7          ; var args ; 2129
CAR                  ; 2130
LDC 0               ; local var space ; 2131
LDC 0               ; local var space ; 2132
LDF    1333         ;  @ghcstate_read_val ; 2133
AP     4             ; 2134
LD     0 8          ; var inc_pc ; 2135
LD     0 7          ; var args ; 2136
CDR                  ; 2137
CAR                  ; 2138
LDC 0               ; local var space ; 2139
LDC 0               ; local var space ; 2140
LDF    1333         ;  @ghcstate_read_val ; 2141
AP     4             ; 2142
DIV                  ; 2143
LDC 0               ; local var space ; 2144
LDF    1393         ;  @ghcstate_write_val ; 2145
AP     4             ; 2146
LDC 0               ; local var space ; 2147
LDC 0               ; local var space ; 2148
LDF    2410         ;  @runGhost ; 2149
AP     7             ; 2150
JOIN                 ; 2151
LDC    7            ; ELSE: 127 ; 2152
LD     0 6          ; var opcode ; 2153
CEQ                  ; 2154
SEL    2157 2178    ; IF? 128 ; 2155
JOIN                 ; 2156
LD     0 0          ; THEN: 128 ; 2157
LD     0 1          ; var world ; 2158
LD     0 2          ; var ghostInfo ; 2159
LD     0 3          ; var lev ; 2160
LD     0 8          ; var inc_pc ; 2161
LD     0 7          ; var args ; 2162
CAR                  ; 2163
LD     0 7          ; var args ; 2164
CDR                  ; 2165
CAR                  ; 2166
LDC    7            ; Named Const = GHCOps.AND ; 2167
LDC 0               ; local var space ; 2168
LDC 0               ; local var space ; 2169
LDC 0               ; local var space ; 2170
LDF    1855         ;  @ghcstate_bitop ; 2171
AP     7             ; 2172
LDC 0               ; local var space ; 2173
LDC 0               ; local var space ; 2174
LDF    2410         ;  @runGhost ; 2175
AP     7             ; 2176
JOIN                 ; 2177
LDC    8            ; ELSE: 128 ; 2178
LD     0 6          ; var opcode ; 2179
CEQ                  ; 2180
SEL    2183 2204    ; IF? 129 ; 2181
JOIN                 ; 2182
LD     0 0          ; THEN: 129 ; 2183
LD     0 1          ; var world ; 2184
LD     0 2          ; var ghostInfo ; 2185
LD     0 3          ; var lev ; 2186
LD     0 8          ; var inc_pc ; 2187
LD     0 7          ; var args ; 2188
CAR                  ; 2189
LD     0 7          ; var args ; 2190
CDR                  ; 2191
CAR                  ; 2192
LDC    8            ; Named Const = GHCOps.OR ; 2193
LDC 0               ; local var space ; 2194
LDC 0               ; local var space ; 2195
LDC 0               ; local var space ; 2196
LDF    1855         ;  @ghcstate_bitop ; 2197
AP     7             ; 2198
LDC 0               ; local var space ; 2199
LDC 0               ; local var space ; 2200
LDF    2410         ;  @runGhost ; 2201
AP     7             ; 2202
JOIN                 ; 2203
LDC    9            ; ELSE: 129 ; 2204
LD     0 6          ; var opcode ; 2205
CEQ                  ; 2206
SEL    2209 2230    ; IF? 130 ; 2207
JOIN                 ; 2208
LD     0 0          ; THEN: 130 ; 2209
LD     0 1          ; var world ; 2210
LD     0 2          ; var ghostInfo ; 2211
LD     0 3          ; var lev ; 2212
LD     0 8          ; var inc_pc ; 2213
LD     0 7          ; var args ; 2214
CAR                  ; 2215
LD     0 7          ; var args ; 2216
CDR                  ; 2217
CAR                  ; 2218
LDC    9            ; Named Const = GHCOps.XOR ; 2219
LDC 0               ; local var space ; 2220
LDC 0               ; local var space ; 2221
LDC 0               ; local var space ; 2222
LDF    1855         ;  @ghcstate_bitop ; 2223
AP     7             ; 2224
LDC 0               ; local var space ; 2225
LDC 0               ; local var space ; 2226
LDF    2410         ;  @runGhost ; 2227
AP     7             ; 2228
JOIN                 ; 2229
LDC    10           ; ELSE: 130 ; 2230
LD     0 6          ; var opcode ; 2231
CEQ                  ; 2232
SEL    2235 2262    ; IF? 131 ; 2233
JOIN                 ; 2234
LD     0 0          ; THEN: 131 ; 2235
LD     0 1          ; var world ; 2236
LD     0 2          ; var ghostInfo ; 2237
LD     0 3          ; var lev ; 2238
LD     0 4          ; var state ; 2239
LD     0 7          ; var args ; 2240
CDR                  ; 2241
CDR                  ; 2242
LDC 0               ; local var space ; 2243
LDC 0               ; local var space ; 2244
LDF    1333         ;  @ghcstate_read_val ; 2245
AP     4             ; 2246
LD     0 4          ; var state ; 2247
LD     0 7          ; var args ; 2248
CDR                  ; 2249
CAR                  ; 2250
LDC 0               ; local var space ; 2251
LDC 0               ; local var space ; 2252
LDF    1333         ;  @ghcstate_read_val ; 2253
AP     4             ; 2254
CGT                  ; 2255
SEL    2267 2283    ; IF? 132 ; 2256
LDC 0               ; local var space ; 2257
LDC 0               ; local var space ; 2258
LDF    2410         ;  @runGhost ; 2259
AP     7             ; 2260
JOIN                 ; 2261
LDC    11           ; ELSE: 131 ; 2262
LD     0 6          ; var opcode ; 2263
CEQ                  ; 2264
SEL    2285 2312    ; IF? 133 ; 2265
JOIN                 ; 2266
LD     0 4          ; THEN: 132 ; 2267
CAR                 ; generateTupleAccess total=3 pos=0 ; 2268
LD     0 4          ; var state ; 2269
CDR                 ; generateTupleAccess total=3 pos=1 ; 2270
CAR                  ; 2271
LDC    8            ; just constant from code ; 2272
LD     0 7          ; var args ; 2273
CAR                  ; 2274
LDF    1304         ;  @sorted_map_assoc ; 2275
AP     3             ; 2276
LD     0 4          ; var state ; 2277
CDR                 ; generateTupleAccess total=3 pos=2 ; 2278
CDR                  ; 2279
CONS                 ; 2280
CONS                 ; 2281
JOIN                 ; 2282
LD     0 4          ; ELSE: 132 ; 2283
JOIN                 ; 2284
LD     0 0          ; THEN: 133 ; 2285
LD     0 1          ; var world ; 2286
LD     0 2          ; var ghostInfo ; 2287
LD     0 3          ; var lev ; 2288
LD     0 4          ; var state ; 2289
LD     0 7          ; var args ; 2290
CDR                  ; 2291
CAR                  ; 2292
LDC 0               ; local var space ; 2293
LDC 0               ; local var space ; 2294
LDF    1333         ;  @ghcstate_read_val ; 2295
AP     4             ; 2296
LD     0 4          ; var state ; 2297
LD     0 7          ; var args ; 2298
CDR                  ; 2299
CDR                  ; 2300
LDC 0               ; local var space ; 2301
LDC 0               ; local var space ; 2302
LDF    1333         ;  @ghcstate_read_val ; 2303
AP     4             ; 2304
CEQ                  ; 2305
SEL    2317 2333    ; IF? 134 ; 2306
LDC 0               ; local var space ; 2307
LDC 0               ; local var space ; 2308
LDF    2410         ;  @runGhost ; 2309
AP     7             ; 2310
JOIN                 ; 2311
LDC    12           ; ELSE: 133 ; 2312
LD     0 6          ; var opcode ; 2313
CEQ                  ; 2314
SEL    2335 2362    ; IF? 135 ; 2315
JOIN                 ; 2316
LD     0 4          ; THEN: 134 ; 2317
CAR                 ; generateTupleAccess total=3 pos=0 ; 2318
LD     0 4          ; var state ; 2319
CDR                 ; generateTupleAccess total=3 pos=1 ; 2320
CAR                  ; 2321
LDC    8            ; just constant from code ; 2322
LD     0 7          ; var args ; 2323
CAR                  ; 2324
LDF    1304         ;  @sorted_map_assoc ; 2325
AP     3             ; 2326
LD     0 4          ; var state ; 2327
CDR                 ; generateTupleAccess total=3 pos=2 ; 2328
CDR                  ; 2329
CONS                 ; 2330
CONS                 ; 2331
JOIN                 ; 2332
LD     0 4          ; ELSE: 134 ; 2333
JOIN                 ; 2334
LD     0 0          ; THEN: 135 ; 2335
LD     0 1          ; var world ; 2336
LD     0 2          ; var ghostInfo ; 2337
LD     0 3          ; var lev ; 2338
LD     0 4          ; var state ; 2339
LD     0 7          ; var args ; 2340
CDR                  ; 2341
CAR                  ; 2342
LDC 0               ; local var space ; 2343
LDC 0               ; local var space ; 2344
LDF    1333         ;  @ghcstate_read_val ; 2345
AP     4             ; 2346
LD     0 4          ; var state ; 2347
LD     0 7          ; var args ; 2348
CDR                  ; 2349
CDR                  ; 2350
LDC 0               ; local var space ; 2351
LDC 0               ; local var space ; 2352
LDF    1333         ;  @ghcstate_read_val ; 2353
AP     4             ; 2354
CGT                  ; 2355
SEL    2367 2383    ; IF? 136 ; 2356
LDC 0               ; local var space ; 2357
LDC 0               ; local var space ; 2358
LDF    2410         ;  @runGhost ; 2359
AP     7             ; 2360
JOIN                 ; 2361
LDC    13           ; ELSE: 135 ; 2362
LD     0 6          ; var opcode ; 2363
CEQ                  ; 2364
SEL    2385 2405    ; IF? 137 ; 2365
JOIN                 ; 2366
LD     0 4          ; THEN: 136 ; 2367
CAR                 ; generateTupleAccess total=3 pos=0 ; 2368
LD     0 4          ; var state ; 2369
CDR                 ; generateTupleAccess total=3 pos=1 ; 2370
CAR                  ; 2371
LDC    8            ; just constant from code ; 2372
LD     0 7          ; var args ; 2373
CAR                  ; 2374
LDF    1304         ;  @sorted_map_assoc ; 2375
AP     3             ; 2376
LD     0 4          ; var state ; 2377
CDR                 ; generateTupleAccess total=3 pos=2 ; 2378
CDR                  ; 2379
CONS                 ; 2380
CONS                 ; 2381
JOIN                 ; 2382
LD     0 4          ; ELSE: 136 ; 2383
JOIN                 ; 2384
LD     0 0          ; THEN: 137 ; 2385
LD     0 1          ; var world ; 2386
LD     0 2          ; var ghostInfo ; 2387
LD     0 3          ; var lev ; 2388
LD     0 1          ; var world ; 2389
LD     0 8          ; var inc_pc ; 2390
LD     0 2          ; var ghostInfo ; 2391
LD     0 7          ; var args ; 2392
CAR                  ; 2393
LD     0 7          ; var args ; 2394
CDR                  ; 2395
LDC 0               ; local var space ; 2396
LDC 0               ; local var space ; 2397
LDF    1575         ;  @processGhostInt ; 2398
AP     7             ; 2399
LDC 0               ; local var space ; 2400
LDC 0               ; local var space ; 2401
LDF    2410         ;  @runGhost ; 2402
AP     7             ; 2403
JOIN                 ; 2404
LD     0 4          ; ELSE: 137 ; 2405
CAR                 ; generateTupleAccess total=3 pos=0 ; 2406
CDR                 ; generateTupleAccess total=3 pos=2 ; 2407
CDR                  ; 2408
JOIN                 ; 2409
LD     0 4          ;  <== runGhost  [SortedMap<Cons> prog, WorldState world, GhostInfo ghostInfo, int lev, GHCState state] (as blk) @src/app/LambdaGhostEmulator.java(145,121) ; 2410
CDR                 ; generateTupleAccess total=3 pos=1 ; 2411
CAR                  ; 2412
LDC    8            ; just constant from code ; 2413
LDC    0            ; just constant from code ; 2414
LDF    1288         ;  @sorted_map_get ; 2415
AP     3             ; 2416
ST     0 5           ; 2417
LD     0 0          ; var prog ; 2418
LD     0 5          ; var pc ; 2419
LDC    0            ; NULL literal ; 2420
LDF    1288         ;  @sorted_map_get ; 2421
AP     3             ; 2422
ST     0 6           ; 2423
LD     0 6          ; var step ; 2424
ATOM                 ; 2425
SEL    2428 2433    ; IF? 51 ; 2426
RTN                  ; 2427
LD     0 4          ; THEN: 51 ; 2428
CAR                 ; generateTupleAccess total=3 pos=0 ; 2429
CDR                 ; generateTupleAccess total=3 pos=2 ; 2430
CDR                  ; 2431
JOIN                 ; 2432
LD     0 3          ; ELSE: 51 ; 2433
LDC    1023         ; just constant from code ; 2434
CGT                  ; 2435
SEL    2438 2443    ; IF? 138 ; 2436
JOIN                 ; 2437
LD     0 4          ; THEN: 138 ; 2438
CAR                 ; generateTupleAccess total=3 pos=0 ; 2439
CDR                 ; generateTupleAccess total=3 pos=2 ; 2440
CDR                  ; 2441
JOIN                 ; 2442
LD     0 0          ; ELSE: 138 ; 2443
LD     0 1          ; var world ; 2444
LD     0 2          ; var ghostInfo ; 2445
LD     0 3          ; var lev ; 2446
LDC    1            ; just constant from code ; 2447
ADD                  ; 2448
LD     0 4          ; var state ; 2449
LD     0 6          ; var step ; 2450
LDC 0               ; local var space ; 2451
LDC 0               ; local var space ; 2452
LDC 0               ; local var space ; 2453
LDF    1898         ;  @runGhostStep ; 2454
AP     9             ; 2455
JOIN                 ; 2456
LD     0 1          ;  <== getGhostDirection  [WorldState world, GhostInfo ghostInfo] (as blk) @src/app/LambdaGhostEmulator.java(153,83) ; 2457
CDR                 ; generateTupleAccess total=3 pos=1 ; 2458
CAR                  ; 2459
LDC    0            ; just constant from code ; 2460
LDC    0            ; NULL literal ; 2461
LDC    0            ; just constant from code ; 2462
CONS                 ; 2463
CONS                 ; 2464
LDF    10689        ;  @lambda_1020 ; 2465
LDF    373          ;  @fold0 ; 2466
AP     3             ; 2467
ST     0 2           ; 2468
LD     0 0          ; var world ; 2469
CDR                 ; generateTupleAccess total=4 pos=2 ; 2470
CDR                  ; 2471
CAR                  ; 2472
CAR                  ; 2473
ST     0 3           ; 2474
LD     0 2          ; var prog ; 2475
CDR                 ; generateTupleAccess total=2 pos=1 ; 2476
LD     0 0          ; var world ; 2477
LD     0 1          ; var ghostInfo ; 2478
LDC    0            ; just constant from code ; 2479
LD     0 3          ; var ghostState ; 2480
LDC    0            ; NULL literal ; 2481
LDC    0            ; just constant from code ; 2482
CONS                 ; 2483
LDC    0            ; NULL literal ; 2484
LDC    0            ; just constant from code ; 2485
CONS                 ; 2486
CONS                 ; 2487
CONS                 ; 2488
LDC 0               ; local var space ; 2489
LDC 0               ; local var space ; 2490
LDF    2410         ;  @runGhost ; 2491
AP     7             ; 2492
RTN                  ; 2493
LD     0 0          ;  <== entryFactual  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) @src/app/Sample1.java(58,143) ; 2494
LD     0 1          ; var ghostSpecs ; 2495
LDC 0               ; local var space ; 2496
LDF    3479         ;  @createInitialState ; 2497
AP     3             ; 2498
ST     0 2           ; 2499
LD     0 2          ; var initialState ; 2500
CAR                 ; generateTupleAccess total=4 pos=0 ; 2501
CDR                 ; generateTupleAccess total=7 pos=5 ; 2502
CDR                  ; 2503
CDR                  ; 2504
CDR                  ; 2505
CDR                  ; 2506
CAR                  ; 2507
LDC    1            ; just constant from code ; 2508
LDF    419          ;  @list_item ; 2509
AP     2             ; 2510
ST     0 3           ; 2511
LDC    0            ; just constant from code ; 2512
LDC    100          ; Named Const = VMExtras.GET_READER ; 2513
LDC    1            ; just constant from code ; 2514
LD     0 3          ; var newRowAccessor ; 2515
AP     2             ; 2516
AP     1             ; 2517
ST     0 4           ; 2518
LD     0 2          ; var initialState ; 2519
LDF    10633        ;  @lambda_1014 ; 2520
CONS                 ; 2521
RTN                  ; 2522
LDF    4485         ;  <== test01  [] (as blk) @src/app/Sample1.java(68,25), ALSO: @array_256 ; 2523
AP     0             ; 2524
ST     0 0           ; 2525
LDC    100          ; Named Const = VMExtras.GET_READER ; 2526
LDC    22           ; just constant from code ; 2527
LD     0 0          ; var accessor ; 2528
AP     2             ; 2529
ST     0 1           ; 2530
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 2531
LDC    22           ; just constant from code ; 2532
LD     0 0          ; var accessor ; 2533
AP     2             ; 2534
ST     0 2           ; 2535
LDC    77           ; just constant from code ; 2536
LD     0 2          ; var writer101 ; 2537
AP     1             ; 2538
ST     0 3           ; 2539
LDC    0            ; just constant from code ; 2540
LD     0 1          ; var reader101 ; 2541
AP     1             ; 2542
ST     0 4           ; 2543
LDC    0            ; just constant from code ; 2544
RTN                  ; 2545
LD     0 0          ;  <== collectEdgePills  [ParsedEdge edge, Point start, ListCons<ListCons<Integer>> map] (as blk) @src/app/Sample1.java(79,144) ; 2546
CDR                 ; generateTupleAccess total=10 pos=1 ; 2547
CAR                  ; 2548
LDF    10702        ;  @lambda_1021 ; 2549
LDF    336          ;  @dropWhile ; 2550
AP     2             ; 2551
ST     0 3           ; 2552
LD     0 3          ; var pathRemaining ; 2553
LDF    10725        ;  @lambda_1022 ; 2554
LDF    533          ;  @filter ; 2555
AP     2             ; 2556
ST     0 4           ; 2557
LD     0 4          ; var rv ; 2558
RTN                  ; 2559
LD     0 0          ;  <== collectAnyEdgePills  [ParsedEdge edge, ListCons<ListCons<Integer>> map] (as blk) @src/app/Sample1.java(86,134) ; 2560
CDR                 ; generateTupleAccess total=10 pos=1 ; 2561
CAR                  ; 2562
ST     0 2           ; 2563
LD     0 2          ; var edgeAccess ; 2564
LDF    10737        ;  @lambda_1023 ; 2565
LDF    533          ;  @filter ; 2566
AP     2             ; 2567
ST     0 3           ; 2568
LD     0 3          ; var rv ; 2569
RTN                  ; 2570
LD     0 0          ;  <== countAnyEdgePills  [ParsedEdge edge] (as blk) @src/app/Sample1.java(93,55) ; 2571
CDR                 ; generateTupleAccess total=10 pos=1 ; 2572
CAR                  ; 2573
ST     0 1           ; 2574
LD     0 1          ; var edgeAccess ; 2575
LDC    0            ; just constant from code ; 2576
LDF    10749        ;  @lambda_1024 ; 2577
LDF    373          ;  @fold0 ; 2578
AP     3             ; 2579
ST     0 2           ; 2580
LD     0 2          ; var rv ; 2581
RTN                  ; 2582
LD     0 0          ;  <== countMyEdgePills  [ParsedEdge edge, Point start] (as blk) @src/app/Sample1.java(100,67) ; 2583
CDR                 ; generateTupleAccess total=10 pos=1 ; 2584
CAR                  ; 2585
LDF    10763        ;  @lambda_1025 ; 2586
LDF    336          ;  @dropWhile ; 2587
AP     2             ; 2588
ST     0 2           ; 2589
LD     0 2          ; var pathRemaining ; 2590
LDC    0            ; just constant from code ; 2591
LDC    100          ; just constant from code ; 2592
CONS                 ; 2593
LDF    10786        ;  @lambda_1026 ; 2594
LDF    373          ;  @fold0 ; 2595
AP     3             ; 2596
ST     0 3           ; 2597
LD     0 3          ; var rv ; 2598
CAR                 ; generateTupleAccess total=2 pos=0 ; 2599
RTN                  ; 2600
LD     0 1          ;  <== performMove  [AIState aistate, WorldState worldState] (as blk) @src/app/Sample1.java(134,88) ; 2601
CDR                 ; generateTupleAccess total=4 pos=1 ; 2602
CAR                  ; 2603
CDR                 ; generateTupleAccess total=5 pos=1 ; 2604
CAR                  ; 2605
ST     0 2           ; 2606
LD     0 0          ; var aistate ; 2607
CAR                 ; generateTupleAccess total=4 pos=0 ; 2608
CDR                 ; generateTupleAccess total=7 pos=6 ; 2609
CDR                  ; 2610
CDR                  ; 2611
CDR                  ; 2612
CDR                  ; 2613
CDR                  ; 2614
LD     0 2          ; var location ; 2615
LDF    3944         ;  @findEdgesForPoint ; 2616
AP     2             ; 2617
ST     0 3           ; 2618
LD     0 0          ; var aistate ; 2619
CAR                 ; generateTupleAccess total=4 pos=0 ; 2620
CDR                 ; generateTupleAccess total=7 pos=2 ; 2621
CDR                  ; 2622
CAR                  ; 2623
LDF    10814        ;  @lambda_1027 ; 2624
LDF    56           ;  @map ; 2625
AP     2             ; 2626
ST     0 8           ; 2627
LD     0 1          ; var worldState ; 2628
CDR                 ; generateTupleAccess total=4 pos=2 ; 2629
CDR                  ; 2630
CAR                  ; 2631
LDF    10827        ;  @lambda_1028 ; 2632
LDF    56           ;  @map ; 2633
AP     2             ; 2634
ST     0 8           ; 2635
LD     0 3          ; var edgesForPoint ; 2636
LD     0 0          ; var aistate ; 2637
LD     0 1          ; var worldState ; 2638
LDC 0               ; local var space ; 2639
LDC 0               ; local var space ; 2640
LDC 0               ; local var space ; 2641
LDC 0               ; local var space ; 2642
LDC 0               ; local var space ; 2643
LDC 0               ; local var space ; 2644
LDC 0               ; local var space ; 2645
LDF    3357         ;  @findBestDistantEdge ; 2646
AP     10            ; 2647
ST     0 7           ; 2648
LD     0 7          ; var startEdge ; 2649
CDR                 ; generateTupleAccess total=10 pos=1 ; 2650
CAR                  ; 2651
LDF    10878        ;  @lambda_1035 ; 2652
LDF    336          ;  @dropWhile ; 2653
AP     2             ; 2654
ST     0 9           ; 2655
LD     0 9          ; var pathToWalk ; 2656
LDF    528          ;  @length ; 2657
AP     1             ; 2658
LDC    2            ; just constant from code ; 2659
CGTE                 ; 2660
SEL    2703 2720     ; 2661
LD     0 4          ; var retval ; 2662
CDR                 ; generateTupleAccess total=2 pos=1 ; 2663
LDC    3            ; Named Const = Direction.LEFT ; 2664
CEQ                  ; 2665
SEL    2725 2730    ; IF? 52 ; 2666
ST     0 10          ; 2667
LD     0 4          ; var retval ; 2668
CDR                 ; generateTupleAccess total=2 pos=1 ; 2669
LDC    0            ; Named Const = Direction.UP ; 2670
CEQ                  ; 2671
SEL    2736 2741    ; IF? 53 ; 2672
ST     0 11          ; 2673
LD     0 4          ; var retval ; 2674
CAR                 ; generateTupleAccess total=2 pos=0 ; 2675
ST     0 12          ; 2676
LD     0 12         ; var a ; 2677
CAR                 ; generateTupleAccess total=4 pos=0 ; 2678
CDR                 ; generateTupleAccess total=7 pos=5 ; 2679
CDR                  ; 2680
CDR                  ; 2681
CDR                  ; 2682
CDR                  ; 2683
CAR                  ; 2684
LD     0 11         ; var ny ; 2685
LDF    419          ;  @list_item ; 2686
AP     2             ; 2687
ST     0 13          ; 2688
LDC    0            ; just constant from code ; 2689
LDC    100          ; Named Const = VMExtras.GET_READER ; 2690
LD     0 10         ; var nx ; 2691
LD     0 13         ; var newRowAccessor ; 2692
AP     2             ; 2693
AP     1             ; 2694
ST     0 14          ; 2695
LD     0 14         ; var oldValue ; 2696
LDC    2            ; Named Const = CT.PILL ; 2697
CEQ                  ; 2698
SEL    2747 2754    ; IF? 54 ; 2699
ST     0 14          ; 2700
LD     0 4          ; var retval ; 2701
RTN                  ; 2702
LD     0 9          ; branch@2703 ; 2703
CDR                  ; 2704
CAR                  ; 2705
ST     0 5           ; 2706
LD     0 5          ; var newLocation ; 2707
CDR                 ; generateTupleAccess total=2 pos=1 ; 2708
CAR                 ; generateTupleAccess total=2 pos=0 ; 2709
LD     0 2          ; var location ; 2710
CAR                 ; generateTupleAccess total=2 pos=0 ; 2711
CGT                  ; 2712
SEL    2756 2758    ; IF? 139 ; 2713
ST     0 6           ; 2714
LD     0 0          ; var aistate ; 2715
LD     0 6          ; var direction ; 2716
CONS                 ; 2717
ST     0 4           ; 2718
JOIN                 ; 2719
LD     0 0          ; branch@2720 ; 2720
LDC    0            ; Named Const = Direction.UP ; 2721
CONS                 ; 2722
ST     0 4           ; 2723
JOIN                 ; 2724
LD     0 2          ; THEN: 52 ; 2725
CAR                 ; generateTupleAccess total=2 pos=0 ; 2726
LDC    1            ; just constant from code ; 2727
SUB                  ; 2728
JOIN                 ; 2729
LD     0 4          ; ELSE: 52 ; 2730
CDR                 ; generateTupleAccess total=2 pos=1 ; 2731
LDC    1            ; Named Const = Direction.RIGHT ; 2732
CEQ                  ; 2733
SEL    2766 2771    ; IF? 140 ; 2734
JOIN                 ; 2735
LD     0 2          ; THEN: 53 ; 2736
CDR                 ; generateTupleAccess total=2 pos=1 ; 2737
LDC    1            ; just constant from code ; 2738
SUB                  ; 2739
JOIN                 ; 2740
LD     0 4          ; ELSE: 53 ; 2741
CDR                 ; generateTupleAccess total=2 pos=1 ; 2742
LDC    2            ; Named Const = Direction.DOWN ; 2743
CEQ                  ; 2744
SEL    2774 2779    ; IF? 141 ; 2745
JOIN                 ; 2746
LDC    1            ; THEN: 54 ; 2747
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 2748
LD     0 10         ; var nx ; 2749
LD     0 13         ; var newRowAccessor ; 2750
AP     2             ; 2751
AP     1             ; 2752
JOIN                 ; 2753
LD     0 14         ; ELSE: 54 ; 2754
JOIN                 ; 2755
LDC    1            ; THEN: 139 ; 2756
JOIN                 ; 2757
LD     0 2          ; ELSE: 139 ; 2758
CAR                 ; generateTupleAccess total=2 pos=0 ; 2759
LD     0 5          ; var newLocation ; 2760
CDR                 ; generateTupleAccess total=2 pos=1 ; 2761
CAR                 ; generateTupleAccess total=2 pos=0 ; 2762
CGT                  ; 2763
SEL    2782 2784    ; IF? 142 ; 2764
JOIN                 ; 2765
LD     0 2          ; THEN: 140 ; 2766
CAR                 ; generateTupleAccess total=2 pos=0 ; 2767
LDC    1            ; just constant from code ; 2768
ADD                  ; 2769
JOIN                 ; 2770
LD     0 2          ; ELSE: 140 ; 2771
CAR                 ; generateTupleAccess total=2 pos=0 ; 2772
JOIN                 ; 2773
LD     0 2          ; THEN: 141 ; 2774
CDR                 ; generateTupleAccess total=2 pos=1 ; 2775
LDC    1            ; just constant from code ; 2776
ADD                  ; 2777
JOIN                 ; 2778
LD     0 2          ; ELSE: 141 ; 2779
CDR                 ; generateTupleAccess total=2 pos=1 ; 2780
JOIN                 ; 2781
LDC    3            ; THEN: 142 ; 2782
JOIN                 ; 2783
LD     0 2          ; ELSE: 142 ; 2784
CDR                 ; generateTupleAccess total=2 pos=1 ; 2785
LD     0 5          ; var newLocation ; 2786
CDR                 ; generateTupleAccess total=2 pos=1 ; 2787
CDR                 ; generateTupleAccess total=2 pos=1 ; 2788
CGT                  ; 2789
SEL    2792 2794    ; IF? 143 ; 2790
JOIN                 ; 2791
LDC    0            ; THEN: 143 ; 2792
JOIN                 ; 2793
LDC    2            ; ELSE: 143 ; 2794
JOIN                 ; 2795
LD     0 1          ;  <== waveGhostDangerAcc0  [AIState aistate, Queue<EdgeDangerWaveItem> queue] (as blk) @src/app/Sample1.java(183,86) ; 2796
LDF    411          ;  @queue_isempty ; 2797
AP     1             ; 2798
SEL    2801 2805    ; IF? 55 ; 2799
RTN                  ; 2800
LDC    0            ; THEN: 55 ; 2801
LDF    8            ;  @mydebug ; 2802
AP     1             ; 2803
JOIN                 ; 2804
LD     0 0          ; ELSE: 55 ; 2805
LD     0 1          ; var queue ; 2806
LDC 0               ; local var space ; 2807
LDC 0               ; local var space ; 2808
LDC 0               ; local var space ; 2809
LDC 0               ; local var space ; 2810
LDC 0               ; local var space ; 2811
LDC 0               ; local var space ; 2812
LDF    2816         ;  @waveGhostDangerAcc ; 2813
AP     8             ; 2814
JOIN                 ; 2815
LD     0 1          ;  <== waveGhostDangerAcc  [AIState aistate, Queue<EdgeDangerWaveItem> queue] (as blk) @src/app/Sample1.java(190,85) ; 2816
LDC 0               ; local var space ; 2817
LDF    488          ;  @queue_dequeue ; 2818
AP     2             ; 2819
ST     0 2           ; 2820
LD     0 2          ; var smaller ; 2821
CAR                 ; generateTupleAccess total=2 pos=0 ; 2822
ST     0 3           ; 2823
LDC    0            ; NULL literal ; 2824
LD     0 3          ; var a ; 2825
CAR                 ; generateTupleAccess total=3 pos=0 ; 2826
CDR                 ; generateTupleAccess total=10 pos=3 ; 2827
CDR                  ; 2828
CDR                  ; 2829
CAR                  ; 2830
AP     1             ; 2831
ST     0 4           ; 2832
LD     0 4          ; var precedingEdges ; 2833
LDF    10901        ;  @lambda_1036 ; 2834
LDF    533          ;  @filter ; 2835
AP     2             ; 2836
ST     0 4           ; 2837
LD     0 4          ; var precedingEdges ; 2838
LDF    528          ;  @length ; 2839
AP     1             ; 2840
ST     0 5           ; 2841
LD     0 4          ; var precedingEdges ; 2842
LDF    10917        ;  @lambda_1037 ; 2843
LDF    56           ;  @map ; 2844
AP     2             ; 2845
ST     0 6           ; 2846
LD     0 4          ; var precedingEdges ; 2847
LD     0 2          ; var smaller ; 2848
CDR                 ; generateTupleAccess total=2 pos=1 ; 2849
LDF    10928        ;  @lambda_1038 ; 2850
LDF    373          ;  @fold0 ; 2851
AP     3             ; 2852
ST     0 7           ; 2853
LD     0 3          ; var a ; 2854
CDR                 ; generateTupleAccess total=3 pos=1 ; 2855
CAR                  ; 2856
LDC    5            ; just constant from code ; 2857
CGTE                 ; 2858
SEL    2861 2866    ; IF? 56 ; 2859
RTN                  ; 2860
LD     0 0          ; THEN: 56 ; 2861
LD     0 7          ; var newQueue ; 2862
LDF    2796         ;  @waveGhostDangerAcc0 ; 2863
AP     2             ; 2864
JOIN                 ; 2865
LDC    0            ; ELSE: 56 ; 2866
JOIN                 ; 2867
LD     0 0          ;  <== waveGhostDanger  [AIState aistate, EdgeDangerWaveItem item] (as blk) @src/app/Sample1.java(202,74) ; 2868
CAR                 ; generateTupleAccess total=4 pos=0 ; 2869
CDR                 ; generateTupleAccess total=7 pos=2 ; 2870
CDR                  ; 2871
CAR                  ; 2872
LDF    10949        ;  @lambda_1039 ; 2873
LDF    56           ;  @map ; 2874
AP     2             ; 2875
ST     0 2           ; 2876
LDC    1            ; just constant from code ; 2877
LD     0 1          ; var item ; 2878
CAR                 ; generateTupleAccess total=3 pos=0 ; 2879
CDR                 ; generateTupleAccess total=10 pos=4 ; 2880
CDR                  ; 2881
CDR                  ; 2882
CDR                  ; 2883
CAR                  ; 2884
AP     1             ; 2885
ST     0 3           ; 2886
LDF    399          ;  @queue_new ; 2887
AP     0             ; 2888
LD     0 1          ; var item ; 2889
LDF    403          ;  @queue_enqueue ; 2890
AP     2             ; 2891
ST     0 4           ; 2892
LD     0 0          ; var aistate ; 2893
LD     0 4          ; var q ; 2894
LDF    2796         ;  @waveGhostDangerAcc0 ; 2895
AP     2             ; 2896
ST     0 3           ; 2897
LDC    0            ; just constant from code ; 2898
RTN                  ; 2899
LDC    89006000     ;  <== placeGhostDanger  [AIState aistate, GhostState gs] (as blk) @src/app/Sample1.java(211,65) ; 2900
DBUG                 ; 2901
LDC    89001        ; just constant from code ; 2902
DBUG                 ; 2903
LD     0 0          ; var aistate ; 2904
CAR                 ; generateTupleAccess total=4 pos=0 ; 2905
CDR                 ; generateTupleAccess total=7 pos=6 ; 2906
CDR                  ; 2907
CDR                  ; 2908
CDR                  ; 2909
CDR                  ; 2910
CDR                  ; 2911
LD     0 1          ; var gs ; 2912
CDR                 ; generateTupleAccess total=3 pos=1 ; 2913
CAR                  ; 2914
LDF    3944         ;  @findEdgesForPoint ; 2915
AP     2             ; 2916
ST     0 2           ; 2917
LD     0 1          ; var gs ; 2918
CDR                 ; generateTupleAccess total=3 pos=2 ; 2919
CDR                  ; 2920
ST     0 3           ; 2921
LD     0 3          ; var direction ; 2922
LDC    1            ; just constant from code ; 2923
CEQ                  ; 2924
SEL    2963 2970    ; IF? 57 ; 2925
ST     0 4           ; 2926
LD     0 3          ; var direction ; 2927
LDC    0            ; just constant from code ; 2928
CEQ                  ; 2929
SEL    2975 2982    ; IF? 58 ; 2930
ST     0 5           ; 2931
LD     0 4          ; var nx ; 2932
LD     0 5          ; var ny ; 2933
CONS                 ; 2934
ST     0 6           ; 2935
LD     0 2          ; var edgesForPoint ; 2936
LDF    10958        ;  @lambda_1040 ; 2937
LDF    533          ;  @filter ; 2938
AP     2             ; 2939
ST     0 2           ; 2940
LDC    89002        ; just constant from code ; 2941
DBUG                 ; 2942
LDC    89001        ; just constant from code ; 2943
DBUG                 ; 2944
LD     0 2          ; var edgesForPoint ; 2945
LDF    10993        ;  @lambda_1041 ; 2946
LDF    56           ;  @map ; 2947
AP     2             ; 2948
ST     0 7           ; 2949
LDC    89002        ; just constant from code ; 2950
DBUG                 ; 2951
LDC    89001        ; just constant from code ; 2952
DBUG                 ; 2953
LD     0 2          ; var edgesForPoint ; 2954
LDF    11021        ;  @lambda_1042 ; 2955
LDF    56           ;  @map ; 2956
AP     2             ; 2957
ST     0 7           ; 2958
LDC    89002        ; just constant from code ; 2959
DBUG                 ; 2960
LDC    0            ; just constant from code ; 2961
RTN                  ; 2962
LD     0 1          ; THEN: 57 ; 2963
CDR                 ; generateTupleAccess total=3 pos=1 ; 2964
CAR                  ; 2965
CAR                 ; generateTupleAccess total=2 pos=0 ; 2966
LDC    1            ; just constant from code ; 2967
ADD                  ; 2968
JOIN                 ; 2969
LD     0 3          ; ELSE: 57 ; 2970
LDC    3            ; just constant from code ; 2971
CEQ                  ; 2972
SEL    2987 2994    ; IF? 144 ; 2973
JOIN                 ; 2974
LD     0 1          ; THEN: 58 ; 2975
CDR                 ; generateTupleAccess total=3 pos=1 ; 2976
CAR                  ; 2977
CDR                 ; generateTupleAccess total=2 pos=1 ; 2978
LDC    1            ; just constant from code ; 2979
SUB                  ; 2980
JOIN                 ; 2981
LD     0 3          ; ELSE: 58 ; 2982
LDC    2            ; just constant from code ; 2983
CEQ                  ; 2984
SEL    2999 3006    ; IF? 145 ; 2985
JOIN                 ; 2986
LD     0 1          ; THEN: 144 ; 2987
CDR                 ; generateTupleAccess total=3 pos=1 ; 2988
CAR                  ; 2989
CAR                 ; generateTupleAccess total=2 pos=0 ; 2990
LDC    1            ; just constant from code ; 2991
SUB                  ; 2992
JOIN                 ; 2993
LD     0 1          ; ELSE: 144 ; 2994
CDR                 ; generateTupleAccess total=3 pos=1 ; 2995
CAR                  ; 2996
CAR                 ; generateTupleAccess total=2 pos=0 ; 2997
JOIN                 ; 2998
LD     0 1          ; THEN: 145 ; 2999
CDR                 ; generateTupleAccess total=3 pos=1 ; 3000
CAR                  ; 3001
CDR                 ; generateTupleAccess total=2 pos=1 ; 3002
LDC    1            ; just constant from code ; 3003
ADD                  ; 3004
JOIN                 ; 3005
LD     0 1          ; ELSE: 145 ; 3006
CDR                 ; generateTupleAccess total=3 pos=1 ; 3007
CAR                  ; 3008
CDR                 ; generateTupleAccess total=2 pos=1 ; 3009
JOIN                 ; 3010
LDC    100          ;  <== initialDangerPercent  [int count, int remainingPath] (as blk) @src/app/Sample1.java(236,67) ; 3011
LD     0 1          ; var remainingPath ; 3012
LDC    100          ; just constant from code ; 3013
MUL                  ; 3014
LD     0 0          ; var count ; 3015
DIV                  ; 3016
SUB                  ; 3017
ST     0 2           ; 3018
LDC    50           ; just constant from code ; 3019
LD     0 2          ; var completedPercent ; 3020
LDC    350          ; just constant from code ; 3021
MUL                  ; 3022
LDC    100          ; just constant from code ; 3023
DIV                  ; 3024
ADD                  ; 3025
RTN                  ; 3026
LDC    0            ;  <== addEdgeDanger  [ParsedEdge e, int danger] (as blk) @src/app/Sample1.java(242,56) ; 3027
LDC    100          ; Named Const = VMExtras.GET_READER ; 3028
LDC    0            ; just constant from code ; 3029
LD     0 0          ; var e ; 3030
CDR                 ; generateTupleAccess total=10 pos=5 ; 3031
CDR                  ; 3032
CDR                  ; 3033
CDR                  ; 3034
CDR                  ; 3035
CAR                  ; 3036
AP     2             ; 3037
AP     1             ; 3038
ST     0 2           ; 3039
LD     0 2          ; var oldValue ; 3040
LD     0 1          ; var danger ; 3041
ADD                  ; 3042
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 3043
LDC    0            ; just constant from code ; 3044
LD     0 0          ; var e ; 3045
CDR                 ; generateTupleAccess total=10 pos=5 ; 3046
CDR                  ; 3047
CDR                  ; 3048
CDR                  ; 3049
CDR                  ; 3050
CAR                  ; 3051
AP     2             ; 3052
AP     1             ; 3053
ST     0 3           ; 3054
LDC    0            ; just constant from code ; 3055
RTN                  ; 3056
LD     0 0          ;  <== remainingPath  [ParsedEdge pe, Point location] (as blk) @src/app/Sample1.java(249,101) ; 3057
CDR                 ; generateTupleAccess total=10 pos=1 ; 3058
CAR                  ; 3059
LDF    11046        ;  @lambda_1043 ; 3060
LDF    336          ;  @dropWhile ; 3061
AP     2             ; 3062
ST     0 2           ; 3063
LD     0 2          ; var meAndFurther ; 3064
CDR                  ; 3065
ATOM                 ; 3066
SEL    3069 3071    ; IF? 59 ; 3067
RTN                  ; 3068
LD     0 2          ; THEN: 59 ; 3069
JOIN                 ; 3070
LD     0 2          ; ELSE: 59 ; 3071
CDR                  ; 3072
JOIN                 ; 3073
LD     0 2          ;  <== waveFromEdgeToNearestEdges  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) @src/app/Sample1.java(261,36) ; 3074
LDF    411          ;  @queue_isempty ; 3075
AP     1             ; 3076
SEL    3080 3083     ; 3077
LD     0 5          ; var retval ; 3078
RTN                  ; 3079
LD     0 3          ; branch@3080 ; 3080
ST     0 5           ; 3081
JOIN                 ; 3082
LD     0 0          ; branch@3083 ; 3083
LD     0 1          ; var worldState ; 3084
LD     0 2          ; var edgeQueue ; 3085
LD     0 3          ; var acc ; 3086
LD     0 4          ; var edgesWithDotsSoFar ; 3087
LDC 0               ; local var space ; 3088
LDC 0               ; local var space ; 3089
LDC 0               ; local var space ; 3090
LDC 0               ; local var space ; 3091
LDC 0               ; local var space ; 3092
LDC 0               ; local var space ; 3093
LDC 0               ; local var space ; 3094
LDC 0               ; local var space ; 3095
LDC 0               ; local var space ; 3096
LDC 0               ; local var space ; 3097
LDF    3102         ;  @waveFromEdgeToNearestEdges0 ; 3098
AP     15            ; 3099
ST     0 5           ; 3100
JOIN                 ; 3101
LD     0 2          ;  <== waveFromEdgeToNearestEdges0  [AIState aistate, WorldState worldState, Queue<ListCons<ParsedEdge>> edgeQueue, ListCons<ListCons<ParsedEdge>> acc, int edgesWithDotsSoFar] (as blk) @src/app/Sample1.java(272,210) ; 3102
LDC 0               ; local var space ; 3103
LDF    488          ;  @queue_dequeue ; 3104
AP     2             ; 3105
ST     0 6           ; 3106
LD     0 6          ; var reduced ; 3107
CAR                 ; generateTupleAccess total=2 pos=0 ; 3108
ST     0 7           ; 3109
LD     0 7          ; var lookingEdge ; 3110
CAR                  ; 3111
ST     0 8           ; 3112
LDC    0            ; NULL literal ; 3113
LD     0 8          ; var lookingEdgeHead ; 3114
CDR                 ; generateTupleAccess total=10 pos=6 ; 3115
CDR                  ; 3116
CDR                  ; 3117
CDR                  ; 3118
CDR                  ; 3119
CDR                  ; 3120
CAR                  ; 3121
AP     1             ; 3122
ST     0 9           ; 3123
LD     0 9          ; var following ; 3124
LDF    11059        ;  @lambda_1044 ; 3125
LDF    533          ;  @filter ; 3126
AP     2             ; 3127
ST     0 9           ; 3128
LD     0 9          ; var following ; 3129
LDF    11075        ;  @lambda_1045 ; 3130
LDF    533          ;  @filter ; 3131
AP     2             ; 3132
ST     0 10          ; 3133
LD     0 9          ; var following ; 3134
LDF    11092        ;  @lambda_1046 ; 3135
LDF    56           ;  @map ; 3136
AP     2             ; 3137
ST     0 11          ; 3138
LD     0 11         ; var newRoutes ; 3139
LD     0 6          ; var reduced ; 3140
CDR                 ; generateTupleAccess total=2 pos=1 ; 3141
LDF    11096        ;  @lambda_1047 ; 3142
LDF    373          ;  @fold0 ; 3143
AP     3             ; 3144
ST     0 12          ; 3145
LD     0 11         ; var newRoutes ; 3146
LD     0 3          ; var acc ; 3147
LDF    171          ;  @concat2_set ; 3148
AP     2             ; 3149
ST     0 13          ; 3150
LD     0 3          ; var acc ; 3151
ATOM                 ; 3152
LDC    1            ; for negation ; 3153
SUB                  ; 3154
SEL    3162 3182    ; IF? 60 ; 3155
ST     0 14          ; 3156
LD     0 14         ; var stopCondition ; 3157
SEL    3184 3186    ; IF? 61 ; 3158
ST     0 5           ; 3159
LD     0 5          ; var retval ; 3160
RTN                  ; 3161
LD     0 4          ; THEN: 60 ; 3162
LDC    3            ; just constant from code ; 3163
CGT                  ; 3164
LD     0 3          ; var acc ; 3165
LDF    528          ;  @length ; 3166
AP     1             ; 3167
LDC    15           ; just constant from code ; 3168
CGT                  ; 3169
MUL                  ; 3170
LD     0 13         ; var newAcc ; 3171
CAR                  ; 3172
LDF    528          ;  @length ; 3173
AP     1             ; 3174
LD     0 3          ; var acc ; 3175
CAR                  ; 3176
LDF    528          ;  @length ; 3177
AP     1             ; 3178
CGT                  ; 3179
MUL                  ; 3180
JOIN                 ; 3181
LDC    0            ; ELSE: 60 ; 3182
JOIN                 ; 3183
LD     0 3          ; THEN: 61 ; 3184
JOIN                 ; 3185
LD     0 0          ; ELSE: 61 ; 3186
LD     0 1          ; var worldState ; 3187
LD     0 12         ; var newqq ; 3188
LD     0 13         ; var newAcc ; 3189
LD     0 4          ; var edgesWithDotsSoFar ; 3190
LD     0 10         ; var withDots ; 3191
LDF    528          ;  @length ; 3192
AP     1             ; 3193
ADD                  ; 3194
LDC 0               ; local var space ; 3195
LDF    3074         ;  @waveFromEdgeToNearestEdges ; 3196
AP     6             ; 3197
JOIN                 ; 3198
LD     0 0          ;  <== pointEquals  [Point a, Point b] (as blk) @src/app/Sample1.java(295,50) ; 3199
CAR                 ; generateTupleAccess total=2 pos=0 ; 3200
LD     0 1          ; var b ; 3201
CAR                 ; generateTupleAccess total=2 pos=0 ; 3202
CEQ                  ; 3203
LD     0 0          ; var a ; 3204
CDR                 ; generateTupleAccess total=2 pos=1 ; 3205
LD     0 1          ; var b ; 3206
CDR                 ; generateTupleAccess total=2 pos=1 ; 3207
CEQ                  ; 3208
MUL                  ; 3209
SEL    3212 3214    ; IF? 62 ; 3210
RTN                  ; 3211
LDC    1            ; THEN: 62 ; 3212
JOIN                 ; 3213
LDC    0            ; ELSE: 62 ; 3214
JOIN                 ; 3215
LD     0 0          ;  <== pointEquals2  [Tuple<Function1<Integer,Integer>,Point> p, Tuple<Function1<Integer,Integer>,Point> q] (as blk) @src/app/Sample1.java(300,123) ; 3216
CDR                 ; generateTupleAccess total=2 pos=1 ; 3217
CAR                 ; generateTupleAccess total=2 pos=0 ; 3218
LD     0 1          ; var q ; 3219
CDR                 ; generateTupleAccess total=2 pos=1 ; 3220
CAR                 ; generateTupleAccess total=2 pos=0 ; 3221
CEQ                  ; 3222
LD     0 0          ; var p ; 3223
CDR                 ; generateTupleAccess total=2 pos=1 ; 3224
CDR                 ; generateTupleAccess total=2 pos=1 ; 3225
LD     0 1          ; var q ; 3226
CDR                 ; generateTupleAccess total=2 pos=1 ; 3227
CDR                 ; generateTupleAccess total=2 pos=1 ; 3228
CEQ                  ; 3229
MUL                  ; 3230
SEL    3233 3235    ; IF? 63 ; 3231
RTN                  ; 3232
LDC    1            ; THEN: 63 ; 3233
JOIN                 ; 3234
LDC    0            ; ELSE: 63 ; 3235
JOIN                 ; 3236
LD     0 0          ;  <== pointEquals3  [Tuple<Function1<Integer,Integer>,Point> p, Point q] (as blk) @src/app/Sample1.java(305,87) ; 3237
CDR                 ; generateTupleAccess total=2 pos=1 ; 3238
CAR                 ; generateTupleAccess total=2 pos=0 ; 3239
LD     0 1          ; var q ; 3240
CAR                 ; generateTupleAccess total=2 pos=0 ; 3241
CEQ                  ; 3242
LD     0 0          ; var p ; 3243
CDR                 ; generateTupleAccess total=2 pos=1 ; 3244
CDR                 ; generateTupleAccess total=2 pos=1 ; 3245
LD     0 1          ; var q ; 3246
CDR                 ; generateTupleAccess total=2 pos=1 ; 3247
CEQ                  ; 3248
MUL                  ; 3249
SEL    3252 3254    ; IF? 64 ; 3250
RTN                  ; 3251
LDC    1            ; THEN: 64 ; 3252
JOIN                 ; 3253
LDC    0            ; ELSE: 64 ; 3254
JOIN                 ; 3255
LD     0 0          ;  <== countRoutePills  [ListCons<ParsedEdge> route] (as blk) @src/app/Sample1.java(310,59) ; 3256
LDC    0            ; just constant from code ; 3257
LDF    11101        ;  @lambda_1048 ; 3258
LDF    373          ;  @fold0 ; 3259
AP     3             ; 3260
RTN                  ; 3261
LD     0 0          ;  <== safetyPercent  [ListCons<ParsedEdge> routeDirected] (as blk) @src/app/Sample1.java(315,70) ; 3262
CAR                  ; 3263
ST     0 1           ; 3264
LDC    0            ; just constant from code ; 3265
LDC    100          ; Named Const = VMExtras.GET_READER ; 3266
LDC    0            ; just constant from code ; 3267
LD     0 1          ; var hd ; 3268
CDR                 ; generateTupleAccess total=10 pos=5 ; 3269
CDR                  ; 3270
CDR                  ; 3271
CDR                  ; 3272
CDR                  ; 3273
CAR                  ; 3274
AP     2             ; 3275
AP     1             ; 3276
ST     0 2           ; 3277
LD     0 0          ; var routeDirected ; 3278
CDR                  ; 3279
ST     0 0           ; 3280
LD     0 0          ; var routeDirected ; 3281
ATOM                 ; 3282
LDC    1            ; for negation ; 3283
SUB                  ; 3284
SEL    3306 3330     ; 3285
LD     0 0          ; var routeDirected ; 3286
ATOM                 ; 3287
LDC    1            ; for negation ; 3288
SUB                  ; 3289
SEL    3331 3352     ; 3290
LD     0 2          ; var danger ; 3291
LDC    100          ; just constant from code ; 3292
CGT                  ; 3293
SEL    3353 3355    ; IF? 65 ; 3294
LDC    100          ; just constant from code ; 3295
MUL                  ; 3296
LDC    100          ; just constant from code ; 3297
DIV                  ; 3298
ST     0 2           ; 3299
LDC    100          ; just constant from code ; 3300
LD     0 2          ; var danger ; 3301
SUB                  ; 3302
ST     0 3           ; 3303
LD     0 3          ; var safety ; 3304
RTN                  ; 3305
LD     0 0          ; branch@3306 ; 3306
CAR                  ; 3307
ST     0 1           ; 3308
LD     0 2          ; var danger ; 3309
LDC    0            ; just constant from code ; 3310
LDC    100          ; Named Const = VMExtras.GET_READER ; 3311
LDC    0            ; just constant from code ; 3312
LD     0 1          ; var hd ; 3313
CDR                 ; generateTupleAccess total=10 pos=5 ; 3314
CDR                  ; 3315
CDR                  ; 3316
CDR                  ; 3317
CDR                  ; 3318
CAR                  ; 3319
AP     2             ; 3320
AP     1             ; 3321
LDC    5            ; just constant from code ; 3322
DIV                  ; 3323
ADD                  ; 3324
ST     0 2           ; 3325
LD     0 0          ; var routeDirected ; 3326
CDR                  ; 3327
ST     0 0           ; 3328
JOIN                 ; 3329
JOIN                ; branch@3330 ; 3330
LD     0 0          ; branch@3331 ; 3331
CAR                  ; 3332
ST     0 1           ; 3333
LD     0 2          ; var danger ; 3334
LDC    0            ; just constant from code ; 3335
LDC    100          ; Named Const = VMExtras.GET_READER ; 3336
LDC    0            ; just constant from code ; 3337
LD     0 1          ; var hd ; 3338
CDR                 ; generateTupleAccess total=10 pos=5 ; 3339
CDR                  ; 3340
CDR                  ; 3341
CDR                  ; 3342
CDR                  ; 3343
CAR                  ; 3344
AP     2             ; 3345
AP     1             ; 3346
LDC    15           ; just constant from code ; 3347
DIV                  ; 3348
ADD                  ; 3349
ST     0 2           ; 3350
JOIN                 ; 3351
JOIN                ; branch@3352 ; 3352
LDC    100          ; THEN: 65 ; 3353
JOIN                 ; 3354
LD     0 2          ; ELSE: 65 ; 3355
JOIN                 ; 3356
LDF    399          ;  <== findBestDistantEdge  [ListCons<ParsedEdge> currentEdges, AIState aistate, WorldState worldState] (as blk) @src/app/Sample1.java(336,118), ALSO: @queue_new ; 3357
AP     0             ; 3358
ST     0 3           ; 3359
LDC    89999901     ; just constant from code ; 3360
DBUG                 ; 3361
LDC    89001        ; just constant from code ; 3362
DBUG                 ; 3363
LD     0 0          ; var currentEdges ; 3364
LD     0 3          ; var q ; 3365
LDF    10838        ;  @lambda_1029 ; 3366
LDF    373          ;  @fold0 ; 3367
AP     3             ; 3368
ST     0 3           ; 3369
LDC    89002        ; just constant from code ; 3370
DBUG                 ; 3371
LDC    89001        ; just constant from code ; 3372
DBUG                 ; 3373
LD     0 1          ; var aistate ; 3374
CAR                 ; generateTupleAccess total=4 pos=0 ; 3375
CDR                 ; generateTupleAccess total=7 pos=2 ; 3376
CDR                  ; 3377
CAR                  ; 3378
LDF    10845        ;  @lambda_1030 ; 3379
LDF    56           ;  @map ; 3380
AP     2             ; 3381
ST     0 4           ; 3382
LD     0 0          ; var currentEdges ; 3383
LDF    10854        ;  @lambda_1031 ; 3384
LDF    56           ;  @map ; 3385
AP     2             ; 3386
ST     0 4           ; 3387
LD     0 1          ; var aistate ; 3388
LD     0 2          ; var worldState ; 3389
LD     0 3          ; var q ; 3390
LDC    0            ; NULL literal ; 3391
LDC    0            ; just constant from code ; 3392
LDC 0               ; local var space ; 3393
LDF    3074         ;  @waveFromEdgeToNearestEdges ; 3394
AP     6             ; 3395
ST     0 5           ; 3396
LDC    89002        ; just constant from code ; 3397
DBUG                 ; 3398
LDC    89001        ; just constant from code ; 3399
DBUG                 ; 3400
LD     0 5          ; var dests ; 3401
LDF    10863        ;  @lambda_1032 ; 3402
LDF    56           ;  @map ; 3403
AP     2             ; 3404
ST     0 6           ; 3405
LDC    89002        ; just constant from code ; 3406
DBUG                 ; 3407
LDC    89001        ; just constant from code ; 3408
DBUG                 ; 3409
LD     0 6          ; var directedRoutes ; 3410
LDF    10867        ;  @lambda_1033 ; 3411
LDF    56           ;  @map ; 3412
AP     2             ; 3413
ST     0 7           ; 3414
LDC    89002        ; just constant from code ; 3415
DBUG                 ; 3416
LDC    89001        ; just constant from code ; 3417
DBUG                 ; 3418
LD     0 7          ; var scores ; 3419
LDF    10874        ;  @lambda_1034 ; 3420
LDF    322          ;  @maximum_by ; 3421
AP     2             ; 3422
ST     0 8           ; 3423
LDC    89002        ; just constant from code ; 3424
DBUG                 ; 3425
LD     0 8          ; var winningRoute ; 3426
CAR                 ; generateTupleAccess total=3 pos=0 ; 3427
CAR                  ; 3428
ST     0 9           ; 3429
LD     0 9          ; var myStart ; 3430
RTN                  ; 3431
LD     0 1          ;  <== calculateRouteScore  [WorldState worldState, ListCons<ParsedEdge> r] (as blk) @src/app/Sample1.java(375,152) ; 3432
CAR                  ; 3433
LD     0 0          ; var worldState ; 3434
CDR                 ; generateTupleAccess total=4 pos=1 ; 3435
CAR                  ; 3436
CDR                 ; generateTupleAccess total=5 pos=1 ; 3437
CAR                  ; 3438
LDC 0               ; local var space ; 3439
LDC 0               ; local var space ; 3440
LDF    2583         ;  @countMyEdgePills ; 3441
AP     4             ; 3442
ST     0 2           ; 3443
LD     0 1          ; var r ; 3444
CDR                  ; 3445
LDF    3256         ;  @countRoutePills ; 3446
AP     1             ; 3447
ST     0 3           ; 3448
LD     0 1          ; var r ; 3449
LDC    10           ; just constant from code ; 3450
LD     0 2          ; var myEdgePills ; 3451
MUL                  ; 3452
LDC    3            ; just constant from code ; 3453
LD     0 3          ; var routePills ; 3454
MUL                  ; 3455
ADD                  ; 3456
LD     0 1          ; var r ; 3457
LDC 0               ; local var space ; 3458
LDC 0               ; local var space ; 3459
LDC 0               ; local var space ; 3460
LDF    3262         ;  @safetyPercent ; 3461
AP     4             ; 3462
MUL                  ; 3463
LDC    100          ; just constant from code ; 3464
DIV                  ; 3465
LD     0 2          ; var myEdgePills ; 3466
LD     0 3          ; var routePills ; 3467
LD     0 1          ; var r ; 3468
LDC 0               ; local var space ; 3469
LDC 0               ; local var space ; 3470
LDC 0               ; local var space ; 3471
LDF    3262         ;  @safetyPercent ; 3472
AP     4             ; 3473
CONS                 ; 3474
CONS                 ; 3475
CONS                 ; 3476
CONS                 ; 3477
RTN                  ; 3478
LD     0 0          ;  <== createInitialState  [WorldState ws, ListCons<ListCons> ghostSpecs] (as blk) @src/app/Sample1.java(522,85) ; 3479
CDR                 ; generateTupleAccess total=4 pos=2 ; 3480
CDR                  ; 3481
CAR                  ; 3482
LDF    528          ;  @length ; 3483
AP     1             ; 3484
LDF    773          ;  @range_n ; 3485
AP     1             ; 3486
ST     0 2           ; 3487
LD     0 0          ; var ws ; 3488
CAR                 ; generateTupleAccess total=4 pos=0 ; 3489
LDF    4144         ;  @parseStaticMap ; 3490
AP     1             ; 3491
LDC    0            ; just constant from code ; 3492
LDC    0            ; just constant from code ; 3493
LDF    10625        ;  @lambda_1013 ; 3494
LD     0 0          ; var ws ; 3495
CDR                 ; generateTupleAccess total=4 pos=2 ; 3496
CDR                  ; 3497
CAR                  ; 3498
LD     0 1          ; var ghostSpecs ; 3499
LD     0 2          ; var ghostNumbers ; 3500
LDF    683          ;  @zip3_with ; 3501
AP     4             ; 3502
CONS                 ; 3503
CONS                 ; 3504
CONS                 ; 3505
RTN                  ; 3506
LD     0 0          ;  <== isWall  [int test] (as blk) @src/app/Sample1.java(529,32) ; 3507
LDC    0            ; Named Const = CT.WALL ; 3508
CEQ                  ; 3509
SEL    3512 3514    ; IF? 66 ; 3510
RTN                  ; 3511
LDC    1            ; THEN: 66 ; 3512
JOIN                 ; 3513
LDC    0            ; ELSE: 66 ; 3514
JOIN                 ; 3515
LDC    77           ;  <== isWalkable  [int test] (as blk) @src/app/Sample1.java(534,43) ; 3516
ST     0 1           ; 3517
LD     0 0          ; var test ; 3518
LDC    0            ; Named Const = CT.WALL ; 3519
CEQ                  ; 3520
SEL    3524 3527     ; 3521
LD     0 1          ; var retval ; 3522
RTN                  ; 3523
LDC    0            ; branch@3524 ; 3524
ST     0 1           ; 3525
JOIN                 ; 3526
LDC    1            ; branch@3527 ; 3527
ST     0 1           ; 3528
JOIN                 ; 3529
LD     0 0          ;  <== isWalkable2  [ListCons<ListCons<Integer>> map, Point p] (as blk) @src/app/Sample1.java(542,76) ; 3530
LD     0 1          ; var p ; 3531
CDR                 ; generateTupleAccess total=2 pos=1 ; 3532
LD     0 1          ; var p ; 3533
CAR                 ; generateTupleAccess total=2 pos=0 ; 3534
LDF    4220         ;  @getMapItem ; 3535
AP     3             ; 3536
LDC 0               ; local var space ; 3537
LDF    3516         ;  @isWalkable ; 3538
AP     2             ; 3539
RTN                  ; 3540
LD     0 0          ;  <== isJunction  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) @src/app/Sample1.java(548,80) ; 3541
LD     0 2          ; var y ; 3542
LDC    1            ; just constant from code ; 3543
SUB                  ; 3544
LD     0 1          ; var x ; 3545
LDF    4220         ;  @getMapItem ; 3546
AP     3             ; 3547
LDC 0               ; local var space ; 3548
LDF    3516         ;  @isWalkable ; 3549
AP     2             ; 3550
ST     0 3           ; 3551
LD     0 0          ; var map ; 3552
LD     0 2          ; var y ; 3553
LDC    1            ; just constant from code ; 3554
ADD                  ; 3555
LD     0 1          ; var x ; 3556
LDF    4220         ;  @getMapItem ; 3557
AP     3             ; 3558
LDC 0               ; local var space ; 3559
LDF    3516         ;  @isWalkable ; 3560
AP     2             ; 3561
ST     0 4           ; 3562
LD     0 0          ; var map ; 3563
LD     0 2          ; var y ; 3564
LD     0 1          ; var x ; 3565
LDC    1            ; just constant from code ; 3566
SUB                  ; 3567
LDF    4220         ;  @getMapItem ; 3568
AP     3             ; 3569
LDC 0               ; local var space ; 3570
LDF    3516         ;  @isWalkable ; 3571
AP     2             ; 3572
ST     0 5           ; 3573
LD     0 0          ; var map ; 3574
LD     0 2          ; var y ; 3575
LD     0 1          ; var x ; 3576
LDC    1            ; just constant from code ; 3577
ADD                  ; 3578
LDF    4220         ;  @getMapItem ; 3579
AP     3             ; 3580
LDC 0               ; local var space ; 3581
LDF    3516         ;  @isWalkable ; 3582
AP     2             ; 3583
ST     0 6           ; 3584
LD     0 3          ; var a1 ; 3585
LD     0 4          ; var a2 ; 3586
ADD                  ; 3587
LD     0 5          ; var a3 ; 3588
ADD                  ; 3589
LD     0 6          ; var a4 ; 3590
ADD                  ; 3591
ST     0 7           ; 3592
LD     0 7          ; var sum ; 3593
LDC    2            ; just constant from code ; 3594
CGT                  ; 3595
LD     0 7          ; var sum ; 3596
LDC    1            ; just constant from code ; 3597
CEQ                  ; 3598
ADD                  ; 3599
SEL    3602 3604    ; IF? 68 ; 3600
RTN                  ; 3601
LDC    1            ; THEN: 68 ; 3602
JOIN                 ; 3603
LDC    0            ; ELSE: 68 ; 3604
JOIN                 ; 3605
LD     0 0          ;  <== isDeadEnd  [ListCons<ListCons<Integer>> map, int x, int y] (as blk) @src/app/Sample1.java(558,79) ; 3606
LD     0 2          ; var y ; 3607
LDC    1            ; just constant from code ; 3608
SUB                  ; 3609
LD     0 1          ; var x ; 3610
LDF    4220         ;  @getMapItem ; 3611
AP     3             ; 3612
LDC 0               ; local var space ; 3613
LDF    3516         ;  @isWalkable ; 3614
AP     2             ; 3615
ST     0 3           ; 3616
LD     0 0          ; var map ; 3617
LD     0 2          ; var y ; 3618
LDC    1            ; just constant from code ; 3619
ADD                  ; 3620
LD     0 1          ; var x ; 3621
LDF    4220         ;  @getMapItem ; 3622
AP     3             ; 3623
LDC 0               ; local var space ; 3624
LDF    3516         ;  @isWalkable ; 3625
AP     2             ; 3626
ST     0 4           ; 3627
LD     0 0          ; var map ; 3628
LD     0 2          ; var y ; 3629
LD     0 1          ; var x ; 3630
LDC    1            ; just constant from code ; 3631
SUB                  ; 3632
LDF    4220         ;  @getMapItem ; 3633
AP     3             ; 3634
LDC 0               ; local var space ; 3635
LDF    3516         ;  @isWalkable ; 3636
AP     2             ; 3637
ST     0 5           ; 3638
LD     0 0          ; var map ; 3639
LD     0 2          ; var y ; 3640
LD     0 1          ; var x ; 3641
LDC    1            ; just constant from code ; 3642
ADD                  ; 3643
LDF    4220         ;  @getMapItem ; 3644
AP     3             ; 3645
LDC 0               ; local var space ; 3646
LDF    3516         ;  @isWalkable ; 3647
AP     2             ; 3648
ST     0 6           ; 3649
LD     0 3          ; var a1 ; 3650
LD     0 4          ; var a2 ; 3651
ADD                  ; 3652
LD     0 5          ; var a3 ; 3653
ADD                  ; 3654
LD     0 6          ; var a4 ; 3655
ADD                  ; 3656
LDC    1            ; just constant from code ; 3657
CEQ                  ; 3658
SEL    3661 3663    ; IF? 69 ; 3659
RTN                  ; 3660
LDC    1            ; THEN: 69 ; 3661
JOIN                 ; 3662
LDC    0            ; ELSE: 69 ; 3663
JOIN                 ; 3664
LD     0 0          ;  <== findNeighbourJunctions  [ListCons<ListCons<Integer>> map, Point somePoint, SortedMap<Point> allJunctions, ListCons<Point> allJunctions2, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) @src/app/Sample1.java(572,104) ; 3665
LDF    399          ;  @queue_new ; 3666
AP     0             ; 3667
LD     0 1          ; var somePoint ; 3668
LDC    0            ; NULL literal ; 3669
CONS                 ; 3670
LDF    403          ;  @queue_enqueue ; 3671
AP     2             ; 3672
LD     0 2          ; var allJunctions ; 3673
LD     0 3          ; var allJunctions2 ; 3674
LDC    0            ; NULL literal ; 3675
LDC    0            ; just constant from code ; 3676
CONS                 ; 3677
LD     0 1          ; var somePoint ; 3678
LDF    3792         ;  @getPointKey ; 3679
AP     1             ; 3680
LD     0 1          ; var somePoint ; 3681
LDF    1304         ;  @sorted_map_assoc ; 3682
AP     3             ; 3683
LDC    0            ; NULL literal ; 3684
LDC 0               ; local var space ; 3685
LDF    3760         ;  @waveFromPointToNearestJunction ; 3686
AP     7             ; 3687
ST     0 5           ; 3688
LD     0 5          ; var allNeighbourJunctionsPaths ; 3689
LDF    11109        ;  @lambda_1049 ; 3690
LDF    56           ;  @map ; 3691
AP     2             ; 3692
RTN                  ; 3693
LD     0 0          ;  <== eraseFunction1  [Function1 f] (as blk) @src/app/Sample1.java(583,50) ; 3694
RTN                  ; 3695
LD     0 0          ;  <== eraseFunction2  [Function2 f] (as blk) @src/app/Sample1.java(588,50) ; 3696
RTN                  ; 3697
LDF    4273         ;  <== makeParsedEdge  [int id, ListCons<Point> p, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) @src/app/Sample1.java(593,143), ALSO: @array_5 ; 3698
AP     0             ; 3699
ST     0 3           ; 3700
LD     0 0          ; var id ; 3701
LD     0 1          ; var p ; 3702
LD     0 2          ; var accessors ; 3703
LDF    3752         ;  @makeEdgeAccess ; 3704
AP     2             ; 3705
LDC    100          ; Named Const = VMExtras.GET_READER ; 3706
LDC    1            ; just constant from code ; 3707
LD     0 3          ; var a5 ; 3708
AP     2             ; 3709
LDF    3694         ;  @eraseFunction1 ; 3710
AP     1             ; 3711
LDC    100          ; Named Const = VMExtras.GET_READER ; 3712
LDC    0            ; just constant from code ; 3713
LD     0 3          ; var a5 ; 3714
AP     2             ; 3715
LDF    3694         ;  @eraseFunction1 ; 3716
AP     1             ; 3717
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 3718
LDC    2            ; just constant from code ; 3719
LD     0 3          ; var a5 ; 3720
AP     2             ; 3721
LDF    3694         ;  @eraseFunction1 ; 3722
AP     1             ; 3723
LDF    4241         ;  @array_1 ; 3724
AP     0             ; 3725
LDF    3696         ;  @eraseFunction2 ; 3726
AP     1             ; 3727
LDC    100          ; Named Const = VMExtras.GET_READER ; 3728
LDC    3            ; just constant from code ; 3729
LD     0 3          ; var a5 ; 3730
AP     2             ; 3731
LDF    3694         ;  @eraseFunction1 ; 3732
AP     1             ; 3733
LD     0 3          ; var a5 ; 3734
LDF    3696         ;  @eraseFunction2 ; 3735
AP     1             ; 3736
LD     0 1          ; var p ; 3737
CAR                  ; 3738
LD     0 1          ; var p ; 3739
LDF    112          ;  @last ; 3740
AP     1             ; 3741
CONS                 ; 3742
CONS                 ; 3743
CONS                 ; 3744
CONS                 ; 3745
CONS                 ; 3746
CONS                 ; 3747
CONS                 ; 3748
CONS                 ; 3749
CONS                 ; 3750
RTN                  ; 3751
LD     0 0          ;  <== makeEdgeAccess  [ListCons<Point> p, ListCons<Function2<Integer,Integer,Function1<Integer,Integer>>> accessors] (as blk) @src/app/Sample1.java(611,176) ; 3752
LDF    11116        ;  @lambda_1050 ; 3753
LDF    56           ;  @map ; 3754
AP     2             ; 3755
LD     0 0          ; var p ; 3756
LDF    720          ;  @zip ; 3757
AP     2             ; 3758
RTN                  ; 3759
LD     0 1          ;  <== waveFromPointToNearestJunction  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) @src/app/Sample1.java(618,256) ; 3760
LDF    411          ;  @queue_isempty ; 3761
AP     1             ; 3762
SEL    3766 3769     ; 3763
LD     0 6          ; var retval ; 3764
RTN                  ; 3765
LD     0 5          ; branch@3766 ; 3766
ST     0 6           ; 3767
JOIN                 ; 3768
LD     0 0          ; branch@3769 ; 3769
LD     0 1          ; var pointQueue ; 3770
LD     0 2          ; var destinations ; 3771
LD     0 3          ; var destinations2 ; 3772
LD     0 4          ; var visited ; 3773
LD     0 5          ; var acc ; 3774
LDC 0               ; local var space ; 3775
LDC 0               ; local var space ; 3776
LDC 0               ; local var space ; 3777
LDC 0               ; local var space ; 3778
LDC 0               ; local var space ; 3779
LDC 0               ; local var space ; 3780
LDC 0               ; local var space ; 3781
LDC 0               ; local var space ; 3782
LDC 0               ; local var space ; 3783
LDC 0               ; local var space ; 3784
LDC 0               ; local var space ; 3785
LDC 0               ; local var space ; 3786
LDC 0               ; local var space ; 3787
LDF    3805         ;  @waveFromPointToNearestJunction0 ; 3788
AP     19            ; 3789
ST     0 6           ; 3790
JOIN                 ; 3791
LD     0 0          ;  <== getPointKey  [Point pt] (as blk) @src/app/Sample1.java(629,42) ; 3792
CAR                 ; generateTupleAccess total=2 pos=0 ; 3793
LDC    300          ; just constant from code ; 3794
MUL                  ; 3795
LD     0 0          ; var pt ; 3796
CDR                 ; generateTupleAccess total=2 pos=1 ; 3797
ADD                  ; 3798
RTN                  ; 3799
LD     0 0          ;  <== addPointKeyAll  [ListCons<Point> in] (as blk) @src/app/Sample1.java(634,79) ; 3800
LDF    10491        ;  @lambda_1005 ; 3801
LDF    56           ;  @map ; 3802
AP     2             ; 3803
RTN                  ; 3804
LD     0 1          ;  <== waveFromPointToNearestJunction0  [ListCons<ListCons<Integer>> map, Queue<ListCons<Point>> pointQueue, SortedMap<Point> destinations, ListCons<Point> destinations2, SortedMap<Point> visited, ListCons<ListCons<Point>> acc] (as blk) @src/app/Sample1.java(639,257) ; 3805
LDC 0               ; local var space ; 3806
LDF    488          ;  @queue_dequeue ; 3807
AP     2             ; 3808
ST     0 7           ; 3809
LD     0 7          ; var emptier ; 3810
CAR                 ; generateTupleAccess total=2 pos=0 ; 3811
ST     0 8           ; 3812
LD     0 8          ; var thisRoute ; 3813
CAR                  ; 3814
ST     0 9           ; 3815
LD     0 9          ; var weAreHere ; 3816
CAR                 ; generateTupleAccess total=2 pos=0 ; 3817
LDC    1            ; just constant from code ; 3818
ADD                  ; 3819
LD     0 9          ; var weAreHere ; 3820
CDR                 ; generateTupleAccess total=2 pos=1 ; 3821
CONS                 ; 3822
LD     0 9          ; var weAreHere ; 3823
CAR                 ; generateTupleAccess total=2 pos=0 ; 3824
LDC    1            ; just constant from code ; 3825
SUB                  ; 3826
LD     0 9          ; var weAreHere ; 3827
CDR                 ; generateTupleAccess total=2 pos=1 ; 3828
CONS                 ; 3829
LD     0 9          ; var weAreHere ; 3830
CAR                 ; generateTupleAccess total=2 pos=0 ; 3831
LD     0 9          ; var weAreHere ; 3832
CDR                 ; generateTupleAccess total=2 pos=1 ; 3833
LDC    1            ; just constant from code ; 3834
ADD                  ; 3835
CONS                 ; 3836
LD     0 9          ; var weAreHere ; 3837
CAR                 ; generateTupleAccess total=2 pos=0 ; 3838
LD     0 9          ; var weAreHere ; 3839
CDR                 ; generateTupleAccess total=2 pos=1 ; 3840
LDC    1            ; just constant from code ; 3841
SUB                  ; 3842
CONS                 ; 3843
LDC    0            ; NULL literal ; 3844
CONS                 ; 3845
CONS                 ; 3846
CONS                 ; 3847
CONS                 ; 3848
LDF    3800         ;  @addPointKeyAll ; 3849
AP     1             ; 3850
ST     0 10          ; 3851
LD     0 10         ; var possibleDestinations ; 3852
LDF    11126        ;  @lambda_1051 ; 3853
LDF    533          ;  @filter ; 3854
AP     2             ; 3855
ST     0 11          ; 3856
LD     0 11         ; var exits ; 3857
LDF    11140        ;  @lambda_1052 ; 3858
LDF    533          ;  @filter ; 3859
AP     2             ; 3860
ST     0 12          ; 3861
LD     0 11         ; var exits ; 3862
LDF    11146        ;  @lambda_1053 ; 3863
LDF    533          ;  @filter ; 3864
AP     2             ; 3865
ST     0 13          ; 3866
LDC    0            ; NULL literal ; 3867
LDC    1            ; just constant from code ; 3868
CONS                 ; 3869
LD     0 12         ; var arrivedsList ; 3870
LDF    1313         ;  @sorted_map_assoc_all ; 3871
AP     2             ; 3872
ST     0 14          ; 3873
LD     0 11         ; var exits ; 3874
LDF    11151        ;  @lambda_1054 ; 3875
LDF    533          ;  @filter ; 3876
AP     2             ; 3877
ST     0 15          ; 3878
LD     0 15         ; var continueds ; 3879
LDF    11159        ;  @lambda_1055 ; 3880
LDF    56           ;  @map ; 3881
AP     2             ; 3882
ST     0 16          ; 3883
LD     0 16         ; var exitRoutes ; 3884
LD     0 7          ; var emptier ; 3885
CDR                 ; generateTupleAccess total=2 pos=1 ; 3886
LDF    11164        ;  @lambda_1056 ; 3887
LDF    373          ;  @fold0 ; 3888
AP     3             ; 3889
ST     0 17          ; 3890
LD     0 5          ; var acc ; 3891
LD     0 12         ; var arrivedsList ; 3892
LDF    11169        ;  @lambda_1057 ; 3893
LDF    56           ;  @map ; 3894
AP     2             ; 3895
LDF    171          ;  @concat2_set ; 3896
AP     2             ; 3897
ST     0 18          ; 3898
LD     0 12         ; var arrivedsList ; 3899
LDF    528          ;  @length ; 3900
AP     1             ; 3901
LD     0 13         ; var arrivedsList2 ; 3902
LDF    528          ;  @length ; 3903
AP     1             ; 3904
CEQ                  ; 3905
LDC    1            ; for negation ; 3906
SUB                  ; 3907
SEL    3924 3943     ; 3908
LD     0 0          ; var map ; 3909
LD     0 17         ; var filledQueue ; 3910
LD     0 2          ; var destinations ; 3911
LD     0 3          ; var destinations2 ; 3912
LD     0 4          ; var visited ; 3913
LD     0 11         ; var exits ; 3914
LDF    1313         ;  @sorted_map_assoc_all ; 3915
AP     2             ; 3916
LD     0 18         ; var newacc ; 3917
LDC 0               ; local var space ; 3918
LDF    3760         ;  @waveFromPointToNearestJunction ; 3919
AP     7             ; 3920
ST     0 6           ; 3921
LD     0 6          ; var retval ; 3922
RTN                  ; 3923
LDC    5000000      ; branch@3924 ; 3924
DBUG                 ; 3925
LD     0 2          ; var destinations ; 3926
DBUG                 ; 3927
LD     0 3          ; var destinations2 ; 3928
DBUG                 ; 3929
LD     0 12         ; var arrivedsList ; 3930
DBUG                 ; 3931
LD     0 13         ; var arrivedsList2 ; 3932
DBUG                 ; 3933
LD     0 11         ; var exits ; 3934
DBUG                 ; 3935
BRK                  ; 3936
LD     0 11         ; var exits ; 3937
LDF    11451        ;  @lambda_1068 ; 3938
LDF    533          ;  @filter ; 3939
AP     2             ; 3940
DBUG                 ; 3941
JOIN                 ; 3942
JOIN                ; branch@3943 ; 3943
LD     0 1          ;  <== findEdgesForPoint  [Function1<Point,ListCons<ParsedEdge>> edgesForPoint, Point pos] (as blk) @src/app/Sample1.java(675,115) ; 3944
LD     0 0          ; var edgesForPoint ; 3945
AP     1             ; 3946
RTN                  ; 3947
LD     0 0          ;  <== parseMap  [ListCons<ListCons<Integer>> m] (as blk) @src/app/Sample1.java(681,68) ; 3948
LDF    10456        ;  @lambda_1000 ; 3949
LDF    56           ;  @map ; 3950
AP     2             ; 3951
ST     0 1           ; 3952
LDF    10459        ;  @lambda_1001 ; 3953
LD     0 0          ; var m ; 3954
LD     0 1          ; var accessors ; 3955
LDF    656          ;  @zip_with ; 3956
AP     3             ; 3957
ST     0 2           ; 3958
LD     0 2          ; var mapAccessors ; 3959
LDF    10463        ;  @lambda_1002 ; 3960
LDF    56           ;  @map ; 3961
AP     2             ; 3962
ST     0 3           ; 3963
LD     0 0          ; var m ; 3964
LDC    0            ; just constant from code ; 3965
LDF    10470        ;  @lambda_1003 ; 3966
LDF    73           ;  @mapi ; 3967
AP     3             ; 3968
ST     0 4           ; 3969
LD     0 4          ; var toConcat ; 3970
LDF    105          ;  @concat ; 3971
AP     1             ; 3972
ST     0 5           ; 3973
LD     0 5          ; var walkableList ; 3974
LDF    10478        ;  @lambda_1004 ; 3975
LDF    533          ;  @filter ; 3976
AP     2             ; 3977
ST     0 6           ; 3978
LDC    0            ; NULL literal ; 3979
LDC    0            ; just constant from code ; 3980
CONS                 ; 3981
LD     0 5          ; var walkableList ; 3982
LDF    3800         ;  @addPointKeyAll ; 3983
AP     1             ; 3984
LDF    1313         ;  @sorted_map_assoc_all ; 3985
AP     2             ; 3986
ST     0 7           ; 3987
LDC    0            ; NULL literal ; 3988
LDC    0            ; just constant from code ; 3989
CONS                 ; 3990
LD     0 6          ; var junctionsList ; 3991
LDF    3800         ;  @addPointKeyAll ; 3992
AP     1             ; 3993
LDF    1313         ;  @sorted_map_assoc_all ; 3994
AP     2             ; 3995
ST     0 8           ; 3996
LD     0 6          ; var junctionsList ; 3997
LDF    10505        ;  @lambda_1007 ; 3998
LDF    56           ;  @map ; 3999
AP     2             ; 4000
LDF    105          ;  @concat ; 4001
AP     1             ; 4002
ST     0 9           ; 4003
LD     0 9          ; var allParsedEdges ; 4004
LDC    0            ; just constant from code ; 4005
LDF    10514        ;  @lambda_1008 ; 4006
LDF    73           ;  @mapi ; 4007
AP     3             ; 4008
ST     0 9           ; 4009
LD     0 0          ; var m ; 4010
LDF    528          ;  @length ; 4011
AP     1             ; 4012
LDC 0               ; local var space ; 4013
LDC 0               ; local var space ; 4014
LDC 0               ; local var space ; 4015
LDC 0               ; local var space ; 4016
LDC 0               ; local var space ; 4017
LDC 0               ; local var space ; 4018
LDC 0               ; local var space ; 4019
LDF    4383         ;  @emptyEdgesArrayForMap ; 4020
AP     8             ; 4021
ST     0 10          ; 4022
LD     0 9          ; var allParsedEdges ; 4023
LDF    10599        ;  @lambda_1010 ; 4024
LDF    56           ;  @map ; 4025
AP     2             ; 4026
ST     0 11          ; 4027
LD     0 10         ; var edgesForPoint ; 4028
LDF    4381         ;  @toReadOnlyAccessor ; 4029
AP     1             ; 4030
ST     0 12          ; 4031
LD     0 9          ; var allParsedEdges ; 4032
LDF    10613        ;  @lambda_1012 ; 4033
LDF    56           ;  @map ; 4034
AP     2             ; 4035
ST     0 13          ; 4036
LD     0 7          ; var walkable ; 4037
LD     0 8          ; var junctions ; 4038
LD     0 9          ; var allParsedEdges ; 4039
LDC    0            ; NULL literal ; 4040
LDC    0            ; NULL literal ; 4041
LD     0 1          ; var accessors ; 4042
LD     0 12         ; var readOnlyEdgesForPoint ; 4043
CONS                 ; 4044
CONS                 ; 4045
CONS                 ; 4046
CONS                 ; 4047
CONS                 ; 4048
CONS                 ; 4049
RTN                  ; 4050
LD     0 0          ;  <== updateOtherParsedEdgeFields  [ParsedEdge pe, Function1<Point,ListCons<ParsedEdge>> readOnlyEdgesForPoint] (as blk) @src/app/Sample1.java(709,125) ; 4051
CDR                 ; generateTupleAccess total=10 pos=7 ; 4052
CDR                  ; 4053
CDR                  ; 4054
CDR                  ; 4055
CDR                  ; 4056
CDR                  ; 4057
CDR                  ; 4058
CAR                  ; 4059
LDF    3696         ;  @eraseFunction2 ; 4060
AP     1             ; 4061
ST     0 2           ; 4062
LD     0 1          ; var readOnlyEdgesForPoint ; 4063
LD     0 0          ; var pe ; 4064
CDR                 ; generateTupleAccess total=10 pos=8 ; 4065
CDR                  ; 4066
CDR                  ; 4067
CDR                  ; 4068
CDR                  ; 4069
CDR                  ; 4070
CDR                  ; 4071
CDR                  ; 4072
CAR                  ; 4073
LDF    3944         ;  @findEdgesForPoint ; 4074
AP     2             ; 4075
ST     0 3           ; 4076
LD     0 3          ; var edgesForPoint ; 4077
LDF    11174        ;  @lambda_1058 ; 4078
LDF    533          ;  @filter ; 4079
AP     2             ; 4080
ST     0 4           ; 4081
LD     0 3          ; var edgesForPoint ; 4082
LDF    11220        ;  @lambda_1059 ; 4083
LDF    533          ;  @filter ; 4084
AP     2             ; 4085
ST     0 5           ; 4086
LD     0 1          ; var readOnlyEdgesForPoint ; 4087
LD     0 0          ; var pe ; 4088
CDR                 ; generateTupleAccess total=10 pos=9 ; 4089
CDR                  ; 4090
CDR                  ; 4091
CDR                  ; 4092
CDR                  ; 4093
CDR                  ; 4094
CDR                  ; 4095
CDR                  ; 4096
CDR                  ; 4097
LDF    3944         ;  @findEdgesForPoint ; 4098
AP     2             ; 4099
ST     0 6           ; 4100
LD     0 6          ; var following ; 4101
LDF    11298        ;  @lambda_1060 ; 4102
LDF    533          ;  @filter ; 4103
AP     2             ; 4104
ST     0 7           ; 4105
LD     0 4          ; var oppositeEdge ; 4106
CAR                  ; 4107
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 4108
LDC    1            ; just constant from code ; 4109
LD     0 2          ; var a5 ; 4110
AP     2             ; 4111
AP     1             ; 4112
ST     0 8           ; 4113
LD     0 5          ; var precedingEdges ; 4114
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 4115
LDC    0            ; just constant from code ; 4116
LD     0 2          ; var a5 ; 4117
AP     2             ; 4118
AP     1             ; 4119
ST     0 8           ; 4120
LD     0 7          ; var followingEdges ; 4121
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 4122
LDC    3            ; just constant from code ; 4123
LD     0 2          ; var a5 ; 4124
AP     2             ; 4125
AP     1             ; 4126
ST     0 8           ; 4127
LDC    0            ; just constant from code ; 4128
RTN                  ; 4129
LD     0 0          ;  <== my_cat_maybes  [ListCons<Maybe<Point>> maybeListCons] (as blk) @src/app/Sample1.java(724,80) ; 4130
LDC 0               ; local var space ; 4131
LDC 0               ; local var space ; 4132
LDF    94           ;  @cat_maybes ; 4133
AP     3             ; 4134
ST     0 1           ; 4135
LD     0 1          ; var rv ; 4136
RTN                  ; 4137
LD     0 0          ;  <== collectWalkableXY  [ListCons<Integer> row, Integer rowy] (as blk) @src/app/Sample1.java(730,90) ; 4138
LDC    0            ; just constant from code ; 4139
LDF    11376        ;  @lambda_1061 ; 4140
LDF    73           ;  @mapi ; 4141
AP     3             ; 4142
RTN                  ; 4143
LD     0 0          ;  <== parseStaticMap  [ListCons<ListCons<Integer>> map] (as blk) @src/app/Sample1.java(735,76) ; 4144
LDC 0               ; local var space ; 4145
LDC 0               ; local var space ; 4146
LDC 0               ; local var space ; 4147
LDC 0               ; local var space ; 4148
LDC 0               ; local var space ; 4149
LDC 0               ; local var space ; 4150
LDC 0               ; local var space ; 4151
LDC 0               ; local var space ; 4152
LDC 0               ; local var space ; 4153
LDC 0               ; local var space ; 4154
LDC 0               ; local var space ; 4155
LDC 0               ; local var space ; 4156
LDC 0               ; local var space ; 4157
LDF    3948         ;  @parseMap ; 4158
AP     14            ; 4159
RTN                  ; 4160
LDF    399          ;  <== test2  [] (as blk) @src/app/Sample1.java(741,24), ALSO: @queue_new ; 4161
AP     0             ; 4162
LDC    1            ; just constant from code ; 4163
LDF    403          ;  @queue_enqueue ; 4164
AP     2             ; 4165
LDC    2            ; just constant from code ; 4166
LDF    403          ;  @queue_enqueue ; 4167
AP     2             ; 4168
LDC    3            ; just constant from code ; 4169
LDF    403          ;  @queue_enqueue ; 4170
AP     2             ; 4171
ST     0 0           ; 4172
LD     0 0          ; var queue ; 4173
LDC 0               ; local var space ; 4174
LDF    488          ;  @queue_dequeue ; 4175
AP     2             ; 4176
ST     0 1           ; 4177
LD     0 1          ; var q1 ; 4178
CDR                 ; generateTupleAccess total=2 pos=1 ; 4179
LDC 0               ; local var space ; 4180
LDF    488          ;  @queue_dequeue ; 4181
AP     2             ; 4182
ST     0 1           ; 4183
LD     0 1          ; var q1 ; 4184
CDR                 ; generateTupleAccess total=2 pos=1 ; 4185
LDC 0               ; local var space ; 4186
LDF    488          ;  @queue_dequeue ; 4187
AP     2             ; 4188
ST     0 1           ; 4189
LDC    1            ; just constant from code ; 4190
RTN                  ; 4191
LDC    0            ;  <== test3  [] (as blk) @src/app/Sample1.java(750,24) ; 4192
LDC    0            ; just constant from code ; 4193
CONS                 ; 4194
ST     0 0           ; 4195
LD     0 0          ; var map ; 4196
LDC    30           ; just constant from code ; 4197
LDC    31           ; just constant from code ; 4198
LDF    1304         ;  @sorted_map_assoc ; 4199
AP     3             ; 4200
LDC    20           ; just constant from code ; 4201
LDC    21           ; just constant from code ; 4202
LDF    1304         ;  @sorted_map_assoc ; 4203
AP     3             ; 4204
LDC    10           ; just constant from code ; 4205
LDC    11           ; just constant from code ; 4206
LDF    1304         ;  @sorted_map_assoc ; 4207
AP     3             ; 4208
ST     0 1           ; 4209
LD     0 1          ; var new_map2 ; 4210
LDC    20           ; just constant from code ; 4211
LDC    33           ; just constant from code ; 4212
LDF    1304         ;  @sorted_map_assoc ; 4213
AP     3             ; 4214
LDC    20           ; just constant from code ; 4215
LDC    88           ; just constant from code ; 4216
LDF    1288         ;  @sorted_map_get ; 4217
AP     3             ; 4218
RTN                  ; 4219
LDC    0            ;  <== getMapItem  [ListCons<ListCons<Integer>> map, int y, int x] (as blk) @src/app/Sample1.java(791,84) ; 4220
LD     0 1          ; var y ; 4221
CGT                  ; 4222
LDC    0            ; just constant from code ; 4223
LD     0 2          ; var x ; 4224
CGT                  ; 4225
ADD                  ; 4226
SEL    4229 4231    ; IF? 67 ; 4227
RTN                  ; 4228
LDC    0            ; THEN: 67 ; 4229
JOIN                 ; 4230
LD     0 0          ; ELSE: 67 ; 4231
LD     0 1          ; var y ; 4232
LDC    0            ; just constant from code ; 4233
LDF    465          ;  @list_item_def ; 4234
AP     3             ; 4235
LD     0 2          ; var x ; 4236
LDC    0            ; just constant from code ; 4237
LDF    465          ;  @list_item_def ; 4238
AP     3             ; 4239
JOIN                 ; 4240
LDC 0               ; generated from native: array_1 ; 4241
LDF 4245             ; 4242
AP 1                 ; 4243
RTN                  ; 4244
LDF  4247            ; 4245
RTN                  ; 4246
LD  0   0            ; 4247
LDC 100              ; 4248
CEQ                  ; 4249
TSEL    4251 4257    ; 4250
LD  0   1            ; 4251
LDC 0                ; 4252
CEQ                  ; 4253
TSEL    4265 4255    ; 4254
LDC  0               ; 4255
RTN                  ; 4256
LD  0   1            ; 4257
LDC 0                ; 4258
CEQ                  ; 4259
TSEL    4271 4261    ; 4260
LDC  0               ; 4261
RTN                  ; 4262
LD  2   0            ; 4263
RTN                  ; 4264
LDF 4263             ; 4265
RTN                  ; 4266
LD  2   0            ; 4267
LD  0   0            ; 4268
ST  2   0            ; 4269
RTN                  ; 4270
LDF 4267             ; 4271
RTN                  ; 4272
LDC 0               ; generated from native: array_5 ; 4273
LDC 0                ; 4274
LDC 0                ; 4275
LDC 0                ; 4276
LDC 0                ; 4277
LDF 4281             ; 4278
AP 5                 ; 4279
RTN                  ; 4280
LDF  4283            ; 4281
RTN                  ; 4282
LD  0   0            ; 4283
LDC 100              ; 4284
CEQ                  ; 4285
TSEL    4287 4309    ; 4286
LD  0   1            ; 4287
LDC 0                ; 4288
CEQ                  ; 4289
TSEL    4333 4291    ; 4290
LD  0   1            ; 4291
LDC 1                ; 4292
CEQ                  ; 4293
TSEL    4343 4295    ; 4294
LD  0   1            ; 4295
LDC 2                ; 4296
CEQ                  ; 4297
TSEL    4353 4299    ; 4298
LD  0   1            ; 4299
LDC 3                ; 4300
CEQ                  ; 4301
TSEL    4363 4303    ; 4302
LD  0   1            ; 4303
LDC 4                ; 4304
CEQ                  ; 4305
TSEL    4373 4307    ; 4306
LDC  0               ; 4307
RTN                  ; 4308
LD  0   1            ; 4309
LDC 0                ; 4310
CEQ                  ; 4311
TSEL    4339 4313    ; 4312
LD  0   1            ; 4313
LDC 1                ; 4314
CEQ                  ; 4315
TSEL    4349 4317    ; 4316
LD  0   1            ; 4317
LDC 2                ; 4318
CEQ                  ; 4319
TSEL    4359 4321    ; 4320
LD  0   1            ; 4321
LDC 3                ; 4322
CEQ                  ; 4323
TSEL    4369 4325    ; 4324
LD  0   1            ; 4325
LDC 4                ; 4326
CEQ                  ; 4327
TSEL    4379 4329    ; 4328
LDC  0               ; 4329
RTN                  ; 4330
LD  2   0            ; 4331
RTN                  ; 4332
LDF 4331             ; 4333
RTN                  ; 4334
LD  2   0            ; 4335
LD  0   0            ; 4336
ST  2   0            ; 4337
RTN                  ; 4338
LDF 4335             ; 4339
RTN                  ; 4340
LD  2   1            ; 4341
RTN                  ; 4342
LDF 4341             ; 4343
RTN                  ; 4344
LD  2   1            ; 4345
LD  0   0            ; 4346
ST  2   1            ; 4347
RTN                  ; 4348
LDF 4345             ; 4349
RTN                  ; 4350
LD  2   2            ; 4351
RTN                  ; 4352
LDF 4351             ; 4353
RTN                  ; 4354
LD  2   2            ; 4355
LD  0   0            ; 4356
ST  2   2            ; 4357
RTN                  ; 4358
LDF 4355             ; 4359
RTN                  ; 4360
LD  2   3            ; 4361
RTN                  ; 4362
LDF 4361             ; 4363
RTN                  ; 4364
LD  2   3            ; 4365
LD  0   0            ; 4366
ST  2   3            ; 4367
RTN                  ; 4368
LDF 4365             ; 4369
RTN                  ; 4370
LD  2   4            ; 4371
RTN                  ; 4372
LDF 4371             ; 4373
RTN                  ; 4374
LD  2   4            ; 4375
LD  0   0            ; 4376
ST  2   4            ; 4377
RTN                  ; 4378
LDF 4375             ; 4379
RTN                  ; 4380
LDF    10606        ;  <== toReadOnlyAccessor  [final Function2<Integer,Key,Function1<Value,Value>> readWriteAccessor] (as blk) @src/app/VMExtras.java(25,146), ALSO: @lambda_1011 ; 4381
RTN                  ; 4382
LDF    4485         ;  <== emptyEdgesArrayForMap  [int h] (as blk) @src/app/VMExtras.java(30,128), ALSO: @array_256 ; 4383
AP     0             ; 4384
ST     0 1           ; 4385
LD     0 1          ; var wrapper ; 4386
LD     0 0          ; var h ; 4387
LDC 0               ; local var space ; 4388
LDC 0               ; local var space ; 4389
LDC 0               ; local var space ; 4390
LDC 0               ; local var space ; 4391
LDF    4433         ;  @fillArrayForMap ; 4392
AP     6             ; 4393
ST     0 2           ; 4394
LDC    911110000    ; just constant from code ; 4395
DBUG                 ; 4396
LD     0 2          ; var ignore ; 4397
DBUG                 ; 4398
LDC    2            ; just constant from code ; 4399
LDC    3            ; just constant from code ; 4400
CONS                 ; 4401
ST     0 3           ; 4402
LDC    100          ; Named Const = VMExtras.GET_READER ; 4403
LD     0 3          ; var pt ; 4404
CDR                 ; generateTupleAccess total=2 pos=1 ; 4405
LD     0 1          ; var wrapper ; 4406
AP     2             ; 4407
ST     0 4           ; 4408
LDC    92222        ; just constant from code ; 4409
DBUG                 ; 4410
LDC    0            ; NULL literal ; 4411
LD     0 4          ; var apply ; 4412
AP     1             ; 4413
ST     0 5           ; 4414
LDC    93333        ; just constant from code ; 4415
DBUG                 ; 4416
LDC    100          ; Named Const = VMExtras.GET_READER ; 4417
LD     0 3          ; var pt ; 4418
CAR                 ; generateTupleAccess total=2 pos=0 ; 4419
LD     0 5          ; var apply1 ; 4420
AP     2             ; 4421
ST     0 6           ; 4422
LDC    94444        ; just constant from code ; 4423
DBUG                 ; 4424
LDC    0            ; NULL literal ; 4425
LD     0 6          ; var apply2 ; 4426
AP     1             ; 4427
ST     0 7           ; 4428
LDC    95555        ; just constant from code ; 4429
DBUG                 ; 4430
LDF    10587        ;  @lambda_1009 ; 4431
RTN                  ; 4432
LDC    0            ;  <== fillArrayForMap  [Function2<Integer,Integer,Function1<Function2<Integer,Integer,Function1<ListCons<ParsedEdge>,ListCons<ParsedEdge>>>,Function2<Integer,Integer,Function1<ListCons<ParsedEdge>,ListCons<ParsedEdge>>>>> wrapper, int h] (as blk) @src/app/VMExtras.java(51,262) ; 4433
ST     0 2           ; 4434
LD     0 1          ; var h ; 4435
LDC    0            ; just constant from code ; 4436
CGT                  ; 4437
SEL    4441 4484     ; 4438
LD     0 2          ; var res ; 4439
RTN                  ; 4440
LDF    4485         ; branch@4441, ALSO: @array_256 ; 4441
AP     0             ; 4442
ST     0 5           ; 4443
BRK                  ; 4444
LD     0 5          ; var a256 ; 4445
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 4446
LD     0 1          ; var h ; 4447
LDC    1            ; just constant from code ; 4448
SUB                  ; 4449
LD     0 0          ; var wrapper ; 4450
AP     2             ; 4451
AP     1             ; 4452
ST     0 3           ; 4453
LDC    0            ; NULL literal ; 4454
LDC    100          ; Named Const = VMExtras.GET_READER ; 4455
LD     0 1          ; var h ; 4456
LDC    1            ; just constant from code ; 4457
SUB                  ; 4458
LD     0 0          ; var wrapper ; 4459
AP     2             ; 4460
AP     1             ; 4461
ST     0 4           ; 4462
BRK                  ; 4463
LDC    91000001     ; just constant from code ; 4464
DBUG                 ; 4465
LD     0 4          ; var testStuff ; 4466
DBUG                 ; 4467
LD     0 5          ; var a256 ; 4468
DBUG                 ; 4469
LD     0 0          ; var wrapper ; 4470
LD     0 1          ; var h ; 4471
LDC    1            ; just constant from code ; 4472
SUB                  ; 4473
LDC 0               ; local var space ; 4474
LDC 0               ; local var space ; 4475
LDC 0               ; local var space ; 4476
LDC 0               ; local var space ; 4477
LDF    4433         ;  @fillArrayForMap ; 4478
AP     6             ; 4479
LDC    1            ; just constant from code ; 4480
ADD                  ; 4481
ST     0 2           ; 4482
JOIN                 ; 4483
JOIN                ; branch@4484 ; 4484
LDC 0               ; generated from native: array_256 ; 4485
LDC 0                ; 4486
LDC 0                ; 4487
LDC 0                ; 4488
LDC 0                ; 4489
LDC 0                ; 4490
LDC 0                ; 4491
LDC 0                ; 4492
LDC 0                ; 4493
LDC 0                ; 4494
LDC 0                ; 4495
LDC 0                ; 4496
LDC 0                ; 4497
LDC 0                ; 4498
LDC 0                ; 4499
LDC 0                ; 4500
LDC 0                ; 4501
LDC 0                ; 4502
LDC 0                ; 4503
LDC 0                ; 4504
LDC 0                ; 4505
LDC 0                ; 4506
LDC 0                ; 4507
LDC 0                ; 4508
LDC 0                ; 4509
LDC 0                ; 4510
LDC 0                ; 4511
LDC 0                ; 4512
LDC 0                ; 4513
LDC 0                ; 4514
LDC 0                ; 4515
LDC 0                ; 4516
LDC 0                ; 4517
LDC 0                ; 4518
LDC 0                ; 4519
LDC 0                ; 4520
LDC 0                ; 4521
LDC 0                ; 4522
LDC 0                ; 4523
LDC 0                ; 4524
LDC 0                ; 4525
LDC 0                ; 4526
LDC 0                ; 4527
LDC 0                ; 4528
LDC 0                ; 4529
LDC 0                ; 4530
LDC 0                ; 4531
LDC 0                ; 4532
LDC 0                ; 4533
LDC 0                ; 4534
LDC 0                ; 4535
LDC 0                ; 4536
LDC 0                ; 4537
LDC 0                ; 4538
LDC 0                ; 4539
LDC 0                ; 4540
LDC 0                ; 4541
LDC 0                ; 4542
LDC 0                ; 4543
LDC 0                ; 4544
LDC 0                ; 4545
LDC 0                ; 4546
LDC 0                ; 4547
LDC 0                ; 4548
LDC 0                ; 4549
LDC 0                ; 4550
LDC 0                ; 4551
LDC 0                ; 4552
LDC 0                ; 4553
LDC 0                ; 4554
LDC 0                ; 4555
LDC 0                ; 4556
LDC 0                ; 4557
LDC 0                ; 4558
LDC 0                ; 4559
LDC 0                ; 4560
LDC 0                ; 4561
LDC 0                ; 4562
LDC 0                ; 4563
LDC 0                ; 4564
LDC 0                ; 4565
LDC 0                ; 4566
LDC 0                ; 4567
LDC 0                ; 4568
LDC 0                ; 4569
LDC 0                ; 4570
LDC 0                ; 4571
LDC 0                ; 4572
LDC 0                ; 4573
LDC 0                ; 4574
LDC 0                ; 4575
LDC 0                ; 4576
LDC 0                ; 4577
LDC 0                ; 4578
LDC 0                ; 4579
LDC 0                ; 4580
LDC 0                ; 4581
LDC 0                ; 4582
LDC 0                ; 4583
LDC 0                ; 4584
LDC 0                ; 4585
LDC 0                ; 4586
LDC 0                ; 4587
LDC 0                ; 4588
LDC 0                ; 4589
LDC 0                ; 4590
LDC 0                ; 4591
LDC 0                ; 4592
LDC 0                ; 4593
LDC 0                ; 4594
LDC 0                ; 4595
LDC 0                ; 4596
LDC 0                ; 4597
LDC 0                ; 4598
LDC 0                ; 4599
LDC 0                ; 4600
LDC 0                ; 4601
LDC 0                ; 4602
LDC 0                ; 4603
LDC 0                ; 4604
LDC 0                ; 4605
LDC 0                ; 4606
LDC 0                ; 4607
LDC 0                ; 4608
LDC 0                ; 4609
LDC 0                ; 4610
LDC 0                ; 4611
LDC 0                ; 4612
LDC 0                ; 4613
LDC 0                ; 4614
LDC 0                ; 4615
LDC 0                ; 4616
LDC 0                ; 4617
LDC 0                ; 4618
LDC 0                ; 4619
LDC 0                ; 4620
LDC 0                ; 4621
LDC 0                ; 4622
LDC 0                ; 4623
LDC 0                ; 4624
LDC 0                ; 4625
LDC 0                ; 4626
LDC 0                ; 4627
LDC 0                ; 4628
LDC 0                ; 4629
LDC 0                ; 4630
LDC 0                ; 4631
LDC 0                ; 4632
LDC 0                ; 4633
LDC 0                ; 4634
LDC 0                ; 4635
LDC 0                ; 4636
LDC 0                ; 4637
LDC 0                ; 4638
LDC 0                ; 4639
LDC 0                ; 4640
LDC 0                ; 4641
LDC 0                ; 4642
LDC 0                ; 4643
LDC 0                ; 4644
LDC 0                ; 4645
LDC 0                ; 4646
LDC 0                ; 4647
LDC 0                ; 4648
LDC 0                ; 4649
LDC 0                ; 4650
LDC 0                ; 4651
LDC 0                ; 4652
LDC 0                ; 4653
LDC 0                ; 4654
LDC 0                ; 4655
LDC 0                ; 4656
LDC 0                ; 4657
LDC 0                ; 4658
LDC 0                ; 4659
LDC 0                ; 4660
LDC 0                ; 4661
LDC 0                ; 4662
LDC 0                ; 4663
LDC 0                ; 4664
LDC 0                ; 4665
LDC 0                ; 4666
LDC 0                ; 4667
LDC 0                ; 4668
LDC 0                ; 4669
LDC 0                ; 4670
LDC 0                ; 4671
LDC 0                ; 4672
LDC 0                ; 4673
LDC 0                ; 4674
LDC 0                ; 4675
LDC 0                ; 4676
LDC 0                ; 4677
LDC 0                ; 4678
LDC 0                ; 4679
LDC 0                ; 4680
LDC 0                ; 4681
LDC 0                ; 4682
LDC 0                ; 4683
LDC 0                ; 4684
LDC 0                ; 4685
LDC 0                ; 4686
LDC 0                ; 4687
LDC 0                ; 4688
LDC 0                ; 4689
LDC 0                ; 4690
LDC 0                ; 4691
LDC 0                ; 4692
LDC 0                ; 4693
LDC 0                ; 4694
LDC 0                ; 4695
LDC 0                ; 4696
LDC 0                ; 4697
LDC 0                ; 4698
LDC 0                ; 4699
LDC 0                ; 4700
LDC 0                ; 4701
LDC 0                ; 4702
LDC 0                ; 4703
LDC 0                ; 4704
LDC 0                ; 4705
LDC 0                ; 4706
LDC 0                ; 4707
LDC 0                ; 4708
LDC 0                ; 4709
LDC 0                ; 4710
LDC 0                ; 4711
LDC 0                ; 4712
LDC 0                ; 4713
LDC 0                ; 4714
LDC 0                ; 4715
LDC 0                ; 4716
LDC 0                ; 4717
LDC 0                ; 4718
LDC 0                ; 4719
LDC 0                ; 4720
LDC 0                ; 4721
LDC 0                ; 4722
LDC 0                ; 4723
LDC 0                ; 4724
LDC 0                ; 4725
LDC 0                ; 4726
LDC 0                ; 4727
LDC 0                ; 4728
LDC 0                ; 4729
LDC 0                ; 4730
LDC 0                ; 4731
LDC 0                ; 4732
LDC 0                ; 4733
LDC 0                ; 4734
LDC 0                ; 4735
LDC 0                ; 4736
LDC 0                ; 4737
LDC 0                ; 4738
LDC 0                ; 4739
LDC 0                ; 4740
LDF 4744             ; 4741
AP 256               ; 4742
RTN                  ; 4743
LDF  4746            ; 4744
RTN                  ; 4745
LD  0   0            ; 4746
LDC 100              ; 4747
CEQ                  ; 4748
TSEL  4750 5770      ; 4749
LD 0 1               ; 4750
LDC 127              ; 4751
CGT                  ; 4752
TSEL 5262 4754       ; 4753
LD 0 1               ; 4754
LDC 63               ; 4755
CGT                  ; 4756
TSEL 5010 4758       ; 4757
LD 0 1               ; 4758
LDC 31               ; 4759
CGT                  ; 4760
TSEL 4886 4762       ; 4761
LD 0 1               ; 4762
LDC 15               ; 4763
CGT                  ; 4764
TSEL 4826 4766       ; 4765
LD 0 1               ; 4766
LDC 7                ; 4767
CGT                  ; 4768
TSEL 4798 4770       ; 4769
LD 0 1               ; 4770
LDC 3                ; 4771
CGT                  ; 4772
TSEL 4786 4774       ; 4773
LD 0 1               ; 4774
LDC 1                ; 4775
CGT                  ; 4776
TSEL 4782 4778       ; 4777
LD 0 1               ; 4778
LDC 0                ; 4779
CGT                  ; 4780
TSEL 6802 6792       ; 4781
LD 0 1               ; 4782
LDC 2                ; 4783
CGT                  ; 4784
TSEL 6822 6812       ; 4785
LD 0 1               ; 4786
LDC 5                ; 4787
CGT                  ; 4788
TSEL 4794 4790       ; 4789
LD 0 1               ; 4790
LDC 4                ; 4791
CGT                  ; 4792
TSEL 6842 6832       ; 4793
LD 0 1               ; 4794
LDC 6                ; 4795
CGT                  ; 4796
TSEL 6862 6852       ; 4797
LD 0 1               ; 4798
LDC 11               ; 4799
CGT                  ; 4800
TSEL 4814 4802       ; 4801
LD 0 1               ; 4802
LDC 9                ; 4803
CGT                  ; 4804
TSEL 4810 4806       ; 4805
LD 0 1               ; 4806
LDC 8                ; 4807
CGT                  ; 4808
TSEL 6882 6872       ; 4809
LD 0 1               ; 4810
LDC 10               ; 4811
CGT                  ; 4812
TSEL 6902 6892       ; 4813
LD 0 1               ; 4814
LDC 13               ; 4815
CGT                  ; 4816
TSEL 4822 4818       ; 4817
LD 0 1               ; 4818
LDC 12               ; 4819
CGT                  ; 4820
TSEL 6922 6912       ; 4821
LD 0 1               ; 4822
LDC 14               ; 4823
CGT                  ; 4824
TSEL 6942 6932       ; 4825
LD 0 1               ; 4826
LDC 23               ; 4827
CGT                  ; 4828
TSEL 4858 4830       ; 4829
LD 0 1               ; 4830
LDC 19               ; 4831
CGT                  ; 4832
TSEL 4846 4834       ; 4833
LD 0 1               ; 4834
LDC 17               ; 4835
CGT                  ; 4836
TSEL 4842 4838       ; 4837
LD 0 1               ; 4838
LDC 16               ; 4839
CGT                  ; 4840
TSEL 6962 6952       ; 4841
LD 0 1               ; 4842
LDC 18               ; 4843
CGT                  ; 4844
TSEL 6982 6972       ; 4845
LD 0 1               ; 4846
LDC 21               ; 4847
CGT                  ; 4848
TSEL 4854 4850       ; 4849
LD 0 1               ; 4850
LDC 20               ; 4851
CGT                  ; 4852
TSEL 7002 6992       ; 4853
LD 0 1               ; 4854
LDC 22               ; 4855
CGT                  ; 4856
TSEL 7022 7012       ; 4857
LD 0 1               ; 4858
LDC 27               ; 4859
CGT                  ; 4860
TSEL 4874 4862       ; 4861
LD 0 1               ; 4862
LDC 25               ; 4863
CGT                  ; 4864
TSEL 4870 4866       ; 4865
LD 0 1               ; 4866
LDC 24               ; 4867
CGT                  ; 4868
TSEL 7042 7032       ; 4869
LD 0 1               ; 4870
LDC 26               ; 4871
CGT                  ; 4872
TSEL 7062 7052       ; 4873
LD 0 1               ; 4874
LDC 29               ; 4875
CGT                  ; 4876
TSEL 4882 4878       ; 4877
LD 0 1               ; 4878
LDC 28               ; 4879
CGT                  ; 4880
TSEL 7082 7072       ; 4881
LD 0 1               ; 4882
LDC 30               ; 4883
CGT                  ; 4884
TSEL 7102 7092       ; 4885
LD 0 1               ; 4886
LDC 47               ; 4887
CGT                  ; 4888
TSEL 4950 4890       ; 4889
LD 0 1               ; 4890
LDC 39               ; 4891
CGT                  ; 4892
TSEL 4922 4894       ; 4893
LD 0 1               ; 4894
LDC 35               ; 4895
CGT                  ; 4896
TSEL 4910 4898       ; 4897
LD 0 1               ; 4898
LDC 33               ; 4899
CGT                  ; 4900
TSEL 4906 4902       ; 4901
LD 0 1               ; 4902
LDC 32               ; 4903
CGT                  ; 4904
TSEL 7122 7112       ; 4905
LD 0 1               ; 4906
LDC 34               ; 4907
CGT                  ; 4908
TSEL 7142 7132       ; 4909
LD 0 1               ; 4910
LDC 37               ; 4911
CGT                  ; 4912
TSEL 4918 4914       ; 4913
LD 0 1               ; 4914
LDC 36               ; 4915
CGT                  ; 4916
TSEL 7162 7152       ; 4917
LD 0 1               ; 4918
LDC 38               ; 4919
CGT                  ; 4920
TSEL 7182 7172       ; 4921
LD 0 1               ; 4922
LDC 43               ; 4923
CGT                  ; 4924
TSEL 4938 4926       ; 4925
LD 0 1               ; 4926
LDC 41               ; 4927
CGT                  ; 4928
TSEL 4934 4930       ; 4929
LD 0 1               ; 4930
LDC 40               ; 4931
CGT                  ; 4932
TSEL 7202 7192       ; 4933
LD 0 1               ; 4934
LDC 42               ; 4935
CGT                  ; 4936
TSEL 7222 7212       ; 4937
LD 0 1               ; 4938
LDC 45               ; 4939
CGT                  ; 4940
TSEL 4946 4942       ; 4941
LD 0 1               ; 4942
LDC 44               ; 4943
CGT                  ; 4944
TSEL 7242 7232       ; 4945
LD 0 1               ; 4946
LDC 46               ; 4947
CGT                  ; 4948
TSEL 7262 7252       ; 4949
LD 0 1               ; 4950
LDC 55               ; 4951
CGT                  ; 4952
TSEL 4982 4954       ; 4953
LD 0 1               ; 4954
LDC 51               ; 4955
CGT                  ; 4956
TSEL 4970 4958       ; 4957
LD 0 1               ; 4958
LDC 49               ; 4959
CGT                  ; 4960
TSEL 4966 4962       ; 4961
LD 0 1               ; 4962
LDC 48               ; 4963
CGT                  ; 4964
TSEL 7282 7272       ; 4965
LD 0 1               ; 4966
LDC 50               ; 4967
CGT                  ; 4968
TSEL 7302 7292       ; 4969
LD 0 1               ; 4970
LDC 53               ; 4971
CGT                  ; 4972
TSEL 4978 4974       ; 4973
LD 0 1               ; 4974
LDC 52               ; 4975
CGT                  ; 4976
TSEL 7322 7312       ; 4977
LD 0 1               ; 4978
LDC 54               ; 4979
CGT                  ; 4980
TSEL 7342 7332       ; 4981
LD 0 1               ; 4982
LDC 59               ; 4983
CGT                  ; 4984
TSEL 4998 4986       ; 4985
LD 0 1               ; 4986
LDC 57               ; 4987
CGT                  ; 4988
TSEL 4994 4990       ; 4989
LD 0 1               ; 4990
LDC 56               ; 4991
CGT                  ; 4992
TSEL 7362 7352       ; 4993
LD 0 1               ; 4994
LDC 58               ; 4995
CGT                  ; 4996
TSEL 7382 7372       ; 4997
LD 0 1               ; 4998
LDC 61               ; 4999
CGT                  ; 5000
TSEL 5006 5002       ; 5001
LD 0 1               ; 5002
LDC 60               ; 5003
CGT                  ; 5004
TSEL 7402 7392       ; 5005
LD 0 1               ; 5006
LDC 62               ; 5007
CGT                  ; 5008
TSEL 7422 7412       ; 5009
LD 0 1               ; 5010
LDC 95               ; 5011
CGT                  ; 5012
TSEL 5138 5014       ; 5013
LD 0 1               ; 5014
LDC 79               ; 5015
CGT                  ; 5016
TSEL 5078 5018       ; 5017
LD 0 1               ; 5018
LDC 71               ; 5019
CGT                  ; 5020
TSEL 5050 5022       ; 5021
LD 0 1               ; 5022
LDC 67               ; 5023
CGT                  ; 5024
TSEL 5038 5026       ; 5025
LD 0 1               ; 5026
LDC 65               ; 5027
CGT                  ; 5028
TSEL 5034 5030       ; 5029
LD 0 1               ; 5030
LDC 64               ; 5031
CGT                  ; 5032
TSEL 7442 7432       ; 5033
LD 0 1               ; 5034
LDC 66               ; 5035
CGT                  ; 5036
TSEL 7462 7452       ; 5037
LD 0 1               ; 5038
LDC 69               ; 5039
CGT                  ; 5040
TSEL 5046 5042       ; 5041
LD 0 1               ; 5042
LDC 68               ; 5043
CGT                  ; 5044
TSEL 7482 7472       ; 5045
LD 0 1               ; 5046
LDC 70               ; 5047
CGT                  ; 5048
TSEL 7502 7492       ; 5049
LD 0 1               ; 5050
LDC 75               ; 5051
CGT                  ; 5052
TSEL 5066 5054       ; 5053
LD 0 1               ; 5054
LDC 73               ; 5055
CGT                  ; 5056
TSEL 5062 5058       ; 5057
LD 0 1               ; 5058
LDC 72               ; 5059
CGT                  ; 5060
TSEL 7522 7512       ; 5061
LD 0 1               ; 5062
LDC 74               ; 5063
CGT                  ; 5064
TSEL 7542 7532       ; 5065
LD 0 1               ; 5066
LDC 77               ; 5067
CGT                  ; 5068
TSEL 5074 5070       ; 5069
LD 0 1               ; 5070
LDC 76               ; 5071
CGT                  ; 5072
TSEL 7562 7552       ; 5073
LD 0 1               ; 5074
LDC 78               ; 5075
CGT                  ; 5076
TSEL 7582 7572       ; 5077
LD 0 1               ; 5078
LDC 87               ; 5079
CGT                  ; 5080
TSEL 5110 5082       ; 5081
LD 0 1               ; 5082
LDC 83               ; 5083
CGT                  ; 5084
TSEL 5098 5086       ; 5085
LD 0 1               ; 5086
LDC 81               ; 5087
CGT                  ; 5088
TSEL 5094 5090       ; 5089
LD 0 1               ; 5090
LDC 80               ; 5091
CGT                  ; 5092
TSEL 7602 7592       ; 5093
LD 0 1               ; 5094
LDC 82               ; 5095
CGT                  ; 5096
TSEL 7622 7612       ; 5097
LD 0 1               ; 5098
LDC 85               ; 5099
CGT                  ; 5100
TSEL 5106 5102       ; 5101
LD 0 1               ; 5102
LDC 84               ; 5103
CGT                  ; 5104
TSEL 7642 7632       ; 5105
LD 0 1               ; 5106
LDC 86               ; 5107
CGT                  ; 5108
TSEL 7662 7652       ; 5109
LD 0 1               ; 5110
LDC 91               ; 5111
CGT                  ; 5112
TSEL 5126 5114       ; 5113
LD 0 1               ; 5114
LDC 89               ; 5115
CGT                  ; 5116
TSEL 5122 5118       ; 5117
LD 0 1               ; 5118
LDC 88               ; 5119
CGT                  ; 5120
TSEL 7682 7672       ; 5121
LD 0 1               ; 5122
LDC 90               ; 5123
CGT                  ; 5124
TSEL 7702 7692       ; 5125
LD 0 1               ; 5126
LDC 93               ; 5127
CGT                  ; 5128
TSEL 5134 5130       ; 5129
LD 0 1               ; 5130
LDC 92               ; 5131
CGT                  ; 5132
TSEL 7722 7712       ; 5133
LD 0 1               ; 5134
LDC 94               ; 5135
CGT                  ; 5136
TSEL 7742 7732       ; 5137
LD 0 1               ; 5138
LDC 111              ; 5139
CGT                  ; 5140
TSEL 5202 5142       ; 5141
LD 0 1               ; 5142
LDC 103              ; 5143
CGT                  ; 5144
TSEL 5174 5146       ; 5145
LD 0 1               ; 5146
LDC 99               ; 5147
CGT                  ; 5148
TSEL 5162 5150       ; 5149
LD 0 1               ; 5150
LDC 97               ; 5151
CGT                  ; 5152
TSEL 5158 5154       ; 5153
LD 0 1               ; 5154
LDC 96               ; 5155
CGT                  ; 5156
TSEL 7762 7752       ; 5157
LD 0 1               ; 5158
LDC 98               ; 5159
CGT                  ; 5160
TSEL 7782 7772       ; 5161
LD 0 1               ; 5162
LDC 101              ; 5163
CGT                  ; 5164
TSEL 5170 5166       ; 5165
LD 0 1               ; 5166
LDC 100              ; 5167
CGT                  ; 5168
TSEL 7802 7792       ; 5169
LD 0 1               ; 5170
LDC 102              ; 5171
CGT                  ; 5172
TSEL 7822 7812       ; 5173
LD 0 1               ; 5174
LDC 107              ; 5175
CGT                  ; 5176
TSEL 5190 5178       ; 5177
LD 0 1               ; 5178
LDC 105              ; 5179
CGT                  ; 5180
TSEL 5186 5182       ; 5181
LD 0 1               ; 5182
LDC 104              ; 5183
CGT                  ; 5184
TSEL 7842 7832       ; 5185
LD 0 1               ; 5186
LDC 106              ; 5187
CGT                  ; 5188
TSEL 7862 7852       ; 5189
LD 0 1               ; 5190
LDC 109              ; 5191
CGT                  ; 5192
TSEL 5198 5194       ; 5193
LD 0 1               ; 5194
LDC 108              ; 5195
CGT                  ; 5196
TSEL 7882 7872       ; 5197
LD 0 1               ; 5198
LDC 110              ; 5199
CGT                  ; 5200
TSEL 7902 7892       ; 5201
LD 0 1               ; 5202
LDC 119              ; 5203
CGT                  ; 5204
TSEL 5234 5206       ; 5205
LD 0 1               ; 5206
LDC 115              ; 5207
CGT                  ; 5208
TSEL 5222 5210       ; 5209
LD 0 1               ; 5210
LDC 113              ; 5211
CGT                  ; 5212
TSEL 5218 5214       ; 5213
LD 0 1               ; 5214
LDC 112              ; 5215
CGT                  ; 5216
TSEL 7922 7912       ; 5217
LD 0 1               ; 5218
LDC 114              ; 5219
CGT                  ; 5220
TSEL 7942 7932       ; 5221
LD 0 1               ; 5222
LDC 117              ; 5223
CGT                  ; 5224
TSEL 5230 5226       ; 5225
LD 0 1               ; 5226
LDC 116              ; 5227
CGT                  ; 5228
TSEL 7962 7952       ; 5229
LD 0 1               ; 5230
LDC 118              ; 5231
CGT                  ; 5232
TSEL 7982 7972       ; 5233
LD 0 1               ; 5234
LDC 123              ; 5235
CGT                  ; 5236
TSEL 5250 5238       ; 5237
LD 0 1               ; 5238
LDC 121              ; 5239
CGT                  ; 5240
TSEL 5246 5242       ; 5241
LD 0 1               ; 5242
LDC 120              ; 5243
CGT                  ; 5244
TSEL 8002 7992       ; 5245
LD 0 1               ; 5246
LDC 122              ; 5247
CGT                  ; 5248
TSEL 8022 8012       ; 5249
LD 0 1               ; 5250
LDC 125              ; 5251
CGT                  ; 5252
TSEL 5258 5254       ; 5253
LD 0 1               ; 5254
LDC 124              ; 5255
CGT                  ; 5256
TSEL 8042 8032       ; 5257
LD 0 1               ; 5258
LDC 126              ; 5259
CGT                  ; 5260
TSEL 8062 8052       ; 5261
LD 0 1               ; 5262
LDC 191              ; 5263
CGT                  ; 5264
TSEL 5518 5266       ; 5265
LD 0 1               ; 5266
LDC 159              ; 5267
CGT                  ; 5268
TSEL 5394 5270       ; 5269
LD 0 1               ; 5270
LDC 143              ; 5271
CGT                  ; 5272
TSEL 5334 5274       ; 5273
LD 0 1               ; 5274
LDC 135              ; 5275
CGT                  ; 5276
TSEL 5306 5278       ; 5277
LD 0 1               ; 5278
LDC 131              ; 5279
CGT                  ; 5280
TSEL 5294 5282       ; 5281
LD 0 1               ; 5282
LDC 129              ; 5283
CGT                  ; 5284
TSEL 5290 5286       ; 5285
LD 0 1               ; 5286
LDC 128              ; 5287
CGT                  ; 5288
TSEL 8082 8072       ; 5289
LD 0 1               ; 5290
LDC 130              ; 5291
CGT                  ; 5292
TSEL 8102 8092       ; 5293
LD 0 1               ; 5294
LDC 133              ; 5295
CGT                  ; 5296
TSEL 5302 5298       ; 5297
LD 0 1               ; 5298
LDC 132              ; 5299
CGT                  ; 5300
TSEL 8122 8112       ; 5301
LD 0 1               ; 5302
LDC 134              ; 5303
CGT                  ; 5304
TSEL 8142 8132       ; 5305
LD 0 1               ; 5306
LDC 139              ; 5307
CGT                  ; 5308
TSEL 5322 5310       ; 5309
LD 0 1               ; 5310
LDC 137              ; 5311
CGT                  ; 5312
TSEL 5318 5314       ; 5313
LD 0 1               ; 5314
LDC 136              ; 5315
CGT                  ; 5316
TSEL 8162 8152       ; 5317
LD 0 1               ; 5318
LDC 138              ; 5319
CGT                  ; 5320
TSEL 8182 8172       ; 5321
LD 0 1               ; 5322
LDC 141              ; 5323
CGT                  ; 5324
TSEL 5330 5326       ; 5325
LD 0 1               ; 5326
LDC 140              ; 5327
CGT                  ; 5328
TSEL 8202 8192       ; 5329
LD 0 1               ; 5330
LDC 142              ; 5331
CGT                  ; 5332
TSEL 8222 8212       ; 5333
LD 0 1               ; 5334
LDC 151              ; 5335
CGT                  ; 5336
TSEL 5366 5338       ; 5337
LD 0 1               ; 5338
LDC 147              ; 5339
CGT                  ; 5340
TSEL 5354 5342       ; 5341
LD 0 1               ; 5342
LDC 145              ; 5343
CGT                  ; 5344
TSEL 5350 5346       ; 5345
LD 0 1               ; 5346
LDC 144              ; 5347
CGT                  ; 5348
TSEL 8242 8232       ; 5349
LD 0 1               ; 5350
LDC 146              ; 5351
CGT                  ; 5352
TSEL 8262 8252       ; 5353
LD 0 1               ; 5354
LDC 149              ; 5355
CGT                  ; 5356
TSEL 5362 5358       ; 5357
LD 0 1               ; 5358
LDC 148              ; 5359
CGT                  ; 5360
TSEL 8282 8272       ; 5361
LD 0 1               ; 5362
LDC 150              ; 5363
CGT                  ; 5364
TSEL 8302 8292       ; 5365
LD 0 1               ; 5366
LDC 155              ; 5367
CGT                  ; 5368
TSEL 5382 5370       ; 5369
LD 0 1               ; 5370
LDC 153              ; 5371
CGT                  ; 5372
TSEL 5378 5374       ; 5373
LD 0 1               ; 5374
LDC 152              ; 5375
CGT                  ; 5376
TSEL 8322 8312       ; 5377
LD 0 1               ; 5378
LDC 154              ; 5379
CGT                  ; 5380
TSEL 8342 8332       ; 5381
LD 0 1               ; 5382
LDC 157              ; 5383
CGT                  ; 5384
TSEL 5390 5386       ; 5385
LD 0 1               ; 5386
LDC 156              ; 5387
CGT                  ; 5388
TSEL 8362 8352       ; 5389
LD 0 1               ; 5390
LDC 158              ; 5391
CGT                  ; 5392
TSEL 8382 8372       ; 5393
LD 0 1               ; 5394
LDC 175              ; 5395
CGT                  ; 5396
TSEL 5458 5398       ; 5397
LD 0 1               ; 5398
LDC 167              ; 5399
CGT                  ; 5400
TSEL 5430 5402       ; 5401
LD 0 1               ; 5402
LDC 163              ; 5403
CGT                  ; 5404
TSEL 5418 5406       ; 5405
LD 0 1               ; 5406
LDC 161              ; 5407
CGT                  ; 5408
TSEL 5414 5410       ; 5409
LD 0 1               ; 5410
LDC 160              ; 5411
CGT                  ; 5412
TSEL 8402 8392       ; 5413
LD 0 1               ; 5414
LDC 162              ; 5415
CGT                  ; 5416
TSEL 8422 8412       ; 5417
LD 0 1               ; 5418
LDC 165              ; 5419
CGT                  ; 5420
TSEL 5426 5422       ; 5421
LD 0 1               ; 5422
LDC 164              ; 5423
CGT                  ; 5424
TSEL 8442 8432       ; 5425
LD 0 1               ; 5426
LDC 166              ; 5427
CGT                  ; 5428
TSEL 8462 8452       ; 5429
LD 0 1               ; 5430
LDC 171              ; 5431
CGT                  ; 5432
TSEL 5446 5434       ; 5433
LD 0 1               ; 5434
LDC 169              ; 5435
CGT                  ; 5436
TSEL 5442 5438       ; 5437
LD 0 1               ; 5438
LDC 168              ; 5439
CGT                  ; 5440
TSEL 8482 8472       ; 5441
LD 0 1               ; 5442
LDC 170              ; 5443
CGT                  ; 5444
TSEL 8502 8492       ; 5445
LD 0 1               ; 5446
LDC 173              ; 5447
CGT                  ; 5448
TSEL 5454 5450       ; 5449
LD 0 1               ; 5450
LDC 172              ; 5451
CGT                  ; 5452
TSEL 8522 8512       ; 5453
LD 0 1               ; 5454
LDC 174              ; 5455
CGT                  ; 5456
TSEL 8542 8532       ; 5457
LD 0 1               ; 5458
LDC 183              ; 5459
CGT                  ; 5460
TSEL 5490 5462       ; 5461
LD 0 1               ; 5462
LDC 179              ; 5463
CGT                  ; 5464
TSEL 5478 5466       ; 5465
LD 0 1               ; 5466
LDC 177              ; 5467
CGT                  ; 5468
TSEL 5474 5470       ; 5469
LD 0 1               ; 5470
LDC 176              ; 5471
CGT                  ; 5472
TSEL 8562 8552       ; 5473
LD 0 1               ; 5474
LDC 178              ; 5475
CGT                  ; 5476
TSEL 8582 8572       ; 5477
LD 0 1               ; 5478
LDC 181              ; 5479
CGT                  ; 5480
TSEL 5486 5482       ; 5481
LD 0 1               ; 5482
LDC 180              ; 5483
CGT                  ; 5484
TSEL 8602 8592       ; 5485
LD 0 1               ; 5486
LDC 182              ; 5487
CGT                  ; 5488
TSEL 8622 8612       ; 5489
LD 0 1               ; 5490
LDC 187              ; 5491
CGT                  ; 5492
TSEL 5506 5494       ; 5493
LD 0 1               ; 5494
LDC 185              ; 5495
CGT                  ; 5496
TSEL 5502 5498       ; 5497
LD 0 1               ; 5498
LDC 184              ; 5499
CGT                  ; 5500
TSEL 8642 8632       ; 5501
LD 0 1               ; 5502
LDC 186              ; 5503
CGT                  ; 5504
TSEL 8662 8652       ; 5505
LD 0 1               ; 5506
LDC 189              ; 5507
CGT                  ; 5508
TSEL 5514 5510       ; 5509
LD 0 1               ; 5510
LDC 188              ; 5511
CGT                  ; 5512
TSEL 8682 8672       ; 5513
LD 0 1               ; 5514
LDC 190              ; 5515
CGT                  ; 5516
TSEL 8702 8692       ; 5517
LD 0 1               ; 5518
LDC 223              ; 5519
CGT                  ; 5520
TSEL 5646 5522       ; 5521
LD 0 1               ; 5522
LDC 207              ; 5523
CGT                  ; 5524
TSEL 5586 5526       ; 5525
LD 0 1               ; 5526
LDC 199              ; 5527
CGT                  ; 5528
TSEL 5558 5530       ; 5529
LD 0 1               ; 5530
LDC 195              ; 5531
CGT                  ; 5532
TSEL 5546 5534       ; 5533
LD 0 1               ; 5534
LDC 193              ; 5535
CGT                  ; 5536
TSEL 5542 5538       ; 5537
LD 0 1               ; 5538
LDC 192              ; 5539
CGT                  ; 5540
TSEL 8722 8712       ; 5541
LD 0 1               ; 5542
LDC 194              ; 5543
CGT                  ; 5544
TSEL 8742 8732       ; 5545
LD 0 1               ; 5546
LDC 197              ; 5547
CGT                  ; 5548
TSEL 5554 5550       ; 5549
LD 0 1               ; 5550
LDC 196              ; 5551
CGT                  ; 5552
TSEL 8762 8752       ; 5553
LD 0 1               ; 5554
LDC 198              ; 5555
CGT                  ; 5556
TSEL 8782 8772       ; 5557
LD 0 1               ; 5558
LDC 203              ; 5559
CGT                  ; 5560
TSEL 5574 5562       ; 5561
LD 0 1               ; 5562
LDC 201              ; 5563
CGT                  ; 5564
TSEL 5570 5566       ; 5565
LD 0 1               ; 5566
LDC 200              ; 5567
CGT                  ; 5568
TSEL 8802 8792       ; 5569
LD 0 1               ; 5570
LDC 202              ; 5571
CGT                  ; 5572
TSEL 8822 8812       ; 5573
LD 0 1               ; 5574
LDC 205              ; 5575
CGT                  ; 5576
TSEL 5582 5578       ; 5577
LD 0 1               ; 5578
LDC 204              ; 5579
CGT                  ; 5580
TSEL 8842 8832       ; 5581
LD 0 1               ; 5582
LDC 206              ; 5583
CGT                  ; 5584
TSEL 8862 8852       ; 5585
LD 0 1               ; 5586
LDC 215              ; 5587
CGT                  ; 5588
TSEL 5618 5590       ; 5589
LD 0 1               ; 5590
LDC 211              ; 5591
CGT                  ; 5592
TSEL 5606 5594       ; 5593
LD 0 1               ; 5594
LDC 209              ; 5595
CGT                  ; 5596
TSEL 5602 5598       ; 5597
LD 0 1               ; 5598
LDC 208              ; 5599
CGT                  ; 5600
TSEL 8882 8872       ; 5601
LD 0 1               ; 5602
LDC 210              ; 5603
CGT                  ; 5604
TSEL 8902 8892       ; 5605
LD 0 1               ; 5606
LDC 213              ; 5607
CGT                  ; 5608
TSEL 5614 5610       ; 5609
LD 0 1               ; 5610
LDC 212              ; 5611
CGT                  ; 5612
TSEL 8922 8912       ; 5613
LD 0 1               ; 5614
LDC 214              ; 5615
CGT                  ; 5616
TSEL 8942 8932       ; 5617
LD 0 1               ; 5618
LDC 219              ; 5619
CGT                  ; 5620
TSEL 5634 5622       ; 5621
LD 0 1               ; 5622
LDC 217              ; 5623
CGT                  ; 5624
TSEL 5630 5626       ; 5625
LD 0 1               ; 5626
LDC 216              ; 5627
CGT                  ; 5628
TSEL 8962 8952       ; 5629
LD 0 1               ; 5630
LDC 218              ; 5631
CGT                  ; 5632
TSEL 8982 8972       ; 5633
LD 0 1               ; 5634
LDC 221              ; 5635
CGT                  ; 5636
TSEL 5642 5638       ; 5637
LD 0 1               ; 5638
LDC 220              ; 5639
CGT                  ; 5640
TSEL 9002 8992       ; 5641
LD 0 1               ; 5642
LDC 222              ; 5643
CGT                  ; 5644
TSEL 9022 9012       ; 5645
LD 0 1               ; 5646
LDC 239              ; 5647
CGT                  ; 5648
TSEL 5710 5650       ; 5649
LD 0 1               ; 5650
LDC 231              ; 5651
CGT                  ; 5652
TSEL 5682 5654       ; 5653
LD 0 1               ; 5654
LDC 227              ; 5655
CGT                  ; 5656
TSEL 5670 5658       ; 5657
LD 0 1               ; 5658
LDC 225              ; 5659
CGT                  ; 5660
TSEL 5666 5662       ; 5661
LD 0 1               ; 5662
LDC 224              ; 5663
CGT                  ; 5664
TSEL 9042 9032       ; 5665
LD 0 1               ; 5666
LDC 226              ; 5667
CGT                  ; 5668
TSEL 9062 9052       ; 5669
LD 0 1               ; 5670
LDC 229              ; 5671
CGT                  ; 5672
TSEL 5678 5674       ; 5673
LD 0 1               ; 5674
LDC 228              ; 5675
CGT                  ; 5676
TSEL 9082 9072       ; 5677
LD 0 1               ; 5678
LDC 230              ; 5679
CGT                  ; 5680
TSEL 9102 9092       ; 5681
LD 0 1               ; 5682
LDC 235              ; 5683
CGT                  ; 5684
TSEL 5698 5686       ; 5685
LD 0 1               ; 5686
LDC 233              ; 5687
CGT                  ; 5688
TSEL 5694 5690       ; 5689
LD 0 1               ; 5690
LDC 232              ; 5691
CGT                  ; 5692
TSEL 9122 9112       ; 5693
LD 0 1               ; 5694
LDC 234              ; 5695
CGT                  ; 5696
TSEL 9142 9132       ; 5697
LD 0 1               ; 5698
LDC 237              ; 5699
CGT                  ; 5700
TSEL 5706 5702       ; 5701
LD 0 1               ; 5702
LDC 236              ; 5703
CGT                  ; 5704
TSEL 9162 9152       ; 5705
LD 0 1               ; 5706
LDC 238              ; 5707
CGT                  ; 5708
TSEL 9182 9172       ; 5709
LD 0 1               ; 5710
LDC 247              ; 5711
CGT                  ; 5712
TSEL 5742 5714       ; 5713
LD 0 1               ; 5714
LDC 243              ; 5715
CGT                  ; 5716
TSEL 5730 5718       ; 5717
LD 0 1               ; 5718
LDC 241              ; 5719
CGT                  ; 5720
TSEL 5726 5722       ; 5721
LD 0 1               ; 5722
LDC 240              ; 5723
CGT                  ; 5724
TSEL 9202 9192       ; 5725
LD 0 1               ; 5726
LDC 242              ; 5727
CGT                  ; 5728
TSEL 9222 9212       ; 5729
LD 0 1               ; 5730
LDC 245              ; 5731
CGT                  ; 5732
TSEL 5738 5734       ; 5733
LD 0 1               ; 5734
LDC 244              ; 5735
CGT                  ; 5736
TSEL 9242 9232       ; 5737
LD 0 1               ; 5738
LDC 246              ; 5739
CGT                  ; 5740
TSEL 9262 9252       ; 5741
LD 0 1               ; 5742
LDC 251              ; 5743
CGT                  ; 5744
TSEL 5758 5746       ; 5745
LD 0 1               ; 5746
LDC 249              ; 5747
CGT                  ; 5748
TSEL 5754 5750       ; 5749
LD 0 1               ; 5750
LDC 248              ; 5751
CGT                  ; 5752
TSEL 9282 9272       ; 5753
LD 0 1               ; 5754
LDC 250              ; 5755
CGT                  ; 5756
TSEL 9302 9292       ; 5757
LD 0 1               ; 5758
LDC 253              ; 5759
CGT                  ; 5760
TSEL 5766 5762       ; 5761
LD 0 1               ; 5762
LDC 252              ; 5763
CGT                  ; 5764
TSEL 9322 9312       ; 5765
LD 0 1               ; 5766
LDC 254              ; 5767
CGT                  ; 5768
TSEL 9342 9332       ; 5769
LD 0 1               ; 5770
LDC 127              ; 5771
CGT                  ; 5772
TSEL 6282 5774       ; 5773
LD 0 1               ; 5774
LDC 63               ; 5775
CGT                  ; 5776
TSEL 6030 5778       ; 5777
LD 0 1               ; 5778
LDC 31               ; 5779
CGT                  ; 5780
TSEL 5906 5782       ; 5781
LD 0 1               ; 5782
LDC 15               ; 5783
CGT                  ; 5784
TSEL 5846 5786       ; 5785
LD 0 1               ; 5786
LDC 7                ; 5787
CGT                  ; 5788
TSEL 5818 5790       ; 5789
LD 0 1               ; 5790
LDC 3                ; 5791
CGT                  ; 5792
TSEL 5806 5794       ; 5793
LD 0 1               ; 5794
LDC 1                ; 5795
CGT                  ; 5796
TSEL 5802 5798       ; 5797
LD 0 1               ; 5798
LDC 0                ; 5799
CGT                  ; 5800
TSEL 6808 6798       ; 5801
LD 0 1               ; 5802
LDC 2                ; 5803
CGT                  ; 5804
TSEL 6828 6818       ; 5805
LD 0 1               ; 5806
LDC 5                ; 5807
CGT                  ; 5808
TSEL 5814 5810       ; 5809
LD 0 1               ; 5810
LDC 4                ; 5811
CGT                  ; 5812
TSEL 6848 6838       ; 5813
LD 0 1               ; 5814
LDC 6                ; 5815
CGT                  ; 5816
TSEL 6868 6858       ; 5817
LD 0 1               ; 5818
LDC 11               ; 5819
CGT                  ; 5820
TSEL 5834 5822       ; 5821
LD 0 1               ; 5822
LDC 9                ; 5823
CGT                  ; 5824
TSEL 5830 5826       ; 5825
LD 0 1               ; 5826
LDC 8                ; 5827
CGT                  ; 5828
TSEL 6888 6878       ; 5829
LD 0 1               ; 5830
LDC 10               ; 5831
CGT                  ; 5832
TSEL 6908 6898       ; 5833
LD 0 1               ; 5834
LDC 13               ; 5835
CGT                  ; 5836
TSEL 5842 5838       ; 5837
LD 0 1               ; 5838
LDC 12               ; 5839
CGT                  ; 5840
TSEL 6928 6918       ; 5841
LD 0 1               ; 5842
LDC 14               ; 5843
CGT                  ; 5844
TSEL 6948 6938       ; 5845
LD 0 1               ; 5846
LDC 23               ; 5847
CGT                  ; 5848
TSEL 5878 5850       ; 5849
LD 0 1               ; 5850
LDC 19               ; 5851
CGT                  ; 5852
TSEL 5866 5854       ; 5853
LD 0 1               ; 5854
LDC 17               ; 5855
CGT                  ; 5856
TSEL 5862 5858       ; 5857
LD 0 1               ; 5858
LDC 16               ; 5859
CGT                  ; 5860
TSEL 6968 6958       ; 5861
LD 0 1               ; 5862
LDC 18               ; 5863
CGT                  ; 5864
TSEL 6988 6978       ; 5865
LD 0 1               ; 5866
LDC 21               ; 5867
CGT                  ; 5868
TSEL 5874 5870       ; 5869
LD 0 1               ; 5870
LDC 20               ; 5871
CGT                  ; 5872
TSEL 7008 6998       ; 5873
LD 0 1               ; 5874
LDC 22               ; 5875
CGT                  ; 5876
TSEL 7028 7018       ; 5877
LD 0 1               ; 5878
LDC 27               ; 5879
CGT                  ; 5880
TSEL 5894 5882       ; 5881
LD 0 1               ; 5882
LDC 25               ; 5883
CGT                  ; 5884
TSEL 5890 5886       ; 5885
LD 0 1               ; 5886
LDC 24               ; 5887
CGT                  ; 5888
TSEL 7048 7038       ; 5889
LD 0 1               ; 5890
LDC 26               ; 5891
CGT                  ; 5892
TSEL 7068 7058       ; 5893
LD 0 1               ; 5894
LDC 29               ; 5895
CGT                  ; 5896
TSEL 5902 5898       ; 5897
LD 0 1               ; 5898
LDC 28               ; 5899
CGT                  ; 5900
TSEL 7088 7078       ; 5901
LD 0 1               ; 5902
LDC 30               ; 5903
CGT                  ; 5904
TSEL 7108 7098       ; 5905
LD 0 1               ; 5906
LDC 47               ; 5907
CGT                  ; 5908
TSEL 5970 5910       ; 5909
LD 0 1               ; 5910
LDC 39               ; 5911
CGT                  ; 5912
TSEL 5942 5914       ; 5913
LD 0 1               ; 5914
LDC 35               ; 5915
CGT                  ; 5916
TSEL 5930 5918       ; 5917
LD 0 1               ; 5918
LDC 33               ; 5919
CGT                  ; 5920
TSEL 5926 5922       ; 5921
LD 0 1               ; 5922
LDC 32               ; 5923
CGT                  ; 5924
TSEL 7128 7118       ; 5925
LD 0 1               ; 5926
LDC 34               ; 5927
CGT                  ; 5928
TSEL 7148 7138       ; 5929
LD 0 1               ; 5930
LDC 37               ; 5931
CGT                  ; 5932
TSEL 5938 5934       ; 5933
LD 0 1               ; 5934
LDC 36               ; 5935
CGT                  ; 5936
TSEL 7168 7158       ; 5937
LD 0 1               ; 5938
LDC 38               ; 5939
CGT                  ; 5940
TSEL 7188 7178       ; 5941
LD 0 1               ; 5942
LDC 43               ; 5943
CGT                  ; 5944
TSEL 5958 5946       ; 5945
LD 0 1               ; 5946
LDC 41               ; 5947
CGT                  ; 5948
TSEL 5954 5950       ; 5949
LD 0 1               ; 5950
LDC 40               ; 5951
CGT                  ; 5952
TSEL 7208 7198       ; 5953
LD 0 1               ; 5954
LDC 42               ; 5955
CGT                  ; 5956
TSEL 7228 7218       ; 5957
LD 0 1               ; 5958
LDC 45               ; 5959
CGT                  ; 5960
TSEL 5966 5962       ; 5961
LD 0 1               ; 5962
LDC 44               ; 5963
CGT                  ; 5964
TSEL 7248 7238       ; 5965
LD 0 1               ; 5966
LDC 46               ; 5967
CGT                  ; 5968
TSEL 7268 7258       ; 5969
LD 0 1               ; 5970
LDC 55               ; 5971
CGT                  ; 5972
TSEL 6002 5974       ; 5973
LD 0 1               ; 5974
LDC 51               ; 5975
CGT                  ; 5976
TSEL 5990 5978       ; 5977
LD 0 1               ; 5978
LDC 49               ; 5979
CGT                  ; 5980
TSEL 5986 5982       ; 5981
LD 0 1               ; 5982
LDC 48               ; 5983
CGT                  ; 5984
TSEL 7288 7278       ; 5985
LD 0 1               ; 5986
LDC 50               ; 5987
CGT                  ; 5988
TSEL 7308 7298       ; 5989
LD 0 1               ; 5990
LDC 53               ; 5991
CGT                  ; 5992
TSEL 5998 5994       ; 5993
LD 0 1               ; 5994
LDC 52               ; 5995
CGT                  ; 5996
TSEL 7328 7318       ; 5997
LD 0 1               ; 5998
LDC 54               ; 5999
CGT                  ; 6000
TSEL 7348 7338       ; 6001
LD 0 1               ; 6002
LDC 59               ; 6003
CGT                  ; 6004
TSEL 6018 6006       ; 6005
LD 0 1               ; 6006
LDC 57               ; 6007
CGT                  ; 6008
TSEL 6014 6010       ; 6009
LD 0 1               ; 6010
LDC 56               ; 6011
CGT                  ; 6012
TSEL 7368 7358       ; 6013
LD 0 1               ; 6014
LDC 58               ; 6015
CGT                  ; 6016
TSEL 7388 7378       ; 6017
LD 0 1               ; 6018
LDC 61               ; 6019
CGT                  ; 6020
TSEL 6026 6022       ; 6021
LD 0 1               ; 6022
LDC 60               ; 6023
CGT                  ; 6024
TSEL 7408 7398       ; 6025
LD 0 1               ; 6026
LDC 62               ; 6027
CGT                  ; 6028
TSEL 7428 7418       ; 6029
LD 0 1               ; 6030
LDC 95               ; 6031
CGT                  ; 6032
TSEL 6158 6034       ; 6033
LD 0 1               ; 6034
LDC 79               ; 6035
CGT                  ; 6036
TSEL 6098 6038       ; 6037
LD 0 1               ; 6038
LDC 71               ; 6039
CGT                  ; 6040
TSEL 6070 6042       ; 6041
LD 0 1               ; 6042
LDC 67               ; 6043
CGT                  ; 6044
TSEL 6058 6046       ; 6045
LD 0 1               ; 6046
LDC 65               ; 6047
CGT                  ; 6048
TSEL 6054 6050       ; 6049
LD 0 1               ; 6050
LDC 64               ; 6051
CGT                  ; 6052
TSEL 7448 7438       ; 6053
LD 0 1               ; 6054
LDC 66               ; 6055
CGT                  ; 6056
TSEL 7468 7458       ; 6057
LD 0 1               ; 6058
LDC 69               ; 6059
CGT                  ; 6060
TSEL 6066 6062       ; 6061
LD 0 1               ; 6062
LDC 68               ; 6063
CGT                  ; 6064
TSEL 7488 7478       ; 6065
LD 0 1               ; 6066
LDC 70               ; 6067
CGT                  ; 6068
TSEL 7508 7498       ; 6069
LD 0 1               ; 6070
LDC 75               ; 6071
CGT                  ; 6072
TSEL 6086 6074       ; 6073
LD 0 1               ; 6074
LDC 73               ; 6075
CGT                  ; 6076
TSEL 6082 6078       ; 6077
LD 0 1               ; 6078
LDC 72               ; 6079
CGT                  ; 6080
TSEL 7528 7518       ; 6081
LD 0 1               ; 6082
LDC 74               ; 6083
CGT                  ; 6084
TSEL 7548 7538       ; 6085
LD 0 1               ; 6086
LDC 77               ; 6087
CGT                  ; 6088
TSEL 6094 6090       ; 6089
LD 0 1               ; 6090
LDC 76               ; 6091
CGT                  ; 6092
TSEL 7568 7558       ; 6093
LD 0 1               ; 6094
LDC 78               ; 6095
CGT                  ; 6096
TSEL 7588 7578       ; 6097
LD 0 1               ; 6098
LDC 87               ; 6099
CGT                  ; 6100
TSEL 6130 6102       ; 6101
LD 0 1               ; 6102
LDC 83               ; 6103
CGT                  ; 6104
TSEL 6118 6106       ; 6105
LD 0 1               ; 6106
LDC 81               ; 6107
CGT                  ; 6108
TSEL 6114 6110       ; 6109
LD 0 1               ; 6110
LDC 80               ; 6111
CGT                  ; 6112
TSEL 7608 7598       ; 6113
LD 0 1               ; 6114
LDC 82               ; 6115
CGT                  ; 6116
TSEL 7628 7618       ; 6117
LD 0 1               ; 6118
LDC 85               ; 6119
CGT                  ; 6120
TSEL 6126 6122       ; 6121
LD 0 1               ; 6122
LDC 84               ; 6123
CGT                  ; 6124
TSEL 7648 7638       ; 6125
LD 0 1               ; 6126
LDC 86               ; 6127
CGT                  ; 6128
TSEL 7668 7658       ; 6129
LD 0 1               ; 6130
LDC 91               ; 6131
CGT                  ; 6132
TSEL 6146 6134       ; 6133
LD 0 1               ; 6134
LDC 89               ; 6135
CGT                  ; 6136
TSEL 6142 6138       ; 6137
LD 0 1               ; 6138
LDC 88               ; 6139
CGT                  ; 6140
TSEL 7688 7678       ; 6141
LD 0 1               ; 6142
LDC 90               ; 6143
CGT                  ; 6144
TSEL 7708 7698       ; 6145
LD 0 1               ; 6146
LDC 93               ; 6147
CGT                  ; 6148
TSEL 6154 6150       ; 6149
LD 0 1               ; 6150
LDC 92               ; 6151
CGT                  ; 6152
TSEL 7728 7718       ; 6153
LD 0 1               ; 6154
LDC 94               ; 6155
CGT                  ; 6156
TSEL 7748 7738       ; 6157
LD 0 1               ; 6158
LDC 111              ; 6159
CGT                  ; 6160
TSEL 6222 6162       ; 6161
LD 0 1               ; 6162
LDC 103              ; 6163
CGT                  ; 6164
TSEL 6194 6166       ; 6165
LD 0 1               ; 6166
LDC 99               ; 6167
CGT                  ; 6168
TSEL 6182 6170       ; 6169
LD 0 1               ; 6170
LDC 97               ; 6171
CGT                  ; 6172
TSEL 6178 6174       ; 6173
LD 0 1               ; 6174
LDC 96               ; 6175
CGT                  ; 6176
TSEL 7768 7758       ; 6177
LD 0 1               ; 6178
LDC 98               ; 6179
CGT                  ; 6180
TSEL 7788 7778       ; 6181
LD 0 1               ; 6182
LDC 101              ; 6183
CGT                  ; 6184
TSEL 6190 6186       ; 6185
LD 0 1               ; 6186
LDC 100              ; 6187
CGT                  ; 6188
TSEL 7808 7798       ; 6189
LD 0 1               ; 6190
LDC 102              ; 6191
CGT                  ; 6192
TSEL 7828 7818       ; 6193
LD 0 1               ; 6194
LDC 107              ; 6195
CGT                  ; 6196
TSEL 6210 6198       ; 6197
LD 0 1               ; 6198
LDC 105              ; 6199
CGT                  ; 6200
TSEL 6206 6202       ; 6201
LD 0 1               ; 6202
LDC 104              ; 6203
CGT                  ; 6204
TSEL 7848 7838       ; 6205
LD 0 1               ; 6206
LDC 106              ; 6207
CGT                  ; 6208
TSEL 7868 7858       ; 6209
LD 0 1               ; 6210
LDC 109              ; 6211
CGT                  ; 6212
TSEL 6218 6214       ; 6213
LD 0 1               ; 6214
LDC 108              ; 6215
CGT                  ; 6216
TSEL 7888 7878       ; 6217
LD 0 1               ; 6218
LDC 110              ; 6219
CGT                  ; 6220
TSEL 7908 7898       ; 6221
LD 0 1               ; 6222
LDC 119              ; 6223
CGT                  ; 6224
TSEL 6254 6226       ; 6225
LD 0 1               ; 6226
LDC 115              ; 6227
CGT                  ; 6228
TSEL 6242 6230       ; 6229
LD 0 1               ; 6230
LDC 113              ; 6231
CGT                  ; 6232
TSEL 6238 6234       ; 6233
LD 0 1               ; 6234
LDC 112              ; 6235
CGT                  ; 6236
TSEL 7928 7918       ; 6237
LD 0 1               ; 6238
LDC 114              ; 6239
CGT                  ; 6240
TSEL 7948 7938       ; 6241
LD 0 1               ; 6242
LDC 117              ; 6243
CGT                  ; 6244
TSEL 6250 6246       ; 6245
LD 0 1               ; 6246
LDC 116              ; 6247
CGT                  ; 6248
TSEL 7968 7958       ; 6249
LD 0 1               ; 6250
LDC 118              ; 6251
CGT                  ; 6252
TSEL 7988 7978       ; 6253
LD 0 1               ; 6254
LDC 123              ; 6255
CGT                  ; 6256
TSEL 6270 6258       ; 6257
LD 0 1               ; 6258
LDC 121              ; 6259
CGT                  ; 6260
TSEL 6266 6262       ; 6261
LD 0 1               ; 6262
LDC 120              ; 6263
CGT                  ; 6264
TSEL 8008 7998       ; 6265
LD 0 1               ; 6266
LDC 122              ; 6267
CGT                  ; 6268
TSEL 8028 8018       ; 6269
LD 0 1               ; 6270
LDC 125              ; 6271
CGT                  ; 6272
TSEL 6278 6274       ; 6273
LD 0 1               ; 6274
LDC 124              ; 6275
CGT                  ; 6276
TSEL 8048 8038       ; 6277
LD 0 1               ; 6278
LDC 126              ; 6279
CGT                  ; 6280
TSEL 8068 8058       ; 6281
LD 0 1               ; 6282
LDC 191              ; 6283
CGT                  ; 6284
TSEL 6538 6286       ; 6285
LD 0 1               ; 6286
LDC 159              ; 6287
CGT                  ; 6288
TSEL 6414 6290       ; 6289
LD 0 1               ; 6290
LDC 143              ; 6291
CGT                  ; 6292
TSEL 6354 6294       ; 6293
LD 0 1               ; 6294
LDC 135              ; 6295
CGT                  ; 6296
TSEL 6326 6298       ; 6297
LD 0 1               ; 6298
LDC 131              ; 6299
CGT                  ; 6300
TSEL 6314 6302       ; 6301
LD 0 1               ; 6302
LDC 129              ; 6303
CGT                  ; 6304
TSEL 6310 6306       ; 6305
LD 0 1               ; 6306
LDC 128              ; 6307
CGT                  ; 6308
TSEL 8088 8078       ; 6309
LD 0 1               ; 6310
LDC 130              ; 6311
CGT                  ; 6312
TSEL 8108 8098       ; 6313
LD 0 1               ; 6314
LDC 133              ; 6315
CGT                  ; 6316
TSEL 6322 6318       ; 6317
LD 0 1               ; 6318
LDC 132              ; 6319
CGT                  ; 6320
TSEL 8128 8118       ; 6321
LD 0 1               ; 6322
LDC 134              ; 6323
CGT                  ; 6324
TSEL 8148 8138       ; 6325
LD 0 1               ; 6326
LDC 139              ; 6327
CGT                  ; 6328
TSEL 6342 6330       ; 6329
LD 0 1               ; 6330
LDC 137              ; 6331
CGT                  ; 6332
TSEL 6338 6334       ; 6333
LD 0 1               ; 6334
LDC 136              ; 6335
CGT                  ; 6336
TSEL 8168 8158       ; 6337
LD 0 1               ; 6338
LDC 138              ; 6339
CGT                  ; 6340
TSEL 8188 8178       ; 6341
LD 0 1               ; 6342
LDC 141              ; 6343
CGT                  ; 6344
TSEL 6350 6346       ; 6345
LD 0 1               ; 6346
LDC 140              ; 6347
CGT                  ; 6348
TSEL 8208 8198       ; 6349
LD 0 1               ; 6350
LDC 142              ; 6351
CGT                  ; 6352
TSEL 8228 8218       ; 6353
LD 0 1               ; 6354
LDC 151              ; 6355
CGT                  ; 6356
TSEL 6386 6358       ; 6357
LD 0 1               ; 6358
LDC 147              ; 6359
CGT                  ; 6360
TSEL 6374 6362       ; 6361
LD 0 1               ; 6362
LDC 145              ; 6363
CGT                  ; 6364
TSEL 6370 6366       ; 6365
LD 0 1               ; 6366
LDC 144              ; 6367
CGT                  ; 6368
TSEL 8248 8238       ; 6369
LD 0 1               ; 6370
LDC 146              ; 6371
CGT                  ; 6372
TSEL 8268 8258       ; 6373
LD 0 1               ; 6374
LDC 149              ; 6375
CGT                  ; 6376
TSEL 6382 6378       ; 6377
LD 0 1               ; 6378
LDC 148              ; 6379
CGT                  ; 6380
TSEL 8288 8278       ; 6381
LD 0 1               ; 6382
LDC 150              ; 6383
CGT                  ; 6384
TSEL 8308 8298       ; 6385
LD 0 1               ; 6386
LDC 155              ; 6387
CGT                  ; 6388
TSEL 6402 6390       ; 6389
LD 0 1               ; 6390
LDC 153              ; 6391
CGT                  ; 6392
TSEL 6398 6394       ; 6393
LD 0 1               ; 6394
LDC 152              ; 6395
CGT                  ; 6396
TSEL 8328 8318       ; 6397
LD 0 1               ; 6398
LDC 154              ; 6399
CGT                  ; 6400
TSEL 8348 8338       ; 6401
LD 0 1               ; 6402
LDC 157              ; 6403
CGT                  ; 6404
TSEL 6410 6406       ; 6405
LD 0 1               ; 6406
LDC 156              ; 6407
CGT                  ; 6408
TSEL 8368 8358       ; 6409
LD 0 1               ; 6410
LDC 158              ; 6411
CGT                  ; 6412
TSEL 8388 8378       ; 6413
LD 0 1               ; 6414
LDC 175              ; 6415
CGT                  ; 6416
TSEL 6478 6418       ; 6417
LD 0 1               ; 6418
LDC 167              ; 6419
CGT                  ; 6420
TSEL 6450 6422       ; 6421
LD 0 1               ; 6422
LDC 163              ; 6423
CGT                  ; 6424
TSEL 6438 6426       ; 6425
LD 0 1               ; 6426
LDC 161              ; 6427
CGT                  ; 6428
TSEL 6434 6430       ; 6429
LD 0 1               ; 6430
LDC 160              ; 6431
CGT                  ; 6432
TSEL 8408 8398       ; 6433
LD 0 1               ; 6434
LDC 162              ; 6435
CGT                  ; 6436
TSEL 8428 8418       ; 6437
LD 0 1               ; 6438
LDC 165              ; 6439
CGT                  ; 6440
TSEL 6446 6442       ; 6441
LD 0 1               ; 6442
LDC 164              ; 6443
CGT                  ; 6444
TSEL 8448 8438       ; 6445
LD 0 1               ; 6446
LDC 166              ; 6447
CGT                  ; 6448
TSEL 8468 8458       ; 6449
LD 0 1               ; 6450
LDC 171              ; 6451
CGT                  ; 6452
TSEL 6466 6454       ; 6453
LD 0 1               ; 6454
LDC 169              ; 6455
CGT                  ; 6456
TSEL 6462 6458       ; 6457
LD 0 1               ; 6458
LDC 168              ; 6459
CGT                  ; 6460
TSEL 8488 8478       ; 6461
LD 0 1               ; 6462
LDC 170              ; 6463
CGT                  ; 6464
TSEL 8508 8498       ; 6465
LD 0 1               ; 6466
LDC 173              ; 6467
CGT                  ; 6468
TSEL 6474 6470       ; 6469
LD 0 1               ; 6470
LDC 172              ; 6471
CGT                  ; 6472
TSEL 8528 8518       ; 6473
LD 0 1               ; 6474
LDC 174              ; 6475
CGT                  ; 6476
TSEL 8548 8538       ; 6477
LD 0 1               ; 6478
LDC 183              ; 6479
CGT                  ; 6480
TSEL 6510 6482       ; 6481
LD 0 1               ; 6482
LDC 179              ; 6483
CGT                  ; 6484
TSEL 6498 6486       ; 6485
LD 0 1               ; 6486
LDC 177              ; 6487
CGT                  ; 6488
TSEL 6494 6490       ; 6489
LD 0 1               ; 6490
LDC 176              ; 6491
CGT                  ; 6492
TSEL 8568 8558       ; 6493
LD 0 1               ; 6494
LDC 178              ; 6495
CGT                  ; 6496
TSEL 8588 8578       ; 6497
LD 0 1               ; 6498
LDC 181              ; 6499
CGT                  ; 6500
TSEL 6506 6502       ; 6501
LD 0 1               ; 6502
LDC 180              ; 6503
CGT                  ; 6504
TSEL 8608 8598       ; 6505
LD 0 1               ; 6506
LDC 182              ; 6507
CGT                  ; 6508
TSEL 8628 8618       ; 6509
LD 0 1               ; 6510
LDC 187              ; 6511
CGT                  ; 6512
TSEL 6526 6514       ; 6513
LD 0 1               ; 6514
LDC 185              ; 6515
CGT                  ; 6516
TSEL 6522 6518       ; 6517
LD 0 1               ; 6518
LDC 184              ; 6519
CGT                  ; 6520
TSEL 8648 8638       ; 6521
LD 0 1               ; 6522
LDC 186              ; 6523
CGT                  ; 6524
TSEL 8668 8658       ; 6525
LD 0 1               ; 6526
LDC 189              ; 6527
CGT                  ; 6528
TSEL 6534 6530       ; 6529
LD 0 1               ; 6530
LDC 188              ; 6531
CGT                  ; 6532
TSEL 8688 8678       ; 6533
LD 0 1               ; 6534
LDC 190              ; 6535
CGT                  ; 6536
TSEL 8708 8698       ; 6537
LD 0 1               ; 6538
LDC 223              ; 6539
CGT                  ; 6540
TSEL 6666 6542       ; 6541
LD 0 1               ; 6542
LDC 207              ; 6543
CGT                  ; 6544
TSEL 6606 6546       ; 6545
LD 0 1               ; 6546
LDC 199              ; 6547
CGT                  ; 6548
TSEL 6578 6550       ; 6549
LD 0 1               ; 6550
LDC 195              ; 6551
CGT                  ; 6552
TSEL 6566 6554       ; 6553
LD 0 1               ; 6554
LDC 193              ; 6555
CGT                  ; 6556
TSEL 6562 6558       ; 6557
LD 0 1               ; 6558
LDC 192              ; 6559
CGT                  ; 6560
TSEL 8728 8718       ; 6561
LD 0 1               ; 6562
LDC 194              ; 6563
CGT                  ; 6564
TSEL 8748 8738       ; 6565
LD 0 1               ; 6566
LDC 197              ; 6567
CGT                  ; 6568
TSEL 6574 6570       ; 6569
LD 0 1               ; 6570
LDC 196              ; 6571
CGT                  ; 6572
TSEL 8768 8758       ; 6573
LD 0 1               ; 6574
LDC 198              ; 6575
CGT                  ; 6576
TSEL 8788 8778       ; 6577
LD 0 1               ; 6578
LDC 203              ; 6579
CGT                  ; 6580
TSEL 6594 6582       ; 6581
LD 0 1               ; 6582
LDC 201              ; 6583
CGT                  ; 6584
TSEL 6590 6586       ; 6585
LD 0 1               ; 6586
LDC 200              ; 6587
CGT                  ; 6588
TSEL 8808 8798       ; 6589
LD 0 1               ; 6590
LDC 202              ; 6591
CGT                  ; 6592
TSEL 8828 8818       ; 6593
LD 0 1               ; 6594
LDC 205              ; 6595
CGT                  ; 6596
TSEL 6602 6598       ; 6597
LD 0 1               ; 6598
LDC 204              ; 6599
CGT                  ; 6600
TSEL 8848 8838       ; 6601
LD 0 1               ; 6602
LDC 206              ; 6603
CGT                  ; 6604
TSEL 8868 8858       ; 6605
LD 0 1               ; 6606
LDC 215              ; 6607
CGT                  ; 6608
TSEL 6638 6610       ; 6609
LD 0 1               ; 6610
LDC 211              ; 6611
CGT                  ; 6612
TSEL 6626 6614       ; 6613
LD 0 1               ; 6614
LDC 209              ; 6615
CGT                  ; 6616
TSEL 6622 6618       ; 6617
LD 0 1               ; 6618
LDC 208              ; 6619
CGT                  ; 6620
TSEL 8888 8878       ; 6621
LD 0 1               ; 6622
LDC 210              ; 6623
CGT                  ; 6624
TSEL 8908 8898       ; 6625
LD 0 1               ; 6626
LDC 213              ; 6627
CGT                  ; 6628
TSEL 6634 6630       ; 6629
LD 0 1               ; 6630
LDC 212              ; 6631
CGT                  ; 6632
TSEL 8928 8918       ; 6633
LD 0 1               ; 6634
LDC 214              ; 6635
CGT                  ; 6636
TSEL 8948 8938       ; 6637
LD 0 1               ; 6638
LDC 219              ; 6639
CGT                  ; 6640
TSEL 6654 6642       ; 6641
LD 0 1               ; 6642
LDC 217              ; 6643
CGT                  ; 6644
TSEL 6650 6646       ; 6645
LD 0 1               ; 6646
LDC 216              ; 6647
CGT                  ; 6648
TSEL 8968 8958       ; 6649
LD 0 1               ; 6650
LDC 218              ; 6651
CGT                  ; 6652
TSEL 8988 8978       ; 6653
LD 0 1               ; 6654
LDC 221              ; 6655
CGT                  ; 6656
TSEL 6662 6658       ; 6657
LD 0 1               ; 6658
LDC 220              ; 6659
CGT                  ; 6660
TSEL 9008 8998       ; 6661
LD 0 1               ; 6662
LDC 222              ; 6663
CGT                  ; 6664
TSEL 9028 9018       ; 6665
LD 0 1               ; 6666
LDC 239              ; 6667
CGT                  ; 6668
TSEL 6730 6670       ; 6669
LD 0 1               ; 6670
LDC 231              ; 6671
CGT                  ; 6672
TSEL 6702 6674       ; 6673
LD 0 1               ; 6674
LDC 227              ; 6675
CGT                  ; 6676
TSEL 6690 6678       ; 6677
LD 0 1               ; 6678
LDC 225              ; 6679
CGT                  ; 6680
TSEL 6686 6682       ; 6681
LD 0 1               ; 6682
LDC 224              ; 6683
CGT                  ; 6684
TSEL 9048 9038       ; 6685
LD 0 1               ; 6686
LDC 226              ; 6687
CGT                  ; 6688
TSEL 9068 9058       ; 6689
LD 0 1               ; 6690
LDC 229              ; 6691
CGT                  ; 6692
TSEL 6698 6694       ; 6693
LD 0 1               ; 6694
LDC 228              ; 6695
CGT                  ; 6696
TSEL 9088 9078       ; 6697
LD 0 1               ; 6698
LDC 230              ; 6699
CGT                  ; 6700
TSEL 9108 9098       ; 6701
LD 0 1               ; 6702
LDC 235              ; 6703
CGT                  ; 6704
TSEL 6718 6706       ; 6705
LD 0 1               ; 6706
LDC 233              ; 6707
CGT                  ; 6708
TSEL 6714 6710       ; 6709
LD 0 1               ; 6710
LDC 232              ; 6711
CGT                  ; 6712
TSEL 9128 9118       ; 6713
LD 0 1               ; 6714
LDC 234              ; 6715
CGT                  ; 6716
TSEL 9148 9138       ; 6717
LD 0 1               ; 6718
LDC 237              ; 6719
CGT                  ; 6720
TSEL 6726 6722       ; 6721
LD 0 1               ; 6722
LDC 236              ; 6723
CGT                  ; 6724
TSEL 9168 9158       ; 6725
LD 0 1               ; 6726
LDC 238              ; 6727
CGT                  ; 6728
TSEL 9188 9178       ; 6729
LD 0 1               ; 6730
LDC 247              ; 6731
CGT                  ; 6732
TSEL 6762 6734       ; 6733
LD 0 1               ; 6734
LDC 243              ; 6735
CGT                  ; 6736
TSEL 6750 6738       ; 6737
LD 0 1               ; 6738
LDC 241              ; 6739
CGT                  ; 6740
TSEL 6746 6742       ; 6741
LD 0 1               ; 6742
LDC 240              ; 6743
CGT                  ; 6744
TSEL 9208 9198       ; 6745
LD 0 1               ; 6746
LDC 242              ; 6747
CGT                  ; 6748
TSEL 9228 9218       ; 6749
LD 0 1               ; 6750
LDC 245              ; 6751
CGT                  ; 6752
TSEL 6758 6754       ; 6753
LD 0 1               ; 6754
LDC 244              ; 6755
CGT                  ; 6756
TSEL 9248 9238       ; 6757
LD 0 1               ; 6758
LDC 246              ; 6759
CGT                  ; 6760
TSEL 9268 9258       ; 6761
LD 0 1               ; 6762
LDC 251              ; 6763
CGT                  ; 6764
TSEL 6778 6766       ; 6765
LD 0 1               ; 6766
LDC 249              ; 6767
CGT                  ; 6768
TSEL 6774 6770       ; 6769
LD 0 1               ; 6770
LDC 248              ; 6771
CGT                  ; 6772
TSEL 9288 9278       ; 6773
LD 0 1               ; 6774
LDC 250              ; 6775
CGT                  ; 6776
TSEL 9308 9298       ; 6777
LD 0 1               ; 6778
LDC 253              ; 6779
CGT                  ; 6780
TSEL 6786 6782       ; 6781
LD 0 1               ; 6782
LDC 252              ; 6783
CGT                  ; 6784
TSEL 9328 9318       ; 6785
LD 0 1               ; 6786
LDC 254              ; 6787
CGT                  ; 6788
TSEL 9348 9338       ; 6789
LD  2   0            ; 6790
RTN                  ; 6791
LDF 6790             ; 6792
RTN                  ; 6793
LD  2   0            ; 6794
LD  0   0            ; 6795
ST  2   0            ; 6796
RTN                  ; 6797
LDF 6794             ; 6798
RTN                  ; 6799
LD  2   1            ; 6800
RTN                  ; 6801
LDF 6800             ; 6802
RTN                  ; 6803
LD  2   1            ; 6804
LD  0   0            ; 6805
ST  2   1            ; 6806
RTN                  ; 6807
LDF 6804             ; 6808
RTN                  ; 6809
LD  2   2            ; 6810
RTN                  ; 6811
LDF 6810             ; 6812
RTN                  ; 6813
LD  2   2            ; 6814
LD  0   0            ; 6815
ST  2   2            ; 6816
RTN                  ; 6817
LDF 6814             ; 6818
RTN                  ; 6819
LD  2   3            ; 6820
RTN                  ; 6821
LDF 6820             ; 6822
RTN                  ; 6823
LD  2   3            ; 6824
LD  0   0            ; 6825
ST  2   3            ; 6826
RTN                  ; 6827
LDF 6824             ; 6828
RTN                  ; 6829
LD  2   4            ; 6830
RTN                  ; 6831
LDF 6830             ; 6832
RTN                  ; 6833
LD  2   4            ; 6834
LD  0   0            ; 6835
ST  2   4            ; 6836
RTN                  ; 6837
LDF 6834             ; 6838
RTN                  ; 6839
LD  2   5            ; 6840
RTN                  ; 6841
LDF 6840             ; 6842
RTN                  ; 6843
LD  2   5            ; 6844
LD  0   0            ; 6845
ST  2   5            ; 6846
RTN                  ; 6847
LDF 6844             ; 6848
RTN                  ; 6849
LD  2   6            ; 6850
RTN                  ; 6851
LDF 6850             ; 6852
RTN                  ; 6853
LD  2   6            ; 6854
LD  0   0            ; 6855
ST  2   6            ; 6856
RTN                  ; 6857
LDF 6854             ; 6858
RTN                  ; 6859
LD  2   7            ; 6860
RTN                  ; 6861
LDF 6860             ; 6862
RTN                  ; 6863
LD  2   7            ; 6864
LD  0   0            ; 6865
ST  2   7            ; 6866
RTN                  ; 6867
LDF 6864             ; 6868
RTN                  ; 6869
LD  2   8            ; 6870
RTN                  ; 6871
LDF 6870             ; 6872
RTN                  ; 6873
LD  2   8            ; 6874
LD  0   0            ; 6875
ST  2   8            ; 6876
RTN                  ; 6877
LDF 6874             ; 6878
RTN                  ; 6879
LD  2   9            ; 6880
RTN                  ; 6881
LDF 6880             ; 6882
RTN                  ; 6883
LD  2   9            ; 6884
LD  0   0            ; 6885
ST  2   9            ; 6886
RTN                  ; 6887
LDF 6884             ; 6888
RTN                  ; 6889
LD  2   10           ; 6890
RTN                  ; 6891
LDF 6890             ; 6892
RTN                  ; 6893
LD  2   10           ; 6894
LD  0   0            ; 6895
ST  2   10           ; 6896
RTN                  ; 6897
LDF 6894             ; 6898
RTN                  ; 6899
LD  2   11           ; 6900
RTN                  ; 6901
LDF 6900             ; 6902
RTN                  ; 6903
LD  2   11           ; 6904
LD  0   0            ; 6905
ST  2   11           ; 6906
RTN                  ; 6907
LDF 6904             ; 6908
RTN                  ; 6909
LD  2   12           ; 6910
RTN                  ; 6911
LDF 6910             ; 6912
RTN                  ; 6913
LD  2   12           ; 6914
LD  0   0            ; 6915
ST  2   12           ; 6916
RTN                  ; 6917
LDF 6914             ; 6918
RTN                  ; 6919
LD  2   13           ; 6920
RTN                  ; 6921
LDF 6920             ; 6922
RTN                  ; 6923
LD  2   13           ; 6924
LD  0   0            ; 6925
ST  2   13           ; 6926
RTN                  ; 6927
LDF 6924             ; 6928
RTN                  ; 6929
LD  2   14           ; 6930
RTN                  ; 6931
LDF 6930             ; 6932
RTN                  ; 6933
LD  2   14           ; 6934
LD  0   0            ; 6935
ST  2   14           ; 6936
RTN                  ; 6937
LDF 6934             ; 6938
RTN                  ; 6939
LD  2   15           ; 6940
RTN                  ; 6941
LDF 6940             ; 6942
RTN                  ; 6943
LD  2   15           ; 6944
LD  0   0            ; 6945
ST  2   15           ; 6946
RTN                  ; 6947
LDF 6944             ; 6948
RTN                  ; 6949
LD  2   16           ; 6950
RTN                  ; 6951
LDF 6950             ; 6952
RTN                  ; 6953
LD  2   16           ; 6954
LD  0   0            ; 6955
ST  2   16           ; 6956
RTN                  ; 6957
LDF 6954             ; 6958
RTN                  ; 6959
LD  2   17           ; 6960
RTN                  ; 6961
LDF 6960             ; 6962
RTN                  ; 6963
LD  2   17           ; 6964
LD  0   0            ; 6965
ST  2   17           ; 6966
RTN                  ; 6967
LDF 6964             ; 6968
RTN                  ; 6969
LD  2   18           ; 6970
RTN                  ; 6971
LDF 6970             ; 6972
RTN                  ; 6973
LD  2   18           ; 6974
LD  0   0            ; 6975
ST  2   18           ; 6976
RTN                  ; 6977
LDF 6974             ; 6978
RTN                  ; 6979
LD  2   19           ; 6980
RTN                  ; 6981
LDF 6980             ; 6982
RTN                  ; 6983
LD  2   19           ; 6984
LD  0   0            ; 6985
ST  2   19           ; 6986
RTN                  ; 6987
LDF 6984             ; 6988
RTN                  ; 6989
LD  2   20           ; 6990
RTN                  ; 6991
LDF 6990             ; 6992
RTN                  ; 6993
LD  2   20           ; 6994
LD  0   0            ; 6995
ST  2   20           ; 6996
RTN                  ; 6997
LDF 6994             ; 6998
RTN                  ; 6999
LD  2   21           ; 7000
RTN                  ; 7001
LDF 7000             ; 7002
RTN                  ; 7003
LD  2   21           ; 7004
LD  0   0            ; 7005
ST  2   21           ; 7006
RTN                  ; 7007
LDF 7004             ; 7008
RTN                  ; 7009
LD  2   22           ; 7010
RTN                  ; 7011
LDF 7010             ; 7012
RTN                  ; 7013
LD  2   22           ; 7014
LD  0   0            ; 7015
ST  2   22           ; 7016
RTN                  ; 7017
LDF 7014             ; 7018
RTN                  ; 7019
LD  2   23           ; 7020
RTN                  ; 7021
LDF 7020             ; 7022
RTN                  ; 7023
LD  2   23           ; 7024
LD  0   0            ; 7025
ST  2   23           ; 7026
RTN                  ; 7027
LDF 7024             ; 7028
RTN                  ; 7029
LD  2   24           ; 7030
RTN                  ; 7031
LDF 7030             ; 7032
RTN                  ; 7033
LD  2   24           ; 7034
LD  0   0            ; 7035
ST  2   24           ; 7036
RTN                  ; 7037
LDF 7034             ; 7038
RTN                  ; 7039
LD  2   25           ; 7040
RTN                  ; 7041
LDF 7040             ; 7042
RTN                  ; 7043
LD  2   25           ; 7044
LD  0   0            ; 7045
ST  2   25           ; 7046
RTN                  ; 7047
LDF 7044             ; 7048
RTN                  ; 7049
LD  2   26           ; 7050
RTN                  ; 7051
LDF 7050             ; 7052
RTN                  ; 7053
LD  2   26           ; 7054
LD  0   0            ; 7055
ST  2   26           ; 7056
RTN                  ; 7057
LDF 7054             ; 7058
RTN                  ; 7059
LD  2   27           ; 7060
RTN                  ; 7061
LDF 7060             ; 7062
RTN                  ; 7063
LD  2   27           ; 7064
LD  0   0            ; 7065
ST  2   27           ; 7066
RTN                  ; 7067
LDF 7064             ; 7068
RTN                  ; 7069
LD  2   28           ; 7070
RTN                  ; 7071
LDF 7070             ; 7072
RTN                  ; 7073
LD  2   28           ; 7074
LD  0   0            ; 7075
ST  2   28           ; 7076
RTN                  ; 7077
LDF 7074             ; 7078
RTN                  ; 7079
LD  2   29           ; 7080
RTN                  ; 7081
LDF 7080             ; 7082
RTN                  ; 7083
LD  2   29           ; 7084
LD  0   0            ; 7085
ST  2   29           ; 7086
RTN                  ; 7087
LDF 7084             ; 7088
RTN                  ; 7089
LD  2   30           ; 7090
RTN                  ; 7091
LDF 7090             ; 7092
RTN                  ; 7093
LD  2   30           ; 7094
LD  0   0            ; 7095
ST  2   30           ; 7096
RTN                  ; 7097
LDF 7094             ; 7098
RTN                  ; 7099
LD  2   31           ; 7100
RTN                  ; 7101
LDF 7100             ; 7102
RTN                  ; 7103
LD  2   31           ; 7104
LD  0   0            ; 7105
ST  2   31           ; 7106
RTN                  ; 7107
LDF 7104             ; 7108
RTN                  ; 7109
LD  2   32           ; 7110
RTN                  ; 7111
LDF 7110             ; 7112
RTN                  ; 7113
LD  2   32           ; 7114
LD  0   0            ; 7115
ST  2   32           ; 7116
RTN                  ; 7117
LDF 7114             ; 7118
RTN                  ; 7119
LD  2   33           ; 7120
RTN                  ; 7121
LDF 7120             ; 7122
RTN                  ; 7123
LD  2   33           ; 7124
LD  0   0            ; 7125
ST  2   33           ; 7126
RTN                  ; 7127
LDF 7124             ; 7128
RTN                  ; 7129
LD  2   34           ; 7130
RTN                  ; 7131
LDF 7130             ; 7132
RTN                  ; 7133
LD  2   34           ; 7134
LD  0   0            ; 7135
ST  2   34           ; 7136
RTN                  ; 7137
LDF 7134             ; 7138
RTN                  ; 7139
LD  2   35           ; 7140
RTN                  ; 7141
LDF 7140             ; 7142
RTN                  ; 7143
LD  2   35           ; 7144
LD  0   0            ; 7145
ST  2   35           ; 7146
RTN                  ; 7147
LDF 7144             ; 7148
RTN                  ; 7149
LD  2   36           ; 7150
RTN                  ; 7151
LDF 7150             ; 7152
RTN                  ; 7153
LD  2   36           ; 7154
LD  0   0            ; 7155
ST  2   36           ; 7156
RTN                  ; 7157
LDF 7154             ; 7158
RTN                  ; 7159
LD  2   37           ; 7160
RTN                  ; 7161
LDF 7160             ; 7162
RTN                  ; 7163
LD  2   37           ; 7164
LD  0   0            ; 7165
ST  2   37           ; 7166
RTN                  ; 7167
LDF 7164             ; 7168
RTN                  ; 7169
LD  2   38           ; 7170
RTN                  ; 7171
LDF 7170             ; 7172
RTN                  ; 7173
LD  2   38           ; 7174
LD  0   0            ; 7175
ST  2   38           ; 7176
RTN                  ; 7177
LDF 7174             ; 7178
RTN                  ; 7179
LD  2   39           ; 7180
RTN                  ; 7181
LDF 7180             ; 7182
RTN                  ; 7183
LD  2   39           ; 7184
LD  0   0            ; 7185
ST  2   39           ; 7186
RTN                  ; 7187
LDF 7184             ; 7188
RTN                  ; 7189
LD  2   40           ; 7190
RTN                  ; 7191
LDF 7190             ; 7192
RTN                  ; 7193
LD  2   40           ; 7194
LD  0   0            ; 7195
ST  2   40           ; 7196
RTN                  ; 7197
LDF 7194             ; 7198
RTN                  ; 7199
LD  2   41           ; 7200
RTN                  ; 7201
LDF 7200             ; 7202
RTN                  ; 7203
LD  2   41           ; 7204
LD  0   0            ; 7205
ST  2   41           ; 7206
RTN                  ; 7207
LDF 7204             ; 7208
RTN                  ; 7209
LD  2   42           ; 7210
RTN                  ; 7211
LDF 7210             ; 7212
RTN                  ; 7213
LD  2   42           ; 7214
LD  0   0            ; 7215
ST  2   42           ; 7216
RTN                  ; 7217
LDF 7214             ; 7218
RTN                  ; 7219
LD  2   43           ; 7220
RTN                  ; 7221
LDF 7220             ; 7222
RTN                  ; 7223
LD  2   43           ; 7224
LD  0   0            ; 7225
ST  2   43           ; 7226
RTN                  ; 7227
LDF 7224             ; 7228
RTN                  ; 7229
LD  2   44           ; 7230
RTN                  ; 7231
LDF 7230             ; 7232
RTN                  ; 7233
LD  2   44           ; 7234
LD  0   0            ; 7235
ST  2   44           ; 7236
RTN                  ; 7237
LDF 7234             ; 7238
RTN                  ; 7239
LD  2   45           ; 7240
RTN                  ; 7241
LDF 7240             ; 7242
RTN                  ; 7243
LD  2   45           ; 7244
LD  0   0            ; 7245
ST  2   45           ; 7246
RTN                  ; 7247
LDF 7244             ; 7248
RTN                  ; 7249
LD  2   46           ; 7250
RTN                  ; 7251
LDF 7250             ; 7252
RTN                  ; 7253
LD  2   46           ; 7254
LD  0   0            ; 7255
ST  2   46           ; 7256
RTN                  ; 7257
LDF 7254             ; 7258
RTN                  ; 7259
LD  2   47           ; 7260
RTN                  ; 7261
LDF 7260             ; 7262
RTN                  ; 7263
LD  2   47           ; 7264
LD  0   0            ; 7265
ST  2   47           ; 7266
RTN                  ; 7267
LDF 7264             ; 7268
RTN                  ; 7269
LD  2   48           ; 7270
RTN                  ; 7271
LDF 7270             ; 7272
RTN                  ; 7273
LD  2   48           ; 7274
LD  0   0            ; 7275
ST  2   48           ; 7276
RTN                  ; 7277
LDF 7274             ; 7278
RTN                  ; 7279
LD  2   49           ; 7280
RTN                  ; 7281
LDF 7280             ; 7282
RTN                  ; 7283
LD  2   49           ; 7284
LD  0   0            ; 7285
ST  2   49           ; 7286
RTN                  ; 7287
LDF 7284             ; 7288
RTN                  ; 7289
LD  2   50           ; 7290
RTN                  ; 7291
LDF 7290             ; 7292
RTN                  ; 7293
LD  2   50           ; 7294
LD  0   0            ; 7295
ST  2   50           ; 7296
RTN                  ; 7297
LDF 7294             ; 7298
RTN                  ; 7299
LD  2   51           ; 7300
RTN                  ; 7301
LDF 7300             ; 7302
RTN                  ; 7303
LD  2   51           ; 7304
LD  0   0            ; 7305
ST  2   51           ; 7306
RTN                  ; 7307
LDF 7304             ; 7308
RTN                  ; 7309
LD  2   52           ; 7310
RTN                  ; 7311
LDF 7310             ; 7312
RTN                  ; 7313
LD  2   52           ; 7314
LD  0   0            ; 7315
ST  2   52           ; 7316
RTN                  ; 7317
LDF 7314             ; 7318
RTN                  ; 7319
LD  2   53           ; 7320
RTN                  ; 7321
LDF 7320             ; 7322
RTN                  ; 7323
LD  2   53           ; 7324
LD  0   0            ; 7325
ST  2   53           ; 7326
RTN                  ; 7327
LDF 7324             ; 7328
RTN                  ; 7329
LD  2   54           ; 7330
RTN                  ; 7331
LDF 7330             ; 7332
RTN                  ; 7333
LD  2   54           ; 7334
LD  0   0            ; 7335
ST  2   54           ; 7336
RTN                  ; 7337
LDF 7334             ; 7338
RTN                  ; 7339
LD  2   55           ; 7340
RTN                  ; 7341
LDF 7340             ; 7342
RTN                  ; 7343
LD  2   55           ; 7344
LD  0   0            ; 7345
ST  2   55           ; 7346
RTN                  ; 7347
LDF 7344             ; 7348
RTN                  ; 7349
LD  2   56           ; 7350
RTN                  ; 7351
LDF 7350             ; 7352
RTN                  ; 7353
LD  2   56           ; 7354
LD  0   0            ; 7355
ST  2   56           ; 7356
RTN                  ; 7357
LDF 7354             ; 7358
RTN                  ; 7359
LD  2   57           ; 7360
RTN                  ; 7361
LDF 7360             ; 7362
RTN                  ; 7363
LD  2   57           ; 7364
LD  0   0            ; 7365
ST  2   57           ; 7366
RTN                  ; 7367
LDF 7364             ; 7368
RTN                  ; 7369
LD  2   58           ; 7370
RTN                  ; 7371
LDF 7370             ; 7372
RTN                  ; 7373
LD  2   58           ; 7374
LD  0   0            ; 7375
ST  2   58           ; 7376
RTN                  ; 7377
LDF 7374             ; 7378
RTN                  ; 7379
LD  2   59           ; 7380
RTN                  ; 7381
LDF 7380             ; 7382
RTN                  ; 7383
LD  2   59           ; 7384
LD  0   0            ; 7385
ST  2   59           ; 7386
RTN                  ; 7387
LDF 7384             ; 7388
RTN                  ; 7389
LD  2   60           ; 7390
RTN                  ; 7391
LDF 7390             ; 7392
RTN                  ; 7393
LD  2   60           ; 7394
LD  0   0            ; 7395
ST  2   60           ; 7396
RTN                  ; 7397
LDF 7394             ; 7398
RTN                  ; 7399
LD  2   61           ; 7400
RTN                  ; 7401
LDF 7400             ; 7402
RTN                  ; 7403
LD  2   61           ; 7404
LD  0   0            ; 7405
ST  2   61           ; 7406
RTN                  ; 7407
LDF 7404             ; 7408
RTN                  ; 7409
LD  2   62           ; 7410
RTN                  ; 7411
LDF 7410             ; 7412
RTN                  ; 7413
LD  2   62           ; 7414
LD  0   0            ; 7415
ST  2   62           ; 7416
RTN                  ; 7417
LDF 7414             ; 7418
RTN                  ; 7419
LD  2   63           ; 7420
RTN                  ; 7421
LDF 7420             ; 7422
RTN                  ; 7423
LD  2   63           ; 7424
LD  0   0            ; 7425
ST  2   63           ; 7426
RTN                  ; 7427
LDF 7424             ; 7428
RTN                  ; 7429
LD  2   64           ; 7430
RTN                  ; 7431
LDF 7430             ; 7432
RTN                  ; 7433
LD  2   64           ; 7434
LD  0   0            ; 7435
ST  2   64           ; 7436
RTN                  ; 7437
LDF 7434             ; 7438
RTN                  ; 7439
LD  2   65           ; 7440
RTN                  ; 7441
LDF 7440             ; 7442
RTN                  ; 7443
LD  2   65           ; 7444
LD  0   0            ; 7445
ST  2   65           ; 7446
RTN                  ; 7447
LDF 7444             ; 7448
RTN                  ; 7449
LD  2   66           ; 7450
RTN                  ; 7451
LDF 7450             ; 7452
RTN                  ; 7453
LD  2   66           ; 7454
LD  0   0            ; 7455
ST  2   66           ; 7456
RTN                  ; 7457
LDF 7454             ; 7458
RTN                  ; 7459
LD  2   67           ; 7460
RTN                  ; 7461
LDF 7460             ; 7462
RTN                  ; 7463
LD  2   67           ; 7464
LD  0   0            ; 7465
ST  2   67           ; 7466
RTN                  ; 7467
LDF 7464             ; 7468
RTN                  ; 7469
LD  2   68           ; 7470
RTN                  ; 7471
LDF 7470             ; 7472
RTN                  ; 7473
LD  2   68           ; 7474
LD  0   0            ; 7475
ST  2   68           ; 7476
RTN                  ; 7477
LDF 7474             ; 7478
RTN                  ; 7479
LD  2   69           ; 7480
RTN                  ; 7481
LDF 7480             ; 7482
RTN                  ; 7483
LD  2   69           ; 7484
LD  0   0            ; 7485
ST  2   69           ; 7486
RTN                  ; 7487
LDF 7484             ; 7488
RTN                  ; 7489
LD  2   70           ; 7490
RTN                  ; 7491
LDF 7490             ; 7492
RTN                  ; 7493
LD  2   70           ; 7494
LD  0   0            ; 7495
ST  2   70           ; 7496
RTN                  ; 7497
LDF 7494             ; 7498
RTN                  ; 7499
LD  2   71           ; 7500
RTN                  ; 7501
LDF 7500             ; 7502
RTN                  ; 7503
LD  2   71           ; 7504
LD  0   0            ; 7505
ST  2   71           ; 7506
RTN                  ; 7507
LDF 7504             ; 7508
RTN                  ; 7509
LD  2   72           ; 7510
RTN                  ; 7511
LDF 7510             ; 7512
RTN                  ; 7513
LD  2   72           ; 7514
LD  0   0            ; 7515
ST  2   72           ; 7516
RTN                  ; 7517
LDF 7514             ; 7518
RTN                  ; 7519
LD  2   73           ; 7520
RTN                  ; 7521
LDF 7520             ; 7522
RTN                  ; 7523
LD  2   73           ; 7524
LD  0   0            ; 7525
ST  2   73           ; 7526
RTN                  ; 7527
LDF 7524             ; 7528
RTN                  ; 7529
LD  2   74           ; 7530
RTN                  ; 7531
LDF 7530             ; 7532
RTN                  ; 7533
LD  2   74           ; 7534
LD  0   0            ; 7535
ST  2   74           ; 7536
RTN                  ; 7537
LDF 7534             ; 7538
RTN                  ; 7539
LD  2   75           ; 7540
RTN                  ; 7541
LDF 7540             ; 7542
RTN                  ; 7543
LD  2   75           ; 7544
LD  0   0            ; 7545
ST  2   75           ; 7546
RTN                  ; 7547
LDF 7544             ; 7548
RTN                  ; 7549
LD  2   76           ; 7550
RTN                  ; 7551
LDF 7550             ; 7552
RTN                  ; 7553
LD  2   76           ; 7554
LD  0   0            ; 7555
ST  2   76           ; 7556
RTN                  ; 7557
LDF 7554             ; 7558
RTN                  ; 7559
LD  2   77           ; 7560
RTN                  ; 7561
LDF 7560             ; 7562
RTN                  ; 7563
LD  2   77           ; 7564
LD  0   0            ; 7565
ST  2   77           ; 7566
RTN                  ; 7567
LDF 7564             ; 7568
RTN                  ; 7569
LD  2   78           ; 7570
RTN                  ; 7571
LDF 7570             ; 7572
RTN                  ; 7573
LD  2   78           ; 7574
LD  0   0            ; 7575
ST  2   78           ; 7576
RTN                  ; 7577
LDF 7574             ; 7578
RTN                  ; 7579
LD  2   79           ; 7580
RTN                  ; 7581
LDF 7580             ; 7582
RTN                  ; 7583
LD  2   79           ; 7584
LD  0   0            ; 7585
ST  2   79           ; 7586
RTN                  ; 7587
LDF 7584             ; 7588
RTN                  ; 7589
LD  2   80           ; 7590
RTN                  ; 7591
LDF 7590             ; 7592
RTN                  ; 7593
LD  2   80           ; 7594
LD  0   0            ; 7595
ST  2   80           ; 7596
RTN                  ; 7597
LDF 7594             ; 7598
RTN                  ; 7599
LD  2   81           ; 7600
RTN                  ; 7601
LDF 7600             ; 7602
RTN                  ; 7603
LD  2   81           ; 7604
LD  0   0            ; 7605
ST  2   81           ; 7606
RTN                  ; 7607
LDF 7604             ; 7608
RTN                  ; 7609
LD  2   82           ; 7610
RTN                  ; 7611
LDF 7610             ; 7612
RTN                  ; 7613
LD  2   82           ; 7614
LD  0   0            ; 7615
ST  2   82           ; 7616
RTN                  ; 7617
LDF 7614             ; 7618
RTN                  ; 7619
LD  2   83           ; 7620
RTN                  ; 7621
LDF 7620             ; 7622
RTN                  ; 7623
LD  2   83           ; 7624
LD  0   0            ; 7625
ST  2   83           ; 7626
RTN                  ; 7627
LDF 7624             ; 7628
RTN                  ; 7629
LD  2   84           ; 7630
RTN                  ; 7631
LDF 7630             ; 7632
RTN                  ; 7633
LD  2   84           ; 7634
LD  0   0            ; 7635
ST  2   84           ; 7636
RTN                  ; 7637
LDF 7634             ; 7638
RTN                  ; 7639
LD  2   85           ; 7640
RTN                  ; 7641
LDF 7640             ; 7642
RTN                  ; 7643
LD  2   85           ; 7644
LD  0   0            ; 7645
ST  2   85           ; 7646
RTN                  ; 7647
LDF 7644             ; 7648
RTN                  ; 7649
LD  2   86           ; 7650
RTN                  ; 7651
LDF 7650             ; 7652
RTN                  ; 7653
LD  2   86           ; 7654
LD  0   0            ; 7655
ST  2   86           ; 7656
RTN                  ; 7657
LDF 7654             ; 7658
RTN                  ; 7659
LD  2   87           ; 7660
RTN                  ; 7661
LDF 7660             ; 7662
RTN                  ; 7663
LD  2   87           ; 7664
LD  0   0            ; 7665
ST  2   87           ; 7666
RTN                  ; 7667
LDF 7664             ; 7668
RTN                  ; 7669
LD  2   88           ; 7670
RTN                  ; 7671
LDF 7670             ; 7672
RTN                  ; 7673
LD  2   88           ; 7674
LD  0   0            ; 7675
ST  2   88           ; 7676
RTN                  ; 7677
LDF 7674             ; 7678
RTN                  ; 7679
LD  2   89           ; 7680
RTN                  ; 7681
LDF 7680             ; 7682
RTN                  ; 7683
LD  2   89           ; 7684
LD  0   0            ; 7685
ST  2   89           ; 7686
RTN                  ; 7687
LDF 7684             ; 7688
RTN                  ; 7689
LD  2   90           ; 7690
RTN                  ; 7691
LDF 7690             ; 7692
RTN                  ; 7693
LD  2   90           ; 7694
LD  0   0            ; 7695
ST  2   90           ; 7696
RTN                  ; 7697
LDF 7694             ; 7698
RTN                  ; 7699
LD  2   91           ; 7700
RTN                  ; 7701
LDF 7700             ; 7702
RTN                  ; 7703
LD  2   91           ; 7704
LD  0   0            ; 7705
ST  2   91           ; 7706
RTN                  ; 7707
LDF 7704             ; 7708
RTN                  ; 7709
LD  2   92           ; 7710
RTN                  ; 7711
LDF 7710             ; 7712
RTN                  ; 7713
LD  2   92           ; 7714
LD  0   0            ; 7715
ST  2   92           ; 7716
RTN                  ; 7717
LDF 7714             ; 7718
RTN                  ; 7719
LD  2   93           ; 7720
RTN                  ; 7721
LDF 7720             ; 7722
RTN                  ; 7723
LD  2   93           ; 7724
LD  0   0            ; 7725
ST  2   93           ; 7726
RTN                  ; 7727
LDF 7724             ; 7728
RTN                  ; 7729
LD  2   94           ; 7730
RTN                  ; 7731
LDF 7730             ; 7732
RTN                  ; 7733
LD  2   94           ; 7734
LD  0   0            ; 7735
ST  2   94           ; 7736
RTN                  ; 7737
LDF 7734             ; 7738
RTN                  ; 7739
LD  2   95           ; 7740
RTN                  ; 7741
LDF 7740             ; 7742
RTN                  ; 7743
LD  2   95           ; 7744
LD  0   0            ; 7745
ST  2   95           ; 7746
RTN                  ; 7747
LDF 7744             ; 7748
RTN                  ; 7749
LD  2   96           ; 7750
RTN                  ; 7751
LDF 7750             ; 7752
RTN                  ; 7753
LD  2   96           ; 7754
LD  0   0            ; 7755
ST  2   96           ; 7756
RTN                  ; 7757
LDF 7754             ; 7758
RTN                  ; 7759
LD  2   97           ; 7760
RTN                  ; 7761
LDF 7760             ; 7762
RTN                  ; 7763
LD  2   97           ; 7764
LD  0   0            ; 7765
ST  2   97           ; 7766
RTN                  ; 7767
LDF 7764             ; 7768
RTN                  ; 7769
LD  2   98           ; 7770
RTN                  ; 7771
LDF 7770             ; 7772
RTN                  ; 7773
LD  2   98           ; 7774
LD  0   0            ; 7775
ST  2   98           ; 7776
RTN                  ; 7777
LDF 7774             ; 7778
RTN                  ; 7779
LD  2   99           ; 7780
RTN                  ; 7781
LDF 7780             ; 7782
RTN                  ; 7783
LD  2   99           ; 7784
LD  0   0            ; 7785
ST  2   99           ; 7786
RTN                  ; 7787
LDF 7784             ; 7788
RTN                  ; 7789
LD  2   100          ; 7790
RTN                  ; 7791
LDF 7790             ; 7792
RTN                  ; 7793
LD  2   100          ; 7794
LD  0   0            ; 7795
ST  2   100          ; 7796
RTN                  ; 7797
LDF 7794             ; 7798
RTN                  ; 7799
LD  2   101          ; 7800
RTN                  ; 7801
LDF 7800             ; 7802
RTN                  ; 7803
LD  2   101          ; 7804
LD  0   0            ; 7805
ST  2   101          ; 7806
RTN                  ; 7807
LDF 7804             ; 7808
RTN                  ; 7809
LD  2   102          ; 7810
RTN                  ; 7811
LDF 7810             ; 7812
RTN                  ; 7813
LD  2   102          ; 7814
LD  0   0            ; 7815
ST  2   102          ; 7816
RTN                  ; 7817
LDF 7814             ; 7818
RTN                  ; 7819
LD  2   103          ; 7820
RTN                  ; 7821
LDF 7820             ; 7822
RTN                  ; 7823
LD  2   103          ; 7824
LD  0   0            ; 7825
ST  2   103          ; 7826
RTN                  ; 7827
LDF 7824             ; 7828
RTN                  ; 7829
LD  2   104          ; 7830
RTN                  ; 7831
LDF 7830             ; 7832
RTN                  ; 7833
LD  2   104          ; 7834
LD  0   0            ; 7835
ST  2   104          ; 7836
RTN                  ; 7837
LDF 7834             ; 7838
RTN                  ; 7839
LD  2   105          ; 7840
RTN                  ; 7841
LDF 7840             ; 7842
RTN                  ; 7843
LD  2   105          ; 7844
LD  0   0            ; 7845
ST  2   105          ; 7846
RTN                  ; 7847
LDF 7844             ; 7848
RTN                  ; 7849
LD  2   106          ; 7850
RTN                  ; 7851
LDF 7850             ; 7852
RTN                  ; 7853
LD  2   106          ; 7854
LD  0   0            ; 7855
ST  2   106          ; 7856
RTN                  ; 7857
LDF 7854             ; 7858
RTN                  ; 7859
LD  2   107          ; 7860
RTN                  ; 7861
LDF 7860             ; 7862
RTN                  ; 7863
LD  2   107          ; 7864
LD  0   0            ; 7865
ST  2   107          ; 7866
RTN                  ; 7867
LDF 7864             ; 7868
RTN                  ; 7869
LD  2   108          ; 7870
RTN                  ; 7871
LDF 7870             ; 7872
RTN                  ; 7873
LD  2   108          ; 7874
LD  0   0            ; 7875
ST  2   108          ; 7876
RTN                  ; 7877
LDF 7874             ; 7878
RTN                  ; 7879
LD  2   109          ; 7880
RTN                  ; 7881
LDF 7880             ; 7882
RTN                  ; 7883
LD  2   109          ; 7884
LD  0   0            ; 7885
ST  2   109          ; 7886
RTN                  ; 7887
LDF 7884             ; 7888
RTN                  ; 7889
LD  2   110          ; 7890
RTN                  ; 7891
LDF 7890             ; 7892
RTN                  ; 7893
LD  2   110          ; 7894
LD  0   0            ; 7895
ST  2   110          ; 7896
RTN                  ; 7897
LDF 7894             ; 7898
RTN                  ; 7899
LD  2   111          ; 7900
RTN                  ; 7901
LDF 7900             ; 7902
RTN                  ; 7903
LD  2   111          ; 7904
LD  0   0            ; 7905
ST  2   111          ; 7906
RTN                  ; 7907
LDF 7904             ; 7908
RTN                  ; 7909
LD  2   112          ; 7910
RTN                  ; 7911
LDF 7910             ; 7912
RTN                  ; 7913
LD  2   112          ; 7914
LD  0   0            ; 7915
ST  2   112          ; 7916
RTN                  ; 7917
LDF 7914             ; 7918
RTN                  ; 7919
LD  2   113          ; 7920
RTN                  ; 7921
LDF 7920             ; 7922
RTN                  ; 7923
LD  2   113          ; 7924
LD  0   0            ; 7925
ST  2   113          ; 7926
RTN                  ; 7927
LDF 7924             ; 7928
RTN                  ; 7929
LD  2   114          ; 7930
RTN                  ; 7931
LDF 7930             ; 7932
RTN                  ; 7933
LD  2   114          ; 7934
LD  0   0            ; 7935
ST  2   114          ; 7936
RTN                  ; 7937
LDF 7934             ; 7938
RTN                  ; 7939
LD  2   115          ; 7940
RTN                  ; 7941
LDF 7940             ; 7942
RTN                  ; 7943
LD  2   115          ; 7944
LD  0   0            ; 7945
ST  2   115          ; 7946
RTN                  ; 7947
LDF 7944             ; 7948
RTN                  ; 7949
LD  2   116          ; 7950
RTN                  ; 7951
LDF 7950             ; 7952
RTN                  ; 7953
LD  2   116          ; 7954
LD  0   0            ; 7955
ST  2   116          ; 7956
RTN                  ; 7957
LDF 7954             ; 7958
RTN                  ; 7959
LD  2   117          ; 7960
RTN                  ; 7961
LDF 7960             ; 7962
RTN                  ; 7963
LD  2   117          ; 7964
LD  0   0            ; 7965
ST  2   117          ; 7966
RTN                  ; 7967
LDF 7964             ; 7968
RTN                  ; 7969
LD  2   118          ; 7970
RTN                  ; 7971
LDF 7970             ; 7972
RTN                  ; 7973
LD  2   118          ; 7974
LD  0   0            ; 7975
ST  2   118          ; 7976
RTN                  ; 7977
LDF 7974             ; 7978
RTN                  ; 7979
LD  2   119          ; 7980
RTN                  ; 7981
LDF 7980             ; 7982
RTN                  ; 7983
LD  2   119          ; 7984
LD  0   0            ; 7985
ST  2   119          ; 7986
RTN                  ; 7987
LDF 7984             ; 7988
RTN                  ; 7989
LD  2   120          ; 7990
RTN                  ; 7991
LDF 7990             ; 7992
RTN                  ; 7993
LD  2   120          ; 7994
LD  0   0            ; 7995
ST  2   120          ; 7996
RTN                  ; 7997
LDF 7994             ; 7998
RTN                  ; 7999
LD  2   121          ; 8000
RTN                  ; 8001
LDF 8000             ; 8002
RTN                  ; 8003
LD  2   121          ; 8004
LD  0   0            ; 8005
ST  2   121          ; 8006
RTN                  ; 8007
LDF 8004             ; 8008
RTN                  ; 8009
LD  2   122          ; 8010
RTN                  ; 8011
LDF 8010             ; 8012
RTN                  ; 8013
LD  2   122          ; 8014
LD  0   0            ; 8015
ST  2   122          ; 8016
RTN                  ; 8017
LDF 8014             ; 8018
RTN                  ; 8019
LD  2   123          ; 8020
RTN                  ; 8021
LDF 8020             ; 8022
RTN                  ; 8023
LD  2   123          ; 8024
LD  0   0            ; 8025
ST  2   123          ; 8026
RTN                  ; 8027
LDF 8024             ; 8028
RTN                  ; 8029
LD  2   124          ; 8030
RTN                  ; 8031
LDF 8030             ; 8032
RTN                  ; 8033
LD  2   124          ; 8034
LD  0   0            ; 8035
ST  2   124          ; 8036
RTN                  ; 8037
LDF 8034             ; 8038
RTN                  ; 8039
LD  2   125          ; 8040
RTN                  ; 8041
LDF 8040             ; 8042
RTN                  ; 8043
LD  2   125          ; 8044
LD  0   0            ; 8045
ST  2   125          ; 8046
RTN                  ; 8047
LDF 8044             ; 8048
RTN                  ; 8049
LD  2   126          ; 8050
RTN                  ; 8051
LDF 8050             ; 8052
RTN                  ; 8053
LD  2   126          ; 8054
LD  0   0            ; 8055
ST  2   126          ; 8056
RTN                  ; 8057
LDF 8054             ; 8058
RTN                  ; 8059
LD  2   127          ; 8060
RTN                  ; 8061
LDF 8060             ; 8062
RTN                  ; 8063
LD  2   127          ; 8064
LD  0   0            ; 8065
ST  2   127          ; 8066
RTN                  ; 8067
LDF 8064             ; 8068
RTN                  ; 8069
LD  2   128          ; 8070
RTN                  ; 8071
LDF 8070             ; 8072
RTN                  ; 8073
LD  2   128          ; 8074
LD  0   0            ; 8075
ST  2   128          ; 8076
RTN                  ; 8077
LDF 8074             ; 8078
RTN                  ; 8079
LD  2   129          ; 8080
RTN                  ; 8081
LDF 8080             ; 8082
RTN                  ; 8083
LD  2   129          ; 8084
LD  0   0            ; 8085
ST  2   129          ; 8086
RTN                  ; 8087
LDF 8084             ; 8088
RTN                  ; 8089
LD  2   130          ; 8090
RTN                  ; 8091
LDF 8090             ; 8092
RTN                  ; 8093
LD  2   130          ; 8094
LD  0   0            ; 8095
ST  2   130          ; 8096
RTN                  ; 8097
LDF 8094             ; 8098
RTN                  ; 8099
LD  2   131          ; 8100
RTN                  ; 8101
LDF 8100             ; 8102
RTN                  ; 8103
LD  2   131          ; 8104
LD  0   0            ; 8105
ST  2   131          ; 8106
RTN                  ; 8107
LDF 8104             ; 8108
RTN                  ; 8109
LD  2   132          ; 8110
RTN                  ; 8111
LDF 8110             ; 8112
RTN                  ; 8113
LD  2   132          ; 8114
LD  0   0            ; 8115
ST  2   132          ; 8116
RTN                  ; 8117
LDF 8114             ; 8118
RTN                  ; 8119
LD  2   133          ; 8120
RTN                  ; 8121
LDF 8120             ; 8122
RTN                  ; 8123
LD  2   133          ; 8124
LD  0   0            ; 8125
ST  2   133          ; 8126
RTN                  ; 8127
LDF 8124             ; 8128
RTN                  ; 8129
LD  2   134          ; 8130
RTN                  ; 8131
LDF 8130             ; 8132
RTN                  ; 8133
LD  2   134          ; 8134
LD  0   0            ; 8135
ST  2   134          ; 8136
RTN                  ; 8137
LDF 8134             ; 8138
RTN                  ; 8139
LD  2   135          ; 8140
RTN                  ; 8141
LDF 8140             ; 8142
RTN                  ; 8143
LD  2   135          ; 8144
LD  0   0            ; 8145
ST  2   135          ; 8146
RTN                  ; 8147
LDF 8144             ; 8148
RTN                  ; 8149
LD  2   136          ; 8150
RTN                  ; 8151
LDF 8150             ; 8152
RTN                  ; 8153
LD  2   136          ; 8154
LD  0   0            ; 8155
ST  2   136          ; 8156
RTN                  ; 8157
LDF 8154             ; 8158
RTN                  ; 8159
LD  2   137          ; 8160
RTN                  ; 8161
LDF 8160             ; 8162
RTN                  ; 8163
LD  2   137          ; 8164
LD  0   0            ; 8165
ST  2   137          ; 8166
RTN                  ; 8167
LDF 8164             ; 8168
RTN                  ; 8169
LD  2   138          ; 8170
RTN                  ; 8171
LDF 8170             ; 8172
RTN                  ; 8173
LD  2   138          ; 8174
LD  0   0            ; 8175
ST  2   138          ; 8176
RTN                  ; 8177
LDF 8174             ; 8178
RTN                  ; 8179
LD  2   139          ; 8180
RTN                  ; 8181
LDF 8180             ; 8182
RTN                  ; 8183
LD  2   139          ; 8184
LD  0   0            ; 8185
ST  2   139          ; 8186
RTN                  ; 8187
LDF 8184             ; 8188
RTN                  ; 8189
LD  2   140          ; 8190
RTN                  ; 8191
LDF 8190             ; 8192
RTN                  ; 8193
LD  2   140          ; 8194
LD  0   0            ; 8195
ST  2   140          ; 8196
RTN                  ; 8197
LDF 8194             ; 8198
RTN                  ; 8199
LD  2   141          ; 8200
RTN                  ; 8201
LDF 8200             ; 8202
RTN                  ; 8203
LD  2   141          ; 8204
LD  0   0            ; 8205
ST  2   141          ; 8206
RTN                  ; 8207
LDF 8204             ; 8208
RTN                  ; 8209
LD  2   142          ; 8210
RTN                  ; 8211
LDF 8210             ; 8212
RTN                  ; 8213
LD  2   142          ; 8214
LD  0   0            ; 8215
ST  2   142          ; 8216
RTN                  ; 8217
LDF 8214             ; 8218
RTN                  ; 8219
LD  2   143          ; 8220
RTN                  ; 8221
LDF 8220             ; 8222
RTN                  ; 8223
LD  2   143          ; 8224
LD  0   0            ; 8225
ST  2   143          ; 8226
RTN                  ; 8227
LDF 8224             ; 8228
RTN                  ; 8229
LD  2   144          ; 8230
RTN                  ; 8231
LDF 8230             ; 8232
RTN                  ; 8233
LD  2   144          ; 8234
LD  0   0            ; 8235
ST  2   144          ; 8236
RTN                  ; 8237
LDF 8234             ; 8238
RTN                  ; 8239
LD  2   145          ; 8240
RTN                  ; 8241
LDF 8240             ; 8242
RTN                  ; 8243
LD  2   145          ; 8244
LD  0   0            ; 8245
ST  2   145          ; 8246
RTN                  ; 8247
LDF 8244             ; 8248
RTN                  ; 8249
LD  2   146          ; 8250
RTN                  ; 8251
LDF 8250             ; 8252
RTN                  ; 8253
LD  2   146          ; 8254
LD  0   0            ; 8255
ST  2   146          ; 8256
RTN                  ; 8257
LDF 8254             ; 8258
RTN                  ; 8259
LD  2   147          ; 8260
RTN                  ; 8261
LDF 8260             ; 8262
RTN                  ; 8263
LD  2   147          ; 8264
LD  0   0            ; 8265
ST  2   147          ; 8266
RTN                  ; 8267
LDF 8264             ; 8268
RTN                  ; 8269
LD  2   148          ; 8270
RTN                  ; 8271
LDF 8270             ; 8272
RTN                  ; 8273
LD  2   148          ; 8274
LD  0   0            ; 8275
ST  2   148          ; 8276
RTN                  ; 8277
LDF 8274             ; 8278
RTN                  ; 8279
LD  2   149          ; 8280
RTN                  ; 8281
LDF 8280             ; 8282
RTN                  ; 8283
LD  2   149          ; 8284
LD  0   0            ; 8285
ST  2   149          ; 8286
RTN                  ; 8287
LDF 8284             ; 8288
RTN                  ; 8289
LD  2   150          ; 8290
RTN                  ; 8291
LDF 8290             ; 8292
RTN                  ; 8293
LD  2   150          ; 8294
LD  0   0            ; 8295
ST  2   150          ; 8296
RTN                  ; 8297
LDF 8294             ; 8298
RTN                  ; 8299
LD  2   151          ; 8300
RTN                  ; 8301
LDF 8300             ; 8302
RTN                  ; 8303
LD  2   151          ; 8304
LD  0   0            ; 8305
ST  2   151          ; 8306
RTN                  ; 8307
LDF 8304             ; 8308
RTN                  ; 8309
LD  2   152          ; 8310
RTN                  ; 8311
LDF 8310             ; 8312
RTN                  ; 8313
LD  2   152          ; 8314
LD  0   0            ; 8315
ST  2   152          ; 8316
RTN                  ; 8317
LDF 8314             ; 8318
RTN                  ; 8319
LD  2   153          ; 8320
RTN                  ; 8321
LDF 8320             ; 8322
RTN                  ; 8323
LD  2   153          ; 8324
LD  0   0            ; 8325
ST  2   153          ; 8326
RTN                  ; 8327
LDF 8324             ; 8328
RTN                  ; 8329
LD  2   154          ; 8330
RTN                  ; 8331
LDF 8330             ; 8332
RTN                  ; 8333
LD  2   154          ; 8334
LD  0   0            ; 8335
ST  2   154          ; 8336
RTN                  ; 8337
LDF 8334             ; 8338
RTN                  ; 8339
LD  2   155          ; 8340
RTN                  ; 8341
LDF 8340             ; 8342
RTN                  ; 8343
LD  2   155          ; 8344
LD  0   0            ; 8345
ST  2   155          ; 8346
RTN                  ; 8347
LDF 8344             ; 8348
RTN                  ; 8349
LD  2   156          ; 8350
RTN                  ; 8351
LDF 8350             ; 8352
RTN                  ; 8353
LD  2   156          ; 8354
LD  0   0            ; 8355
ST  2   156          ; 8356
RTN                  ; 8357
LDF 8354             ; 8358
RTN                  ; 8359
LD  2   157          ; 8360
RTN                  ; 8361
LDF 8360             ; 8362
RTN                  ; 8363
LD  2   157          ; 8364
LD  0   0            ; 8365
ST  2   157          ; 8366
RTN                  ; 8367
LDF 8364             ; 8368
RTN                  ; 8369
LD  2   158          ; 8370
RTN                  ; 8371
LDF 8370             ; 8372
RTN                  ; 8373
LD  2   158          ; 8374
LD  0   0            ; 8375
ST  2   158          ; 8376
RTN                  ; 8377
LDF 8374             ; 8378
RTN                  ; 8379
LD  2   159          ; 8380
RTN                  ; 8381
LDF 8380             ; 8382
RTN                  ; 8383
LD  2   159          ; 8384
LD  0   0            ; 8385
ST  2   159          ; 8386
RTN                  ; 8387
LDF 8384             ; 8388
RTN                  ; 8389
LD  2   160          ; 8390
RTN                  ; 8391
LDF 8390             ; 8392
RTN                  ; 8393
LD  2   160          ; 8394
LD  0   0            ; 8395
ST  2   160          ; 8396
RTN                  ; 8397
LDF 8394             ; 8398
RTN                  ; 8399
LD  2   161          ; 8400
RTN                  ; 8401
LDF 8400             ; 8402
RTN                  ; 8403
LD  2   161          ; 8404
LD  0   0            ; 8405
ST  2   161          ; 8406
RTN                  ; 8407
LDF 8404             ; 8408
RTN                  ; 8409
LD  2   162          ; 8410
RTN                  ; 8411
LDF 8410             ; 8412
RTN                  ; 8413
LD  2   162          ; 8414
LD  0   0            ; 8415
ST  2   162          ; 8416
RTN                  ; 8417
LDF 8414             ; 8418
RTN                  ; 8419
LD  2   163          ; 8420
RTN                  ; 8421
LDF 8420             ; 8422
RTN                  ; 8423
LD  2   163          ; 8424
LD  0   0            ; 8425
ST  2   163          ; 8426
RTN                  ; 8427
LDF 8424             ; 8428
RTN                  ; 8429
LD  2   164          ; 8430
RTN                  ; 8431
LDF 8430             ; 8432
RTN                  ; 8433
LD  2   164          ; 8434
LD  0   0            ; 8435
ST  2   164          ; 8436
RTN                  ; 8437
LDF 8434             ; 8438
RTN                  ; 8439
LD  2   165          ; 8440
RTN                  ; 8441
LDF 8440             ; 8442
RTN                  ; 8443
LD  2   165          ; 8444
LD  0   0            ; 8445
ST  2   165          ; 8446
RTN                  ; 8447
LDF 8444             ; 8448
RTN                  ; 8449
LD  2   166          ; 8450
RTN                  ; 8451
LDF 8450             ; 8452
RTN                  ; 8453
LD  2   166          ; 8454
LD  0   0            ; 8455
ST  2   166          ; 8456
RTN                  ; 8457
LDF 8454             ; 8458
RTN                  ; 8459
LD  2   167          ; 8460
RTN                  ; 8461
LDF 8460             ; 8462
RTN                  ; 8463
LD  2   167          ; 8464
LD  0   0            ; 8465
ST  2   167          ; 8466
RTN                  ; 8467
LDF 8464             ; 8468
RTN                  ; 8469
LD  2   168          ; 8470
RTN                  ; 8471
LDF 8470             ; 8472
RTN                  ; 8473
LD  2   168          ; 8474
LD  0   0            ; 8475
ST  2   168          ; 8476
RTN                  ; 8477
LDF 8474             ; 8478
RTN                  ; 8479
LD  2   169          ; 8480
RTN                  ; 8481
LDF 8480             ; 8482
RTN                  ; 8483
LD  2   169          ; 8484
LD  0   0            ; 8485
ST  2   169          ; 8486
RTN                  ; 8487
LDF 8484             ; 8488
RTN                  ; 8489
LD  2   170          ; 8490
RTN                  ; 8491
LDF 8490             ; 8492
RTN                  ; 8493
LD  2   170          ; 8494
LD  0   0            ; 8495
ST  2   170          ; 8496
RTN                  ; 8497
LDF 8494             ; 8498
RTN                  ; 8499
LD  2   171          ; 8500
RTN                  ; 8501
LDF 8500             ; 8502
RTN                  ; 8503
LD  2   171          ; 8504
LD  0   0            ; 8505
ST  2   171          ; 8506
RTN                  ; 8507
LDF 8504             ; 8508
RTN                  ; 8509
LD  2   172          ; 8510
RTN                  ; 8511
LDF 8510             ; 8512
RTN                  ; 8513
LD  2   172          ; 8514
LD  0   0            ; 8515
ST  2   172          ; 8516
RTN                  ; 8517
LDF 8514             ; 8518
RTN                  ; 8519
LD  2   173          ; 8520
RTN                  ; 8521
LDF 8520             ; 8522
RTN                  ; 8523
LD  2   173          ; 8524
LD  0   0            ; 8525
ST  2   173          ; 8526
RTN                  ; 8527
LDF 8524             ; 8528
RTN                  ; 8529
LD  2   174          ; 8530
RTN                  ; 8531
LDF 8530             ; 8532
RTN                  ; 8533
LD  2   174          ; 8534
LD  0   0            ; 8535
ST  2   174          ; 8536
RTN                  ; 8537
LDF 8534             ; 8538
RTN                  ; 8539
LD  2   175          ; 8540
RTN                  ; 8541
LDF 8540             ; 8542
RTN                  ; 8543
LD  2   175          ; 8544
LD  0   0            ; 8545
ST  2   175          ; 8546
RTN                  ; 8547
LDF 8544             ; 8548
RTN                  ; 8549
LD  2   176          ; 8550
RTN                  ; 8551
LDF 8550             ; 8552
RTN                  ; 8553
LD  2   176          ; 8554
LD  0   0            ; 8555
ST  2   176          ; 8556
RTN                  ; 8557
LDF 8554             ; 8558
RTN                  ; 8559
LD  2   177          ; 8560
RTN                  ; 8561
LDF 8560             ; 8562
RTN                  ; 8563
LD  2   177          ; 8564
LD  0   0            ; 8565
ST  2   177          ; 8566
RTN                  ; 8567
LDF 8564             ; 8568
RTN                  ; 8569
LD  2   178          ; 8570
RTN                  ; 8571
LDF 8570             ; 8572
RTN                  ; 8573
LD  2   178          ; 8574
LD  0   0            ; 8575
ST  2   178          ; 8576
RTN                  ; 8577
LDF 8574             ; 8578
RTN                  ; 8579
LD  2   179          ; 8580
RTN                  ; 8581
LDF 8580             ; 8582
RTN                  ; 8583
LD  2   179          ; 8584
LD  0   0            ; 8585
ST  2   179          ; 8586
RTN                  ; 8587
LDF 8584             ; 8588
RTN                  ; 8589
LD  2   180          ; 8590
RTN                  ; 8591
LDF 8590             ; 8592
RTN                  ; 8593
LD  2   180          ; 8594
LD  0   0            ; 8595
ST  2   180          ; 8596
RTN                  ; 8597
LDF 8594             ; 8598
RTN                  ; 8599
LD  2   181          ; 8600
RTN                  ; 8601
LDF 8600             ; 8602
RTN                  ; 8603
LD  2   181          ; 8604
LD  0   0            ; 8605
ST  2   181          ; 8606
RTN                  ; 8607
LDF 8604             ; 8608
RTN                  ; 8609
LD  2   182          ; 8610
RTN                  ; 8611
LDF 8610             ; 8612
RTN                  ; 8613
LD  2   182          ; 8614
LD  0   0            ; 8615
ST  2   182          ; 8616
RTN                  ; 8617
LDF 8614             ; 8618
RTN                  ; 8619
LD  2   183          ; 8620
RTN                  ; 8621
LDF 8620             ; 8622
RTN                  ; 8623
LD  2   183          ; 8624
LD  0   0            ; 8625
ST  2   183          ; 8626
RTN                  ; 8627
LDF 8624             ; 8628
RTN                  ; 8629
LD  2   184          ; 8630
RTN                  ; 8631
LDF 8630             ; 8632
RTN                  ; 8633
LD  2   184          ; 8634
LD  0   0            ; 8635
ST  2   184          ; 8636
RTN                  ; 8637
LDF 8634             ; 8638
RTN                  ; 8639
LD  2   185          ; 8640
RTN                  ; 8641
LDF 8640             ; 8642
RTN                  ; 8643
LD  2   185          ; 8644
LD  0   0            ; 8645
ST  2   185          ; 8646
RTN                  ; 8647
LDF 8644             ; 8648
RTN                  ; 8649
LD  2   186          ; 8650
RTN                  ; 8651
LDF 8650             ; 8652
RTN                  ; 8653
LD  2   186          ; 8654
LD  0   0            ; 8655
ST  2   186          ; 8656
RTN                  ; 8657
LDF 8654             ; 8658
RTN                  ; 8659
LD  2   187          ; 8660
RTN                  ; 8661
LDF 8660             ; 8662
RTN                  ; 8663
LD  2   187          ; 8664
LD  0   0            ; 8665
ST  2   187          ; 8666
RTN                  ; 8667
LDF 8664             ; 8668
RTN                  ; 8669
LD  2   188          ; 8670
RTN                  ; 8671
LDF 8670             ; 8672
RTN                  ; 8673
LD  2   188          ; 8674
LD  0   0            ; 8675
ST  2   188          ; 8676
RTN                  ; 8677
LDF 8674             ; 8678
RTN                  ; 8679
LD  2   189          ; 8680
RTN                  ; 8681
LDF 8680             ; 8682
RTN                  ; 8683
LD  2   189          ; 8684
LD  0   0            ; 8685
ST  2   189          ; 8686
RTN                  ; 8687
LDF 8684             ; 8688
RTN                  ; 8689
LD  2   190          ; 8690
RTN                  ; 8691
LDF 8690             ; 8692
RTN                  ; 8693
LD  2   190          ; 8694
LD  0   0            ; 8695
ST  2   190          ; 8696
RTN                  ; 8697
LDF 8694             ; 8698
RTN                  ; 8699
LD  2   191          ; 8700
RTN                  ; 8701
LDF 8700             ; 8702
RTN                  ; 8703
LD  2   191          ; 8704
LD  0   0            ; 8705
ST  2   191          ; 8706
RTN                  ; 8707
LDF 8704             ; 8708
RTN                  ; 8709
LD  2   192          ; 8710
RTN                  ; 8711
LDF 8710             ; 8712
RTN                  ; 8713
LD  2   192          ; 8714
LD  0   0            ; 8715
ST  2   192          ; 8716
RTN                  ; 8717
LDF 8714             ; 8718
RTN                  ; 8719
LD  2   193          ; 8720
RTN                  ; 8721
LDF 8720             ; 8722
RTN                  ; 8723
LD  2   193          ; 8724
LD  0   0            ; 8725
ST  2   193          ; 8726
RTN                  ; 8727
LDF 8724             ; 8728
RTN                  ; 8729
LD  2   194          ; 8730
RTN                  ; 8731
LDF 8730             ; 8732
RTN                  ; 8733
LD  2   194          ; 8734
LD  0   0            ; 8735
ST  2   194          ; 8736
RTN                  ; 8737
LDF 8734             ; 8738
RTN                  ; 8739
LD  2   195          ; 8740
RTN                  ; 8741
LDF 8740             ; 8742
RTN                  ; 8743
LD  2   195          ; 8744
LD  0   0            ; 8745
ST  2   195          ; 8746
RTN                  ; 8747
LDF 8744             ; 8748
RTN                  ; 8749
LD  2   196          ; 8750
RTN                  ; 8751
LDF 8750             ; 8752
RTN                  ; 8753
LD  2   196          ; 8754
LD  0   0            ; 8755
ST  2   196          ; 8756
RTN                  ; 8757
LDF 8754             ; 8758
RTN                  ; 8759
LD  2   197          ; 8760
RTN                  ; 8761
LDF 8760             ; 8762
RTN                  ; 8763
LD  2   197          ; 8764
LD  0   0            ; 8765
ST  2   197          ; 8766
RTN                  ; 8767
LDF 8764             ; 8768
RTN                  ; 8769
LD  2   198          ; 8770
RTN                  ; 8771
LDF 8770             ; 8772
RTN                  ; 8773
LD  2   198          ; 8774
LD  0   0            ; 8775
ST  2   198          ; 8776
RTN                  ; 8777
LDF 8774             ; 8778
RTN                  ; 8779
LD  2   199          ; 8780
RTN                  ; 8781
LDF 8780             ; 8782
RTN                  ; 8783
LD  2   199          ; 8784
LD  0   0            ; 8785
ST  2   199          ; 8786
RTN                  ; 8787
LDF 8784             ; 8788
RTN                  ; 8789
LD  2   200          ; 8790
RTN                  ; 8791
LDF 8790             ; 8792
RTN                  ; 8793
LD  2   200          ; 8794
LD  0   0            ; 8795
ST  2   200          ; 8796
RTN                  ; 8797
LDF 8794             ; 8798
RTN                  ; 8799
LD  2   201          ; 8800
RTN                  ; 8801
LDF 8800             ; 8802
RTN                  ; 8803
LD  2   201          ; 8804
LD  0   0            ; 8805
ST  2   201          ; 8806
RTN                  ; 8807
LDF 8804             ; 8808
RTN                  ; 8809
LD  2   202          ; 8810
RTN                  ; 8811
LDF 8810             ; 8812
RTN                  ; 8813
LD  2   202          ; 8814
LD  0   0            ; 8815
ST  2   202          ; 8816
RTN                  ; 8817
LDF 8814             ; 8818
RTN                  ; 8819
LD  2   203          ; 8820
RTN                  ; 8821
LDF 8820             ; 8822
RTN                  ; 8823
LD  2   203          ; 8824
LD  0   0            ; 8825
ST  2   203          ; 8826
RTN                  ; 8827
LDF 8824             ; 8828
RTN                  ; 8829
LD  2   204          ; 8830
RTN                  ; 8831
LDF 8830             ; 8832
RTN                  ; 8833
LD  2   204          ; 8834
LD  0   0            ; 8835
ST  2   204          ; 8836
RTN                  ; 8837
LDF 8834             ; 8838
RTN                  ; 8839
LD  2   205          ; 8840
RTN                  ; 8841
LDF 8840             ; 8842
RTN                  ; 8843
LD  2   205          ; 8844
LD  0   0            ; 8845
ST  2   205          ; 8846
RTN                  ; 8847
LDF 8844             ; 8848
RTN                  ; 8849
LD  2   206          ; 8850
RTN                  ; 8851
LDF 8850             ; 8852
RTN                  ; 8853
LD  2   206          ; 8854
LD  0   0            ; 8855
ST  2   206          ; 8856
RTN                  ; 8857
LDF 8854             ; 8858
RTN                  ; 8859
LD  2   207          ; 8860
RTN                  ; 8861
LDF 8860             ; 8862
RTN                  ; 8863
LD  2   207          ; 8864
LD  0   0            ; 8865
ST  2   207          ; 8866
RTN                  ; 8867
LDF 8864             ; 8868
RTN                  ; 8869
LD  2   208          ; 8870
RTN                  ; 8871
LDF 8870             ; 8872
RTN                  ; 8873
LD  2   208          ; 8874
LD  0   0            ; 8875
ST  2   208          ; 8876
RTN                  ; 8877
LDF 8874             ; 8878
RTN                  ; 8879
LD  2   209          ; 8880
RTN                  ; 8881
LDF 8880             ; 8882
RTN                  ; 8883
LD  2   209          ; 8884
LD  0   0            ; 8885
ST  2   209          ; 8886
RTN                  ; 8887
LDF 8884             ; 8888
RTN                  ; 8889
LD  2   210          ; 8890
RTN                  ; 8891
LDF 8890             ; 8892
RTN                  ; 8893
LD  2   210          ; 8894
LD  0   0            ; 8895
ST  2   210          ; 8896
RTN                  ; 8897
LDF 8894             ; 8898
RTN                  ; 8899
LD  2   211          ; 8900
RTN                  ; 8901
LDF 8900             ; 8902
RTN                  ; 8903
LD  2   211          ; 8904
LD  0   0            ; 8905
ST  2   211          ; 8906
RTN                  ; 8907
LDF 8904             ; 8908
RTN                  ; 8909
LD  2   212          ; 8910
RTN                  ; 8911
LDF 8910             ; 8912
RTN                  ; 8913
LD  2   212          ; 8914
LD  0   0            ; 8915
ST  2   212          ; 8916
RTN                  ; 8917
LDF 8914             ; 8918
RTN                  ; 8919
LD  2   213          ; 8920
RTN                  ; 8921
LDF 8920             ; 8922
RTN                  ; 8923
LD  2   213          ; 8924
LD  0   0            ; 8925
ST  2   213          ; 8926
RTN                  ; 8927
LDF 8924             ; 8928
RTN                  ; 8929
LD  2   214          ; 8930
RTN                  ; 8931
LDF 8930             ; 8932
RTN                  ; 8933
LD  2   214          ; 8934
LD  0   0            ; 8935
ST  2   214          ; 8936
RTN                  ; 8937
LDF 8934             ; 8938
RTN                  ; 8939
LD  2   215          ; 8940
RTN                  ; 8941
LDF 8940             ; 8942
RTN                  ; 8943
LD  2   215          ; 8944
LD  0   0            ; 8945
ST  2   215          ; 8946
RTN                  ; 8947
LDF 8944             ; 8948
RTN                  ; 8949
LD  2   216          ; 8950
RTN                  ; 8951
LDF 8950             ; 8952
RTN                  ; 8953
LD  2   216          ; 8954
LD  0   0            ; 8955
ST  2   216          ; 8956
RTN                  ; 8957
LDF 8954             ; 8958
RTN                  ; 8959
LD  2   217          ; 8960
RTN                  ; 8961
LDF 8960             ; 8962
RTN                  ; 8963
LD  2   217          ; 8964
LD  0   0            ; 8965
ST  2   217          ; 8966
RTN                  ; 8967
LDF 8964             ; 8968
RTN                  ; 8969
LD  2   218          ; 8970
RTN                  ; 8971
LDF 8970             ; 8972
RTN                  ; 8973
LD  2   218          ; 8974
LD  0   0            ; 8975
ST  2   218          ; 8976
RTN                  ; 8977
LDF 8974             ; 8978
RTN                  ; 8979
LD  2   219          ; 8980
RTN                  ; 8981
LDF 8980             ; 8982
RTN                  ; 8983
LD  2   219          ; 8984
LD  0   0            ; 8985
ST  2   219          ; 8986
RTN                  ; 8987
LDF 8984             ; 8988
RTN                  ; 8989
LD  2   220          ; 8990
RTN                  ; 8991
LDF 8990             ; 8992
RTN                  ; 8993
LD  2   220          ; 8994
LD  0   0            ; 8995
ST  2   220          ; 8996
RTN                  ; 8997
LDF 8994             ; 8998
RTN                  ; 8999
LD  2   221          ; 9000
RTN                  ; 9001
LDF 9000             ; 9002
RTN                  ; 9003
LD  2   221          ; 9004
LD  0   0            ; 9005
ST  2   221          ; 9006
RTN                  ; 9007
LDF 9004             ; 9008
RTN                  ; 9009
LD  2   222          ; 9010
RTN                  ; 9011
LDF 9010             ; 9012
RTN                  ; 9013
LD  2   222          ; 9014
LD  0   0            ; 9015
ST  2   222          ; 9016
RTN                  ; 9017
LDF 9014             ; 9018
RTN                  ; 9019
LD  2   223          ; 9020
RTN                  ; 9021
LDF 9020             ; 9022
RTN                  ; 9023
LD  2   223          ; 9024
LD  0   0            ; 9025
ST  2   223          ; 9026
RTN                  ; 9027
LDF 9024             ; 9028
RTN                  ; 9029
LD  2   224          ; 9030
RTN                  ; 9031
LDF 9030             ; 9032
RTN                  ; 9033
LD  2   224          ; 9034
LD  0   0            ; 9035
ST  2   224          ; 9036
RTN                  ; 9037
LDF 9034             ; 9038
RTN                  ; 9039
LD  2   225          ; 9040
RTN                  ; 9041
LDF 9040             ; 9042
RTN                  ; 9043
LD  2   225          ; 9044
LD  0   0            ; 9045
ST  2   225          ; 9046
RTN                  ; 9047
LDF 9044             ; 9048
RTN                  ; 9049
LD  2   226          ; 9050
RTN                  ; 9051
LDF 9050             ; 9052
RTN                  ; 9053
LD  2   226          ; 9054
LD  0   0            ; 9055
ST  2   226          ; 9056
RTN                  ; 9057
LDF 9054             ; 9058
RTN                  ; 9059
LD  2   227          ; 9060
RTN                  ; 9061
LDF 9060             ; 9062
RTN                  ; 9063
LD  2   227          ; 9064
LD  0   0            ; 9065
ST  2   227          ; 9066
RTN                  ; 9067
LDF 9064             ; 9068
RTN                  ; 9069
LD  2   228          ; 9070
RTN                  ; 9071
LDF 9070             ; 9072
RTN                  ; 9073
LD  2   228          ; 9074
LD  0   0            ; 9075
ST  2   228          ; 9076
RTN                  ; 9077
LDF 9074             ; 9078
RTN                  ; 9079
LD  2   229          ; 9080
RTN                  ; 9081
LDF 9080             ; 9082
RTN                  ; 9083
LD  2   229          ; 9084
LD  0   0            ; 9085
ST  2   229          ; 9086
RTN                  ; 9087
LDF 9084             ; 9088
RTN                  ; 9089
LD  2   230          ; 9090
RTN                  ; 9091
LDF 9090             ; 9092
RTN                  ; 9093
LD  2   230          ; 9094
LD  0   0            ; 9095
ST  2   230          ; 9096
RTN                  ; 9097
LDF 9094             ; 9098
RTN                  ; 9099
LD  2   231          ; 9100
RTN                  ; 9101
LDF 9100             ; 9102
RTN                  ; 9103
LD  2   231          ; 9104
LD  0   0            ; 9105
ST  2   231          ; 9106
RTN                  ; 9107
LDF 9104             ; 9108
RTN                  ; 9109
LD  2   232          ; 9110
RTN                  ; 9111
LDF 9110             ; 9112
RTN                  ; 9113
LD  2   232          ; 9114
LD  0   0            ; 9115
ST  2   232          ; 9116
RTN                  ; 9117
LDF 9114             ; 9118
RTN                  ; 9119
LD  2   233          ; 9120
RTN                  ; 9121
LDF 9120             ; 9122
RTN                  ; 9123
LD  2   233          ; 9124
LD  0   0            ; 9125
ST  2   233          ; 9126
RTN                  ; 9127
LDF 9124             ; 9128
RTN                  ; 9129
LD  2   234          ; 9130
RTN                  ; 9131
LDF 9130             ; 9132
RTN                  ; 9133
LD  2   234          ; 9134
LD  0   0            ; 9135
ST  2   234          ; 9136
RTN                  ; 9137
LDF 9134             ; 9138
RTN                  ; 9139
LD  2   235          ; 9140
RTN                  ; 9141
LDF 9140             ; 9142
RTN                  ; 9143
LD  2   235          ; 9144
LD  0   0            ; 9145
ST  2   235          ; 9146
RTN                  ; 9147
LDF 9144             ; 9148
RTN                  ; 9149
LD  2   236          ; 9150
RTN                  ; 9151
LDF 9150             ; 9152
RTN                  ; 9153
LD  2   236          ; 9154
LD  0   0            ; 9155
ST  2   236          ; 9156
RTN                  ; 9157
LDF 9154             ; 9158
RTN                  ; 9159
LD  2   237          ; 9160
RTN                  ; 9161
LDF 9160             ; 9162
RTN                  ; 9163
LD  2   237          ; 9164
LD  0   0            ; 9165
ST  2   237          ; 9166
RTN                  ; 9167
LDF 9164             ; 9168
RTN                  ; 9169
LD  2   238          ; 9170
RTN                  ; 9171
LDF 9170             ; 9172
RTN                  ; 9173
LD  2   238          ; 9174
LD  0   0            ; 9175
ST  2   238          ; 9176
RTN                  ; 9177
LDF 9174             ; 9178
RTN                  ; 9179
LD  2   239          ; 9180
RTN                  ; 9181
LDF 9180             ; 9182
RTN                  ; 9183
LD  2   239          ; 9184
LD  0   0            ; 9185
ST  2   239          ; 9186
RTN                  ; 9187
LDF 9184             ; 9188
RTN                  ; 9189
LD  2   240          ; 9190
RTN                  ; 9191
LDF 9190             ; 9192
RTN                  ; 9193
LD  2   240          ; 9194
LD  0   0            ; 9195
ST  2   240          ; 9196
RTN                  ; 9197
LDF 9194             ; 9198
RTN                  ; 9199
LD  2   241          ; 9200
RTN                  ; 9201
LDF 9200             ; 9202
RTN                  ; 9203
LD  2   241          ; 9204
LD  0   0            ; 9205
ST  2   241          ; 9206
RTN                  ; 9207
LDF 9204             ; 9208
RTN                  ; 9209
LD  2   242          ; 9210
RTN                  ; 9211
LDF 9210             ; 9212
RTN                  ; 9213
LD  2   242          ; 9214
LD  0   0            ; 9215
ST  2   242          ; 9216
RTN                  ; 9217
LDF 9214             ; 9218
RTN                  ; 9219
LD  2   243          ; 9220
RTN                  ; 9221
LDF 9220             ; 9222
RTN                  ; 9223
LD  2   243          ; 9224
LD  0   0            ; 9225
ST  2   243          ; 9226
RTN                  ; 9227
LDF 9224             ; 9228
RTN                  ; 9229
LD  2   244          ; 9230
RTN                  ; 9231
LDF 9230             ; 9232
RTN                  ; 9233
LD  2   244          ; 9234
LD  0   0            ; 9235
ST  2   244          ; 9236
RTN                  ; 9237
LDF 9234             ; 9238
RTN                  ; 9239
LD  2   245          ; 9240
RTN                  ; 9241
LDF 9240             ; 9242
RTN                  ; 9243
LD  2   245          ; 9244
LD  0   0            ; 9245
ST  2   245          ; 9246
RTN                  ; 9247
LDF 9244             ; 9248
RTN                  ; 9249
LD  2   246          ; 9250
RTN                  ; 9251
LDF 9250             ; 9252
RTN                  ; 9253
LD  2   246          ; 9254
LD  0   0            ; 9255
ST  2   246          ; 9256
RTN                  ; 9257
LDF 9254             ; 9258
RTN                  ; 9259
LD  2   247          ; 9260
RTN                  ; 9261
LDF 9260             ; 9262
RTN                  ; 9263
LD  2   247          ; 9264
LD  0   0            ; 9265
ST  2   247          ; 9266
RTN                  ; 9267
LDF 9264             ; 9268
RTN                  ; 9269
LD  2   248          ; 9270
RTN                  ; 9271
LDF 9270             ; 9272
RTN                  ; 9273
LD  2   248          ; 9274
LD  0   0            ; 9275
ST  2   248          ; 9276
RTN                  ; 9277
LDF 9274             ; 9278
RTN                  ; 9279
LD  2   249          ; 9280
RTN                  ; 9281
LDF 9280             ; 9282
RTN                  ; 9283
LD  2   249          ; 9284
LD  0   0            ; 9285
ST  2   249          ; 9286
RTN                  ; 9287
LDF 9284             ; 9288
RTN                  ; 9289
LD  2   250          ; 9290
RTN                  ; 9291
LDF 9290             ; 9292
RTN                  ; 9293
LD  2   250          ; 9294
LD  0   0            ; 9295
ST  2   250          ; 9296
RTN                  ; 9297
LDF 9294             ; 9298
RTN                  ; 9299
LD  2   251          ; 9300
RTN                  ; 9301
LDF 9300             ; 9302
RTN                  ; 9303
LD  2   251          ; 9304
LD  0   0            ; 9305
ST  2   251          ; 9306
RTN                  ; 9307
LDF 9304             ; 9308
RTN                  ; 9309
LD  2   252          ; 9310
RTN                  ; 9311
LDF 9310             ; 9312
RTN                  ; 9313
LD  2   252          ; 9314
LD  0   0            ; 9315
ST  2   252          ; 9316
RTN                  ; 9317
LDF 9314             ; 9318
RTN                  ; 9319
LD  2   253          ; 9320
RTN                  ; 9321
LDF 9320             ; 9322
RTN                  ; 9323
LD  2   253          ; 9324
LD  0   0            ; 9325
ST  2   253          ; 9326
RTN                  ; 9327
LDF 9324             ; 9328
RTN                  ; 9329
LD  2   254          ; 9330
RTN                  ; 9331
LDF 9330             ; 9332
RTN                  ; 9333
LD  2   254          ; 9334
LD  0   0            ; 9335
ST  2   254          ; 9336
RTN                  ; 9337
LDF 9334             ; 9338
RTN                  ; 9339
LD  2   255          ; 9340
RTN                  ; 9341
LDF 9340             ; 9342
RTN                  ; 9343
LD  2   255          ; 9344
LD  0   0            ; 9345
ST  2   255          ; 9346
RTN                  ; 9347
LDF 9344             ; 9348
RTN                  ; 9349
LDC 0               ; generated from native: sample_map ; 9350
LDC 0                ; 9351
LDC 0                ; 9352
LDC 0                ; 9353
LDC 0                ; 9354
LDC 0                ; 9355
LDC 0                ; 9356
LDC 0                ; 9357
LDC 0                ; 9358
LDC 0                ; 9359
LDC 0                ; 9360
LDC 0                ; 9361
LDC 0                ; 9362
LDC 0                ; 9363
LDC 0                ; 9364
LDC 0                ; 9365
LDC 0                ; 9366
LDC 0                ; 9367
LDC 0                ; 9368
LDC 0                ; 9369
LDC 0                ; 9370
LDC 0                ; 9371
LDC 0                ; 9372
LDC 0                ; 9373
CONS                 ; 9374
CONS                 ; 9375
CONS                 ; 9376
CONS                 ; 9377
CONS                 ; 9378
CONS                 ; 9379
CONS                 ; 9380
CONS                 ; 9381
CONS                 ; 9382
CONS                 ; 9383
CONS                 ; 9384
CONS                 ; 9385
CONS                 ; 9386
CONS                 ; 9387
CONS                 ; 9388
CONS                 ; 9389
CONS                 ; 9390
CONS                 ; 9391
CONS                 ; 9392
CONS                 ; 9393
CONS                 ; 9394
CONS                 ; 9395
CONS                 ; 9396
LDC 0                ; 9397
LDC 2                ; 9398
LDC 2                ; 9399
LDC 2                ; 9400
LDC 2                ; 9401
LDC 2                ; 9402
LDC 2                ; 9403
LDC 2                ; 9404
LDC 2                ; 9405
LDC 2                ; 9406
LDC 2                ; 9407
LDC 0                ; 9408
LDC 2                ; 9409
LDC 2                ; 9410
LDC 2                ; 9411
LDC 2                ; 9412
LDC 2                ; 9413
LDC 2                ; 9414
LDC 2                ; 9415
LDC 2                ; 9416
LDC 2                ; 9417
LDC 2                ; 9418
LDC 0                ; 9419
LDC 0                ; 9420
CONS                 ; 9421
CONS                 ; 9422
CONS                 ; 9423
CONS                 ; 9424
CONS                 ; 9425
CONS                 ; 9426
CONS                 ; 9427
CONS                 ; 9428
CONS                 ; 9429
CONS                 ; 9430
CONS                 ; 9431
CONS                 ; 9432
CONS                 ; 9433
CONS                 ; 9434
CONS                 ; 9435
CONS                 ; 9436
CONS                 ; 9437
CONS                 ; 9438
CONS                 ; 9439
CONS                 ; 9440
CONS                 ; 9441
CONS                 ; 9442
CONS                 ; 9443
LDC 0                ; 9444
LDC 2                ; 9445
LDC 0                ; 9446
LDC 0                ; 9447
LDC 0                ; 9448
LDC 2                ; 9449
LDC 0                ; 9450
LDC 0                ; 9451
LDC 0                ; 9452
LDC 0                ; 9453
LDC 2                ; 9454
LDC 0                ; 9455
LDC 2                ; 9456
LDC 0                ; 9457
LDC 0                ; 9458
LDC 0                ; 9459
LDC 0                ; 9460
LDC 2                ; 9461
LDC 0                ; 9462
LDC 0                ; 9463
LDC 0                ; 9464
LDC 2                ; 9465
LDC 0                ; 9466
LDC 0                ; 9467
CONS                 ; 9468
CONS                 ; 9469
CONS                 ; 9470
CONS                 ; 9471
CONS                 ; 9472
CONS                 ; 9473
CONS                 ; 9474
CONS                 ; 9475
CONS                 ; 9476
CONS                 ; 9477
CONS                 ; 9478
CONS                 ; 9479
CONS                 ; 9480
CONS                 ; 9481
CONS                 ; 9482
CONS                 ; 9483
CONS                 ; 9484
CONS                 ; 9485
CONS                 ; 9486
CONS                 ; 9487
CONS                 ; 9488
CONS                 ; 9489
CONS                 ; 9490
LDC 0                ; 9491
LDC 3                ; 9492
LDC 0                ; 9493
LDC 0                ; 9494
LDC 0                ; 9495
LDC 2                ; 9496
LDC 0                ; 9497
LDC 0                ; 9498
LDC 0                ; 9499
LDC 0                ; 9500
LDC 2                ; 9501
LDC 0                ; 9502
LDC 2                ; 9503
LDC 0                ; 9504
LDC 0                ; 9505
LDC 0                ; 9506
LDC 0                ; 9507
LDC 2                ; 9508
LDC 0                ; 9509
LDC 0                ; 9510
LDC 0                ; 9511
LDC 3                ; 9512
LDC 0                ; 9513
LDC 0                ; 9514
CONS                 ; 9515
CONS                 ; 9516
CONS                 ; 9517
CONS                 ; 9518
CONS                 ; 9519
CONS                 ; 9520
CONS                 ; 9521
CONS                 ; 9522
CONS                 ; 9523
CONS                 ; 9524
CONS                 ; 9525
CONS                 ; 9526
CONS                 ; 9527
CONS                 ; 9528
CONS                 ; 9529
CONS                 ; 9530
CONS                 ; 9531
CONS                 ; 9532
CONS                 ; 9533
CONS                 ; 9534
CONS                 ; 9535
CONS                 ; 9536
CONS                 ; 9537
LDC 0                ; 9538
LDC 2                ; 9539
LDC 2                ; 9540
LDC 2                ; 9541
LDC 2                ; 9542
LDC 2                ; 9543
LDC 2                ; 9544
LDC 2                ; 9545
LDC 2                ; 9546
LDC 2                ; 9547
LDC 2                ; 9548
LDC 2                ; 9549
LDC 2                ; 9550
LDC 2                ; 9551
LDC 2                ; 9552
LDC 2                ; 9553
LDC 2                ; 9554
LDC 2                ; 9555
LDC 2                ; 9556
LDC 2                ; 9557
LDC 2                ; 9558
LDC 2                ; 9559
LDC 0                ; 9560
LDC 0                ; 9561
CONS                 ; 9562
CONS                 ; 9563
CONS                 ; 9564
CONS                 ; 9565
CONS                 ; 9566
CONS                 ; 9567
CONS                 ; 9568
CONS                 ; 9569
CONS                 ; 9570
CONS                 ; 9571
CONS                 ; 9572
CONS                 ; 9573
CONS                 ; 9574
CONS                 ; 9575
CONS                 ; 9576
CONS                 ; 9577
CONS                 ; 9578
CONS                 ; 9579
CONS                 ; 9580
CONS                 ; 9581
CONS                 ; 9582
CONS                 ; 9583
CONS                 ; 9584
LDC 0                ; 9585
LDC 2                ; 9586
LDC 0                ; 9587
LDC 0                ; 9588
LDC 0                ; 9589
LDC 2                ; 9590
LDC 0                ; 9591
LDC 2                ; 9592
LDC 0                ; 9593
LDC 0                ; 9594
LDC 0                ; 9595
LDC 0                ; 9596
LDC 0                ; 9597
LDC 0                ; 9598
LDC 0                ; 9599
LDC 2                ; 9600
LDC 0                ; 9601
LDC 2                ; 9602
LDC 0                ; 9603
LDC 0                ; 9604
LDC 0                ; 9605
LDC 2                ; 9606
LDC 0                ; 9607
LDC 0                ; 9608
CONS                 ; 9609
CONS                 ; 9610
CONS                 ; 9611
CONS                 ; 9612
CONS                 ; 9613
CONS                 ; 9614
CONS                 ; 9615
CONS                 ; 9616
CONS                 ; 9617
CONS                 ; 9618
CONS                 ; 9619
CONS                 ; 9620
CONS                 ; 9621
CONS                 ; 9622
CONS                 ; 9623
CONS                 ; 9624
CONS                 ; 9625
CONS                 ; 9626
CONS                 ; 9627
CONS                 ; 9628
CONS                 ; 9629
CONS                 ; 9630
CONS                 ; 9631
LDC 0                ; 9632
LDC 2                ; 9633
LDC 2                ; 9634
LDC 2                ; 9635
LDC 2                ; 9636
LDC 2                ; 9637
LDC 0                ; 9638
LDC 2                ; 9639
LDC 2                ; 9640
LDC 2                ; 9641
LDC 2                ; 9642
LDC 0                ; 9643
LDC 2                ; 9644
LDC 2                ; 9645
LDC 2                ; 9646
LDC 2                ; 9647
LDC 0                ; 9648
LDC 2                ; 9649
LDC 2                ; 9650
LDC 2                ; 9651
LDC 2                ; 9652
LDC 2                ; 9653
LDC 0                ; 9654
LDC 0                ; 9655
CONS                 ; 9656
CONS                 ; 9657
CONS                 ; 9658
CONS                 ; 9659
CONS                 ; 9660
CONS                 ; 9661
CONS                 ; 9662
CONS                 ; 9663
CONS                 ; 9664
CONS                 ; 9665
CONS                 ; 9666
CONS                 ; 9667
CONS                 ; 9668
CONS                 ; 9669
CONS                 ; 9670
CONS                 ; 9671
CONS                 ; 9672
CONS                 ; 9673
CONS                 ; 9674
CONS                 ; 9675
CONS                 ; 9676
CONS                 ; 9677
CONS                 ; 9678
LDC 0                ; 9679
LDC 0                ; 9680
LDC 0                ; 9681
LDC 0                ; 9682
LDC 0                ; 9683
LDC 2                ; 9684
LDC 0                ; 9685
LDC 0                ; 9686
LDC 0                ; 9687
LDC 0                ; 9688
LDC 1                ; 9689
LDC 0                ; 9690
LDC 1                ; 9691
LDC 0                ; 9692
LDC 0                ; 9693
LDC 0                ; 9694
LDC 0                ; 9695
LDC 2                ; 9696
LDC 0                ; 9697
LDC 0                ; 9698
LDC 0                ; 9699
LDC 0                ; 9700
LDC 0                ; 9701
LDC 0                ; 9702
CONS                 ; 9703
CONS                 ; 9704
CONS                 ; 9705
CONS                 ; 9706
CONS                 ; 9707
CONS                 ; 9708
CONS                 ; 9709
CONS                 ; 9710
CONS                 ; 9711
CONS                 ; 9712
CONS                 ; 9713
CONS                 ; 9714
CONS                 ; 9715
CONS                 ; 9716
CONS                 ; 9717
CONS                 ; 9718
CONS                 ; 9719
CONS                 ; 9720
CONS                 ; 9721
CONS                 ; 9722
CONS                 ; 9723
CONS                 ; 9724
CONS                 ; 9725
LDC 0                ; 9726
LDC 1                ; 9727
LDC 1                ; 9728
LDC 1                ; 9729
LDC 0                ; 9730
LDC 2                ; 9731
LDC 0                ; 9732
LDC 1                ; 9733
LDC 1                ; 9734
LDC 1                ; 9735
LDC 1                ; 9736
LDC 6                ; 9737
LDC 1                ; 9738
LDC 1                ; 9739
LDC 1                ; 9740
LDC 1                ; 9741
LDC 0                ; 9742
LDC 2                ; 9743
LDC 0                ; 9744
LDC 1                ; 9745
LDC 1                ; 9746
LDC 1                ; 9747
LDC 0                ; 9748
LDC 0                ; 9749
CONS                 ; 9750
CONS                 ; 9751
CONS                 ; 9752
CONS                 ; 9753
CONS                 ; 9754
CONS                 ; 9755
CONS                 ; 9756
CONS                 ; 9757
CONS                 ; 9758
CONS                 ; 9759
CONS                 ; 9760
CONS                 ; 9761
CONS                 ; 9762
CONS                 ; 9763
CONS                 ; 9764
CONS                 ; 9765
CONS                 ; 9766
CONS                 ; 9767
CONS                 ; 9768
CONS                 ; 9769
CONS                 ; 9770
CONS                 ; 9771
CONS                 ; 9772
LDC 0                ; 9773
LDC 0                ; 9774
LDC 0                ; 9775
LDC 0                ; 9776
LDC 0                ; 9777
LDC 2                ; 9778
LDC 0                ; 9779
LDC 1                ; 9780
LDC 0                ; 9781
LDC 0                ; 9782
LDC 0                ; 9783
LDC 1                ; 9784
LDC 0                ; 9785
LDC 0                ; 9786
LDC 0                ; 9787
LDC 1                ; 9788
LDC 0                ; 9789
LDC 2                ; 9790
LDC 0                ; 9791
LDC 0                ; 9792
LDC 0                ; 9793
LDC 0                ; 9794
LDC 0                ; 9795
LDC 0                ; 9796
CONS                 ; 9797
CONS                 ; 9798
CONS                 ; 9799
CONS                 ; 9800
CONS                 ; 9801
CONS                 ; 9802
CONS                 ; 9803
CONS                 ; 9804
CONS                 ; 9805
CONS                 ; 9806
CONS                 ; 9807
CONS                 ; 9808
CONS                 ; 9809
CONS                 ; 9810
CONS                 ; 9811
CONS                 ; 9812
CONS                 ; 9813
CONS                 ; 9814
CONS                 ; 9815
CONS                 ; 9816
CONS                 ; 9817
CONS                 ; 9818
CONS                 ; 9819
LDC 0                ; 9820
LDC 1                ; 9821
LDC 1                ; 9822
LDC 1                ; 9823
LDC 1                ; 9824
LDC 2                ; 9825
LDC 1                ; 9826
LDC 1                ; 9827
LDC 0                ; 9828
LDC 1                ; 9829
LDC 6                ; 9830
LDC 6                ; 9831
LDC 6                ; 9832
LDC 1                ; 9833
LDC 0                ; 9834
LDC 1                ; 9835
LDC 1                ; 9836
LDC 2                ; 9837
LDC 1                ; 9838
LDC 1                ; 9839
LDC 1                ; 9840
LDC 1                ; 9841
LDC 0                ; 9842
LDC 0                ; 9843
CONS                 ; 9844
CONS                 ; 9845
CONS                 ; 9846
CONS                 ; 9847
CONS                 ; 9848
CONS                 ; 9849
CONS                 ; 9850
CONS                 ; 9851
CONS                 ; 9852
CONS                 ; 9853
CONS                 ; 9854
CONS                 ; 9855
CONS                 ; 9856
CONS                 ; 9857
CONS                 ; 9858
CONS                 ; 9859
CONS                 ; 9860
CONS                 ; 9861
CONS                 ; 9862
CONS                 ; 9863
CONS                 ; 9864
CONS                 ; 9865
CONS                 ; 9866
LDC 0                ; 9867
LDC 0                ; 9868
LDC 0                ; 9869
LDC 0                ; 9870
LDC 0                ; 9871
LDC 2                ; 9872
LDC 0                ; 9873
LDC 1                ; 9874
LDC 0                ; 9875
LDC 0                ; 9876
LDC 0                ; 9877
LDC 0                ; 9878
LDC 0                ; 9879
LDC 0                ; 9880
LDC 0                ; 9881
LDC 1                ; 9882
LDC 0                ; 9883
LDC 2                ; 9884
LDC 0                ; 9885
LDC 0                ; 9886
LDC 0                ; 9887
LDC 0                ; 9888
LDC 0                ; 9889
LDC 0                ; 9890
CONS                 ; 9891
CONS                 ; 9892
CONS                 ; 9893
CONS                 ; 9894
CONS                 ; 9895
CONS                 ; 9896
CONS                 ; 9897
CONS                 ; 9898
CONS                 ; 9899
CONS                 ; 9900
CONS                 ; 9901
CONS                 ; 9902
CONS                 ; 9903
CONS                 ; 9904
CONS                 ; 9905
CONS                 ; 9906
CONS                 ; 9907
CONS                 ; 9908
CONS                 ; 9909
CONS                 ; 9910
CONS                 ; 9911
CONS                 ; 9912
CONS                 ; 9913
LDC 0                ; 9914
LDC 1                ; 9915
LDC 1                ; 9916
LDC 1                ; 9917
LDC 0                ; 9918
LDC 2                ; 9919
LDC 0                ; 9920
LDC 1                ; 9921
LDC 1                ; 9922
LDC 1                ; 9923
LDC 1                ; 9924
LDC 4                ; 9925
LDC 1                ; 9926
LDC 1                ; 9927
LDC 1                ; 9928
LDC 1                ; 9929
LDC 0                ; 9930
LDC 2                ; 9931
LDC 0                ; 9932
LDC 1                ; 9933
LDC 1                ; 9934
LDC 1                ; 9935
LDC 0                ; 9936
LDC 0                ; 9937
CONS                 ; 9938
CONS                 ; 9939
CONS                 ; 9940
CONS                 ; 9941
CONS                 ; 9942
CONS                 ; 9943
CONS                 ; 9944
CONS                 ; 9945
CONS                 ; 9946
CONS                 ; 9947
CONS                 ; 9948
CONS                 ; 9949
CONS                 ; 9950
CONS                 ; 9951
CONS                 ; 9952
CONS                 ; 9953
CONS                 ; 9954
CONS                 ; 9955
CONS                 ; 9956
CONS                 ; 9957
CONS                 ; 9958
CONS                 ; 9959
CONS                 ; 9960
LDC 0                ; 9961
LDC 0                ; 9962
LDC 0                ; 9963
LDC 0                ; 9964
LDC 0                ; 9965
LDC 2                ; 9966
LDC 0                ; 9967
LDC 1                ; 9968
LDC 0                ; 9969
LDC 0                ; 9970
LDC 0                ; 9971
LDC 0                ; 9972
LDC 0                ; 9973
LDC 0                ; 9974
LDC 0                ; 9975
LDC 1                ; 9976
LDC 0                ; 9977
LDC 2                ; 9978
LDC 0                ; 9979
LDC 0                ; 9980
LDC 0                ; 9981
LDC 0                ; 9982
LDC 0                ; 9983
LDC 0                ; 9984
CONS                 ; 9985
CONS                 ; 9986
CONS                 ; 9987
CONS                 ; 9988
CONS                 ; 9989
CONS                 ; 9990
CONS                 ; 9991
CONS                 ; 9992
CONS                 ; 9993
CONS                 ; 9994
CONS                 ; 9995
CONS                 ; 9996
CONS                 ; 9997
CONS                 ; 9998
CONS                 ; 9999
CONS                 ; 10000
CONS                 ; 10001
CONS                 ; 10002
CONS                 ; 10003
CONS                 ; 10004
CONS                 ; 10005
CONS                 ; 10006
CONS                 ; 10007
LDC 0                ; 10008
LDC 2                ; 10009
LDC 2                ; 10010
LDC 2                ; 10011
LDC 2                ; 10012
LDC 2                ; 10013
LDC 2                ; 10014
LDC 2                ; 10015
LDC 2                ; 10016
LDC 2                ; 10017
LDC 2                ; 10018
LDC 0                ; 10019
LDC 2                ; 10020
LDC 2                ; 10021
LDC 2                ; 10022
LDC 2                ; 10023
LDC 2                ; 10024
LDC 2                ; 10025
LDC 2                ; 10026
LDC 2                ; 10027
LDC 2                ; 10028
LDC 2                ; 10029
LDC 0                ; 10030
LDC 0                ; 10031
CONS                 ; 10032
CONS                 ; 10033
CONS                 ; 10034
CONS                 ; 10035
CONS                 ; 10036
CONS                 ; 10037
CONS                 ; 10038
CONS                 ; 10039
CONS                 ; 10040
CONS                 ; 10041
CONS                 ; 10042
CONS                 ; 10043
CONS                 ; 10044
CONS                 ; 10045
CONS                 ; 10046
CONS                 ; 10047
CONS                 ; 10048
CONS                 ; 10049
CONS                 ; 10050
CONS                 ; 10051
CONS                 ; 10052
CONS                 ; 10053
CONS                 ; 10054
LDC 0                ; 10055
LDC 2                ; 10056
LDC 0                ; 10057
LDC 0                ; 10058
LDC 0                ; 10059
LDC 2                ; 10060
LDC 0                ; 10061
LDC 0                ; 10062
LDC 0                ; 10063
LDC 0                ; 10064
LDC 2                ; 10065
LDC 0                ; 10066
LDC 2                ; 10067
LDC 0                ; 10068
LDC 0                ; 10069
LDC 0                ; 10070
LDC 0                ; 10071
LDC 2                ; 10072
LDC 0                ; 10073
LDC 0                ; 10074
LDC 0                ; 10075
LDC 2                ; 10076
LDC 0                ; 10077
LDC 0                ; 10078
CONS                 ; 10079
CONS                 ; 10080
CONS                 ; 10081
CONS                 ; 10082
CONS                 ; 10083
CONS                 ; 10084
CONS                 ; 10085
CONS                 ; 10086
CONS                 ; 10087
CONS                 ; 10088
CONS                 ; 10089
CONS                 ; 10090
CONS                 ; 10091
CONS                 ; 10092
CONS                 ; 10093
CONS                 ; 10094
CONS                 ; 10095
CONS                 ; 10096
CONS                 ; 10097
CONS                 ; 10098
CONS                 ; 10099
CONS                 ; 10100
CONS                 ; 10101
LDC 0                ; 10102
LDC 3                ; 10103
LDC 2                ; 10104
LDC 2                ; 10105
LDC 0                ; 10106
LDC 2                ; 10107
LDC 2                ; 10108
LDC 2                ; 10109
LDC 2                ; 10110
LDC 2                ; 10111
LDC 2                ; 10112
LDC 5                ; 10113
LDC 2                ; 10114
LDC 2                ; 10115
LDC 2                ; 10116
LDC 2                ; 10117
LDC 2                ; 10118
LDC 2                ; 10119
LDC 0                ; 10120
LDC 2                ; 10121
LDC 2                ; 10122
LDC 3                ; 10123
LDC 0                ; 10124
LDC 0                ; 10125
CONS                 ; 10126
CONS                 ; 10127
CONS                 ; 10128
CONS                 ; 10129
CONS                 ; 10130
CONS                 ; 10131
CONS                 ; 10132
CONS                 ; 10133
CONS                 ; 10134
CONS                 ; 10135
CONS                 ; 10136
CONS                 ; 10137
CONS                 ; 10138
CONS                 ; 10139
CONS                 ; 10140
CONS                 ; 10141
CONS                 ; 10142
CONS                 ; 10143
CONS                 ; 10144
CONS                 ; 10145
CONS                 ; 10146
CONS                 ; 10147
CONS                 ; 10148
LDC 0                ; 10149
LDC 0                ; 10150
LDC 0                ; 10151
LDC 2                ; 10152
LDC 0                ; 10153
LDC 2                ; 10154
LDC 0                ; 10155
LDC 2                ; 10156
LDC 0                ; 10157
LDC 0                ; 10158
LDC 0                ; 10159
LDC 0                ; 10160
LDC 0                ; 10161
LDC 0                ; 10162
LDC 0                ; 10163
LDC 2                ; 10164
LDC 0                ; 10165
LDC 2                ; 10166
LDC 0                ; 10167
LDC 2                ; 10168
LDC 0                ; 10169
LDC 0                ; 10170
LDC 0                ; 10171
LDC 0                ; 10172
CONS                 ; 10173
CONS                 ; 10174
CONS                 ; 10175
CONS                 ; 10176
CONS                 ; 10177
CONS                 ; 10178
CONS                 ; 10179
CONS                 ; 10180
CONS                 ; 10181
CONS                 ; 10182
CONS                 ; 10183
CONS                 ; 10184
CONS                 ; 10185
CONS                 ; 10186
CONS                 ; 10187
CONS                 ; 10188
CONS                 ; 10189
CONS                 ; 10190
CONS                 ; 10191
CONS                 ; 10192
CONS                 ; 10193
CONS                 ; 10194
CONS                 ; 10195
LDC 0                ; 10196
LDC 2                ; 10197
LDC 2                ; 10198
LDC 2                ; 10199
LDC 2                ; 10200
LDC 2                ; 10201
LDC 0                ; 10202
LDC 2                ; 10203
LDC 2                ; 10204
LDC 2                ; 10205
LDC 2                ; 10206
LDC 0                ; 10207
LDC 2                ; 10208
LDC 2                ; 10209
LDC 2                ; 10210
LDC 2                ; 10211
LDC 0                ; 10212
LDC 2                ; 10213
LDC 2                ; 10214
LDC 2                ; 10215
LDC 2                ; 10216
LDC 2                ; 10217
LDC 0                ; 10218
LDC 0                ; 10219
CONS                 ; 10220
CONS                 ; 10221
CONS                 ; 10222
CONS                 ; 10223
CONS                 ; 10224
CONS                 ; 10225
CONS                 ; 10226
CONS                 ; 10227
CONS                 ; 10228
CONS                 ; 10229
CONS                 ; 10230
CONS                 ; 10231
CONS                 ; 10232
CONS                 ; 10233
CONS                 ; 10234
CONS                 ; 10235
CONS                 ; 10236
CONS                 ; 10237
CONS                 ; 10238
CONS                 ; 10239
CONS                 ; 10240
CONS                 ; 10241
CONS                 ; 10242
LDC 0                ; 10243
LDC 2                ; 10244
LDC 0                ; 10245
LDC 0                ; 10246
LDC 0                ; 10247
LDC 0                ; 10248
LDC 0                ; 10249
LDC 0                ; 10250
LDC 0                ; 10251
LDC 0                ; 10252
LDC 2                ; 10253
LDC 0                ; 10254
LDC 2                ; 10255
LDC 0                ; 10256
LDC 0                ; 10257
LDC 0                ; 10258
LDC 0                ; 10259
LDC 0                ; 10260
LDC 0                ; 10261
LDC 0                ; 10262
LDC 0                ; 10263
LDC 2                ; 10264
LDC 0                ; 10265
LDC 0                ; 10266
CONS                 ; 10267
CONS                 ; 10268
CONS                 ; 10269
CONS                 ; 10270
CONS                 ; 10271
CONS                 ; 10272
CONS                 ; 10273
CONS                 ; 10274
CONS                 ; 10275
CONS                 ; 10276
CONS                 ; 10277
CONS                 ; 10278
CONS                 ; 10279
CONS                 ; 10280
CONS                 ; 10281
CONS                 ; 10282
CONS                 ; 10283
CONS                 ; 10284
CONS                 ; 10285
CONS                 ; 10286
CONS                 ; 10287
CONS                 ; 10288
CONS                 ; 10289
LDC 0                ; 10290
LDC 2                ; 10291
LDC 2                ; 10292
LDC 2                ; 10293
LDC 2                ; 10294
LDC 2                ; 10295
LDC 2                ; 10296
LDC 2                ; 10297
LDC 2                ; 10298
LDC 2                ; 10299
LDC 2                ; 10300
LDC 2                ; 10301
LDC 2                ; 10302
LDC 2                ; 10303
LDC 2                ; 10304
LDC 2                ; 10305
LDC 2                ; 10306
LDC 2                ; 10307
LDC 2                ; 10308
LDC 2                ; 10309
LDC 2                ; 10310
LDC 2                ; 10311
LDC 0                ; 10312
LDC 0                ; 10313
CONS                 ; 10314
CONS                 ; 10315
CONS                 ; 10316
CONS                 ; 10317
CONS                 ; 10318
CONS                 ; 10319
CONS                 ; 10320
CONS                 ; 10321
CONS                 ; 10322
CONS                 ; 10323
CONS                 ; 10324
CONS                 ; 10325
CONS                 ; 10326
CONS                 ; 10327
CONS                 ; 10328
CONS                 ; 10329
CONS                 ; 10330
CONS                 ; 10331
CONS                 ; 10332
CONS                 ; 10333
CONS                 ; 10334
CONS                 ; 10335
CONS                 ; 10336
LDC 0                ; 10337
LDC 0                ; 10338
LDC 0                ; 10339
LDC 0                ; 10340
LDC 0                ; 10341
LDC 0                ; 10342
LDC 0                ; 10343
LDC 0                ; 10344
LDC 0                ; 10345
LDC 0                ; 10346
LDC 0                ; 10347
LDC 0                ; 10348
LDC 0                ; 10349
LDC 0                ; 10350
LDC 0                ; 10351
LDC 0                ; 10352
LDC 0                ; 10353
LDC 0                ; 10354
LDC 0                ; 10355
LDC 0                ; 10356
LDC 0                ; 10357
LDC 0                ; 10358
LDC 0                ; 10359
LDC 0                ; 10360
CONS                 ; 10361
CONS                 ; 10362
CONS                 ; 10363
CONS                 ; 10364
CONS                 ; 10365
CONS                 ; 10366
CONS                 ; 10367
CONS                 ; 10368
CONS                 ; 10369
CONS                 ; 10370
CONS                 ; 10371
CONS                 ; 10372
CONS                 ; 10373
CONS                 ; 10374
CONS                 ; 10375
CONS                 ; 10376
CONS                 ; 10377
CONS                 ; 10378
CONS                 ; 10379
CONS                 ; 10380
CONS                 ; 10381
CONS                 ; 10382
CONS                 ; 10383
LDC 0                ; 10384
CONS                 ; 10385
CONS                 ; 10386
CONS                 ; 10387
CONS                 ; 10388
CONS                 ; 10389
CONS                 ; 10390
CONS                 ; 10391
CONS                 ; 10392
CONS                 ; 10393
CONS                 ; 10394
CONS                 ; 10395
CONS                 ; 10396
CONS                 ; 10397
CONS                 ; 10398
CONS                 ; 10399
CONS                 ; 10400
CONS                 ; 10401
CONS                 ; 10402
CONS                 ; 10403
CONS                 ; 10404
CONS                 ; 10405
CONS                 ; 10406
LDC 0                ; 10407
LDC 11               ; 10408
LDC 16               ; 10409
CONS                 ; 10410
LDC 2                ; 10411
LDC 3                ; 10412
LDC 0                ; 10413
CONS                 ; 10414
CONS                 ; 10415
CONS                 ; 10416
CONS                 ; 10417
LDC 0                ; 10418
LDC 11               ; 10419
LDC 8                ; 10420
CONS                 ; 10421
LDC 2                ; 10422
CONS                 ; 10423
CONS                 ; 10424
LDC 0                ; 10425
LDC 10               ; 10426
LDC 10               ; 10427
CONS                 ; 10428
LDC 2                ; 10429
CONS                 ; 10430
CONS                 ; 10431
LDC 0                ; 10432
LDC 11               ; 10433
LDC 10               ; 10434
CONS                 ; 10435
LDC 2                ; 10436
CONS                 ; 10437
CONS                 ; 10438
LDC 0                ; 10439
LDC 12               ; 10440
LDC 10               ; 10441
CONS                 ; 10442
LDC 2                ; 10443
CONS                 ; 10444
CONS                 ; 10445
LDC 0                ; 10446
CONS                 ; 10447
CONS                 ; 10448
CONS                 ; 10449
CONS                 ; 10450
LDC 0                ; 10451
CONS                 ; 10452
CONS                 ; 10453
CONS                 ; 10454
RTN                  ; 10455
LDF    4485         ;  <== lambda_1000  [x] (as expr), @src/app/Sample1.java(682,101), ALSO: @array_256 ; 10456
AP     0             ; 10457
RTN                  ; 10458
LD     0 0          ;  <== lambda_1001  [a, b] (as expr), @src/app/Sample1.java(683,135) ; 10459
LD     0 1          ; var b ; 10460
CONS                 ; 10461
RTN                  ; 10462
LD     0 0          ;  <== lambda_1002  [Tuple<ListCons<Integer>,Function2<Integer,Integer,Function1<Integer,Integer>>> t] (as expr), @src/app/Sample1.java(685,24) ; 10463
CAR                 ; generateTupleAccess total=2 pos=0 ; 10464
LDC    0            ; just constant from code ; 10465
LDF    11394        ;  @lambda_1062 ; 10466
LDF    73           ;  @mapi ; 10467
AP     3             ; 10468
RTN                  ; 10469
LD     0 0          ;  <== lambda_1003  [row, rowy] (as expr), @src/app/Sample1.java(687,71) ; 10470
LD     0 1          ; var rowy ; 10471
LDF    4138         ;  @collectWalkableXY ; 10472
AP     2             ; 10473
LDC 0               ; local var space ; 10474
LDF    4130         ;  @my_cat_maybes ; 10475
AP     2             ; 10476
RTN                  ; 10477
LD     1 0          ;  <== lambda_1004  [Point w] (as expr), @src/app/Sample1.java(689,74) ; 10478
LD     0 0          ; var w ; 10479
CAR                 ; generateTupleAccess total=2 pos=0 ; 10480
LD     0 0          ; var w ; 10481
CDR                 ; generateTupleAccess total=2 pos=1 ; 10482
LDC 0               ; local var space ; 10483
LDC 0               ; local var space ; 10484
LDC 0               ; local var space ; 10485
LDC 0               ; local var space ; 10486
LDC 0               ; local var space ; 10487
LDF    3541         ;  @isJunction ; 10488
AP     8             ; 10489
RTN                  ; 10490
LD     0 0          ;  <== lambda_1005  [Point pt] (as expr), @src/app/Sample1.java(635,37) ; 10491
LDF    3792         ;  @getPointKey ; 10492
AP     1             ; 10493
LD     0 0          ; var pt ; 10494
CONS                 ; 10495
RTN                  ; 10496
LD     0 0          ;  <== lambda_1006  [SortedMap<T> acc, Tuple<Integer,T> elem] (as expr), @src/app/SortedMap.java(138,62) ; 10497
LD     0 1          ; var elem ; 10498
CAR                 ; generateTupleAccess total=2 pos=0 ; 10499
LD     0 1          ; var elem ; 10500
CDR                 ; generateTupleAccess total=2 pos=1 ; 10501
LDF    1304         ;  @sorted_map_assoc ; 10502
AP     3             ; 10503
RTN                  ; 10504
LD     1 0          ;  <== lambda_1007  [j] (as expr), @src/app/Sample1.java(693,79) ; 10505
LD     0 0          ; var j ; 10506
LD     1 8          ; var junctions ; 10507
LD     1 6          ; var junctionsList ; 10508
LD     1 1          ; var accessors ; 10509
LDC 0               ; local var space ; 10510
LDF    3665         ;  @findNeighbourJunctions ; 10511
AP     6             ; 10512
RTN                  ; 10513
LD     0 1          ;  <== lambda_1008  [ParsedEdge pe, Integer ix] (as expr), @src/app/Sample1.java(694,80) ; 10514
LD     0 0          ; var pe ; 10515
CDR                 ; generateTupleAccess total=10 pos=1 ; 10516
CAR                  ; 10517
LD     0 0          ; var pe ; 10518
CDR                 ; generateTupleAccess total=10 pos=2 ; 10519
CDR                  ; 10520
CAR                  ; 10521
LD     0 0          ; var pe ; 10522
CDR                 ; generateTupleAccess total=10 pos=3 ; 10523
CDR                  ; 10524
CDR                  ; 10525
CAR                  ; 10526
LD     0 0          ; var pe ; 10527
CDR                 ; generateTupleAccess total=10 pos=4 ; 10528
CDR                  ; 10529
CDR                  ; 10530
CDR                  ; 10531
CAR                  ; 10532
LD     0 0          ; var pe ; 10533
CDR                 ; generateTupleAccess total=10 pos=5 ; 10534
CDR                  ; 10535
CDR                  ; 10536
CDR                  ; 10537
CDR                  ; 10538
CAR                  ; 10539
LD     0 0          ; var pe ; 10540
CDR                 ; generateTupleAccess total=10 pos=6 ; 10541
CDR                  ; 10542
CDR                  ; 10543
CDR                  ; 10544
CDR                  ; 10545
CDR                  ; 10546
CAR                  ; 10547
LD     0 0          ; var pe ; 10548
CDR                 ; generateTupleAccess total=10 pos=7 ; 10549
CDR                  ; 10550
CDR                  ; 10551
CDR                  ; 10552
CDR                  ; 10553
CDR                  ; 10554
CDR                  ; 10555
CAR                  ; 10556
LD     0 0          ; var pe ; 10557
CDR                 ; generateTupleAccess total=10 pos=8 ; 10558
CDR                  ; 10559
CDR                  ; 10560
CDR                  ; 10561
CDR                  ; 10562
CDR                  ; 10563
CDR                  ; 10564
CDR                  ; 10565
CAR                  ; 10566
LD     0 0          ; var pe ; 10567
CDR                 ; generateTupleAccess total=10 pos=9 ; 10568
CDR                  ; 10569
CDR                  ; 10570
CDR                  ; 10571
CDR                  ; 10572
CDR                  ; 10573
CDR                  ; 10574
CDR                  ; 10575
CDR                  ; 10576
CONS                 ; 10577
CONS                 ; 10578
CONS                 ; 10579
CONS                 ; 10580
CONS                 ; 10581
CONS                 ; 10582
CONS                 ; 10583
CONS                 ; 10584
CONS                 ; 10585
RTN                  ; 10586
LD     0 0          ;  <== lambda_1009  [final Integer op, final Point p] (as expr), @src/app/VMExtras.java(47,52) ; 10587
LD     0 1          ; var p ; 10588
CAR                 ; generateTupleAccess total=2 pos=0 ; 10589
LDC    0            ; NULL literal ; 10590
LDC    100          ; Named Const = VMExtras.GET_READER ; 10591
LD     0 1          ; var p ; 10592
CDR                 ; generateTupleAccess total=2 pos=1 ; 10593
LD     1 1          ; var wrapper ; 10594
AP     2             ; 10595
AP     1             ; 10596
AP     2             ; 10597
RTN                  ; 10598
LD     0 0          ;  <== lambda_1010  [ParsedEdge e] (as expr), @src/app/Sample1.java(697,62) ; 10599
CDR                 ; generateTupleAccess total=10 pos=1 ; 10600
CAR                  ; 10601
LDF    11402        ;  @lambda_1063 ; 10602
LDF    56           ;  @map ; 10603
AP     2             ; 10604
RTN                  ; 10605
LDC    0            ;  <== lambda_1011  [Key k] (as expr), @src/app/VMExtras.java(26,26) ; 10606
LDC    100          ; Named Const = VMExtras.GET_READER ; 10607
LD     0 0          ; var k ; 10608
LD     1 0          ; var readWriteAccessor ; 10609
AP     2             ; 10610
AP     1             ; 10611
RTN                  ; 10612
LD     0 0          ;  <== lambda_1012  [pe] (as expr), @src/app/Sample1.java(701,62) ; 10613
LD     1 12         ; var readOnlyEdgesForPoint ; 10614
LDC 0               ; local var space ; 10615
LDC 0               ; local var space ; 10616
LDC 0               ; local var space ; 10617
LDC 0               ; local var space ; 10618
LDC 0               ; local var space ; 10619
LDC 0               ; local var space ; 10620
LDC 0               ; local var space ; 10621
LDF    4051         ;  @updateOtherParsedEdgeFields ; 10622
AP     9             ; 10623
RTN                  ; 10624
LD     0 0          ;  <== lambda_1013  [GhostState g, ListCons s, Integer ind] (as expr), @src/app/Sample1.java(525,70) ; 10625
CDR                 ; generateTupleAccess total=3 pos=1 ; 10626
CAR                  ; 10627
LD     0 1          ; var s ; 10628
LD     0 2          ; var ind ; 10629
CONS                 ; 10630
CONS                 ; 10631
RTN                  ; 10632
LD     0 0          ;  <== lambda_1014  [nextaistate, worldState] (as expr), @src/app/Sample1.java(64,70) ; 10633
LD     0 1          ; var worldState ; 10634
LDC 0               ; local var space ; 10635
LDC 0               ; local var space ; 10636
LDC 0               ; local var space ; 10637
LDC 0               ; local var space ; 10638
LDC 0               ; local var space ; 10639
LDC 0               ; local var space ; 10640
LDC 0               ; local var space ; 10641
LDC 0               ; local var space ; 10642
LDC 0               ; local var space ; 10643
LDC 0               ; local var space ; 10644
LDC 0               ; local var space ; 10645
LDC 0               ; local var space ; 10646
LDC 0               ; local var space ; 10647
LDF    2601         ;  @performMove ; 10648
AP     15            ; 10649
RTN                  ; 10650
LD     0 0          ;  <== lambda_1015  [x] (as expr), @src/app/VM.java(154,20) ; 10651
LD     1 1          ; var g ; 10652
AP     1             ; 10653
LD     1 0          ; var f ; 10654
AP     1             ; 10655
RTN                  ; 10656
LD     0 1          ;  <== lambda_1016  [b, a] (as expr), @src/app/VM.java(180,25) ; 10657
LD     0 0          ; var b ; 10658
LD     1 0          ; var f ; 10659
AP     2             ; 10660
RTN                  ; 10661
LD     0 0          ;  <== lambda_1017  [d] (as expr), @src/app/VM.java(253,53) ; 10662
LDF    213          ;  @maybeToList ; 10663
AP     1             ; 10664
RTN                  ; 10665
LD     0 0          ;  <== lambda_1018  [Integer a] (as expr), @src/app/LambdaGhostEmulator.java(84,40) ; 10666
LD     0 0          ; var a ; 10667
LDC    2            ; just constant from code ; 10668
DIV                  ; 10669
LDC    2            ; just constant from code ; 10670
MUL                  ; 10671
CEQ                  ; 10672
SEL    10679 10681  ; IF? 70 ; 10673
LD     0 0          ; var a ; 10674
LDC    2            ; just constant from code ; 10675
DIV                  ; 10676
CONS                 ; 10677
RTN                  ; 10678
LDC    0            ; THEN: 70 ; 10679
JOIN                 ; 10680
LDC    1            ; ELSE: 70 ; 10681
JOIN                 ; 10682
LD     0 1          ;  <== lambda_1019  [Integer elem, Integer acc] (as expr), @src/app/LambdaGhostEmulator.java(91,52) ; 10683
LDC    2            ; just constant from code ; 10684
MUL                  ; 10685
LD     0 0          ; var elem ; 10686
ADD                  ; 10687
RTN                  ; 10688
LD     0 0          ;  <== lambda_1020  [Tuple<Integer,SortedMap<Cons>> init, Cons step] (as expr), @src/app/LambdaGhostEmulator.java(157,77) ; 10689
CAR                 ; generateTupleAccess total=2 pos=0 ; 10690
LDC    1            ; just constant from code ; 10691
ADD                  ; 10692
LD     0 0          ; var init ; 10693
CDR                 ; generateTupleAccess total=2 pos=1 ; 10694
LD     0 0          ; var init ; 10695
CAR                 ; generateTupleAccess total=2 pos=0 ; 10696
LD     0 1          ; var step ; 10697
LDF    1304         ;  @sorted_map_assoc ; 10698
AP     3             ; 10699
CONS                 ; 10700
RTN                  ; 10701
LD     0 0          ;  <== lambda_1021  [Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(80,152) ; 10702
CDR                 ; generateTupleAccess total=2 pos=1 ; 10703
CAR                 ; generateTupleAccess total=2 pos=0 ; 10704
LD     1 1          ; var start ; 10705
CAR                 ; generateTupleAccess total=2 pos=0 ; 10706
CEQ                  ; 10707
LDC    1            ; for negation ; 10708
SUB                  ; 10709
LD     0 0          ; var t ; 10710
CDR                 ; generateTupleAccess total=2 pos=1 ; 10711
CDR                 ; generateTupleAccess total=2 pos=1 ; 10712
LD     1 1          ; var start ; 10713
CDR                 ; generateTupleAccess total=2 pos=1 ; 10714
CEQ                  ; 10715
LDC    1            ; for negation ; 10716
SUB                  ; 10717
ADD                  ; 10718
SEL    10721 10723  ; IF? 71 ; 10719
RTN                  ; 10720
LDC    1            ; THEN: 71 ; 10721
JOIN                 ; 10722
LDC    0            ; ELSE: 71 ; 10723
JOIN                 ; 10724
LDC    0            ;  <== lambda_1022  [Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(81,136) ; 10725
LD     0 0          ; var t ; 10726
CAR                 ; generateTupleAccess total=2 pos=0 ; 10727
AP     1             ; 10728
LDC    2            ; Named Const = CT.PILL ; 10729
CEQ                  ; 10730
SEL    10733 10735  ; IF? 72 ; 10731
RTN                  ; 10732
LDC    1            ; THEN: 72 ; 10733
JOIN                 ; 10734
LDC    0            ; ELSE: 72 ; 10735
JOIN                 ; 10736
LDC    0            ;  <== lambda_1023  [Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(88,133) ; 10737
LD     0 0          ; var t ; 10738
CAR                 ; generateTupleAccess total=2 pos=0 ; 10739
AP     1             ; 10740
LDC    2            ; Named Const = CT.PILL ; 10741
CEQ                  ; 10742
SEL    10745 10747  ; IF? 73 ; 10743
RTN                  ; 10744
LDC    1            ; THEN: 73 ; 10745
JOIN                 ; 10746
LDC    0            ; ELSE: 73 ; 10747
JOIN                 ; 10748
LD     0 0          ;  <== lambda_1024  [Integer acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(95,104) ; 10749
LDC    0            ; just constant from code ; 10750
LD     0 1          ; var t ; 10751
CAR                 ; generateTupleAccess total=2 pos=0 ; 10752
AP     1             ; 10753
LDC    2            ; Named Const = CT.PILL ; 10754
CEQ                  ; 10755
SEL    10759 10761  ; IF? 74 ; 10756
ADD                  ; 10757
RTN                  ; 10758
LDC    1            ; THEN: 74 ; 10759
JOIN                 ; 10760
LDC    0            ; ELSE: 74 ; 10761
JOIN                 ; 10762
LD     0 0          ;  <== lambda_1025  [Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(101,152) ; 10763
CDR                 ; generateTupleAccess total=2 pos=1 ; 10764
CAR                 ; generateTupleAccess total=2 pos=0 ; 10765
LD     1 1          ; var start ; 10766
CAR                 ; generateTupleAccess total=2 pos=0 ; 10767
CEQ                  ; 10768
LDC    1            ; for negation ; 10769
SUB                  ; 10770
LD     0 0          ; var t ; 10771
CDR                 ; generateTupleAccess total=2 pos=1 ; 10772
CDR                 ; generateTupleAccess total=2 pos=1 ; 10773
LD     1 1          ; var start ; 10774
CDR                 ; generateTupleAccess total=2 pos=1 ; 10775
CEQ                  ; 10776
LDC    1            ; for negation ; 10777
SUB                  ; 10778
ADD                  ; 10779
SEL    10782 10784  ; IF? 75 ; 10780
RTN                  ; 10781
LDC    1            ; THEN: 75 ; 10782
JOIN                 ; 10783
LDC    0            ; ELSE: 75 ; 10784
JOIN                 ; 10785
LD     0 0          ;  <== lambda_1026  [Tuple<Integer,Integer> acc, Tuple<Function1<Integer,Integer>,Point> t] (as expr), @src/app/Sample1.java(105,24) ; 10786
CAR                 ; generateTupleAccess total=2 pos=0 ; 10787
LD     0 0          ; var acc ; 10788
CDR                 ; generateTupleAccess total=2 pos=1 ; 10789
LDC    0            ; just constant from code ; 10790
LD     0 1          ; var t ; 10791
CAR                 ; generateTupleAccess total=2 pos=0 ; 10792
AP     1             ; 10793
LDC    2            ; Named Const = CT.PILL ; 10794
CEQ                  ; 10795
SEL    10810 10812  ; IF? 76 ; 10796
MUL                  ; 10797
ADD                  ; 10798
LD     0 0          ; var acc ; 10799
CDR                 ; generateTupleAccess total=2 pos=1 ; 10800
LDC    50           ; just constant from code ; 10801
MUL                  ; 10802
LDC    100          ; just constant from code ; 10803
DIV                  ; 10804
LDC    1            ; just constant from code ; 10805
LDF    390          ;  @max ; 10806
AP     2             ; 10807
CONS                 ; 10808
RTN                  ; 10809
LDC    1            ; THEN: 76 ; 10810
JOIN                 ; 10811
LDC    0            ; ELSE: 76 ; 10812
JOIN                 ; 10813
LDC    0            ;  <== lambda_1027  [ParsedEdge e] (as expr), @src/app/Sample1.java(141,90) ; 10814
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 10815
LDC    0            ; just constant from code ; 10816
LD     0 0          ; var e ; 10817
CDR                 ; generateTupleAccess total=10 pos=5 ; 10818
CDR                  ; 10819
CDR                  ; 10820
CDR                  ; 10821
CDR                  ; 10822
CAR                  ; 10823
AP     2             ; 10824
AP     1             ; 10825
RTN                  ; 10826
LD     1 0          ;  <== lambda_1028  [g] (as expr), @src/app/Sample1.java(142,43) ; 10827
LD     0 0          ; var g ; 10828
LDC 0               ; local var space ; 10829
LDC 0               ; local var space ; 10830
LDC 0               ; local var space ; 10831
LDC 0               ; local var space ; 10832
LDC 0               ; local var space ; 10833
LDC 0               ; local var space ; 10834
LDF    2900         ;  @placeGhostDanger ; 10835
AP     8             ; 10836
RTN                  ; 10837
LD     0 0          ;  <== lambda_1029  [Queue<ListCons<ParsedEdge>> qq, ParsedEdge e] (as expr), @src/app/Sample1.java(340,85) ; 10838
LD     0 1          ; var e ; 10839
LDC    0            ; NULL literal ; 10840
CONS                 ; 10841
LDF    403          ;  @queue_enqueue ; 10842
AP     2             ; 10843
RTN                  ; 10844
LDC    0            ;  <== lambda_1030  [ParsedEdge pe] (as expr), @src/app/Sample1.java(344,92) ; 10845
LD     0 0          ; var pe ; 10846
CDR                 ; generateTupleAccess total=10 pos=4 ; 10847
CDR                  ; 10848
CDR                  ; 10849
CDR                  ; 10850
CAR                  ; 10851
AP     1             ; 10852
RTN                  ; 10853
LDC    1            ;  <== lambda_1031  [ParsedEdge pe] (as expr), @src/app/Sample1.java(345,51) ; 10854
LD     0 0          ; var pe ; 10855
CDR                 ; generateTupleAccess total=10 pos=4 ; 10856
CDR                  ; 10857
CDR                  ; 10858
CDR                  ; 10859
CAR                  ; 10860
AP     1             ; 10861
RTN                  ; 10862
LD     0 0          ;  <== lambda_1032  [d] (as expr), @src/app/Sample1.java(350,74) ; 10863
LDF    286          ;  @reverse ; 10864
AP     1             ; 10865
RTN                  ; 10866
LD     1 2          ;  <== lambda_1033  [r] (as expr), @src/app/Sample1.java(354,127) ; 10867
LD     0 0          ; var r ; 10868
LDC 0               ; local var space ; 10869
LDC 0               ; local var space ; 10870
LDF    3432         ;  @calculateRouteScore ; 10871
AP     4             ; 10872
RTN                  ; 10873
LD     0 0          ;  <== lambda_1034  [Triple<ListCons<ParsedEdge>,Integer,Triple<Integer,Integer,Integer>> t] (as expr), @src/app/Sample1.java(357,195) ; 10874
CDR                 ; generateTupleAccess total=3 pos=1 ; 10875
CAR                  ; 10876
RTN                  ; 10877
LD     0 0          ;  <== lambda_1035  [Tuple<Function1<Integer,Integer>,Point> ea] (as expr), @src/app/Sample1.java(144,155) ; 10878
CDR                 ; generateTupleAccess total=2 pos=1 ; 10879
CAR                 ; generateTupleAccess total=2 pos=0 ; 10880
LD     1 2          ; var location ; 10881
CAR                 ; generateTupleAccess total=2 pos=0 ; 10882
CEQ                  ; 10883
LDC    1            ; for negation ; 10884
SUB                  ; 10885
LD     0 0          ; var ea ; 10886
CDR                 ; generateTupleAccess total=2 pos=1 ; 10887
CDR                 ; generateTupleAccess total=2 pos=1 ; 10888
LD     1 2          ; var location ; 10889
CDR                 ; generateTupleAccess total=2 pos=1 ; 10890
CEQ                  ; 10891
LDC    1            ; for negation ; 10892
SUB                  ; 10893
ADD                  ; 10894
SEL    10897 10899  ; IF? 77 ; 10895
RTN                  ; 10896
LDC    1            ; THEN: 77 ; 10897
JOIN                 ; 10898
LDC    0            ; ELSE: 77 ; 10899
JOIN                 ; 10900
LDC    1            ;  <== lambda_1036  [ParsedEdge fe] (as expr), @src/app/Sample1.java(194,67) ; 10901
LD     0 0          ; var fe ; 10902
CDR                 ; generateTupleAccess total=10 pos=4 ; 10903
CDR                  ; 10904
CDR                  ; 10905
CDR                  ; 10906
CAR                  ; 10907
AP     1             ; 10908
LDC    0            ; just constant from code ; 10909
CEQ                  ; 10910
SEL    10913 10915  ; IF? 78 ; 10911
RTN                  ; 10912
LDC    1            ; THEN: 78 ; 10913
JOIN                 ; 10914
LDC    0            ; ELSE: 78 ; 10915
JOIN                 ; 10916
LD     0 0          ;  <== lambda_1037  [ParsedEdge fe] (as expr), @src/app/Sample1.java(196,70) ; 10917
LD     1 3          ; var a ; 10918
CDR                 ; generateTupleAccess total=3 pos=1 ; 10919
CAR                  ; 10920
LD     1 5          ; var countNewEdges ; 10921
DIV                  ; 10922
LDC 0               ; local var space ; 10923
LDC 0               ; local var space ; 10924
LDF    3027         ;  @addEdgeDanger ; 10925
AP     4             ; 10926
RTN                  ; 10927
LD     0 0          ;  <== lambda_1038  [Queue<EdgeDangerWaveItem> qq, ParsedEdge pe] (as expr), @src/app/Sample1.java(197,127) ; 10928
LD     0 1          ; var pe ; 10929
LD     1 3          ; var a ; 10930
CDR                 ; generateTupleAccess total=3 pos=1 ; 10931
CAR                  ; 10932
LD     1 5          ; var countNewEdges ; 10933
DIV                  ; 10934
LD     1 3          ; var a ; 10935
CDR                 ; generateTupleAccess total=3 pos=2 ; 10936
CDR                  ; 10937
LD     0 1          ; var pe ; 10938
CDR                 ; generateTupleAccess total=10 pos=1 ; 10939
CAR                  ; 10940
LDF    528          ;  @length ; 10941
AP     1             ; 10942
ADD                  ; 10943
CONS                 ; 10944
CONS                 ; 10945
LDF    403          ;  @queue_enqueue ; 10946
AP     2             ; 10947
RTN                  ; 10948
LDC    0            ;  <== lambda_1039  [ParsedEdge pe] (as expr), @src/app/Sample1.java(203,92) ; 10949
LD     0 0          ; var pe ; 10950
CDR                 ; generateTupleAccess total=10 pos=4 ; 10951
CDR                  ; 10952
CDR                  ; 10953
CDR                  ; 10954
CAR                  ; 10955
AP     1             ; 10956
RTN                  ; 10957
LD     0 0          ;  <== lambda_1040  [e] (as expr), @src/app/Sample1.java(222,53) ; 10958
LD     1 1          ; var gs ; 10959
CDR                 ; generateTupleAccess total=3 pos=1 ; 10960
CAR                  ; 10961
LDC 0               ; local var space ; 10962
LDF    3057         ;  @remainingPath ; 10963
AP     3             ; 10964
CAR                  ; 10965
LD     1 6          ; var nextPoint ; 10966
LDF    3237         ;  @pointEquals3 ; 10967
AP     2             ; 10968
LDC    1            ; just constant from code ; 10969
CEQ                  ; 10970
LD     0 0          ; var e ; 10971
LD     1 1          ; var gs ; 10972
CDR                 ; generateTupleAccess total=3 pos=1 ; 10973
CAR                  ; 10974
LDC 0               ; local var space ; 10975
LDF    3057         ;  @remainingPath ; 10976
AP     3             ; 10977
CAR                  ; 10978
LD     1 1          ; var gs ; 10979
CDR                 ; generateTupleAccess total=3 pos=1 ; 10980
CAR                  ; 10981
LDF    3237         ;  @pointEquals3 ; 10982
AP     2             ; 10983
LDC    1            ; just constant from code ; 10984
CEQ                  ; 10985
ADD                  ; 10986
SEL    10989 10991  ; IF? 79 ; 10987
RTN                  ; 10988
LDC    1            ; THEN: 79 ; 10989
JOIN                 ; 10990
LDC    0            ; ELSE: 79 ; 10991
JOIN                 ; 10992
LDC    0            ;  <== lambda_1041  [ParsedEdge e] (as expr), @src/app/Sample1.java(227,68) ; 10993
LD     0 0          ; var e ; 10994
CDR                 ; generateTupleAccess total=10 pos=2 ; 10995
CDR                  ; 10996
CAR                  ; 10997
AP     1             ; 10998
LD     0 0          ; var e ; 10999
CDR                 ; generateTupleAccess total=10 pos=1 ; 11000
CAR                  ; 11001
LDF    528          ;  @length ; 11002
AP     1             ; 11003
LD     0 0          ; var e ; 11004
LD     1 1          ; var gs ; 11005
CDR                 ; generateTupleAccess total=3 pos=1 ; 11006
CAR                  ; 11007
LDC 0               ; local var space ; 11008
LDF    3057         ;  @remainingPath ; 11009
AP     3             ; 11010
LDF    528          ;  @length ; 11011
AP     1             ; 11012
LDC 0               ; local var space ; 11013
LDF    3011         ;  @initialDangerPercent ; 11014
AP     3             ; 11015
LDC 0               ; local var space ; 11016
LDC 0               ; local var space ; 11017
LDF    3027         ;  @addEdgeDanger ; 11018
AP     4             ; 11019
RTN                  ; 11020
LD     1 0          ;  <== lambda_1042  [ParsedEdge e] (as expr), @src/app/Sample1.java(230,50) ; 11021
LDC    0            ; NULL literal ; 11022
LD     0 0          ; var e ; 11023
CDR                 ; generateTupleAccess total=10 pos=2 ; 11024
CDR                  ; 11025
CAR                  ; 11026
AP     1             ; 11027
LDC    100          ; just constant from code ; 11028
LD     0 0          ; var e ; 11029
LD     1 1          ; var gs ; 11030
CDR                 ; generateTupleAccess total=3 pos=1 ; 11031
CAR                  ; 11032
LDC 0               ; local var space ; 11033
LDF    3057         ;  @remainingPath ; 11034
AP     3             ; 11035
LDF    528          ;  @length ; 11036
AP     1             ; 11037
CONS                 ; 11038
CONS                 ; 11039
LDC 0               ; local var space ; 11040
LDC 0               ; local var space ; 11041
LDC 0               ; local var space ; 11042
LDF    2868         ;  @waveGhostDanger ; 11043
AP     5             ; 11044
RTN                  ; 11045
LD     0 0          ;  <== lambda_1043  [Tuple<Function1<Integer,Integer>,Point> ea] (as expr), @src/app/Sample1.java(250,150) ; 11046
CDR                 ; generateTupleAccess total=2 pos=1 ; 11047
LD     1 1          ; var location ; 11048
LDF    3199         ;  @pointEquals ; 11049
AP     2             ; 11050
LDC    0            ; just constant from code ; 11051
CEQ                  ; 11052
SEL    11055 11057  ; IF? 80 ; 11053
RTN                  ; 11054
LDC    1            ; THEN: 80 ; 11055
JOIN                 ; 11056
LDC    0            ; ELSE: 80 ; 11057
JOIN                 ; 11058
LDC    1            ;  <== lambda_1044  [ParsedEdge f] (as expr), @src/app/Sample1.java(278,56) ; 11059
LD     0 0          ; var f ; 11060
CDR                 ; generateTupleAccess total=10 pos=4 ; 11061
CDR                  ; 11062
CDR                  ; 11063
CDR                  ; 11064
CAR                  ; 11065
AP     1             ; 11066
LDC    0            ; just constant from code ; 11067
CEQ                  ; 11068
SEL    11071 11073  ; IF? 81 ; 11069
RTN                  ; 11070
LDC    1            ; THEN: 81 ; 11071
JOIN                 ; 11072
LDC    0            ; ELSE: 81 ; 11073
JOIN                 ; 11074
LD     0 0          ;  <== lambda_1045  [pe] (as expr), @src/app/Sample1.java(279,66) ; 11075
LD     1 1          ; var worldState ; 11076
CAR                 ; generateTupleAccess total=4 pos=0 ; 11077
LDC 0               ; local var space ; 11078
LDC 0               ; local var space ; 11079
LDF    2560         ;  @collectAnyEdgePills ; 11080
AP     4             ; 11081
LDF    528          ;  @length ; 11082
AP     1             ; 11083
LDC    0            ; just constant from code ; 11084
CGT                  ; 11085
SEL    11088 11090  ; IF? 82 ; 11086
RTN                  ; 11087
LDC    1            ; THEN: 82 ; 11088
JOIN                 ; 11089
LDC    0            ; ELSE: 82 ; 11090
JOIN                 ; 11091
LD     0 0          ;  <== lambda_1046  [ParsedEdge next] (as expr), @src/app/Sample1.java(281,87) ; 11092
LD     1 7          ; var lookingEdge ; 11093
CONS                 ; 11094
RTN                  ; 11095
LD     0 0          ;  <== lambda_1047  [Queue<ListCons<ParsedEdge>> qq, ListCons<ParsedEdge> nr] (as expr), @src/app/Sample1.java(282,133) ; 11096
LD     0 1          ; var nr ; 11097
LDF    403          ;  @queue_enqueue ; 11098
AP     2             ; 11099
RTN                  ; 11100
LD     0 0          ;  <== lambda_1048  [acc, pe] (as expr), @src/app/Sample1.java(311,44) ; 11101
LD     0 1          ; var pe ; 11102
LDC 0               ; local var space ; 11103
LDC 0               ; local var space ; 11104
LDF    2571         ;  @countAnyEdgePills ; 11105
AP     3             ; 11106
ADD                  ; 11107
RTN                  ; 11108
LDC    0            ;  <== lambda_1049  [p] (as expr), @src/app/Sample1.java(579,52) ; 11109
LD     0 0          ; var p ; 11110
LD     1 4          ; var accessors ; 11111
LDC 0               ; local var space ; 11112
LDF    3698         ;  @makeParsedEdge ; 11113
AP     4             ; 11114
RTN                  ; 11115
LDC    100          ;  <== lambda_1050  [Point pt] (as expr), @src/app/Sample1.java(613,16) ; 11116
LD     0 0          ; var pt ; 11117
CAR                 ; generateTupleAccess total=2 pos=0 ; 11118
LD     1 1          ; var accessors ; 11119
LD     0 0          ; var pt ; 11120
CDR                 ; generateTupleAccess total=2 pos=1 ; 11121
LDF    419          ;  @list_item ; 11122
AP     2             ; 11123
AP     2             ; 11124
RTN                  ; 11125
LD     1 0          ;  <== lambda_1051  [Tuple<Integer,Point> d] (as expr), @src/app/Sample1.java(652,106) ; 11126
LD     0 0          ; var d ; 11127
CDR                 ; generateTupleAccess total=2 pos=1 ; 11128
LDF    3530         ;  @isWalkable2 ; 11129
AP     2             ; 11130
LDC    1            ; just constant from code ; 11131
LD     1 4          ; var visited ; 11132
LD     0 0          ; var d ; 11133
CAR                 ; generateTupleAccess total=2 pos=0 ; 11134
LDF    1273         ;  @sorted_map_contains ; 11135
AP     2             ; 11136
SUB                  ; 11137
MUL                  ; 11138
RTN                  ; 11139
LD     1 2          ;  <== lambda_1052  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(653,98) ; 11140
LD     0 0          ; var e ; 11141
CAR                 ; generateTupleAccess total=2 pos=0 ; 11142
LDF    1273         ;  @sorted_map_contains ; 11143
AP     2             ; 11144
RTN                  ; 11145
LD     1 3          ;  <== lambda_1053  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(654,99) ; 11146
LDF    11418        ;  @lambda_1064 ; 11147
LDF    541          ;  @any ; 11148
AP     2             ; 11149
RTN                  ; 11150
LDC    1            ;  <== lambda_1054  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(656,96) ; 11151
LD     1 14         ; var arriveds ; 11152
LD     0 0          ; var e ; 11153
CAR                 ; generateTupleAccess total=2 pos=0 ; 11154
LDF    1273         ;  @sorted_map_contains ; 11155
AP     2             ; 11156
SUB                  ; 11157
RTN                  ; 11158
LD     0 0          ;  <== lambda_1055  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(657,92) ; 11159
CDR                 ; generateTupleAccess total=2 pos=1 ; 11160
LD     1 8          ; var thisRoute ; 11161
CONS                 ; 11162
RTN                  ; 11163
LD     0 0          ;  <== lambda_1056  [r, i] (as expr), @src/app/Sample1.java(658,84) ; 11164
LD     0 1          ; var i ; 11165
LDF    403          ;  @queue_enqueue ; 11166
AP     2             ; 11167
RTN                  ; 11168
LD     0 0          ;  <== lambda_1057  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(659,107) ; 11169
CDR                 ; generateTupleAccess total=2 pos=1 ; 11170
LD     1 8          ; var thisRoute ; 11171
CONS                 ; 11172
RTN                  ; 11173
LD     0 0          ;  <== lambda_1058  [ParsedEdge me] (as expr), @src/app/Sample1.java(712,85) ; 11174
CDR                 ; generateTupleAccess total=10 pos=9 ; 11175
CDR                  ; 11176
CDR                  ; 11177
CDR                  ; 11178
CDR                  ; 11179
CDR                  ; 11180
CDR                  ; 11181
CDR                  ; 11182
CDR                  ; 11183
LD     1 0          ; var pe ; 11184
CDR                 ; generateTupleAccess total=10 pos=8 ; 11185
CDR                  ; 11186
CDR                  ; 11187
CDR                  ; 11188
CDR                  ; 11189
CDR                  ; 11190
CDR                  ; 11191
CDR                  ; 11192
CAR                  ; 11193
LDF    3199         ;  @pointEquals ; 11194
AP     2             ; 11195
LD     0 0          ; var me ; 11196
CDR                 ; generateTupleAccess total=10 pos=8 ; 11197
CDR                  ; 11198
CDR                  ; 11199
CDR                  ; 11200
CDR                  ; 11201
CDR                  ; 11202
CDR                  ; 11203
CDR                  ; 11204
CAR                  ; 11205
LD     1 0          ; var pe ; 11206
CDR                 ; generateTupleAccess total=10 pos=9 ; 11207
CDR                  ; 11208
CDR                  ; 11209
CDR                  ; 11210
CDR                  ; 11211
CDR                  ; 11212
CDR                  ; 11213
CDR                  ; 11214
CDR                  ; 11215
LDF    3199         ;  @pointEquals ; 11216
AP     2             ; 11217
MUL                  ; 11218
RTN                  ; 11219
LD     0 0          ;  <== lambda_1059  [ParsedEdge me] (as expr), @src/app/Sample1.java(713,87) ; 11220
CDR                 ; generateTupleAccess total=10 pos=9 ; 11221
CDR                  ; 11222
CDR                  ; 11223
CDR                  ; 11224
CDR                  ; 11225
CDR                  ; 11226
CDR                  ; 11227
CDR                  ; 11228
CDR                  ; 11229
LD     1 0          ; var pe ; 11230
CDR                 ; generateTupleAccess total=10 pos=8 ; 11231
CDR                  ; 11232
CDR                  ; 11233
CDR                  ; 11234
CDR                  ; 11235
CDR                  ; 11236
CDR                  ; 11237
CDR                  ; 11238
CAR                  ; 11239
LDF    3199         ;  @pointEquals ; 11240
AP     2             ; 11241
LDC    1            ; just constant from code ; 11242
CEQ                  ; 11243
LD     0 0          ; var me ; 11244
CDR                 ; generateTupleAccess total=10 pos=9 ; 11245
CDR                  ; 11246
CDR                  ; 11247
CDR                  ; 11248
CDR                  ; 11249
CDR                  ; 11250
CDR                  ; 11251
CDR                  ; 11252
CDR                  ; 11253
LD     1 0          ; var pe ; 11254
CDR                 ; generateTupleAccess total=10 pos=8 ; 11255
CDR                  ; 11256
CDR                  ; 11257
CDR                  ; 11258
CDR                  ; 11259
CDR                  ; 11260
CDR                  ; 11261
CDR                  ; 11262
CAR                  ; 11263
LDF    3199         ;  @pointEquals ; 11264
AP     2             ; 11265
LD     0 0          ; var me ; 11266
CDR                 ; generateTupleAccess total=10 pos=8 ; 11267
CDR                  ; 11268
CDR                  ; 11269
CDR                  ; 11270
CDR                  ; 11271
CDR                  ; 11272
CDR                  ; 11273
CDR                  ; 11274
CAR                  ; 11275
LD     1 0          ; var pe ; 11276
CDR                 ; generateTupleAccess total=10 pos=9 ; 11277
CDR                  ; 11278
CDR                  ; 11279
CDR                  ; 11280
CDR                  ; 11281
CDR                  ; 11282
CDR                  ; 11283
CDR                  ; 11284
CDR                  ; 11285
LDF    3199         ;  @pointEquals ; 11286
AP     2             ; 11287
MUL                  ; 11288
LDC    0            ; just constant from code ; 11289
CEQ                  ; 11290
MUL                  ; 11291
SEL    11294 11296  ; IF? 83 ; 11292
RTN                  ; 11293
LDC    1            ; THEN: 83 ; 11294
JOIN                 ; 11295
LDC    0            ; ELSE: 83 ; 11296
JOIN                 ; 11297
LD     0 0          ;  <== lambda_1060  [ParsedEdge me] (as expr), @src/app/Sample1.java(715,83) ; 11298
CDR                 ; generateTupleAccess total=10 pos=8 ; 11299
CDR                  ; 11300
CDR                  ; 11301
CDR                  ; 11302
CDR                  ; 11303
CDR                  ; 11304
CDR                  ; 11305
CDR                  ; 11306
CAR                  ; 11307
LD     1 0          ; var pe ; 11308
CDR                 ; generateTupleAccess total=10 pos=9 ; 11309
CDR                  ; 11310
CDR                  ; 11311
CDR                  ; 11312
CDR                  ; 11313
CDR                  ; 11314
CDR                  ; 11315
CDR                  ; 11316
CDR                  ; 11317
LDF    3199         ;  @pointEquals ; 11318
AP     2             ; 11319
LDC    1            ; just constant from code ; 11320
CEQ                  ; 11321
LD     0 0          ; var me ; 11322
CDR                 ; generateTupleAccess total=10 pos=9 ; 11323
CDR                  ; 11324
CDR                  ; 11325
CDR                  ; 11326
CDR                  ; 11327
CDR                  ; 11328
CDR                  ; 11329
CDR                  ; 11330
CDR                  ; 11331
LD     1 0          ; var pe ; 11332
CDR                 ; generateTupleAccess total=10 pos=8 ; 11333
CDR                  ; 11334
CDR                  ; 11335
CDR                  ; 11336
CDR                  ; 11337
CDR                  ; 11338
CDR                  ; 11339
CDR                  ; 11340
CAR                  ; 11341
LDF    3199         ;  @pointEquals ; 11342
AP     2             ; 11343
LD     0 0          ; var me ; 11344
CDR                 ; generateTupleAccess total=10 pos=8 ; 11345
CDR                  ; 11346
CDR                  ; 11347
CDR                  ; 11348
CDR                  ; 11349
CDR                  ; 11350
CDR                  ; 11351
CDR                  ; 11352
CAR                  ; 11353
LD     1 0          ; var pe ; 11354
CDR                 ; generateTupleAccess total=10 pos=9 ; 11355
CDR                  ; 11356
CDR                  ; 11357
CDR                  ; 11358
CDR                  ; 11359
CDR                  ; 11360
CDR                  ; 11361
CDR                  ; 11362
CDR                  ; 11363
LDF    3199         ;  @pointEquals ; 11364
AP     2             ; 11365
MUL                  ; 11366
LDC    0            ; just constant from code ; 11367
CEQ                  ; 11368
MUL                  ; 11369
SEL    11372 11374  ; IF? 84 ; 11370
RTN                  ; 11371
LDC    1            ; THEN: 84 ; 11372
JOIN                 ; 11373
LDC    0            ; ELSE: 84 ; 11374
JOIN                 ; 11375
LD     0 0          ;  <== lambda_1061  [col, colx] (as expr), @src/app/Sample1.java(731,43) ; 11376
LDC 0               ; local var space ; 11377
LDF    3516         ;  @isWalkable ; 11378
AP     2             ; 11379
LDC    0            ; just constant from code ; 11380
CGT                  ; 11381
SEL    11384 11391  ; IF? 85 ; 11382
RTN                  ; 11383
LD     0 1          ; THEN: 85 ; 11384
LD     1 1          ; var rowy ; 11385
CONS                 ; 11386
LDC 0               ; local var space ; 11387
LDF    207          ;  @JUST ; 11388
AP     2             ; 11389
JOIN                 ; 11390
LDF    203          ; ELSE: 85, ALSO: @NOTHING ; 11391
AP     0             ; 11392
JOIN                 ; 11393
LD     0 0          ;  <== lambda_1062  [val, ix] (as expr), @src/app/Sample1.java(685,50) ; 11394
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 11395
LD     0 1          ; var ix ; 11396
LD     1 0          ; var t ; 11397
CDR                 ; generateTupleAccess total=2 pos=1 ; 11398
AP     2             ; 11399
AP     1             ; 11400
RTN                  ; 11401
LD     1 0          ;  <== lambda_1063  [Tuple<Function1<Integer,Integer>,Point> ea] (as expr), @src/app/Sample1.java(697,130) ; 11402
LDC    0            ; NULL literal ; 11403
LDC    100          ; Named Const = VMExtras.GET_READER ; 11404
LD     0 0          ; var ea ; 11405
CDR                 ; generateTupleAccess total=2 pos=1 ; 11406
LD     2 10         ; var edgesForPoint ; 11407
AP     2             ; 11408
AP     1             ; 11409
CONS                 ; 11410
LDC    101          ; Named Const = VMExtras.GET_WRITER ; 11411
LD     0 0          ; var ea ; 11412
CDR                 ; generateTupleAccess total=2 pos=1 ; 11413
LD     2 10         ; var edgesForPoint ; 11414
AP     2             ; 11415
AP     1             ; 11416
RTN                  ; 11417
LD     1 0          ;  <== lambda_1064  [d] (as expr), @src/app/Sample1.java(654,125) ; 11418
CDR                 ; generateTupleAccess total=2 pos=1 ; 11419
LD     0 0          ; var d ; 11420
LDF    3199         ;  @pointEquals ; 11421
AP     2             ; 11422
RTN                  ; 11423
LD     0 0          ;  <== lambda_1065  [x, y] (as expr), @src/app/LambdaGhostEmulator.java(106,48) ; 11424
LD     0 1          ; var y ; 11425
MUL                  ; 11426
RTN                  ; 11427
LD     0 0          ;  <== lambda_1066  [x, y] (as expr), @src/app/LambdaGhostEmulator.java(107,57) ; 11428
LD     0 1          ; var y ; 11429
ADD                  ; 11430
LDC    0            ; just constant from code ; 11431
CGT                  ; 11432
SEL    11435 11437  ; IF? 146 ; 11433
RTN                  ; 11434
LDC    1            ; THEN: 146 ; 11435
JOIN                 ; 11436
LDC    0            ; ELSE: 146 ; 11437
JOIN                 ; 11438
LD     0 0          ;  <== lambda_1067  [x, y] (as expr), @src/app/LambdaGhostEmulator.java(108,37) ; 11439
LD     0 1          ; var y ; 11440
LDF    1846         ;  @intCompare ; 11441
AP     2             ; 11442
LDC    1            ; just constant from code ; 11443
CEQ                  ; 11444
SEL    11447 11449  ; IF? 147 ; 11445
RTN                  ; 11446
LDC    0            ; THEN: 147 ; 11447
JOIN                 ; 11448
LDC    1            ; ELSE: 147 ; 11449
JOIN                 ; 11450
LD     1 2          ;  <== lambda_1068  [Tuple<Integer,Point> e] (as expr), @src/app/Sample1.java(668,61) ; 11451
LD     0 0          ; var e ; 11452
CAR                 ; generateTupleAccess total=2 pos=0 ; 11453
LDF    1273         ;  @sorted_map_contains ; 11454
AP     2             ; 11455
RTN                  ; 11456

